/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// TODO: to be remove after webpack finalized
	var exportAllFunctions = function exportAllFunctions(obj) {
	    Object.keys(obj).forEach(function (key) {
	        window[key] = obj[key];
	    });
	};

	window.$ = window.jQuery = __webpack_require__(1);

	__webpack_require__(2);

	// needs refactoring
	exportAllFunctions(__webpack_require__(299));

	// created for handling global onclick
	exportAllFunctions(__webpack_require__(538));
	// used by gtm to update page after a new release
	exportAllFunctions(__webpack_require__(539));

	__webpack_require__(540);
	__webpack_require__(541);
	__webpack_require__(542);
	__webpack_require__(543);
	__webpack_require__(544);

	__webpack_require__(545);
	__webpack_require__(546);
	__webpack_require__(569);

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	 * jQuery JavaScript Library v2.2.4
	 * http://jquery.com/
	 *
	 * Includes Sizzle.js
	 * http://sizzlejs.com/
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license
	 * http://jquery.org/license
	 *
	 * Date: 2016-05-20T17:23Z
	 */

	(function( global, factory ) {

		if ( typeof module === "object" && typeof module.exports === "object" ) {
			// For CommonJS and CommonJS-like environments where a proper `window`
			// is present, execute the factory and get jQuery.
			// For environments that do not have a `window` with a `document`
			// (such as Node.js), expose a factory as module.exports.
			// This accentuates the need for the creation of a real `window`.
			// e.g. var jQuery = require("jquery")(window);
			// See ticket #14549 for more info.
			module.exports = global.document ?
				factory( global, true ) :
				function( w ) {
					if ( !w.document ) {
						throw new Error( "jQuery requires a window with a document" );
					}
					return factory( w );
				};
		} else {
			factory( global );
		}

	// Pass this if window is not defined yet
	}(typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

	// Support: Firefox 18+
	// Can't be in strict mode, several libs including ASP.NET trace
	// the stack via arguments.caller.callee and Firefox dies if
	// you try to trace through "use strict" call chains. (#13335)
	//"use strict";
	var arr = [];

	var document = window.document;

	var slice = arr.slice;

	var concat = arr.concat;

	var push = arr.push;

	var indexOf = arr.indexOf;

	var class2type = {};

	var toString = class2type.toString;

	var hasOwn = class2type.hasOwnProperty;

	var support = {};



	var
		version = "2.2.4",

		// Define a local copy of jQuery
		jQuery = function( selector, context ) {

			// The jQuery object is actually just the init constructor 'enhanced'
			// Need init if jQuery is called (just allow error to be thrown if not included)
			return new jQuery.fn.init( selector, context );
		},

		// Support: Android<4.1
		// Make sure we trim BOM and NBSP
		rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,

		// Matches dashed string for camelizing
		rmsPrefix = /^-ms-/,
		rdashAlpha = /-([\da-z])/gi,

		// Used by jQuery.camelCase as callback to replace()
		fcamelCase = function( all, letter ) {
			return letter.toUpperCase();
		};

	jQuery.fn = jQuery.prototype = {

		// The current version of jQuery being used
		jquery: version,

		constructor: jQuery,

		// Start with an empty selector
		selector: "",

		// The default length of a jQuery object is 0
		length: 0,

		toArray: function() {
			return slice.call( this );
		},

		// Get the Nth element in the matched element set OR
		// Get the whole matched element set as a clean array
		get: function( num ) {
			return num != null ?

				// Return just the one element from the set
				( num < 0 ? this[ num + this.length ] : this[ num ] ) :

				// Return all the elements in a clean array
				slice.call( this );
		},

		// Take an array of elements and push it onto the stack
		// (returning the new matched element set)
		pushStack: function( elems ) {

			// Build a new jQuery matched element set
			var ret = jQuery.merge( this.constructor(), elems );

			// Add the old object onto the stack (as a reference)
			ret.prevObject = this;
			ret.context = this.context;

			// Return the newly-formed element set
			return ret;
		},

		// Execute a callback for every element in the matched set.
		each: function( callback ) {
			return jQuery.each( this, callback );
		},

		map: function( callback ) {
			return this.pushStack( jQuery.map( this, function( elem, i ) {
				return callback.call( elem, i, elem );
			} ) );
		},

		slice: function() {
			return this.pushStack( slice.apply( this, arguments ) );
		},

		first: function() {
			return this.eq( 0 );
		},

		last: function() {
			return this.eq( -1 );
		},

		eq: function( i ) {
			var len = this.length,
				j = +i + ( i < 0 ? len : 0 );
			return this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );
		},

		end: function() {
			return this.prevObject || this.constructor();
		},

		// For internal use only.
		// Behaves like an Array's method, not like a jQuery method.
		push: push,
		sort: arr.sort,
		splice: arr.splice
	};

	jQuery.extend = jQuery.fn.extend = function() {
		var options, name, src, copy, copyIsArray, clone,
			target = arguments[ 0 ] || {},
			i = 1,
			length = arguments.length,
			deep = false;

		// Handle a deep copy situation
		if ( typeof target === "boolean" ) {
			deep = target;

			// Skip the boolean and the target
			target = arguments[ i ] || {};
			i++;
		}

		// Handle case when target is a string or something (possible in deep copy)
		if ( typeof target !== "object" && !jQuery.isFunction( target ) ) {
			target = {};
		}

		// Extend jQuery itself if only one argument is passed
		if ( i === length ) {
			target = this;
			i--;
		}

		for ( ; i < length; i++ ) {

			// Only deal with non-null/undefined values
			if ( ( options = arguments[ i ] ) != null ) {

				// Extend the base object
				for ( name in options ) {
					src = target[ name ];
					copy = options[ name ];

					// Prevent never-ending loop
					if ( target === copy ) {
						continue;
					}

					// Recurse if we're merging plain objects or arrays
					if ( deep && copy && ( jQuery.isPlainObject( copy ) ||
						( copyIsArray = jQuery.isArray( copy ) ) ) ) {

						if ( copyIsArray ) {
							copyIsArray = false;
							clone = src && jQuery.isArray( src ) ? src : [];

						} else {
							clone = src && jQuery.isPlainObject( src ) ? src : {};
						}

						// Never move original objects, clone them
						target[ name ] = jQuery.extend( deep, clone, copy );

					// Don't bring in undefined values
					} else if ( copy !== undefined ) {
						target[ name ] = copy;
					}
				}
			}
		}

		// Return the modified object
		return target;
	};

	jQuery.extend( {

		// Unique for each copy of jQuery on the page
		expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

		// Assume jQuery is ready without the ready module
		isReady: true,

		error: function( msg ) {
			throw new Error( msg );
		},

		noop: function() {},

		isFunction: function( obj ) {
			return jQuery.type( obj ) === "function";
		},

		isArray: Array.isArray,

		isWindow: function( obj ) {
			return obj != null && obj === obj.window;
		},

		isNumeric: function( obj ) {

			// parseFloat NaNs numeric-cast false positives (null|true|false|"")
			// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
			// subtraction forces infinities to NaN
			// adding 1 corrects loss of precision from parseFloat (#15100)
			var realStringObj = obj && obj.toString();
			return !jQuery.isArray( obj ) && ( realStringObj - parseFloat( realStringObj ) + 1 ) >= 0;
		},

		isPlainObject: function( obj ) {
			var key;

			// Not plain objects:
			// - Any object or value whose internal [[Class]] property is not "[object Object]"
			// - DOM nodes
			// - window
			if ( jQuery.type( obj ) !== "object" || obj.nodeType || jQuery.isWindow( obj ) ) {
				return false;
			}

			// Not own constructor property must be Object
			if ( obj.constructor &&
					!hasOwn.call( obj, "constructor" ) &&
					!hasOwn.call( obj.constructor.prototype || {}, "isPrototypeOf" ) ) {
				return false;
			}

			// Own properties are enumerated firstly, so to speed up,
			// if last one is own, then all properties are own
			for ( key in obj ) {}

			return key === undefined || hasOwn.call( obj, key );
		},

		isEmptyObject: function( obj ) {
			var name;
			for ( name in obj ) {
				return false;
			}
			return true;
		},

		type: function( obj ) {
			if ( obj == null ) {
				return obj + "";
			}

			// Support: Android<4.0, iOS<6 (functionish RegExp)
			return typeof obj === "object" || typeof obj === "function" ?
				class2type[ toString.call( obj ) ] || "object" :
				typeof obj;
		},

		// Evaluates a script in a global context
		globalEval: function( code ) {
			var script,
				indirect = eval;

			code = jQuery.trim( code );

			if ( code ) {

				// If the code includes a valid, prologue position
				// strict mode pragma, execute code by injecting a
				// script tag into the document.
				if ( code.indexOf( "use strict" ) === 1 ) {
					script = document.createElement( "script" );
					script.text = code;
					document.head.appendChild( script ).parentNode.removeChild( script );
				} else {

					// Otherwise, avoid the DOM node creation, insertion
					// and removal by using an indirect global eval

					indirect( code );
				}
			}
		},

		// Convert dashed to camelCase; used by the css and data modules
		// Support: IE9-11+
		// Microsoft forgot to hump their vendor prefix (#9572)
		camelCase: function( string ) {
			return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
		},

		nodeName: function( elem, name ) {
			return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
		},

		each: function( obj, callback ) {
			var length, i = 0;

			if ( isArrayLike( obj ) ) {
				length = obj.length;
				for ( ; i < length; i++ ) {
					if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
						break;
					}
				}
			} else {
				for ( i in obj ) {
					if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
						break;
					}
				}
			}

			return obj;
		},

		// Support: Android<4.1
		trim: function( text ) {
			return text == null ?
				"" :
				( text + "" ).replace( rtrim, "" );
		},

		// results is for internal usage only
		makeArray: function( arr, results ) {
			var ret = results || [];

			if ( arr != null ) {
				if ( isArrayLike( Object( arr ) ) ) {
					jQuery.merge( ret,
						typeof arr === "string" ?
						[ arr ] : arr
					);
				} else {
					push.call( ret, arr );
				}
			}

			return ret;
		},

		inArray: function( elem, arr, i ) {
			return arr == null ? -1 : indexOf.call( arr, elem, i );
		},

		merge: function( first, second ) {
			var len = +second.length,
				j = 0,
				i = first.length;

			for ( ; j < len; j++ ) {
				first[ i++ ] = second[ j ];
			}

			first.length = i;

			return first;
		},

		grep: function( elems, callback, invert ) {
			var callbackInverse,
				matches = [],
				i = 0,
				length = elems.length,
				callbackExpect = !invert;

			// Go through the array, only saving the items
			// that pass the validator function
			for ( ; i < length; i++ ) {
				callbackInverse = !callback( elems[ i ], i );
				if ( callbackInverse !== callbackExpect ) {
					matches.push( elems[ i ] );
				}
			}

			return matches;
		},

		// arg is for internal usage only
		map: function( elems, callback, arg ) {
			var length, value,
				i = 0,
				ret = [];

			// Go through the array, translating each of the items to their new values
			if ( isArrayLike( elems ) ) {
				length = elems.length;
				for ( ; i < length; i++ ) {
					value = callback( elems[ i ], i, arg );

					if ( value != null ) {
						ret.push( value );
					}
				}

			// Go through every key on the object,
			} else {
				for ( i in elems ) {
					value = callback( elems[ i ], i, arg );

					if ( value != null ) {
						ret.push( value );
					}
				}
			}

			// Flatten any nested arrays
			return concat.apply( [], ret );
		},

		// A global GUID counter for objects
		guid: 1,

		// Bind a function to a context, optionally partially applying any
		// arguments.
		proxy: function( fn, context ) {
			var tmp, args, proxy;

			if ( typeof context === "string" ) {
				tmp = fn[ context ];
				context = fn;
				fn = tmp;
			}

			// Quick check to determine if target is callable, in the spec
			// this throws a TypeError, but we will just return undefined.
			if ( !jQuery.isFunction( fn ) ) {
				return undefined;
			}

			// Simulated bind
			args = slice.call( arguments, 2 );
			proxy = function() {
				return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
			};

			// Set the guid of unique handler to the same of original handler, so it can be removed
			proxy.guid = fn.guid = fn.guid || jQuery.guid++;

			return proxy;
		},

		now: Date.now,

		// jQuery.support is not used in Core but other projects attach their
		// properties to it so it needs to exist.
		support: support
	} );

	// JSHint would error on this code due to the Symbol not being defined in ES5.
	// Defining this global in .jshintrc would create a danger of using the global
	// unguarded in another place, it seems safer to just disable JSHint for these
	// three lines.
	/* jshint ignore: start */
	if ( typeof Symbol === "function" ) {
		jQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];
	}
	/* jshint ignore: end */

	// Populate the class2type map
	jQuery.each( "Boolean Number String Function Array Date RegExp Object Error Symbol".split( " " ),
	function( i, name ) {
		class2type[ "[object " + name + "]" ] = name.toLowerCase();
	} );

	function isArrayLike( obj ) {

		// Support: iOS 8.2 (not reproducible in simulator)
		// `in` check used to prevent JIT error (gh-2145)
		// hasOwn isn't used here due to false negatives
		// regarding Nodelist length in IE
		var length = !!obj && "length" in obj && obj.length,
			type = jQuery.type( obj );

		if ( type === "function" || jQuery.isWindow( obj ) ) {
			return false;
		}

		return type === "array" || length === 0 ||
			typeof length === "number" && length > 0 && ( length - 1 ) in obj;
	}
	var Sizzle =
	/*!
	 * Sizzle CSS Selector Engine v2.2.1
	 * http://sizzlejs.com/
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license
	 * http://jquery.org/license
	 *
	 * Date: 2015-10-17
	 */
	(function( window ) {

	var i,
		support,
		Expr,
		getText,
		isXML,
		tokenize,
		compile,
		select,
		outermostContext,
		sortInput,
		hasDuplicate,

		// Local document vars
		setDocument,
		document,
		docElem,
		documentIsHTML,
		rbuggyQSA,
		rbuggyMatches,
		matches,
		contains,

		// Instance-specific data
		expando = "sizzle" + 1 * new Date(),
		preferredDoc = window.document,
		dirruns = 0,
		done = 0,
		classCache = createCache(),
		tokenCache = createCache(),
		compilerCache = createCache(),
		sortOrder = function( a, b ) {
			if ( a === b ) {
				hasDuplicate = true;
			}
			return 0;
		},

		// General-purpose constants
		MAX_NEGATIVE = 1 << 31,

		// Instance methods
		hasOwn = ({}).hasOwnProperty,
		arr = [],
		pop = arr.pop,
		push_native = arr.push,
		push = arr.push,
		slice = arr.slice,
		// Use a stripped-down indexOf as it's faster than native
		// http://jsperf.com/thor-indexof-vs-for/5
		indexOf = function( list, elem ) {
			var i = 0,
				len = list.length;
			for ( ; i < len; i++ ) {
				if ( list[i] === elem ) {
					return i;
				}
			}
			return -1;
		},

		booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",

		// Regular expressions

		// http://www.w3.org/TR/css3-selectors/#whitespace
		whitespace = "[\\x20\\t\\r\\n\\f]",

		// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
		identifier = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",

		// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
		attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +
			// Operator (capture 2)
			"*([*^$|!~]?=)" + whitespace +
			// "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
			"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace +
			"*\\]",

		pseudos = ":(" + identifier + ")(?:\\((" +
			// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
			// 1. quoted (capture 3; capture 4 or capture 5)
			"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +
			// 2. simple (capture 6)
			"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +
			// 3. anything else (capture 2)
			".*" +
			")\\)|)",

		// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
		rwhitespace = new RegExp( whitespace + "+", "g" ),
		rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),

		rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
		rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*" ),

		rattributeQuotes = new RegExp( "=" + whitespace + "*([^\\]'\"]*?)" + whitespace + "*\\]", "g" ),

		rpseudo = new RegExp( pseudos ),
		ridentifier = new RegExp( "^" + identifier + "$" ),

		matchExpr = {
			"ID": new RegExp( "^#(" + identifier + ")" ),
			"CLASS": new RegExp( "^\\.(" + identifier + ")" ),
			"TAG": new RegExp( "^(" + identifier + "|[*])" ),
			"ATTR": new RegExp( "^" + attributes ),
			"PSEUDO": new RegExp( "^" + pseudos ),
			"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +
				"*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
				"*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
			"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),
			// For use in libraries implementing .is()
			// We use this for POS matching in `select`
			"needsContext": new RegExp( "^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
				whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
		},

		rinputs = /^(?:input|select|textarea|button)$/i,
		rheader = /^h\d$/i,

		rnative = /^[^{]+\{\s*\[native \w/,

		// Easily-parseable/retrievable ID or TAG or CLASS selectors
		rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

		rsibling = /[+~]/,
		rescape = /'|\\/g,

		// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
		runescape = new RegExp( "\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig" ),
		funescape = function( _, escaped, escapedWhitespace ) {
			var high = "0x" + escaped - 0x10000;
			// NaN means non-codepoint
			// Support: Firefox<24
			// Workaround erroneous numeric interpretation of +"0x"
			return high !== high || escapedWhitespace ?
				escaped :
				high < 0 ?
					// BMP codepoint
					String.fromCharCode( high + 0x10000 ) :
					// Supplemental Plane codepoint (surrogate pair)
					String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
		},

		// Used for iframes
		// See setDocument()
		// Removing the function wrapper causes a "Permission Denied"
		// error in IE
		unloadHandler = function() {
			setDocument();
		};

	// Optimize for push.apply( _, NodeList )
	try {
		push.apply(
			(arr = slice.call( preferredDoc.childNodes )),
			preferredDoc.childNodes
		);
		// Support: Android<4.0
		// Detect silently failing push.apply
		arr[ preferredDoc.childNodes.length ].nodeType;
	} catch ( e ) {
		push = { apply: arr.length ?

			// Leverage slice if possible
			function( target, els ) {
				push_native.apply( target, slice.call(els) );
			} :

			// Support: IE<9
			// Otherwise append directly
			function( target, els ) {
				var j = target.length,
					i = 0;
				// Can't trust NodeList.length
				while ( (target[j++] = els[i++]) ) {}
				target.length = j - 1;
			}
		};
	}

	function Sizzle( selector, context, results, seed ) {
		var m, i, elem, nid, nidselect, match, groups, newSelector,
			newContext = context && context.ownerDocument,

			// nodeType defaults to 9, since context defaults to document
			nodeType = context ? context.nodeType : 9;

		results = results || [];

		// Return early from calls with invalid selector or context
		if ( typeof selector !== "string" || !selector ||
			nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

			return results;
		}

		// Try to shortcut find operations (as opposed to filters) in HTML documents
		if ( !seed ) {

			if ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {
				setDocument( context );
			}
			context = context || document;

			if ( documentIsHTML ) {

				// If the selector is sufficiently simple, try using a "get*By*" DOM method
				// (excepting DocumentFragment context, where the methods don't exist)
				if ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {

					// ID selector
					if ( (m = match[1]) ) {

						// Document context
						if ( nodeType === 9 ) {
							if ( (elem = context.getElementById( m )) ) {

								// Support: IE, Opera, Webkit
								// TODO: identify versions
								// getElementById can match elements by name instead of ID
								if ( elem.id === m ) {
									results.push( elem );
									return results;
								}
							} else {
								return results;
							}

						// Element context
						} else {

							// Support: IE, Opera, Webkit
							// TODO: identify versions
							// getElementById can match elements by name instead of ID
							if ( newContext && (elem = newContext.getElementById( m )) &&
								contains( context, elem ) &&
								elem.id === m ) {

								results.push( elem );
								return results;
							}
						}

					// Type selector
					} else if ( match[2] ) {
						push.apply( results, context.getElementsByTagName( selector ) );
						return results;

					// Class selector
					} else if ( (m = match[3]) && support.getElementsByClassName &&
						context.getElementsByClassName ) {

						push.apply( results, context.getElementsByClassName( m ) );
						return results;
					}
				}

				// Take advantage of querySelectorAll
				if ( support.qsa &&
					!compilerCache[ selector + " " ] &&
					(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {

					if ( nodeType !== 1 ) {
						newContext = context;
						newSelector = selector;

					// qSA looks outside Element context, which is not what we want
					// Thanks to Andrew Dupont for this workaround technique
					// Support: IE <=8
					// Exclude object elements
					} else if ( context.nodeName.toLowerCase() !== "object" ) {

						// Capture the context ID, setting it first if necessary
						if ( (nid = context.getAttribute( "id" )) ) {
							nid = nid.replace( rescape, "\\$&" );
						} else {
							context.setAttribute( "id", (nid = expando) );
						}

						// Prefix every selector in the list
						groups = tokenize( selector );
						i = groups.length;
						nidselect = ridentifier.test( nid ) ? "#" + nid : "[id='" + nid + "']";
						while ( i-- ) {
							groups[i] = nidselect + " " + toSelector( groups[i] );
						}
						newSelector = groups.join( "," );

						// Expand context for sibling selectors
						newContext = rsibling.test( selector ) && testContext( context.parentNode ) ||
							context;
					}

					if ( newSelector ) {
						try {
							push.apply( results,
								newContext.querySelectorAll( newSelector )
							);
							return results;
						} catch ( qsaError ) {
						} finally {
							if ( nid === expando ) {
								context.removeAttribute( "id" );
							}
						}
					}
				}
			}
		}

		// All others
		return select( selector.replace( rtrim, "$1" ), context, results, seed );
	}

	/**
	 * Create key-value caches of limited size
	 * @returns {function(string, object)} Returns the Object data after storing it on itself with
	 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
	 *	deleting the oldest entry
	 */
	function createCache() {
		var keys = [];

		function cache( key, value ) {
			// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
			if ( keys.push( key + " " ) > Expr.cacheLength ) {
				// Only keep the most recent entries
				delete cache[ keys.shift() ];
			}
			return (cache[ key + " " ] = value);
		}
		return cache;
	}

	/**
	 * Mark a function for special use by Sizzle
	 * @param {Function} fn The function to mark
	 */
	function markFunction( fn ) {
		fn[ expando ] = true;
		return fn;
	}

	/**
	 * Support testing using an element
	 * @param {Function} fn Passed the created div and expects a boolean result
	 */
	function assert( fn ) {
		var div = document.createElement("div");

		try {
			return !!fn( div );
		} catch (e) {
			return false;
		} finally {
			// Remove from its parent by default
			if ( div.parentNode ) {
				div.parentNode.removeChild( div );
			}
			// release memory in IE
			div = null;
		}
	}

	/**
	 * Adds the same handler for all of the specified attrs
	 * @param {String} attrs Pipe-separated list of attributes
	 * @param {Function} handler The method that will be applied
	 */
	function addHandle( attrs, handler ) {
		var arr = attrs.split("|"),
			i = arr.length;

		while ( i-- ) {
			Expr.attrHandle[ arr[i] ] = handler;
		}
	}

	/**
	 * Checks document order of two siblings
	 * @param {Element} a
	 * @param {Element} b
	 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
	 */
	function siblingCheck( a, b ) {
		var cur = b && a,
			diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
				( ~b.sourceIndex || MAX_NEGATIVE ) -
				( ~a.sourceIndex || MAX_NEGATIVE );

		// Use IE sourceIndex if available on both nodes
		if ( diff ) {
			return diff;
		}

		// Check if b follows a
		if ( cur ) {
			while ( (cur = cur.nextSibling) ) {
				if ( cur === b ) {
					return -1;
				}
			}
		}

		return a ? 1 : -1;
	}

	/**
	 * Returns a function to use in pseudos for input types
	 * @param {String} type
	 */
	function createInputPseudo( type ) {
		return function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === type;
		};
	}

	/**
	 * Returns a function to use in pseudos for buttons
	 * @param {String} type
	 */
	function createButtonPseudo( type ) {
		return function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return (name === "input" || name === "button") && elem.type === type;
		};
	}

	/**
	 * Returns a function to use in pseudos for positionals
	 * @param {Function} fn
	 */
	function createPositionalPseudo( fn ) {
		return markFunction(function( argument ) {
			argument = +argument;
			return markFunction(function( seed, matches ) {
				var j,
					matchIndexes = fn( [], seed.length, argument ),
					i = matchIndexes.length;

				// Match elements found at the specified indexes
				while ( i-- ) {
					if ( seed[ (j = matchIndexes[i]) ] ) {
						seed[j] = !(matches[j] = seed[j]);
					}
				}
			});
		});
	}

	/**
	 * Checks a node for validity as a Sizzle context
	 * @param {Element|Object=} context
	 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
	 */
	function testContext( context ) {
		return context && typeof context.getElementsByTagName !== "undefined" && context;
	}

	// Expose support vars for convenience
	support = Sizzle.support = {};

	/**
	 * Detects XML nodes
	 * @param {Element|Object} elem An element or a document
	 * @returns {Boolean} True iff elem is a non-HTML XML node
	 */
	isXML = Sizzle.isXML = function( elem ) {
		// documentElement is verified for cases where it doesn't yet exist
		// (such as loading iframes in IE - #4833)
		var documentElement = elem && (elem.ownerDocument || elem).documentElement;
		return documentElement ? documentElement.nodeName !== "HTML" : false;
	};

	/**
	 * Sets document-related variables once based on the current document
	 * @param {Element|Object} [doc] An element or document object to use to set the document
	 * @returns {Object} Returns the current document
	 */
	setDocument = Sizzle.setDocument = function( node ) {
		var hasCompare, parent,
			doc = node ? node.ownerDocument || node : preferredDoc;

		// Return early if doc is invalid or already selected
		if ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {
			return document;
		}

		// Update global variables
		document = doc;
		docElem = document.documentElement;
		documentIsHTML = !isXML( document );

		// Support: IE 9-11, Edge
		// Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
		if ( (parent = document.defaultView) && parent.top !== parent ) {
			// Support: IE 11
			if ( parent.addEventListener ) {
				parent.addEventListener( "unload", unloadHandler, false );

			// Support: IE 9 - 10 only
			} else if ( parent.attachEvent ) {
				parent.attachEvent( "onunload", unloadHandler );
			}
		}

		/* Attributes
		---------------------------------------------------------------------- */

		// Support: IE<8
		// Verify that getAttribute really returns attributes and not properties
		// (excepting IE8 booleans)
		support.attributes = assert(function( div ) {
			div.className = "i";
			return !div.getAttribute("className");
		});

		/* getElement(s)By*
		---------------------------------------------------------------------- */

		// Check if getElementsByTagName("*") returns only elements
		support.getElementsByTagName = assert(function( div ) {
			div.appendChild( document.createComment("") );
			return !div.getElementsByTagName("*").length;
		});

		// Support: IE<9
		support.getElementsByClassName = rnative.test( document.getElementsByClassName );

		// Support: IE<10
		// Check if getElementById returns elements by name
		// The broken getElementById methods don't pick up programatically-set names,
		// so use a roundabout getElementsByName test
		support.getById = assert(function( div ) {
			docElem.appendChild( div ).id = expando;
			return !document.getElementsByName || !document.getElementsByName( expando ).length;
		});

		// ID find and filter
		if ( support.getById ) {
			Expr.find["ID"] = function( id, context ) {
				if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
					var m = context.getElementById( id );
					return m ? [ m ] : [];
				}
			};
			Expr.filter["ID"] = function( id ) {
				var attrId = id.replace( runescape, funescape );
				return function( elem ) {
					return elem.getAttribute("id") === attrId;
				};
			};
		} else {
			// Support: IE6/7
			// getElementById is not reliable as a find shortcut
			delete Expr.find["ID"];

			Expr.filter["ID"] =  function( id ) {
				var attrId = id.replace( runescape, funescape );
				return function( elem ) {
					var node = typeof elem.getAttributeNode !== "undefined" &&
						elem.getAttributeNode("id");
					return node && node.value === attrId;
				};
			};
		}

		// Tag
		Expr.find["TAG"] = support.getElementsByTagName ?
			function( tag, context ) {
				if ( typeof context.getElementsByTagName !== "undefined" ) {
					return context.getElementsByTagName( tag );

				// DocumentFragment nodes don't have gEBTN
				} else if ( support.qsa ) {
					return context.querySelectorAll( tag );
				}
			} :

			function( tag, context ) {
				var elem,
					tmp = [],
					i = 0,
					// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
					results = context.getElementsByTagName( tag );

				// Filter out possible comments
				if ( tag === "*" ) {
					while ( (elem = results[i++]) ) {
						if ( elem.nodeType === 1 ) {
							tmp.push( elem );
						}
					}

					return tmp;
				}
				return results;
			};

		// Class
		Expr.find["CLASS"] = support.getElementsByClassName && function( className, context ) {
			if ( typeof context.getElementsByClassName !== "undefined" && documentIsHTML ) {
				return context.getElementsByClassName( className );
			}
		};

		/* QSA/matchesSelector
		---------------------------------------------------------------------- */

		// QSA and matchesSelector support

		// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
		rbuggyMatches = [];

		// qSa(:focus) reports false when true (Chrome 21)
		// We allow this because of a bug in IE8/9 that throws an error
		// whenever `document.activeElement` is accessed on an iframe
		// So, we allow :focus to pass through QSA all the time to avoid the IE error
		// See http://bugs.jquery.com/ticket/13378
		rbuggyQSA = [];

		if ( (support.qsa = rnative.test( document.querySelectorAll )) ) {
			// Build QSA regex
			// Regex strategy adopted from Diego Perini
			assert(function( div ) {
				// Select is set to empty string on purpose
				// This is to test IE's treatment of not explicitly
				// setting a boolean content attribute,
				// since its presence should be enough
				// http://bugs.jquery.com/ticket/12359
				docElem.appendChild( div ).innerHTML = "<a id='" + expando + "'></a>" +
					"<select id='" + expando + "-\r\\' msallowcapture=''>" +
					"<option selected=''></option></select>";

				// Support: IE8, Opera 11-12.16
				// Nothing should be selected when empty strings follow ^= or $= or *=
				// The test attribute must be unknown in Opera but "safe" for WinRT
				// http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
				if ( div.querySelectorAll("[msallowcapture^='']").length ) {
					rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
				}

				// Support: IE8
				// Boolean attributes and "value" are not treated correctly
				if ( !div.querySelectorAll("[selected]").length ) {
					rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
				}

				// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
				if ( !div.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
					rbuggyQSA.push("~=");
				}

				// Webkit/Opera - :checked should return selected option elements
				// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
				// IE8 throws error here and will not see later tests
				if ( !div.querySelectorAll(":checked").length ) {
					rbuggyQSA.push(":checked");
				}

				// Support: Safari 8+, iOS 8+
				// https://bugs.webkit.org/show_bug.cgi?id=136851
				// In-page `selector#id sibing-combinator selector` fails
				if ( !div.querySelectorAll( "a#" + expando + "+*" ).length ) {
					rbuggyQSA.push(".#.+[+~]");
				}
			});

			assert(function( div ) {
				// Support: Windows 8 Native Apps
				// The type and name attributes are restricted during .innerHTML assignment
				var input = document.createElement("input");
				input.setAttribute( "type", "hidden" );
				div.appendChild( input ).setAttribute( "name", "D" );

				// Support: IE8
				// Enforce case-sensitivity of name attribute
				if ( div.querySelectorAll("[name=d]").length ) {
					rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
				}

				// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
				// IE8 throws error here and will not see later tests
				if ( !div.querySelectorAll(":enabled").length ) {
					rbuggyQSA.push( ":enabled", ":disabled" );
				}

				// Opera 10-11 does not throw on post-comma invalid pseudos
				div.querySelectorAll("*,:x");
				rbuggyQSA.push(",.*:");
			});
		}

		if ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||
			docElem.webkitMatchesSelector ||
			docElem.mozMatchesSelector ||
			docElem.oMatchesSelector ||
			docElem.msMatchesSelector) )) ) {

			assert(function( div ) {
				// Check to see if it's possible to do matchesSelector
				// on a disconnected node (IE 9)
				support.disconnectedMatch = matches.call( div, "div" );

				// This should fail with an exception
				// Gecko does not error, returns false instead
				matches.call( div, "[s!='']:x" );
				rbuggyMatches.push( "!=", pseudos );
			});
		}

		rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join("|") );
		rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join("|") );

		/* Contains
		---------------------------------------------------------------------- */
		hasCompare = rnative.test( docElem.compareDocumentPosition );

		// Element contains another
		// Purposefully self-exclusive
		// As in, an element does not contain itself
		contains = hasCompare || rnative.test( docElem.contains ) ?
			function( a, b ) {
				var adown = a.nodeType === 9 ? a.documentElement : a,
					bup = b && b.parentNode;
				return a === bup || !!( bup && bup.nodeType === 1 && (
					adown.contains ?
						adown.contains( bup ) :
						a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
				));
			} :
			function( a, b ) {
				if ( b ) {
					while ( (b = b.parentNode) ) {
						if ( b === a ) {
							return true;
						}
					}
				}
				return false;
			};

		/* Sorting
		---------------------------------------------------------------------- */

		// Document order sorting
		sortOrder = hasCompare ?
		function( a, b ) {

			// Flag for duplicate removal
			if ( a === b ) {
				hasDuplicate = true;
				return 0;
			}

			// Sort on method existence if only one input has compareDocumentPosition
			var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
			if ( compare ) {
				return compare;
			}

			// Calculate position if both inputs belong to the same document
			compare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?
				a.compareDocumentPosition( b ) :

				// Otherwise we know they are disconnected
				1;

			// Disconnected nodes
			if ( compare & 1 ||
				(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {

				// Choose the first element that is related to our preferred document
				if ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {
					return -1;
				}
				if ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {
					return 1;
				}

				// Maintain original order
				return sortInput ?
					( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
					0;
			}

			return compare & 4 ? -1 : 1;
		} :
		function( a, b ) {
			// Exit early if the nodes are identical
			if ( a === b ) {
				hasDuplicate = true;
				return 0;
			}

			var cur,
				i = 0,
				aup = a.parentNode,
				bup = b.parentNode,
				ap = [ a ],
				bp = [ b ];

			// Parentless nodes are either documents or disconnected
			if ( !aup || !bup ) {
				return a === document ? -1 :
					b === document ? 1 :
					aup ? -1 :
					bup ? 1 :
					sortInput ?
					( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
					0;

			// If the nodes are siblings, we can do a quick check
			} else if ( aup === bup ) {
				return siblingCheck( a, b );
			}

			// Otherwise we need full lists of their ancestors for comparison
			cur = a;
			while ( (cur = cur.parentNode) ) {
				ap.unshift( cur );
			}
			cur = b;
			while ( (cur = cur.parentNode) ) {
				bp.unshift( cur );
			}

			// Walk down the tree looking for a discrepancy
			while ( ap[i] === bp[i] ) {
				i++;
			}

			return i ?
				// Do a sibling check if the nodes have a common ancestor
				siblingCheck( ap[i], bp[i] ) :

				// Otherwise nodes in our document sort first
				ap[i] === preferredDoc ? -1 :
				bp[i] === preferredDoc ? 1 :
				0;
		};

		return document;
	};

	Sizzle.matches = function( expr, elements ) {
		return Sizzle( expr, null, null, elements );
	};

	Sizzle.matchesSelector = function( elem, expr ) {
		// Set document vars if needed
		if ( ( elem.ownerDocument || elem ) !== document ) {
			setDocument( elem );
		}

		// Make sure that attribute selectors are quoted
		expr = expr.replace( rattributeQuotes, "='$1']" );

		if ( support.matchesSelector && documentIsHTML &&
			!compilerCache[ expr + " " ] &&
			( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
			( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

			try {
				var ret = matches.call( elem, expr );

				// IE 9's matchesSelector returns false on disconnected nodes
				if ( ret || support.disconnectedMatch ||
						// As well, disconnected nodes are said to be in a document
						// fragment in IE 9
						elem.document && elem.document.nodeType !== 11 ) {
					return ret;
				}
			} catch (e) {}
		}

		return Sizzle( expr, document, null, [ elem ] ).length > 0;
	};

	Sizzle.contains = function( context, elem ) {
		// Set document vars if needed
		if ( ( context.ownerDocument || context ) !== document ) {
			setDocument( context );
		}
		return contains( context, elem );
	};

	Sizzle.attr = function( elem, name ) {
		// Set document vars if needed
		if ( ( elem.ownerDocument || elem ) !== document ) {
			setDocument( elem );
		}

		var fn = Expr.attrHandle[ name.toLowerCase() ],
			// Don't get fooled by Object.prototype properties (jQuery #13807)
			val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
				fn( elem, name, !documentIsHTML ) :
				undefined;

		return val !== undefined ?
			val :
			support.attributes || !documentIsHTML ?
				elem.getAttribute( name ) :
				(val = elem.getAttributeNode(name)) && val.specified ?
					val.value :
					null;
	};

	Sizzle.error = function( msg ) {
		throw new Error( "Syntax error, unrecognized expression: " + msg );
	};

	/**
	 * Document sorting and removing duplicates
	 * @param {ArrayLike} results
	 */
	Sizzle.uniqueSort = function( results ) {
		var elem,
			duplicates = [],
			j = 0,
			i = 0;

		// Unless we *know* we can detect duplicates, assume their presence
		hasDuplicate = !support.detectDuplicates;
		sortInput = !support.sortStable && results.slice( 0 );
		results.sort( sortOrder );

		if ( hasDuplicate ) {
			while ( (elem = results[i++]) ) {
				if ( elem === results[ i ] ) {
					j = duplicates.push( i );
				}
			}
			while ( j-- ) {
				results.splice( duplicates[ j ], 1 );
			}
		}

		// Clear input after sorting to release objects
		// See https://github.com/jquery/sizzle/pull/225
		sortInput = null;

		return results;
	};

	/**
	 * Utility function for retrieving the text value of an array of DOM nodes
	 * @param {Array|Element} elem
	 */
	getText = Sizzle.getText = function( elem ) {
		var node,
			ret = "",
			i = 0,
			nodeType = elem.nodeType;

		if ( !nodeType ) {
			// If no nodeType, this is expected to be an array
			while ( (node = elem[i++]) ) {
				// Do not traverse comment nodes
				ret += getText( node );
			}
		} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
			// Use textContent for elements
			// innerText usage removed for consistency of new lines (jQuery #11153)
			if ( typeof elem.textContent === "string" ) {
				return elem.textContent;
			} else {
				// Traverse its children
				for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
					ret += getText( elem );
				}
			}
		} else if ( nodeType === 3 || nodeType === 4 ) {
			return elem.nodeValue;
		}
		// Do not include comment or processing instruction nodes

		return ret;
	};

	Expr = Sizzle.selectors = {

		// Can be adjusted by the user
		cacheLength: 50,

		createPseudo: markFunction,

		match: matchExpr,

		attrHandle: {},

		find: {},

		relative: {
			">": { dir: "parentNode", first: true },
			" ": { dir: "parentNode" },
			"+": { dir: "previousSibling", first: true },
			"~": { dir: "previousSibling" }
		},

		preFilter: {
			"ATTR": function( match ) {
				match[1] = match[1].replace( runescape, funescape );

				// Move the given value to match[3] whether quoted or unquoted
				match[3] = ( match[3] || match[4] || match[5] || "" ).replace( runescape, funescape );

				if ( match[2] === "~=" ) {
					match[3] = " " + match[3] + " ";
				}

				return match.slice( 0, 4 );
			},

			"CHILD": function( match ) {
				/* matches from matchExpr["CHILD"]
					1 type (only|nth|...)
					2 what (child|of-type)
					3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
					4 xn-component of xn+y argument ([+-]?\d*n|)
					5 sign of xn-component
					6 x of xn-component
					7 sign of y-component
					8 y of y-component
				*/
				match[1] = match[1].toLowerCase();

				if ( match[1].slice( 0, 3 ) === "nth" ) {
					// nth-* requires argument
					if ( !match[3] ) {
						Sizzle.error( match[0] );
					}

					// numeric x and y parameters for Expr.filter.CHILD
					// remember that false/true cast respectively to 0/1
					match[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === "even" || match[3] === "odd" ) );
					match[5] = +( ( match[7] + match[8] ) || match[3] === "odd" );

				// other types prohibit arguments
				} else if ( match[3] ) {
					Sizzle.error( match[0] );
				}

				return match;
			},

			"PSEUDO": function( match ) {
				var excess,
					unquoted = !match[6] && match[2];

				if ( matchExpr["CHILD"].test( match[0] ) ) {
					return null;
				}

				// Accept quoted arguments as-is
				if ( match[3] ) {
					match[2] = match[4] || match[5] || "";

				// Strip excess characters from unquoted arguments
				} else if ( unquoted && rpseudo.test( unquoted ) &&
					// Get excess from tokenize (recursively)
					(excess = tokenize( unquoted, true )) &&
					// advance to the next closing parenthesis
					(excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {

					// excess is a negative index
					match[0] = match[0].slice( 0, excess );
					match[2] = unquoted.slice( 0, excess );
				}

				// Return only captures needed by the pseudo filter method (type and argument)
				return match.slice( 0, 3 );
			}
		},

		filter: {

			"TAG": function( nodeNameSelector ) {
				var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
				return nodeNameSelector === "*" ?
					function() { return true; } :
					function( elem ) {
						return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
					};
			},

			"CLASS": function( className ) {
				var pattern = classCache[ className + " " ];

				return pattern ||
					(pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)" )) &&
					classCache( className, function( elem ) {
						return pattern.test( typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "" );
					});
			},

			"ATTR": function( name, operator, check ) {
				return function( elem ) {
					var result = Sizzle.attr( elem, name );

					if ( result == null ) {
						return operator === "!=";
					}
					if ( !operator ) {
						return true;
					}

					result += "";

					return operator === "=" ? result === check :
						operator === "!=" ? result !== check :
						operator === "^=" ? check && result.indexOf( check ) === 0 :
						operator === "*=" ? check && result.indexOf( check ) > -1 :
						operator === "$=" ? check && result.slice( -check.length ) === check :
						operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
						operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
						false;
				};
			},

			"CHILD": function( type, what, argument, first, last ) {
				var simple = type.slice( 0, 3 ) !== "nth",
					forward = type.slice( -4 ) !== "last",
					ofType = what === "of-type";

				return first === 1 && last === 0 ?

					// Shortcut for :nth-*(n)
					function( elem ) {
						return !!elem.parentNode;
					} :

					function( elem, context, xml ) {
						var cache, uniqueCache, outerCache, node, nodeIndex, start,
							dir = simple !== forward ? "nextSibling" : "previousSibling",
							parent = elem.parentNode,
							name = ofType && elem.nodeName.toLowerCase(),
							useCache = !xml && !ofType,
							diff = false;

						if ( parent ) {

							// :(first|last|only)-(child|of-type)
							if ( simple ) {
								while ( dir ) {
									node = elem;
									while ( (node = node[ dir ]) ) {
										if ( ofType ?
											node.nodeName.toLowerCase() === name :
											node.nodeType === 1 ) {

											return false;
										}
									}
									// Reverse direction for :only-* (if we haven't yet done so)
									start = dir = type === "only" && !start && "nextSibling";
								}
								return true;
							}

							start = [ forward ? parent.firstChild : parent.lastChild ];

							// non-xml :nth-child(...) stores cache data on `parent`
							if ( forward && useCache ) {

								// Seek `elem` from a previously-cached index

								// ...in a gzip-friendly way
								node = parent;
								outerCache = node[ expando ] || (node[ expando ] = {});

								// Support: IE <9 only
								// Defend against cloned attroperties (jQuery gh-1709)
								uniqueCache = outerCache[ node.uniqueID ] ||
									(outerCache[ node.uniqueID ] = {});

								cache = uniqueCache[ type ] || [];
								nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
								diff = nodeIndex && cache[ 2 ];
								node = nodeIndex && parent.childNodes[ nodeIndex ];

								while ( (node = ++nodeIndex && node && node[ dir ] ||

									// Fallback to seeking `elem` from the start
									(diff = nodeIndex = 0) || start.pop()) ) {

									// When found, cache indexes on `parent` and break
									if ( node.nodeType === 1 && ++diff && node === elem ) {
										uniqueCache[ type ] = [ dirruns, nodeIndex, diff ];
										break;
									}
								}

							} else {
								// Use previously-cached element index if available
								if ( useCache ) {
									// ...in a gzip-friendly way
									node = elem;
									outerCache = node[ expando ] || (node[ expando ] = {});

									// Support: IE <9 only
									// Defend against cloned attroperties (jQuery gh-1709)
									uniqueCache = outerCache[ node.uniqueID ] ||
										(outerCache[ node.uniqueID ] = {});

									cache = uniqueCache[ type ] || [];
									nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
									diff = nodeIndex;
								}

								// xml :nth-child(...)
								// or :nth-last-child(...) or :nth(-last)?-of-type(...)
								if ( diff === false ) {
									// Use the same loop as above to seek `elem` from the start
									while ( (node = ++nodeIndex && node && node[ dir ] ||
										(diff = nodeIndex = 0) || start.pop()) ) {

										if ( ( ofType ?
											node.nodeName.toLowerCase() === name :
											node.nodeType === 1 ) &&
											++diff ) {

											// Cache the index of each encountered element
											if ( useCache ) {
												outerCache = node[ expando ] || (node[ expando ] = {});

												// Support: IE <9 only
												// Defend against cloned attroperties (jQuery gh-1709)
												uniqueCache = outerCache[ node.uniqueID ] ||
													(outerCache[ node.uniqueID ] = {});

												uniqueCache[ type ] = [ dirruns, diff ];
											}

											if ( node === elem ) {
												break;
											}
										}
									}
								}
							}

							// Incorporate the offset, then check against cycle size
							diff -= last;
							return diff === first || ( diff % first === 0 && diff / first >= 0 );
						}
					};
			},

			"PSEUDO": function( pseudo, argument ) {
				// pseudo-class names are case-insensitive
				// http://www.w3.org/TR/selectors/#pseudo-classes
				// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
				// Remember that setFilters inherits from pseudos
				var args,
					fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
						Sizzle.error( "unsupported pseudo: " + pseudo );

				// The user may use createPseudo to indicate that
				// arguments are needed to create the filter function
				// just as Sizzle does
				if ( fn[ expando ] ) {
					return fn( argument );
				}

				// But maintain support for old signatures
				if ( fn.length > 1 ) {
					args = [ pseudo, pseudo, "", argument ];
					return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
						markFunction(function( seed, matches ) {
							var idx,
								matched = fn( seed, argument ),
								i = matched.length;
							while ( i-- ) {
								idx = indexOf( seed, matched[i] );
								seed[ idx ] = !( matches[ idx ] = matched[i] );
							}
						}) :
						function( elem ) {
							return fn( elem, 0, args );
						};
				}

				return fn;
			}
		},

		pseudos: {
			// Potentially complex pseudos
			"not": markFunction(function( selector ) {
				// Trim the selector passed to compile
				// to avoid treating leading and trailing
				// spaces as combinators
				var input = [],
					results = [],
					matcher = compile( selector.replace( rtrim, "$1" ) );

				return matcher[ expando ] ?
					markFunction(function( seed, matches, context, xml ) {
						var elem,
							unmatched = matcher( seed, null, xml, [] ),
							i = seed.length;

						// Match elements unmatched by `matcher`
						while ( i-- ) {
							if ( (elem = unmatched[i]) ) {
								seed[i] = !(matches[i] = elem);
							}
						}
					}) :
					function( elem, context, xml ) {
						input[0] = elem;
						matcher( input, null, xml, results );
						// Don't keep the element (issue #299)
						input[0] = null;
						return !results.pop();
					};
			}),

			"has": markFunction(function( selector ) {
				return function( elem ) {
					return Sizzle( selector, elem ).length > 0;
				};
			}),

			"contains": markFunction(function( text ) {
				text = text.replace( runescape, funescape );
				return function( elem ) {
					return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;
				};
			}),

			// "Whether an element is represented by a :lang() selector
			// is based solely on the element's language value
			// being equal to the identifier C,
			// or beginning with the identifier C immediately followed by "-".
			// The matching of C against the element's language value is performed case-insensitively.
			// The identifier C does not have to be a valid language name."
			// http://www.w3.org/TR/selectors/#lang-pseudo
			"lang": markFunction( function( lang ) {
				// lang value must be a valid identifier
				if ( !ridentifier.test(lang || "") ) {
					Sizzle.error( "unsupported lang: " + lang );
				}
				lang = lang.replace( runescape, funescape ).toLowerCase();
				return function( elem ) {
					var elemLang;
					do {
						if ( (elemLang = documentIsHTML ?
							elem.lang :
							elem.getAttribute("xml:lang") || elem.getAttribute("lang")) ) {

							elemLang = elemLang.toLowerCase();
							return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
						}
					} while ( (elem = elem.parentNode) && elem.nodeType === 1 );
					return false;
				};
			}),

			// Miscellaneous
			"target": function( elem ) {
				var hash = window.location && window.location.hash;
				return hash && hash.slice( 1 ) === elem.id;
			},

			"root": function( elem ) {
				return elem === docElem;
			},

			"focus": function( elem ) {
				return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
			},

			// Boolean properties
			"enabled": function( elem ) {
				return elem.disabled === false;
			},

			"disabled": function( elem ) {
				return elem.disabled === true;
			},

			"checked": function( elem ) {
				// In CSS3, :checked should return both checked and selected elements
				// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
				var nodeName = elem.nodeName.toLowerCase();
				return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
			},

			"selected": function( elem ) {
				// Accessing this property makes selected-by-default
				// options in Safari work properly
				if ( elem.parentNode ) {
					elem.parentNode.selectedIndex;
				}

				return elem.selected === true;
			},

			// Contents
			"empty": function( elem ) {
				// http://www.w3.org/TR/selectors/#empty-pseudo
				// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
				//   but not by others (comment: 8; processing instruction: 7; etc.)
				// nodeType < 6 works because attributes (2) do not appear as children
				for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
					if ( elem.nodeType < 6 ) {
						return false;
					}
				}
				return true;
			},

			"parent": function( elem ) {
				return !Expr.pseudos["empty"]( elem );
			},

			// Element/input types
			"header": function( elem ) {
				return rheader.test( elem.nodeName );
			},

			"input": function( elem ) {
				return rinputs.test( elem.nodeName );
			},

			"button": function( elem ) {
				var name = elem.nodeName.toLowerCase();
				return name === "input" && elem.type === "button" || name === "button";
			},

			"text": function( elem ) {
				var attr;
				return elem.nodeName.toLowerCase() === "input" &&
					elem.type === "text" &&

					// Support: IE<8
					// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
					( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text" );
			},

			// Position-in-collection
			"first": createPositionalPseudo(function() {
				return [ 0 ];
			}),

			"last": createPositionalPseudo(function( matchIndexes, length ) {
				return [ length - 1 ];
			}),

			"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
				return [ argument < 0 ? argument + length : argument ];
			}),

			"even": createPositionalPseudo(function( matchIndexes, length ) {
				var i = 0;
				for ( ; i < length; i += 2 ) {
					matchIndexes.push( i );
				}
				return matchIndexes;
			}),

			"odd": createPositionalPseudo(function( matchIndexes, length ) {
				var i = 1;
				for ( ; i < length; i += 2 ) {
					matchIndexes.push( i );
				}
				return matchIndexes;
			}),

			"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
				var i = argument < 0 ? argument + length : argument;
				for ( ; --i >= 0; ) {
					matchIndexes.push( i );
				}
				return matchIndexes;
			}),

			"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
				var i = argument < 0 ? argument + length : argument;
				for ( ; ++i < length; ) {
					matchIndexes.push( i );
				}
				return matchIndexes;
			})
		}
	};

	Expr.pseudos["nth"] = Expr.pseudos["eq"];

	// Add button/input type pseudos
	for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
		Expr.pseudos[ i ] = createInputPseudo( i );
	}
	for ( i in { submit: true, reset: true } ) {
		Expr.pseudos[ i ] = createButtonPseudo( i );
	}

	// Easy API for creating new setFilters
	function setFilters() {}
	setFilters.prototype = Expr.filters = Expr.pseudos;
	Expr.setFilters = new setFilters();

	tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
		var matched, match, tokens, type,
			soFar, groups, preFilters,
			cached = tokenCache[ selector + " " ];

		if ( cached ) {
			return parseOnly ? 0 : cached.slice( 0 );
		}

		soFar = selector;
		groups = [];
		preFilters = Expr.preFilter;

		while ( soFar ) {

			// Comma and first run
			if ( !matched || (match = rcomma.exec( soFar )) ) {
				if ( match ) {
					// Don't consume trailing commas as valid
					soFar = soFar.slice( match[0].length ) || soFar;
				}
				groups.push( (tokens = []) );
			}

			matched = false;

			// Combinators
			if ( (match = rcombinators.exec( soFar )) ) {
				matched = match.shift();
				tokens.push({
					value: matched,
					// Cast descendant combinators to space
					type: match[0].replace( rtrim, " " )
				});
				soFar = soFar.slice( matched.length );
			}

			// Filters
			for ( type in Expr.filter ) {
				if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||
					(match = preFilters[ type ]( match ))) ) {
					matched = match.shift();
					tokens.push({
						value: matched,
						type: type,
						matches: match
					});
					soFar = soFar.slice( matched.length );
				}
			}

			if ( !matched ) {
				break;
			}
		}

		// Return the length of the invalid excess
		// if we're just parsing
		// Otherwise, throw an error or return tokens
		return parseOnly ?
			soFar.length :
			soFar ?
				Sizzle.error( selector ) :
				// Cache the tokens
				tokenCache( selector, groups ).slice( 0 );
	};

	function toSelector( tokens ) {
		var i = 0,
			len = tokens.length,
			selector = "";
		for ( ; i < len; i++ ) {
			selector += tokens[i].value;
		}
		return selector;
	}

	function addCombinator( matcher, combinator, base ) {
		var dir = combinator.dir,
			checkNonElements = base && dir === "parentNode",
			doneName = done++;

		return combinator.first ?
			// Check against closest ancestor/preceding element
			function( elem, context, xml ) {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						return matcher( elem, context, xml );
					}
				}
			} :

			// Check against all ancestor/preceding elements
			function( elem, context, xml ) {
				var oldCache, uniqueCache, outerCache,
					newCache = [ dirruns, doneName ];

				// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
				if ( xml ) {
					while ( (elem = elem[ dir ]) ) {
						if ( elem.nodeType === 1 || checkNonElements ) {
							if ( matcher( elem, context, xml ) ) {
								return true;
							}
						}
					}
				} else {
					while ( (elem = elem[ dir ]) ) {
						if ( elem.nodeType === 1 || checkNonElements ) {
							outerCache = elem[ expando ] || (elem[ expando ] = {});

							// Support: IE <9 only
							// Defend against cloned attroperties (jQuery gh-1709)
							uniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});

							if ( (oldCache = uniqueCache[ dir ]) &&
								oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

								// Assign to newCache so results back-propagate to previous elements
								return (newCache[ 2 ] = oldCache[ 2 ]);
							} else {
								// Reuse newcache so results back-propagate to previous elements
								uniqueCache[ dir ] = newCache;

								// A match means we're done; a fail means we have to keep checking
								if ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {
									return true;
								}
							}
						}
					}
				}
			};
	}

	function elementMatcher( matchers ) {
		return matchers.length > 1 ?
			function( elem, context, xml ) {
				var i = matchers.length;
				while ( i-- ) {
					if ( !matchers[i]( elem, context, xml ) ) {
						return false;
					}
				}
				return true;
			} :
			matchers[0];
	}

	function multipleContexts( selector, contexts, results ) {
		var i = 0,
			len = contexts.length;
		for ( ; i < len; i++ ) {
			Sizzle( selector, contexts[i], results );
		}
		return results;
	}

	function condense( unmatched, map, filter, context, xml ) {
		var elem,
			newUnmatched = [],
			i = 0,
			len = unmatched.length,
			mapped = map != null;

		for ( ; i < len; i++ ) {
			if ( (elem = unmatched[i]) ) {
				if ( !filter || filter( elem, context, xml ) ) {
					newUnmatched.push( elem );
					if ( mapped ) {
						map.push( i );
					}
				}
			}
		}

		return newUnmatched;
	}

	function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
		if ( postFilter && !postFilter[ expando ] ) {
			postFilter = setMatcher( postFilter );
		}
		if ( postFinder && !postFinder[ expando ] ) {
			postFinder = setMatcher( postFinder, postSelector );
		}
		return markFunction(function( seed, results, context, xml ) {
			var temp, i, elem,
				preMap = [],
				postMap = [],
				preexisting = results.length,

				// Get initial elements from seed or context
				elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [] ),

				// Prefilter to get matcher input, preserving a map for seed-results synchronization
				matcherIn = preFilter && ( seed || !selector ) ?
					condense( elems, preMap, preFilter, context, xml ) :
					elems,

				matcherOut = matcher ?
					// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
					postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

						// ...intermediate processing is necessary
						[] :

						// ...otherwise use results directly
						results :
					matcherIn;

			// Find primary matches
			if ( matcher ) {
				matcher( matcherIn, matcherOut, context, xml );
			}

			// Apply postFilter
			if ( postFilter ) {
				temp = condense( matcherOut, postMap );
				postFilter( temp, [], context, xml );

				// Un-match failing elements by moving them back to matcherIn
				i = temp.length;
				while ( i-- ) {
					if ( (elem = temp[i]) ) {
						matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);
					}
				}
			}

			if ( seed ) {
				if ( postFinder || preFilter ) {
					if ( postFinder ) {
						// Get the final matcherOut by condensing this intermediate into postFinder contexts
						temp = [];
						i = matcherOut.length;
						while ( i-- ) {
							if ( (elem = matcherOut[i]) ) {
								// Restore matcherIn since elem is not yet a final match
								temp.push( (matcherIn[i] = elem) );
							}
						}
						postFinder( null, (matcherOut = []), temp, xml );
					}

					// Move matched elements from seed to results to keep them synchronized
					i = matcherOut.length;
					while ( i-- ) {
						if ( (elem = matcherOut[i]) &&
							(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {

							seed[temp] = !(results[temp] = elem);
						}
					}
				}

			// Add elements to results, through postFinder if defined
			} else {
				matcherOut = condense(
					matcherOut === results ?
						matcherOut.splice( preexisting, matcherOut.length ) :
						matcherOut
				);
				if ( postFinder ) {
					postFinder( null, results, matcherOut, xml );
				} else {
					push.apply( results, matcherOut );
				}
			}
		});
	}

	function matcherFromTokens( tokens ) {
		var checkContext, matcher, j,
			len = tokens.length,
			leadingRelative = Expr.relative[ tokens[0].type ],
			implicitRelative = leadingRelative || Expr.relative[" "],
			i = leadingRelative ? 1 : 0,

			// The foundational matcher ensures that elements are reachable from top-level context(s)
			matchContext = addCombinator( function( elem ) {
				return elem === checkContext;
			}, implicitRelative, true ),
			matchAnyContext = addCombinator( function( elem ) {
				return indexOf( checkContext, elem ) > -1;
			}, implicitRelative, true ),
			matchers = [ function( elem, context, xml ) {
				var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
					(checkContext = context).nodeType ?
						matchContext( elem, context, xml ) :
						matchAnyContext( elem, context, xml ) );
				// Avoid hanging onto element (issue #299)
				checkContext = null;
				return ret;
			} ];

		for ( ; i < len; i++ ) {
			if ( (matcher = Expr.relative[ tokens[i].type ]) ) {
				matchers = [ addCombinator(elementMatcher( matchers ), matcher) ];
			} else {
				matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );

				// Return special upon seeing a positional matcher
				if ( matcher[ expando ] ) {
					// Find the next relative operator (if any) for proper handling
					j = ++i;
					for ( ; j < len; j++ ) {
						if ( Expr.relative[ tokens[j].type ] ) {
							break;
						}
					}
					return setMatcher(
						i > 1 && elementMatcher( matchers ),
						i > 1 && toSelector(
							// If the preceding token was a descendant combinator, insert an implicit any-element `*`
							tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : "" })
						).replace( rtrim, "$1" ),
						matcher,
						i < j && matcherFromTokens( tokens.slice( i, j ) ),
						j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),
						j < len && toSelector( tokens )
					);
				}
				matchers.push( matcher );
			}
		}

		return elementMatcher( matchers );
	}

	function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
		var bySet = setMatchers.length > 0,
			byElement = elementMatchers.length > 0,
			superMatcher = function( seed, context, xml, results, outermost ) {
				var elem, j, matcher,
					matchedCount = 0,
					i = "0",
					unmatched = seed && [],
					setMatched = [],
					contextBackup = outermostContext,
					// We must always have either seed elements or outermost context
					elems = seed || byElement && Expr.find["TAG"]( "*", outermost ),
					// Use integer dirruns iff this is the outermost matcher
					dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),
					len = elems.length;

				if ( outermost ) {
					outermostContext = context === document || context || outermost;
				}

				// Add elements passing elementMatchers directly to results
				// Support: IE<9, Safari
				// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
				for ( ; i !== len && (elem = elems[i]) != null; i++ ) {
					if ( byElement && elem ) {
						j = 0;
						if ( !context && elem.ownerDocument !== document ) {
							setDocument( elem );
							xml = !documentIsHTML;
						}
						while ( (matcher = elementMatchers[j++]) ) {
							if ( matcher( elem, context || document, xml) ) {
								results.push( elem );
								break;
							}
						}
						if ( outermost ) {
							dirruns = dirrunsUnique;
						}
					}

					// Track unmatched elements for set filters
					if ( bySet ) {
						// They will have gone through all possible matchers
						if ( (elem = !matcher && elem) ) {
							matchedCount--;
						}

						// Lengthen the array for every element, matched or not
						if ( seed ) {
							unmatched.push( elem );
						}
					}
				}

				// `i` is now the count of elements visited above, and adding it to `matchedCount`
				// makes the latter nonnegative.
				matchedCount += i;

				// Apply set filters to unmatched elements
				// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
				// equals `i`), unless we didn't visit _any_ elements in the above loop because we have
				// no element matchers and no seed.
				// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
				// case, which will result in a "00" `matchedCount` that differs from `i` but is also
				// numerically zero.
				if ( bySet && i !== matchedCount ) {
					j = 0;
					while ( (matcher = setMatchers[j++]) ) {
						matcher( unmatched, setMatched, context, xml );
					}

					if ( seed ) {
						// Reintegrate element matches to eliminate the need for sorting
						if ( matchedCount > 0 ) {
							while ( i-- ) {
								if ( !(unmatched[i] || setMatched[i]) ) {
									setMatched[i] = pop.call( results );
								}
							}
						}

						// Discard index placeholder values to get only actual matches
						setMatched = condense( setMatched );
					}

					// Add matches to results
					push.apply( results, setMatched );

					// Seedless set matches succeeding multiple successful matchers stipulate sorting
					if ( outermost && !seed && setMatched.length > 0 &&
						( matchedCount + setMatchers.length ) > 1 ) {

						Sizzle.uniqueSort( results );
					}
				}

				// Override manipulation of globals by nested matchers
				if ( outermost ) {
					dirruns = dirrunsUnique;
					outermostContext = contextBackup;
				}

				return unmatched;
			};

		return bySet ?
			markFunction( superMatcher ) :
			superMatcher;
	}

	compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
		var i,
			setMatchers = [],
			elementMatchers = [],
			cached = compilerCache[ selector + " " ];

		if ( !cached ) {
			// Generate a function of recursive functions that can be used to check each element
			if ( !match ) {
				match = tokenize( selector );
			}
			i = match.length;
			while ( i-- ) {
				cached = matcherFromTokens( match[i] );
				if ( cached[ expando ] ) {
					setMatchers.push( cached );
				} else {
					elementMatchers.push( cached );
				}
			}

			// Cache the compiled function
			cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );

			// Save selector and tokenization
			cached.selector = selector;
		}
		return cached;
	};

	/**
	 * A low-level selection function that works with Sizzle's compiled
	 *  selector functions
	 * @param {String|Function} selector A selector or a pre-compiled
	 *  selector function built with Sizzle.compile
	 * @param {Element} context
	 * @param {Array} [results]
	 * @param {Array} [seed] A set of elements to match against
	 */
	select = Sizzle.select = function( selector, context, results, seed ) {
		var i, tokens, token, type, find,
			compiled = typeof selector === "function" && selector,
			match = !seed && tokenize( (selector = compiled.selector || selector) );

		results = results || [];

		// Try to minimize operations if there is only one selector in the list and no seed
		// (the latter of which guarantees us context)
		if ( match.length === 1 ) {

			// Reduce context if the leading compound selector is an ID
			tokens = match[0] = match[0].slice( 0 );
			if ( tokens.length > 2 && (token = tokens[0]).type === "ID" &&
					support.getById && context.nodeType === 9 && documentIsHTML &&
					Expr.relative[ tokens[1].type ] ) {

				context = ( Expr.find["ID"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];
				if ( !context ) {
					return results;

				// Precompiled matchers will still verify ancestry, so step up a level
				} else if ( compiled ) {
					context = context.parentNode;
				}

				selector = selector.slice( tokens.shift().value.length );
			}

			// Fetch a seed set for right-to-left matching
			i = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;
			while ( i-- ) {
				token = tokens[i];

				// Abort if we hit a combinator
				if ( Expr.relative[ (type = token.type) ] ) {
					break;
				}
				if ( (find = Expr.find[ type ]) ) {
					// Search, expanding context for leading sibling combinators
					if ( (seed = find(
						token.matches[0].replace( runescape, funescape ),
						rsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context
					)) ) {

						// If seed is empty or no tokens remain, we can return early
						tokens.splice( i, 1 );
						selector = seed.length && toSelector( tokens );
						if ( !selector ) {
							push.apply( results, seed );
							return results;
						}

						break;
					}
				}
			}
		}

		// Compile and execute a filtering function if one is not provided
		// Provide `match` to avoid retokenization if we modified the selector above
		( compiled || compile( selector, match ) )(
			seed,
			context,
			!documentIsHTML,
			results,
			!context || rsibling.test( selector ) && testContext( context.parentNode ) || context
		);
		return results;
	};

	// One-time assignments

	// Sort stability
	support.sortStable = expando.split("").sort( sortOrder ).join("") === expando;

	// Support: Chrome 14-35+
	// Always assume duplicates if they aren't passed to the comparison function
	support.detectDuplicates = !!hasDuplicate;

	// Initialize against the default document
	setDocument();

	// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
	// Detached nodes confoundingly follow *each other*
	support.sortDetached = assert(function( div1 ) {
		// Should return 1, but returns 4 (following)
		return div1.compareDocumentPosition( document.createElement("div") ) & 1;
	});

	// Support: IE<8
	// Prevent attribute/property "interpolation"
	// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
	if ( !assert(function( div ) {
		div.innerHTML = "<a href='#'></a>";
		return div.firstChild.getAttribute("href") === "#" ;
	}) ) {
		addHandle( "type|href|height|width", function( elem, name, isXML ) {
			if ( !isXML ) {
				return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
			}
		});
	}

	// Support: IE<9
	// Use defaultValue in place of getAttribute("value")
	if ( !support.attributes || !assert(function( div ) {
		div.innerHTML = "<input/>";
		div.firstChild.setAttribute( "value", "" );
		return div.firstChild.getAttribute( "value" ) === "";
	}) ) {
		addHandle( "value", function( elem, name, isXML ) {
			if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
				return elem.defaultValue;
			}
		});
	}

	// Support: IE<9
	// Use getAttributeNode to fetch booleans when getAttribute lies
	if ( !assert(function( div ) {
		return div.getAttribute("disabled") == null;
	}) ) {
		addHandle( booleans, function( elem, name, isXML ) {
			var val;
			if ( !isXML ) {
				return elem[ name ] === true ? name.toLowerCase() :
						(val = elem.getAttributeNode( name )) && val.specified ?
						val.value :
					null;
			}
		});
	}

	return Sizzle;

	})( window );



	jQuery.find = Sizzle;
	jQuery.expr = Sizzle.selectors;
	jQuery.expr[ ":" ] = jQuery.expr.pseudos;
	jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
	jQuery.text = Sizzle.getText;
	jQuery.isXMLDoc = Sizzle.isXML;
	jQuery.contains = Sizzle.contains;



	var dir = function( elem, dir, until ) {
		var matched = [],
			truncate = until !== undefined;

		while ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {
			if ( elem.nodeType === 1 ) {
				if ( truncate && jQuery( elem ).is( until ) ) {
					break;
				}
				matched.push( elem );
			}
		}
		return matched;
	};


	var siblings = function( n, elem ) {
		var matched = [];

		for ( ; n; n = n.nextSibling ) {
			if ( n.nodeType === 1 && n !== elem ) {
				matched.push( n );
			}
		}

		return matched;
	};


	var rneedsContext = jQuery.expr.match.needsContext;

	var rsingleTag = ( /^<([\w-]+)\s*\/?>(?:<\/\1>|)$/ );



	var risSimple = /^.[^:#\[\.,]*$/;

	// Implement the identical functionality for filter and not
	function winnow( elements, qualifier, not ) {
		if ( jQuery.isFunction( qualifier ) ) {
			return jQuery.grep( elements, function( elem, i ) {
				/* jshint -W018 */
				return !!qualifier.call( elem, i, elem ) !== not;
			} );

		}

		if ( qualifier.nodeType ) {
			return jQuery.grep( elements, function( elem ) {
				return ( elem === qualifier ) !== not;
			} );

		}

		if ( typeof qualifier === "string" ) {
			if ( risSimple.test( qualifier ) ) {
				return jQuery.filter( qualifier, elements, not );
			}

			qualifier = jQuery.filter( qualifier, elements );
		}

		return jQuery.grep( elements, function( elem ) {
			return ( indexOf.call( qualifier, elem ) > -1 ) !== not;
		} );
	}

	jQuery.filter = function( expr, elems, not ) {
		var elem = elems[ 0 ];

		if ( not ) {
			expr = ":not(" + expr + ")";
		}

		return elems.length === 1 && elem.nodeType === 1 ?
			jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :
			jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
				return elem.nodeType === 1;
			} ) );
	};

	jQuery.fn.extend( {
		find: function( selector ) {
			var i,
				len = this.length,
				ret = [],
				self = this;

			if ( typeof selector !== "string" ) {
				return this.pushStack( jQuery( selector ).filter( function() {
					for ( i = 0; i < len; i++ ) {
						if ( jQuery.contains( self[ i ], this ) ) {
							return true;
						}
					}
				} ) );
			}

			for ( i = 0; i < len; i++ ) {
				jQuery.find( selector, self[ i ], ret );
			}

			// Needed because $( selector, context ) becomes $( context ).find( selector )
			ret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );
			ret.selector = this.selector ? this.selector + " " + selector : selector;
			return ret;
		},
		filter: function( selector ) {
			return this.pushStack( winnow( this, selector || [], false ) );
		},
		not: function( selector ) {
			return this.pushStack( winnow( this, selector || [], true ) );
		},
		is: function( selector ) {
			return !!winnow(
				this,

				// If this is a positional/relative selector, check membership in the returned set
				// so $("p:first").is("p:last") won't return true for a doc with two "p".
				typeof selector === "string" && rneedsContext.test( selector ) ?
					jQuery( selector ) :
					selector || [],
				false
			).length;
		}
	} );


	// Initialize a jQuery object


	// A central reference to the root jQuery(document)
	var rootjQuery,

		// A simple way to check for HTML strings
		// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
		// Strict HTML recognition (#11290: must start with <)
		rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,

		init = jQuery.fn.init = function( selector, context, root ) {
			var match, elem;

			// HANDLE: $(""), $(null), $(undefined), $(false)
			if ( !selector ) {
				return this;
			}

			// Method init() accepts an alternate rootjQuery
			// so migrate can support jQuery.sub (gh-2101)
			root = root || rootjQuery;

			// Handle HTML strings
			if ( typeof selector === "string" ) {
				if ( selector[ 0 ] === "<" &&
					selector[ selector.length - 1 ] === ">" &&
					selector.length >= 3 ) {

					// Assume that strings that start and end with <> are HTML and skip the regex check
					match = [ null, selector, null ];

				} else {
					match = rquickExpr.exec( selector );
				}

				// Match html or make sure no context is specified for #id
				if ( match && ( match[ 1 ] || !context ) ) {

					// HANDLE: $(html) -> $(array)
					if ( match[ 1 ] ) {
						context = context instanceof jQuery ? context[ 0 ] : context;

						// Option to run scripts is true for back-compat
						// Intentionally let the error be thrown if parseHTML is not present
						jQuery.merge( this, jQuery.parseHTML(
							match[ 1 ],
							context && context.nodeType ? context.ownerDocument || context : document,
							true
						) );

						// HANDLE: $(html, props)
						if ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {
							for ( match in context ) {

								// Properties of context are called as methods if possible
								if ( jQuery.isFunction( this[ match ] ) ) {
									this[ match ]( context[ match ] );

								// ...and otherwise set as attributes
								} else {
									this.attr( match, context[ match ] );
								}
							}
						}

						return this;

					// HANDLE: $(#id)
					} else {
						elem = document.getElementById( match[ 2 ] );

						// Support: Blackberry 4.6
						// gEBID returns nodes no longer in the document (#6963)
						if ( elem && elem.parentNode ) {

							// Inject the element directly into the jQuery object
							this.length = 1;
							this[ 0 ] = elem;
						}

						this.context = document;
						this.selector = selector;
						return this;
					}

				// HANDLE: $(expr, $(...))
				} else if ( !context || context.jquery ) {
					return ( context || root ).find( selector );

				// HANDLE: $(expr, context)
				// (which is just equivalent to: $(context).find(expr)
				} else {
					return this.constructor( context ).find( selector );
				}

			// HANDLE: $(DOMElement)
			} else if ( selector.nodeType ) {
				this.context = this[ 0 ] = selector;
				this.length = 1;
				return this;

			// HANDLE: $(function)
			// Shortcut for document ready
			} else if ( jQuery.isFunction( selector ) ) {
				return root.ready !== undefined ?
					root.ready( selector ) :

					// Execute immediately if ready is not present
					selector( jQuery );
			}

			if ( selector.selector !== undefined ) {
				this.selector = selector.selector;
				this.context = selector.context;
			}

			return jQuery.makeArray( selector, this );
		};

	// Give the init function the jQuery prototype for later instantiation
	init.prototype = jQuery.fn;

	// Initialize central reference
	rootjQuery = jQuery( document );


	var rparentsprev = /^(?:parents|prev(?:Until|All))/,

		// Methods guaranteed to produce a unique set when starting from a unique set
		guaranteedUnique = {
			children: true,
			contents: true,
			next: true,
			prev: true
		};

	jQuery.fn.extend( {
		has: function( target ) {
			var targets = jQuery( target, this ),
				l = targets.length;

			return this.filter( function() {
				var i = 0;
				for ( ; i < l; i++ ) {
					if ( jQuery.contains( this, targets[ i ] ) ) {
						return true;
					}
				}
			} );
		},

		closest: function( selectors, context ) {
			var cur,
				i = 0,
				l = this.length,
				matched = [],
				pos = rneedsContext.test( selectors ) || typeof selectors !== "string" ?
					jQuery( selectors, context || this.context ) :
					0;

			for ( ; i < l; i++ ) {
				for ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {

					// Always skip document fragments
					if ( cur.nodeType < 11 && ( pos ?
						pos.index( cur ) > -1 :

						// Don't pass non-elements to Sizzle
						cur.nodeType === 1 &&
							jQuery.find.matchesSelector( cur, selectors ) ) ) {

						matched.push( cur );
						break;
					}
				}
			}

			return this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );
		},

		// Determine the position of an element within the set
		index: function( elem ) {

			// No argument, return index in parent
			if ( !elem ) {
				return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
			}

			// Index in selector
			if ( typeof elem === "string" ) {
				return indexOf.call( jQuery( elem ), this[ 0 ] );
			}

			// Locate the position of the desired element
			return indexOf.call( this,

				// If it receives a jQuery object, the first element is used
				elem.jquery ? elem[ 0 ] : elem
			);
		},

		add: function( selector, context ) {
			return this.pushStack(
				jQuery.uniqueSort(
					jQuery.merge( this.get(), jQuery( selector, context ) )
				)
			);
		},

		addBack: function( selector ) {
			return this.add( selector == null ?
				this.prevObject : this.prevObject.filter( selector )
			);
		}
	} );

	function sibling( cur, dir ) {
		while ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}
		return cur;
	}

	jQuery.each( {
		parent: function( elem ) {
			var parent = elem.parentNode;
			return parent && parent.nodeType !== 11 ? parent : null;
		},
		parents: function( elem ) {
			return dir( elem, "parentNode" );
		},
		parentsUntil: function( elem, i, until ) {
			return dir( elem, "parentNode", until );
		},
		next: function( elem ) {
			return sibling( elem, "nextSibling" );
		},
		prev: function( elem ) {
			return sibling( elem, "previousSibling" );
		},
		nextAll: function( elem ) {
			return dir( elem, "nextSibling" );
		},
		prevAll: function( elem ) {
			return dir( elem, "previousSibling" );
		},
		nextUntil: function( elem, i, until ) {
			return dir( elem, "nextSibling", until );
		},
		prevUntil: function( elem, i, until ) {
			return dir( elem, "previousSibling", until );
		},
		siblings: function( elem ) {
			return siblings( ( elem.parentNode || {} ).firstChild, elem );
		},
		children: function( elem ) {
			return siblings( elem.firstChild );
		},
		contents: function( elem ) {
			return elem.contentDocument || jQuery.merge( [], elem.childNodes );
		}
	}, function( name, fn ) {
		jQuery.fn[ name ] = function( until, selector ) {
			var matched = jQuery.map( this, fn, until );

			if ( name.slice( -5 ) !== "Until" ) {
				selector = until;
			}

			if ( selector && typeof selector === "string" ) {
				matched = jQuery.filter( selector, matched );
			}

			if ( this.length > 1 ) {

				// Remove duplicates
				if ( !guaranteedUnique[ name ] ) {
					jQuery.uniqueSort( matched );
				}

				// Reverse order for parents* and prev-derivatives
				if ( rparentsprev.test( name ) ) {
					matched.reverse();
				}
			}

			return this.pushStack( matched );
		};
	} );
	var rnotwhite = ( /\S+/g );



	// Convert String-formatted options into Object-formatted ones
	function createOptions( options ) {
		var object = {};
		jQuery.each( options.match( rnotwhite ) || [], function( _, flag ) {
			object[ flag ] = true;
		} );
		return object;
	}

	/*
	 * Create a callback list using the following parameters:
	 *
	 *	options: an optional list of space-separated options that will change how
	 *			the callback list behaves or a more traditional option object
	 *
	 * By default a callback list will act like an event callback list and can be
	 * "fired" multiple times.
	 *
	 * Possible options:
	 *
	 *	once:			will ensure the callback list can only be fired once (like a Deferred)
	 *
	 *	memory:			will keep track of previous values and will call any callback added
	 *					after the list has been fired right away with the latest "memorized"
	 *					values (like a Deferred)
	 *
	 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
	 *
	 *	stopOnFalse:	interrupt callings when a callback returns false
	 *
	 */
	jQuery.Callbacks = function( options ) {

		// Convert options from String-formatted to Object-formatted if needed
		// (we check in cache first)
		options = typeof options === "string" ?
			createOptions( options ) :
			jQuery.extend( {}, options );

		var // Flag to know if list is currently firing
			firing,

			// Last fire value for non-forgettable lists
			memory,

			// Flag to know if list was already fired
			fired,

			// Flag to prevent firing
			locked,

			// Actual callback list
			list = [],

			// Queue of execution data for repeatable lists
			queue = [],

			// Index of currently firing callback (modified by add/remove as needed)
			firingIndex = -1,

			// Fire callbacks
			fire = function() {

				// Enforce single-firing
				locked = options.once;

				// Execute callbacks for all pending executions,
				// respecting firingIndex overrides and runtime changes
				fired = firing = true;
				for ( ; queue.length; firingIndex = -1 ) {
					memory = queue.shift();
					while ( ++firingIndex < list.length ) {

						// Run callback and check for early termination
						if ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&
							options.stopOnFalse ) {

							// Jump to end and forget the data so .add doesn't re-fire
							firingIndex = list.length;
							memory = false;
						}
					}
				}

				// Forget the data if we're done with it
				if ( !options.memory ) {
					memory = false;
				}

				firing = false;

				// Clean up if we're done firing for good
				if ( locked ) {

					// Keep an empty list if we have data for future add calls
					if ( memory ) {
						list = [];

					// Otherwise, this object is spent
					} else {
						list = "";
					}
				}
			},

			// Actual Callbacks object
			self = {

				// Add a callback or a collection of callbacks to the list
				add: function() {
					if ( list ) {

						// If we have memory from a past run, we should fire after adding
						if ( memory && !firing ) {
							firingIndex = list.length - 1;
							queue.push( memory );
						}

						( function add( args ) {
							jQuery.each( args, function( _, arg ) {
								if ( jQuery.isFunction( arg ) ) {
									if ( !options.unique || !self.has( arg ) ) {
										list.push( arg );
									}
								} else if ( arg && arg.length && jQuery.type( arg ) !== "string" ) {

									// Inspect recursively
									add( arg );
								}
							} );
						} )( arguments );

						if ( memory && !firing ) {
							fire();
						}
					}
					return this;
				},

				// Remove a callback from the list
				remove: function() {
					jQuery.each( arguments, function( _, arg ) {
						var index;
						while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
							list.splice( index, 1 );

							// Handle firing indexes
							if ( index <= firingIndex ) {
								firingIndex--;
							}
						}
					} );
					return this;
				},

				// Check if a given callback is in the list.
				// If no argument is given, return whether or not list has callbacks attached.
				has: function( fn ) {
					return fn ?
						jQuery.inArray( fn, list ) > -1 :
						list.length > 0;
				},

				// Remove all callbacks from the list
				empty: function() {
					if ( list ) {
						list = [];
					}
					return this;
				},

				// Disable .fire and .add
				// Abort any current/pending executions
				// Clear all callbacks and values
				disable: function() {
					locked = queue = [];
					list = memory = "";
					return this;
				},
				disabled: function() {
					return !list;
				},

				// Disable .fire
				// Also disable .add unless we have memory (since it would have no effect)
				// Abort any pending executions
				lock: function() {
					locked = queue = [];
					if ( !memory ) {
						list = memory = "";
					}
					return this;
				},
				locked: function() {
					return !!locked;
				},

				// Call all callbacks with the given context and arguments
				fireWith: function( context, args ) {
					if ( !locked ) {
						args = args || [];
						args = [ context, args.slice ? args.slice() : args ];
						queue.push( args );
						if ( !firing ) {
							fire();
						}
					}
					return this;
				},

				// Call all the callbacks with the given arguments
				fire: function() {
					self.fireWith( this, arguments );
					return this;
				},

				// To know if the callbacks have already been called at least once
				fired: function() {
					return !!fired;
				}
			};

		return self;
	};


	jQuery.extend( {

		Deferred: function( func ) {
			var tuples = [

					// action, add listener, listener list, final state
					[ "resolve", "done", jQuery.Callbacks( "once memory" ), "resolved" ],
					[ "reject", "fail", jQuery.Callbacks( "once memory" ), "rejected" ],
					[ "notify", "progress", jQuery.Callbacks( "memory" ) ]
				],
				state = "pending",
				promise = {
					state: function() {
						return state;
					},
					always: function() {
						deferred.done( arguments ).fail( arguments );
						return this;
					},
					then: function( /* fnDone, fnFail, fnProgress */ ) {
						var fns = arguments;
						return jQuery.Deferred( function( newDefer ) {
							jQuery.each( tuples, function( i, tuple ) {
								var fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];

								// deferred[ done | fail | progress ] for forwarding actions to newDefer
								deferred[ tuple[ 1 ] ]( function() {
									var returned = fn && fn.apply( this, arguments );
									if ( returned && jQuery.isFunction( returned.promise ) ) {
										returned.promise()
											.progress( newDefer.notify )
											.done( newDefer.resolve )
											.fail( newDefer.reject );
									} else {
										newDefer[ tuple[ 0 ] + "With" ](
											this === promise ? newDefer.promise() : this,
											fn ? [ returned ] : arguments
										);
									}
								} );
							} );
							fns = null;
						} ).promise();
					},

					// Get a promise for this deferred
					// If obj is provided, the promise aspect is added to the object
					promise: function( obj ) {
						return obj != null ? jQuery.extend( obj, promise ) : promise;
					}
				},
				deferred = {};

			// Keep pipe for back-compat
			promise.pipe = promise.then;

			// Add list-specific methods
			jQuery.each( tuples, function( i, tuple ) {
				var list = tuple[ 2 ],
					stateString = tuple[ 3 ];

				// promise[ done | fail | progress ] = list.add
				promise[ tuple[ 1 ] ] = list.add;

				// Handle state
				if ( stateString ) {
					list.add( function() {

						// state = [ resolved | rejected ]
						state = stateString;

					// [ reject_list | resolve_list ].disable; progress_list.lock
					}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );
				}

				// deferred[ resolve | reject | notify ]
				deferred[ tuple[ 0 ] ] = function() {
					deferred[ tuple[ 0 ] + "With" ]( this === deferred ? promise : this, arguments );
					return this;
				};
				deferred[ tuple[ 0 ] + "With" ] = list.fireWith;
			} );

			// Make the deferred a promise
			promise.promise( deferred );

			// Call given func if any
			if ( func ) {
				func.call( deferred, deferred );
			}

			// All done!
			return deferred;
		},

		// Deferred helper
		when: function( subordinate /* , ..., subordinateN */ ) {
			var i = 0,
				resolveValues = slice.call( arguments ),
				length = resolveValues.length,

				// the count of uncompleted subordinates
				remaining = length !== 1 ||
					( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,

				// the master Deferred.
				// If resolveValues consist of only a single Deferred, just use that.
				deferred = remaining === 1 ? subordinate : jQuery.Deferred(),

				// Update function for both resolve and progress values
				updateFunc = function( i, contexts, values ) {
					return function( value ) {
						contexts[ i ] = this;
						values[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
						if ( values === progressValues ) {
							deferred.notifyWith( contexts, values );
						} else if ( !( --remaining ) ) {
							deferred.resolveWith( contexts, values );
						}
					};
				},

				progressValues, progressContexts, resolveContexts;

			// Add listeners to Deferred subordinates; treat others as resolved
			if ( length > 1 ) {
				progressValues = new Array( length );
				progressContexts = new Array( length );
				resolveContexts = new Array( length );
				for ( ; i < length; i++ ) {
					if ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {
						resolveValues[ i ].promise()
							.progress( updateFunc( i, progressContexts, progressValues ) )
							.done( updateFunc( i, resolveContexts, resolveValues ) )
							.fail( deferred.reject );
					} else {
						--remaining;
					}
				}
			}

			// If we're not waiting on anything, resolve the master
			if ( !remaining ) {
				deferred.resolveWith( resolveContexts, resolveValues );
			}

			return deferred.promise();
		}
	} );


	// The deferred used on DOM ready
	var readyList;

	jQuery.fn.ready = function( fn ) {

		// Add the callback
		jQuery.ready.promise().done( fn );

		return this;
	};

	jQuery.extend( {

		// Is the DOM ready to be used? Set to true once it occurs.
		isReady: false,

		// A counter to track how many items to wait for before
		// the ready event fires. See #6781
		readyWait: 1,

		// Hold (or release) the ready event
		holdReady: function( hold ) {
			if ( hold ) {
				jQuery.readyWait++;
			} else {
				jQuery.ready( true );
			}
		},

		// Handle when the DOM is ready
		ready: function( wait ) {

			// Abort if there are pending holds or we're already ready
			if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
				return;
			}

			// Remember that the DOM is ready
			jQuery.isReady = true;

			// If a normal DOM Ready event fired, decrement, and wait if need be
			if ( wait !== true && --jQuery.readyWait > 0 ) {
				return;
			}

			// If there are functions bound, to execute
			readyList.resolveWith( document, [ jQuery ] );

			// Trigger any bound ready events
			if ( jQuery.fn.triggerHandler ) {
				jQuery( document ).triggerHandler( "ready" );
				jQuery( document ).off( "ready" );
			}
		}
	} );

	/**
	 * The ready event handler and self cleanup method
	 */
	function completed() {
		document.removeEventListener( "DOMContentLoaded", completed );
		window.removeEventListener( "load", completed );
		jQuery.ready();
	}

	jQuery.ready.promise = function( obj ) {
		if ( !readyList ) {

			readyList = jQuery.Deferred();

			// Catch cases where $(document).ready() is called
			// after the browser event has already occurred.
			// Support: IE9-10 only
			// Older IE sometimes signals "interactive" too soon
			if ( document.readyState === "complete" ||
				( document.readyState !== "loading" && !document.documentElement.doScroll ) ) {

				// Handle it asynchronously to allow scripts the opportunity to delay ready
				window.setTimeout( jQuery.ready );

			} else {

				// Use the handy event callback
				document.addEventListener( "DOMContentLoaded", completed );

				// A fallback to window.onload, that will always work
				window.addEventListener( "load", completed );
			}
		}
		return readyList.promise( obj );
	};

	// Kick off the DOM ready check even if the user does not
	jQuery.ready.promise();




	// Multifunctional method to get and set values of a collection
	// The value/s can optionally be executed if it's a function
	var access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
		var i = 0,
			len = elems.length,
			bulk = key == null;

		// Sets many values
		if ( jQuery.type( key ) === "object" ) {
			chainable = true;
			for ( i in key ) {
				access( elems, fn, i, key[ i ], true, emptyGet, raw );
			}

		// Sets one value
		} else if ( value !== undefined ) {
			chainable = true;

			if ( !jQuery.isFunction( value ) ) {
				raw = true;
			}

			if ( bulk ) {

				// Bulk operations run against the entire set
				if ( raw ) {
					fn.call( elems, value );
					fn = null;

				// ...except when executing function values
				} else {
					bulk = fn;
					fn = function( elem, key, value ) {
						return bulk.call( jQuery( elem ), value );
					};
				}
			}

			if ( fn ) {
				for ( ; i < len; i++ ) {
					fn(
						elems[ i ], key, raw ?
						value :
						value.call( elems[ i ], i, fn( elems[ i ], key ) )
					);
				}
			}
		}

		return chainable ?
			elems :

			// Gets
			bulk ?
				fn.call( elems ) :
				len ? fn( elems[ 0 ], key ) : emptyGet;
	};
	var acceptData = function( owner ) {

		// Accepts only:
		//  - Node
		//    - Node.ELEMENT_NODE
		//    - Node.DOCUMENT_NODE
		//  - Object
		//    - Any
		/* jshint -W018 */
		return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );
	};




	function Data() {
		this.expando = jQuery.expando + Data.uid++;
	}

	Data.uid = 1;

	Data.prototype = {

		register: function( owner, initial ) {
			var value = initial || {};

			// If it is a node unlikely to be stringify-ed or looped over
			// use plain assignment
			if ( owner.nodeType ) {
				owner[ this.expando ] = value;

			// Otherwise secure it in a non-enumerable, non-writable property
			// configurability must be true to allow the property to be
			// deleted with the delete operator
			} else {
				Object.defineProperty( owner, this.expando, {
					value: value,
					writable: true,
					configurable: true
				} );
			}
			return owner[ this.expando ];
		},
		cache: function( owner ) {

			// We can accept data for non-element nodes in modern browsers,
			// but we should not, see #8335.
			// Always return an empty object.
			if ( !acceptData( owner ) ) {
				return {};
			}

			// Check if the owner object already has a cache
			var value = owner[ this.expando ];

			// If not, create one
			if ( !value ) {
				value = {};

				// We can accept data for non-element nodes in modern browsers,
				// but we should not, see #8335.
				// Always return an empty object.
				if ( acceptData( owner ) ) {

					// If it is a node unlikely to be stringify-ed or looped over
					// use plain assignment
					if ( owner.nodeType ) {
						owner[ this.expando ] = value;

					// Otherwise secure it in a non-enumerable property
					// configurable must be true to allow the property to be
					// deleted when data is removed
					} else {
						Object.defineProperty( owner, this.expando, {
							value: value,
							configurable: true
						} );
					}
				}
			}

			return value;
		},
		set: function( owner, data, value ) {
			var prop,
				cache = this.cache( owner );

			// Handle: [ owner, key, value ] args
			if ( typeof data === "string" ) {
				cache[ data ] = value;

			// Handle: [ owner, { properties } ] args
			} else {

				// Copy the properties one-by-one to the cache object
				for ( prop in data ) {
					cache[ prop ] = data[ prop ];
				}
			}
			return cache;
		},
		get: function( owner, key ) {
			return key === undefined ?
				this.cache( owner ) :
				owner[ this.expando ] && owner[ this.expando ][ key ];
		},
		access: function( owner, key, value ) {
			var stored;

			// In cases where either:
			//
			//   1. No key was specified
			//   2. A string key was specified, but no value provided
			//
			// Take the "read" path and allow the get method to determine
			// which value to return, respectively either:
			//
			//   1. The entire cache object
			//   2. The data stored at the key
			//
			if ( key === undefined ||
					( ( key && typeof key === "string" ) && value === undefined ) ) {

				stored = this.get( owner, key );

				return stored !== undefined ?
					stored : this.get( owner, jQuery.camelCase( key ) );
			}

			// When the key is not a string, or both a key and value
			// are specified, set or extend (existing objects) with either:
			//
			//   1. An object of properties
			//   2. A key and value
			//
			this.set( owner, key, value );

			// Since the "set" path can have two possible entry points
			// return the expected data based on which path was taken[*]
			return value !== undefined ? value : key;
		},
		remove: function( owner, key ) {
			var i, name, camel,
				cache = owner[ this.expando ];

			if ( cache === undefined ) {
				return;
			}

			if ( key === undefined ) {
				this.register( owner );

			} else {

				// Support array or space separated string of keys
				if ( jQuery.isArray( key ) ) {

					// If "name" is an array of keys...
					// When data is initially created, via ("key", "val") signature,
					// keys will be converted to camelCase.
					// Since there is no way to tell _how_ a key was added, remove
					// both plain key and camelCase key. #12786
					// This will only penalize the array argument path.
					name = key.concat( key.map( jQuery.camelCase ) );
				} else {
					camel = jQuery.camelCase( key );

					// Try the string as a key before any manipulation
					if ( key in cache ) {
						name = [ key, camel ];
					} else {

						// If a key with the spaces exists, use it.
						// Otherwise, create an array by matching non-whitespace
						name = camel;
						name = name in cache ?
							[ name ] : ( name.match( rnotwhite ) || [] );
					}
				}

				i = name.length;

				while ( i-- ) {
					delete cache[ name[ i ] ];
				}
			}

			// Remove the expando if there's no more data
			if ( key === undefined || jQuery.isEmptyObject( cache ) ) {

				// Support: Chrome <= 35-45+
				// Webkit & Blink performance suffers when deleting properties
				// from DOM nodes, so set to undefined instead
				// https://code.google.com/p/chromium/issues/detail?id=378607
				if ( owner.nodeType ) {
					owner[ this.expando ] = undefined;
				} else {
					delete owner[ this.expando ];
				}
			}
		},
		hasData: function( owner ) {
			var cache = owner[ this.expando ];
			return cache !== undefined && !jQuery.isEmptyObject( cache );
		}
	};
	var dataPriv = new Data();

	var dataUser = new Data();



	//	Implementation Summary
	//
	//	1. Enforce API surface and semantic compatibility with 1.9.x branch
	//	2. Improve the module's maintainability by reducing the storage
	//		paths to a single mechanism.
	//	3. Use the same single mechanism to support "private" and "user" data.
	//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
	//	5. Avoid exposing implementation details on user objects (eg. expando properties)
	//	6. Provide a clear path for implementation upgrade to WeakMap in 2014

	var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
		rmultiDash = /[A-Z]/g;

	function dataAttr( elem, key, data ) {
		var name;

		// If nothing was found internally, try to fetch any
		// data from the HTML5 data-* attribute
		if ( data === undefined && elem.nodeType === 1 ) {
			name = "data-" + key.replace( rmultiDash, "-$&" ).toLowerCase();
			data = elem.getAttribute( name );

			if ( typeof data === "string" ) {
				try {
					data = data === "true" ? true :
						data === "false" ? false :
						data === "null" ? null :

						// Only convert to a number if it doesn't change the string
						+data + "" === data ? +data :
						rbrace.test( data ) ? jQuery.parseJSON( data ) :
						data;
				} catch ( e ) {}

				// Make sure we set the data so it isn't changed later
				dataUser.set( elem, key, data );
			} else {
				data = undefined;
			}
		}
		return data;
	}

	jQuery.extend( {
		hasData: function( elem ) {
			return dataUser.hasData( elem ) || dataPriv.hasData( elem );
		},

		data: function( elem, name, data ) {
			return dataUser.access( elem, name, data );
		},

		removeData: function( elem, name ) {
			dataUser.remove( elem, name );
		},

		// TODO: Now that all calls to _data and _removeData have been replaced
		// with direct calls to dataPriv methods, these can be deprecated.
		_data: function( elem, name, data ) {
			return dataPriv.access( elem, name, data );
		},

		_removeData: function( elem, name ) {
			dataPriv.remove( elem, name );
		}
	} );

	jQuery.fn.extend( {
		data: function( key, value ) {
			var i, name, data,
				elem = this[ 0 ],
				attrs = elem && elem.attributes;

			// Gets all values
			if ( key === undefined ) {
				if ( this.length ) {
					data = dataUser.get( elem );

					if ( elem.nodeType === 1 && !dataPriv.get( elem, "hasDataAttrs" ) ) {
						i = attrs.length;
						while ( i-- ) {

							// Support: IE11+
							// The attrs elements can be null (#14894)
							if ( attrs[ i ] ) {
								name = attrs[ i ].name;
								if ( name.indexOf( "data-" ) === 0 ) {
									name = jQuery.camelCase( name.slice( 5 ) );
									dataAttr( elem, name, data[ name ] );
								}
							}
						}
						dataPriv.set( elem, "hasDataAttrs", true );
					}
				}

				return data;
			}

			// Sets multiple values
			if ( typeof key === "object" ) {
				return this.each( function() {
					dataUser.set( this, key );
				} );
			}

			return access( this, function( value ) {
				var data, camelKey;

				// The calling jQuery object (element matches) is not empty
				// (and therefore has an element appears at this[ 0 ]) and the
				// `value` parameter was not undefined. An empty jQuery object
				// will result in `undefined` for elem = this[ 0 ] which will
				// throw an exception if an attempt to read a data cache is made.
				if ( elem && value === undefined ) {

					// Attempt to get data from the cache
					// with the key as-is
					data = dataUser.get( elem, key ) ||

						// Try to find dashed key if it exists (gh-2779)
						// This is for 2.2.x only
						dataUser.get( elem, key.replace( rmultiDash, "-$&" ).toLowerCase() );

					if ( data !== undefined ) {
						return data;
					}

					camelKey = jQuery.camelCase( key );

					// Attempt to get data from the cache
					// with the key camelized
					data = dataUser.get( elem, camelKey );
					if ( data !== undefined ) {
						return data;
					}

					// Attempt to "discover" the data in
					// HTML5 custom data-* attrs
					data = dataAttr( elem, camelKey, undefined );
					if ( data !== undefined ) {
						return data;
					}

					// We tried really hard, but the data doesn't exist.
					return;
				}

				// Set the data...
				camelKey = jQuery.camelCase( key );
				this.each( function() {

					// First, attempt to store a copy or reference of any
					// data that might've been store with a camelCased key.
					var data = dataUser.get( this, camelKey );

					// For HTML5 data-* attribute interop, we have to
					// store property names with dashes in a camelCase form.
					// This might not apply to all properties...*
					dataUser.set( this, camelKey, value );

					// *... In the case of properties that might _actually_
					// have dashes, we need to also store a copy of that
					// unchanged property.
					if ( key.indexOf( "-" ) > -1 && data !== undefined ) {
						dataUser.set( this, key, value );
					}
				} );
			}, null, value, arguments.length > 1, null, true );
		},

		removeData: function( key ) {
			return this.each( function() {
				dataUser.remove( this, key );
			} );
		}
	} );


	jQuery.extend( {
		queue: function( elem, type, data ) {
			var queue;

			if ( elem ) {
				type = ( type || "fx" ) + "queue";
				queue = dataPriv.get( elem, type );

				// Speed up dequeue by getting out quickly if this is just a lookup
				if ( data ) {
					if ( !queue || jQuery.isArray( data ) ) {
						queue = dataPriv.access( elem, type, jQuery.makeArray( data ) );
					} else {
						queue.push( data );
					}
				}
				return queue || [];
			}
		},

		dequeue: function( elem, type ) {
			type = type || "fx";

			var queue = jQuery.queue( elem, type ),
				startLength = queue.length,
				fn = queue.shift(),
				hooks = jQuery._queueHooks( elem, type ),
				next = function() {
					jQuery.dequeue( elem, type );
				};

			// If the fx queue is dequeued, always remove the progress sentinel
			if ( fn === "inprogress" ) {
				fn = queue.shift();
				startLength--;
			}

			if ( fn ) {

				// Add a progress sentinel to prevent the fx queue from being
				// automatically dequeued
				if ( type === "fx" ) {
					queue.unshift( "inprogress" );
				}

				// Clear up the last queue stop function
				delete hooks.stop;
				fn.call( elem, next, hooks );
			}

			if ( !startLength && hooks ) {
				hooks.empty.fire();
			}
		},

		// Not public - generate a queueHooks object, or return the current one
		_queueHooks: function( elem, type ) {
			var key = type + "queueHooks";
			return dataPriv.get( elem, key ) || dataPriv.access( elem, key, {
				empty: jQuery.Callbacks( "once memory" ).add( function() {
					dataPriv.remove( elem, [ type + "queue", key ] );
				} )
			} );
		}
	} );

	jQuery.fn.extend( {
		queue: function( type, data ) {
			var setter = 2;

			if ( typeof type !== "string" ) {
				data = type;
				type = "fx";
				setter--;
			}

			if ( arguments.length < setter ) {
				return jQuery.queue( this[ 0 ], type );
			}

			return data === undefined ?
				this :
				this.each( function() {
					var queue = jQuery.queue( this, type, data );

					// Ensure a hooks for this queue
					jQuery._queueHooks( this, type );

					if ( type === "fx" && queue[ 0 ] !== "inprogress" ) {
						jQuery.dequeue( this, type );
					}
				} );
		},
		dequeue: function( type ) {
			return this.each( function() {
				jQuery.dequeue( this, type );
			} );
		},
		clearQueue: function( type ) {
			return this.queue( type || "fx", [] );
		},

		// Get a promise resolved when queues of a certain type
		// are emptied (fx is the type by default)
		promise: function( type, obj ) {
			var tmp,
				count = 1,
				defer = jQuery.Deferred(),
				elements = this,
				i = this.length,
				resolve = function() {
					if ( !( --count ) ) {
						defer.resolveWith( elements, [ elements ] );
					}
				};

			if ( typeof type !== "string" ) {
				obj = type;
				type = undefined;
			}
			type = type || "fx";

			while ( i-- ) {
				tmp = dataPriv.get( elements[ i ], type + "queueHooks" );
				if ( tmp && tmp.empty ) {
					count++;
					tmp.empty.add( resolve );
				}
			}
			resolve();
			return defer.promise( obj );
		}
	} );
	var pnum = ( /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/ ).source;

	var rcssNum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" );


	var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

	var isHidden = function( elem, el ) {

			// isHidden might be called from jQuery#filter function;
			// in that case, element will be second argument
			elem = el || elem;
			return jQuery.css( elem, "display" ) === "none" ||
				!jQuery.contains( elem.ownerDocument, elem );
		};



	function adjustCSS( elem, prop, valueParts, tween ) {
		var adjusted,
			scale = 1,
			maxIterations = 20,
			currentValue = tween ?
				function() { return tween.cur(); } :
				function() { return jQuery.css( elem, prop, "" ); },
			initial = currentValue(),
			unit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

			// Starting value computation is required for potential unit mismatches
			initialInUnit = ( jQuery.cssNumber[ prop ] || unit !== "px" && +initial ) &&
				rcssNum.exec( jQuery.css( elem, prop ) );

		if ( initialInUnit && initialInUnit[ 3 ] !== unit ) {

			// Trust units reported by jQuery.css
			unit = unit || initialInUnit[ 3 ];

			// Make sure we update the tween properties later on
			valueParts = valueParts || [];

			// Iteratively approximate from a nonzero starting point
			initialInUnit = +initial || 1;

			do {

				// If previous iteration zeroed out, double until we get *something*.
				// Use string for doubling so we don't accidentally see scale as unchanged below
				scale = scale || ".5";

				// Adjust and apply
				initialInUnit = initialInUnit / scale;
				jQuery.style( elem, prop, initialInUnit + unit );

			// Update scale, tolerating zero or NaN from tween.cur()
			// Break the loop if scale is unchanged or perfect, or if we've just had enough.
			} while (
				scale !== ( scale = currentValue() / initial ) && scale !== 1 && --maxIterations
			);
		}

		if ( valueParts ) {
			initialInUnit = +initialInUnit || +initial || 0;

			// Apply relative offset (+=/-=) if specified
			adjusted = valueParts[ 1 ] ?
				initialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :
				+valueParts[ 2 ];
			if ( tween ) {
				tween.unit = unit;
				tween.start = initialInUnit;
				tween.end = adjusted;
			}
		}
		return adjusted;
	}
	var rcheckableType = ( /^(?:checkbox|radio)$/i );

	var rtagName = ( /<([\w:-]+)/ );

	var rscriptType = ( /^$|\/(?:java|ecma)script/i );



	// We have to close these tags to support XHTML (#13200)
	var wrapMap = {

		// Support: IE9
		option: [ 1, "<select multiple='multiple'>", "</select>" ],

		// XHTML parsers do not magically insert elements in the
		// same way that tag soup parsers do. So we cannot shorten
		// this by omitting <tbody> or other required elements.
		thead: [ 1, "<table>", "</table>" ],
		col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
		tr: [ 2, "<table><tbody>", "</tbody></table>" ],
		td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

		_default: [ 0, "", "" ]
	};

	// Support: IE9
	wrapMap.optgroup = wrapMap.option;

	wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
	wrapMap.th = wrapMap.td;


	function getAll( context, tag ) {

		// Support: IE9-11+
		// Use typeof to avoid zero-argument method invocation on host objects (#15151)
		var ret = typeof context.getElementsByTagName !== "undefined" ?
				context.getElementsByTagName( tag || "*" ) :
				typeof context.querySelectorAll !== "undefined" ?
					context.querySelectorAll( tag || "*" ) :
				[];

		return tag === undefined || tag && jQuery.nodeName( context, tag ) ?
			jQuery.merge( [ context ], ret ) :
			ret;
	}


	// Mark scripts as having already been evaluated
	function setGlobalEval( elems, refElements ) {
		var i = 0,
			l = elems.length;

		for ( ; i < l; i++ ) {
			dataPriv.set(
				elems[ i ],
				"globalEval",
				!refElements || dataPriv.get( refElements[ i ], "globalEval" )
			);
		}
	}


	var rhtml = /<|&#?\w+;/;

	function buildFragment( elems, context, scripts, selection, ignored ) {
		var elem, tmp, tag, wrap, contains, j,
			fragment = context.createDocumentFragment(),
			nodes = [],
			i = 0,
			l = elems.length;

		for ( ; i < l; i++ ) {
			elem = elems[ i ];

			if ( elem || elem === 0 ) {

				// Add nodes directly
				if ( jQuery.type( elem ) === "object" ) {

					// Support: Android<4.1, PhantomJS<2
					// push.apply(_, arraylike) throws on ancient WebKit
					jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

				// Convert non-html into a text node
				} else if ( !rhtml.test( elem ) ) {
					nodes.push( context.createTextNode( elem ) );

				// Convert html into DOM nodes
				} else {
					tmp = tmp || fragment.appendChild( context.createElement( "div" ) );

					// Deserialize a standard representation
					tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
					wrap = wrapMap[ tag ] || wrapMap._default;
					tmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];

					// Descend through wrappers to the right content
					j = wrap[ 0 ];
					while ( j-- ) {
						tmp = tmp.lastChild;
					}

					// Support: Android<4.1, PhantomJS<2
					// push.apply(_, arraylike) throws on ancient WebKit
					jQuery.merge( nodes, tmp.childNodes );

					// Remember the top-level container
					tmp = fragment.firstChild;

					// Ensure the created nodes are orphaned (#12392)
					tmp.textContent = "";
				}
			}
		}

		// Remove wrapper from fragment
		fragment.textContent = "";

		i = 0;
		while ( ( elem = nodes[ i++ ] ) ) {

			// Skip elements already in the context collection (trac-4087)
			if ( selection && jQuery.inArray( elem, selection ) > -1 ) {
				if ( ignored ) {
					ignored.push( elem );
				}
				continue;
			}

			contains = jQuery.contains( elem.ownerDocument, elem );

			// Append to fragment
			tmp = getAll( fragment.appendChild( elem ), "script" );

			// Preserve script evaluation history
			if ( contains ) {
				setGlobalEval( tmp );
			}

			// Capture executables
			if ( scripts ) {
				j = 0;
				while ( ( elem = tmp[ j++ ] ) ) {
					if ( rscriptType.test( elem.type || "" ) ) {
						scripts.push( elem );
					}
				}
			}
		}

		return fragment;
	}


	( function() {
		var fragment = document.createDocumentFragment(),
			div = fragment.appendChild( document.createElement( "div" ) ),
			input = document.createElement( "input" );

		// Support: Android 4.0-4.3, Safari<=5.1
		// Check state lost if the name is set (#11217)
		// Support: Windows Web Apps (WWA)
		// `name` and `type` must use .setAttribute for WWA (#14901)
		input.setAttribute( "type", "radio" );
		input.setAttribute( "checked", "checked" );
		input.setAttribute( "name", "t" );

		div.appendChild( input );

		// Support: Safari<=5.1, Android<4.2
		// Older WebKit doesn't clone checked state correctly in fragments
		support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

		// Support: IE<=11+
		// Make sure textarea (and checkbox) defaultValue is properly cloned
		div.innerHTML = "<textarea>x</textarea>";
		support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;
	} )();


	var
		rkeyEvent = /^key/,
		rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
		rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

	function returnTrue() {
		return true;
	}

	function returnFalse() {
		return false;
	}

	// Support: IE9
	// See #13393 for more info
	function safeActiveElement() {
		try {
			return document.activeElement;
		} catch ( err ) { }
	}

	function on( elem, types, selector, data, fn, one ) {
		var origFn, type;

		// Types can be a map of types/handlers
		if ( typeof types === "object" ) {

			// ( types-Object, selector, data )
			if ( typeof selector !== "string" ) {

				// ( types-Object, data )
				data = data || selector;
				selector = undefined;
			}
			for ( type in types ) {
				on( elem, type, selector, data, types[ type ], one );
			}
			return elem;
		}

		if ( data == null && fn == null ) {

			// ( types, fn )
			fn = selector;
			data = selector = undefined;
		} else if ( fn == null ) {
			if ( typeof selector === "string" ) {

				// ( types, selector, fn )
				fn = data;
				data = undefined;
			} else {

				// ( types, data, fn )
				fn = data;
				data = selector;
				selector = undefined;
			}
		}
		if ( fn === false ) {
			fn = returnFalse;
		} else if ( !fn ) {
			return elem;
		}

		if ( one === 1 ) {
			origFn = fn;
			fn = function( event ) {

				// Can use an empty set, since event contains the info
				jQuery().off( event );
				return origFn.apply( this, arguments );
			};

			// Use same guid so caller can remove using origFn
			fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
		}
		return elem.each( function() {
			jQuery.event.add( this, types, fn, data, selector );
		} );
	}

	/*
	 * Helper functions for managing events -- not part of the public interface.
	 * Props to Dean Edwards' addEvent library for many of the ideas.
	 */
	jQuery.event = {

		global: {},

		add: function( elem, types, handler, data, selector ) {

			var handleObjIn, eventHandle, tmp,
				events, t, handleObj,
				special, handlers, type, namespaces, origType,
				elemData = dataPriv.get( elem );

			// Don't attach events to noData or text/comment nodes (but allow plain objects)
			if ( !elemData ) {
				return;
			}

			// Caller can pass in an object of custom data in lieu of the handler
			if ( handler.handler ) {
				handleObjIn = handler;
				handler = handleObjIn.handler;
				selector = handleObjIn.selector;
			}

			// Make sure that the handler has a unique ID, used to find/remove it later
			if ( !handler.guid ) {
				handler.guid = jQuery.guid++;
			}

			// Init the element's event structure and main handler, if this is the first
			if ( !( events = elemData.events ) ) {
				events = elemData.events = {};
			}
			if ( !( eventHandle = elemData.handle ) ) {
				eventHandle = elemData.handle = function( e ) {

					// Discard the second event of a jQuery.event.trigger() and
					// when an event is called after a page has unloaded
					return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ?
						jQuery.event.dispatch.apply( elem, arguments ) : undefined;
				};
			}

			// Handle multiple events separated by a space
			types = ( types || "" ).match( rnotwhite ) || [ "" ];
			t = types.length;
			while ( t-- ) {
				tmp = rtypenamespace.exec( types[ t ] ) || [];
				type = origType = tmp[ 1 ];
				namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

				// There *must* be a type, no attaching namespace-only handlers
				if ( !type ) {
					continue;
				}

				// If event changes its type, use the special event handlers for the changed type
				special = jQuery.event.special[ type ] || {};

				// If selector defined, determine special event api type, otherwise given type
				type = ( selector ? special.delegateType : special.bindType ) || type;

				// Update special based on newly reset type
				special = jQuery.event.special[ type ] || {};

				// handleObj is passed to all event handlers
				handleObj = jQuery.extend( {
					type: type,
					origType: origType,
					data: data,
					handler: handler,
					guid: handler.guid,
					selector: selector,
					needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
					namespace: namespaces.join( "." )
				}, handleObjIn );

				// Init the event handler queue if we're the first
				if ( !( handlers = events[ type ] ) ) {
					handlers = events[ type ] = [];
					handlers.delegateCount = 0;

					// Only use addEventListener if the special events handler returns false
					if ( !special.setup ||
						special.setup.call( elem, data, namespaces, eventHandle ) === false ) {

						if ( elem.addEventListener ) {
							elem.addEventListener( type, eventHandle );
						}
					}
				}

				if ( special.add ) {
					special.add.call( elem, handleObj );

					if ( !handleObj.handler.guid ) {
						handleObj.handler.guid = handler.guid;
					}
				}

				// Add to the element's handler list, delegates in front
				if ( selector ) {
					handlers.splice( handlers.delegateCount++, 0, handleObj );
				} else {
					handlers.push( handleObj );
				}

				// Keep track of which events have ever been used, for event optimization
				jQuery.event.global[ type ] = true;
			}

		},

		// Detach an event or set of events from an element
		remove: function( elem, types, handler, selector, mappedTypes ) {

			var j, origCount, tmp,
				events, t, handleObj,
				special, handlers, type, namespaces, origType,
				elemData = dataPriv.hasData( elem ) && dataPriv.get( elem );

			if ( !elemData || !( events = elemData.events ) ) {
				return;
			}

			// Once for each type.namespace in types; type may be omitted
			types = ( types || "" ).match( rnotwhite ) || [ "" ];
			t = types.length;
			while ( t-- ) {
				tmp = rtypenamespace.exec( types[ t ] ) || [];
				type = origType = tmp[ 1 ];
				namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

				// Unbind all events (on this namespace, if provided) for the element
				if ( !type ) {
					for ( type in events ) {
						jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
					}
					continue;
				}

				special = jQuery.event.special[ type ] || {};
				type = ( selector ? special.delegateType : special.bindType ) || type;
				handlers = events[ type ] || [];
				tmp = tmp[ 2 ] &&
					new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" );

				// Remove matching events
				origCount = j = handlers.length;
				while ( j-- ) {
					handleObj = handlers[ j ];

					if ( ( mappedTypes || origType === handleObj.origType ) &&
						( !handler || handler.guid === handleObj.guid ) &&
						( !tmp || tmp.test( handleObj.namespace ) ) &&
						( !selector || selector === handleObj.selector ||
							selector === "**" && handleObj.selector ) ) {
						handlers.splice( j, 1 );

						if ( handleObj.selector ) {
							handlers.delegateCount--;
						}
						if ( special.remove ) {
							special.remove.call( elem, handleObj );
						}
					}
				}

				// Remove generic event handler if we removed something and no more handlers exist
				// (avoids potential for endless recursion during removal of special event handlers)
				if ( origCount && !handlers.length ) {
					if ( !special.teardown ||
						special.teardown.call( elem, namespaces, elemData.handle ) === false ) {

						jQuery.removeEvent( elem, type, elemData.handle );
					}

					delete events[ type ];
				}
			}

			// Remove data and the expando if it's no longer used
			if ( jQuery.isEmptyObject( events ) ) {
				dataPriv.remove( elem, "handle events" );
			}
		},

		dispatch: function( event ) {

			// Make a writable jQuery.Event from the native event object
			event = jQuery.event.fix( event );

			var i, j, ret, matched, handleObj,
				handlerQueue = [],
				args = slice.call( arguments ),
				handlers = ( dataPriv.get( this, "events" ) || {} )[ event.type ] || [],
				special = jQuery.event.special[ event.type ] || {};

			// Use the fix-ed jQuery.Event rather than the (read-only) native event
			args[ 0 ] = event;
			event.delegateTarget = this;

			// Call the preDispatch hook for the mapped type, and let it bail if desired
			if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
				return;
			}

			// Determine handlers
			handlerQueue = jQuery.event.handlers.call( this, event, handlers );

			// Run delegates first; they may want to stop propagation beneath us
			i = 0;
			while ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {
				event.currentTarget = matched.elem;

				j = 0;
				while ( ( handleObj = matched.handlers[ j++ ] ) &&
					!event.isImmediatePropagationStopped() ) {

					// Triggered event must either 1) have no namespace, or 2) have namespace(s)
					// a subset or equal to those in the bound event (both can have no namespace).
					if ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {

						event.handleObj = handleObj;
						event.data = handleObj.data;

						ret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||
							handleObj.handler ).apply( matched.elem, args );

						if ( ret !== undefined ) {
							if ( ( event.result = ret ) === false ) {
								event.preventDefault();
								event.stopPropagation();
							}
						}
					}
				}
			}

			// Call the postDispatch hook for the mapped type
			if ( special.postDispatch ) {
				special.postDispatch.call( this, event );
			}

			return event.result;
		},

		handlers: function( event, handlers ) {
			var i, matches, sel, handleObj,
				handlerQueue = [],
				delegateCount = handlers.delegateCount,
				cur = event.target;

			// Support (at least): Chrome, IE9
			// Find delegate handlers
			// Black-hole SVG <use> instance trees (#13180)
			//
			// Support: Firefox<=42+
			// Avoid non-left-click in FF but don't block IE radio events (#3861, gh-2343)
			if ( delegateCount && cur.nodeType &&
				( event.type !== "click" || isNaN( event.button ) || event.button < 1 ) ) {

				for ( ; cur !== this; cur = cur.parentNode || this ) {

					// Don't check non-elements (#13208)
					// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
					if ( cur.nodeType === 1 && ( cur.disabled !== true || event.type !== "click" ) ) {
						matches = [];
						for ( i = 0; i < delegateCount; i++ ) {
							handleObj = handlers[ i ];

							// Don't conflict with Object.prototype properties (#13203)
							sel = handleObj.selector + " ";

							if ( matches[ sel ] === undefined ) {
								matches[ sel ] = handleObj.needsContext ?
									jQuery( sel, this ).index( cur ) > -1 :
									jQuery.find( sel, this, null, [ cur ] ).length;
							}
							if ( matches[ sel ] ) {
								matches.push( handleObj );
							}
						}
						if ( matches.length ) {
							handlerQueue.push( { elem: cur, handlers: matches } );
						}
					}
				}
			}

			// Add the remaining (directly-bound) handlers
			if ( delegateCount < handlers.length ) {
				handlerQueue.push( { elem: this, handlers: handlers.slice( delegateCount ) } );
			}

			return handlerQueue;
		},

		// Includes some event props shared by KeyEvent and MouseEvent
		props: ( "altKey bubbles cancelable ctrlKey currentTarget detail eventPhase " +
			"metaKey relatedTarget shiftKey target timeStamp view which" ).split( " " ),

		fixHooks: {},

		keyHooks: {
			props: "char charCode key keyCode".split( " " ),
			filter: function( event, original ) {

				// Add which for key events
				if ( event.which == null ) {
					event.which = original.charCode != null ? original.charCode : original.keyCode;
				}

				return event;
			}
		},

		mouseHooks: {
			props: ( "button buttons clientX clientY offsetX offsetY pageX pageY " +
				"screenX screenY toElement" ).split( " " ),
			filter: function( event, original ) {
				var eventDoc, doc, body,
					button = original.button;

				// Calculate pageX/Y if missing and clientX/Y available
				if ( event.pageX == null && original.clientX != null ) {
					eventDoc = event.target.ownerDocument || document;
					doc = eventDoc.documentElement;
					body = eventDoc.body;

					event.pageX = original.clientX +
						( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) -
						( doc && doc.clientLeft || body && body.clientLeft || 0 );
					event.pageY = original.clientY +
						( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) -
						( doc && doc.clientTop  || body && body.clientTop  || 0 );
				}

				// Add which for click: 1 === left; 2 === middle; 3 === right
				// Note: button is not normalized, so don't use it
				if ( !event.which && button !== undefined ) {
					event.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );
				}

				return event;
			}
		},

		fix: function( event ) {
			if ( event[ jQuery.expando ] ) {
				return event;
			}

			// Create a writable copy of the event object and normalize some properties
			var i, prop, copy,
				type = event.type,
				originalEvent = event,
				fixHook = this.fixHooks[ type ];

			if ( !fixHook ) {
				this.fixHooks[ type ] = fixHook =
					rmouseEvent.test( type ) ? this.mouseHooks :
					rkeyEvent.test( type ) ? this.keyHooks :
					{};
			}
			copy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;

			event = new jQuery.Event( originalEvent );

			i = copy.length;
			while ( i-- ) {
				prop = copy[ i ];
				event[ prop ] = originalEvent[ prop ];
			}

			// Support: Cordova 2.5 (WebKit) (#13255)
			// All events should have a target; Cordova deviceready doesn't
			if ( !event.target ) {
				event.target = document;
			}

			// Support: Safari 6.0+, Chrome<28
			// Target should not be a text node (#504, #13143)
			if ( event.target.nodeType === 3 ) {
				event.target = event.target.parentNode;
			}

			return fixHook.filter ? fixHook.filter( event, originalEvent ) : event;
		},

		special: {
			load: {

				// Prevent triggered image.load events from bubbling to window.load
				noBubble: true
			},
			focus: {

				// Fire native event if possible so blur/focus sequence is correct
				trigger: function() {
					if ( this !== safeActiveElement() && this.focus ) {
						this.focus();
						return false;
					}
				},
				delegateType: "focusin"
			},
			blur: {
				trigger: function() {
					if ( this === safeActiveElement() && this.blur ) {
						this.blur();
						return false;
					}
				},
				delegateType: "focusout"
			},
			click: {

				// For checkbox, fire native event so checked state will be right
				trigger: function() {
					if ( this.type === "checkbox" && this.click && jQuery.nodeName( this, "input" ) ) {
						this.click();
						return false;
					}
				},

				// For cross-browser consistency, don't fire native .click() on links
				_default: function( event ) {
					return jQuery.nodeName( event.target, "a" );
				}
			},

			beforeunload: {
				postDispatch: function( event ) {

					// Support: Firefox 20+
					// Firefox doesn't alert if the returnValue field is not set.
					if ( event.result !== undefined && event.originalEvent ) {
						event.originalEvent.returnValue = event.result;
					}
				}
			}
		}
	};

	jQuery.removeEvent = function( elem, type, handle ) {

		// This "if" is needed for plain objects
		if ( elem.removeEventListener ) {
			elem.removeEventListener( type, handle );
		}
	};

	jQuery.Event = function( src, props ) {

		// Allow instantiation without the 'new' keyword
		if ( !( this instanceof jQuery.Event ) ) {
			return new jQuery.Event( src, props );
		}

		// Event object
		if ( src && src.type ) {
			this.originalEvent = src;
			this.type = src.type;

			// Events bubbling up the document may have been marked as prevented
			// by a handler lower down the tree; reflect the correct value.
			this.isDefaultPrevented = src.defaultPrevented ||
					src.defaultPrevented === undefined &&

					// Support: Android<4.0
					src.returnValue === false ?
				returnTrue :
				returnFalse;

		// Event type
		} else {
			this.type = src;
		}

		// Put explicitly provided properties onto the event object
		if ( props ) {
			jQuery.extend( this, props );
		}

		// Create a timestamp if incoming event doesn't have one
		this.timeStamp = src && src.timeStamp || jQuery.now();

		// Mark it as fixed
		this[ jQuery.expando ] = true;
	};

	// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
	// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
	jQuery.Event.prototype = {
		constructor: jQuery.Event,
		isDefaultPrevented: returnFalse,
		isPropagationStopped: returnFalse,
		isImmediatePropagationStopped: returnFalse,
		isSimulated: false,

		preventDefault: function() {
			var e = this.originalEvent;

			this.isDefaultPrevented = returnTrue;

			if ( e && !this.isSimulated ) {
				e.preventDefault();
			}
		},
		stopPropagation: function() {
			var e = this.originalEvent;

			this.isPropagationStopped = returnTrue;

			if ( e && !this.isSimulated ) {
				e.stopPropagation();
			}
		},
		stopImmediatePropagation: function() {
			var e = this.originalEvent;

			this.isImmediatePropagationStopped = returnTrue;

			if ( e && !this.isSimulated ) {
				e.stopImmediatePropagation();
			}

			this.stopPropagation();
		}
	};

	// Create mouseenter/leave events using mouseover/out and event-time checks
	// so that event delegation works in jQuery.
	// Do the same for pointerenter/pointerleave and pointerover/pointerout
	//
	// Support: Safari 7 only
	// Safari sends mouseenter too often; see:
	// https://code.google.com/p/chromium/issues/detail?id=470258
	// for the description of the bug (it existed in older Chrome versions as well).
	jQuery.each( {
		mouseenter: "mouseover",
		mouseleave: "mouseout",
		pointerenter: "pointerover",
		pointerleave: "pointerout"
	}, function( orig, fix ) {
		jQuery.event.special[ orig ] = {
			delegateType: fix,
			bindType: fix,

			handle: function( event ) {
				var ret,
					target = this,
					related = event.relatedTarget,
					handleObj = event.handleObj;

				// For mouseenter/leave call the handler if related is outside the target.
				// NB: No relatedTarget if the mouse left/entered the browser window
				if ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {
					event.type = handleObj.origType;
					ret = handleObj.handler.apply( this, arguments );
					event.type = fix;
				}
				return ret;
			}
		};
	} );

	jQuery.fn.extend( {
		on: function( types, selector, data, fn ) {
			return on( this, types, selector, data, fn );
		},
		one: function( types, selector, data, fn ) {
			return on( this, types, selector, data, fn, 1 );
		},
		off: function( types, selector, fn ) {
			var handleObj, type;
			if ( types && types.preventDefault && types.handleObj ) {

				// ( event )  dispatched jQuery.Event
				handleObj = types.handleObj;
				jQuery( types.delegateTarget ).off(
					handleObj.namespace ?
						handleObj.origType + "." + handleObj.namespace :
						handleObj.origType,
					handleObj.selector,
					handleObj.handler
				);
				return this;
			}
			if ( typeof types === "object" ) {

				// ( types-object [, selector] )
				for ( type in types ) {
					this.off( type, selector, types[ type ] );
				}
				return this;
			}
			if ( selector === false || typeof selector === "function" ) {

				// ( types [, fn] )
				fn = selector;
				selector = undefined;
			}
			if ( fn === false ) {
				fn = returnFalse;
			}
			return this.each( function() {
				jQuery.event.remove( this, types, fn, selector );
			} );
		}
	} );


	var
		rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi,

		// Support: IE 10-11, Edge 10240+
		// In IE/Edge using regex groups here causes severe slowdowns.
		// See https://connect.microsoft.com/IE/feedback/details/1736512/
		rnoInnerhtml = /<script|<style|<link/i,

		// checked="checked" or checked
		rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
		rscriptTypeMasked = /^true\/(.*)/,
		rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

	// Manipulating tables requires a tbody
	function manipulationTarget( elem, content ) {
		return jQuery.nodeName( elem, "table" ) &&
			jQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ?

			elem.getElementsByTagName( "tbody" )[ 0 ] ||
				elem.appendChild( elem.ownerDocument.createElement( "tbody" ) ) :
			elem;
	}

	// Replace/restore the type attribute of script elements for safe DOM manipulation
	function disableScript( elem ) {
		elem.type = ( elem.getAttribute( "type" ) !== null ) + "/" + elem.type;
		return elem;
	}
	function restoreScript( elem ) {
		var match = rscriptTypeMasked.exec( elem.type );

		if ( match ) {
			elem.type = match[ 1 ];
		} else {
			elem.removeAttribute( "type" );
		}

		return elem;
	}

	function cloneCopyEvent( src, dest ) {
		var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;

		if ( dest.nodeType !== 1 ) {
			return;
		}

		// 1. Copy private data: events, handlers, etc.
		if ( dataPriv.hasData( src ) ) {
			pdataOld = dataPriv.access( src );
			pdataCur = dataPriv.set( dest, pdataOld );
			events = pdataOld.events;

			if ( events ) {
				delete pdataCur.handle;
				pdataCur.events = {};

				for ( type in events ) {
					for ( i = 0, l = events[ type ].length; i < l; i++ ) {
						jQuery.event.add( dest, type, events[ type ][ i ] );
					}
				}
			}
		}

		// 2. Copy user data
		if ( dataUser.hasData( src ) ) {
			udataOld = dataUser.access( src );
			udataCur = jQuery.extend( {}, udataOld );

			dataUser.set( dest, udataCur );
		}
	}

	// Fix IE bugs, see support tests
	function fixInput( src, dest ) {
		var nodeName = dest.nodeName.toLowerCase();

		// Fails to persist the checked state of a cloned checkbox or radio button.
		if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
			dest.checked = src.checked;

		// Fails to return the selected option to the default selected state when cloning options
		} else if ( nodeName === "input" || nodeName === "textarea" ) {
			dest.defaultValue = src.defaultValue;
		}
	}

	function domManip( collection, args, callback, ignored ) {

		// Flatten any nested arrays
		args = concat.apply( [], args );

		var fragment, first, scripts, hasScripts, node, doc,
			i = 0,
			l = collection.length,
			iNoClone = l - 1,
			value = args[ 0 ],
			isFunction = jQuery.isFunction( value );

		// We can't cloneNode fragments that contain checked, in WebKit
		if ( isFunction ||
				( l > 1 && typeof value === "string" &&
					!support.checkClone && rchecked.test( value ) ) ) {
			return collection.each( function( index ) {
				var self = collection.eq( index );
				if ( isFunction ) {
					args[ 0 ] = value.call( this, index, self.html() );
				}
				domManip( self, args, callback, ignored );
			} );
		}

		if ( l ) {
			fragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );
			first = fragment.firstChild;

			if ( fragment.childNodes.length === 1 ) {
				fragment = first;
			}

			// Require either new content or an interest in ignored elements to invoke the callback
			if ( first || ignored ) {
				scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
				hasScripts = scripts.length;

				// Use the original fragment for the last item
				// instead of the first because it can end up
				// being emptied incorrectly in certain situations (#8070).
				for ( ; i < l; i++ ) {
					node = fragment;

					if ( i !== iNoClone ) {
						node = jQuery.clone( node, true, true );

						// Keep references to cloned scripts for later restoration
						if ( hasScripts ) {

							// Support: Android<4.1, PhantomJS<2
							// push.apply(_, arraylike) throws on ancient WebKit
							jQuery.merge( scripts, getAll( node, "script" ) );
						}
					}

					callback.call( collection[ i ], node, i );
				}

				if ( hasScripts ) {
					doc = scripts[ scripts.length - 1 ].ownerDocument;

					// Reenable scripts
					jQuery.map( scripts, restoreScript );

					// Evaluate executable scripts on first document insertion
					for ( i = 0; i < hasScripts; i++ ) {
						node = scripts[ i ];
						if ( rscriptType.test( node.type || "" ) &&
							!dataPriv.access( node, "globalEval" ) &&
							jQuery.contains( doc, node ) ) {

							if ( node.src ) {

								// Optional AJAX dependency, but won't run scripts if not present
								if ( jQuery._evalUrl ) {
									jQuery._evalUrl( node.src );
								}
							} else {
								jQuery.globalEval( node.textContent.replace( rcleanScript, "" ) );
							}
						}
					}
				}
			}
		}

		return collection;
	}

	function remove( elem, selector, keepData ) {
		var node,
			nodes = selector ? jQuery.filter( selector, elem ) : elem,
			i = 0;

		for ( ; ( node = nodes[ i ] ) != null; i++ ) {
			if ( !keepData && node.nodeType === 1 ) {
				jQuery.cleanData( getAll( node ) );
			}

			if ( node.parentNode ) {
				if ( keepData && jQuery.contains( node.ownerDocument, node ) ) {
					setGlobalEval( getAll( node, "script" ) );
				}
				node.parentNode.removeChild( node );
			}
		}

		return elem;
	}

	jQuery.extend( {
		htmlPrefilter: function( html ) {
			return html.replace( rxhtmlTag, "<$1></$2>" );
		},

		clone: function( elem, dataAndEvents, deepDataAndEvents ) {
			var i, l, srcElements, destElements,
				clone = elem.cloneNode( true ),
				inPage = jQuery.contains( elem.ownerDocument, elem );

			// Fix IE cloning issues
			if ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&
					!jQuery.isXMLDoc( elem ) ) {

				// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2
				destElements = getAll( clone );
				srcElements = getAll( elem );

				for ( i = 0, l = srcElements.length; i < l; i++ ) {
					fixInput( srcElements[ i ], destElements[ i ] );
				}
			}

			// Copy the events from the original to the clone
			if ( dataAndEvents ) {
				if ( deepDataAndEvents ) {
					srcElements = srcElements || getAll( elem );
					destElements = destElements || getAll( clone );

					for ( i = 0, l = srcElements.length; i < l; i++ ) {
						cloneCopyEvent( srcElements[ i ], destElements[ i ] );
					}
				} else {
					cloneCopyEvent( elem, clone );
				}
			}

			// Preserve script evaluation history
			destElements = getAll( clone, "script" );
			if ( destElements.length > 0 ) {
				setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
			}

			// Return the cloned set
			return clone;
		},

		cleanData: function( elems ) {
			var data, elem, type,
				special = jQuery.event.special,
				i = 0;

			for ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {
				if ( acceptData( elem ) ) {
					if ( ( data = elem[ dataPriv.expando ] ) ) {
						if ( data.events ) {
							for ( type in data.events ) {
								if ( special[ type ] ) {
									jQuery.event.remove( elem, type );

								// This is a shortcut to avoid jQuery.event.remove's overhead
								} else {
									jQuery.removeEvent( elem, type, data.handle );
								}
							}
						}

						// Support: Chrome <= 35-45+
						// Assign undefined instead of using delete, see Data#remove
						elem[ dataPriv.expando ] = undefined;
					}
					if ( elem[ dataUser.expando ] ) {

						// Support: Chrome <= 35-45+
						// Assign undefined instead of using delete, see Data#remove
						elem[ dataUser.expando ] = undefined;
					}
				}
			}
		}
	} );

	jQuery.fn.extend( {

		// Keep domManip exposed until 3.0 (gh-2225)
		domManip: domManip,

		detach: function( selector ) {
			return remove( this, selector, true );
		},

		remove: function( selector ) {
			return remove( this, selector );
		},

		text: function( value ) {
			return access( this, function( value ) {
				return value === undefined ?
					jQuery.text( this ) :
					this.empty().each( function() {
						if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
							this.textContent = value;
						}
					} );
			}, null, value, arguments.length );
		},

		append: function() {
			return domManip( this, arguments, function( elem ) {
				if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
					var target = manipulationTarget( this, elem );
					target.appendChild( elem );
				}
			} );
		},

		prepend: function() {
			return domManip( this, arguments, function( elem ) {
				if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
					var target = manipulationTarget( this, elem );
					target.insertBefore( elem, target.firstChild );
				}
			} );
		},

		before: function() {
			return domManip( this, arguments, function( elem ) {
				if ( this.parentNode ) {
					this.parentNode.insertBefore( elem, this );
				}
			} );
		},

		after: function() {
			return domManip( this, arguments, function( elem ) {
				if ( this.parentNode ) {
					this.parentNode.insertBefore( elem, this.nextSibling );
				}
			} );
		},

		empty: function() {
			var elem,
				i = 0;

			for ( ; ( elem = this[ i ] ) != null; i++ ) {
				if ( elem.nodeType === 1 ) {

					// Prevent memory leaks
					jQuery.cleanData( getAll( elem, false ) );

					// Remove any remaining nodes
					elem.textContent = "";
				}
			}

			return this;
		},

		clone: function( dataAndEvents, deepDataAndEvents ) {
			dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
			deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

			return this.map( function() {
				return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
			} );
		},

		html: function( value ) {
			return access( this, function( value ) {
				var elem = this[ 0 ] || {},
					i = 0,
					l = this.length;

				if ( value === undefined && elem.nodeType === 1 ) {
					return elem.innerHTML;
				}

				// See if we can take a shortcut and just use innerHTML
				if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
					!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

					value = jQuery.htmlPrefilter( value );

					try {
						for ( ; i < l; i++ ) {
							elem = this[ i ] || {};

							// Remove element nodes and prevent memory leaks
							if ( elem.nodeType === 1 ) {
								jQuery.cleanData( getAll( elem, false ) );
								elem.innerHTML = value;
							}
						}

						elem = 0;

					// If using innerHTML throws an exception, use the fallback method
					} catch ( e ) {}
				}

				if ( elem ) {
					this.empty().append( value );
				}
			}, null, value, arguments.length );
		},

		replaceWith: function() {
			var ignored = [];

			// Make the changes, replacing each non-ignored context element with the new content
			return domManip( this, arguments, function( elem ) {
				var parent = this.parentNode;

				if ( jQuery.inArray( this, ignored ) < 0 ) {
					jQuery.cleanData( getAll( this ) );
					if ( parent ) {
						parent.replaceChild( elem, this );
					}
				}

			// Force callback invocation
			}, ignored );
		}
	} );

	jQuery.each( {
		appendTo: "append",
		prependTo: "prepend",
		insertBefore: "before",
		insertAfter: "after",
		replaceAll: "replaceWith"
	}, function( name, original ) {
		jQuery.fn[ name ] = function( selector ) {
			var elems,
				ret = [],
				insert = jQuery( selector ),
				last = insert.length - 1,
				i = 0;

			for ( ; i <= last; i++ ) {
				elems = i === last ? this : this.clone( true );
				jQuery( insert[ i ] )[ original ]( elems );

				// Support: QtWebKit
				// .get() because push.apply(_, arraylike) throws
				push.apply( ret, elems.get() );
			}

			return this.pushStack( ret );
		};
	} );


	var iframe,
		elemdisplay = {

			// Support: Firefox
			// We have to pre-define these values for FF (#10227)
			HTML: "block",
			BODY: "block"
		};

	/**
	 * Retrieve the actual display of a element
	 * @param {String} name nodeName of the element
	 * @param {Object} doc Document object
	 */

	// Called only from within defaultDisplay
	function actualDisplay( name, doc ) {
		var elem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),

			display = jQuery.css( elem[ 0 ], "display" );

		// We don't have any data stored on the element,
		// so use "detach" method as fast way to get rid of the element
		elem.detach();

		return display;
	}

	/**
	 * Try to determine the default display value of an element
	 * @param {String} nodeName
	 */
	function defaultDisplay( nodeName ) {
		var doc = document,
			display = elemdisplay[ nodeName ];

		if ( !display ) {
			display = actualDisplay( nodeName, doc );

			// If the simple way fails, read from inside an iframe
			if ( display === "none" || !display ) {

				// Use the already-created iframe if possible
				iframe = ( iframe || jQuery( "<iframe frameborder='0' width='0' height='0'/>" ) )
					.appendTo( doc.documentElement );

				// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse
				doc = iframe[ 0 ].contentDocument;

				// Support: IE
				doc.write();
				doc.close();

				display = actualDisplay( nodeName, doc );
				iframe.detach();
			}

			// Store the correct default display
			elemdisplay[ nodeName ] = display;
		}

		return display;
	}
	var rmargin = ( /^margin/ );

	var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );

	var getStyles = function( elem ) {

			// Support: IE<=11+, Firefox<=30+ (#15098, #14150)
			// IE throws on elements created in popups
			// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
			var view = elem.ownerDocument.defaultView;

			if ( !view || !view.opener ) {
				view = window;
			}

			return view.getComputedStyle( elem );
		};

	var swap = function( elem, options, callback, args ) {
		var ret, name,
			old = {};

		// Remember the old values, and insert the new ones
		for ( name in options ) {
			old[ name ] = elem.style[ name ];
			elem.style[ name ] = options[ name ];
		}

		ret = callback.apply( elem, args || [] );

		// Revert the old values
		for ( name in options ) {
			elem.style[ name ] = old[ name ];
		}

		return ret;
	};


	var documentElement = document.documentElement;



	( function() {
		var pixelPositionVal, boxSizingReliableVal, pixelMarginRightVal, reliableMarginLeftVal,
			container = document.createElement( "div" ),
			div = document.createElement( "div" );

		// Finish early in limited (non-browser) environments
		if ( !div.style ) {
			return;
		}

		// Support: IE9-11+
		// Style of cloned element affects source element cloned (#8908)
		div.style.backgroundClip = "content-box";
		div.cloneNode( true ).style.backgroundClip = "";
		support.clearCloneStyle = div.style.backgroundClip === "content-box";

		container.style.cssText = "border:0;width:8px;height:0;top:0;left:-9999px;" +
			"padding:0;margin-top:1px;position:absolute";
		container.appendChild( div );

		// Executing both pixelPosition & boxSizingReliable tests require only one layout
		// so they're executed at the same time to save the second computation.
		function computeStyleTests() {
			div.style.cssText =

				// Support: Firefox<29, Android 2.3
				// Vendor-prefix box-sizing
				"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;" +
				"position:relative;display:block;" +
				"margin:auto;border:1px;padding:1px;" +
				"top:1%;width:50%";
			div.innerHTML = "";
			documentElement.appendChild( container );

			var divStyle = window.getComputedStyle( div );
			pixelPositionVal = divStyle.top !== "1%";
			reliableMarginLeftVal = divStyle.marginLeft === "2px";
			boxSizingReliableVal = divStyle.width === "4px";

			// Support: Android 4.0 - 4.3 only
			// Some styles come back with percentage values, even though they shouldn't
			div.style.marginRight = "50%";
			pixelMarginRightVal = divStyle.marginRight === "4px";

			documentElement.removeChild( container );
		}

		jQuery.extend( support, {
			pixelPosition: function() {

				// This test is executed only once but we still do memoizing
				// since we can use the boxSizingReliable pre-computing.
				// No need to check if the test was already performed, though.
				computeStyleTests();
				return pixelPositionVal;
			},
			boxSizingReliable: function() {
				if ( boxSizingReliableVal == null ) {
					computeStyleTests();
				}
				return boxSizingReliableVal;
			},
			pixelMarginRight: function() {

				// Support: Android 4.0-4.3
				// We're checking for boxSizingReliableVal here instead of pixelMarginRightVal
				// since that compresses better and they're computed together anyway.
				if ( boxSizingReliableVal == null ) {
					computeStyleTests();
				}
				return pixelMarginRightVal;
			},
			reliableMarginLeft: function() {

				// Support: IE <=8 only, Android 4.0 - 4.3 only, Firefox <=3 - 37
				if ( boxSizingReliableVal == null ) {
					computeStyleTests();
				}
				return reliableMarginLeftVal;
			},
			reliableMarginRight: function() {

				// Support: Android 2.3
				// Check if div with explicit width and no margin-right incorrectly
				// gets computed margin-right based on width of container. (#3333)
				// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
				// This support function is only executed once so no memoizing is needed.
				var ret,
					marginDiv = div.appendChild( document.createElement( "div" ) );

				// Reset CSS: box-sizing; display; margin; border; padding
				marginDiv.style.cssText = div.style.cssText =

					// Support: Android 2.3
					// Vendor-prefix box-sizing
					"-webkit-box-sizing:content-box;box-sizing:content-box;" +
					"display:block;margin:0;border:0;padding:0";
				marginDiv.style.marginRight = marginDiv.style.width = "0";
				div.style.width = "1px";
				documentElement.appendChild( container );

				ret = !parseFloat( window.getComputedStyle( marginDiv ).marginRight );

				documentElement.removeChild( container );
				div.removeChild( marginDiv );

				return ret;
			}
		} );
	} )();


	function curCSS( elem, name, computed ) {
		var width, minWidth, maxWidth, ret,
			style = elem.style;

		computed = computed || getStyles( elem );
		ret = computed ? computed.getPropertyValue( name ) || computed[ name ] : undefined;

		// Support: Opera 12.1x only
		// Fall back to style even without computed
		// computed is undefined for elems on document fragments
		if ( ( ret === "" || ret === undefined ) && !jQuery.contains( elem.ownerDocument, elem ) ) {
			ret = jQuery.style( elem, name );
		}

		// Support: IE9
		// getPropertyValue is only needed for .css('filter') (#12537)
		if ( computed ) {

			// A tribute to the "awesome hack by Dean Edwards"
			// Android Browser returns percentage for some values,
			// but width seems to be reliably pixels.
			// This is against the CSSOM draft spec:
			// http://dev.w3.org/csswg/cssom/#resolved-values
			if ( !support.pixelMarginRight() && rnumnonpx.test( ret ) && rmargin.test( name ) ) {

				// Remember the original values
				width = style.width;
				minWidth = style.minWidth;
				maxWidth = style.maxWidth;

				// Put in the new values to get a computed value out
				style.minWidth = style.maxWidth = style.width = ret;
				ret = computed.width;

				// Revert the changed values
				style.width = width;
				style.minWidth = minWidth;
				style.maxWidth = maxWidth;
			}
		}

		return ret !== undefined ?

			// Support: IE9-11+
			// IE returns zIndex value as an integer.
			ret + "" :
			ret;
	}


	function addGetHookIf( conditionFn, hookFn ) {

		// Define the hook, we'll check on the first run if it's really needed.
		return {
			get: function() {
				if ( conditionFn() ) {

					// Hook not needed (or it's not possible to use it due
					// to missing dependency), remove it.
					delete this.get;
					return;
				}

				// Hook needed; redefine it so that the support test is not executed again.
				return ( this.get = hookFn ).apply( this, arguments );
			}
		};
	}


	var

		// Swappable if display is none or starts with table
		// except "table", "table-cell", or "table-caption"
		// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
		rdisplayswap = /^(none|table(?!-c[ea]).+)/,

		cssShow = { position: "absolute", visibility: "hidden", display: "block" },
		cssNormalTransform = {
			letterSpacing: "0",
			fontWeight: "400"
		},

		cssPrefixes = [ "Webkit", "O", "Moz", "ms" ],
		emptyStyle = document.createElement( "div" ).style;

	// Return a css property mapped to a potentially vendor prefixed property
	function vendorPropName( name ) {

		// Shortcut for names that are not vendor prefixed
		if ( name in emptyStyle ) {
			return name;
		}

		// Check for vendor prefixed names
		var capName = name[ 0 ].toUpperCase() + name.slice( 1 ),
			i = cssPrefixes.length;

		while ( i-- ) {
			name = cssPrefixes[ i ] + capName;
			if ( name in emptyStyle ) {
				return name;
			}
		}
	}

	function setPositiveNumber( elem, value, subtract ) {

		// Any relative (+/-) values have already been
		// normalized at this point
		var matches = rcssNum.exec( value );
		return matches ?

			// Guard against undefined "subtract", e.g., when used as in cssHooks
			Math.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || "px" ) :
			value;
	}

	function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
		var i = extra === ( isBorderBox ? "border" : "content" ) ?

			// If we already have the right measurement, avoid augmentation
			4 :

			// Otherwise initialize for horizontal or vertical properties
			name === "width" ? 1 : 0,

			val = 0;

		for ( ; i < 4; i += 2 ) {

			// Both box models exclude margin, so add it if we want it
			if ( extra === "margin" ) {
				val += jQuery.css( elem, extra + cssExpand[ i ], true, styles );
			}

			if ( isBorderBox ) {

				// border-box includes padding, so remove it if we want content
				if ( extra === "content" ) {
					val -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
				}

				// At this point, extra isn't border nor margin, so remove border
				if ( extra !== "margin" ) {
					val -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
				}
			} else {

				// At this point, extra isn't content, so add padding
				val += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

				// At this point, extra isn't content nor padding, so add border
				if ( extra !== "padding" ) {
					val += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
				}
			}
		}

		return val;
	}

	function getWidthOrHeight( elem, name, extra ) {

		// Start with offset property, which is equivalent to the border-box value
		var valueIsBorderBox = true,
			val = name === "width" ? elem.offsetWidth : elem.offsetHeight,
			styles = getStyles( elem ),
			isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

		// Some non-html elements return undefined for offsetWidth, so check for null/undefined
		// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285
		// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668
		if ( val <= 0 || val == null ) {

			// Fall back to computed then uncomputed css if necessary
			val = curCSS( elem, name, styles );
			if ( val < 0 || val == null ) {
				val = elem.style[ name ];
			}

			// Computed unit is not pixels. Stop here and return.
			if ( rnumnonpx.test( val ) ) {
				return val;
			}

			// Check for style in case a browser which returns unreliable values
			// for getComputedStyle silently falls back to the reliable elem.style
			valueIsBorderBox = isBorderBox &&
				( support.boxSizingReliable() || val === elem.style[ name ] );

			// Normalize "", auto, and prepare for extra
			val = parseFloat( val ) || 0;
		}

		// Use the active box-sizing model to add/subtract irrelevant styles
		return ( val +
			augmentWidthOrHeight(
				elem,
				name,
				extra || ( isBorderBox ? "border" : "content" ),
				valueIsBorderBox,
				styles
			)
		) + "px";
	}

	function showHide( elements, show ) {
		var display, elem, hidden,
			values = [],
			index = 0,
			length = elements.length;

		for ( ; index < length; index++ ) {
			elem = elements[ index ];
			if ( !elem.style ) {
				continue;
			}

			values[ index ] = dataPriv.get( elem, "olddisplay" );
			display = elem.style.display;
			if ( show ) {

				// Reset the inline display of this element to learn if it is
				// being hidden by cascaded rules or not
				if ( !values[ index ] && display === "none" ) {
					elem.style.display = "";
				}

				// Set elements which have been overridden with display: none
				// in a stylesheet to whatever the default browser style is
				// for such an element
				if ( elem.style.display === "" && isHidden( elem ) ) {
					values[ index ] = dataPriv.access(
						elem,
						"olddisplay",
						defaultDisplay( elem.nodeName )
					);
				}
			} else {
				hidden = isHidden( elem );

				if ( display !== "none" || !hidden ) {
					dataPriv.set(
						elem,
						"olddisplay",
						hidden ? display : jQuery.css( elem, "display" )
					);
				}
			}
		}

		// Set the display of most of the elements in a second loop
		// to avoid the constant reflow
		for ( index = 0; index < length; index++ ) {
			elem = elements[ index ];
			if ( !elem.style ) {
				continue;
			}
			if ( !show || elem.style.display === "none" || elem.style.display === "" ) {
				elem.style.display = show ? values[ index ] || "" : "none";
			}
		}

		return elements;
	}

	jQuery.extend( {

		// Add in style property hooks for overriding the default
		// behavior of getting and setting a style property
		cssHooks: {
			opacity: {
				get: function( elem, computed ) {
					if ( computed ) {

						// We should always get a number back from opacity
						var ret = curCSS( elem, "opacity" );
						return ret === "" ? "1" : ret;
					}
				}
			}
		},

		// Don't automatically add "px" to these possibly-unitless properties
		cssNumber: {
			"animationIterationCount": true,
			"columnCount": true,
			"fillOpacity": true,
			"flexGrow": true,
			"flexShrink": true,
			"fontWeight": true,
			"lineHeight": true,
			"opacity": true,
			"order": true,
			"orphans": true,
			"widows": true,
			"zIndex": true,
			"zoom": true
		},

		// Add in properties whose names you wish to fix before
		// setting or getting the value
		cssProps: {
			"float": "cssFloat"
		},

		// Get and set the style property on a DOM Node
		style: function( elem, name, value, extra ) {

			// Don't set styles on text and comment nodes
			if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
				return;
			}

			// Make sure that we're working with the right name
			var ret, type, hooks,
				origName = jQuery.camelCase( name ),
				style = elem.style;

			name = jQuery.cssProps[ origName ] ||
				( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );

			// Gets hook for the prefixed version, then unprefixed version
			hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

			// Check if we're setting a value
			if ( value !== undefined ) {
				type = typeof value;

				// Convert "+=" or "-=" to relative numbers (#7345)
				if ( type === "string" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {
					value = adjustCSS( elem, name, ret );

					// Fixes bug #9237
					type = "number";
				}

				// Make sure that null and NaN values aren't set (#7116)
				if ( value == null || value !== value ) {
					return;
				}

				// If a number was passed in, add the unit (except for certain CSS properties)
				if ( type === "number" ) {
					value += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? "" : "px" );
				}

				// Support: IE9-11+
				// background-* props affect original clone's values
				if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
					style[ name ] = "inherit";
				}

				// If a hook was provided, use that value, otherwise just set the specified value
				if ( !hooks || !( "set" in hooks ) ||
					( value = hooks.set( elem, value, extra ) ) !== undefined ) {

					style[ name ] = value;
				}

			} else {

				// If a hook was provided get the non-computed value from there
				if ( hooks && "get" in hooks &&
					( ret = hooks.get( elem, false, extra ) ) !== undefined ) {

					return ret;
				}

				// Otherwise just get the value from the style object
				return style[ name ];
			}
		},

		css: function( elem, name, extra, styles ) {
			var val, num, hooks,
				origName = jQuery.camelCase( name );

			// Make sure that we're working with the right name
			name = jQuery.cssProps[ origName ] ||
				( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );

			// Try prefixed name followed by the unprefixed name
			hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

			// If a hook was provided get the computed value from there
			if ( hooks && "get" in hooks ) {
				val = hooks.get( elem, true, extra );
			}

			// Otherwise, if a way to get the computed value exists, use that
			if ( val === undefined ) {
				val = curCSS( elem, name, styles );
			}

			// Convert "normal" to computed value
			if ( val === "normal" && name in cssNormalTransform ) {
				val = cssNormalTransform[ name ];
			}

			// Make numeric if forced or a qualifier was provided and val looks numeric
			if ( extra === "" || extra ) {
				num = parseFloat( val );
				return extra === true || isFinite( num ) ? num || 0 : val;
			}
			return val;
		}
	} );

	jQuery.each( [ "height", "width" ], function( i, name ) {
		jQuery.cssHooks[ name ] = {
			get: function( elem, computed, extra ) {
				if ( computed ) {

					// Certain elements can have dimension info if we invisibly show them
					// but it must have a current display style that would benefit
					return rdisplayswap.test( jQuery.css( elem, "display" ) ) &&
						elem.offsetWidth === 0 ?
							swap( elem, cssShow, function() {
								return getWidthOrHeight( elem, name, extra );
							} ) :
							getWidthOrHeight( elem, name, extra );
				}
			},

			set: function( elem, value, extra ) {
				var matches,
					styles = extra && getStyles( elem ),
					subtract = extra && augmentWidthOrHeight(
						elem,
						name,
						extra,
						jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
						styles
					);

				// Convert to pixels if value adjustment is needed
				if ( subtract && ( matches = rcssNum.exec( value ) ) &&
					( matches[ 3 ] || "px" ) !== "px" ) {

					elem.style[ name ] = value;
					value = jQuery.css( elem, name );
				}

				return setPositiveNumber( elem, value, subtract );
			}
		};
	} );

	jQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,
		function( elem, computed ) {
			if ( computed ) {
				return ( parseFloat( curCSS( elem, "marginLeft" ) ) ||
					elem.getBoundingClientRect().left -
						swap( elem, { marginLeft: 0 }, function() {
							return elem.getBoundingClientRect().left;
						} )
					) + "px";
			}
		}
	);

	// Support: Android 2.3
	jQuery.cssHooks.marginRight = addGetHookIf( support.reliableMarginRight,
		function( elem, computed ) {
			if ( computed ) {
				return swap( elem, { "display": "inline-block" },
					curCSS, [ elem, "marginRight" ] );
			}
		}
	);

	// These hooks are used by animate to expand properties
	jQuery.each( {
		margin: "",
		padding: "",
		border: "Width"
	}, function( prefix, suffix ) {
		jQuery.cssHooks[ prefix + suffix ] = {
			expand: function( value ) {
				var i = 0,
					expanded = {},

					// Assumes a single number if not a string
					parts = typeof value === "string" ? value.split( " " ) : [ value ];

				for ( ; i < 4; i++ ) {
					expanded[ prefix + cssExpand[ i ] + suffix ] =
						parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
				}

				return expanded;
			}
		};

		if ( !rmargin.test( prefix ) ) {
			jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
		}
	} );

	jQuery.fn.extend( {
		css: function( name, value ) {
			return access( this, function( elem, name, value ) {
				var styles, len,
					map = {},
					i = 0;

				if ( jQuery.isArray( name ) ) {
					styles = getStyles( elem );
					len = name.length;

					for ( ; i < len; i++ ) {
						map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
					}

					return map;
				}

				return value !== undefined ?
					jQuery.style( elem, name, value ) :
					jQuery.css( elem, name );
			}, name, value, arguments.length > 1 );
		},
		show: function() {
			return showHide( this, true );
		},
		hide: function() {
			return showHide( this );
		},
		toggle: function( state ) {
			if ( typeof state === "boolean" ) {
				return state ? this.show() : this.hide();
			}

			return this.each( function() {
				if ( isHidden( this ) ) {
					jQuery( this ).show();
				} else {
					jQuery( this ).hide();
				}
			} );
		}
	} );


	function Tween( elem, options, prop, end, easing ) {
		return new Tween.prototype.init( elem, options, prop, end, easing );
	}
	jQuery.Tween = Tween;

	Tween.prototype = {
		constructor: Tween,
		init: function( elem, options, prop, end, easing, unit ) {
			this.elem = elem;
			this.prop = prop;
			this.easing = easing || jQuery.easing._default;
			this.options = options;
			this.start = this.now = this.cur();
			this.end = end;
			this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
		},
		cur: function() {
			var hooks = Tween.propHooks[ this.prop ];

			return hooks && hooks.get ?
				hooks.get( this ) :
				Tween.propHooks._default.get( this );
		},
		run: function( percent ) {
			var eased,
				hooks = Tween.propHooks[ this.prop ];

			if ( this.options.duration ) {
				this.pos = eased = jQuery.easing[ this.easing ](
					percent, this.options.duration * percent, 0, 1, this.options.duration
				);
			} else {
				this.pos = eased = percent;
			}
			this.now = ( this.end - this.start ) * eased + this.start;

			if ( this.options.step ) {
				this.options.step.call( this.elem, this.now, this );
			}

			if ( hooks && hooks.set ) {
				hooks.set( this );
			} else {
				Tween.propHooks._default.set( this );
			}
			return this;
		}
	};

	Tween.prototype.init.prototype = Tween.prototype;

	Tween.propHooks = {
		_default: {
			get: function( tween ) {
				var result;

				// Use a property on the element directly when it is not a DOM element,
				// or when there is no matching style property that exists.
				if ( tween.elem.nodeType !== 1 ||
					tween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {
					return tween.elem[ tween.prop ];
				}

				// Passing an empty string as a 3rd parameter to .css will automatically
				// attempt a parseFloat and fallback to a string if the parse fails.
				// Simple values such as "10px" are parsed to Float;
				// complex values such as "rotate(1rad)" are returned as-is.
				result = jQuery.css( tween.elem, tween.prop, "" );

				// Empty strings, null, undefined and "auto" are converted to 0.
				return !result || result === "auto" ? 0 : result;
			},
			set: function( tween ) {

				// Use step hook for back compat.
				// Use cssHook if its there.
				// Use .style if available and use plain properties where available.
				if ( jQuery.fx.step[ tween.prop ] ) {
					jQuery.fx.step[ tween.prop ]( tween );
				} else if ( tween.elem.nodeType === 1 &&
					( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||
						jQuery.cssHooks[ tween.prop ] ) ) {
					jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
				} else {
					tween.elem[ tween.prop ] = tween.now;
				}
			}
		}
	};

	// Support: IE9
	// Panic based approach to setting things on disconnected nodes
	Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
		set: function( tween ) {
			if ( tween.elem.nodeType && tween.elem.parentNode ) {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	};

	jQuery.easing = {
		linear: function( p ) {
			return p;
		},
		swing: function( p ) {
			return 0.5 - Math.cos( p * Math.PI ) / 2;
		},
		_default: "swing"
	};

	jQuery.fx = Tween.prototype.init;

	// Back Compat <1.8 extension point
	jQuery.fx.step = {};




	var
		fxNow, timerId,
		rfxtypes = /^(?:toggle|show|hide)$/,
		rrun = /queueHooks$/;

	// Animations created synchronously will run synchronously
	function createFxNow() {
		window.setTimeout( function() {
			fxNow = undefined;
		} );
		return ( fxNow = jQuery.now() );
	}

	// Generate parameters to create a standard animation
	function genFx( type, includeWidth ) {
		var which,
			i = 0,
			attrs = { height: type };

		// If we include width, step value is 1 to do all cssExpand values,
		// otherwise step value is 2 to skip over Left and Right
		includeWidth = includeWidth ? 1 : 0;
		for ( ; i < 4 ; i += 2 - includeWidth ) {
			which = cssExpand[ i ];
			attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
		}

		if ( includeWidth ) {
			attrs.opacity = attrs.width = type;
		}

		return attrs;
	}

	function createTween( value, prop, animation ) {
		var tween,
			collection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ "*" ] ),
			index = 0,
			length = collection.length;
		for ( ; index < length; index++ ) {
			if ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {

				// We're done with this property
				return tween;
			}
		}
	}

	function defaultPrefilter( elem, props, opts ) {
		/* jshint validthis: true */
		var prop, value, toggle, tween, hooks, oldfire, display, checkDisplay,
			anim = this,
			orig = {},
			style = elem.style,
			hidden = elem.nodeType && isHidden( elem ),
			dataShow = dataPriv.get( elem, "fxshow" );

		// Handle queue: false promises
		if ( !opts.queue ) {
			hooks = jQuery._queueHooks( elem, "fx" );
			if ( hooks.unqueued == null ) {
				hooks.unqueued = 0;
				oldfire = hooks.empty.fire;
				hooks.empty.fire = function() {
					if ( !hooks.unqueued ) {
						oldfire();
					}
				};
			}
			hooks.unqueued++;

			anim.always( function() {

				// Ensure the complete handler is called before this completes
				anim.always( function() {
					hooks.unqueued--;
					if ( !jQuery.queue( elem, "fx" ).length ) {
						hooks.empty.fire();
					}
				} );
			} );
		}

		// Height/width overflow pass
		if ( elem.nodeType === 1 && ( "height" in props || "width" in props ) ) {

			// Make sure that nothing sneaks out
			// Record all 3 overflow attributes because IE9-10 do not
			// change the overflow attribute when overflowX and
			// overflowY are set to the same value
			opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

			// Set display property to inline-block for height/width
			// animations on inline elements that are having width/height animated
			display = jQuery.css( elem, "display" );

			// Test default display if display is currently "none"
			checkDisplay = display === "none" ?
				dataPriv.get( elem, "olddisplay" ) || defaultDisplay( elem.nodeName ) : display;

			if ( checkDisplay === "inline" && jQuery.css( elem, "float" ) === "none" ) {
				style.display = "inline-block";
			}
		}

		if ( opts.overflow ) {
			style.overflow = "hidden";
			anim.always( function() {
				style.overflow = opts.overflow[ 0 ];
				style.overflowX = opts.overflow[ 1 ];
				style.overflowY = opts.overflow[ 2 ];
			} );
		}

		// show/hide pass
		for ( prop in props ) {
			value = props[ prop ];
			if ( rfxtypes.exec( value ) ) {
				delete props[ prop ];
				toggle = toggle || value === "toggle";
				if ( value === ( hidden ? "hide" : "show" ) ) {

					// If there is dataShow left over from a stopped hide or show
					// and we are going to proceed with show, we should pretend to be hidden
					if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
						hidden = true;
					} else {
						continue;
					}
				}
				orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );

			// Any non-fx value stops us from restoring the original display value
			} else {
				display = undefined;
			}
		}

		if ( !jQuery.isEmptyObject( orig ) ) {
			if ( dataShow ) {
				if ( "hidden" in dataShow ) {
					hidden = dataShow.hidden;
				}
			} else {
				dataShow = dataPriv.access( elem, "fxshow", {} );
			}

			// Store state if its toggle - enables .stop().toggle() to "reverse"
			if ( toggle ) {
				dataShow.hidden = !hidden;
			}
			if ( hidden ) {
				jQuery( elem ).show();
			} else {
				anim.done( function() {
					jQuery( elem ).hide();
				} );
			}
			anim.done( function() {
				var prop;

				dataPriv.remove( elem, "fxshow" );
				for ( prop in orig ) {
					jQuery.style( elem, prop, orig[ prop ] );
				}
			} );
			for ( prop in orig ) {
				tween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );

				if ( !( prop in dataShow ) ) {
					dataShow[ prop ] = tween.start;
					if ( hidden ) {
						tween.end = tween.start;
						tween.start = prop === "width" || prop === "height" ? 1 : 0;
					}
				}
			}

		// If this is a noop like .hide().hide(), restore an overwritten display value
		} else if ( ( display === "none" ? defaultDisplay( elem.nodeName ) : display ) === "inline" ) {
			style.display = display;
		}
	}

	function propFilter( props, specialEasing ) {
		var index, name, easing, value, hooks;

		// camelCase, specialEasing and expand cssHook pass
		for ( index in props ) {
			name = jQuery.camelCase( index );
			easing = specialEasing[ name ];
			value = props[ index ];
			if ( jQuery.isArray( value ) ) {
				easing = value[ 1 ];
				value = props[ index ] = value[ 0 ];
			}

			if ( index !== name ) {
				props[ name ] = value;
				delete props[ index ];
			}

			hooks = jQuery.cssHooks[ name ];
			if ( hooks && "expand" in hooks ) {
				value = hooks.expand( value );
				delete props[ name ];

				// Not quite $.extend, this won't overwrite existing keys.
				// Reusing 'index' because we have the correct "name"
				for ( index in value ) {
					if ( !( index in props ) ) {
						props[ index ] = value[ index ];
						specialEasing[ index ] = easing;
					}
				}
			} else {
				specialEasing[ name ] = easing;
			}
		}
	}

	function Animation( elem, properties, options ) {
		var result,
			stopped,
			index = 0,
			length = Animation.prefilters.length,
			deferred = jQuery.Deferred().always( function() {

				// Don't match elem in the :animated selector
				delete tick.elem;
			} ),
			tick = function() {
				if ( stopped ) {
					return false;
				}
				var currentTime = fxNow || createFxNow(),
					remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),

					// Support: Android 2.3
					// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
					temp = remaining / animation.duration || 0,
					percent = 1 - temp,
					index = 0,
					length = animation.tweens.length;

				for ( ; index < length ; index++ ) {
					animation.tweens[ index ].run( percent );
				}

				deferred.notifyWith( elem, [ animation, percent, remaining ] );

				if ( percent < 1 && length ) {
					return remaining;
				} else {
					deferred.resolveWith( elem, [ animation ] );
					return false;
				}
			},
			animation = deferred.promise( {
				elem: elem,
				props: jQuery.extend( {}, properties ),
				opts: jQuery.extend( true, {
					specialEasing: {},
					easing: jQuery.easing._default
				}, options ),
				originalProperties: properties,
				originalOptions: options,
				startTime: fxNow || createFxNow(),
				duration: options.duration,
				tweens: [],
				createTween: function( prop, end ) {
					var tween = jQuery.Tween( elem, animation.opts, prop, end,
							animation.opts.specialEasing[ prop ] || animation.opts.easing );
					animation.tweens.push( tween );
					return tween;
				},
				stop: function( gotoEnd ) {
					var index = 0,

						// If we are going to the end, we want to run all the tweens
						// otherwise we skip this part
						length = gotoEnd ? animation.tweens.length : 0;
					if ( stopped ) {
						return this;
					}
					stopped = true;
					for ( ; index < length ; index++ ) {
						animation.tweens[ index ].run( 1 );
					}

					// Resolve when we played the last frame; otherwise, reject
					if ( gotoEnd ) {
						deferred.notifyWith( elem, [ animation, 1, 0 ] );
						deferred.resolveWith( elem, [ animation, gotoEnd ] );
					} else {
						deferred.rejectWith( elem, [ animation, gotoEnd ] );
					}
					return this;
				}
			} ),
			props = animation.props;

		propFilter( props, animation.opts.specialEasing );

		for ( ; index < length ; index++ ) {
			result = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );
			if ( result ) {
				if ( jQuery.isFunction( result.stop ) ) {
					jQuery._queueHooks( animation.elem, animation.opts.queue ).stop =
						jQuery.proxy( result.stop, result );
				}
				return result;
			}
		}

		jQuery.map( props, createTween, animation );

		if ( jQuery.isFunction( animation.opts.start ) ) {
			animation.opts.start.call( elem, animation );
		}

		jQuery.fx.timer(
			jQuery.extend( tick, {
				elem: elem,
				anim: animation,
				queue: animation.opts.queue
			} )
		);

		// attach callbacks from options
		return animation.progress( animation.opts.progress )
			.done( animation.opts.done, animation.opts.complete )
			.fail( animation.opts.fail )
			.always( animation.opts.always );
	}

	jQuery.Animation = jQuery.extend( Animation, {
		tweeners: {
			"*": [ function( prop, value ) {
				var tween = this.createTween( prop, value );
				adjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );
				return tween;
			} ]
		},

		tweener: function( props, callback ) {
			if ( jQuery.isFunction( props ) ) {
				callback = props;
				props = [ "*" ];
			} else {
				props = props.match( rnotwhite );
			}

			var prop,
				index = 0,
				length = props.length;

			for ( ; index < length ; index++ ) {
				prop = props[ index ];
				Animation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];
				Animation.tweeners[ prop ].unshift( callback );
			}
		},

		prefilters: [ defaultPrefilter ],

		prefilter: function( callback, prepend ) {
			if ( prepend ) {
				Animation.prefilters.unshift( callback );
			} else {
				Animation.prefilters.push( callback );
			}
		}
	} );

	jQuery.speed = function( speed, easing, fn ) {
		var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
			complete: fn || !fn && easing ||
				jQuery.isFunction( speed ) && speed,
			duration: speed,
			easing: fn && easing || easing && !jQuery.isFunction( easing ) && easing
		};

		opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === "number" ?
			opt.duration : opt.duration in jQuery.fx.speeds ?
				jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;

		// Normalize opt.queue - true/undefined/null -> "fx"
		if ( opt.queue == null || opt.queue === true ) {
			opt.queue = "fx";
		}

		// Queueing
		opt.old = opt.complete;

		opt.complete = function() {
			if ( jQuery.isFunction( opt.old ) ) {
				opt.old.call( this );
			}

			if ( opt.queue ) {
				jQuery.dequeue( this, opt.queue );
			}
		};

		return opt;
	};

	jQuery.fn.extend( {
		fadeTo: function( speed, to, easing, callback ) {

			// Show any hidden elements after setting opacity to 0
			return this.filter( isHidden ).css( "opacity", 0 ).show()

				// Animate to the value specified
				.end().animate( { opacity: to }, speed, easing, callback );
		},
		animate: function( prop, speed, easing, callback ) {
			var empty = jQuery.isEmptyObject( prop ),
				optall = jQuery.speed( speed, easing, callback ),
				doAnimation = function() {

					// Operate on a copy of prop so per-property easing won't be lost
					var anim = Animation( this, jQuery.extend( {}, prop ), optall );

					// Empty animations, or finishing resolves immediately
					if ( empty || dataPriv.get( this, "finish" ) ) {
						anim.stop( true );
					}
				};
				doAnimation.finish = doAnimation;

			return empty || optall.queue === false ?
				this.each( doAnimation ) :
				this.queue( optall.queue, doAnimation );
		},
		stop: function( type, clearQueue, gotoEnd ) {
			var stopQueue = function( hooks ) {
				var stop = hooks.stop;
				delete hooks.stop;
				stop( gotoEnd );
			};

			if ( typeof type !== "string" ) {
				gotoEnd = clearQueue;
				clearQueue = type;
				type = undefined;
			}
			if ( clearQueue && type !== false ) {
				this.queue( type || "fx", [] );
			}

			return this.each( function() {
				var dequeue = true,
					index = type != null && type + "queueHooks",
					timers = jQuery.timers,
					data = dataPriv.get( this );

				if ( index ) {
					if ( data[ index ] && data[ index ].stop ) {
						stopQueue( data[ index ] );
					}
				} else {
					for ( index in data ) {
						if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
							stopQueue( data[ index ] );
						}
					}
				}

				for ( index = timers.length; index--; ) {
					if ( timers[ index ].elem === this &&
						( type == null || timers[ index ].queue === type ) ) {

						timers[ index ].anim.stop( gotoEnd );
						dequeue = false;
						timers.splice( index, 1 );
					}
				}

				// Start the next in the queue if the last step wasn't forced.
				// Timers currently will call their complete callbacks, which
				// will dequeue but only if they were gotoEnd.
				if ( dequeue || !gotoEnd ) {
					jQuery.dequeue( this, type );
				}
			} );
		},
		finish: function( type ) {
			if ( type !== false ) {
				type = type || "fx";
			}
			return this.each( function() {
				var index,
					data = dataPriv.get( this ),
					queue = data[ type + "queue" ],
					hooks = data[ type + "queueHooks" ],
					timers = jQuery.timers,
					length = queue ? queue.length : 0;

				// Enable finishing flag on private data
				data.finish = true;

				// Empty the queue first
				jQuery.queue( this, type, [] );

				if ( hooks && hooks.stop ) {
					hooks.stop.call( this, true );
				}

				// Look for any active animations, and finish them
				for ( index = timers.length; index--; ) {
					if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
						timers[ index ].anim.stop( true );
						timers.splice( index, 1 );
					}
				}

				// Look for any animations in the old queue and finish them
				for ( index = 0; index < length; index++ ) {
					if ( queue[ index ] && queue[ index ].finish ) {
						queue[ index ].finish.call( this );
					}
				}

				// Turn off finishing flag
				delete data.finish;
			} );
		}
	} );

	jQuery.each( [ "toggle", "show", "hide" ], function( i, name ) {
		var cssFn = jQuery.fn[ name ];
		jQuery.fn[ name ] = function( speed, easing, callback ) {
			return speed == null || typeof speed === "boolean" ?
				cssFn.apply( this, arguments ) :
				this.animate( genFx( name, true ), speed, easing, callback );
		};
	} );

	// Generate shortcuts for custom animations
	jQuery.each( {
		slideDown: genFx( "show" ),
		slideUp: genFx( "hide" ),
		slideToggle: genFx( "toggle" ),
		fadeIn: { opacity: "show" },
		fadeOut: { opacity: "hide" },
		fadeToggle: { opacity: "toggle" }
	}, function( name, props ) {
		jQuery.fn[ name ] = function( speed, easing, callback ) {
			return this.animate( props, speed, easing, callback );
		};
	} );

	jQuery.timers = [];
	jQuery.fx.tick = function() {
		var timer,
			i = 0,
			timers = jQuery.timers;

		fxNow = jQuery.now();

		for ( ; i < timers.length; i++ ) {
			timer = timers[ i ];

			// Checks the timer has not already been removed
			if ( !timer() && timers[ i ] === timer ) {
				timers.splice( i--, 1 );
			}
		}

		if ( !timers.length ) {
			jQuery.fx.stop();
		}
		fxNow = undefined;
	};

	jQuery.fx.timer = function( timer ) {
		jQuery.timers.push( timer );
		if ( timer() ) {
			jQuery.fx.start();
		} else {
			jQuery.timers.pop();
		}
	};

	jQuery.fx.interval = 13;
	jQuery.fx.start = function() {
		if ( !timerId ) {
			timerId = window.setInterval( jQuery.fx.tick, jQuery.fx.interval );
		}
	};

	jQuery.fx.stop = function() {
		window.clearInterval( timerId );

		timerId = null;
	};

	jQuery.fx.speeds = {
		slow: 600,
		fast: 200,

		// Default speed
		_default: 400
	};


	// Based off of the plugin by Clint Helfers, with permission.
	// http://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
	jQuery.fn.delay = function( time, type ) {
		time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
		type = type || "fx";

		return this.queue( type, function( next, hooks ) {
			var timeout = window.setTimeout( next, time );
			hooks.stop = function() {
				window.clearTimeout( timeout );
			};
		} );
	};


	( function() {
		var input = document.createElement( "input" ),
			select = document.createElement( "select" ),
			opt = select.appendChild( document.createElement( "option" ) );

		input.type = "checkbox";

		// Support: iOS<=5.1, Android<=4.2+
		// Default value for a checkbox should be "on"
		support.checkOn = input.value !== "";

		// Support: IE<=11+
		// Must access selectedIndex to make default options select
		support.optSelected = opt.selected;

		// Support: Android<=2.3
		// Options inside disabled selects are incorrectly marked as disabled
		select.disabled = true;
		support.optDisabled = !opt.disabled;

		// Support: IE<=11+
		// An input loses its value after becoming a radio
		input = document.createElement( "input" );
		input.value = "t";
		input.type = "radio";
		support.radioValue = input.value === "t";
	} )();


	var boolHook,
		attrHandle = jQuery.expr.attrHandle;

	jQuery.fn.extend( {
		attr: function( name, value ) {
			return access( this, jQuery.attr, name, value, arguments.length > 1 );
		},

		removeAttr: function( name ) {
			return this.each( function() {
				jQuery.removeAttr( this, name );
			} );
		}
	} );

	jQuery.extend( {
		attr: function( elem, name, value ) {
			var ret, hooks,
				nType = elem.nodeType;

			// Don't get/set attributes on text, comment and attribute nodes
			if ( nType === 3 || nType === 8 || nType === 2 ) {
				return;
			}

			// Fallback to prop when attributes are not supported
			if ( typeof elem.getAttribute === "undefined" ) {
				return jQuery.prop( elem, name, value );
			}

			// All attributes are lowercase
			// Grab necessary hook if one is defined
			if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
				name = name.toLowerCase();
				hooks = jQuery.attrHooks[ name ] ||
					( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );
			}

			if ( value !== undefined ) {
				if ( value === null ) {
					jQuery.removeAttr( elem, name );
					return;
				}

				if ( hooks && "set" in hooks &&
					( ret = hooks.set( elem, value, name ) ) !== undefined ) {
					return ret;
				}

				elem.setAttribute( name, value + "" );
				return value;
			}

			if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
				return ret;
			}

			ret = jQuery.find.attr( elem, name );

			// Non-existent attributes return null, we normalize to undefined
			return ret == null ? undefined : ret;
		},

		attrHooks: {
			type: {
				set: function( elem, value ) {
					if ( !support.radioValue && value === "radio" &&
						jQuery.nodeName( elem, "input" ) ) {
						var val = elem.value;
						elem.setAttribute( "type", value );
						if ( val ) {
							elem.value = val;
						}
						return value;
					}
				}
			}
		},

		removeAttr: function( elem, value ) {
			var name, propName,
				i = 0,
				attrNames = value && value.match( rnotwhite );

			if ( attrNames && elem.nodeType === 1 ) {
				while ( ( name = attrNames[ i++ ] ) ) {
					propName = jQuery.propFix[ name ] || name;

					// Boolean attributes get special treatment (#10870)
					if ( jQuery.expr.match.bool.test( name ) ) {

						// Set corresponding property to false
						elem[ propName ] = false;
					}

					elem.removeAttribute( name );
				}
			}
		}
	} );

	// Hooks for boolean attributes
	boolHook = {
		set: function( elem, value, name ) {
			if ( value === false ) {

				// Remove boolean attributes when set to false
				jQuery.removeAttr( elem, name );
			} else {
				elem.setAttribute( name, name );
			}
			return name;
		}
	};
	jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( i, name ) {
		var getter = attrHandle[ name ] || jQuery.find.attr;

		attrHandle[ name ] = function( elem, name, isXML ) {
			var ret, handle;
			if ( !isXML ) {

				// Avoid an infinite loop by temporarily removing this function from the getter
				handle = attrHandle[ name ];
				attrHandle[ name ] = ret;
				ret = getter( elem, name, isXML ) != null ?
					name.toLowerCase() :
					null;
				attrHandle[ name ] = handle;
			}
			return ret;
		};
	} );




	var rfocusable = /^(?:input|select|textarea|button)$/i,
		rclickable = /^(?:a|area)$/i;

	jQuery.fn.extend( {
		prop: function( name, value ) {
			return access( this, jQuery.prop, name, value, arguments.length > 1 );
		},

		removeProp: function( name ) {
			return this.each( function() {
				delete this[ jQuery.propFix[ name ] || name ];
			} );
		}
	} );

	jQuery.extend( {
		prop: function( elem, name, value ) {
			var ret, hooks,
				nType = elem.nodeType;

			// Don't get/set properties on text, comment and attribute nodes
			if ( nType === 3 || nType === 8 || nType === 2 ) {
				return;
			}

			if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {

				// Fix name and attach hooks
				name = jQuery.propFix[ name ] || name;
				hooks = jQuery.propHooks[ name ];
			}

			if ( value !== undefined ) {
				if ( hooks && "set" in hooks &&
					( ret = hooks.set( elem, value, name ) ) !== undefined ) {
					return ret;
				}

				return ( elem[ name ] = value );
			}

			if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
				return ret;
			}

			return elem[ name ];
		},

		propHooks: {
			tabIndex: {
				get: function( elem ) {

					// elem.tabIndex doesn't always return the
					// correct value when it hasn't been explicitly set
					// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
					// Use proper attribute retrieval(#12072)
					var tabindex = jQuery.find.attr( elem, "tabindex" );

					return tabindex ?
						parseInt( tabindex, 10 ) :
						rfocusable.test( elem.nodeName ) ||
							rclickable.test( elem.nodeName ) && elem.href ?
								0 :
								-1;
				}
			}
		},

		propFix: {
			"for": "htmlFor",
			"class": "className"
		}
	} );

	// Support: IE <=11 only
	// Accessing the selectedIndex property
	// forces the browser to respect setting selected
	// on the option
	// The getter ensures a default option is selected
	// when in an optgroup
	if ( !support.optSelected ) {
		jQuery.propHooks.selected = {
			get: function( elem ) {
				var parent = elem.parentNode;
				if ( parent && parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
				return null;
			},
			set: function( elem ) {
				var parent = elem.parentNode;
				if ( parent ) {
					parent.selectedIndex;

					if ( parent.parentNode ) {
						parent.parentNode.selectedIndex;
					}
				}
			}
		};
	}

	jQuery.each( [
		"tabIndex",
		"readOnly",
		"maxLength",
		"cellSpacing",
		"cellPadding",
		"rowSpan",
		"colSpan",
		"useMap",
		"frameBorder",
		"contentEditable"
	], function() {
		jQuery.propFix[ this.toLowerCase() ] = this;
	} );




	var rclass = /[\t\r\n\f]/g;

	function getClass( elem ) {
		return elem.getAttribute && elem.getAttribute( "class" ) || "";
	}

	jQuery.fn.extend( {
		addClass: function( value ) {
			var classes, elem, cur, curValue, clazz, j, finalValue,
				i = 0;

			if ( jQuery.isFunction( value ) ) {
				return this.each( function( j ) {
					jQuery( this ).addClass( value.call( this, j, getClass( this ) ) );
				} );
			}

			if ( typeof value === "string" && value ) {
				classes = value.match( rnotwhite ) || [];

				while ( ( elem = this[ i++ ] ) ) {
					curValue = getClass( elem );
					cur = elem.nodeType === 1 &&
						( " " + curValue + " " ).replace( rclass, " " );

					if ( cur ) {
						j = 0;
						while ( ( clazz = classes[ j++ ] ) ) {
							if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
								cur += clazz + " ";
							}
						}

						// Only assign if different to avoid unneeded rendering.
						finalValue = jQuery.trim( cur );
						if ( curValue !== finalValue ) {
							elem.setAttribute( "class", finalValue );
						}
					}
				}
			}

			return this;
		},

		removeClass: function( value ) {
			var classes, elem, cur, curValue, clazz, j, finalValue,
				i = 0;

			if ( jQuery.isFunction( value ) ) {
				return this.each( function( j ) {
					jQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );
				} );
			}

			if ( !arguments.length ) {
				return this.attr( "class", "" );
			}

			if ( typeof value === "string" && value ) {
				classes = value.match( rnotwhite ) || [];

				while ( ( elem = this[ i++ ] ) ) {
					curValue = getClass( elem );

					// This expression is here for better compressibility (see addClass)
					cur = elem.nodeType === 1 &&
						( " " + curValue + " " ).replace( rclass, " " );

					if ( cur ) {
						j = 0;
						while ( ( clazz = classes[ j++ ] ) ) {

							// Remove *all* instances
							while ( cur.indexOf( " " + clazz + " " ) > -1 ) {
								cur = cur.replace( " " + clazz + " ", " " );
							}
						}

						// Only assign if different to avoid unneeded rendering.
						finalValue = jQuery.trim( cur );
						if ( curValue !== finalValue ) {
							elem.setAttribute( "class", finalValue );
						}
					}
				}
			}

			return this;
		},

		toggleClass: function( value, stateVal ) {
			var type = typeof value;

			if ( typeof stateVal === "boolean" && type === "string" ) {
				return stateVal ? this.addClass( value ) : this.removeClass( value );
			}

			if ( jQuery.isFunction( value ) ) {
				return this.each( function( i ) {
					jQuery( this ).toggleClass(
						value.call( this, i, getClass( this ), stateVal ),
						stateVal
					);
				} );
			}

			return this.each( function() {
				var className, i, self, classNames;

				if ( type === "string" ) {

					// Toggle individual class names
					i = 0;
					self = jQuery( this );
					classNames = value.match( rnotwhite ) || [];

					while ( ( className = classNames[ i++ ] ) ) {

						// Check each className given, space separated list
						if ( self.hasClass( className ) ) {
							self.removeClass( className );
						} else {
							self.addClass( className );
						}
					}

				// Toggle whole class name
				} else if ( value === undefined || type === "boolean" ) {
					className = getClass( this );
					if ( className ) {

						// Store className if set
						dataPriv.set( this, "__className__", className );
					}

					// If the element has a class name or if we're passed `false`,
					// then remove the whole classname (if there was one, the above saved it).
					// Otherwise bring back whatever was previously saved (if anything),
					// falling back to the empty string if nothing was stored.
					if ( this.setAttribute ) {
						this.setAttribute( "class",
							className || value === false ?
							"" :
							dataPriv.get( this, "__className__" ) || ""
						);
					}
				}
			} );
		},

		hasClass: function( selector ) {
			var className, elem,
				i = 0;

			className = " " + selector + " ";
			while ( ( elem = this[ i++ ] ) ) {
				if ( elem.nodeType === 1 &&
					( " " + getClass( elem ) + " " ).replace( rclass, " " )
						.indexOf( className ) > -1
				) {
					return true;
				}
			}

			return false;
		}
	} );




	var rreturn = /\r/g,
		rspaces = /[\x20\t\r\n\f]+/g;

	jQuery.fn.extend( {
		val: function( value ) {
			var hooks, ret, isFunction,
				elem = this[ 0 ];

			if ( !arguments.length ) {
				if ( elem ) {
					hooks = jQuery.valHooks[ elem.type ] ||
						jQuery.valHooks[ elem.nodeName.toLowerCase() ];

					if ( hooks &&
						"get" in hooks &&
						( ret = hooks.get( elem, "value" ) ) !== undefined
					) {
						return ret;
					}

					ret = elem.value;

					return typeof ret === "string" ?

						// Handle most common string cases
						ret.replace( rreturn, "" ) :

						// Handle cases where value is null/undef or number
						ret == null ? "" : ret;
				}

				return;
			}

			isFunction = jQuery.isFunction( value );

			return this.each( function( i ) {
				var val;

				if ( this.nodeType !== 1 ) {
					return;
				}

				if ( isFunction ) {
					val = value.call( this, i, jQuery( this ).val() );
				} else {
					val = value;
				}

				// Treat null/undefined as ""; convert numbers to string
				if ( val == null ) {
					val = "";

				} else if ( typeof val === "number" ) {
					val += "";

				} else if ( jQuery.isArray( val ) ) {
					val = jQuery.map( val, function( value ) {
						return value == null ? "" : value + "";
					} );
				}

				hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

				// If set returns undefined, fall back to normal setting
				if ( !hooks || !( "set" in hooks ) || hooks.set( this, val, "value" ) === undefined ) {
					this.value = val;
				}
			} );
		}
	} );

	jQuery.extend( {
		valHooks: {
			option: {
				get: function( elem ) {

					var val = jQuery.find.attr( elem, "value" );
					return val != null ?
						val :

						// Support: IE10-11+
						// option.text throws exceptions (#14686, #14858)
						// Strip and collapse whitespace
						// https://html.spec.whatwg.org/#strip-and-collapse-whitespace
						jQuery.trim( jQuery.text( elem ) ).replace( rspaces, " " );
				}
			},
			select: {
				get: function( elem ) {
					var value, option,
						options = elem.options,
						index = elem.selectedIndex,
						one = elem.type === "select-one" || index < 0,
						values = one ? null : [],
						max = one ? index + 1 : options.length,
						i = index < 0 ?
							max :
							one ? index : 0;

					// Loop through all the selected options
					for ( ; i < max; i++ ) {
						option = options[ i ];

						// IE8-9 doesn't update selected after form reset (#2551)
						if ( ( option.selected || i === index ) &&

								// Don't return options that are disabled or in a disabled optgroup
								( support.optDisabled ?
									!option.disabled : option.getAttribute( "disabled" ) === null ) &&
								( !option.parentNode.disabled ||
									!jQuery.nodeName( option.parentNode, "optgroup" ) ) ) {

							// Get the specific value for the option
							value = jQuery( option ).val();

							// We don't need an array for one selects
							if ( one ) {
								return value;
							}

							// Multi-Selects return an array
							values.push( value );
						}
					}

					return values;
				},

				set: function( elem, value ) {
					var optionSet, option,
						options = elem.options,
						values = jQuery.makeArray( value ),
						i = options.length;

					while ( i-- ) {
						option = options[ i ];
						if ( option.selected =
							jQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1
						) {
							optionSet = true;
						}
					}

					// Force browsers to behave consistently when non-matching value is set
					if ( !optionSet ) {
						elem.selectedIndex = -1;
					}
					return values;
				}
			}
		}
	} );

	// Radios and checkboxes getter/setter
	jQuery.each( [ "radio", "checkbox" ], function() {
		jQuery.valHooks[ this ] = {
			set: function( elem, value ) {
				if ( jQuery.isArray( value ) ) {
					return ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );
				}
			}
		};
		if ( !support.checkOn ) {
			jQuery.valHooks[ this ].get = function( elem ) {
				return elem.getAttribute( "value" ) === null ? "on" : elem.value;
			};
		}
	} );




	// Return jQuery for attributes-only inclusion


	var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/;

	jQuery.extend( jQuery.event, {

		trigger: function( event, data, elem, onlyHandlers ) {

			var i, cur, tmp, bubbleType, ontype, handle, special,
				eventPath = [ elem || document ],
				type = hasOwn.call( event, "type" ) ? event.type : event,
				namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split( "." ) : [];

			cur = tmp = elem = elem || document;

			// Don't do events on text and comment nodes
			if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
				return;
			}

			// focus/blur morphs to focusin/out; ensure we're not firing them right now
			if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
				return;
			}

			if ( type.indexOf( "." ) > -1 ) {

				// Namespaced trigger; create a regexp to match event type in handle()
				namespaces = type.split( "." );
				type = namespaces.shift();
				namespaces.sort();
			}
			ontype = type.indexOf( ":" ) < 0 && "on" + type;

			// Caller can pass in a jQuery.Event object, Object, or just an event type string
			event = event[ jQuery.expando ] ?
				event :
				new jQuery.Event( type, typeof event === "object" && event );

			// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
			event.isTrigger = onlyHandlers ? 2 : 3;
			event.namespace = namespaces.join( "." );
			event.rnamespace = event.namespace ?
				new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" ) :
				null;

			// Clean up the event in case it is being reused
			event.result = undefined;
			if ( !event.target ) {
				event.target = elem;
			}

			// Clone any incoming data and prepend the event, creating the handler arg list
			data = data == null ?
				[ event ] :
				jQuery.makeArray( data, [ event ] );

			// Allow special events to draw outside the lines
			special = jQuery.event.special[ type ] || {};
			if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
				return;
			}

			// Determine event propagation path in advance, per W3C events spec (#9951)
			// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
			if ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {

				bubbleType = special.delegateType || type;
				if ( !rfocusMorph.test( bubbleType + type ) ) {
					cur = cur.parentNode;
				}
				for ( ; cur; cur = cur.parentNode ) {
					eventPath.push( cur );
					tmp = cur;
				}

				// Only add window if we got to document (e.g., not plain obj or detached DOM)
				if ( tmp === ( elem.ownerDocument || document ) ) {
					eventPath.push( tmp.defaultView || tmp.parentWindow || window );
				}
			}

			// Fire handlers on the event path
			i = 0;
			while ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {

				event.type = i > 1 ?
					bubbleType :
					special.bindType || type;

				// jQuery handler
				handle = ( dataPriv.get( cur, "events" ) || {} )[ event.type ] &&
					dataPriv.get( cur, "handle" );
				if ( handle ) {
					handle.apply( cur, data );
				}

				// Native handler
				handle = ontype && cur[ ontype ];
				if ( handle && handle.apply && acceptData( cur ) ) {
					event.result = handle.apply( cur, data );
					if ( event.result === false ) {
						event.preventDefault();
					}
				}
			}
			event.type = type;

			// If nobody prevented the default action, do it now
			if ( !onlyHandlers && !event.isDefaultPrevented() ) {

				if ( ( !special._default ||
					special._default.apply( eventPath.pop(), data ) === false ) &&
					acceptData( elem ) ) {

					// Call a native DOM method on the target with the same name name as the event.
					// Don't do default actions on window, that's where global variables be (#6170)
					if ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {

						// Don't re-trigger an onFOO event when we call its FOO() method
						tmp = elem[ ontype ];

						if ( tmp ) {
							elem[ ontype ] = null;
						}

						// Prevent re-triggering of the same event, since we already bubbled it above
						jQuery.event.triggered = type;
						elem[ type ]();
						jQuery.event.triggered = undefined;

						if ( tmp ) {
							elem[ ontype ] = tmp;
						}
					}
				}
			}

			return event.result;
		},

		// Piggyback on a donor event to simulate a different one
		// Used only for `focus(in | out)` events
		simulate: function( type, elem, event ) {
			var e = jQuery.extend(
				new jQuery.Event(),
				event,
				{
					type: type,
					isSimulated: true
				}
			);

			jQuery.event.trigger( e, null, elem );
		}

	} );

	jQuery.fn.extend( {

		trigger: function( type, data ) {
			return this.each( function() {
				jQuery.event.trigger( type, data, this );
			} );
		},
		triggerHandler: function( type, data ) {
			var elem = this[ 0 ];
			if ( elem ) {
				return jQuery.event.trigger( type, data, elem, true );
			}
		}
	} );


	jQuery.each( ( "blur focus focusin focusout load resize scroll unload click dblclick " +
		"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
		"change select submit keydown keypress keyup error contextmenu" ).split( " " ),
		function( i, name ) {

		// Handle event binding
		jQuery.fn[ name ] = function( data, fn ) {
			return arguments.length > 0 ?
				this.on( name, null, data, fn ) :
				this.trigger( name );
		};
	} );

	jQuery.fn.extend( {
		hover: function( fnOver, fnOut ) {
			return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
		}
	} );




	support.focusin = "onfocusin" in window;


	// Support: Firefox
	// Firefox doesn't have focus(in | out) events
	// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
	//
	// Support: Chrome, Safari
	// focus(in | out) events fire after focus & blur events,
	// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
	// Related ticket - https://code.google.com/p/chromium/issues/detail?id=449857
	if ( !support.focusin ) {
		jQuery.each( { focus: "focusin", blur: "focusout" }, function( orig, fix ) {

			// Attach a single capturing handler on the document while someone wants focusin/focusout
			var handler = function( event ) {
				jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );
			};

			jQuery.event.special[ fix ] = {
				setup: function() {
					var doc = this.ownerDocument || this,
						attaches = dataPriv.access( doc, fix );

					if ( !attaches ) {
						doc.addEventListener( orig, handler, true );
					}
					dataPriv.access( doc, fix, ( attaches || 0 ) + 1 );
				},
				teardown: function() {
					var doc = this.ownerDocument || this,
						attaches = dataPriv.access( doc, fix ) - 1;

					if ( !attaches ) {
						doc.removeEventListener( orig, handler, true );
						dataPriv.remove( doc, fix );

					} else {
						dataPriv.access( doc, fix, attaches );
					}
				}
			};
		} );
	}
	var location = window.location;

	var nonce = jQuery.now();

	var rquery = ( /\?/ );



	// Support: Android 2.3
	// Workaround failure to string-cast null input
	jQuery.parseJSON = function( data ) {
		return JSON.parse( data + "" );
	};


	// Cross-browser xml parsing
	jQuery.parseXML = function( data ) {
		var xml;
		if ( !data || typeof data !== "string" ) {
			return null;
		}

		// Support: IE9
		try {
			xml = ( new window.DOMParser() ).parseFromString( data, "text/xml" );
		} catch ( e ) {
			xml = undefined;
		}

		if ( !xml || xml.getElementsByTagName( "parsererror" ).length ) {
			jQuery.error( "Invalid XML: " + data );
		}
		return xml;
	};


	var
		rhash = /#.*$/,
		rts = /([?&])_=[^&]*/,
		rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,

		// #7653, #8125, #8152: local protocol detection
		rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
		rnoContent = /^(?:GET|HEAD)$/,
		rprotocol = /^\/\//,

		/* Prefilters
		 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
		 * 2) These are called:
		 *    - BEFORE asking for a transport
		 *    - AFTER param serialization (s.data is a string if s.processData is true)
		 * 3) key is the dataType
		 * 4) the catchall symbol "*" can be used
		 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
		 */
		prefilters = {},

		/* Transports bindings
		 * 1) key is the dataType
		 * 2) the catchall symbol "*" can be used
		 * 3) selection will start with transport dataType and THEN go to "*" if needed
		 */
		transports = {},

		// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
		allTypes = "*/".concat( "*" ),

		// Anchor tag for parsing the document origin
		originAnchor = document.createElement( "a" );
		originAnchor.href = location.href;

	// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
	function addToPrefiltersOrTransports( structure ) {

		// dataTypeExpression is optional and defaults to "*"
		return function( dataTypeExpression, func ) {

			if ( typeof dataTypeExpression !== "string" ) {
				func = dataTypeExpression;
				dataTypeExpression = "*";
			}

			var dataType,
				i = 0,
				dataTypes = dataTypeExpression.toLowerCase().match( rnotwhite ) || [];

			if ( jQuery.isFunction( func ) ) {

				// For each dataType in the dataTypeExpression
				while ( ( dataType = dataTypes[ i++ ] ) ) {

					// Prepend if requested
					if ( dataType[ 0 ] === "+" ) {
						dataType = dataType.slice( 1 ) || "*";
						( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );

					// Otherwise append
					} else {
						( structure[ dataType ] = structure[ dataType ] || [] ).push( func );
					}
				}
			}
		};
	}

	// Base inspection function for prefilters and transports
	function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

		var inspected = {},
			seekingTransport = ( structure === transports );

		function inspect( dataType ) {
			var selected;
			inspected[ dataType ] = true;
			jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
				var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
				if ( typeof dataTypeOrTransport === "string" &&
					!seekingTransport && !inspected[ dataTypeOrTransport ] ) {

					options.dataTypes.unshift( dataTypeOrTransport );
					inspect( dataTypeOrTransport );
					return false;
				} else if ( seekingTransport ) {
					return !( selected = dataTypeOrTransport );
				}
			} );
			return selected;
		}

		return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
	}

	// A special extend for ajax options
	// that takes "flat" options (not to be deep extended)
	// Fixes #9887
	function ajaxExtend( target, src ) {
		var key, deep,
			flatOptions = jQuery.ajaxSettings.flatOptions || {};

		for ( key in src ) {
			if ( src[ key ] !== undefined ) {
				( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
			}
		}
		if ( deep ) {
			jQuery.extend( true, target, deep );
		}

		return target;
	}

	/* Handles responses to an ajax request:
	 * - finds the right dataType (mediates between content-type and expected dataType)
	 * - returns the corresponding response
	 */
	function ajaxHandleResponses( s, jqXHR, responses ) {

		var ct, type, finalDataType, firstDataType,
			contents = s.contents,
			dataTypes = s.dataTypes;

		// Remove auto dataType and get content-type in the process
		while ( dataTypes[ 0 ] === "*" ) {
			dataTypes.shift();
			if ( ct === undefined ) {
				ct = s.mimeType || jqXHR.getResponseHeader( "Content-Type" );
			}
		}

		// Check if we're dealing with a known content-type
		if ( ct ) {
			for ( type in contents ) {
				if ( contents[ type ] && contents[ type ].test( ct ) ) {
					dataTypes.unshift( type );
					break;
				}
			}
		}

		// Check to see if we have a response for the expected dataType
		if ( dataTypes[ 0 ] in responses ) {
			finalDataType = dataTypes[ 0 ];
		} else {

			// Try convertible dataTypes
			for ( type in responses ) {
				if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[ 0 ] ] ) {
					finalDataType = type;
					break;
				}
				if ( !firstDataType ) {
					firstDataType = type;
				}
			}

			// Or just use first one
			finalDataType = finalDataType || firstDataType;
		}

		// If we found a dataType
		// We add the dataType to the list if needed
		// and return the corresponding response
		if ( finalDataType ) {
			if ( finalDataType !== dataTypes[ 0 ] ) {
				dataTypes.unshift( finalDataType );
			}
			return responses[ finalDataType ];
		}
	}

	/* Chain conversions given the request and the original response
	 * Also sets the responseXXX fields on the jqXHR instance
	 */
	function ajaxConvert( s, response, jqXHR, isSuccess ) {
		var conv2, current, conv, tmp, prev,
			converters = {},

			// Work with a copy of dataTypes in case we need to modify it for conversion
			dataTypes = s.dataTypes.slice();

		// Create converters map with lowercased keys
		if ( dataTypes[ 1 ] ) {
			for ( conv in s.converters ) {
				converters[ conv.toLowerCase() ] = s.converters[ conv ];
			}
		}

		current = dataTypes.shift();

		// Convert to each sequential dataType
		while ( current ) {

			if ( s.responseFields[ current ] ) {
				jqXHR[ s.responseFields[ current ] ] = response;
			}

			// Apply the dataFilter if provided
			if ( !prev && isSuccess && s.dataFilter ) {
				response = s.dataFilter( response, s.dataType );
			}

			prev = current;
			current = dataTypes.shift();

			if ( current ) {

			// There's only work to do if current dataType is non-auto
				if ( current === "*" ) {

					current = prev;

				// Convert response if prev dataType is non-auto and differs from current
				} else if ( prev !== "*" && prev !== current ) {

					// Seek a direct converter
					conv = converters[ prev + " " + current ] || converters[ "* " + current ];

					// If none found, seek a pair
					if ( !conv ) {
						for ( conv2 in converters ) {

							// If conv2 outputs current
							tmp = conv2.split( " " );
							if ( tmp[ 1 ] === current ) {

								// If prev can be converted to accepted input
								conv = converters[ prev + " " + tmp[ 0 ] ] ||
									converters[ "* " + tmp[ 0 ] ];
								if ( conv ) {

									// Condense equivalence converters
									if ( conv === true ) {
										conv = converters[ conv2 ];

									// Otherwise, insert the intermediate dataType
									} else if ( converters[ conv2 ] !== true ) {
										current = tmp[ 0 ];
										dataTypes.unshift( tmp[ 1 ] );
									}
									break;
								}
							}
						}
					}

					// Apply converter (if not an equivalence)
					if ( conv !== true ) {

						// Unless errors are allowed to bubble, catch and return them
						if ( conv && s.throws ) {
							response = conv( response );
						} else {
							try {
								response = conv( response );
							} catch ( e ) {
								return {
									state: "parsererror",
									error: conv ? e : "No conversion from " + prev + " to " + current
								};
							}
						}
					}
				}
			}
		}

		return { state: "success", data: response };
	}

	jQuery.extend( {

		// Counter for holding the number of active queries
		active: 0,

		// Last-Modified header cache for next request
		lastModified: {},
		etag: {},

		ajaxSettings: {
			url: location.href,
			type: "GET",
			isLocal: rlocalProtocol.test( location.protocol ),
			global: true,
			processData: true,
			async: true,
			contentType: "application/x-www-form-urlencoded; charset=UTF-8",
			/*
			timeout: 0,
			data: null,
			dataType: null,
			username: null,
			password: null,
			cache: null,
			throws: false,
			traditional: false,
			headers: {},
			*/

			accepts: {
				"*": allTypes,
				text: "text/plain",
				html: "text/html",
				xml: "application/xml, text/xml",
				json: "application/json, text/javascript"
			},

			contents: {
				xml: /\bxml\b/,
				html: /\bhtml/,
				json: /\bjson\b/
			},

			responseFields: {
				xml: "responseXML",
				text: "responseText",
				json: "responseJSON"
			},

			// Data converters
			// Keys separate source (or catchall "*") and destination types with a single space
			converters: {

				// Convert anything to text
				"* text": String,

				// Text to html (true = no transformation)
				"text html": true,

				// Evaluate text as a json expression
				"text json": jQuery.parseJSON,

				// Parse text as xml
				"text xml": jQuery.parseXML
			},

			// For options that shouldn't be deep extended:
			// you can add your own custom options here if
			// and when you create one that shouldn't be
			// deep extended (see ajaxExtend)
			flatOptions: {
				url: true,
				context: true
			}
		},

		// Creates a full fledged settings object into target
		// with both ajaxSettings and settings fields.
		// If target is omitted, writes into ajaxSettings.
		ajaxSetup: function( target, settings ) {
			return settings ?

				// Building a settings object
				ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

				// Extending ajaxSettings
				ajaxExtend( jQuery.ajaxSettings, target );
		},

		ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
		ajaxTransport: addToPrefiltersOrTransports( transports ),

		// Main method
		ajax: function( url, options ) {

			// If url is an object, simulate pre-1.5 signature
			if ( typeof url === "object" ) {
				options = url;
				url = undefined;
			}

			// Force options to be an object
			options = options || {};

			var transport,

				// URL without anti-cache param
				cacheURL,

				// Response headers
				responseHeadersString,
				responseHeaders,

				// timeout handle
				timeoutTimer,

				// Url cleanup var
				urlAnchor,

				// To know if global events are to be dispatched
				fireGlobals,

				// Loop variable
				i,

				// Create the final options object
				s = jQuery.ajaxSetup( {}, options ),

				// Callbacks context
				callbackContext = s.context || s,

				// Context for global events is callbackContext if it is a DOM node or jQuery collection
				globalEventContext = s.context &&
					( callbackContext.nodeType || callbackContext.jquery ) ?
						jQuery( callbackContext ) :
						jQuery.event,

				// Deferreds
				deferred = jQuery.Deferred(),
				completeDeferred = jQuery.Callbacks( "once memory" ),

				// Status-dependent callbacks
				statusCode = s.statusCode || {},

				// Headers (they are sent all at once)
				requestHeaders = {},
				requestHeadersNames = {},

				// The jqXHR state
				state = 0,

				// Default abort message
				strAbort = "canceled",

				// Fake xhr
				jqXHR = {
					readyState: 0,

					// Builds headers hashtable if needed
					getResponseHeader: function( key ) {
						var match;
						if ( state === 2 ) {
							if ( !responseHeaders ) {
								responseHeaders = {};
								while ( ( match = rheaders.exec( responseHeadersString ) ) ) {
									responseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];
								}
							}
							match = responseHeaders[ key.toLowerCase() ];
						}
						return match == null ? null : match;
					},

					// Raw string
					getAllResponseHeaders: function() {
						return state === 2 ? responseHeadersString : null;
					},

					// Caches the header
					setRequestHeader: function( name, value ) {
						var lname = name.toLowerCase();
						if ( !state ) {
							name = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;
							requestHeaders[ name ] = value;
						}
						return this;
					},

					// Overrides response content-type header
					overrideMimeType: function( type ) {
						if ( !state ) {
							s.mimeType = type;
						}
						return this;
					},

					// Status-dependent callbacks
					statusCode: function( map ) {
						var code;
						if ( map ) {
							if ( state < 2 ) {
								for ( code in map ) {

									// Lazy-add the new callback in a way that preserves old ones
									statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
								}
							} else {

								// Execute the appropriate callbacks
								jqXHR.always( map[ jqXHR.status ] );
							}
						}
						return this;
					},

					// Cancel the request
					abort: function( statusText ) {
						var finalText = statusText || strAbort;
						if ( transport ) {
							transport.abort( finalText );
						}
						done( 0, finalText );
						return this;
					}
				};

			// Attach deferreds
			deferred.promise( jqXHR ).complete = completeDeferred.add;
			jqXHR.success = jqXHR.done;
			jqXHR.error = jqXHR.fail;

			// Remove hash character (#7531: and string promotion)
			// Add protocol if not provided (prefilters might expect it)
			// Handle falsy url in the settings object (#10093: consistency with old signature)
			// We also use the url parameter if available
			s.url = ( ( url || s.url || location.href ) + "" ).replace( rhash, "" )
				.replace( rprotocol, location.protocol + "//" );

			// Alias method option to type as per ticket #12004
			s.type = options.method || options.type || s.method || s.type;

			// Extract dataTypes list
			s.dataTypes = jQuery.trim( s.dataType || "*" ).toLowerCase().match( rnotwhite ) || [ "" ];

			// A cross-domain request is in order when the origin doesn't match the current origin.
			if ( s.crossDomain == null ) {
				urlAnchor = document.createElement( "a" );

				// Support: IE8-11+
				// IE throws exception if url is malformed, e.g. http://example.com:80x/
				try {
					urlAnchor.href = s.url;

					// Support: IE8-11+
					// Anchor's host property isn't correctly set when s.url is relative
					urlAnchor.href = urlAnchor.href;
					s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !==
						urlAnchor.protocol + "//" + urlAnchor.host;
				} catch ( e ) {

					// If there is an error parsing the URL, assume it is crossDomain,
					// it can be rejected by the transport if it is invalid
					s.crossDomain = true;
				}
			}

			// Convert data if not already a string
			if ( s.data && s.processData && typeof s.data !== "string" ) {
				s.data = jQuery.param( s.data, s.traditional );
			}

			// Apply prefilters
			inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

			// If request was aborted inside a prefilter, stop there
			if ( state === 2 ) {
				return jqXHR;
			}

			// We can fire global events as of now if asked to
			// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
			fireGlobals = jQuery.event && s.global;

			// Watch for a new set of requests
			if ( fireGlobals && jQuery.active++ === 0 ) {
				jQuery.event.trigger( "ajaxStart" );
			}

			// Uppercase the type
			s.type = s.type.toUpperCase();

			// Determine if request has content
			s.hasContent = !rnoContent.test( s.type );

			// Save the URL in case we're toying with the If-Modified-Since
			// and/or If-None-Match header later on
			cacheURL = s.url;

			// More options handling for requests with no content
			if ( !s.hasContent ) {

				// If data is available, append data to url
				if ( s.data ) {
					cacheURL = ( s.url += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data );

					// #9682: remove data so that it's not used in an eventual retry
					delete s.data;
				}

				// Add anti-cache in url if needed
				if ( s.cache === false ) {
					s.url = rts.test( cacheURL ) ?

						// If there is already a '_' parameter, set its value
						cacheURL.replace( rts, "$1_=" + nonce++ ) :

						// Otherwise add one to the end
						cacheURL + ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + nonce++;
				}
			}

			// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
			if ( s.ifModified ) {
				if ( jQuery.lastModified[ cacheURL ] ) {
					jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
				}
				if ( jQuery.etag[ cacheURL ] ) {
					jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
				}
			}

			// Set the correct header, if data is being sent
			if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
				jqXHR.setRequestHeader( "Content-Type", s.contentType );
			}

			// Set the Accepts header for the server, depending on the dataType
			jqXHR.setRequestHeader(
				"Accept",
				s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?
					s.accepts[ s.dataTypes[ 0 ] ] +
						( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
					s.accepts[ "*" ]
			);

			// Check for headers option
			for ( i in s.headers ) {
				jqXHR.setRequestHeader( i, s.headers[ i ] );
			}

			// Allow custom headers/mimetypes and early abort
			if ( s.beforeSend &&
				( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {

				// Abort if not done already and return
				return jqXHR.abort();
			}

			// Aborting is no longer a cancellation
			strAbort = "abort";

			// Install callbacks on deferreds
			for ( i in { success: 1, error: 1, complete: 1 } ) {
				jqXHR[ i ]( s[ i ] );
			}

			// Get transport
			transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

			// If no transport, we auto-abort
			if ( !transport ) {
				done( -1, "No Transport" );
			} else {
				jqXHR.readyState = 1;

				// Send global event
				if ( fireGlobals ) {
					globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
				}

				// If request was aborted inside ajaxSend, stop there
				if ( state === 2 ) {
					return jqXHR;
				}

				// Timeout
				if ( s.async && s.timeout > 0 ) {
					timeoutTimer = window.setTimeout( function() {
						jqXHR.abort( "timeout" );
					}, s.timeout );
				}

				try {
					state = 1;
					transport.send( requestHeaders, done );
				} catch ( e ) {

					// Propagate exception as error if not done
					if ( state < 2 ) {
						done( -1, e );

					// Simply rethrow otherwise
					} else {
						throw e;
					}
				}
			}

			// Callback for when everything is done
			function done( status, nativeStatusText, responses, headers ) {
				var isSuccess, success, error, response, modified,
					statusText = nativeStatusText;

				// Called once
				if ( state === 2 ) {
					return;
				}

				// State is "done" now
				state = 2;

				// Clear timeout if it exists
				if ( timeoutTimer ) {
					window.clearTimeout( timeoutTimer );
				}

				// Dereference transport for early garbage collection
				// (no matter how long the jqXHR object will be used)
				transport = undefined;

				// Cache response headers
				responseHeadersString = headers || "";

				// Set readyState
				jqXHR.readyState = status > 0 ? 4 : 0;

				// Determine if successful
				isSuccess = status >= 200 && status < 300 || status === 304;

				// Get response data
				if ( responses ) {
					response = ajaxHandleResponses( s, jqXHR, responses );
				}

				// Convert no matter what (that way responseXXX fields are always set)
				response = ajaxConvert( s, response, jqXHR, isSuccess );

				// If successful, handle type chaining
				if ( isSuccess ) {

					// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
					if ( s.ifModified ) {
						modified = jqXHR.getResponseHeader( "Last-Modified" );
						if ( modified ) {
							jQuery.lastModified[ cacheURL ] = modified;
						}
						modified = jqXHR.getResponseHeader( "etag" );
						if ( modified ) {
							jQuery.etag[ cacheURL ] = modified;
						}
					}

					// if no content
					if ( status === 204 || s.type === "HEAD" ) {
						statusText = "nocontent";

					// if not modified
					} else if ( status === 304 ) {
						statusText = "notmodified";

					// If we have data, let's convert it
					} else {
						statusText = response.state;
						success = response.data;
						error = response.error;
						isSuccess = !error;
					}
				} else {

					// Extract error from statusText and normalize for non-aborts
					error = statusText;
					if ( status || !statusText ) {
						statusText = "error";
						if ( status < 0 ) {
							status = 0;
						}
					}
				}

				// Set data for the fake xhr object
				jqXHR.status = status;
				jqXHR.statusText = ( nativeStatusText || statusText ) + "";

				// Success/Error
				if ( isSuccess ) {
					deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
				} else {
					deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
				}

				// Status-dependent callbacks
				jqXHR.statusCode( statusCode );
				statusCode = undefined;

				if ( fireGlobals ) {
					globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
						[ jqXHR, s, isSuccess ? success : error ] );
				}

				// Complete
				completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

				if ( fireGlobals ) {
					globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );

					// Handle the global AJAX counter
					if ( !( --jQuery.active ) ) {
						jQuery.event.trigger( "ajaxStop" );
					}
				}
			}

			return jqXHR;
		},

		getJSON: function( url, data, callback ) {
			return jQuery.get( url, data, callback, "json" );
		},

		getScript: function( url, callback ) {
			return jQuery.get( url, undefined, callback, "script" );
		}
	} );

	jQuery.each( [ "get", "post" ], function( i, method ) {
		jQuery[ method ] = function( url, data, callback, type ) {

			// Shift arguments if data argument was omitted
			if ( jQuery.isFunction( data ) ) {
				type = type || callback;
				callback = data;
				data = undefined;
			}

			// The url can be an options object (which then must have .url)
			return jQuery.ajax( jQuery.extend( {
				url: url,
				type: method,
				dataType: type,
				data: data,
				success: callback
			}, jQuery.isPlainObject( url ) && url ) );
		};
	} );


	jQuery._evalUrl = function( url ) {
		return jQuery.ajax( {
			url: url,

			// Make this explicit, since user can override this through ajaxSetup (#11264)
			type: "GET",
			dataType: "script",
			async: false,
			global: false,
			"throws": true
		} );
	};


	jQuery.fn.extend( {
		wrapAll: function( html ) {
			var wrap;

			if ( jQuery.isFunction( html ) ) {
				return this.each( function( i ) {
					jQuery( this ).wrapAll( html.call( this, i ) );
				} );
			}

			if ( this[ 0 ] ) {

				// The elements to wrap the target around
				wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

				if ( this[ 0 ].parentNode ) {
					wrap.insertBefore( this[ 0 ] );
				}

				wrap.map( function() {
					var elem = this;

					while ( elem.firstElementChild ) {
						elem = elem.firstElementChild;
					}

					return elem;
				} ).append( this );
			}

			return this;
		},

		wrapInner: function( html ) {
			if ( jQuery.isFunction( html ) ) {
				return this.each( function( i ) {
					jQuery( this ).wrapInner( html.call( this, i ) );
				} );
			}

			return this.each( function() {
				var self = jQuery( this ),
					contents = self.contents();

				if ( contents.length ) {
					contents.wrapAll( html );

				} else {
					self.append( html );
				}
			} );
		},

		wrap: function( html ) {
			var isFunction = jQuery.isFunction( html );

			return this.each( function( i ) {
				jQuery( this ).wrapAll( isFunction ? html.call( this, i ) : html );
			} );
		},

		unwrap: function() {
			return this.parent().each( function() {
				if ( !jQuery.nodeName( this, "body" ) ) {
					jQuery( this ).replaceWith( this.childNodes );
				}
			} ).end();
		}
	} );


	jQuery.expr.filters.hidden = function( elem ) {
		return !jQuery.expr.filters.visible( elem );
	};
	jQuery.expr.filters.visible = function( elem ) {

		// Support: Opera <= 12.12
		// Opera reports offsetWidths and offsetHeights less than zero on some elements
		// Use OR instead of AND as the element is not visible if either is true
		// See tickets #10406 and #13132
		return elem.offsetWidth > 0 || elem.offsetHeight > 0 || elem.getClientRects().length > 0;
	};




	var r20 = /%20/g,
		rbracket = /\[\]$/,
		rCRLF = /\r?\n/g,
		rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
		rsubmittable = /^(?:input|select|textarea|keygen)/i;

	function buildParams( prefix, obj, traditional, add ) {
		var name;

		if ( jQuery.isArray( obj ) ) {

			// Serialize array item.
			jQuery.each( obj, function( i, v ) {
				if ( traditional || rbracket.test( prefix ) ) {

					// Treat each array item as a scalar.
					add( prefix, v );

				} else {

					// Item is non-scalar (array or object), encode its numeric index.
					buildParams(
						prefix + "[" + ( typeof v === "object" && v != null ? i : "" ) + "]",
						v,
						traditional,
						add
					);
				}
			} );

		} else if ( !traditional && jQuery.type( obj ) === "object" ) {

			// Serialize object item.
			for ( name in obj ) {
				buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
			}

		} else {

			// Serialize scalar item.
			add( prefix, obj );
		}
	}

	// Serialize an array of form elements or a set of
	// key/values into a query string
	jQuery.param = function( a, traditional ) {
		var prefix,
			s = [],
			add = function( key, value ) {

				// If value is a function, invoke it and return its value
				value = jQuery.isFunction( value ) ? value() : ( value == null ? "" : value );
				s[ s.length ] = encodeURIComponent( key ) + "=" + encodeURIComponent( value );
			};

		// Set traditional to true for jQuery <= 1.3.2 behavior.
		if ( traditional === undefined ) {
			traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;
		}

		// If an array was passed in, assume that it is an array of form elements.
		if ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {

			// Serialize the form elements
			jQuery.each( a, function() {
				add( this.name, this.value );
			} );

		} else {

			// If traditional, encode the "old" way (the way 1.3.2 or older
			// did it), otherwise encode params recursively.
			for ( prefix in a ) {
				buildParams( prefix, a[ prefix ], traditional, add );
			}
		}

		// Return the resulting serialization
		return s.join( "&" ).replace( r20, "+" );
	};

	jQuery.fn.extend( {
		serialize: function() {
			return jQuery.param( this.serializeArray() );
		},
		serializeArray: function() {
			return this.map( function() {

				// Can add propHook for "elements" to filter or add form elements
				var elements = jQuery.prop( this, "elements" );
				return elements ? jQuery.makeArray( elements ) : this;
			} )
			.filter( function() {
				var type = this.type;

				// Use .is( ":disabled" ) so that fieldset[disabled] works
				return this.name && !jQuery( this ).is( ":disabled" ) &&
					rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
					( this.checked || !rcheckableType.test( type ) );
			} )
			.map( function( i, elem ) {
				var val = jQuery( this ).val();

				return val == null ?
					null :
					jQuery.isArray( val ) ?
						jQuery.map( val, function( val ) {
							return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
						} ) :
						{ name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
			} ).get();
		}
	} );


	jQuery.ajaxSettings.xhr = function() {
		try {
			return new window.XMLHttpRequest();
		} catch ( e ) {}
	};

	var xhrSuccessStatus = {

			// File protocol always yields status code 0, assume 200
			0: 200,

			// Support: IE9
			// #1450: sometimes IE returns 1223 when it should be 204
			1223: 204
		},
		xhrSupported = jQuery.ajaxSettings.xhr();

	support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
	support.ajax = xhrSupported = !!xhrSupported;

	jQuery.ajaxTransport( function( options ) {
		var callback, errorCallback;

		// Cross domain only allowed if supported through XMLHttpRequest
		if ( support.cors || xhrSupported && !options.crossDomain ) {
			return {
				send: function( headers, complete ) {
					var i,
						xhr = options.xhr();

					xhr.open(
						options.type,
						options.url,
						options.async,
						options.username,
						options.password
					);

					// Apply custom fields if provided
					if ( options.xhrFields ) {
						for ( i in options.xhrFields ) {
							xhr[ i ] = options.xhrFields[ i ];
						}
					}

					// Override mime type if needed
					if ( options.mimeType && xhr.overrideMimeType ) {
						xhr.overrideMimeType( options.mimeType );
					}

					// X-Requested-With header
					// For cross-domain requests, seeing as conditions for a preflight are
					// akin to a jigsaw puzzle, we simply never set it to be sure.
					// (it can always be set on a per-request basis or even using ajaxSetup)
					// For same-domain requests, won't change header if already provided.
					if ( !options.crossDomain && !headers[ "X-Requested-With" ] ) {
						headers[ "X-Requested-With" ] = "XMLHttpRequest";
					}

					// Set headers
					for ( i in headers ) {
						xhr.setRequestHeader( i, headers[ i ] );
					}

					// Callback
					callback = function( type ) {
						return function() {
							if ( callback ) {
								callback = errorCallback = xhr.onload =
									xhr.onerror = xhr.onabort = xhr.onreadystatechange = null;

								if ( type === "abort" ) {
									xhr.abort();
								} else if ( type === "error" ) {

									// Support: IE9
									// On a manual native abort, IE9 throws
									// errors on any property access that is not readyState
									if ( typeof xhr.status !== "number" ) {
										complete( 0, "error" );
									} else {
										complete(

											// File: protocol always yields status 0; see #8605, #14207
											xhr.status,
											xhr.statusText
										);
									}
								} else {
									complete(
										xhrSuccessStatus[ xhr.status ] || xhr.status,
										xhr.statusText,

										// Support: IE9 only
										// IE9 has no XHR2 but throws on binary (trac-11426)
										// For XHR2 non-text, let the caller handle it (gh-2498)
										( xhr.responseType || "text" ) !== "text"  ||
										typeof xhr.responseText !== "string" ?
											{ binary: xhr.response } :
											{ text: xhr.responseText },
										xhr.getAllResponseHeaders()
									);
								}
							}
						};
					};

					// Listen to events
					xhr.onload = callback();
					errorCallback = xhr.onerror = callback( "error" );

					// Support: IE9
					// Use onreadystatechange to replace onabort
					// to handle uncaught aborts
					if ( xhr.onabort !== undefined ) {
						xhr.onabort = errorCallback;
					} else {
						xhr.onreadystatechange = function() {

							// Check readyState before timeout as it changes
							if ( xhr.readyState === 4 ) {

								// Allow onerror to be called first,
								// but that will not handle a native abort
								// Also, save errorCallback to a variable
								// as xhr.onerror cannot be accessed
								window.setTimeout( function() {
									if ( callback ) {
										errorCallback();
									}
								} );
							}
						};
					}

					// Create the abort callback
					callback = callback( "abort" );

					try {

						// Do send the request (this may raise an exception)
						xhr.send( options.hasContent && options.data || null );
					} catch ( e ) {

						// #14683: Only rethrow if this hasn't been notified as an error yet
						if ( callback ) {
							throw e;
						}
					}
				},

				abort: function() {
					if ( callback ) {
						callback();
					}
				}
			};
		}
	} );




	// Install script dataType
	jQuery.ajaxSetup( {
		accepts: {
			script: "text/javascript, application/javascript, " +
				"application/ecmascript, application/x-ecmascript"
		},
		contents: {
			script: /\b(?:java|ecma)script\b/
		},
		converters: {
			"text script": function( text ) {
				jQuery.globalEval( text );
				return text;
			}
		}
	} );

	// Handle cache's special case and crossDomain
	jQuery.ajaxPrefilter( "script", function( s ) {
		if ( s.cache === undefined ) {
			s.cache = false;
		}
		if ( s.crossDomain ) {
			s.type = "GET";
		}
	} );

	// Bind script tag hack transport
	jQuery.ajaxTransport( "script", function( s ) {

		// This transport only deals with cross domain requests
		if ( s.crossDomain ) {
			var script, callback;
			return {
				send: function( _, complete ) {
					script = jQuery( "<script>" ).prop( {
						charset: s.scriptCharset,
						src: s.url
					} ).on(
						"load error",
						callback = function( evt ) {
							script.remove();
							callback = null;
							if ( evt ) {
								complete( evt.type === "error" ? 404 : 200, evt.type );
							}
						}
					);

					// Use native DOM manipulation to avoid our domManip AJAX trickery
					document.head.appendChild( script[ 0 ] );
				},
				abort: function() {
					if ( callback ) {
						callback();
					}
				}
			};
		}
	} );




	var oldCallbacks = [],
		rjsonp = /(=)\?(?=&|$)|\?\?/;

	// Default jsonp settings
	jQuery.ajaxSetup( {
		jsonp: "callback",
		jsonpCallback: function() {
			var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce++ ) );
			this[ callback ] = true;
			return callback;
		}
	} );

	// Detect, normalize options and install callbacks for jsonp requests
	jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

		var callbackName, overwritten, responseContainer,
			jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
				"url" :
				typeof s.data === "string" &&
					( s.contentType || "" )
						.indexOf( "application/x-www-form-urlencoded" ) === 0 &&
					rjsonp.test( s.data ) && "data"
			);

		// Handle iff the expected data type is "jsonp" or we have a parameter to set
		if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

			// Get callback name, remembering preexisting value associated with it
			callbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?
				s.jsonpCallback() :
				s.jsonpCallback;

			// Insert callback into url or form data
			if ( jsonProp ) {
				s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
			} else if ( s.jsonp !== false ) {
				s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
			}

			// Use data converter to retrieve json after script execution
			s.converters[ "script json" ] = function() {
				if ( !responseContainer ) {
					jQuery.error( callbackName + " was not called" );
				}
				return responseContainer[ 0 ];
			};

			// Force json dataType
			s.dataTypes[ 0 ] = "json";

			// Install callback
			overwritten = window[ callbackName ];
			window[ callbackName ] = function() {
				responseContainer = arguments;
			};

			// Clean-up function (fires after converters)
			jqXHR.always( function() {

				// If previous value didn't exist - remove it
				if ( overwritten === undefined ) {
					jQuery( window ).removeProp( callbackName );

				// Otherwise restore preexisting value
				} else {
					window[ callbackName ] = overwritten;
				}

				// Save back as free
				if ( s[ callbackName ] ) {

					// Make sure that re-using the options doesn't screw things around
					s.jsonpCallback = originalSettings.jsonpCallback;

					// Save the callback name for future use
					oldCallbacks.push( callbackName );
				}

				// Call if it was a function and we have a response
				if ( responseContainer && jQuery.isFunction( overwritten ) ) {
					overwritten( responseContainer[ 0 ] );
				}

				responseContainer = overwritten = undefined;
			} );

			// Delegate to script
			return "script";
		}
	} );




	// Argument "data" should be string of html
	// context (optional): If specified, the fragment will be created in this context,
	// defaults to document
	// keepScripts (optional): If true, will include scripts passed in the html string
	jQuery.parseHTML = function( data, context, keepScripts ) {
		if ( !data || typeof data !== "string" ) {
			return null;
		}
		if ( typeof context === "boolean" ) {
			keepScripts = context;
			context = false;
		}
		context = context || document;

		var parsed = rsingleTag.exec( data ),
			scripts = !keepScripts && [];

		// Single tag
		if ( parsed ) {
			return [ context.createElement( parsed[ 1 ] ) ];
		}

		parsed = buildFragment( [ data ], context, scripts );

		if ( scripts && scripts.length ) {
			jQuery( scripts ).remove();
		}

		return jQuery.merge( [], parsed.childNodes );
	};


	// Keep a copy of the old load method
	var _load = jQuery.fn.load;

	/**
	 * Load a url into a page
	 */
	jQuery.fn.load = function( url, params, callback ) {
		if ( typeof url !== "string" && _load ) {
			return _load.apply( this, arguments );
		}

		var selector, type, response,
			self = this,
			off = url.indexOf( " " );

		if ( off > -1 ) {
			selector = jQuery.trim( url.slice( off ) );
			url = url.slice( 0, off );
		}

		// If it's a function
		if ( jQuery.isFunction( params ) ) {

			// We assume that it's the callback
			callback = params;
			params = undefined;

		// Otherwise, build a param string
		} else if ( params && typeof params === "object" ) {
			type = "POST";
		}

		// If we have elements to modify, make the request
		if ( self.length > 0 ) {
			jQuery.ajax( {
				url: url,

				// If "type" variable is undefined, then "GET" method will be used.
				// Make value of this field explicit since
				// user can override it through ajaxSetup method
				type: type || "GET",
				dataType: "html",
				data: params
			} ).done( function( responseText ) {

				// Save response for use in complete callback
				response = arguments;

				self.html( selector ?

					// If a selector was specified, locate the right elements in a dummy div
					// Exclude scripts to avoid IE 'Permission Denied' errors
					jQuery( "<div>" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :

					// Otherwise use the full result
					responseText );

			// If the request succeeds, this function gets "data", "status", "jqXHR"
			// but they are ignored because response was set above.
			// If it fails, this function gets "jqXHR", "status", "error"
			} ).always( callback && function( jqXHR, status ) {
				self.each( function() {
					callback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );
				} );
			} );
		}

		return this;
	};




	// Attach a bunch of functions for handling common AJAX events
	jQuery.each( [
		"ajaxStart",
		"ajaxStop",
		"ajaxComplete",
		"ajaxError",
		"ajaxSuccess",
		"ajaxSend"
	], function( i, type ) {
		jQuery.fn[ type ] = function( fn ) {
			return this.on( type, fn );
		};
	} );




	jQuery.expr.filters.animated = function( elem ) {
		return jQuery.grep( jQuery.timers, function( fn ) {
			return elem === fn.elem;
		} ).length;
	};




	/**
	 * Gets a window from an element
	 */
	function getWindow( elem ) {
		return jQuery.isWindow( elem ) ? elem : elem.nodeType === 9 && elem.defaultView;
	}

	jQuery.offset = {
		setOffset: function( elem, options, i ) {
			var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
				position = jQuery.css( elem, "position" ),
				curElem = jQuery( elem ),
				props = {};

			// Set position first, in-case top/left are set even on static elem
			if ( position === "static" ) {
				elem.style.position = "relative";
			}

			curOffset = curElem.offset();
			curCSSTop = jQuery.css( elem, "top" );
			curCSSLeft = jQuery.css( elem, "left" );
			calculatePosition = ( position === "absolute" || position === "fixed" ) &&
				( curCSSTop + curCSSLeft ).indexOf( "auto" ) > -1;

			// Need to be able to calculate position if either
			// top or left is auto and position is either absolute or fixed
			if ( calculatePosition ) {
				curPosition = curElem.position();
				curTop = curPosition.top;
				curLeft = curPosition.left;

			} else {
				curTop = parseFloat( curCSSTop ) || 0;
				curLeft = parseFloat( curCSSLeft ) || 0;
			}

			if ( jQuery.isFunction( options ) ) {

				// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
				options = options.call( elem, i, jQuery.extend( {}, curOffset ) );
			}

			if ( options.top != null ) {
				props.top = ( options.top - curOffset.top ) + curTop;
			}
			if ( options.left != null ) {
				props.left = ( options.left - curOffset.left ) + curLeft;
			}

			if ( "using" in options ) {
				options.using.call( elem, props );

			} else {
				curElem.css( props );
			}
		}
	};

	jQuery.fn.extend( {
		offset: function( options ) {
			if ( arguments.length ) {
				return options === undefined ?
					this :
					this.each( function( i ) {
						jQuery.offset.setOffset( this, options, i );
					} );
			}

			var docElem, win,
				elem = this[ 0 ],
				box = { top: 0, left: 0 },
				doc = elem && elem.ownerDocument;

			if ( !doc ) {
				return;
			}

			docElem = doc.documentElement;

			// Make sure it's not a disconnected DOM node
			if ( !jQuery.contains( docElem, elem ) ) {
				return box;
			}

			box = elem.getBoundingClientRect();
			win = getWindow( doc );
			return {
				top: box.top + win.pageYOffset - docElem.clientTop,
				left: box.left + win.pageXOffset - docElem.clientLeft
			};
		},

		position: function() {
			if ( !this[ 0 ] ) {
				return;
			}

			var offsetParent, offset,
				elem = this[ 0 ],
				parentOffset = { top: 0, left: 0 };

			// Fixed elements are offset from window (parentOffset = {top:0, left: 0},
			// because it is its only offset parent
			if ( jQuery.css( elem, "position" ) === "fixed" ) {

				// Assume getBoundingClientRect is there when computed position is fixed
				offset = elem.getBoundingClientRect();

			} else {

				// Get *real* offsetParent
				offsetParent = this.offsetParent();

				// Get correct offsets
				offset = this.offset();
				if ( !jQuery.nodeName( offsetParent[ 0 ], "html" ) ) {
					parentOffset = offsetParent.offset();
				}

				// Add offsetParent borders
				parentOffset.top += jQuery.css( offsetParent[ 0 ], "borderTopWidth", true );
				parentOffset.left += jQuery.css( offsetParent[ 0 ], "borderLeftWidth", true );
			}

			// Subtract parent offsets and element margins
			return {
				top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
				left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
			};
		},

		// This method will return documentElement in the following cases:
		// 1) For the element inside the iframe without offsetParent, this method will return
		//    documentElement of the parent window
		// 2) For the hidden or detached element
		// 3) For body or html element, i.e. in case of the html node - it will return itself
		//
		// but those exceptions were never presented as a real life use-cases
		// and might be considered as more preferable results.
		//
		// This logic, however, is not guaranteed and can change at any point in the future
		offsetParent: function() {
			return this.map( function() {
				var offsetParent = this.offsetParent;

				while ( offsetParent && jQuery.css( offsetParent, "position" ) === "static" ) {
					offsetParent = offsetParent.offsetParent;
				}

				return offsetParent || documentElement;
			} );
		}
	} );

	// Create scrollLeft and scrollTop methods
	jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
		var top = "pageYOffset" === prop;

		jQuery.fn[ method ] = function( val ) {
			return access( this, function( elem, method, val ) {
				var win = getWindow( elem );

				if ( val === undefined ) {
					return win ? win[ prop ] : elem[ method ];
				}

				if ( win ) {
					win.scrollTo(
						!top ? val : win.pageXOffset,
						top ? val : win.pageYOffset
					);

				} else {
					elem[ method ] = val;
				}
			}, method, val, arguments.length );
		};
	} );

	// Support: Safari<7-8+, Chrome<37-44+
	// Add the top/left cssHooks using jQuery.fn.position
	// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
	// Blink bug: https://code.google.com/p/chromium/issues/detail?id=229280
	// getComputedStyle returns percent when specified for top/left/bottom/right;
	// rather than make the css module depend on the offset module, just check for it here
	jQuery.each( [ "top", "left" ], function( i, prop ) {
		jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
			function( elem, computed ) {
				if ( computed ) {
					computed = curCSS( elem, prop );

					// If curCSS returns percentage, fallback to offset
					return rnumnonpx.test( computed ) ?
						jQuery( elem ).position()[ prop ] + "px" :
						computed;
				}
			}
		);
	} );


	// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
	jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
		jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name },
			function( defaultExtra, funcName ) {

			// Margin is only for outerHeight, outerWidth
			jQuery.fn[ funcName ] = function( margin, value ) {
				var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
					extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

				return access( this, function( elem, type, value ) {
					var doc;

					if ( jQuery.isWindow( elem ) ) {

						// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there
						// isn't a whole lot we can do. See pull request at this URL for discussion:
						// https://github.com/jquery/jquery/pull/764
						return elem.document.documentElement[ "client" + name ];
					}

					// Get document width or height
					if ( elem.nodeType === 9 ) {
						doc = elem.documentElement;

						// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
						// whichever is greatest
						return Math.max(
							elem.body[ "scroll" + name ], doc[ "scroll" + name ],
							elem.body[ "offset" + name ], doc[ "offset" + name ],
							doc[ "client" + name ]
						);
					}

					return value === undefined ?

						// Get width or height on the element, requesting but not forcing parseFloat
						jQuery.css( elem, type, extra ) :

						// Set width or height on the element
						jQuery.style( elem, type, value, extra );
				}, type, chainable ? margin : undefined, chainable, null );
			};
		} );
	} );


	jQuery.fn.extend( {

		bind: function( types, data, fn ) {
			return this.on( types, null, data, fn );
		},
		unbind: function( types, fn ) {
			return this.off( types, null, fn );
		},

		delegate: function( selector, types, data, fn ) {
			return this.on( types, selector, data, fn );
		},
		undelegate: function( selector, types, fn ) {

			// ( namespace ) or ( selector, types [, fn] )
			return arguments.length === 1 ?
				this.off( selector, "**" ) :
				this.off( types, selector || "**", fn );
		},
		size: function() {
			return this.length;
		}
	} );

	jQuery.fn.andSelf = jQuery.fn.addBack;




	// Register as a named AMD module, since jQuery can be concatenated with other
	// files that may use define, but not via a proper concatenation script that
	// understands anonymous AMD modules. A named AMD is safest and most robust
	// way to register. Lowercase jquery is used because AMD module names are
	// derived from file names, and jQuery is normally delivered in a lowercase
	// file name. Do this after creating the global so that if an AMD module wants
	// to call noConflict to hide this version of jQuery, it will work.

	// Note that for maximum portability, libraries that are not jQuery should
	// declare themselves as anonymous modules, and avoid setting a global if an
	// AMD loader is present. jQuery is a special case. For more information, see
	// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

	if ( true ) {
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {
			return jQuery;
		}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	}



	var

		// Map over jQuery in case of overwrite
		_jQuery = window.jQuery,

		// Map over the $ in case of overwrite
		_$ = window.$;

	jQuery.noConflict = function( deep ) {
		if ( window.$ === jQuery ) {
			window.$ = _$;
		}

		if ( deep && window.jQuery === jQuery ) {
			window.jQuery = _jQuery;
		}

		return jQuery;
	};

	// Expose jQuery and $ identifiers, even in AMD
	// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
	// and CommonJS for browser emulators (#13566)
	if ( !noGlobal ) {
		window.jQuery = window.$ = jQuery;
	}

	return jQuery;
	}));


/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {"use strict";

	__webpack_require__(3);

	__webpack_require__(294);

	__webpack_require__(296);

	if (global._babelPolyfill) {
	  throw new Error("only one instance of babel-polyfill is allowed");
	}
	global._babelPolyfill = true;

	var DEFINE_PROPERTY = "defineProperty";
	function define(O, key, value) {
	  O[key] || Object[DEFINE_PROPERTY](O, key, {
	    writable: true,
	    configurable: true,
	    value: value
	  });
	}

	define(String.prototype, "padLeft", "".padStart);
	define(String.prototype, "padRight", "".padEnd);

	"pop,reverse,shift,keys,values,entries,indexOf,every,some,forEach,map,filter,find,findIndex,includes,join,slice,concat,push,splice,unshift,sort,lastIndexOf,reduce,reduceRight,copyWithin,fill".split(",").forEach(function (key) {
	  [][key] && define(Array, key, Function.call.bind([][key]));
	});
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(4);
	__webpack_require__(53);
	__webpack_require__(54);
	__webpack_require__(55);
	__webpack_require__(56);
	__webpack_require__(58);
	__webpack_require__(61);
	__webpack_require__(62);
	__webpack_require__(63);
	__webpack_require__(64);
	__webpack_require__(65);
	__webpack_require__(66);
	__webpack_require__(67);
	__webpack_require__(68);
	__webpack_require__(69);
	__webpack_require__(71);
	__webpack_require__(73);
	__webpack_require__(75);
	__webpack_require__(77);
	__webpack_require__(80);
	__webpack_require__(81);
	__webpack_require__(82);
	__webpack_require__(86);
	__webpack_require__(88);
	__webpack_require__(90);
	__webpack_require__(93);
	__webpack_require__(94);
	__webpack_require__(95);
	__webpack_require__(96);
	__webpack_require__(98);
	__webpack_require__(99);
	__webpack_require__(100);
	__webpack_require__(101);
	__webpack_require__(102);
	__webpack_require__(103);
	__webpack_require__(104);
	__webpack_require__(106);
	__webpack_require__(107);
	__webpack_require__(108);
	__webpack_require__(110);
	__webpack_require__(111);
	__webpack_require__(112);
	__webpack_require__(114);
	__webpack_require__(115);
	__webpack_require__(116);
	__webpack_require__(117);
	__webpack_require__(118);
	__webpack_require__(119);
	__webpack_require__(120);
	__webpack_require__(121);
	__webpack_require__(122);
	__webpack_require__(123);
	__webpack_require__(124);
	__webpack_require__(125);
	__webpack_require__(126);
	__webpack_require__(127);
	__webpack_require__(132);
	__webpack_require__(133);
	__webpack_require__(137);
	__webpack_require__(138);
	__webpack_require__(139);
	__webpack_require__(140);
	__webpack_require__(142);
	__webpack_require__(143);
	__webpack_require__(144);
	__webpack_require__(145);
	__webpack_require__(146);
	__webpack_require__(147);
	__webpack_require__(148);
	__webpack_require__(149);
	__webpack_require__(150);
	__webpack_require__(151);
	__webpack_require__(152);
	__webpack_require__(153);
	__webpack_require__(154);
	__webpack_require__(155);
	__webpack_require__(156);
	__webpack_require__(157);
	__webpack_require__(158);
	__webpack_require__(160);
	__webpack_require__(161);
	__webpack_require__(167);
	__webpack_require__(168);
	__webpack_require__(170);
	__webpack_require__(171);
	__webpack_require__(172);
	__webpack_require__(176);
	__webpack_require__(177);
	__webpack_require__(178);
	__webpack_require__(179);
	__webpack_require__(180);
	__webpack_require__(182);
	__webpack_require__(183);
	__webpack_require__(184);
	__webpack_require__(185);
	__webpack_require__(188);
	__webpack_require__(190);
	__webpack_require__(191);
	__webpack_require__(192);
	__webpack_require__(194);
	__webpack_require__(196);
	__webpack_require__(198);
	__webpack_require__(199);
	__webpack_require__(200);
	__webpack_require__(202);
	__webpack_require__(203);
	__webpack_require__(204);
	__webpack_require__(205);
	__webpack_require__(212);
	__webpack_require__(215);
	__webpack_require__(216);
	__webpack_require__(218);
	__webpack_require__(219);
	__webpack_require__(222);
	__webpack_require__(223);
	__webpack_require__(225);
	__webpack_require__(226);
	__webpack_require__(227);
	__webpack_require__(228);
	__webpack_require__(229);
	__webpack_require__(230);
	__webpack_require__(231);
	__webpack_require__(232);
	__webpack_require__(233);
	__webpack_require__(234);
	__webpack_require__(235);
	__webpack_require__(236);
	__webpack_require__(237);
	__webpack_require__(238);
	__webpack_require__(239);
	__webpack_require__(240);
	__webpack_require__(241);
	__webpack_require__(242);
	__webpack_require__(243);
	__webpack_require__(245);
	__webpack_require__(246);
	__webpack_require__(247);
	__webpack_require__(248);
	__webpack_require__(249);
	__webpack_require__(250);
	__webpack_require__(252);
	__webpack_require__(253);
	__webpack_require__(254);
	__webpack_require__(255);
	__webpack_require__(256);
	__webpack_require__(257);
	__webpack_require__(258);
	__webpack_require__(259);
	__webpack_require__(261);
	__webpack_require__(262);
	__webpack_require__(264);
	__webpack_require__(265);
	__webpack_require__(266);
	__webpack_require__(267);
	__webpack_require__(270);
	__webpack_require__(271);
	__webpack_require__(272);
	__webpack_require__(273);
	__webpack_require__(274);
	__webpack_require__(275);
	__webpack_require__(276);
	__webpack_require__(277);
	__webpack_require__(279);
	__webpack_require__(280);
	__webpack_require__(281);
	__webpack_require__(282);
	__webpack_require__(283);
	__webpack_require__(284);
	__webpack_require__(285);
	__webpack_require__(286);
	__webpack_require__(287);
	__webpack_require__(288);
	__webpack_require__(289);
	__webpack_require__(292);
	__webpack_require__(293);
	module.exports = __webpack_require__(10);

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// ECMAScript 6 symbols shim
	var global         = __webpack_require__(5)
	  , has            = __webpack_require__(6)
	  , DESCRIPTORS    = __webpack_require__(7)
	  , $export        = __webpack_require__(9)
	  , redefine       = __webpack_require__(19)
	  , META           = __webpack_require__(23).KEY
	  , $fails         = __webpack_require__(8)
	  , shared         = __webpack_require__(24)
	  , setToStringTag = __webpack_require__(25)
	  , uid            = __webpack_require__(20)
	  , wks            = __webpack_require__(26)
	  , wksExt         = __webpack_require__(27)
	  , wksDefine      = __webpack_require__(28)
	  , keyOf          = __webpack_require__(30)
	  , enumKeys       = __webpack_require__(43)
	  , isArray        = __webpack_require__(46)
	  , anObject       = __webpack_require__(13)
	  , toIObject      = __webpack_require__(33)
	  , toPrimitive    = __webpack_require__(17)
	  , createDesc     = __webpack_require__(18)
	  , _create        = __webpack_require__(47)
	  , gOPNExt        = __webpack_require__(50)
	  , $GOPD          = __webpack_require__(52)
	  , $DP            = __webpack_require__(12)
	  , $keys          = __webpack_require__(31)
	  , gOPD           = $GOPD.f
	  , dP             = $DP.f
	  , gOPN           = gOPNExt.f
	  , $Symbol        = global.Symbol
	  , $JSON          = global.JSON
	  , _stringify     = $JSON && $JSON.stringify
	  , PROTOTYPE      = 'prototype'
	  , HIDDEN         = wks('_hidden')
	  , TO_PRIMITIVE   = wks('toPrimitive')
	  , isEnum         = {}.propertyIsEnumerable
	  , SymbolRegistry = shared('symbol-registry')
	  , AllSymbols     = shared('symbols')
	  , OPSymbols      = shared('op-symbols')
	  , ObjectProto    = Object[PROTOTYPE]
	  , USE_NATIVE     = typeof $Symbol == 'function'
	  , QObject        = global.QObject;
	// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
	var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

	// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
	var setSymbolDesc = DESCRIPTORS && $fails(function(){
	  return _create(dP({}, 'a', {
	    get: function(){ return dP(this, 'a', {value: 7}).a; }
	  })).a != 7;
	}) ? function(it, key, D){
	  var protoDesc = gOPD(ObjectProto, key);
	  if(protoDesc)delete ObjectProto[key];
	  dP(it, key, D);
	  if(protoDesc && it !== ObjectProto)dP(ObjectProto, key, protoDesc);
	} : dP;

	var wrap = function(tag){
	  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
	  sym._k = tag;
	  return sym;
	};

	var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function(it){
	  return typeof it == 'symbol';
	} : function(it){
	  return it instanceof $Symbol;
	};

	var $defineProperty = function defineProperty(it, key, D){
	  if(it === ObjectProto)$defineProperty(OPSymbols, key, D);
	  anObject(it);
	  key = toPrimitive(key, true);
	  anObject(D);
	  if(has(AllSymbols, key)){
	    if(!D.enumerable){
	      if(!has(it, HIDDEN))dP(it, HIDDEN, createDesc(1, {}));
	      it[HIDDEN][key] = true;
	    } else {
	      if(has(it, HIDDEN) && it[HIDDEN][key])it[HIDDEN][key] = false;
	      D = _create(D, {enumerable: createDesc(0, false)});
	    } return setSymbolDesc(it, key, D);
	  } return dP(it, key, D);
	};
	var $defineProperties = function defineProperties(it, P){
	  anObject(it);
	  var keys = enumKeys(P = toIObject(P))
	    , i    = 0
	    , l = keys.length
	    , key;
	  while(l > i)$defineProperty(it, key = keys[i++], P[key]);
	  return it;
	};
	var $create = function create(it, P){
	  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
	};
	var $propertyIsEnumerable = function propertyIsEnumerable(key){
	  var E = isEnum.call(this, key = toPrimitive(key, true));
	  if(this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return false;
	  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
	};
	var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key){
	  it  = toIObject(it);
	  key = toPrimitive(key, true);
	  if(it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return;
	  var D = gOPD(it, key);
	  if(D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key]))D.enumerable = true;
	  return D;
	};
	var $getOwnPropertyNames = function getOwnPropertyNames(it){
	  var names  = gOPN(toIObject(it))
	    , result = []
	    , i      = 0
	    , key;
	  while(names.length > i){
	    if(!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META)result.push(key);
	  } return result;
	};
	var $getOwnPropertySymbols = function getOwnPropertySymbols(it){
	  var IS_OP  = it === ObjectProto
	    , names  = gOPN(IS_OP ? OPSymbols : toIObject(it))
	    , result = []
	    , i      = 0
	    , key;
	  while(names.length > i){
	    if(has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true))result.push(AllSymbols[key]);
	  } return result;
	};

	// 19.4.1.1 Symbol([description])
	if(!USE_NATIVE){
	  $Symbol = function Symbol(){
	    if(this instanceof $Symbol)throw TypeError('Symbol is not a constructor!');
	    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
	    var $set = function(value){
	      if(this === ObjectProto)$set.call(OPSymbols, value);
	      if(has(this, HIDDEN) && has(this[HIDDEN], tag))this[HIDDEN][tag] = false;
	      setSymbolDesc(this, tag, createDesc(1, value));
	    };
	    if(DESCRIPTORS && setter)setSymbolDesc(ObjectProto, tag, {configurable: true, set: $set});
	    return wrap(tag);
	  };
	  redefine($Symbol[PROTOTYPE], 'toString', function toString(){
	    return this._k;
	  });

	  $GOPD.f = $getOwnPropertyDescriptor;
	  $DP.f   = $defineProperty;
	  __webpack_require__(51).f = gOPNExt.f = $getOwnPropertyNames;
	  __webpack_require__(45).f  = $propertyIsEnumerable;
	  __webpack_require__(44).f = $getOwnPropertySymbols;

	  if(DESCRIPTORS && !__webpack_require__(29)){
	    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
	  }

	  wksExt.f = function(name){
	    return wrap(wks(name));
	  }
	}

	$export($export.G + $export.W + $export.F * !USE_NATIVE, {Symbol: $Symbol});

	for(var symbols = (
	  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
	  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
	).split(','), i = 0; symbols.length > i; )wks(symbols[i++]);

	for(var symbols = $keys(wks.store), i = 0; symbols.length > i; )wksDefine(symbols[i++]);

	$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
	  // 19.4.2.1 Symbol.for(key)
	  'for': function(key){
	    return has(SymbolRegistry, key += '')
	      ? SymbolRegistry[key]
	      : SymbolRegistry[key] = $Symbol(key);
	  },
	  // 19.4.2.5 Symbol.keyFor(sym)
	  keyFor: function keyFor(key){
	    if(isSymbol(key))return keyOf(SymbolRegistry, key);
	    throw TypeError(key + ' is not a symbol!');
	  },
	  useSetter: function(){ setter = true; },
	  useSimple: function(){ setter = false; }
	});

	$export($export.S + $export.F * !USE_NATIVE, 'Object', {
	  // 19.1.2.2 Object.create(O [, Properties])
	  create: $create,
	  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
	  defineProperty: $defineProperty,
	  // 19.1.2.3 Object.defineProperties(O, Properties)
	  defineProperties: $defineProperties,
	  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
	  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
	  // 19.1.2.7 Object.getOwnPropertyNames(O)
	  getOwnPropertyNames: $getOwnPropertyNames,
	  // 19.1.2.8 Object.getOwnPropertySymbols(O)
	  getOwnPropertySymbols: $getOwnPropertySymbols
	});

	// 24.3.2 JSON.stringify(value [, replacer [, space]])
	$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function(){
	  var S = $Symbol();
	  // MS Edge converts symbol values to JSON as {}
	  // WebKit converts symbol values to JSON as null
	  // V8 throws on boxed symbols
	  return _stringify([S]) != '[null]' || _stringify({a: S}) != '{}' || _stringify(Object(S)) != '{}';
	})), 'JSON', {
	  stringify: function stringify(it){
	    if(it === undefined || isSymbol(it))return; // IE8 returns string on undefined
	    var args = [it]
	      , i    = 1
	      , replacer, $replacer;
	    while(arguments.length > i)args.push(arguments[i++]);
	    replacer = args[1];
	    if(typeof replacer == 'function')$replacer = replacer;
	    if($replacer || !isArray(replacer))replacer = function(key, value){
	      if($replacer)value = $replacer.call(this, key, value);
	      if(!isSymbol(value))return value;
	    };
	    args[1] = replacer;
	    return _stringify.apply($JSON, args);
	  }
	});

	// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
	$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(11)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
	// 19.4.3.5 Symbol.prototype[@@toStringTag]
	setToStringTag($Symbol, 'Symbol');
	// 20.2.1.9 Math[@@toStringTag]
	setToStringTag(Math, 'Math', true);
	// 24.3.3 JSON[@@toStringTag]
	setToStringTag(global.JSON, 'JSON', true);

/***/ },
/* 5 */
/***/ function(module, exports) {

	// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
	var global = module.exports = typeof window != 'undefined' && window.Math == Math
	  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
	if(typeof __g == 'number')__g = global; // eslint-disable-line no-undef

/***/ },
/* 6 */
/***/ function(module, exports) {

	var hasOwnProperty = {}.hasOwnProperty;
	module.exports = function(it, key){
	  return hasOwnProperty.call(it, key);
	};

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	// Thank's IE8 for his funny defineProperty
	module.exports = !__webpack_require__(8)(function(){
	  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;
	});

/***/ },
/* 8 */
/***/ function(module, exports) {

	module.exports = function(exec){
	  try {
	    return !!exec();
	  } catch(e){
	    return true;
	  }
	};

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(5)
	  , core      = __webpack_require__(10)
	  , hide      = __webpack_require__(11)
	  , redefine  = __webpack_require__(19)
	  , ctx       = __webpack_require__(21)
	  , PROTOTYPE = 'prototype';

	var $export = function(type, name, source){
	  var IS_FORCED = type & $export.F
	    , IS_GLOBAL = type & $export.G
	    , IS_STATIC = type & $export.S
	    , IS_PROTO  = type & $export.P
	    , IS_BIND   = type & $export.B
	    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE]
	    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})
	    , expProto  = exports[PROTOTYPE] || (exports[PROTOTYPE] = {})
	    , key, own, out, exp;
	  if(IS_GLOBAL)source = name;
	  for(key in source){
	    // contains in native
	    own = !IS_FORCED && target && target[key] !== undefined;
	    // export native or passed
	    out = (own ? target : source)[key];
	    // bind timers to global for call from export context
	    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
	    // extend global
	    if(target)redefine(target, key, out, type & $export.U);
	    // export
	    if(exports[key] != out)hide(exports, key, exp);
	    if(IS_PROTO && expProto[key] != out)expProto[key] = out;
	  }
	};
	global.core = core;
	// type bitmap
	$export.F = 1;   // forced
	$export.G = 2;   // global
	$export.S = 4;   // static
	$export.P = 8;   // proto
	$export.B = 16;  // bind
	$export.W = 32;  // wrap
	$export.U = 64;  // safe
	$export.R = 128; // real proto method for `library` 
	module.exports = $export;

/***/ },
/* 10 */
/***/ function(module, exports) {

	var core = module.exports = {version: '2.4.0'};
	if(typeof __e == 'number')__e = core; // eslint-disable-line no-undef

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	var dP         = __webpack_require__(12)
	  , createDesc = __webpack_require__(18);
	module.exports = __webpack_require__(7) ? function(object, key, value){
	  return dP.f(object, key, createDesc(1, value));
	} : function(object, key, value){
	  object[key] = value;
	  return object;
	};

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	var anObject       = __webpack_require__(13)
	  , IE8_DOM_DEFINE = __webpack_require__(15)
	  , toPrimitive    = __webpack_require__(17)
	  , dP             = Object.defineProperty;

	exports.f = __webpack_require__(7) ? Object.defineProperty : function defineProperty(O, P, Attributes){
	  anObject(O);
	  P = toPrimitive(P, true);
	  anObject(Attributes);
	  if(IE8_DOM_DEFINE)try {
	    return dP(O, P, Attributes);
	  } catch(e){ /* empty */ }
	  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');
	  if('value' in Attributes)O[P] = Attributes.value;
	  return O;
	};

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(14);
	module.exports = function(it){
	  if(!isObject(it))throw TypeError(it + ' is not an object!');
	  return it;
	};

/***/ },
/* 14 */
/***/ function(module, exports) {

	module.exports = function(it){
	  return typeof it === 'object' ? it !== null : typeof it === 'function';
	};

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = !__webpack_require__(7) && !__webpack_require__(8)(function(){
	  return Object.defineProperty(__webpack_require__(16)('div'), 'a', {get: function(){ return 7; }}).a != 7;
	});

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(14)
	  , document = __webpack_require__(5).document
	  // in old IE typeof document.createElement is 'object'
	  , is = isObject(document) && isObject(document.createElement);
	module.exports = function(it){
	  return is ? document.createElement(it) : {};
	};

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.1 ToPrimitive(input [, PreferredType])
	var isObject = __webpack_require__(14);
	// instead of the ES6 spec version, we didn't implement @@toPrimitive case
	// and the second argument - flag - preferred type is a string
	module.exports = function(it, S){
	  if(!isObject(it))return it;
	  var fn, val;
	  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
	  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;
	  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
	  throw TypeError("Can't convert object to primitive value");
	};

/***/ },
/* 18 */
/***/ function(module, exports) {

	module.exports = function(bitmap, value){
	  return {
	    enumerable  : !(bitmap & 1),
	    configurable: !(bitmap & 2),
	    writable    : !(bitmap & 4),
	    value       : value
	  };
	};

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(5)
	  , hide      = __webpack_require__(11)
	  , has       = __webpack_require__(6)
	  , SRC       = __webpack_require__(20)('src')
	  , TO_STRING = 'toString'
	  , $toString = Function[TO_STRING]
	  , TPL       = ('' + $toString).split(TO_STRING);

	__webpack_require__(10).inspectSource = function(it){
	  return $toString.call(it);
	};

	(module.exports = function(O, key, val, safe){
	  var isFunction = typeof val == 'function';
	  if(isFunction)has(val, 'name') || hide(val, 'name', key);
	  if(O[key] === val)return;
	  if(isFunction)has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
	  if(O === global){
	    O[key] = val;
	  } else {
	    if(!safe){
	      delete O[key];
	      hide(O, key, val);
	    } else {
	      if(O[key])O[key] = val;
	      else hide(O, key, val);
	    }
	  }
	// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
	})(Function.prototype, TO_STRING, function toString(){
	  return typeof this == 'function' && this[SRC] || $toString.call(this);
	});

/***/ },
/* 20 */
/***/ function(module, exports) {

	var id = 0
	  , px = Math.random();
	module.exports = function(key){
	  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
	};

/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	// optional / simple context binding
	var aFunction = __webpack_require__(22);
	module.exports = function(fn, that, length){
	  aFunction(fn);
	  if(that === undefined)return fn;
	  switch(length){
	    case 1: return function(a){
	      return fn.call(that, a);
	    };
	    case 2: return function(a, b){
	      return fn.call(that, a, b);
	    };
	    case 3: return function(a, b, c){
	      return fn.call(that, a, b, c);
	    };
	  }
	  return function(/* ...args */){
	    return fn.apply(that, arguments);
	  };
	};

/***/ },
/* 22 */
/***/ function(module, exports) {

	module.exports = function(it){
	  if(typeof it != 'function')throw TypeError(it + ' is not a function!');
	  return it;
	};

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	var META     = __webpack_require__(20)('meta')
	  , isObject = __webpack_require__(14)
	  , has      = __webpack_require__(6)
	  , setDesc  = __webpack_require__(12).f
	  , id       = 0;
	var isExtensible = Object.isExtensible || function(){
	  return true;
	};
	var FREEZE = !__webpack_require__(8)(function(){
	  return isExtensible(Object.preventExtensions({}));
	});
	var setMeta = function(it){
	  setDesc(it, META, {value: {
	    i: 'O' + ++id, // object ID
	    w: {}          // weak collections IDs
	  }});
	};
	var fastKey = function(it, create){
	  // return primitive with prefix
	  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
	  if(!has(it, META)){
	    // can't set metadata to uncaught frozen object
	    if(!isExtensible(it))return 'F';
	    // not necessary to add metadata
	    if(!create)return 'E';
	    // add missing metadata
	    setMeta(it);
	  // return object ID
	  } return it[META].i;
	};
	var getWeak = function(it, create){
	  if(!has(it, META)){
	    // can't set metadata to uncaught frozen object
	    if(!isExtensible(it))return true;
	    // not necessary to add metadata
	    if(!create)return false;
	    // add missing metadata
	    setMeta(it);
	  // return hash weak collections IDs
	  } return it[META].w;
	};
	// add metadata on freeze-family methods calling
	var onFreeze = function(it){
	  if(FREEZE && meta.NEED && isExtensible(it) && !has(it, META))setMeta(it);
	  return it;
	};
	var meta = module.exports = {
	  KEY:      META,
	  NEED:     false,
	  fastKey:  fastKey,
	  getWeak:  getWeak,
	  onFreeze: onFreeze
	};

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	var global = __webpack_require__(5)
	  , SHARED = '__core-js_shared__'
	  , store  = global[SHARED] || (global[SHARED] = {});
	module.exports = function(key){
	  return store[key] || (store[key] = {});
	};

/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	var def = __webpack_require__(12).f
	  , has = __webpack_require__(6)
	  , TAG = __webpack_require__(26)('toStringTag');

	module.exports = function(it, tag, stat){
	  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});
	};

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	var store      = __webpack_require__(24)('wks')
	  , uid        = __webpack_require__(20)
	  , Symbol     = __webpack_require__(5).Symbol
	  , USE_SYMBOL = typeof Symbol == 'function';

	var $exports = module.exports = function(name){
	  return store[name] || (store[name] =
	    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
	};

	$exports.store = store;

/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	exports.f = __webpack_require__(26);

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	var global         = __webpack_require__(5)
	  , core           = __webpack_require__(10)
	  , LIBRARY        = __webpack_require__(29)
	  , wksExt         = __webpack_require__(27)
	  , defineProperty = __webpack_require__(12).f;
	module.exports = function(name){
	  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
	  if(name.charAt(0) != '_' && !(name in $Symbol))defineProperty($Symbol, name, {value: wksExt.f(name)});
	};

/***/ },
/* 29 */
/***/ function(module, exports) {

	module.exports = false;

/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	var getKeys   = __webpack_require__(31)
	  , toIObject = __webpack_require__(33);
	module.exports = function(object, el){
	  var O      = toIObject(object)
	    , keys   = getKeys(O)
	    , length = keys.length
	    , index  = 0
	    , key;
	  while(length > index)if(O[key = keys[index++]] === el)return key;
	};

/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.14 / 15.2.3.14 Object.keys(O)
	var $keys       = __webpack_require__(32)
	  , enumBugKeys = __webpack_require__(42);

	module.exports = Object.keys || function keys(O){
	  return $keys(O, enumBugKeys);
	};

/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	var has          = __webpack_require__(6)
	  , toIObject    = __webpack_require__(33)
	  , arrayIndexOf = __webpack_require__(37)(false)
	  , IE_PROTO     = __webpack_require__(41)('IE_PROTO');

	module.exports = function(object, names){
	  var O      = toIObject(object)
	    , i      = 0
	    , result = []
	    , key;
	  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);
	  // Don't enum bug & hidden keys
	  while(names.length > i)if(has(O, key = names[i++])){
	    ~arrayIndexOf(result, key) || result.push(key);
	  }
	  return result;
	};

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	// to indexed object, toObject with fallback for non-array-like ES3 strings
	var IObject = __webpack_require__(34)
	  , defined = __webpack_require__(36);
	module.exports = function(it){
	  return IObject(defined(it));
	};

/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	// fallback for non-array-like ES3 and non-enumerable old V8 strings
	var cof = __webpack_require__(35);
	module.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){
	  return cof(it) == 'String' ? it.split('') : Object(it);
	};

/***/ },
/* 35 */
/***/ function(module, exports) {

	var toString = {}.toString;

	module.exports = function(it){
	  return toString.call(it).slice(8, -1);
	};

/***/ },
/* 36 */
/***/ function(module, exports) {

	// 7.2.1 RequireObjectCoercible(argument)
	module.exports = function(it){
	  if(it == undefined)throw TypeError("Can't call method on  " + it);
	  return it;
	};

/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	// false -> Array#indexOf
	// true  -> Array#includes
	var toIObject = __webpack_require__(33)
	  , toLength  = __webpack_require__(38)
	  , toIndex   = __webpack_require__(40);
	module.exports = function(IS_INCLUDES){
	  return function($this, el, fromIndex){
	    var O      = toIObject($this)
	      , length = toLength(O.length)
	      , index  = toIndex(fromIndex, length)
	      , value;
	    // Array#includes uses SameValueZero equality algorithm
	    if(IS_INCLUDES && el != el)while(length > index){
	      value = O[index++];
	      if(value != value)return true;
	    // Array#toIndex ignores holes, Array#includes - not
	    } else for(;length > index; index++)if(IS_INCLUDES || index in O){
	      if(O[index] === el)return IS_INCLUDES || index || 0;
	    } return !IS_INCLUDES && -1;
	  };
	};

/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.15 ToLength
	var toInteger = __webpack_require__(39)
	  , min       = Math.min;
	module.exports = function(it){
	  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
	};

/***/ },
/* 39 */
/***/ function(module, exports) {

	// 7.1.4 ToInteger
	var ceil  = Math.ceil
	  , floor = Math.floor;
	module.exports = function(it){
	  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
	};

/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(39)
	  , max       = Math.max
	  , min       = Math.min;
	module.exports = function(index, length){
	  index = toInteger(index);
	  return index < 0 ? max(index + length, 0) : min(index, length);
	};

/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	var shared = __webpack_require__(24)('keys')
	  , uid    = __webpack_require__(20);
	module.exports = function(key){
	  return shared[key] || (shared[key] = uid(key));
	};

/***/ },
/* 42 */
/***/ function(module, exports) {

	// IE 8- don't enum bug keys
	module.exports = (
	  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
	).split(',');

/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	// all enumerable object keys, includes symbols
	var getKeys = __webpack_require__(31)
	  , gOPS    = __webpack_require__(44)
	  , pIE     = __webpack_require__(45);
	module.exports = function(it){
	  var result     = getKeys(it)
	    , getSymbols = gOPS.f;
	  if(getSymbols){
	    var symbols = getSymbols(it)
	      , isEnum  = pIE.f
	      , i       = 0
	      , key;
	    while(symbols.length > i)if(isEnum.call(it, key = symbols[i++]))result.push(key);
	  } return result;
	};

/***/ },
/* 44 */
/***/ function(module, exports) {

	exports.f = Object.getOwnPropertySymbols;

/***/ },
/* 45 */
/***/ function(module, exports) {

	exports.f = {}.propertyIsEnumerable;

/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	// 7.2.2 IsArray(argument)
	var cof = __webpack_require__(35);
	module.exports = Array.isArray || function isArray(arg){
	  return cof(arg) == 'Array';
	};

/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	var anObject    = __webpack_require__(13)
	  , dPs         = __webpack_require__(48)
	  , enumBugKeys = __webpack_require__(42)
	  , IE_PROTO    = __webpack_require__(41)('IE_PROTO')
	  , Empty       = function(){ /* empty */ }
	  , PROTOTYPE   = 'prototype';

	// Create object with fake `null` prototype: use iframe Object with cleared prototype
	var createDict = function(){
	  // Thrash, waste and sodomy: IE GC bug
	  var iframe = __webpack_require__(16)('iframe')
	    , i      = enumBugKeys.length
	    , lt     = '<'
	    , gt     = '>'
	    , iframeDocument;
	  iframe.style.display = 'none';
	  __webpack_require__(49).appendChild(iframe);
	  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
	  // createDict = iframe.contentWindow.Object;
	  // html.removeChild(iframe);
	  iframeDocument = iframe.contentWindow.document;
	  iframeDocument.open();
	  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
	  iframeDocument.close();
	  createDict = iframeDocument.F;
	  while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];
	  return createDict();
	};

	module.exports = Object.create || function create(O, Properties){
	  var result;
	  if(O !== null){
	    Empty[PROTOTYPE] = anObject(O);
	    result = new Empty;
	    Empty[PROTOTYPE] = null;
	    // add "__proto__" for Object.getPrototypeOf polyfill
	    result[IE_PROTO] = O;
	  } else result = createDict();
	  return Properties === undefined ? result : dPs(result, Properties);
	};


/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	var dP       = __webpack_require__(12)
	  , anObject = __webpack_require__(13)
	  , getKeys  = __webpack_require__(31);

	module.exports = __webpack_require__(7) ? Object.defineProperties : function defineProperties(O, Properties){
	  anObject(O);
	  var keys   = getKeys(Properties)
	    , length = keys.length
	    , i = 0
	    , P;
	  while(length > i)dP.f(O, P = keys[i++], Properties[P]);
	  return O;
	};

/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(5).document && document.documentElement;

/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
	var toIObject = __webpack_require__(33)
	  , gOPN      = __webpack_require__(51).f
	  , toString  = {}.toString;

	var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
	  ? Object.getOwnPropertyNames(window) : [];

	var getWindowNames = function(it){
	  try {
	    return gOPN(it);
	  } catch(e){
	    return windowNames.slice();
	  }
	};

	module.exports.f = function getOwnPropertyNames(it){
	  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
	};


/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
	var $keys      = __webpack_require__(32)
	  , hiddenKeys = __webpack_require__(42).concat('length', 'prototype');

	exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O){
	  return $keys(O, hiddenKeys);
	};

/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	var pIE            = __webpack_require__(45)
	  , createDesc     = __webpack_require__(18)
	  , toIObject      = __webpack_require__(33)
	  , toPrimitive    = __webpack_require__(17)
	  , has            = __webpack_require__(6)
	  , IE8_DOM_DEFINE = __webpack_require__(15)
	  , gOPD           = Object.getOwnPropertyDescriptor;

	exports.f = __webpack_require__(7) ? gOPD : function getOwnPropertyDescriptor(O, P){
	  O = toIObject(O);
	  P = toPrimitive(P, true);
	  if(IE8_DOM_DEFINE)try {
	    return gOPD(O, P);
	  } catch(e){ /* empty */ }
	  if(has(O, P))return createDesc(!pIE.f.call(O, P), O[P]);
	};

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(9)
	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	$export($export.S, 'Object', {create: __webpack_require__(47)});

/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(9);
	// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
	$export($export.S + $export.F * !__webpack_require__(7), 'Object', {defineProperty: __webpack_require__(12).f});

/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(9);
	// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)
	$export($export.S + $export.F * !__webpack_require__(7), 'Object', {defineProperties: __webpack_require__(48)});

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
	var toIObject                 = __webpack_require__(33)
	  , $getOwnPropertyDescriptor = __webpack_require__(52).f;

	__webpack_require__(57)('getOwnPropertyDescriptor', function(){
	  return function getOwnPropertyDescriptor(it, key){
	    return $getOwnPropertyDescriptor(toIObject(it), key);
	  };
	});

/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	// most Object methods by ES6 should accept primitives
	var $export = __webpack_require__(9)
	  , core    = __webpack_require__(10)
	  , fails   = __webpack_require__(8);
	module.exports = function(KEY, exec){
	  var fn  = (core.Object || {})[KEY] || Object[KEY]
	    , exp = {};
	  exp[KEY] = exec(fn);
	  $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);
	};

/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.9 Object.getPrototypeOf(O)
	var toObject        = __webpack_require__(59)
	  , $getPrototypeOf = __webpack_require__(60);

	__webpack_require__(57)('getPrototypeOf', function(){
	  return function getPrototypeOf(it){
	    return $getPrototypeOf(toObject(it));
	  };
	});

/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.13 ToObject(argument)
	var defined = __webpack_require__(36);
	module.exports = function(it){
	  return Object(defined(it));
	};

/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
	var has         = __webpack_require__(6)
	  , toObject    = __webpack_require__(59)
	  , IE_PROTO    = __webpack_require__(41)('IE_PROTO')
	  , ObjectProto = Object.prototype;

	module.exports = Object.getPrototypeOf || function(O){
	  O = toObject(O);
	  if(has(O, IE_PROTO))return O[IE_PROTO];
	  if(typeof O.constructor == 'function' && O instanceof O.constructor){
	    return O.constructor.prototype;
	  } return O instanceof Object ? ObjectProto : null;
	};

/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.14 Object.keys(O)
	var toObject = __webpack_require__(59)
	  , $keys    = __webpack_require__(31);

	__webpack_require__(57)('keys', function(){
	  return function keys(it){
	    return $keys(toObject(it));
	  };
	});

/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.7 Object.getOwnPropertyNames(O)
	__webpack_require__(57)('getOwnPropertyNames', function(){
	  return __webpack_require__(50).f;
	});

/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.5 Object.freeze(O)
	var isObject = __webpack_require__(14)
	  , meta     = __webpack_require__(23).onFreeze;

	__webpack_require__(57)('freeze', function($freeze){
	  return function freeze(it){
	    return $freeze && isObject(it) ? $freeze(meta(it)) : it;
	  };
	});

/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.17 Object.seal(O)
	var isObject = __webpack_require__(14)
	  , meta     = __webpack_require__(23).onFreeze;

	__webpack_require__(57)('seal', function($seal){
	  return function seal(it){
	    return $seal && isObject(it) ? $seal(meta(it)) : it;
	  };
	});

/***/ },
/* 65 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.15 Object.preventExtensions(O)
	var isObject = __webpack_require__(14)
	  , meta     = __webpack_require__(23).onFreeze;

	__webpack_require__(57)('preventExtensions', function($preventExtensions){
	  return function preventExtensions(it){
	    return $preventExtensions && isObject(it) ? $preventExtensions(meta(it)) : it;
	  };
	});

/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.12 Object.isFrozen(O)
	var isObject = __webpack_require__(14);

	__webpack_require__(57)('isFrozen', function($isFrozen){
	  return function isFrozen(it){
	    return isObject(it) ? $isFrozen ? $isFrozen(it) : false : true;
	  };
	});

/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.13 Object.isSealed(O)
	var isObject = __webpack_require__(14);

	__webpack_require__(57)('isSealed', function($isSealed){
	  return function isSealed(it){
	    return isObject(it) ? $isSealed ? $isSealed(it) : false : true;
	  };
	});

/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.11 Object.isExtensible(O)
	var isObject = __webpack_require__(14);

	__webpack_require__(57)('isExtensible', function($isExtensible){
	  return function isExtensible(it){
	    return isObject(it) ? $isExtensible ? $isExtensible(it) : true : false;
	  };
	});

/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.3.1 Object.assign(target, source)
	var $export = __webpack_require__(9);

	$export($export.S + $export.F, 'Object', {assign: __webpack_require__(70)});

/***/ },
/* 70 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 19.1.2.1 Object.assign(target, source, ...)
	var getKeys  = __webpack_require__(31)
	  , gOPS     = __webpack_require__(44)
	  , pIE      = __webpack_require__(45)
	  , toObject = __webpack_require__(59)
	  , IObject  = __webpack_require__(34)
	  , $assign  = Object.assign;

	// should work with symbols and should have deterministic property order (V8 bug)
	module.exports = !$assign || __webpack_require__(8)(function(){
	  var A = {}
	    , B = {}
	    , S = Symbol()
	    , K = 'abcdefghijklmnopqrst';
	  A[S] = 7;
	  K.split('').forEach(function(k){ B[k] = k; });
	  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
	}) ? function assign(target, source){ // eslint-disable-line no-unused-vars
	  var T     = toObject(target)
	    , aLen  = arguments.length
	    , index = 1
	    , getSymbols = gOPS.f
	    , isEnum     = pIE.f;
	  while(aLen > index){
	    var S      = IObject(arguments[index++])
	      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)
	      , length = keys.length
	      , j      = 0
	      , key;
	    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];
	  } return T;
	} : $assign;

/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.3.10 Object.is(value1, value2)
	var $export = __webpack_require__(9);
	$export($export.S, 'Object', {is: __webpack_require__(72)});

/***/ },
/* 72 */
/***/ function(module, exports) {

	// 7.2.9 SameValue(x, y)
	module.exports = Object.is || function is(x, y){
	  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
	};

/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.3.19 Object.setPrototypeOf(O, proto)
	var $export = __webpack_require__(9);
	$export($export.S, 'Object', {setPrototypeOf: __webpack_require__(74).set});

/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

	// Works with __proto__ only. Old v8 can't work with null proto objects.
	/* eslint-disable no-proto */
	var isObject = __webpack_require__(14)
	  , anObject = __webpack_require__(13);
	var check = function(O, proto){
	  anObject(O);
	  if(!isObject(proto) && proto !== null)throw TypeError(proto + ": can't set as prototype!");
	};
	module.exports = {
	  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
	    function(test, buggy, set){
	      try {
	        set = __webpack_require__(21)(Function.call, __webpack_require__(52).f(Object.prototype, '__proto__').set, 2);
	        set(test, []);
	        buggy = !(test instanceof Array);
	      } catch(e){ buggy = true; }
	      return function setPrototypeOf(O, proto){
	        check(O, proto);
	        if(buggy)O.__proto__ = proto;
	        else set(O, proto);
	        return O;
	      };
	    }({}, false) : undefined),
	  check: check
	};

/***/ },
/* 75 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 19.1.3.6 Object.prototype.toString()
	var classof = __webpack_require__(76)
	  , test    = {};
	test[__webpack_require__(26)('toStringTag')] = 'z';
	if(test + '' != '[object z]'){
	  __webpack_require__(19)(Object.prototype, 'toString', function toString(){
	    return '[object ' + classof(this) + ']';
	  }, true);
	}

/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	// getting tag from 19.1.3.6 Object.prototype.toString()
	var cof = __webpack_require__(35)
	  , TAG = __webpack_require__(26)('toStringTag')
	  // ES3 wrong here
	  , ARG = cof(function(){ return arguments; }()) == 'Arguments';

	// fallback for IE11 Script Access Denied error
	var tryGet = function(it, key){
	  try {
	    return it[key];
	  } catch(e){ /* empty */ }
	};

	module.exports = function(it){
	  var O, T, B;
	  return it === undefined ? 'Undefined' : it === null ? 'Null'
	    // @@toStringTag case
	    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
	    // builtinTag case
	    : ARG ? cof(O)
	    // ES3 arguments fallback
	    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
	};

/***/ },
/* 77 */
/***/ function(module, exports, __webpack_require__) {

	// 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)
	var $export = __webpack_require__(9);

	$export($export.P, 'Function', {bind: __webpack_require__(78)});

/***/ },
/* 78 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var aFunction  = __webpack_require__(22)
	  , isObject   = __webpack_require__(14)
	  , invoke     = __webpack_require__(79)
	  , arraySlice = [].slice
	  , factories  = {};

	var construct = function(F, len, args){
	  if(!(len in factories)){
	    for(var n = [], i = 0; i < len; i++)n[i] = 'a[' + i + ']';
	    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');
	  } return factories[len](F, args);
	};

	module.exports = Function.bind || function bind(that /*, args... */){
	  var fn       = aFunction(this)
	    , partArgs = arraySlice.call(arguments, 1);
	  var bound = function(/* args... */){
	    var args = partArgs.concat(arraySlice.call(arguments));
	    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);
	  };
	  if(isObject(fn.prototype))bound.prototype = fn.prototype;
	  return bound;
	};

/***/ },
/* 79 */
/***/ function(module, exports) {

	// fast apply, http://jsperf.lnkit.com/fast-apply/5
	module.exports = function(fn, args, that){
	  var un = that === undefined;
	  switch(args.length){
	    case 0: return un ? fn()
	                      : fn.call(that);
	    case 1: return un ? fn(args[0])
	                      : fn.call(that, args[0]);
	    case 2: return un ? fn(args[0], args[1])
	                      : fn.call(that, args[0], args[1]);
	    case 3: return un ? fn(args[0], args[1], args[2])
	                      : fn.call(that, args[0], args[1], args[2]);
	    case 4: return un ? fn(args[0], args[1], args[2], args[3])
	                      : fn.call(that, args[0], args[1], args[2], args[3]);
	  } return              fn.apply(that, args);
	};

/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

	var dP         = __webpack_require__(12).f
	  , createDesc = __webpack_require__(18)
	  , has        = __webpack_require__(6)
	  , FProto     = Function.prototype
	  , nameRE     = /^\s*function ([^ (]*)/
	  , NAME       = 'name';

	var isExtensible = Object.isExtensible || function(){
	  return true;
	};

	// 19.2.4.2 name
	NAME in FProto || __webpack_require__(7) && dP(FProto, NAME, {
	  configurable: true,
	  get: function(){
	    try {
	      var that = this
	        , name = ('' + that).match(nameRE)[1];
	      has(that, NAME) || !isExtensible(that) || dP(that, NAME, createDesc(5, name));
	      return name;
	    } catch(e){
	      return '';
	    }
	  }
	});

/***/ },
/* 81 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var isObject       = __webpack_require__(14)
	  , getPrototypeOf = __webpack_require__(60)
	  , HAS_INSTANCE   = __webpack_require__(26)('hasInstance')
	  , FunctionProto  = Function.prototype;
	// 19.2.3.6 Function.prototype[@@hasInstance](V)
	if(!(HAS_INSTANCE in FunctionProto))__webpack_require__(12).f(FunctionProto, HAS_INSTANCE, {value: function(O){
	  if(typeof this != 'function' || !isObject(O))return false;
	  if(!isObject(this.prototype))return O instanceof this;
	  // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:
	  while(O = getPrototypeOf(O))if(this.prototype === O)return true;
	  return false;
	}});

/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

	var $export   = __webpack_require__(9)
	  , $parseInt = __webpack_require__(83);
	// 18.2.5 parseInt(string, radix)
	$export($export.G + $export.F * (parseInt != $parseInt), {parseInt: $parseInt});

/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

	var $parseInt = __webpack_require__(5).parseInt
	  , $trim     = __webpack_require__(84).trim
	  , ws        = __webpack_require__(85)
	  , hex       = /^[\-+]?0[xX]/;

	module.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix){
	  var string = $trim(String(str), 3);
	  return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));
	} : $parseInt;

/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(9)
	  , defined = __webpack_require__(36)
	  , fails   = __webpack_require__(8)
	  , spaces  = __webpack_require__(85)
	  , space   = '[' + spaces + ']'
	  , non     = '\u200b\u0085'
	  , ltrim   = RegExp('^' + space + space + '*')
	  , rtrim   = RegExp(space + space + '*$');

	var exporter = function(KEY, exec, ALIAS){
	  var exp   = {};
	  var FORCE = fails(function(){
	    return !!spaces[KEY]() || non[KEY]() != non;
	  });
	  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];
	  if(ALIAS)exp[ALIAS] = fn;
	  $export($export.P + $export.F * FORCE, 'String', exp);
	};

	// 1 -> String#trimLeft
	// 2 -> String#trimRight
	// 3 -> String#trim
	var trim = exporter.trim = function(string, TYPE){
	  string = String(defined(string));
	  if(TYPE & 1)string = string.replace(ltrim, '');
	  if(TYPE & 2)string = string.replace(rtrim, '');
	  return string;
	};

	module.exports = exporter;

/***/ },
/* 85 */
/***/ function(module, exports) {

	module.exports = '\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003' +
	  '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';

/***/ },
/* 86 */
/***/ function(module, exports, __webpack_require__) {

	var $export     = __webpack_require__(9)
	  , $parseFloat = __webpack_require__(87);
	// 18.2.4 parseFloat(string)
	$export($export.G + $export.F * (parseFloat != $parseFloat), {parseFloat: $parseFloat});

/***/ },
/* 87 */
/***/ function(module, exports, __webpack_require__) {

	var $parseFloat = __webpack_require__(5).parseFloat
	  , $trim       = __webpack_require__(84).trim;

	module.exports = 1 / $parseFloat(__webpack_require__(85) + '-0') !== -Infinity ? function parseFloat(str){
	  var string = $trim(String(str), 3)
	    , result = $parseFloat(string);
	  return result === 0 && string.charAt(0) == '-' ? -0 : result;
	} : $parseFloat;

/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var global            = __webpack_require__(5)
	  , has               = __webpack_require__(6)
	  , cof               = __webpack_require__(35)
	  , inheritIfRequired = __webpack_require__(89)
	  , toPrimitive       = __webpack_require__(17)
	  , fails             = __webpack_require__(8)
	  , gOPN              = __webpack_require__(51).f
	  , gOPD              = __webpack_require__(52).f
	  , dP                = __webpack_require__(12).f
	  , $trim             = __webpack_require__(84).trim
	  , NUMBER            = 'Number'
	  , $Number           = global[NUMBER]
	  , Base              = $Number
	  , proto             = $Number.prototype
	  // Opera ~12 has broken Object#toString
	  , BROKEN_COF        = cof(__webpack_require__(47)(proto)) == NUMBER
	  , TRIM              = 'trim' in String.prototype;

	// 7.1.3 ToNumber(argument)
	var toNumber = function(argument){
	  var it = toPrimitive(argument, false);
	  if(typeof it == 'string' && it.length > 2){
	    it = TRIM ? it.trim() : $trim(it, 3);
	    var first = it.charCodeAt(0)
	      , third, radix, maxCode;
	    if(first === 43 || first === 45){
	      third = it.charCodeAt(2);
	      if(third === 88 || third === 120)return NaN; // Number('+0x1') should be NaN, old V8 fix
	    } else if(first === 48){
	      switch(it.charCodeAt(1)){
	        case 66 : case 98  : radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i
	        case 79 : case 111 : radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i
	        default : return +it;
	      }
	      for(var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++){
	        code = digits.charCodeAt(i);
	        // parseInt parses a string to a first unavailable symbol
	        // but ToNumber should return NaN if a string contains unavailable symbols
	        if(code < 48 || code > maxCode)return NaN;
	      } return parseInt(digits, radix);
	    }
	  } return +it;
	};

	if(!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')){
	  $Number = function Number(value){
	    var it = arguments.length < 1 ? 0 : value
	      , that = this;
	    return that instanceof $Number
	      // check on 1..constructor(foo) case
	      && (BROKEN_COF ? fails(function(){ proto.valueOf.call(that); }) : cof(that) != NUMBER)
	        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);
	  };
	  for(var keys = __webpack_require__(7) ? gOPN(Base) : (
	    // ES3:
	    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
	    // ES6 (in case, if modules with ES6 Number statics required before):
	    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +
	    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'
	  ).split(','), j = 0, key; keys.length > j; j++){
	    if(has(Base, key = keys[j]) && !has($Number, key)){
	      dP($Number, key, gOPD(Base, key));
	    }
	  }
	  $Number.prototype = proto;
	  proto.constructor = $Number;
	  __webpack_require__(19)(global, NUMBER, $Number);
	}

/***/ },
/* 89 */
/***/ function(module, exports, __webpack_require__) {

	var isObject       = __webpack_require__(14)
	  , setPrototypeOf = __webpack_require__(74).set;
	module.exports = function(that, target, C){
	  var P, S = target.constructor;
	  if(S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf){
	    setPrototypeOf(that, P);
	  } return that;
	};

/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export      = __webpack_require__(9)
	  , toInteger    = __webpack_require__(39)
	  , aNumberValue = __webpack_require__(91)
	  , repeat       = __webpack_require__(92)
	  , $toFixed     = 1..toFixed
	  , floor        = Math.floor
	  , data         = [0, 0, 0, 0, 0, 0]
	  , ERROR        = 'Number.toFixed: incorrect invocation!'
	  , ZERO         = '0';

	var multiply = function(n, c){
	  var i  = -1
	    , c2 = c;
	  while(++i < 6){
	    c2 += n * data[i];
	    data[i] = c2 % 1e7;
	    c2 = floor(c2 / 1e7);
	  }
	};
	var divide = function(n){
	  var i = 6
	    , c = 0;
	  while(--i >= 0){
	    c += data[i];
	    data[i] = floor(c / n);
	    c = (c % n) * 1e7;
	  }
	};
	var numToString = function(){
	  var i = 6
	    , s = '';
	  while(--i >= 0){
	    if(s !== '' || i === 0 || data[i] !== 0){
	      var t = String(data[i]);
	      s = s === '' ? t : s + repeat.call(ZERO, 7 - t.length) + t;
	    }
	  } return s;
	};
	var pow = function(x, n, acc){
	  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);
	};
	var log = function(x){
	  var n  = 0
	    , x2 = x;
	  while(x2 >= 4096){
	    n += 12;
	    x2 /= 4096;
	  }
	  while(x2 >= 2){
	    n  += 1;
	    x2 /= 2;
	  } return n;
	};

	$export($export.P + $export.F * (!!$toFixed && (
	  0.00008.toFixed(3) !== '0.000' ||
	  0.9.toFixed(0) !== '1' ||
	  1.255.toFixed(2) !== '1.25' ||
	  1000000000000000128..toFixed(0) !== '1000000000000000128'
	) || !__webpack_require__(8)(function(){
	  // V8 ~ Android 4.3-
	  $toFixed.call({});
	})), 'Number', {
	  toFixed: function toFixed(fractionDigits){
	    var x = aNumberValue(this, ERROR)
	      , f = toInteger(fractionDigits)
	      , s = ''
	      , m = ZERO
	      , e, z, j, k;
	    if(f < 0 || f > 20)throw RangeError(ERROR);
	    if(x != x)return 'NaN';
	    if(x <= -1e21 || x >= 1e21)return String(x);
	    if(x < 0){
	      s = '-';
	      x = -x;
	    }
	    if(x > 1e-21){
	      e = log(x * pow(2, 69, 1)) - 69;
	      z = e < 0 ? x * pow(2, -e, 1) : x / pow(2, e, 1);
	      z *= 0x10000000000000;
	      e = 52 - e;
	      if(e > 0){
	        multiply(0, z);
	        j = f;
	        while(j >= 7){
	          multiply(1e7, 0);
	          j -= 7;
	        }
	        multiply(pow(10, j, 1), 0);
	        j = e - 1;
	        while(j >= 23){
	          divide(1 << 23);
	          j -= 23;
	        }
	        divide(1 << j);
	        multiply(1, 1);
	        divide(2);
	        m = numToString();
	      } else {
	        multiply(0, z);
	        multiply(1 << -e, 0);
	        m = numToString() + repeat.call(ZERO, f);
	      }
	    }
	    if(f > 0){
	      k = m.length;
	      m = s + (k <= f ? '0.' + repeat.call(ZERO, f - k) + m : m.slice(0, k - f) + '.' + m.slice(k - f));
	    } else {
	      m = s + m;
	    } return m;
	  }
	});

/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	var cof = __webpack_require__(35);
	module.exports = function(it, msg){
	  if(typeof it != 'number' && cof(it) != 'Number')throw TypeError(msg);
	  return +it;
	};

/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var toInteger = __webpack_require__(39)
	  , defined   = __webpack_require__(36);

	module.exports = function repeat(count){
	  var str = String(defined(this))
	    , res = ''
	    , n   = toInteger(count);
	  if(n < 0 || n == Infinity)throw RangeError("Count can't be negative");
	  for(;n > 0; (n >>>= 1) && (str += str))if(n & 1)res += str;
	  return res;
	};

/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export      = __webpack_require__(9)
	  , $fails       = __webpack_require__(8)
	  , aNumberValue = __webpack_require__(91)
	  , $toPrecision = 1..toPrecision;

	$export($export.P + $export.F * ($fails(function(){
	  // IE7-
	  return $toPrecision.call(1, undefined) !== '1';
	}) || !$fails(function(){
	  // V8 ~ Android 4.3-
	  $toPrecision.call({});
	})), 'Number', {
	  toPrecision: function toPrecision(precision){
	    var that = aNumberValue(this, 'Number#toPrecision: incorrect invocation!');
	    return precision === undefined ? $toPrecision.call(that) : $toPrecision.call(that, precision); 
	  }
	});

/***/ },
/* 94 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.1 Number.EPSILON
	var $export = __webpack_require__(9);

	$export($export.S, 'Number', {EPSILON: Math.pow(2, -52)});

/***/ },
/* 95 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.2 Number.isFinite(number)
	var $export   = __webpack_require__(9)
	  , _isFinite = __webpack_require__(5).isFinite;

	$export($export.S, 'Number', {
	  isFinite: function isFinite(it){
	    return typeof it == 'number' && _isFinite(it);
	  }
	});

/***/ },
/* 96 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.3 Number.isInteger(number)
	var $export = __webpack_require__(9);

	$export($export.S, 'Number', {isInteger: __webpack_require__(97)});

/***/ },
/* 97 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.3 Number.isInteger(number)
	var isObject = __webpack_require__(14)
	  , floor    = Math.floor;
	module.exports = function isInteger(it){
	  return !isObject(it) && isFinite(it) && floor(it) === it;
	};

/***/ },
/* 98 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.4 Number.isNaN(number)
	var $export = __webpack_require__(9);

	$export($export.S, 'Number', {
	  isNaN: function isNaN(number){
	    return number != number;
	  }
	});

/***/ },
/* 99 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.5 Number.isSafeInteger(number)
	var $export   = __webpack_require__(9)
	  , isInteger = __webpack_require__(97)
	  , abs       = Math.abs;

	$export($export.S, 'Number', {
	  isSafeInteger: function isSafeInteger(number){
	    return isInteger(number) && abs(number) <= 0x1fffffffffffff;
	  }
	});

/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.6 Number.MAX_SAFE_INTEGER
	var $export = __webpack_require__(9);

	$export($export.S, 'Number', {MAX_SAFE_INTEGER: 0x1fffffffffffff});

/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.10 Number.MIN_SAFE_INTEGER
	var $export = __webpack_require__(9);

	$export($export.S, 'Number', {MIN_SAFE_INTEGER: -0x1fffffffffffff});

/***/ },
/* 102 */
/***/ function(module, exports, __webpack_require__) {

	var $export     = __webpack_require__(9)
	  , $parseFloat = __webpack_require__(87);
	// 20.1.2.12 Number.parseFloat(string)
	$export($export.S + $export.F * (Number.parseFloat != $parseFloat), 'Number', {parseFloat: $parseFloat});

/***/ },
/* 103 */
/***/ function(module, exports, __webpack_require__) {

	var $export   = __webpack_require__(9)
	  , $parseInt = __webpack_require__(83);
	// 20.1.2.13 Number.parseInt(string, radix)
	$export($export.S + $export.F * (Number.parseInt != $parseInt), 'Number', {parseInt: $parseInt});

/***/ },
/* 104 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.3 Math.acosh(x)
	var $export = __webpack_require__(9)
	  , log1p   = __webpack_require__(105)
	  , sqrt    = Math.sqrt
	  , $acosh  = Math.acosh;

	$export($export.S + $export.F * !($acosh
	  // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509
	  && Math.floor($acosh(Number.MAX_VALUE)) == 710
	  // Tor Browser bug: Math.acosh(Infinity) -> NaN 
	  && $acosh(Infinity) == Infinity
	), 'Math', {
	  acosh: function acosh(x){
	    return (x = +x) < 1 ? NaN : x > 94906265.62425156
	      ? Math.log(x) + Math.LN2
	      : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));
	  }
	});

/***/ },
/* 105 */
/***/ function(module, exports) {

	// 20.2.2.20 Math.log1p(x)
	module.exports = Math.log1p || function log1p(x){
	  return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : Math.log(1 + x);
	};

/***/ },
/* 106 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.5 Math.asinh(x)
	var $export = __webpack_require__(9)
	  , $asinh  = Math.asinh;

	function asinh(x){
	  return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : Math.log(x + Math.sqrt(x * x + 1));
	}

	// Tor Browser bug: Math.asinh(0) -> -0 
	$export($export.S + $export.F * !($asinh && 1 / $asinh(0) > 0), 'Math', {asinh: asinh});

/***/ },
/* 107 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.7 Math.atanh(x)
	var $export = __webpack_require__(9)
	  , $atanh  = Math.atanh;

	// Tor Browser bug: Math.atanh(-0) -> 0 
	$export($export.S + $export.F * !($atanh && 1 / $atanh(-0) < 0), 'Math', {
	  atanh: function atanh(x){
	    return (x = +x) == 0 ? x : Math.log((1 + x) / (1 - x)) / 2;
	  }
	});

/***/ },
/* 108 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.9 Math.cbrt(x)
	var $export = __webpack_require__(9)
	  , sign    = __webpack_require__(109);

	$export($export.S, 'Math', {
	  cbrt: function cbrt(x){
	    return sign(x = +x) * Math.pow(Math.abs(x), 1 / 3);
	  }
	});

/***/ },
/* 109 */
/***/ function(module, exports) {

	// 20.2.2.28 Math.sign(x)
	module.exports = Math.sign || function sign(x){
	  return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;
	};

/***/ },
/* 110 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.11 Math.clz32(x)
	var $export = __webpack_require__(9);

	$export($export.S, 'Math', {
	  clz32: function clz32(x){
	    return (x >>>= 0) ? 31 - Math.floor(Math.log(x + 0.5) * Math.LOG2E) : 32;
	  }
	});

/***/ },
/* 111 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.12 Math.cosh(x)
	var $export = __webpack_require__(9)
	  , exp     = Math.exp;

	$export($export.S, 'Math', {
	  cosh: function cosh(x){
	    return (exp(x = +x) + exp(-x)) / 2;
	  }
	});

/***/ },
/* 112 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.14 Math.expm1(x)
	var $export = __webpack_require__(9)
	  , $expm1  = __webpack_require__(113);

	$export($export.S + $export.F * ($expm1 != Math.expm1), 'Math', {expm1: $expm1});

/***/ },
/* 113 */
/***/ function(module, exports) {

	// 20.2.2.14 Math.expm1(x)
	var $expm1 = Math.expm1;
	module.exports = (!$expm1
	  // Old FF bug
	  || $expm1(10) > 22025.465794806719 || $expm1(10) < 22025.4657948067165168
	  // Tor Browser bug
	  || $expm1(-2e-17) != -2e-17
	) ? function expm1(x){
	  return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : Math.exp(x) - 1;
	} : $expm1;

/***/ },
/* 114 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.16 Math.fround(x)
	var $export   = __webpack_require__(9)
	  , sign      = __webpack_require__(109)
	  , pow       = Math.pow
	  , EPSILON   = pow(2, -52)
	  , EPSILON32 = pow(2, -23)
	  , MAX32     = pow(2, 127) * (2 - EPSILON32)
	  , MIN32     = pow(2, -126);

	var roundTiesToEven = function(n){
	  return n + 1 / EPSILON - 1 / EPSILON;
	};


	$export($export.S, 'Math', {
	  fround: function fround(x){
	    var $abs  = Math.abs(x)
	      , $sign = sign(x)
	      , a, result;
	    if($abs < MIN32)return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;
	    a = (1 + EPSILON32 / EPSILON) * $abs;
	    result = a - (a - $abs);
	    if(result > MAX32 || result != result)return $sign * Infinity;
	    return $sign * result;
	  }
	});

/***/ },
/* 115 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.17 Math.hypot([value1[, value2[, … ]]])
	var $export = __webpack_require__(9)
	  , abs     = Math.abs;

	$export($export.S, 'Math', {
	  hypot: function hypot(value1, value2){ // eslint-disable-line no-unused-vars
	    var sum  = 0
	      , i    = 0
	      , aLen = arguments.length
	      , larg = 0
	      , arg, div;
	    while(i < aLen){
	      arg = abs(arguments[i++]);
	      if(larg < arg){
	        div  = larg / arg;
	        sum  = sum * div * div + 1;
	        larg = arg;
	      } else if(arg > 0){
	        div  = arg / larg;
	        sum += div * div;
	      } else sum += arg;
	    }
	    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);
	  }
	});

/***/ },
/* 116 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.18 Math.imul(x, y)
	var $export = __webpack_require__(9)
	  , $imul   = Math.imul;

	// some WebKit versions fails with big numbers, some has wrong arity
	$export($export.S + $export.F * __webpack_require__(8)(function(){
	  return $imul(0xffffffff, 5) != -5 || $imul.length != 2;
	}), 'Math', {
	  imul: function imul(x, y){
	    var UINT16 = 0xffff
	      , xn = +x
	      , yn = +y
	      , xl = UINT16 & xn
	      , yl = UINT16 & yn;
	    return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);
	  }
	});

/***/ },
/* 117 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.21 Math.log10(x)
	var $export = __webpack_require__(9);

	$export($export.S, 'Math', {
	  log10: function log10(x){
	    return Math.log(x) / Math.LN10;
	  }
	});

/***/ },
/* 118 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.20 Math.log1p(x)
	var $export = __webpack_require__(9);

	$export($export.S, 'Math', {log1p: __webpack_require__(105)});

/***/ },
/* 119 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.22 Math.log2(x)
	var $export = __webpack_require__(9);

	$export($export.S, 'Math', {
	  log2: function log2(x){
	    return Math.log(x) / Math.LN2;
	  }
	});

/***/ },
/* 120 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.28 Math.sign(x)
	var $export = __webpack_require__(9);

	$export($export.S, 'Math', {sign: __webpack_require__(109)});

/***/ },
/* 121 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.30 Math.sinh(x)
	var $export = __webpack_require__(9)
	  , expm1   = __webpack_require__(113)
	  , exp     = Math.exp;

	// V8 near Chromium 38 has a problem with very small numbers
	$export($export.S + $export.F * __webpack_require__(8)(function(){
	  return !Math.sinh(-2e-17) != -2e-17;
	}), 'Math', {
	  sinh: function sinh(x){
	    return Math.abs(x = +x) < 1
	      ? (expm1(x) - expm1(-x)) / 2
	      : (exp(x - 1) - exp(-x - 1)) * (Math.E / 2);
	  }
	});

/***/ },
/* 122 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.33 Math.tanh(x)
	var $export = __webpack_require__(9)
	  , expm1   = __webpack_require__(113)
	  , exp     = Math.exp;

	$export($export.S, 'Math', {
	  tanh: function tanh(x){
	    var a = expm1(x = +x)
	      , b = expm1(-x);
	    return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));
	  }
	});

/***/ },
/* 123 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.34 Math.trunc(x)
	var $export = __webpack_require__(9);

	$export($export.S, 'Math', {
	  trunc: function trunc(it){
	    return (it > 0 ? Math.floor : Math.ceil)(it);
	  }
	});

/***/ },
/* 124 */
/***/ function(module, exports, __webpack_require__) {

	var $export        = __webpack_require__(9)
	  , toIndex        = __webpack_require__(40)
	  , fromCharCode   = String.fromCharCode
	  , $fromCodePoint = String.fromCodePoint;

	// length should be 1, old FF problem
	$export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {
	  // 21.1.2.2 String.fromCodePoint(...codePoints)
	  fromCodePoint: function fromCodePoint(x){ // eslint-disable-line no-unused-vars
	    var res  = []
	      , aLen = arguments.length
	      , i    = 0
	      , code;
	    while(aLen > i){
	      code = +arguments[i++];
	      if(toIndex(code, 0x10ffff) !== code)throw RangeError(code + ' is not a valid code point');
	      res.push(code < 0x10000
	        ? fromCharCode(code)
	        : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)
	      );
	    } return res.join('');
	  }
	});

/***/ },
/* 125 */
/***/ function(module, exports, __webpack_require__) {

	var $export   = __webpack_require__(9)
	  , toIObject = __webpack_require__(33)
	  , toLength  = __webpack_require__(38);

	$export($export.S, 'String', {
	  // 21.1.2.4 String.raw(callSite, ...substitutions)
	  raw: function raw(callSite){
	    var tpl  = toIObject(callSite.raw)
	      , len  = toLength(tpl.length)
	      , aLen = arguments.length
	      , res  = []
	      , i    = 0;
	    while(len > i){
	      res.push(String(tpl[i++]));
	      if(i < aLen)res.push(String(arguments[i]));
	    } return res.join('');
	  }
	});

/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 21.1.3.25 String.prototype.trim()
	__webpack_require__(84)('trim', function($trim){
	  return function trim(){
	    return $trim(this, 3);
	  };
	});

/***/ },
/* 127 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $at  = __webpack_require__(128)(true);

	// 21.1.3.27 String.prototype[@@iterator]()
	__webpack_require__(129)(String, 'String', function(iterated){
	  this._t = String(iterated); // target
	  this._i = 0;                // next index
	// 21.1.5.2.1 %StringIteratorPrototype%.next()
	}, function(){
	  var O     = this._t
	    , index = this._i
	    , point;
	  if(index >= O.length)return {value: undefined, done: true};
	  point = $at(O, index);
	  this._i += point.length;
	  return {value: point, done: false};
	});

/***/ },
/* 128 */
/***/ function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(39)
	  , defined   = __webpack_require__(36);
	// true  -> String#at
	// false -> String#codePointAt
	module.exports = function(TO_STRING){
	  return function(that, pos){
	    var s = String(defined(that))
	      , i = toInteger(pos)
	      , l = s.length
	      , a, b;
	    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;
	    a = s.charCodeAt(i);
	    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
	      ? TO_STRING ? s.charAt(i) : a
	      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
	  };
	};

/***/ },
/* 129 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var LIBRARY        = __webpack_require__(29)
	  , $export        = __webpack_require__(9)
	  , redefine       = __webpack_require__(19)
	  , hide           = __webpack_require__(11)
	  , has            = __webpack_require__(6)
	  , Iterators      = __webpack_require__(130)
	  , $iterCreate    = __webpack_require__(131)
	  , setToStringTag = __webpack_require__(25)
	  , getPrototypeOf = __webpack_require__(60)
	  , ITERATOR       = __webpack_require__(26)('iterator')
	  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`
	  , FF_ITERATOR    = '@@iterator'
	  , KEYS           = 'keys'
	  , VALUES         = 'values';

	var returnThis = function(){ return this; };

	module.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){
	  $iterCreate(Constructor, NAME, next);
	  var getMethod = function(kind){
	    if(!BUGGY && kind in proto)return proto[kind];
	    switch(kind){
	      case KEYS: return function keys(){ return new Constructor(this, kind); };
	      case VALUES: return function values(){ return new Constructor(this, kind); };
	    } return function entries(){ return new Constructor(this, kind); };
	  };
	  var TAG        = NAME + ' Iterator'
	    , DEF_VALUES = DEFAULT == VALUES
	    , VALUES_BUG = false
	    , proto      = Base.prototype
	    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]
	    , $default   = $native || getMethod(DEFAULT)
	    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined
	    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native
	    , methods, key, IteratorPrototype;
	  // Fix native
	  if($anyNative){
	    IteratorPrototype = getPrototypeOf($anyNative.call(new Base));
	    if(IteratorPrototype !== Object.prototype){
	      // Set @@toStringTag to native iterators
	      setToStringTag(IteratorPrototype, TAG, true);
	      // fix for some old engines
	      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);
	    }
	  }
	  // fix Array#{values, @@iterator}.name in V8 / FF
	  if(DEF_VALUES && $native && $native.name !== VALUES){
	    VALUES_BUG = true;
	    $default = function values(){ return $native.call(this); };
	  }
	  // Define iterator
	  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){
	    hide(proto, ITERATOR, $default);
	  }
	  // Plug for library
	  Iterators[NAME] = $default;
	  Iterators[TAG]  = returnThis;
	  if(DEFAULT){
	    methods = {
	      values:  DEF_VALUES ? $default : getMethod(VALUES),
	      keys:    IS_SET     ? $default : getMethod(KEYS),
	      entries: $entries
	    };
	    if(FORCED)for(key in methods){
	      if(!(key in proto))redefine(proto, key, methods[key]);
	    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
	  }
	  return methods;
	};

/***/ },
/* 130 */
/***/ function(module, exports) {

	module.exports = {};

/***/ },
/* 131 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var create         = __webpack_require__(47)
	  , descriptor     = __webpack_require__(18)
	  , setToStringTag = __webpack_require__(25)
	  , IteratorPrototype = {};

	// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
	__webpack_require__(11)(IteratorPrototype, __webpack_require__(26)('iterator'), function(){ return this; });

	module.exports = function(Constructor, NAME, next){
	  Constructor.prototype = create(IteratorPrototype, {next: descriptor(1, next)});
	  setToStringTag(Constructor, NAME + ' Iterator');
	};

/***/ },
/* 132 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(9)
	  , $at     = __webpack_require__(128)(false);
	$export($export.P, 'String', {
	  // 21.1.3.3 String.prototype.codePointAt(pos)
	  codePointAt: function codePointAt(pos){
	    return $at(this, pos);
	  }
	});

/***/ },
/* 133 */
/***/ function(module, exports, __webpack_require__) {

	// 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])
	'use strict';
	var $export   = __webpack_require__(9)
	  , toLength  = __webpack_require__(38)
	  , context   = __webpack_require__(134)
	  , ENDS_WITH = 'endsWith'
	  , $endsWith = ''[ENDS_WITH];

	$export($export.P + $export.F * __webpack_require__(136)(ENDS_WITH), 'String', {
	  endsWith: function endsWith(searchString /*, endPosition = @length */){
	    var that = context(this, searchString, ENDS_WITH)
	      , endPosition = arguments.length > 1 ? arguments[1] : undefined
	      , len    = toLength(that.length)
	      , end    = endPosition === undefined ? len : Math.min(toLength(endPosition), len)
	      , search = String(searchString);
	    return $endsWith
	      ? $endsWith.call(that, search, end)
	      : that.slice(end - search.length, end) === search;
	  }
	});

/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

	// helper for String#{startsWith, endsWith, includes}
	var isRegExp = __webpack_require__(135)
	  , defined  = __webpack_require__(36);

	module.exports = function(that, searchString, NAME){
	  if(isRegExp(searchString))throw TypeError('String#' + NAME + " doesn't accept regex!");
	  return String(defined(that));
	};

/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

	// 7.2.8 IsRegExp(argument)
	var isObject = __webpack_require__(14)
	  , cof      = __webpack_require__(35)
	  , MATCH    = __webpack_require__(26)('match');
	module.exports = function(it){
	  var isRegExp;
	  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');
	};

/***/ },
/* 136 */
/***/ function(module, exports, __webpack_require__) {

	var MATCH = __webpack_require__(26)('match');
	module.exports = function(KEY){
	  var re = /./;
	  try {
	    '/./'[KEY](re);
	  } catch(e){
	    try {
	      re[MATCH] = false;
	      return !'/./'[KEY](re);
	    } catch(f){ /* empty */ }
	  } return true;
	};

/***/ },
/* 137 */
/***/ function(module, exports, __webpack_require__) {

	// 21.1.3.7 String.prototype.includes(searchString, position = 0)
	'use strict';
	var $export  = __webpack_require__(9)
	  , context  = __webpack_require__(134)
	  , INCLUDES = 'includes';

	$export($export.P + $export.F * __webpack_require__(136)(INCLUDES), 'String', {
	  includes: function includes(searchString /*, position = 0 */){
	    return !!~context(this, searchString, INCLUDES)
	      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});

/***/ },
/* 138 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(9);

	$export($export.P, 'String', {
	  // 21.1.3.13 String.prototype.repeat(count)
	  repeat: __webpack_require__(92)
	});

/***/ },
/* 139 */
/***/ function(module, exports, __webpack_require__) {

	// 21.1.3.18 String.prototype.startsWith(searchString [, position ])
	'use strict';
	var $export     = __webpack_require__(9)
	  , toLength    = __webpack_require__(38)
	  , context     = __webpack_require__(134)
	  , STARTS_WITH = 'startsWith'
	  , $startsWith = ''[STARTS_WITH];

	$export($export.P + $export.F * __webpack_require__(136)(STARTS_WITH), 'String', {
	  startsWith: function startsWith(searchString /*, position = 0 */){
	    var that   = context(this, searchString, STARTS_WITH)
	      , index  = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length))
	      , search = String(searchString);
	    return $startsWith
	      ? $startsWith.call(that, search, index)
	      : that.slice(index, index + search.length) === search;
	  }
	});

/***/ },
/* 140 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.2 String.prototype.anchor(name)
	__webpack_require__(141)('anchor', function(createHTML){
	  return function anchor(name){
	    return createHTML(this, 'a', 'name', name);
	  }
	});

/***/ },
/* 141 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(9)
	  , fails   = __webpack_require__(8)
	  , defined = __webpack_require__(36)
	  , quot    = /"/g;
	// B.2.3.2.1 CreateHTML(string, tag, attribute, value)
	var createHTML = function(string, tag, attribute, value) {
	  var S  = String(defined(string))
	    , p1 = '<' + tag;
	  if(attribute !== '')p1 += ' ' + attribute + '="' + String(value).replace(quot, '&quot;') + '"';
	  return p1 + '>' + S + '</' + tag + '>';
	};
	module.exports = function(NAME, exec){
	  var O = {};
	  O[NAME] = exec(createHTML);
	  $export($export.P + $export.F * fails(function(){
	    var test = ''[NAME]('"');
	    return test !== test.toLowerCase() || test.split('"').length > 3;
	  }), 'String', O);
	};

/***/ },
/* 142 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.3 String.prototype.big()
	__webpack_require__(141)('big', function(createHTML){
	  return function big(){
	    return createHTML(this, 'big', '', '');
	  }
	});

/***/ },
/* 143 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.4 String.prototype.blink()
	__webpack_require__(141)('blink', function(createHTML){
	  return function blink(){
	    return createHTML(this, 'blink', '', '');
	  }
	});

/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.5 String.prototype.bold()
	__webpack_require__(141)('bold', function(createHTML){
	  return function bold(){
	    return createHTML(this, 'b', '', '');
	  }
	});

/***/ },
/* 145 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.6 String.prototype.fixed()
	__webpack_require__(141)('fixed', function(createHTML){
	  return function fixed(){
	    return createHTML(this, 'tt', '', '');
	  }
	});

/***/ },
/* 146 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.7 String.prototype.fontcolor(color)
	__webpack_require__(141)('fontcolor', function(createHTML){
	  return function fontcolor(color){
	    return createHTML(this, 'font', 'color', color);
	  }
	});

/***/ },
/* 147 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.8 String.prototype.fontsize(size)
	__webpack_require__(141)('fontsize', function(createHTML){
	  return function fontsize(size){
	    return createHTML(this, 'font', 'size', size);
	  }
	});

/***/ },
/* 148 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.9 String.prototype.italics()
	__webpack_require__(141)('italics', function(createHTML){
	  return function italics(){
	    return createHTML(this, 'i', '', '');
	  }
	});

/***/ },
/* 149 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.10 String.prototype.link(url)
	__webpack_require__(141)('link', function(createHTML){
	  return function link(url){
	    return createHTML(this, 'a', 'href', url);
	  }
	});

/***/ },
/* 150 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.11 String.prototype.small()
	__webpack_require__(141)('small', function(createHTML){
	  return function small(){
	    return createHTML(this, 'small', '', '');
	  }
	});

/***/ },
/* 151 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.12 String.prototype.strike()
	__webpack_require__(141)('strike', function(createHTML){
	  return function strike(){
	    return createHTML(this, 'strike', '', '');
	  }
	});

/***/ },
/* 152 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.13 String.prototype.sub()
	__webpack_require__(141)('sub', function(createHTML){
	  return function sub(){
	    return createHTML(this, 'sub', '', '');
	  }
	});

/***/ },
/* 153 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.14 String.prototype.sup()
	__webpack_require__(141)('sup', function(createHTML){
	  return function sup(){
	    return createHTML(this, 'sup', '', '');
	  }
	});

/***/ },
/* 154 */
/***/ function(module, exports, __webpack_require__) {

	// 20.3.3.1 / 15.9.4.4 Date.now()
	var $export = __webpack_require__(9);

	$export($export.S, 'Date', {now: function(){ return new Date().getTime(); }});

/***/ },
/* 155 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export     = __webpack_require__(9)
	  , toObject    = __webpack_require__(59)
	  , toPrimitive = __webpack_require__(17);

	$export($export.P + $export.F * __webpack_require__(8)(function(){
	  return new Date(NaN).toJSON() !== null || Date.prototype.toJSON.call({toISOString: function(){ return 1; }}) !== 1;
	}), 'Date', {
	  toJSON: function toJSON(key){
	    var O  = toObject(this)
	      , pv = toPrimitive(O);
	    return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();
	  }
	});

/***/ },
/* 156 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()
	var $export = __webpack_require__(9)
	  , fails   = __webpack_require__(8)
	  , getTime = Date.prototype.getTime;

	var lz = function(num){
	  return num > 9 ? num : '0' + num;
	};

	// PhantomJS / old WebKit has a broken implementations
	$export($export.P + $export.F * (fails(function(){
	  return new Date(-5e13 - 1).toISOString() != '0385-07-25T07:06:39.999Z';
	}) || !fails(function(){
	  new Date(NaN).toISOString();
	})), 'Date', {
	  toISOString: function toISOString(){
	    if(!isFinite(getTime.call(this)))throw RangeError('Invalid time value');
	    var d = this
	      , y = d.getUTCFullYear()
	      , m = d.getUTCMilliseconds()
	      , s = y < 0 ? '-' : y > 9999 ? '+' : '';
	    return s + ('00000' + Math.abs(y)).slice(s ? -6 : -4) +
	      '-' + lz(d.getUTCMonth() + 1) + '-' + lz(d.getUTCDate()) +
	      'T' + lz(d.getUTCHours()) + ':' + lz(d.getUTCMinutes()) +
	      ':' + lz(d.getUTCSeconds()) + '.' + (m > 99 ? m : '0' + lz(m)) + 'Z';
	  }
	});

/***/ },
/* 157 */
/***/ function(module, exports, __webpack_require__) {

	var DateProto    = Date.prototype
	  , INVALID_DATE = 'Invalid Date'
	  , TO_STRING    = 'toString'
	  , $toString    = DateProto[TO_STRING]
	  , getTime      = DateProto.getTime;
	if(new Date(NaN) + '' != INVALID_DATE){
	  __webpack_require__(19)(DateProto, TO_STRING, function toString(){
	    var value = getTime.call(this);
	    return value === value ? $toString.call(this) : INVALID_DATE;
	  });
	}

/***/ },
/* 158 */
/***/ function(module, exports, __webpack_require__) {

	var TO_PRIMITIVE = __webpack_require__(26)('toPrimitive')
	  , proto        = Date.prototype;

	if(!(TO_PRIMITIVE in proto))__webpack_require__(11)(proto, TO_PRIMITIVE, __webpack_require__(159));

/***/ },
/* 159 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var anObject    = __webpack_require__(13)
	  , toPrimitive = __webpack_require__(17)
	  , NUMBER      = 'number';

	module.exports = function(hint){
	  if(hint !== 'string' && hint !== NUMBER && hint !== 'default')throw TypeError('Incorrect hint');
	  return toPrimitive(anObject(this), hint != NUMBER);
	};

/***/ },
/* 160 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)
	var $export = __webpack_require__(9);

	$export($export.S, 'Array', {isArray: __webpack_require__(46)});

/***/ },
/* 161 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var ctx            = __webpack_require__(21)
	  , $export        = __webpack_require__(9)
	  , toObject       = __webpack_require__(59)
	  , call           = __webpack_require__(162)
	  , isArrayIter    = __webpack_require__(163)
	  , toLength       = __webpack_require__(38)
	  , createProperty = __webpack_require__(164)
	  , getIterFn      = __webpack_require__(165);

	$export($export.S + $export.F * !__webpack_require__(166)(function(iter){ Array.from(iter); }), 'Array', {
	  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
	  from: function from(arrayLike/*, mapfn = undefined, thisArg = undefined*/){
	    var O       = toObject(arrayLike)
	      , C       = typeof this == 'function' ? this : Array
	      , aLen    = arguments.length
	      , mapfn   = aLen > 1 ? arguments[1] : undefined
	      , mapping = mapfn !== undefined
	      , index   = 0
	      , iterFn  = getIterFn(O)
	      , length, result, step, iterator;
	    if(mapping)mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
	    // if object isn't iterable or it's array with default iterator - use simple case
	    if(iterFn != undefined && !(C == Array && isArrayIter(iterFn))){
	      for(iterator = iterFn.call(O), result = new C; !(step = iterator.next()).done; index++){
	        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
	      }
	    } else {
	      length = toLength(O.length);
	      for(result = new C(length); length > index; index++){
	        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
	      }
	    }
	    result.length = index;
	    return result;
	  }
	});


/***/ },
/* 162 */
/***/ function(module, exports, __webpack_require__) {

	// call something on iterator step with safe closing on error
	var anObject = __webpack_require__(13);
	module.exports = function(iterator, fn, value, entries){
	  try {
	    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
	  // 7.4.6 IteratorClose(iterator, completion)
	  } catch(e){
	    var ret = iterator['return'];
	    if(ret !== undefined)anObject(ret.call(iterator));
	    throw e;
	  }
	};

/***/ },
/* 163 */
/***/ function(module, exports, __webpack_require__) {

	// check on default Array iterator
	var Iterators  = __webpack_require__(130)
	  , ITERATOR   = __webpack_require__(26)('iterator')
	  , ArrayProto = Array.prototype;

	module.exports = function(it){
	  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
	};

/***/ },
/* 164 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $defineProperty = __webpack_require__(12)
	  , createDesc      = __webpack_require__(18);

	module.exports = function(object, index, value){
	  if(index in object)$defineProperty.f(object, index, createDesc(0, value));
	  else object[index] = value;
	};

/***/ },
/* 165 */
/***/ function(module, exports, __webpack_require__) {

	var classof   = __webpack_require__(76)
	  , ITERATOR  = __webpack_require__(26)('iterator')
	  , Iterators = __webpack_require__(130);
	module.exports = __webpack_require__(10).getIteratorMethod = function(it){
	  if(it != undefined)return it[ITERATOR]
	    || it['@@iterator']
	    || Iterators[classof(it)];
	};

/***/ },
/* 166 */
/***/ function(module, exports, __webpack_require__) {

	var ITERATOR     = __webpack_require__(26)('iterator')
	  , SAFE_CLOSING = false;

	try {
	  var riter = [7][ITERATOR]();
	  riter['return'] = function(){ SAFE_CLOSING = true; };
	  Array.from(riter, function(){ throw 2; });
	} catch(e){ /* empty */ }

	module.exports = function(exec, skipClosing){
	  if(!skipClosing && !SAFE_CLOSING)return false;
	  var safe = false;
	  try {
	    var arr  = [7]
	      , iter = arr[ITERATOR]();
	    iter.next = function(){ return {done: safe = true}; };
	    arr[ITERATOR] = function(){ return iter; };
	    exec(arr);
	  } catch(e){ /* empty */ }
	  return safe;
	};

/***/ },
/* 167 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export        = __webpack_require__(9)
	  , createProperty = __webpack_require__(164);

	// WebKit Array.of isn't generic
	$export($export.S + $export.F * __webpack_require__(8)(function(){
	  function F(){}
	  return !(Array.of.call(F) instanceof F);
	}), 'Array', {
	  // 22.1.2.3 Array.of( ...items)
	  of: function of(/* ...args */){
	    var index  = 0
	      , aLen   = arguments.length
	      , result = new (typeof this == 'function' ? this : Array)(aLen);
	    while(aLen > index)createProperty(result, index, arguments[index++]);
	    result.length = aLen;
	    return result;
	  }
	});

/***/ },
/* 168 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 22.1.3.13 Array.prototype.join(separator)
	var $export   = __webpack_require__(9)
	  , toIObject = __webpack_require__(33)
	  , arrayJoin = [].join;

	// fallback for not array-like strings
	$export($export.P + $export.F * (__webpack_require__(34) != Object || !__webpack_require__(169)(arrayJoin)), 'Array', {
	  join: function join(separator){
	    return arrayJoin.call(toIObject(this), separator === undefined ? ',' : separator);
	  }
	});

/***/ },
/* 169 */
/***/ function(module, exports, __webpack_require__) {

	var fails = __webpack_require__(8);

	module.exports = function(method, arg){
	  return !!method && fails(function(){
	    arg ? method.call(null, function(){}, 1) : method.call(null);
	  });
	};

/***/ },
/* 170 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export    = __webpack_require__(9)
	  , html       = __webpack_require__(49)
	  , cof        = __webpack_require__(35)
	  , toIndex    = __webpack_require__(40)
	  , toLength   = __webpack_require__(38)
	  , arraySlice = [].slice;

	// fallback for not array-like ES3 strings and DOM objects
	$export($export.P + $export.F * __webpack_require__(8)(function(){
	  if(html)arraySlice.call(html);
	}), 'Array', {
	  slice: function slice(begin, end){
	    var len   = toLength(this.length)
	      , klass = cof(this);
	    end = end === undefined ? len : end;
	    if(klass == 'Array')return arraySlice.call(this, begin, end);
	    var start  = toIndex(begin, len)
	      , upTo   = toIndex(end, len)
	      , size   = toLength(upTo - start)
	      , cloned = Array(size)
	      , i      = 0;
	    for(; i < size; i++)cloned[i] = klass == 'String'
	      ? this.charAt(start + i)
	      : this[start + i];
	    return cloned;
	  }
	});

/***/ },
/* 171 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export   = __webpack_require__(9)
	  , aFunction = __webpack_require__(22)
	  , toObject  = __webpack_require__(59)
	  , fails     = __webpack_require__(8)
	  , $sort     = [].sort
	  , test      = [1, 2, 3];

	$export($export.P + $export.F * (fails(function(){
	  // IE8-
	  test.sort(undefined);
	}) || !fails(function(){
	  // V8 bug
	  test.sort(null);
	  // Old WebKit
	}) || !__webpack_require__(169)($sort)), 'Array', {
	  // 22.1.3.25 Array.prototype.sort(comparefn)
	  sort: function sort(comparefn){
	    return comparefn === undefined
	      ? $sort.call(toObject(this))
	      : $sort.call(toObject(this), aFunction(comparefn));
	  }
	});

/***/ },
/* 172 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export  = __webpack_require__(9)
	  , $forEach = __webpack_require__(173)(0)
	  , STRICT   = __webpack_require__(169)([].forEach, true);

	$export($export.P + $export.F * !STRICT, 'Array', {
	  // 22.1.3.10 / 15.4.4.18 Array.prototype.forEach(callbackfn [, thisArg])
	  forEach: function forEach(callbackfn /* , thisArg */){
	    return $forEach(this, callbackfn, arguments[1]);
	  }
	});

/***/ },
/* 173 */
/***/ function(module, exports, __webpack_require__) {

	// 0 -> Array#forEach
	// 1 -> Array#map
	// 2 -> Array#filter
	// 3 -> Array#some
	// 4 -> Array#every
	// 5 -> Array#find
	// 6 -> Array#findIndex
	var ctx      = __webpack_require__(21)
	  , IObject  = __webpack_require__(34)
	  , toObject = __webpack_require__(59)
	  , toLength = __webpack_require__(38)
	  , asc      = __webpack_require__(174);
	module.exports = function(TYPE, $create){
	  var IS_MAP        = TYPE == 1
	    , IS_FILTER     = TYPE == 2
	    , IS_SOME       = TYPE == 3
	    , IS_EVERY      = TYPE == 4
	    , IS_FIND_INDEX = TYPE == 6
	    , NO_HOLES      = TYPE == 5 || IS_FIND_INDEX
	    , create        = $create || asc;
	  return function($this, callbackfn, that){
	    var O      = toObject($this)
	      , self   = IObject(O)
	      , f      = ctx(callbackfn, that, 3)
	      , length = toLength(self.length)
	      , index  = 0
	      , result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined
	      , val, res;
	    for(;length > index; index++)if(NO_HOLES || index in self){
	      val = self[index];
	      res = f(val, index, O);
	      if(TYPE){
	        if(IS_MAP)result[index] = res;            // map
	        else if(res)switch(TYPE){
	          case 3: return true;                    // some
	          case 5: return val;                     // find
	          case 6: return index;                   // findIndex
	          case 2: result.push(val);               // filter
	        } else if(IS_EVERY)return false;          // every
	      }
	    }
	    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
	  };
	};

/***/ },
/* 174 */
/***/ function(module, exports, __webpack_require__) {

	// 9.4.2.3 ArraySpeciesCreate(originalArray, length)
	var speciesConstructor = __webpack_require__(175);

	module.exports = function(original, length){
	  return new (speciesConstructor(original))(length);
	};

/***/ },
/* 175 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(14)
	  , isArray  = __webpack_require__(46)
	  , SPECIES  = __webpack_require__(26)('species');

	module.exports = function(original){
	  var C;
	  if(isArray(original)){
	    C = original.constructor;
	    // cross-realm fallback
	    if(typeof C == 'function' && (C === Array || isArray(C.prototype)))C = undefined;
	    if(isObject(C)){
	      C = C[SPECIES];
	      if(C === null)C = undefined;
	    }
	  } return C === undefined ? Array : C;
	};

/***/ },
/* 176 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(9)
	  , $map    = __webpack_require__(173)(1);

	$export($export.P + $export.F * !__webpack_require__(169)([].map, true), 'Array', {
	  // 22.1.3.15 / 15.4.4.19 Array.prototype.map(callbackfn [, thisArg])
	  map: function map(callbackfn /* , thisArg */){
	    return $map(this, callbackfn, arguments[1]);
	  }
	});

/***/ },
/* 177 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(9)
	  , $filter = __webpack_require__(173)(2);

	$export($export.P + $export.F * !__webpack_require__(169)([].filter, true), 'Array', {
	  // 22.1.3.7 / 15.4.4.20 Array.prototype.filter(callbackfn [, thisArg])
	  filter: function filter(callbackfn /* , thisArg */){
	    return $filter(this, callbackfn, arguments[1]);
	  }
	});

/***/ },
/* 178 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(9)
	  , $some   = __webpack_require__(173)(3);

	$export($export.P + $export.F * !__webpack_require__(169)([].some, true), 'Array', {
	  // 22.1.3.23 / 15.4.4.17 Array.prototype.some(callbackfn [, thisArg])
	  some: function some(callbackfn /* , thisArg */){
	    return $some(this, callbackfn, arguments[1]);
	  }
	});

/***/ },
/* 179 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(9)
	  , $every  = __webpack_require__(173)(4);

	$export($export.P + $export.F * !__webpack_require__(169)([].every, true), 'Array', {
	  // 22.1.3.5 / 15.4.4.16 Array.prototype.every(callbackfn [, thisArg])
	  every: function every(callbackfn /* , thisArg */){
	    return $every(this, callbackfn, arguments[1]);
	  }
	});

/***/ },
/* 180 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(9)
	  , $reduce = __webpack_require__(181);

	$export($export.P + $export.F * !__webpack_require__(169)([].reduce, true), 'Array', {
	  // 22.1.3.18 / 15.4.4.21 Array.prototype.reduce(callbackfn [, initialValue])
	  reduce: function reduce(callbackfn /* , initialValue */){
	    return $reduce(this, callbackfn, arguments.length, arguments[1], false);
	  }
	});

/***/ },
/* 181 */
/***/ function(module, exports, __webpack_require__) {

	var aFunction = __webpack_require__(22)
	  , toObject  = __webpack_require__(59)
	  , IObject   = __webpack_require__(34)
	  , toLength  = __webpack_require__(38);

	module.exports = function(that, callbackfn, aLen, memo, isRight){
	  aFunction(callbackfn);
	  var O      = toObject(that)
	    , self   = IObject(O)
	    , length = toLength(O.length)
	    , index  = isRight ? length - 1 : 0
	    , i      = isRight ? -1 : 1;
	  if(aLen < 2)for(;;){
	    if(index in self){
	      memo = self[index];
	      index += i;
	      break;
	    }
	    index += i;
	    if(isRight ? index < 0 : length <= index){
	      throw TypeError('Reduce of empty array with no initial value');
	    }
	  }
	  for(;isRight ? index >= 0 : length > index; index += i)if(index in self){
	    memo = callbackfn(memo, self[index], index, O);
	  }
	  return memo;
	};

/***/ },
/* 182 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(9)
	  , $reduce = __webpack_require__(181);

	$export($export.P + $export.F * !__webpack_require__(169)([].reduceRight, true), 'Array', {
	  // 22.1.3.19 / 15.4.4.22 Array.prototype.reduceRight(callbackfn [, initialValue])
	  reduceRight: function reduceRight(callbackfn /* , initialValue */){
	    return $reduce(this, callbackfn, arguments.length, arguments[1], true);
	  }
	});

/***/ },
/* 183 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export       = __webpack_require__(9)
	  , $indexOf      = __webpack_require__(37)(false)
	  , $native       = [].indexOf
	  , NEGATIVE_ZERO = !!$native && 1 / [1].indexOf(1, -0) < 0;

	$export($export.P + $export.F * (NEGATIVE_ZERO || !__webpack_require__(169)($native)), 'Array', {
	  // 22.1.3.11 / 15.4.4.14 Array.prototype.indexOf(searchElement [, fromIndex])
	  indexOf: function indexOf(searchElement /*, fromIndex = 0 */){
	    return NEGATIVE_ZERO
	      // convert -0 to +0
	      ? $native.apply(this, arguments) || 0
	      : $indexOf(this, searchElement, arguments[1]);
	  }
	});

/***/ },
/* 184 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export       = __webpack_require__(9)
	  , toIObject     = __webpack_require__(33)
	  , toInteger     = __webpack_require__(39)
	  , toLength      = __webpack_require__(38)
	  , $native       = [].lastIndexOf
	  , NEGATIVE_ZERO = !!$native && 1 / [1].lastIndexOf(1, -0) < 0;

	$export($export.P + $export.F * (NEGATIVE_ZERO || !__webpack_require__(169)($native)), 'Array', {
	  // 22.1.3.14 / 15.4.4.15 Array.prototype.lastIndexOf(searchElement [, fromIndex])
	  lastIndexOf: function lastIndexOf(searchElement /*, fromIndex = @[*-1] */){
	    // convert -0 to +0
	    if(NEGATIVE_ZERO)return $native.apply(this, arguments) || 0;
	    var O      = toIObject(this)
	      , length = toLength(O.length)
	      , index  = length - 1;
	    if(arguments.length > 1)index = Math.min(index, toInteger(arguments[1]));
	    if(index < 0)index = length + index;
	    for(;index >= 0; index--)if(index in O)if(O[index] === searchElement)return index || 0;
	    return -1;
	  }
	});

/***/ },
/* 185 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
	var $export = __webpack_require__(9);

	$export($export.P, 'Array', {copyWithin: __webpack_require__(186)});

	__webpack_require__(187)('copyWithin');

/***/ },
/* 186 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
	'use strict';
	var toObject = __webpack_require__(59)
	  , toIndex  = __webpack_require__(40)
	  , toLength = __webpack_require__(38);

	module.exports = [].copyWithin || function copyWithin(target/*= 0*/, start/*= 0, end = @length*/){
	  var O     = toObject(this)
	    , len   = toLength(O.length)
	    , to    = toIndex(target, len)
	    , from  = toIndex(start, len)
	    , end   = arguments.length > 2 ? arguments[2] : undefined
	    , count = Math.min((end === undefined ? len : toIndex(end, len)) - from, len - to)
	    , inc   = 1;
	  if(from < to && to < from + count){
	    inc  = -1;
	    from += count - 1;
	    to   += count - 1;
	  }
	  while(count-- > 0){
	    if(from in O)O[to] = O[from];
	    else delete O[to];
	    to   += inc;
	    from += inc;
	  } return O;
	};

/***/ },
/* 187 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.31 Array.prototype[@@unscopables]
	var UNSCOPABLES = __webpack_require__(26)('unscopables')
	  , ArrayProto  = Array.prototype;
	if(ArrayProto[UNSCOPABLES] == undefined)__webpack_require__(11)(ArrayProto, UNSCOPABLES, {});
	module.exports = function(key){
	  ArrayProto[UNSCOPABLES][key] = true;
	};

/***/ },
/* 188 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
	var $export = __webpack_require__(9);

	$export($export.P, 'Array', {fill: __webpack_require__(189)});

	__webpack_require__(187)('fill');

/***/ },
/* 189 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
	'use strict';
	var toObject = __webpack_require__(59)
	  , toIndex  = __webpack_require__(40)
	  , toLength = __webpack_require__(38);
	module.exports = function fill(value /*, start = 0, end = @length */){
	  var O      = toObject(this)
	    , length = toLength(O.length)
	    , aLen   = arguments.length
	    , index  = toIndex(aLen > 1 ? arguments[1] : undefined, length)
	    , end    = aLen > 2 ? arguments[2] : undefined
	    , endPos = end === undefined ? length : toIndex(end, length);
	  while(endPos > index)O[index++] = value;
	  return O;
	};

/***/ },
/* 190 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)
	var $export = __webpack_require__(9)
	  , $find   = __webpack_require__(173)(5)
	  , KEY     = 'find'
	  , forced  = true;
	// Shouldn't skip holes
	if(KEY in [])Array(1)[KEY](function(){ forced = false; });
	$export($export.P + $export.F * forced, 'Array', {
	  find: function find(callbackfn/*, that = undefined */){
	    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});
	__webpack_require__(187)(KEY);

/***/ },
/* 191 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)
	var $export = __webpack_require__(9)
	  , $find   = __webpack_require__(173)(6)
	  , KEY     = 'findIndex'
	  , forced  = true;
	// Shouldn't skip holes
	if(KEY in [])Array(1)[KEY](function(){ forced = false; });
	$export($export.P + $export.F * forced, 'Array', {
	  findIndex: function findIndex(callbackfn/*, that = undefined */){
	    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});
	__webpack_require__(187)(KEY);

/***/ },
/* 192 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(193)('Array');

/***/ },
/* 193 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var global      = __webpack_require__(5)
	  , dP          = __webpack_require__(12)
	  , DESCRIPTORS = __webpack_require__(7)
	  , SPECIES     = __webpack_require__(26)('species');

	module.exports = function(KEY){
	  var C = global[KEY];
	  if(DESCRIPTORS && C && !C[SPECIES])dP.f(C, SPECIES, {
	    configurable: true,
	    get: function(){ return this; }
	  });
	};

/***/ },
/* 194 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var addToUnscopables = __webpack_require__(187)
	  , step             = __webpack_require__(195)
	  , Iterators        = __webpack_require__(130)
	  , toIObject        = __webpack_require__(33);

	// 22.1.3.4 Array.prototype.entries()
	// 22.1.3.13 Array.prototype.keys()
	// 22.1.3.29 Array.prototype.values()
	// 22.1.3.30 Array.prototype[@@iterator]()
	module.exports = __webpack_require__(129)(Array, 'Array', function(iterated, kind){
	  this._t = toIObject(iterated); // target
	  this._i = 0;                   // next index
	  this._k = kind;                // kind
	// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
	}, function(){
	  var O     = this._t
	    , kind  = this._k
	    , index = this._i++;
	  if(!O || index >= O.length){
	    this._t = undefined;
	    return step(1);
	  }
	  if(kind == 'keys'  )return step(0, index);
	  if(kind == 'values')return step(0, O[index]);
	  return step(0, [index, O[index]]);
	}, 'values');

	// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
	Iterators.Arguments = Iterators.Array;

	addToUnscopables('keys');
	addToUnscopables('values');
	addToUnscopables('entries');

/***/ },
/* 195 */
/***/ function(module, exports) {

	module.exports = function(done, value){
	  return {value: value, done: !!done};
	};

/***/ },
/* 196 */
/***/ function(module, exports, __webpack_require__) {

	var global            = __webpack_require__(5)
	  , inheritIfRequired = __webpack_require__(89)
	  , dP                = __webpack_require__(12).f
	  , gOPN              = __webpack_require__(51).f
	  , isRegExp          = __webpack_require__(135)
	  , $flags            = __webpack_require__(197)
	  , $RegExp           = global.RegExp
	  , Base              = $RegExp
	  , proto             = $RegExp.prototype
	  , re1               = /a/g
	  , re2               = /a/g
	  // "new" creates a new object, old webkit buggy here
	  , CORRECT_NEW       = new $RegExp(re1) !== re1;

	if(__webpack_require__(7) && (!CORRECT_NEW || __webpack_require__(8)(function(){
	  re2[__webpack_require__(26)('match')] = false;
	  // RegExp constructor can alter flags and IsRegExp works correct with @@match
	  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';
	}))){
	  $RegExp = function RegExp(p, f){
	    var tiRE = this instanceof $RegExp
	      , piRE = isRegExp(p)
	      , fiU  = f === undefined;
	    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p
	      : inheritIfRequired(CORRECT_NEW
	        ? new Base(piRE && !fiU ? p.source : p, f)
	        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)
	      , tiRE ? this : proto, $RegExp);
	  };
	  var proxy = function(key){
	    key in $RegExp || dP($RegExp, key, {
	      configurable: true,
	      get: function(){ return Base[key]; },
	      set: function(it){ Base[key] = it; }
	    });
	  };
	  for(var keys = gOPN(Base), i = 0; keys.length > i; )proxy(keys[i++]);
	  proto.constructor = $RegExp;
	  $RegExp.prototype = proto;
	  __webpack_require__(19)(global, 'RegExp', $RegExp);
	}

	__webpack_require__(193)('RegExp');

/***/ },
/* 197 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 21.2.5.3 get RegExp.prototype.flags
	var anObject = __webpack_require__(13);
	module.exports = function(){
	  var that   = anObject(this)
	    , result = '';
	  if(that.global)     result += 'g';
	  if(that.ignoreCase) result += 'i';
	  if(that.multiline)  result += 'm';
	  if(that.unicode)    result += 'u';
	  if(that.sticky)     result += 'y';
	  return result;
	};

/***/ },
/* 198 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	__webpack_require__(199);
	var anObject    = __webpack_require__(13)
	  , $flags      = __webpack_require__(197)
	  , DESCRIPTORS = __webpack_require__(7)
	  , TO_STRING   = 'toString'
	  , $toString   = /./[TO_STRING];

	var define = function(fn){
	  __webpack_require__(19)(RegExp.prototype, TO_STRING, fn, true);
	};

	// 21.2.5.14 RegExp.prototype.toString()
	if(__webpack_require__(8)(function(){ return $toString.call({source: 'a', flags: 'b'}) != '/a/b'; })){
	  define(function toString(){
	    var R = anObject(this);
	    return '/'.concat(R.source, '/',
	      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);
	  });
	// FF44- RegExp#toString has a wrong name
	} else if($toString.name != TO_STRING){
	  define(function toString(){
	    return $toString.call(this);
	  });
	}

/***/ },
/* 199 */
/***/ function(module, exports, __webpack_require__) {

	// 21.2.5.3 get RegExp.prototype.flags()
	if(__webpack_require__(7) && /./g.flags != 'g')__webpack_require__(12).f(RegExp.prototype, 'flags', {
	  configurable: true,
	  get: __webpack_require__(197)
	});

/***/ },
/* 200 */
/***/ function(module, exports, __webpack_require__) {

	// @@match logic
	__webpack_require__(201)('match', 1, function(defined, MATCH, $match){
	  // 21.1.3.11 String.prototype.match(regexp)
	  return [function match(regexp){
	    'use strict';
	    var O  = defined(this)
	      , fn = regexp == undefined ? undefined : regexp[MATCH];
	    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));
	  }, $match];
	});

/***/ },
/* 201 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var hide     = __webpack_require__(11)
	  , redefine = __webpack_require__(19)
	  , fails    = __webpack_require__(8)
	  , defined  = __webpack_require__(36)
	  , wks      = __webpack_require__(26);

	module.exports = function(KEY, length, exec){
	  var SYMBOL   = wks(KEY)
	    , fns      = exec(defined, SYMBOL, ''[KEY])
	    , strfn    = fns[0]
	    , rxfn     = fns[1];
	  if(fails(function(){
	    var O = {};
	    O[SYMBOL] = function(){ return 7; };
	    return ''[KEY](O) != 7;
	  })){
	    redefine(String.prototype, KEY, strfn);
	    hide(RegExp.prototype, SYMBOL, length == 2
	      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
	      // 21.2.5.11 RegExp.prototype[@@split](string, limit)
	      ? function(string, arg){ return rxfn.call(string, this, arg); }
	      // 21.2.5.6 RegExp.prototype[@@match](string)
	      // 21.2.5.9 RegExp.prototype[@@search](string)
	      : function(string){ return rxfn.call(string, this); }
	    );
	  }
	};

/***/ },
/* 202 */
/***/ function(module, exports, __webpack_require__) {

	// @@replace logic
	__webpack_require__(201)('replace', 2, function(defined, REPLACE, $replace){
	  // 21.1.3.14 String.prototype.replace(searchValue, replaceValue)
	  return [function replace(searchValue, replaceValue){
	    'use strict';
	    var O  = defined(this)
	      , fn = searchValue == undefined ? undefined : searchValue[REPLACE];
	    return fn !== undefined
	      ? fn.call(searchValue, O, replaceValue)
	      : $replace.call(String(O), searchValue, replaceValue);
	  }, $replace];
	});

/***/ },
/* 203 */
/***/ function(module, exports, __webpack_require__) {

	// @@search logic
	__webpack_require__(201)('search', 1, function(defined, SEARCH, $search){
	  // 21.1.3.15 String.prototype.search(regexp)
	  return [function search(regexp){
	    'use strict';
	    var O  = defined(this)
	      , fn = regexp == undefined ? undefined : regexp[SEARCH];
	    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));
	  }, $search];
	});

/***/ },
/* 204 */
/***/ function(module, exports, __webpack_require__) {

	// @@split logic
	__webpack_require__(201)('split', 2, function(defined, SPLIT, $split){
	  'use strict';
	  var isRegExp   = __webpack_require__(135)
	    , _split     = $split
	    , $push      = [].push
	    , $SPLIT     = 'split'
	    , LENGTH     = 'length'
	    , LAST_INDEX = 'lastIndex';
	  if(
	    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||
	    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||
	    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||
	    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||
	    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||
	    ''[$SPLIT](/.?/)[LENGTH]
	  ){
	    var NPCG = /()??/.exec('')[1] === undefined; // nonparticipating capturing group
	    // based on es5-shim implementation, need to rework it
	    $split = function(separator, limit){
	      var string = String(this);
	      if(separator === undefined && limit === 0)return [];
	      // If `separator` is not a regex, use native split
	      if(!isRegExp(separator))return _split.call(string, separator, limit);
	      var output = [];
	      var flags = (separator.ignoreCase ? 'i' : '') +
	                  (separator.multiline ? 'm' : '') +
	                  (separator.unicode ? 'u' : '') +
	                  (separator.sticky ? 'y' : '');
	      var lastLastIndex = 0;
	      var splitLimit = limit === undefined ? 4294967295 : limit >>> 0;
	      // Make `global` and avoid `lastIndex` issues by working with a copy
	      var separatorCopy = new RegExp(separator.source, flags + 'g');
	      var separator2, match, lastIndex, lastLength, i;
	      // Doesn't need flags gy, but they don't hurt
	      if(!NPCG)separator2 = new RegExp('^' + separatorCopy.source + '$(?!\\s)', flags);
	      while(match = separatorCopy.exec(string)){
	        // `separatorCopy.lastIndex` is not reliable cross-browser
	        lastIndex = match.index + match[0][LENGTH];
	        if(lastIndex > lastLastIndex){
	          output.push(string.slice(lastLastIndex, match.index));
	          // Fix browsers whose `exec` methods don't consistently return `undefined` for NPCG
	          if(!NPCG && match[LENGTH] > 1)match[0].replace(separator2, function(){
	            for(i = 1; i < arguments[LENGTH] - 2; i++)if(arguments[i] === undefined)match[i] = undefined;
	          });
	          if(match[LENGTH] > 1 && match.index < string[LENGTH])$push.apply(output, match.slice(1));
	          lastLength = match[0][LENGTH];
	          lastLastIndex = lastIndex;
	          if(output[LENGTH] >= splitLimit)break;
	        }
	        if(separatorCopy[LAST_INDEX] === match.index)separatorCopy[LAST_INDEX]++; // Avoid an infinite loop
	      }
	      if(lastLastIndex === string[LENGTH]){
	        if(lastLength || !separatorCopy.test(''))output.push('');
	      } else output.push(string.slice(lastLastIndex));
	      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;
	    };
	  // Chakra, V8
	  } else if('0'[$SPLIT](undefined, 0)[LENGTH]){
	    $split = function(separator, limit){
	      return separator === undefined && limit === 0 ? [] : _split.call(this, separator, limit);
	    };
	  }
	  // 21.1.3.17 String.prototype.split(separator, limit)
	  return [function split(separator, limit){
	    var O  = defined(this)
	      , fn = separator == undefined ? undefined : separator[SPLIT];
	    return fn !== undefined ? fn.call(separator, O, limit) : $split.call(String(O), separator, limit);
	  }, $split];
	});

/***/ },
/* 205 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var LIBRARY            = __webpack_require__(29)
	  , global             = __webpack_require__(5)
	  , ctx                = __webpack_require__(21)
	  , classof            = __webpack_require__(76)
	  , $export            = __webpack_require__(9)
	  , isObject           = __webpack_require__(14)
	  , aFunction          = __webpack_require__(22)
	  , anInstance         = __webpack_require__(206)
	  , forOf              = __webpack_require__(207)
	  , speciesConstructor = __webpack_require__(208)
	  , task               = __webpack_require__(209).set
	  , microtask          = __webpack_require__(210)()
	  , PROMISE            = 'Promise'
	  , TypeError          = global.TypeError
	  , process            = global.process
	  , $Promise           = global[PROMISE]
	  , process            = global.process
	  , isNode             = classof(process) == 'process'
	  , empty              = function(){ /* empty */ }
	  , Internal, GenericPromiseCapability, Wrapper;

	var USE_NATIVE = !!function(){
	  try {
	    // correct subclassing with @@species support
	    var promise     = $Promise.resolve(1)
	      , FakePromise = (promise.constructor = {})[__webpack_require__(26)('species')] = function(exec){ exec(empty, empty); };
	    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
	    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;
	  } catch(e){ /* empty */ }
	}();

	// helpers
	var sameConstructor = function(a, b){
	  // with library wrapper special case
	  return a === b || a === $Promise && b === Wrapper;
	};
	var isThenable = function(it){
	  var then;
	  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
	};
	var newPromiseCapability = function(C){
	  return sameConstructor($Promise, C)
	    ? new PromiseCapability(C)
	    : new GenericPromiseCapability(C);
	};
	var PromiseCapability = GenericPromiseCapability = function(C){
	  var resolve, reject;
	  this.promise = new C(function($$resolve, $$reject){
	    if(resolve !== undefined || reject !== undefined)throw TypeError('Bad Promise constructor');
	    resolve = $$resolve;
	    reject  = $$reject;
	  });
	  this.resolve = aFunction(resolve);
	  this.reject  = aFunction(reject);
	};
	var perform = function(exec){
	  try {
	    exec();
	  } catch(e){
	    return {error: e};
	  }
	};
	var notify = function(promise, isReject){
	  if(promise._n)return;
	  promise._n = true;
	  var chain = promise._c;
	  microtask(function(){
	    var value = promise._v
	      , ok    = promise._s == 1
	      , i     = 0;
	    var run = function(reaction){
	      var handler = ok ? reaction.ok : reaction.fail
	        , resolve = reaction.resolve
	        , reject  = reaction.reject
	        , domain  = reaction.domain
	        , result, then;
	      try {
	        if(handler){
	          if(!ok){
	            if(promise._h == 2)onHandleUnhandled(promise);
	            promise._h = 1;
	          }
	          if(handler === true)result = value;
	          else {
	            if(domain)domain.enter();
	            result = handler(value);
	            if(domain)domain.exit();
	          }
	          if(result === reaction.promise){
	            reject(TypeError('Promise-chain cycle'));
	          } else if(then = isThenable(result)){
	            then.call(result, resolve, reject);
	          } else resolve(result);
	        } else reject(value);
	      } catch(e){
	        reject(e);
	      }
	    };
	    while(chain.length > i)run(chain[i++]); // variable length - can't use forEach
	    promise._c = [];
	    promise._n = false;
	    if(isReject && !promise._h)onUnhandled(promise);
	  });
	};
	var onUnhandled = function(promise){
	  task.call(global, function(){
	    var value = promise._v
	      , abrupt, handler, console;
	    if(isUnhandled(promise)){
	      abrupt = perform(function(){
	        if(isNode){
	          process.emit('unhandledRejection', value, promise);
	        } else if(handler = global.onunhandledrejection){
	          handler({promise: promise, reason: value});
	        } else if((console = global.console) && console.error){
	          console.error('Unhandled promise rejection', value);
	        }
	      });
	      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
	      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
	    } promise._a = undefined;
	    if(abrupt)throw abrupt.error;
	  });
	};
	var isUnhandled = function(promise){
	  if(promise._h == 1)return false;
	  var chain = promise._a || promise._c
	    , i     = 0
	    , reaction;
	  while(chain.length > i){
	    reaction = chain[i++];
	    if(reaction.fail || !isUnhandled(reaction.promise))return false;
	  } return true;
	};
	var onHandleUnhandled = function(promise){
	  task.call(global, function(){
	    var handler;
	    if(isNode){
	      process.emit('rejectionHandled', promise);
	    } else if(handler = global.onrejectionhandled){
	      handler({promise: promise, reason: promise._v});
	    }
	  });
	};
	var $reject = function(value){
	  var promise = this;
	  if(promise._d)return;
	  promise._d = true;
	  promise = promise._w || promise; // unwrap
	  promise._v = value;
	  promise._s = 2;
	  if(!promise._a)promise._a = promise._c.slice();
	  notify(promise, true);
	};
	var $resolve = function(value){
	  var promise = this
	    , then;
	  if(promise._d)return;
	  promise._d = true;
	  promise = promise._w || promise; // unwrap
	  try {
	    if(promise === value)throw TypeError("Promise can't be resolved itself");
	    if(then = isThenable(value)){
	      microtask(function(){
	        var wrapper = {_w: promise, _d: false}; // wrap
	        try {
	          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
	        } catch(e){
	          $reject.call(wrapper, e);
	        }
	      });
	    } else {
	      promise._v = value;
	      promise._s = 1;
	      notify(promise, false);
	    }
	  } catch(e){
	    $reject.call({_w: promise, _d: false}, e); // wrap
	  }
	};

	// constructor polyfill
	if(!USE_NATIVE){
	  // 25.4.3.1 Promise(executor)
	  $Promise = function Promise(executor){
	    anInstance(this, $Promise, PROMISE, '_h');
	    aFunction(executor);
	    Internal.call(this);
	    try {
	      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
	    } catch(err){
	      $reject.call(this, err);
	    }
	  };
	  Internal = function Promise(executor){
	    this._c = [];             // <- awaiting reactions
	    this._a = undefined;      // <- checked in isUnhandled reactions
	    this._s = 0;              // <- state
	    this._d = false;          // <- done
	    this._v = undefined;      // <- value
	    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
	    this._n = false;          // <- notify
	  };
	  Internal.prototype = __webpack_require__(211)($Promise.prototype, {
	    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
	    then: function then(onFulfilled, onRejected){
	      var reaction    = newPromiseCapability(speciesConstructor(this, $Promise));
	      reaction.ok     = typeof onFulfilled == 'function' ? onFulfilled : true;
	      reaction.fail   = typeof onRejected == 'function' && onRejected;
	      reaction.domain = isNode ? process.domain : undefined;
	      this._c.push(reaction);
	      if(this._a)this._a.push(reaction);
	      if(this._s)notify(this, false);
	      return reaction.promise;
	    },
	    // 25.4.5.1 Promise.prototype.catch(onRejected)
	    'catch': function(onRejected){
	      return this.then(undefined, onRejected);
	    }
	  });
	  PromiseCapability = function(){
	    var promise  = new Internal;
	    this.promise = promise;
	    this.resolve = ctx($resolve, promise, 1);
	    this.reject  = ctx($reject, promise, 1);
	  };
	}

	$export($export.G + $export.W + $export.F * !USE_NATIVE, {Promise: $Promise});
	__webpack_require__(25)($Promise, PROMISE);
	__webpack_require__(193)(PROMISE);
	Wrapper = __webpack_require__(10)[PROMISE];

	// statics
	$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
	  // 25.4.4.5 Promise.reject(r)
	  reject: function reject(r){
	    var capability = newPromiseCapability(this)
	      , $$reject   = capability.reject;
	    $$reject(r);
	    return capability.promise;
	  }
	});
	$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
	  // 25.4.4.6 Promise.resolve(x)
	  resolve: function resolve(x){
	    // instanceof instead of internal slot check because we should fix it without replacement native Promise core
	    if(x instanceof $Promise && sameConstructor(x.constructor, this))return x;
	    var capability = newPromiseCapability(this)
	      , $$resolve  = capability.resolve;
	    $$resolve(x);
	    return capability.promise;
	  }
	});
	$export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(166)(function(iter){
	  $Promise.all(iter)['catch'](empty);
	})), PROMISE, {
	  // 25.4.4.1 Promise.all(iterable)
	  all: function all(iterable){
	    var C          = this
	      , capability = newPromiseCapability(C)
	      , resolve    = capability.resolve
	      , reject     = capability.reject;
	    var abrupt = perform(function(){
	      var values    = []
	        , index     = 0
	        , remaining = 1;
	      forOf(iterable, false, function(promise){
	        var $index        = index++
	          , alreadyCalled = false;
	        values.push(undefined);
	        remaining++;
	        C.resolve(promise).then(function(value){
	          if(alreadyCalled)return;
	          alreadyCalled  = true;
	          values[$index] = value;
	          --remaining || resolve(values);
	        }, reject);
	      });
	      --remaining || resolve(values);
	    });
	    if(abrupt)reject(abrupt.error);
	    return capability.promise;
	  },
	  // 25.4.4.4 Promise.race(iterable)
	  race: function race(iterable){
	    var C          = this
	      , capability = newPromiseCapability(C)
	      , reject     = capability.reject;
	    var abrupt = perform(function(){
	      forOf(iterable, false, function(promise){
	        C.resolve(promise).then(capability.resolve, reject);
	      });
	    });
	    if(abrupt)reject(abrupt.error);
	    return capability.promise;
	  }
	});

/***/ },
/* 206 */
/***/ function(module, exports) {

	module.exports = function(it, Constructor, name, forbiddenField){
	  if(!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)){
	    throw TypeError(name + ': incorrect invocation!');
	  } return it;
	};

/***/ },
/* 207 */
/***/ function(module, exports, __webpack_require__) {

	var ctx         = __webpack_require__(21)
	  , call        = __webpack_require__(162)
	  , isArrayIter = __webpack_require__(163)
	  , anObject    = __webpack_require__(13)
	  , toLength    = __webpack_require__(38)
	  , getIterFn   = __webpack_require__(165)
	  , BREAK       = {}
	  , RETURN      = {};
	var exports = module.exports = function(iterable, entries, fn, that, ITERATOR){
	  var iterFn = ITERATOR ? function(){ return iterable; } : getIterFn(iterable)
	    , f      = ctx(fn, that, entries ? 2 : 1)
	    , index  = 0
	    , length, step, iterator, result;
	  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');
	  // fast case for arrays with default iterator
	  if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){
	    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
	    if(result === BREAK || result === RETURN)return result;
	  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){
	    result = call(iterator, f, step.value, entries);
	    if(result === BREAK || result === RETURN)return result;
	  }
	};
	exports.BREAK  = BREAK;
	exports.RETURN = RETURN;

/***/ },
/* 208 */
/***/ function(module, exports, __webpack_require__) {

	// 7.3.20 SpeciesConstructor(O, defaultConstructor)
	var anObject  = __webpack_require__(13)
	  , aFunction = __webpack_require__(22)
	  , SPECIES   = __webpack_require__(26)('species');
	module.exports = function(O, D){
	  var C = anObject(O).constructor, S;
	  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
	};

/***/ },
/* 209 */
/***/ function(module, exports, __webpack_require__) {

	var ctx                = __webpack_require__(21)
	  , invoke             = __webpack_require__(79)
	  , html               = __webpack_require__(49)
	  , cel                = __webpack_require__(16)
	  , global             = __webpack_require__(5)
	  , process            = global.process
	  , setTask            = global.setImmediate
	  , clearTask          = global.clearImmediate
	  , MessageChannel     = global.MessageChannel
	  , counter            = 0
	  , queue              = {}
	  , ONREADYSTATECHANGE = 'onreadystatechange'
	  , defer, channel, port;
	var run = function(){
	  var id = +this;
	  if(queue.hasOwnProperty(id)){
	    var fn = queue[id];
	    delete queue[id];
	    fn();
	  }
	};
	var listener = function(event){
	  run.call(event.data);
	};
	// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
	if(!setTask || !clearTask){
	  setTask = function setImmediate(fn){
	    var args = [], i = 1;
	    while(arguments.length > i)args.push(arguments[i++]);
	    queue[++counter] = function(){
	      invoke(typeof fn == 'function' ? fn : Function(fn), args);
	    };
	    defer(counter);
	    return counter;
	  };
	  clearTask = function clearImmediate(id){
	    delete queue[id];
	  };
	  // Node.js 0.8-
	  if(__webpack_require__(35)(process) == 'process'){
	    defer = function(id){
	      process.nextTick(ctx(run, id, 1));
	    };
	  // Browsers with MessageChannel, includes WebWorkers
	  } else if(MessageChannel){
	    channel = new MessageChannel;
	    port    = channel.port2;
	    channel.port1.onmessage = listener;
	    defer = ctx(port.postMessage, port, 1);
	  // Browsers with postMessage, skip WebWorkers
	  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
	  } else if(global.addEventListener && typeof postMessage == 'function' && !global.importScripts){
	    defer = function(id){
	      global.postMessage(id + '', '*');
	    };
	    global.addEventListener('message', listener, false);
	  // IE8-
	  } else if(ONREADYSTATECHANGE in cel('script')){
	    defer = function(id){
	      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function(){
	        html.removeChild(this);
	        run.call(id);
	      };
	    };
	  // Rest old browsers
	  } else {
	    defer = function(id){
	      setTimeout(ctx(run, id, 1), 0);
	    };
	  }
	}
	module.exports = {
	  set:   setTask,
	  clear: clearTask
	};

/***/ },
/* 210 */
/***/ function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(5)
	  , macrotask = __webpack_require__(209).set
	  , Observer  = global.MutationObserver || global.WebKitMutationObserver
	  , process   = global.process
	  , Promise   = global.Promise
	  , isNode    = __webpack_require__(35)(process) == 'process';

	module.exports = function(){
	  var head, last, notify;

	  var flush = function(){
	    var parent, fn;
	    if(isNode && (parent = process.domain))parent.exit();
	    while(head){
	      fn   = head.fn;
	      head = head.next;
	      try {
	        fn();
	      } catch(e){
	        if(head)notify();
	        else last = undefined;
	        throw e;
	      }
	    } last = undefined;
	    if(parent)parent.enter();
	  };

	  // Node.js
	  if(isNode){
	    notify = function(){
	      process.nextTick(flush);
	    };
	  // browsers with MutationObserver
	  } else if(Observer){
	    var toggle = true
	      , node   = document.createTextNode('');
	    new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new
	    notify = function(){
	      node.data = toggle = !toggle;
	    };
	  // environments with maybe non-completely correct, but existent Promise
	  } else if(Promise && Promise.resolve){
	    var promise = Promise.resolve();
	    notify = function(){
	      promise.then(flush);
	    };
	  // for other environments - macrotask based on:
	  // - setImmediate
	  // - MessageChannel
	  // - window.postMessag
	  // - onreadystatechange
	  // - setTimeout
	  } else {
	    notify = function(){
	      // strange IE + webpack dev server bug - use .call(global)
	      macrotask.call(global, flush);
	    };
	  }

	  return function(fn){
	    var task = {fn: fn, next: undefined};
	    if(last)last.next = task;
	    if(!head){
	      head = task;
	      notify();
	    } last = task;
	  };
	};

/***/ },
/* 211 */
/***/ function(module, exports, __webpack_require__) {

	var redefine = __webpack_require__(19);
	module.exports = function(target, src, safe){
	  for(var key in src)redefine(target, key, src[key], safe);
	  return target;
	};

/***/ },
/* 212 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var strong = __webpack_require__(213);

	// 23.1 Map Objects
	module.exports = __webpack_require__(214)('Map', function(get){
	  return function Map(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };
	}, {
	  // 23.1.3.6 Map.prototype.get(key)
	  get: function get(key){
	    var entry = strong.getEntry(this, key);
	    return entry && entry.v;
	  },
	  // 23.1.3.9 Map.prototype.set(key, value)
	  set: function set(key, value){
	    return strong.def(this, key === 0 ? 0 : key, value);
	  }
	}, strong, true);

/***/ },
/* 213 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var dP          = __webpack_require__(12).f
	  , create      = __webpack_require__(47)
	  , redefineAll = __webpack_require__(211)
	  , ctx         = __webpack_require__(21)
	  , anInstance  = __webpack_require__(206)
	  , defined     = __webpack_require__(36)
	  , forOf       = __webpack_require__(207)
	  , $iterDefine = __webpack_require__(129)
	  , step        = __webpack_require__(195)
	  , setSpecies  = __webpack_require__(193)
	  , DESCRIPTORS = __webpack_require__(7)
	  , fastKey     = __webpack_require__(23).fastKey
	  , SIZE        = DESCRIPTORS ? '_s' : 'size';

	var getEntry = function(that, key){
	  // fast case
	  var index = fastKey(key), entry;
	  if(index !== 'F')return that._i[index];
	  // frozen object case
	  for(entry = that._f; entry; entry = entry.n){
	    if(entry.k == key)return entry;
	  }
	};

	module.exports = {
	  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){
	    var C = wrapper(function(that, iterable){
	      anInstance(that, C, NAME, '_i');
	      that._i = create(null); // index
	      that._f = undefined;    // first entry
	      that._l = undefined;    // last entry
	      that[SIZE] = 0;         // size
	      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);
	    });
	    redefineAll(C.prototype, {
	      // 23.1.3.1 Map.prototype.clear()
	      // 23.2.3.2 Set.prototype.clear()
	      clear: function clear(){
	        for(var that = this, data = that._i, entry = that._f; entry; entry = entry.n){
	          entry.r = true;
	          if(entry.p)entry.p = entry.p.n = undefined;
	          delete data[entry.i];
	        }
	        that._f = that._l = undefined;
	        that[SIZE] = 0;
	      },
	      // 23.1.3.3 Map.prototype.delete(key)
	      // 23.2.3.4 Set.prototype.delete(value)
	      'delete': function(key){
	        var that  = this
	          , entry = getEntry(that, key);
	        if(entry){
	          var next = entry.n
	            , prev = entry.p;
	          delete that._i[entry.i];
	          entry.r = true;
	          if(prev)prev.n = next;
	          if(next)next.p = prev;
	          if(that._f == entry)that._f = next;
	          if(that._l == entry)that._l = prev;
	          that[SIZE]--;
	        } return !!entry;
	      },
	      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
	      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
	      forEach: function forEach(callbackfn /*, that = undefined */){
	        anInstance(this, C, 'forEach');
	        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3)
	          , entry;
	        while(entry = entry ? entry.n : this._f){
	          f(entry.v, entry.k, this);
	          // revert to the last existing entry
	          while(entry && entry.r)entry = entry.p;
	        }
	      },
	      // 23.1.3.7 Map.prototype.has(key)
	      // 23.2.3.7 Set.prototype.has(value)
	      has: function has(key){
	        return !!getEntry(this, key);
	      }
	    });
	    if(DESCRIPTORS)dP(C.prototype, 'size', {
	      get: function(){
	        return defined(this[SIZE]);
	      }
	    });
	    return C;
	  },
	  def: function(that, key, value){
	    var entry = getEntry(that, key)
	      , prev, index;
	    // change existing entry
	    if(entry){
	      entry.v = value;
	    // create new entry
	    } else {
	      that._l = entry = {
	        i: index = fastKey(key, true), // <- index
	        k: key,                        // <- key
	        v: value,                      // <- value
	        p: prev = that._l,             // <- previous entry
	        n: undefined,                  // <- next entry
	        r: false                       // <- removed
	      };
	      if(!that._f)that._f = entry;
	      if(prev)prev.n = entry;
	      that[SIZE]++;
	      // add to index
	      if(index !== 'F')that._i[index] = entry;
	    } return that;
	  },
	  getEntry: getEntry,
	  setStrong: function(C, NAME, IS_MAP){
	    // add .keys, .values, .entries, [@@iterator]
	    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
	    $iterDefine(C, NAME, function(iterated, kind){
	      this._t = iterated;  // target
	      this._k = kind;      // kind
	      this._l = undefined; // previous
	    }, function(){
	      var that  = this
	        , kind  = that._k
	        , entry = that._l;
	      // revert to the last existing entry
	      while(entry && entry.r)entry = entry.p;
	      // get next entry
	      if(!that._t || !(that._l = entry = entry ? entry.n : that._t._f)){
	        // or finish the iteration
	        that._t = undefined;
	        return step(1);
	      }
	      // return step by kind
	      if(kind == 'keys'  )return step(0, entry.k);
	      if(kind == 'values')return step(0, entry.v);
	      return step(0, [entry.k, entry.v]);
	    }, IS_MAP ? 'entries' : 'values' , !IS_MAP, true);

	    // add [@@species], 23.1.2.2, 23.2.2.2
	    setSpecies(NAME);
	  }
	};

/***/ },
/* 214 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var global            = __webpack_require__(5)
	  , $export           = __webpack_require__(9)
	  , redefine          = __webpack_require__(19)
	  , redefineAll       = __webpack_require__(211)
	  , meta              = __webpack_require__(23)
	  , forOf             = __webpack_require__(207)
	  , anInstance        = __webpack_require__(206)
	  , isObject          = __webpack_require__(14)
	  , fails             = __webpack_require__(8)
	  , $iterDetect       = __webpack_require__(166)
	  , setToStringTag    = __webpack_require__(25)
	  , inheritIfRequired = __webpack_require__(89);

	module.exports = function(NAME, wrapper, methods, common, IS_MAP, IS_WEAK){
	  var Base  = global[NAME]
	    , C     = Base
	    , ADDER = IS_MAP ? 'set' : 'add'
	    , proto = C && C.prototype
	    , O     = {};
	  var fixMethod = function(KEY){
	    var fn = proto[KEY];
	    redefine(proto, KEY,
	      KEY == 'delete' ? function(a){
	        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
	      } : KEY == 'has' ? function has(a){
	        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
	      } : KEY == 'get' ? function get(a){
	        return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);
	      } : KEY == 'add' ? function add(a){ fn.call(this, a === 0 ? 0 : a); return this; }
	        : function set(a, b){ fn.call(this, a === 0 ? 0 : a, b); return this; }
	    );
	  };
	  if(typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function(){
	    new C().entries().next();
	  }))){
	    // create collection constructor
	    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
	    redefineAll(C.prototype, methods);
	    meta.NEED = true;
	  } else {
	    var instance             = new C
	      // early implementations not supports chaining
	      , HASNT_CHAINING       = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance
	      // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false
	      , THROWS_ON_PRIMITIVES = fails(function(){ instance.has(1); })
	      // most early implementations doesn't supports iterables, most modern - not close it correctly
	      , ACCEPT_ITERABLES     = $iterDetect(function(iter){ new C(iter); }) // eslint-disable-line no-new
	      // for early implementations -0 and +0 not the same
	      , BUGGY_ZERO = !IS_WEAK && fails(function(){
	        // V8 ~ Chromium 42- fails only with 5+ elements
	        var $instance = new C()
	          , index     = 5;
	        while(index--)$instance[ADDER](index, index);
	        return !$instance.has(-0);
	      });
	    if(!ACCEPT_ITERABLES){ 
	      C = wrapper(function(target, iterable){
	        anInstance(target, C, NAME);
	        var that = inheritIfRequired(new Base, target, C);
	        if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);
	        return that;
	      });
	      C.prototype = proto;
	      proto.constructor = C;
	    }
	    if(THROWS_ON_PRIMITIVES || BUGGY_ZERO){
	      fixMethod('delete');
	      fixMethod('has');
	      IS_MAP && fixMethod('get');
	    }
	    if(BUGGY_ZERO || HASNT_CHAINING)fixMethod(ADDER);
	    // weak collections should not contains .clear method
	    if(IS_WEAK && proto.clear)delete proto.clear;
	  }

	  setToStringTag(C, NAME);

	  O[NAME] = C;
	  $export($export.G + $export.W + $export.F * (C != Base), O);

	  if(!IS_WEAK)common.setStrong(C, NAME, IS_MAP);

	  return C;
	};

/***/ },
/* 215 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var strong = __webpack_require__(213);

	// 23.2 Set Objects
	module.exports = __webpack_require__(214)('Set', function(get){
	  return function Set(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };
	}, {
	  // 23.2.3.1 Set.prototype.add(value)
	  add: function add(value){
	    return strong.def(this, value = value === 0 ? 0 : value, value);
	  }
	}, strong);

/***/ },
/* 216 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var each         = __webpack_require__(173)(0)
	  , redefine     = __webpack_require__(19)
	  , meta         = __webpack_require__(23)
	  , assign       = __webpack_require__(70)
	  , weak         = __webpack_require__(217)
	  , isObject     = __webpack_require__(14)
	  , getWeak      = meta.getWeak
	  , isExtensible = Object.isExtensible
	  , uncaughtFrozenStore = weak.ufstore
	  , tmp          = {}
	  , InternalMap;

	var wrapper = function(get){
	  return function WeakMap(){
	    return get(this, arguments.length > 0 ? arguments[0] : undefined);
	  };
	};

	var methods = {
	  // 23.3.3.3 WeakMap.prototype.get(key)
	  get: function get(key){
	    if(isObject(key)){
	      var data = getWeak(key);
	      if(data === true)return uncaughtFrozenStore(this).get(key);
	      return data ? data[this._i] : undefined;
	    }
	  },
	  // 23.3.3.5 WeakMap.prototype.set(key, value)
	  set: function set(key, value){
	    return weak.def(this, key, value);
	  }
	};

	// 23.3 WeakMap Objects
	var $WeakMap = module.exports = __webpack_require__(214)('WeakMap', wrapper, methods, weak, true, true);

	// IE11 WeakMap frozen keys fix
	if(new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7){
	  InternalMap = weak.getConstructor(wrapper);
	  assign(InternalMap.prototype, methods);
	  meta.NEED = true;
	  each(['delete', 'has', 'get', 'set'], function(key){
	    var proto  = $WeakMap.prototype
	      , method = proto[key];
	    redefine(proto, key, function(a, b){
	      // store frozen objects on internal weakmap shim
	      if(isObject(a) && !isExtensible(a)){
	        if(!this._f)this._f = new InternalMap;
	        var result = this._f[key](a, b);
	        return key == 'set' ? this : result;
	      // store all the rest on native weakmap
	      } return method.call(this, a, b);
	    });
	  });
	}

/***/ },
/* 217 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var redefineAll       = __webpack_require__(211)
	  , getWeak           = __webpack_require__(23).getWeak
	  , anObject          = __webpack_require__(13)
	  , isObject          = __webpack_require__(14)
	  , anInstance        = __webpack_require__(206)
	  , forOf             = __webpack_require__(207)
	  , createArrayMethod = __webpack_require__(173)
	  , $has              = __webpack_require__(6)
	  , arrayFind         = createArrayMethod(5)
	  , arrayFindIndex    = createArrayMethod(6)
	  , id                = 0;

	// fallback for uncaught frozen keys
	var uncaughtFrozenStore = function(that){
	  return that._l || (that._l = new UncaughtFrozenStore);
	};
	var UncaughtFrozenStore = function(){
	  this.a = [];
	};
	var findUncaughtFrozen = function(store, key){
	  return arrayFind(store.a, function(it){
	    return it[0] === key;
	  });
	};
	UncaughtFrozenStore.prototype = {
	  get: function(key){
	    var entry = findUncaughtFrozen(this, key);
	    if(entry)return entry[1];
	  },
	  has: function(key){
	    return !!findUncaughtFrozen(this, key);
	  },
	  set: function(key, value){
	    var entry = findUncaughtFrozen(this, key);
	    if(entry)entry[1] = value;
	    else this.a.push([key, value]);
	  },
	  'delete': function(key){
	    var index = arrayFindIndex(this.a, function(it){
	      return it[0] === key;
	    });
	    if(~index)this.a.splice(index, 1);
	    return !!~index;
	  }
	};

	module.exports = {
	  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){
	    var C = wrapper(function(that, iterable){
	      anInstance(that, C, NAME, '_i');
	      that._i = id++;      // collection id
	      that._l = undefined; // leak store for uncaught frozen objects
	      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);
	    });
	    redefineAll(C.prototype, {
	      // 23.3.3.2 WeakMap.prototype.delete(key)
	      // 23.4.3.3 WeakSet.prototype.delete(value)
	      'delete': function(key){
	        if(!isObject(key))return false;
	        var data = getWeak(key);
	        if(data === true)return uncaughtFrozenStore(this)['delete'](key);
	        return data && $has(data, this._i) && delete data[this._i];
	      },
	      // 23.3.3.4 WeakMap.prototype.has(key)
	      // 23.4.3.4 WeakSet.prototype.has(value)
	      has: function has(key){
	        if(!isObject(key))return false;
	        var data = getWeak(key);
	        if(data === true)return uncaughtFrozenStore(this).has(key);
	        return data && $has(data, this._i);
	      }
	    });
	    return C;
	  },
	  def: function(that, key, value){
	    var data = getWeak(anObject(key), true);
	    if(data === true)uncaughtFrozenStore(that).set(key, value);
	    else data[that._i] = value;
	    return that;
	  },
	  ufstore: uncaughtFrozenStore
	};

/***/ },
/* 218 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var weak = __webpack_require__(217);

	// 23.4 WeakSet Objects
	__webpack_require__(214)('WeakSet', function(get){
	  return function WeakSet(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };
	}, {
	  // 23.4.3.1 WeakSet.prototype.add(value)
	  add: function add(value){
	    return weak.def(this, value, true);
	  }
	}, weak, false, true);

/***/ },
/* 219 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export      = __webpack_require__(9)
	  , $typed       = __webpack_require__(220)
	  , buffer       = __webpack_require__(221)
	  , anObject     = __webpack_require__(13)
	  , toIndex      = __webpack_require__(40)
	  , toLength     = __webpack_require__(38)
	  , isObject     = __webpack_require__(14)
	  , ArrayBuffer  = __webpack_require__(5).ArrayBuffer
	  , speciesConstructor = __webpack_require__(208)
	  , $ArrayBuffer = buffer.ArrayBuffer
	  , $DataView    = buffer.DataView
	  , $isView      = $typed.ABV && ArrayBuffer.isView
	  , $slice       = $ArrayBuffer.prototype.slice
	  , VIEW         = $typed.VIEW
	  , ARRAY_BUFFER = 'ArrayBuffer';

	$export($export.G + $export.W + $export.F * (ArrayBuffer !== $ArrayBuffer), {ArrayBuffer: $ArrayBuffer});

	$export($export.S + $export.F * !$typed.CONSTR, ARRAY_BUFFER, {
	  // 24.1.3.1 ArrayBuffer.isView(arg)
	  isView: function isView(it){
	    return $isView && $isView(it) || isObject(it) && VIEW in it;
	  }
	});

	$export($export.P + $export.U + $export.F * __webpack_require__(8)(function(){
	  return !new $ArrayBuffer(2).slice(1, undefined).byteLength;
	}), ARRAY_BUFFER, {
	  // 24.1.4.3 ArrayBuffer.prototype.slice(start, end)
	  slice: function slice(start, end){
	    if($slice !== undefined && end === undefined)return $slice.call(anObject(this), start); // FF fix
	    var len    = anObject(this).byteLength
	      , first  = toIndex(start, len)
	      , final  = toIndex(end === undefined ? len : end, len)
	      , result = new (speciesConstructor(this, $ArrayBuffer))(toLength(final - first))
	      , viewS  = new $DataView(this)
	      , viewT  = new $DataView(result)
	      , index  = 0;
	    while(first < final){
	      viewT.setUint8(index++, viewS.getUint8(first++));
	    } return result;
	  }
	});

	__webpack_require__(193)(ARRAY_BUFFER);

/***/ },
/* 220 */
/***/ function(module, exports, __webpack_require__) {

	var global = __webpack_require__(5)
	  , hide   = __webpack_require__(11)
	  , uid    = __webpack_require__(20)
	  , TYPED  = uid('typed_array')
	  , VIEW   = uid('view')
	  , ABV    = !!(global.ArrayBuffer && global.DataView)
	  , CONSTR = ABV
	  , i = 0, l = 9, Typed;

	var TypedArrayConstructors = (
	  'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'
	).split(',');

	while(i < l){
	  if(Typed = global[TypedArrayConstructors[i++]]){
	    hide(Typed.prototype, TYPED, true);
	    hide(Typed.prototype, VIEW, true);
	  } else CONSTR = false;
	}

	module.exports = {
	  ABV:    ABV,
	  CONSTR: CONSTR,
	  TYPED:  TYPED,
	  VIEW:   VIEW
	};

/***/ },
/* 221 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var global         = __webpack_require__(5)
	  , DESCRIPTORS    = __webpack_require__(7)
	  , LIBRARY        = __webpack_require__(29)
	  , $typed         = __webpack_require__(220)
	  , hide           = __webpack_require__(11)
	  , redefineAll    = __webpack_require__(211)
	  , fails          = __webpack_require__(8)
	  , anInstance     = __webpack_require__(206)
	  , toInteger      = __webpack_require__(39)
	  , toLength       = __webpack_require__(38)
	  , gOPN           = __webpack_require__(51).f
	  , dP             = __webpack_require__(12).f
	  , arrayFill      = __webpack_require__(189)
	  , setToStringTag = __webpack_require__(25)
	  , ARRAY_BUFFER   = 'ArrayBuffer'
	  , DATA_VIEW      = 'DataView'
	  , PROTOTYPE      = 'prototype'
	  , WRONG_LENGTH   = 'Wrong length!'
	  , WRONG_INDEX    = 'Wrong index!'
	  , $ArrayBuffer   = global[ARRAY_BUFFER]
	  , $DataView      = global[DATA_VIEW]
	  , Math           = global.Math
	  , RangeError     = global.RangeError
	  , Infinity       = global.Infinity
	  , BaseBuffer     = $ArrayBuffer
	  , abs            = Math.abs
	  , pow            = Math.pow
	  , floor          = Math.floor
	  , log            = Math.log
	  , LN2            = Math.LN2
	  , BUFFER         = 'buffer'
	  , BYTE_LENGTH    = 'byteLength'
	  , BYTE_OFFSET    = 'byteOffset'
	  , $BUFFER        = DESCRIPTORS ? '_b' : BUFFER
	  , $LENGTH        = DESCRIPTORS ? '_l' : BYTE_LENGTH
	  , $OFFSET        = DESCRIPTORS ? '_o' : BYTE_OFFSET;

	// IEEE754 conversions based on https://github.com/feross/ieee754
	var packIEEE754 = function(value, mLen, nBytes){
	  var buffer = Array(nBytes)
	    , eLen   = nBytes * 8 - mLen - 1
	    , eMax   = (1 << eLen) - 1
	    , eBias  = eMax >> 1
	    , rt     = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0
	    , i      = 0
	    , s      = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0
	    , e, m, c;
	  value = abs(value)
	  if(value != value || value === Infinity){
	    m = value != value ? 1 : 0;
	    e = eMax;
	  } else {
	    e = floor(log(value) / LN2);
	    if(value * (c = pow(2, -e)) < 1){
	      e--;
	      c *= 2;
	    }
	    if(e + eBias >= 1){
	      value += rt / c;
	    } else {
	      value += rt * pow(2, 1 - eBias);
	    }
	    if(value * c >= 2){
	      e++;
	      c /= 2;
	    }
	    if(e + eBias >= eMax){
	      m = 0;
	      e = eMax;
	    } else if(e + eBias >= 1){
	      m = (value * c - 1) * pow(2, mLen);
	      e = e + eBias;
	    } else {
	      m = value * pow(2, eBias - 1) * pow(2, mLen);
	      e = 0;
	    }
	  }
	  for(; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);
	  e = e << mLen | m;
	  eLen += mLen;
	  for(; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);
	  buffer[--i] |= s * 128;
	  return buffer;
	};
	var unpackIEEE754 = function(buffer, mLen, nBytes){
	  var eLen  = nBytes * 8 - mLen - 1
	    , eMax  = (1 << eLen) - 1
	    , eBias = eMax >> 1
	    , nBits = eLen - 7
	    , i     = nBytes - 1
	    , s     = buffer[i--]
	    , e     = s & 127
	    , m;
	  s >>= 7;
	  for(; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);
	  m = e & (1 << -nBits) - 1;
	  e >>= -nBits;
	  nBits += mLen;
	  for(; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);
	  if(e === 0){
	    e = 1 - eBias;
	  } else if(e === eMax){
	    return m ? NaN : s ? -Infinity : Infinity;
	  } else {
	    m = m + pow(2, mLen);
	    e = e - eBias;
	  } return (s ? -1 : 1) * m * pow(2, e - mLen);
	};

	var unpackI32 = function(bytes){
	  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];
	};
	var packI8 = function(it){
	  return [it & 0xff];
	};
	var packI16 = function(it){
	  return [it & 0xff, it >> 8 & 0xff];
	};
	var packI32 = function(it){
	  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];
	};
	var packF64 = function(it){
	  return packIEEE754(it, 52, 8);
	};
	var packF32 = function(it){
	  return packIEEE754(it, 23, 4);
	};

	var addGetter = function(C, key, internal){
	  dP(C[PROTOTYPE], key, {get: function(){ return this[internal]; }});
	};

	var get = function(view, bytes, index, isLittleEndian){
	  var numIndex = +index
	    , intIndex = toInteger(numIndex);
	  if(numIndex != intIndex || intIndex < 0 || intIndex + bytes > view[$LENGTH])throw RangeError(WRONG_INDEX);
	  var store = view[$BUFFER]._b
	    , start = intIndex + view[$OFFSET]
	    , pack  = store.slice(start, start + bytes);
	  return isLittleEndian ? pack : pack.reverse();
	};
	var set = function(view, bytes, index, conversion, value, isLittleEndian){
	  var numIndex = +index
	    , intIndex = toInteger(numIndex);
	  if(numIndex != intIndex || intIndex < 0 || intIndex + bytes > view[$LENGTH])throw RangeError(WRONG_INDEX);
	  var store = view[$BUFFER]._b
	    , start = intIndex + view[$OFFSET]
	    , pack  = conversion(+value);
	  for(var i = 0; i < bytes; i++)store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];
	};

	var validateArrayBufferArguments = function(that, length){
	  anInstance(that, $ArrayBuffer, ARRAY_BUFFER);
	  var numberLength = +length
	    , byteLength   = toLength(numberLength);
	  if(numberLength != byteLength)throw RangeError(WRONG_LENGTH);
	  return byteLength;
	};

	if(!$typed.ABV){
	  $ArrayBuffer = function ArrayBuffer(length){
	    var byteLength = validateArrayBufferArguments(this, length);
	    this._b       = arrayFill.call(Array(byteLength), 0);
	    this[$LENGTH] = byteLength;
	  };

	  $DataView = function DataView(buffer, byteOffset, byteLength){
	    anInstance(this, $DataView, DATA_VIEW);
	    anInstance(buffer, $ArrayBuffer, DATA_VIEW);
	    var bufferLength = buffer[$LENGTH]
	      , offset       = toInteger(byteOffset);
	    if(offset < 0 || offset > bufferLength)throw RangeError('Wrong offset!');
	    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);
	    if(offset + byteLength > bufferLength)throw RangeError(WRONG_LENGTH);
	    this[$BUFFER] = buffer;
	    this[$OFFSET] = offset;
	    this[$LENGTH] = byteLength;
	  };

	  if(DESCRIPTORS){
	    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');
	    addGetter($DataView, BUFFER, '_b');
	    addGetter($DataView, BYTE_LENGTH, '_l');
	    addGetter($DataView, BYTE_OFFSET, '_o');
	  }

	  redefineAll($DataView[PROTOTYPE], {
	    getInt8: function getInt8(byteOffset){
	      return get(this, 1, byteOffset)[0] << 24 >> 24;
	    },
	    getUint8: function getUint8(byteOffset){
	      return get(this, 1, byteOffset)[0];
	    },
	    getInt16: function getInt16(byteOffset /*, littleEndian */){
	      var bytes = get(this, 2, byteOffset, arguments[1]);
	      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;
	    },
	    getUint16: function getUint16(byteOffset /*, littleEndian */){
	      var bytes = get(this, 2, byteOffset, arguments[1]);
	      return bytes[1] << 8 | bytes[0];
	    },
	    getInt32: function getInt32(byteOffset /*, littleEndian */){
	      return unpackI32(get(this, 4, byteOffset, arguments[1]));
	    },
	    getUint32: function getUint32(byteOffset /*, littleEndian */){
	      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;
	    },
	    getFloat32: function getFloat32(byteOffset /*, littleEndian */){
	      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);
	    },
	    getFloat64: function getFloat64(byteOffset /*, littleEndian */){
	      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);
	    },
	    setInt8: function setInt8(byteOffset, value){
	      set(this, 1, byteOffset, packI8, value);
	    },
	    setUint8: function setUint8(byteOffset, value){
	      set(this, 1, byteOffset, packI8, value);
	    },
	    setInt16: function setInt16(byteOffset, value /*, littleEndian */){
	      set(this, 2, byteOffset, packI16, value, arguments[2]);
	    },
	    setUint16: function setUint16(byteOffset, value /*, littleEndian */){
	      set(this, 2, byteOffset, packI16, value, arguments[2]);
	    },
	    setInt32: function setInt32(byteOffset, value /*, littleEndian */){
	      set(this, 4, byteOffset, packI32, value, arguments[2]);
	    },
	    setUint32: function setUint32(byteOffset, value /*, littleEndian */){
	      set(this, 4, byteOffset, packI32, value, arguments[2]);
	    },
	    setFloat32: function setFloat32(byteOffset, value /*, littleEndian */){
	      set(this, 4, byteOffset, packF32, value, arguments[2]);
	    },
	    setFloat64: function setFloat64(byteOffset, value /*, littleEndian */){
	      set(this, 8, byteOffset, packF64, value, arguments[2]);
	    }
	  });
	} else {
	  if(!fails(function(){
	    new $ArrayBuffer;     // eslint-disable-line no-new
	  }) || !fails(function(){
	    new $ArrayBuffer(.5); // eslint-disable-line no-new
	  })){
	    $ArrayBuffer = function ArrayBuffer(length){
	      return new BaseBuffer(validateArrayBufferArguments(this, length));
	    };
	    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];
	    for(var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j; ){
	      if(!((key = keys[j++]) in $ArrayBuffer))hide($ArrayBuffer, key, BaseBuffer[key]);
	    };
	    if(!LIBRARY)ArrayBufferProto.constructor = $ArrayBuffer;
	  }
	  // iOS Safari 7.x bug
	  var view = new $DataView(new $ArrayBuffer(2))
	    , $setInt8 = $DataView[PROTOTYPE].setInt8;
	  view.setInt8(0, 2147483648);
	  view.setInt8(1, 2147483649);
	  if(view.getInt8(0) || !view.getInt8(1))redefineAll($DataView[PROTOTYPE], {
	    setInt8: function setInt8(byteOffset, value){
	      $setInt8.call(this, byteOffset, value << 24 >> 24);
	    },
	    setUint8: function setUint8(byteOffset, value){
	      $setInt8.call(this, byteOffset, value << 24 >> 24);
	    }
	  }, true);
	}
	setToStringTag($ArrayBuffer, ARRAY_BUFFER);
	setToStringTag($DataView, DATA_VIEW);
	hide($DataView[PROTOTYPE], $typed.VIEW, true);
	exports[ARRAY_BUFFER] = $ArrayBuffer;
	exports[DATA_VIEW] = $DataView;

/***/ },
/* 222 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(9);
	$export($export.G + $export.W + $export.F * !__webpack_require__(220).ABV, {
	  DataView: __webpack_require__(221).DataView
	});

/***/ },
/* 223 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(224)('Int8', 1, function(init){
	  return function Int8Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 224 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	if(__webpack_require__(7)){
	  var LIBRARY             = __webpack_require__(29)
	    , global              = __webpack_require__(5)
	    , fails               = __webpack_require__(8)
	    , $export             = __webpack_require__(9)
	    , $typed              = __webpack_require__(220)
	    , $buffer             = __webpack_require__(221)
	    , ctx                 = __webpack_require__(21)
	    , anInstance          = __webpack_require__(206)
	    , propertyDesc        = __webpack_require__(18)
	    , hide                = __webpack_require__(11)
	    , redefineAll         = __webpack_require__(211)
	    , toInteger           = __webpack_require__(39)
	    , toLength            = __webpack_require__(38)
	    , toIndex             = __webpack_require__(40)
	    , toPrimitive         = __webpack_require__(17)
	    , has                 = __webpack_require__(6)
	    , same                = __webpack_require__(72)
	    , classof             = __webpack_require__(76)
	    , isObject            = __webpack_require__(14)
	    , toObject            = __webpack_require__(59)
	    , isArrayIter         = __webpack_require__(163)
	    , create              = __webpack_require__(47)
	    , getPrototypeOf      = __webpack_require__(60)
	    , gOPN                = __webpack_require__(51).f
	    , getIterFn           = __webpack_require__(165)
	    , uid                 = __webpack_require__(20)
	    , wks                 = __webpack_require__(26)
	    , createArrayMethod   = __webpack_require__(173)
	    , createArrayIncludes = __webpack_require__(37)
	    , speciesConstructor  = __webpack_require__(208)
	    , ArrayIterators      = __webpack_require__(194)
	    , Iterators           = __webpack_require__(130)
	    , $iterDetect         = __webpack_require__(166)
	    , setSpecies          = __webpack_require__(193)
	    , arrayFill           = __webpack_require__(189)
	    , arrayCopyWithin     = __webpack_require__(186)
	    , $DP                 = __webpack_require__(12)
	    , $GOPD               = __webpack_require__(52)
	    , dP                  = $DP.f
	    , gOPD                = $GOPD.f
	    , RangeError          = global.RangeError
	    , TypeError           = global.TypeError
	    , Uint8Array          = global.Uint8Array
	    , ARRAY_BUFFER        = 'ArrayBuffer'
	    , SHARED_BUFFER       = 'Shared' + ARRAY_BUFFER
	    , BYTES_PER_ELEMENT   = 'BYTES_PER_ELEMENT'
	    , PROTOTYPE           = 'prototype'
	    , ArrayProto          = Array[PROTOTYPE]
	    , $ArrayBuffer        = $buffer.ArrayBuffer
	    , $DataView           = $buffer.DataView
	    , arrayForEach        = createArrayMethod(0)
	    , arrayFilter         = createArrayMethod(2)
	    , arraySome           = createArrayMethod(3)
	    , arrayEvery          = createArrayMethod(4)
	    , arrayFind           = createArrayMethod(5)
	    , arrayFindIndex      = createArrayMethod(6)
	    , arrayIncludes       = createArrayIncludes(true)
	    , arrayIndexOf        = createArrayIncludes(false)
	    , arrayValues         = ArrayIterators.values
	    , arrayKeys           = ArrayIterators.keys
	    , arrayEntries        = ArrayIterators.entries
	    , arrayLastIndexOf    = ArrayProto.lastIndexOf
	    , arrayReduce         = ArrayProto.reduce
	    , arrayReduceRight    = ArrayProto.reduceRight
	    , arrayJoin           = ArrayProto.join
	    , arraySort           = ArrayProto.sort
	    , arraySlice          = ArrayProto.slice
	    , arrayToString       = ArrayProto.toString
	    , arrayToLocaleString = ArrayProto.toLocaleString
	    , ITERATOR            = wks('iterator')
	    , TAG                 = wks('toStringTag')
	    , TYPED_CONSTRUCTOR   = uid('typed_constructor')
	    , DEF_CONSTRUCTOR     = uid('def_constructor')
	    , ALL_CONSTRUCTORS    = $typed.CONSTR
	    , TYPED_ARRAY         = $typed.TYPED
	    , VIEW                = $typed.VIEW
	    , WRONG_LENGTH        = 'Wrong length!';

	  var $map = createArrayMethod(1, function(O, length){
	    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);
	  });

	  var LITTLE_ENDIAN = fails(function(){
	    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;
	  });

	  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function(){
	    new Uint8Array(1).set({});
	  });

	  var strictToLength = function(it, SAME){
	    if(it === undefined)throw TypeError(WRONG_LENGTH);
	    var number = +it
	      , length = toLength(it);
	    if(SAME && !same(number, length))throw RangeError(WRONG_LENGTH);
	    return length;
	  };

	  var toOffset = function(it, BYTES){
	    var offset = toInteger(it);
	    if(offset < 0 || offset % BYTES)throw RangeError('Wrong offset!');
	    return offset;
	  };

	  var validate = function(it){
	    if(isObject(it) && TYPED_ARRAY in it)return it;
	    throw TypeError(it + ' is not a typed array!');
	  };

	  var allocate = function(C, length){
	    if(!(isObject(C) && TYPED_CONSTRUCTOR in C)){
	      throw TypeError('It is not a typed array constructor!');
	    } return new C(length);
	  };

	  var speciesFromList = function(O, list){
	    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);
	  };

	  var fromList = function(C, list){
	    var index  = 0
	      , length = list.length
	      , result = allocate(C, length);
	    while(length > index)result[index] = list[index++];
	    return result;
	  };

	  var addGetter = function(it, key, internal){
	    dP(it, key, {get: function(){ return this._d[internal]; }});
	  };

	  var $from = function from(source /*, mapfn, thisArg */){
	    var O       = toObject(source)
	      , aLen    = arguments.length
	      , mapfn   = aLen > 1 ? arguments[1] : undefined
	      , mapping = mapfn !== undefined
	      , iterFn  = getIterFn(O)
	      , i, length, values, result, step, iterator;
	    if(iterFn != undefined && !isArrayIter(iterFn)){
	      for(iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++){
	        values.push(step.value);
	      } O = values;
	    }
	    if(mapping && aLen > 2)mapfn = ctx(mapfn, arguments[2], 2);
	    for(i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++){
	      result[i] = mapping ? mapfn(O[i], i) : O[i];
	    }
	    return result;
	  };

	  var $of = function of(/*...items*/){
	    var index  = 0
	      , length = arguments.length
	      , result = allocate(this, length);
	    while(length > index)result[index] = arguments[index++];
	    return result;
	  };

	  // iOS Safari 6.x fails here
	  var TO_LOCALE_BUG = !!Uint8Array && fails(function(){ arrayToLocaleString.call(new Uint8Array(1)); });

	  var $toLocaleString = function toLocaleString(){
	    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);
	  };

	  var proto = {
	    copyWithin: function copyWithin(target, start /*, end */){
	      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);
	    },
	    every: function every(callbackfn /*, thisArg */){
	      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    fill: function fill(value /*, start, end */){ // eslint-disable-line no-unused-vars
	      return arrayFill.apply(validate(this), arguments);
	    },
	    filter: function filter(callbackfn /*, thisArg */){
	      return speciesFromList(this, arrayFilter(validate(this), callbackfn,
	        arguments.length > 1 ? arguments[1] : undefined));
	    },
	    find: function find(predicate /*, thisArg */){
	      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    findIndex: function findIndex(predicate /*, thisArg */){
	      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    forEach: function forEach(callbackfn /*, thisArg */){
	      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    indexOf: function indexOf(searchElement /*, fromIndex */){
	      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    includes: function includes(searchElement /*, fromIndex */){
	      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    join: function join(separator){ // eslint-disable-line no-unused-vars
	      return arrayJoin.apply(validate(this), arguments);
	    },
	    lastIndexOf: function lastIndexOf(searchElement /*, fromIndex */){ // eslint-disable-line no-unused-vars
	      return arrayLastIndexOf.apply(validate(this), arguments);
	    },
	    map: function map(mapfn /*, thisArg */){
	      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    reduce: function reduce(callbackfn /*, initialValue */){ // eslint-disable-line no-unused-vars
	      return arrayReduce.apply(validate(this), arguments);
	    },
	    reduceRight: function reduceRight(callbackfn /*, initialValue */){ // eslint-disable-line no-unused-vars
	      return arrayReduceRight.apply(validate(this), arguments);
	    },
	    reverse: function reverse(){
	      var that   = this
	        , length = validate(that).length
	        , middle = Math.floor(length / 2)
	        , index  = 0
	        , value;
	      while(index < middle){
	        value         = that[index];
	        that[index++] = that[--length];
	        that[length]  = value;
	      } return that;
	    },
	    some: function some(callbackfn /*, thisArg */){
	      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    sort: function sort(comparefn){
	      return arraySort.call(validate(this), comparefn);
	    },
	    subarray: function subarray(begin, end){
	      var O      = validate(this)
	        , length = O.length
	        , $begin = toIndex(begin, length);
	      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(
	        O.buffer,
	        O.byteOffset + $begin * O.BYTES_PER_ELEMENT,
	        toLength((end === undefined ? length : toIndex(end, length)) - $begin)
	      );
	    }
	  };

	  var $slice = function slice(start, end){
	    return speciesFromList(this, arraySlice.call(validate(this), start, end));
	  };

	  var $set = function set(arrayLike /*, offset */){
	    validate(this);
	    var offset = toOffset(arguments[1], 1)
	      , length = this.length
	      , src    = toObject(arrayLike)
	      , len    = toLength(src.length)
	      , index  = 0;
	    if(len + offset > length)throw RangeError(WRONG_LENGTH);
	    while(index < len)this[offset + index] = src[index++];
	  };

	  var $iterators = {
	    entries: function entries(){
	      return arrayEntries.call(validate(this));
	    },
	    keys: function keys(){
	      return arrayKeys.call(validate(this));
	    },
	    values: function values(){
	      return arrayValues.call(validate(this));
	    }
	  };

	  var isTAIndex = function(target, key){
	    return isObject(target)
	      && target[TYPED_ARRAY]
	      && typeof key != 'symbol'
	      && key in target
	      && String(+key) == String(key);
	  };
	  var $getDesc = function getOwnPropertyDescriptor(target, key){
	    return isTAIndex(target, key = toPrimitive(key, true))
	      ? propertyDesc(2, target[key])
	      : gOPD(target, key);
	  };
	  var $setDesc = function defineProperty(target, key, desc){
	    if(isTAIndex(target, key = toPrimitive(key, true))
	      && isObject(desc)
	      && has(desc, 'value')
	      && !has(desc, 'get')
	      && !has(desc, 'set')
	      // TODO: add validation descriptor w/o calling accessors
	      && !desc.configurable
	      && (!has(desc, 'writable') || desc.writable)
	      && (!has(desc, 'enumerable') || desc.enumerable)
	    ){
	      target[key] = desc.value;
	      return target;
	    } else return dP(target, key, desc);
	  };

	  if(!ALL_CONSTRUCTORS){
	    $GOPD.f = $getDesc;
	    $DP.f   = $setDesc;
	  }

	  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {
	    getOwnPropertyDescriptor: $getDesc,
	    defineProperty:           $setDesc
	  });

	  if(fails(function(){ arrayToString.call({}); })){
	    arrayToString = arrayToLocaleString = function toString(){
	      return arrayJoin.call(this);
	    }
	  }

	  var $TypedArrayPrototype$ = redefineAll({}, proto);
	  redefineAll($TypedArrayPrototype$, $iterators);
	  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);
	  redefineAll($TypedArrayPrototype$, {
	    slice:          $slice,
	    set:            $set,
	    constructor:    function(){ /* noop */ },
	    toString:       arrayToString,
	    toLocaleString: $toLocaleString
	  });
	  addGetter($TypedArrayPrototype$, 'buffer', 'b');
	  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');
	  addGetter($TypedArrayPrototype$, 'byteLength', 'l');
	  addGetter($TypedArrayPrototype$, 'length', 'e');
	  dP($TypedArrayPrototype$, TAG, {
	    get: function(){ return this[TYPED_ARRAY]; }
	  });

	  module.exports = function(KEY, BYTES, wrapper, CLAMPED){
	    CLAMPED = !!CLAMPED;
	    var NAME       = KEY + (CLAMPED ? 'Clamped' : '') + 'Array'
	      , ISNT_UINT8 = NAME != 'Uint8Array'
	      , GETTER     = 'get' + KEY
	      , SETTER     = 'set' + KEY
	      , TypedArray = global[NAME]
	      , Base       = TypedArray || {}
	      , TAC        = TypedArray && getPrototypeOf(TypedArray)
	      , FORCED     = !TypedArray || !$typed.ABV
	      , O          = {}
	      , TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];
	    var getter = function(that, index){
	      var data = that._d;
	      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);
	    };
	    var setter = function(that, index, value){
	      var data = that._d;
	      if(CLAMPED)value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;
	      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);
	    };
	    var addElement = function(that, index){
	      dP(that, index, {
	        get: function(){
	          return getter(this, index);
	        },
	        set: function(value){
	          return setter(this, index, value);
	        },
	        enumerable: true
	      });
	    };
	    if(FORCED){
	      TypedArray = wrapper(function(that, data, $offset, $length){
	        anInstance(that, TypedArray, NAME, '_d');
	        var index  = 0
	          , offset = 0
	          , buffer, byteLength, length, klass;
	        if(!isObject(data)){
	          length     = strictToLength(data, true)
	          byteLength = length * BYTES;
	          buffer     = new $ArrayBuffer(byteLength);
	        } else if(data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER){
	          buffer = data;
	          offset = toOffset($offset, BYTES);
	          var $len = data.byteLength;
	          if($length === undefined){
	            if($len % BYTES)throw RangeError(WRONG_LENGTH);
	            byteLength = $len - offset;
	            if(byteLength < 0)throw RangeError(WRONG_LENGTH);
	          } else {
	            byteLength = toLength($length) * BYTES;
	            if(byteLength + offset > $len)throw RangeError(WRONG_LENGTH);
	          }
	          length = byteLength / BYTES;
	        } else if(TYPED_ARRAY in data){
	          return fromList(TypedArray, data);
	        } else {
	          return $from.call(TypedArray, data);
	        }
	        hide(that, '_d', {
	          b: buffer,
	          o: offset,
	          l: byteLength,
	          e: length,
	          v: new $DataView(buffer)
	        });
	        while(index < length)addElement(that, index++);
	      });
	      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);
	      hide(TypedArrayPrototype, 'constructor', TypedArray);
	    } else if(!$iterDetect(function(iter){
	      // V8 works with iterators, but fails in many other cases
	      // https://code.google.com/p/v8/issues/detail?id=4552
	      new TypedArray(null); // eslint-disable-line no-new
	      new TypedArray(iter); // eslint-disable-line no-new
	    }, true)){
	      TypedArray = wrapper(function(that, data, $offset, $length){
	        anInstance(that, TypedArray, NAME);
	        var klass;
	        // `ws` module bug, temporarily remove validation length for Uint8Array
	        // https://github.com/websockets/ws/pull/645
	        if(!isObject(data))return new Base(strictToLength(data, ISNT_UINT8));
	        if(data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER){
	          return $length !== undefined
	            ? new Base(data, toOffset($offset, BYTES), $length)
	            : $offset !== undefined
	              ? new Base(data, toOffset($offset, BYTES))
	              : new Base(data);
	        }
	        if(TYPED_ARRAY in data)return fromList(TypedArray, data);
	        return $from.call(TypedArray, data);
	      });
	      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function(key){
	        if(!(key in TypedArray))hide(TypedArray, key, Base[key]);
	      });
	      TypedArray[PROTOTYPE] = TypedArrayPrototype;
	      if(!LIBRARY)TypedArrayPrototype.constructor = TypedArray;
	    }
	    var $nativeIterator   = TypedArrayPrototype[ITERATOR]
	      , CORRECT_ITER_NAME = !!$nativeIterator && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined)
	      , $iterator         = $iterators.values;
	    hide(TypedArray, TYPED_CONSTRUCTOR, true);
	    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);
	    hide(TypedArrayPrototype, VIEW, true);
	    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);

	    if(CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)){
	      dP(TypedArrayPrototype, TAG, {
	        get: function(){ return NAME; }
	      });
	    }

	    O[NAME] = TypedArray;

	    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);

	    $export($export.S, NAME, {
	      BYTES_PER_ELEMENT: BYTES,
	      from: $from,
	      of: $of
	    });

	    if(!(BYTES_PER_ELEMENT in TypedArrayPrototype))hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);

	    $export($export.P, NAME, proto);

	    setSpecies(NAME);

	    $export($export.P + $export.F * FORCED_SET, NAME, {set: $set});

	    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);

	    $export($export.P + $export.F * (TypedArrayPrototype.toString != arrayToString), NAME, {toString: arrayToString});

	    $export($export.P + $export.F * fails(function(){
	      new TypedArray(1).slice();
	    }), NAME, {slice: $slice});

	    $export($export.P + $export.F * (fails(function(){
	      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString()
	    }) || !fails(function(){
	      TypedArrayPrototype.toLocaleString.call([1, 2]);
	    })), NAME, {toLocaleString: $toLocaleString});

	    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;
	    if(!LIBRARY && !CORRECT_ITER_NAME)hide(TypedArrayPrototype, ITERATOR, $iterator);
	  };
	} else module.exports = function(){ /* empty */ };

/***/ },
/* 225 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(224)('Uint8', 1, function(init){
	  return function Uint8Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 226 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(224)('Uint8', 1, function(init){
	  return function Uint8ClampedArray(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	}, true);

/***/ },
/* 227 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(224)('Int16', 2, function(init){
	  return function Int16Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 228 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(224)('Uint16', 2, function(init){
	  return function Uint16Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 229 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(224)('Int32', 4, function(init){
	  return function Int32Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 230 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(224)('Uint32', 4, function(init){
	  return function Uint32Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 231 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(224)('Float32', 4, function(init){
	  return function Float32Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 232 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(224)('Float64', 8, function(init){
	  return function Float64Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 233 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.1 Reflect.apply(target, thisArgument, argumentsList)
	var $export   = __webpack_require__(9)
	  , aFunction = __webpack_require__(22)
	  , anObject  = __webpack_require__(13)
	  , rApply    = (__webpack_require__(5).Reflect || {}).apply
	  , fApply    = Function.apply;
	// MS Edge argumentsList argument is optional
	$export($export.S + $export.F * !__webpack_require__(8)(function(){
	  rApply(function(){});
	}), 'Reflect', {
	  apply: function apply(target, thisArgument, argumentsList){
	    var T = aFunction(target)
	      , L = anObject(argumentsList);
	    return rApply ? rApply(T, thisArgument, L) : fApply.call(T, thisArgument, L);
	  }
	});

/***/ },
/* 234 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])
	var $export    = __webpack_require__(9)
	  , create     = __webpack_require__(47)
	  , aFunction  = __webpack_require__(22)
	  , anObject   = __webpack_require__(13)
	  , isObject   = __webpack_require__(14)
	  , fails      = __webpack_require__(8)
	  , bind       = __webpack_require__(78)
	  , rConstruct = (__webpack_require__(5).Reflect || {}).construct;

	// MS Edge supports only 2 arguments and argumentsList argument is optional
	// FF Nightly sets third argument as `new.target`, but does not create `this` from it
	var NEW_TARGET_BUG = fails(function(){
	  function F(){}
	  return !(rConstruct(function(){}, [], F) instanceof F);
	});
	var ARGS_BUG = !fails(function(){
	  rConstruct(function(){});
	});

	$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {
	  construct: function construct(Target, args /*, newTarget*/){
	    aFunction(Target);
	    anObject(args);
	    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);
	    if(ARGS_BUG && !NEW_TARGET_BUG)return rConstruct(Target, args, newTarget);
	    if(Target == newTarget){
	      // w/o altered newTarget, optimization for 0-4 arguments
	      switch(args.length){
	        case 0: return new Target;
	        case 1: return new Target(args[0]);
	        case 2: return new Target(args[0], args[1]);
	        case 3: return new Target(args[0], args[1], args[2]);
	        case 4: return new Target(args[0], args[1], args[2], args[3]);
	      }
	      // w/o altered newTarget, lot of arguments case
	      var $args = [null];
	      $args.push.apply($args, args);
	      return new (bind.apply(Target, $args));
	    }
	    // with altered newTarget, not support built-in constructors
	    var proto    = newTarget.prototype
	      , instance = create(isObject(proto) ? proto : Object.prototype)
	      , result   = Function.apply.call(Target, instance, args);
	    return isObject(result) ? result : instance;
	  }
	});

/***/ },
/* 235 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.3 Reflect.defineProperty(target, propertyKey, attributes)
	var dP          = __webpack_require__(12)
	  , $export     = __webpack_require__(9)
	  , anObject    = __webpack_require__(13)
	  , toPrimitive = __webpack_require__(17);

	// MS Edge has broken Reflect.defineProperty - throwing instead of returning false
	$export($export.S + $export.F * __webpack_require__(8)(function(){
	  Reflect.defineProperty(dP.f({}, 1, {value: 1}), 1, {value: 2});
	}), 'Reflect', {
	  defineProperty: function defineProperty(target, propertyKey, attributes){
	    anObject(target);
	    propertyKey = toPrimitive(propertyKey, true);
	    anObject(attributes);
	    try {
	      dP.f(target, propertyKey, attributes);
	      return true;
	    } catch(e){
	      return false;
	    }
	  }
	});

/***/ },
/* 236 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.4 Reflect.deleteProperty(target, propertyKey)
	var $export  = __webpack_require__(9)
	  , gOPD     = __webpack_require__(52).f
	  , anObject = __webpack_require__(13);

	$export($export.S, 'Reflect', {
	  deleteProperty: function deleteProperty(target, propertyKey){
	    var desc = gOPD(anObject(target), propertyKey);
	    return desc && !desc.configurable ? false : delete target[propertyKey];
	  }
	});

/***/ },
/* 237 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 26.1.5 Reflect.enumerate(target)
	var $export  = __webpack_require__(9)
	  , anObject = __webpack_require__(13);
	var Enumerate = function(iterated){
	  this._t = anObject(iterated); // target
	  this._i = 0;                  // next index
	  var keys = this._k = []       // keys
	    , key;
	  for(key in iterated)keys.push(key);
	};
	__webpack_require__(131)(Enumerate, 'Object', function(){
	  var that = this
	    , keys = that._k
	    , key;
	  do {
	    if(that._i >= keys.length)return {value: undefined, done: true};
	  } while(!((key = keys[that._i++]) in that._t));
	  return {value: key, done: false};
	});

	$export($export.S, 'Reflect', {
	  enumerate: function enumerate(target){
	    return new Enumerate(target);
	  }
	});

/***/ },
/* 238 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.6 Reflect.get(target, propertyKey [, receiver])
	var gOPD           = __webpack_require__(52)
	  , getPrototypeOf = __webpack_require__(60)
	  , has            = __webpack_require__(6)
	  , $export        = __webpack_require__(9)
	  , isObject       = __webpack_require__(14)
	  , anObject       = __webpack_require__(13);

	function get(target, propertyKey/*, receiver*/){
	  var receiver = arguments.length < 3 ? target : arguments[2]
	    , desc, proto;
	  if(anObject(target) === receiver)return target[propertyKey];
	  if(desc = gOPD.f(target, propertyKey))return has(desc, 'value')
	    ? desc.value
	    : desc.get !== undefined
	      ? desc.get.call(receiver)
	      : undefined;
	  if(isObject(proto = getPrototypeOf(target)))return get(proto, propertyKey, receiver);
	}

	$export($export.S, 'Reflect', {get: get});

/***/ },
/* 239 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.7 Reflect.getOwnPropertyDescriptor(target, propertyKey)
	var gOPD     = __webpack_require__(52)
	  , $export  = __webpack_require__(9)
	  , anObject = __webpack_require__(13);

	$export($export.S, 'Reflect', {
	  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey){
	    return gOPD.f(anObject(target), propertyKey);
	  }
	});

/***/ },
/* 240 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.8 Reflect.getPrototypeOf(target)
	var $export  = __webpack_require__(9)
	  , getProto = __webpack_require__(60)
	  , anObject = __webpack_require__(13);

	$export($export.S, 'Reflect', {
	  getPrototypeOf: function getPrototypeOf(target){
	    return getProto(anObject(target));
	  }
	});

/***/ },
/* 241 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.9 Reflect.has(target, propertyKey)
	var $export = __webpack_require__(9);

	$export($export.S, 'Reflect', {
	  has: function has(target, propertyKey){
	    return propertyKey in target;
	  }
	});

/***/ },
/* 242 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.10 Reflect.isExtensible(target)
	var $export       = __webpack_require__(9)
	  , anObject      = __webpack_require__(13)
	  , $isExtensible = Object.isExtensible;

	$export($export.S, 'Reflect', {
	  isExtensible: function isExtensible(target){
	    anObject(target);
	    return $isExtensible ? $isExtensible(target) : true;
	  }
	});

/***/ },
/* 243 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.11 Reflect.ownKeys(target)
	var $export = __webpack_require__(9);

	$export($export.S, 'Reflect', {ownKeys: __webpack_require__(244)});

/***/ },
/* 244 */
/***/ function(module, exports, __webpack_require__) {

	// all object keys, includes non-enumerable and symbols
	var gOPN     = __webpack_require__(51)
	  , gOPS     = __webpack_require__(44)
	  , anObject = __webpack_require__(13)
	  , Reflect  = __webpack_require__(5).Reflect;
	module.exports = Reflect && Reflect.ownKeys || function ownKeys(it){
	  var keys       = gOPN.f(anObject(it))
	    , getSymbols = gOPS.f;
	  return getSymbols ? keys.concat(getSymbols(it)) : keys;
	};

/***/ },
/* 245 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.12 Reflect.preventExtensions(target)
	var $export            = __webpack_require__(9)
	  , anObject           = __webpack_require__(13)
	  , $preventExtensions = Object.preventExtensions;

	$export($export.S, 'Reflect', {
	  preventExtensions: function preventExtensions(target){
	    anObject(target);
	    try {
	      if($preventExtensions)$preventExtensions(target);
	      return true;
	    } catch(e){
	      return false;
	    }
	  }
	});

/***/ },
/* 246 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.13 Reflect.set(target, propertyKey, V [, receiver])
	var dP             = __webpack_require__(12)
	  , gOPD           = __webpack_require__(52)
	  , getPrototypeOf = __webpack_require__(60)
	  , has            = __webpack_require__(6)
	  , $export        = __webpack_require__(9)
	  , createDesc     = __webpack_require__(18)
	  , anObject       = __webpack_require__(13)
	  , isObject       = __webpack_require__(14);

	function set(target, propertyKey, V/*, receiver*/){
	  var receiver = arguments.length < 4 ? target : arguments[3]
	    , ownDesc  = gOPD.f(anObject(target), propertyKey)
	    , existingDescriptor, proto;
	  if(!ownDesc){
	    if(isObject(proto = getPrototypeOf(target))){
	      return set(proto, propertyKey, V, receiver);
	    }
	    ownDesc = createDesc(0);
	  }
	  if(has(ownDesc, 'value')){
	    if(ownDesc.writable === false || !isObject(receiver))return false;
	    existingDescriptor = gOPD.f(receiver, propertyKey) || createDesc(0);
	    existingDescriptor.value = V;
	    dP.f(receiver, propertyKey, existingDescriptor);
	    return true;
	  }
	  return ownDesc.set === undefined ? false : (ownDesc.set.call(receiver, V), true);
	}

	$export($export.S, 'Reflect', {set: set});

/***/ },
/* 247 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.14 Reflect.setPrototypeOf(target, proto)
	var $export  = __webpack_require__(9)
	  , setProto = __webpack_require__(74);

	if(setProto)$export($export.S, 'Reflect', {
	  setPrototypeOf: function setPrototypeOf(target, proto){
	    setProto.check(target, proto);
	    try {
	      setProto.set(target, proto);
	      return true;
	    } catch(e){
	      return false;
	    }
	  }
	});

/***/ },
/* 248 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/tc39/Array.prototype.includes
	var $export   = __webpack_require__(9)
	  , $includes = __webpack_require__(37)(true);

	$export($export.P, 'Array', {
	  includes: function includes(el /*, fromIndex = 0 */){
	    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});

	__webpack_require__(187)('includes');

/***/ },
/* 249 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/mathiasbynens/String.prototype.at
	var $export = __webpack_require__(9)
	  , $at     = __webpack_require__(128)(true);

	$export($export.P, 'String', {
	  at: function at(pos){
	    return $at(this, pos);
	  }
	});

/***/ },
/* 250 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/tc39/proposal-string-pad-start-end
	var $export = __webpack_require__(9)
	  , $pad    = __webpack_require__(251);

	$export($export.P, 'String', {
	  padStart: function padStart(maxLength /*, fillString = ' ' */){
	    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);
	  }
	});

/***/ },
/* 251 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/tc39/proposal-string-pad-start-end
	var toLength = __webpack_require__(38)
	  , repeat   = __webpack_require__(92)
	  , defined  = __webpack_require__(36);

	module.exports = function(that, maxLength, fillString, left){
	  var S            = String(defined(that))
	    , stringLength = S.length
	    , fillStr      = fillString === undefined ? ' ' : String(fillString)
	    , intMaxLength = toLength(maxLength);
	  if(intMaxLength <= stringLength || fillStr == '')return S;
	  var fillLen = intMaxLength - stringLength
	    , stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));
	  if(stringFiller.length > fillLen)stringFiller = stringFiller.slice(0, fillLen);
	  return left ? stringFiller + S : S + stringFiller;
	};


/***/ },
/* 252 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/tc39/proposal-string-pad-start-end
	var $export = __webpack_require__(9)
	  , $pad    = __webpack_require__(251);

	$export($export.P, 'String', {
	  padEnd: function padEnd(maxLength /*, fillString = ' ' */){
	    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);
	  }
	});

/***/ },
/* 253 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
	__webpack_require__(84)('trimLeft', function($trim){
	  return function trimLeft(){
	    return $trim(this, 1);
	  };
	}, 'trimStart');

/***/ },
/* 254 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
	__webpack_require__(84)('trimRight', function($trim){
	  return function trimRight(){
	    return $trim(this, 2);
	  };
	}, 'trimEnd');

/***/ },
/* 255 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://tc39.github.io/String.prototype.matchAll/
	var $export     = __webpack_require__(9)
	  , defined     = __webpack_require__(36)
	  , toLength    = __webpack_require__(38)
	  , isRegExp    = __webpack_require__(135)
	  , getFlags    = __webpack_require__(197)
	  , RegExpProto = RegExp.prototype;

	var $RegExpStringIterator = function(regexp, string){
	  this._r = regexp;
	  this._s = string;
	};

	__webpack_require__(131)($RegExpStringIterator, 'RegExp String', function next(){
	  var match = this._r.exec(this._s);
	  return {value: match, done: match === null};
	});

	$export($export.P, 'String', {
	  matchAll: function matchAll(regexp){
	    defined(this);
	    if(!isRegExp(regexp))throw TypeError(regexp + ' is not a regexp!');
	    var S     = String(this)
	      , flags = 'flags' in RegExpProto ? String(regexp.flags) : getFlags.call(regexp)
	      , rx    = new RegExp(regexp.source, ~flags.indexOf('g') ? flags : 'g' + flags);
	    rx.lastIndex = toLength(regexp.lastIndex);
	    return new $RegExpStringIterator(rx, S);
	  }
	});

/***/ },
/* 256 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(28)('asyncIterator');

/***/ },
/* 257 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(28)('observable');

/***/ },
/* 258 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/tc39/proposal-object-getownpropertydescriptors
	var $export        = __webpack_require__(9)
	  , ownKeys        = __webpack_require__(244)
	  , toIObject      = __webpack_require__(33)
	  , gOPD           = __webpack_require__(52)
	  , createProperty = __webpack_require__(164);

	$export($export.S, 'Object', {
	  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object){
	    var O       = toIObject(object)
	      , getDesc = gOPD.f
	      , keys    = ownKeys(O)
	      , result  = {}
	      , i       = 0
	      , key;
	    while(keys.length > i)createProperty(result, key = keys[i++], getDesc(O, key));
	    return result;
	  }
	});

/***/ },
/* 259 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/tc39/proposal-object-values-entries
	var $export = __webpack_require__(9)
	  , $values = __webpack_require__(260)(false);

	$export($export.S, 'Object', {
	  values: function values(it){
	    return $values(it);
	  }
	});

/***/ },
/* 260 */
/***/ function(module, exports, __webpack_require__) {

	var getKeys   = __webpack_require__(31)
	  , toIObject = __webpack_require__(33)
	  , isEnum    = __webpack_require__(45).f;
	module.exports = function(isEntries){
	  return function(it){
	    var O      = toIObject(it)
	      , keys   = getKeys(O)
	      , length = keys.length
	      , i      = 0
	      , result = []
	      , key;
	    while(length > i)if(isEnum.call(O, key = keys[i++])){
	      result.push(isEntries ? [key, O[key]] : O[key]);
	    } return result;
	  };
	};

/***/ },
/* 261 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/tc39/proposal-object-values-entries
	var $export  = __webpack_require__(9)
	  , $entries = __webpack_require__(260)(true);

	$export($export.S, 'Object', {
	  entries: function entries(it){
	    return $entries(it);
	  }
	});

/***/ },
/* 262 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export         = __webpack_require__(9)
	  , toObject        = __webpack_require__(59)
	  , aFunction       = __webpack_require__(22)
	  , $defineProperty = __webpack_require__(12);

	// B.2.2.2 Object.prototype.__defineGetter__(P, getter)
	__webpack_require__(7) && $export($export.P + __webpack_require__(263), 'Object', {
	  __defineGetter__: function __defineGetter__(P, getter){
	    $defineProperty.f(toObject(this), P, {get: aFunction(getter), enumerable: true, configurable: true});
	  }
	});

/***/ },
/* 263 */
/***/ function(module, exports, __webpack_require__) {

	// Forced replacement prototype accessors methods
	module.exports = __webpack_require__(29)|| !__webpack_require__(8)(function(){
	  var K = Math.random();
	  // In FF throws only define methods
	  __defineSetter__.call(null, K, function(){ /* empty */});
	  delete __webpack_require__(5)[K];
	});

/***/ },
/* 264 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export         = __webpack_require__(9)
	  , toObject        = __webpack_require__(59)
	  , aFunction       = __webpack_require__(22)
	  , $defineProperty = __webpack_require__(12);

	// B.2.2.3 Object.prototype.__defineSetter__(P, setter)
	__webpack_require__(7) && $export($export.P + __webpack_require__(263), 'Object', {
	  __defineSetter__: function __defineSetter__(P, setter){
	    $defineProperty.f(toObject(this), P, {set: aFunction(setter), enumerable: true, configurable: true});
	  }
	});

/***/ },
/* 265 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export                  = __webpack_require__(9)
	  , toObject                 = __webpack_require__(59)
	  , toPrimitive              = __webpack_require__(17)
	  , getPrototypeOf           = __webpack_require__(60)
	  , getOwnPropertyDescriptor = __webpack_require__(52).f;

	// B.2.2.4 Object.prototype.__lookupGetter__(P)
	__webpack_require__(7) && $export($export.P + __webpack_require__(263), 'Object', {
	  __lookupGetter__: function __lookupGetter__(P){
	    var O = toObject(this)
	      , K = toPrimitive(P, true)
	      , D;
	    do {
	      if(D = getOwnPropertyDescriptor(O, K))return D.get;
	    } while(O = getPrototypeOf(O));
	  }
	});

/***/ },
/* 266 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export                  = __webpack_require__(9)
	  , toObject                 = __webpack_require__(59)
	  , toPrimitive              = __webpack_require__(17)
	  , getPrototypeOf           = __webpack_require__(60)
	  , getOwnPropertyDescriptor = __webpack_require__(52).f;

	// B.2.2.5 Object.prototype.__lookupSetter__(P)
	__webpack_require__(7) && $export($export.P + __webpack_require__(263), 'Object', {
	  __lookupSetter__: function __lookupSetter__(P){
	    var O = toObject(this)
	      , K = toPrimitive(P, true)
	      , D;
	    do {
	      if(D = getOwnPropertyDescriptor(O, K))return D.set;
	    } while(O = getPrototypeOf(O));
	  }
	});

/***/ },
/* 267 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/DavidBruant/Map-Set.prototype.toJSON
	var $export  = __webpack_require__(9);

	$export($export.P + $export.R, 'Map', {toJSON: __webpack_require__(268)('Map')});

/***/ },
/* 268 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/DavidBruant/Map-Set.prototype.toJSON
	var classof = __webpack_require__(76)
	  , from    = __webpack_require__(269);
	module.exports = function(NAME){
	  return function toJSON(){
	    if(classof(this) != NAME)throw TypeError(NAME + "#toJSON isn't generic");
	    return from(this);
	  };
	};

/***/ },
/* 269 */
/***/ function(module, exports, __webpack_require__) {

	var forOf = __webpack_require__(207);

	module.exports = function(iter, ITERATOR){
	  var result = [];
	  forOf(iter, false, result.push, result, ITERATOR);
	  return result;
	};


/***/ },
/* 270 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/DavidBruant/Map-Set.prototype.toJSON
	var $export  = __webpack_require__(9);

	$export($export.P + $export.R, 'Set', {toJSON: __webpack_require__(268)('Set')});

/***/ },
/* 271 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/ljharb/proposal-global
	var $export = __webpack_require__(9);

	$export($export.S, 'System', {global: __webpack_require__(5)});

/***/ },
/* 272 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/ljharb/proposal-is-error
	var $export = __webpack_require__(9)
	  , cof     = __webpack_require__(35);

	$export($export.S, 'Error', {
	  isError: function isError(it){
	    return cof(it) === 'Error';
	  }
	});

/***/ },
/* 273 */
/***/ function(module, exports, __webpack_require__) {

	// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
	var $export = __webpack_require__(9);

	$export($export.S, 'Math', {
	  iaddh: function iaddh(x0, x1, y0, y1){
	    var $x0 = x0 >>> 0
	      , $x1 = x1 >>> 0
	      , $y0 = y0 >>> 0;
	    return $x1 + (y1 >>> 0) + (($x0 & $y0 | ($x0 | $y0) & ~($x0 + $y0 >>> 0)) >>> 31) | 0;
	  }
	});

/***/ },
/* 274 */
/***/ function(module, exports, __webpack_require__) {

	// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
	var $export = __webpack_require__(9);

	$export($export.S, 'Math', {
	  isubh: function isubh(x0, x1, y0, y1){
	    var $x0 = x0 >>> 0
	      , $x1 = x1 >>> 0
	      , $y0 = y0 >>> 0;
	    return $x1 - (y1 >>> 0) - ((~$x0 & $y0 | ~($x0 ^ $y0) & $x0 - $y0 >>> 0) >>> 31) | 0;
	  }
	});

/***/ },
/* 275 */
/***/ function(module, exports, __webpack_require__) {

	// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
	var $export = __webpack_require__(9);

	$export($export.S, 'Math', {
	  imulh: function imulh(u, v){
	    var UINT16 = 0xffff
	      , $u = +u
	      , $v = +v
	      , u0 = $u & UINT16
	      , v0 = $v & UINT16
	      , u1 = $u >> 16
	      , v1 = $v >> 16
	      , t  = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);
	    return u1 * v1 + (t >> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >> 16);
	  }
	});

/***/ },
/* 276 */
/***/ function(module, exports, __webpack_require__) {

	// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
	var $export = __webpack_require__(9);

	$export($export.S, 'Math', {
	  umulh: function umulh(u, v){
	    var UINT16 = 0xffff
	      , $u = +u
	      , $v = +v
	      , u0 = $u & UINT16
	      , v0 = $v & UINT16
	      , u1 = $u >>> 16
	      , v1 = $v >>> 16
	      , t  = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);
	    return u1 * v1 + (t >>> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >>> 16);
	  }
	});

/***/ },
/* 277 */
/***/ function(module, exports, __webpack_require__) {

	var metadata                  = __webpack_require__(278)
	  , anObject                  = __webpack_require__(13)
	  , toMetaKey                 = metadata.key
	  , ordinaryDefineOwnMetadata = metadata.set;

	metadata.exp({defineMetadata: function defineMetadata(metadataKey, metadataValue, target, targetKey){
	  ordinaryDefineOwnMetadata(metadataKey, metadataValue, anObject(target), toMetaKey(targetKey));
	}});

/***/ },
/* 278 */
/***/ function(module, exports, __webpack_require__) {

	var Map     = __webpack_require__(212)
	  , $export = __webpack_require__(9)
	  , shared  = __webpack_require__(24)('metadata')
	  , store   = shared.store || (shared.store = new (__webpack_require__(216)));

	var getOrCreateMetadataMap = function(target, targetKey, create){
	  var targetMetadata = store.get(target);
	  if(!targetMetadata){
	    if(!create)return undefined;
	    store.set(target, targetMetadata = new Map);
	  }
	  var keyMetadata = targetMetadata.get(targetKey);
	  if(!keyMetadata){
	    if(!create)return undefined;
	    targetMetadata.set(targetKey, keyMetadata = new Map);
	  } return keyMetadata;
	};
	var ordinaryHasOwnMetadata = function(MetadataKey, O, P){
	  var metadataMap = getOrCreateMetadataMap(O, P, false);
	  return metadataMap === undefined ? false : metadataMap.has(MetadataKey);
	};
	var ordinaryGetOwnMetadata = function(MetadataKey, O, P){
	  var metadataMap = getOrCreateMetadataMap(O, P, false);
	  return metadataMap === undefined ? undefined : metadataMap.get(MetadataKey);
	};
	var ordinaryDefineOwnMetadata = function(MetadataKey, MetadataValue, O, P){
	  getOrCreateMetadataMap(O, P, true).set(MetadataKey, MetadataValue);
	};
	var ordinaryOwnMetadataKeys = function(target, targetKey){
	  var metadataMap = getOrCreateMetadataMap(target, targetKey, false)
	    , keys        = [];
	  if(metadataMap)metadataMap.forEach(function(_, key){ keys.push(key); });
	  return keys;
	};
	var toMetaKey = function(it){
	  return it === undefined || typeof it == 'symbol' ? it : String(it);
	};
	var exp = function(O){
	  $export($export.S, 'Reflect', O);
	};

	module.exports = {
	  store: store,
	  map: getOrCreateMetadataMap,
	  has: ordinaryHasOwnMetadata,
	  get: ordinaryGetOwnMetadata,
	  set: ordinaryDefineOwnMetadata,
	  keys: ordinaryOwnMetadataKeys,
	  key: toMetaKey,
	  exp: exp
	};

/***/ },
/* 279 */
/***/ function(module, exports, __webpack_require__) {

	var metadata               = __webpack_require__(278)
	  , anObject               = __webpack_require__(13)
	  , toMetaKey              = metadata.key
	  , getOrCreateMetadataMap = metadata.map
	  , store                  = metadata.store;

	metadata.exp({deleteMetadata: function deleteMetadata(metadataKey, target /*, targetKey */){
	  var targetKey   = arguments.length < 3 ? undefined : toMetaKey(arguments[2])
	    , metadataMap = getOrCreateMetadataMap(anObject(target), targetKey, false);
	  if(metadataMap === undefined || !metadataMap['delete'](metadataKey))return false;
	  if(metadataMap.size)return true;
	  var targetMetadata = store.get(target);
	  targetMetadata['delete'](targetKey);
	  return !!targetMetadata.size || store['delete'](target);
	}});

/***/ },
/* 280 */
/***/ function(module, exports, __webpack_require__) {

	var metadata               = __webpack_require__(278)
	  , anObject               = __webpack_require__(13)
	  , getPrototypeOf         = __webpack_require__(60)
	  , ordinaryHasOwnMetadata = metadata.has
	  , ordinaryGetOwnMetadata = metadata.get
	  , toMetaKey              = metadata.key;

	var ordinaryGetMetadata = function(MetadataKey, O, P){
	  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
	  if(hasOwn)return ordinaryGetOwnMetadata(MetadataKey, O, P);
	  var parent = getPrototypeOf(O);
	  return parent !== null ? ordinaryGetMetadata(MetadataKey, parent, P) : undefined;
	};

	metadata.exp({getMetadata: function getMetadata(metadataKey, target /*, targetKey */){
	  return ordinaryGetMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
	}});

/***/ },
/* 281 */
/***/ function(module, exports, __webpack_require__) {

	var Set                     = __webpack_require__(215)
	  , from                    = __webpack_require__(269)
	  , metadata                = __webpack_require__(278)
	  , anObject                = __webpack_require__(13)
	  , getPrototypeOf          = __webpack_require__(60)
	  , ordinaryOwnMetadataKeys = metadata.keys
	  , toMetaKey               = metadata.key;

	var ordinaryMetadataKeys = function(O, P){
	  var oKeys  = ordinaryOwnMetadataKeys(O, P)
	    , parent = getPrototypeOf(O);
	  if(parent === null)return oKeys;
	  var pKeys  = ordinaryMetadataKeys(parent, P);
	  return pKeys.length ? oKeys.length ? from(new Set(oKeys.concat(pKeys))) : pKeys : oKeys;
	};

	metadata.exp({getMetadataKeys: function getMetadataKeys(target /*, targetKey */){
	  return ordinaryMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));
	}});

/***/ },
/* 282 */
/***/ function(module, exports, __webpack_require__) {

	var metadata               = __webpack_require__(278)
	  , anObject               = __webpack_require__(13)
	  , ordinaryGetOwnMetadata = metadata.get
	  , toMetaKey              = metadata.key;

	metadata.exp({getOwnMetadata: function getOwnMetadata(metadataKey, target /*, targetKey */){
	  return ordinaryGetOwnMetadata(metadataKey, anObject(target)
	    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
	}});

/***/ },
/* 283 */
/***/ function(module, exports, __webpack_require__) {

	var metadata                = __webpack_require__(278)
	  , anObject                = __webpack_require__(13)
	  , ordinaryOwnMetadataKeys = metadata.keys
	  , toMetaKey               = metadata.key;

	metadata.exp({getOwnMetadataKeys: function getOwnMetadataKeys(target /*, targetKey */){
	  return ordinaryOwnMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));
	}});

/***/ },
/* 284 */
/***/ function(module, exports, __webpack_require__) {

	var metadata               = __webpack_require__(278)
	  , anObject               = __webpack_require__(13)
	  , getPrototypeOf         = __webpack_require__(60)
	  , ordinaryHasOwnMetadata = metadata.has
	  , toMetaKey              = metadata.key;

	var ordinaryHasMetadata = function(MetadataKey, O, P){
	  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
	  if(hasOwn)return true;
	  var parent = getPrototypeOf(O);
	  return parent !== null ? ordinaryHasMetadata(MetadataKey, parent, P) : false;
	};

	metadata.exp({hasMetadata: function hasMetadata(metadataKey, target /*, targetKey */){
	  return ordinaryHasMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
	}});

/***/ },
/* 285 */
/***/ function(module, exports, __webpack_require__) {

	var metadata               = __webpack_require__(278)
	  , anObject               = __webpack_require__(13)
	  , ordinaryHasOwnMetadata = metadata.has
	  , toMetaKey              = metadata.key;

	metadata.exp({hasOwnMetadata: function hasOwnMetadata(metadataKey, target /*, targetKey */){
	  return ordinaryHasOwnMetadata(metadataKey, anObject(target)
	    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
	}});

/***/ },
/* 286 */
/***/ function(module, exports, __webpack_require__) {

	var metadata                  = __webpack_require__(278)
	  , anObject                  = __webpack_require__(13)
	  , aFunction                 = __webpack_require__(22)
	  , toMetaKey                 = metadata.key
	  , ordinaryDefineOwnMetadata = metadata.set;

	metadata.exp({metadata: function metadata(metadataKey, metadataValue){
	  return function decorator(target, targetKey){
	    ordinaryDefineOwnMetadata(
	      metadataKey, metadataValue,
	      (targetKey !== undefined ? anObject : aFunction)(target),
	      toMetaKey(targetKey)
	    );
	  };
	}});

/***/ },
/* 287 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/rwaldron/tc39-notes/blob/master/es6/2014-09/sept-25.md#510-globalasap-for-enqueuing-a-microtask
	var $export   = __webpack_require__(9)
	  , microtask = __webpack_require__(210)()
	  , process   = __webpack_require__(5).process
	  , isNode    = __webpack_require__(35)(process) == 'process';

	$export($export.G, {
	  asap: function asap(fn){
	    var domain = isNode && process.domain;
	    microtask(domain ? domain.bind(fn) : fn);
	  }
	});

/***/ },
/* 288 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/zenparsing/es-observable
	var $export     = __webpack_require__(9)
	  , global      = __webpack_require__(5)
	  , core        = __webpack_require__(10)
	  , microtask   = __webpack_require__(210)()
	  , OBSERVABLE  = __webpack_require__(26)('observable')
	  , aFunction   = __webpack_require__(22)
	  , anObject    = __webpack_require__(13)
	  , anInstance  = __webpack_require__(206)
	  , redefineAll = __webpack_require__(211)
	  , hide        = __webpack_require__(11)
	  , forOf       = __webpack_require__(207)
	  , RETURN      = forOf.RETURN;

	var getMethod = function(fn){
	  return fn == null ? undefined : aFunction(fn);
	};

	var cleanupSubscription = function(subscription){
	  var cleanup = subscription._c;
	  if(cleanup){
	    subscription._c = undefined;
	    cleanup();
	  }
	};

	var subscriptionClosed = function(subscription){
	  return subscription._o === undefined;
	};

	var closeSubscription = function(subscription){
	  if(!subscriptionClosed(subscription)){
	    subscription._o = undefined;
	    cleanupSubscription(subscription);
	  }
	};

	var Subscription = function(observer, subscriber){
	  anObject(observer);
	  this._c = undefined;
	  this._o = observer;
	  observer = new SubscriptionObserver(this);
	  try {
	    var cleanup      = subscriber(observer)
	      , subscription = cleanup;
	    if(cleanup != null){
	      if(typeof cleanup.unsubscribe === 'function')cleanup = function(){ subscription.unsubscribe(); };
	      else aFunction(cleanup);
	      this._c = cleanup;
	    }
	  } catch(e){
	    observer.error(e);
	    return;
	  } if(subscriptionClosed(this))cleanupSubscription(this);
	};

	Subscription.prototype = redefineAll({}, {
	  unsubscribe: function unsubscribe(){ closeSubscription(this); }
	});

	var SubscriptionObserver = function(subscription){
	  this._s = subscription;
	};

	SubscriptionObserver.prototype = redefineAll({}, {
	  next: function next(value){
	    var subscription = this._s;
	    if(!subscriptionClosed(subscription)){
	      var observer = subscription._o;
	      try {
	        var m = getMethod(observer.next);
	        if(m)return m.call(observer, value);
	      } catch(e){
	        try {
	          closeSubscription(subscription);
	        } finally {
	          throw e;
	        }
	      }
	    }
	  },
	  error: function error(value){
	    var subscription = this._s;
	    if(subscriptionClosed(subscription))throw value;
	    var observer = subscription._o;
	    subscription._o = undefined;
	    try {
	      var m = getMethod(observer.error);
	      if(!m)throw value;
	      value = m.call(observer, value);
	    } catch(e){
	      try {
	        cleanupSubscription(subscription);
	      } finally {
	        throw e;
	      }
	    } cleanupSubscription(subscription);
	    return value;
	  },
	  complete: function complete(value){
	    var subscription = this._s;
	    if(!subscriptionClosed(subscription)){
	      var observer = subscription._o;
	      subscription._o = undefined;
	      try {
	        var m = getMethod(observer.complete);
	        value = m ? m.call(observer, value) : undefined;
	      } catch(e){
	        try {
	          cleanupSubscription(subscription);
	        } finally {
	          throw e;
	        }
	      } cleanupSubscription(subscription);
	      return value;
	    }
	  }
	});

	var $Observable = function Observable(subscriber){
	  anInstance(this, $Observable, 'Observable', '_f')._f = aFunction(subscriber);
	};

	redefineAll($Observable.prototype, {
	  subscribe: function subscribe(observer){
	    return new Subscription(observer, this._f);
	  },
	  forEach: function forEach(fn){
	    var that = this;
	    return new (core.Promise || global.Promise)(function(resolve, reject){
	      aFunction(fn);
	      var subscription = that.subscribe({
	        next : function(value){
	          try {
	            return fn(value);
	          } catch(e){
	            reject(e);
	            subscription.unsubscribe();
	          }
	        },
	        error: reject,
	        complete: resolve
	      });
	    });
	  }
	});

	redefineAll($Observable, {
	  from: function from(x){
	    var C = typeof this === 'function' ? this : $Observable;
	    var method = getMethod(anObject(x)[OBSERVABLE]);
	    if(method){
	      var observable = anObject(method.call(x));
	      return observable.constructor === C ? observable : new C(function(observer){
	        return observable.subscribe(observer);
	      });
	    }
	    return new C(function(observer){
	      var done = false;
	      microtask(function(){
	        if(!done){
	          try {
	            if(forOf(x, false, function(it){
	              observer.next(it);
	              if(done)return RETURN;
	            }) === RETURN)return;
	          } catch(e){
	            if(done)throw e;
	            observer.error(e);
	            return;
	          } observer.complete();
	        }
	      });
	      return function(){ done = true; };
	    });
	  },
	  of: function of(){
	    for(var i = 0, l = arguments.length, items = Array(l); i < l;)items[i] = arguments[i++];
	    return new (typeof this === 'function' ? this : $Observable)(function(observer){
	      var done = false;
	      microtask(function(){
	        if(!done){
	          for(var i = 0; i < items.length; ++i){
	            observer.next(items[i]);
	            if(done)return;
	          } observer.complete();
	        }
	      });
	      return function(){ done = true; };
	    });
	  }
	});

	hide($Observable.prototype, OBSERVABLE, function(){ return this; });

	$export($export.G, {Observable: $Observable});

	__webpack_require__(193)('Observable');

/***/ },
/* 289 */
/***/ function(module, exports, __webpack_require__) {

	// ie9- setTimeout & setInterval additional parameters fix
	var global     = __webpack_require__(5)
	  , $export    = __webpack_require__(9)
	  , invoke     = __webpack_require__(79)
	  , partial    = __webpack_require__(290)
	  , navigator  = global.navigator
	  , MSIE       = !!navigator && /MSIE .\./.test(navigator.userAgent); // <- dirty ie9- check
	var wrap = function(set){
	  return MSIE ? function(fn, time /*, ...args */){
	    return set(invoke(
	      partial,
	      [].slice.call(arguments, 2),
	      typeof fn == 'function' ? fn : Function(fn)
	    ), time);
	  } : set;
	};
	$export($export.G + $export.B + $export.F * MSIE, {
	  setTimeout:  wrap(global.setTimeout),
	  setInterval: wrap(global.setInterval)
	});

/***/ },
/* 290 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var path      = __webpack_require__(291)
	  , invoke    = __webpack_require__(79)
	  , aFunction = __webpack_require__(22);
	module.exports = function(/* ...pargs */){
	  var fn     = aFunction(this)
	    , length = arguments.length
	    , pargs  = Array(length)
	    , i      = 0
	    , _      = path._
	    , holder = false;
	  while(length > i)if((pargs[i] = arguments[i++]) === _)holder = true;
	  return function(/* ...args */){
	    var that = this
	      , aLen = arguments.length
	      , j = 0, k = 0, args;
	    if(!holder && !aLen)return invoke(fn, pargs, that);
	    args = pargs.slice();
	    if(holder)for(;length > j; j++)if(args[j] === _)args[j] = arguments[k++];
	    while(aLen > k)args.push(arguments[k++]);
	    return invoke(fn, args, that);
	  };
	};

/***/ },
/* 291 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(5);

/***/ },
/* 292 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(9)
	  , $task   = __webpack_require__(209);
	$export($export.G + $export.B, {
	  setImmediate:   $task.set,
	  clearImmediate: $task.clear
	});

/***/ },
/* 293 */
/***/ function(module, exports, __webpack_require__) {

	var $iterators    = __webpack_require__(194)
	  , redefine      = __webpack_require__(19)
	  , global        = __webpack_require__(5)
	  , hide          = __webpack_require__(11)
	  , Iterators     = __webpack_require__(130)
	  , wks           = __webpack_require__(26)
	  , ITERATOR      = wks('iterator')
	  , TO_STRING_TAG = wks('toStringTag')
	  , ArrayValues   = Iterators.Array;

	for(var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++){
	  var NAME       = collections[i]
	    , Collection = global[NAME]
	    , proto      = Collection && Collection.prototype
	    , key;
	  if(proto){
	    if(!proto[ITERATOR])hide(proto, ITERATOR, ArrayValues);
	    if(!proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);
	    Iterators[NAME] = ArrayValues;
	    for(key in $iterators)if(!proto[key])redefine(proto, key, $iterators[key], true);
	  }
	}

/***/ },
/* 294 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, process) {/**
	 * Copyright (c) 2014, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * https://raw.github.com/facebook/regenerator/master/LICENSE file. An
	 * additional grant of patent rights can be found in the PATENTS file in
	 * the same directory.
	 */

	!(function(global) {
	  "use strict";

	  var Op = Object.prototype;
	  var hasOwn = Op.hasOwnProperty;
	  var undefined; // More compressible than void 0.
	  var $Symbol = typeof Symbol === "function" ? Symbol : {};
	  var iteratorSymbol = $Symbol.iterator || "@@iterator";
	  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

	  var inModule = typeof module === "object";
	  var runtime = global.regeneratorRuntime;
	  if (runtime) {
	    if (inModule) {
	      // If regeneratorRuntime is defined globally and we're in a module,
	      // make the exports object identical to regeneratorRuntime.
	      module.exports = runtime;
	    }
	    // Don't bother evaluating the rest of this file if the runtime was
	    // already defined globally.
	    return;
	  }

	  // Define the runtime globally (as expected by generated code) as either
	  // module.exports (if we're in a module) or a new, empty object.
	  runtime = global.regeneratorRuntime = inModule ? module.exports : {};

	  function wrap(innerFn, outerFn, self, tryLocsList) {
	    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
	    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
	    var generator = Object.create(protoGenerator.prototype);
	    var context = new Context(tryLocsList || []);

	    // The ._invoke method unifies the implementations of the .next,
	    // .throw, and .return methods.
	    generator._invoke = makeInvokeMethod(innerFn, self, context);

	    return generator;
	  }
	  runtime.wrap = wrap;

	  // Try/catch helper to minimize deoptimizations. Returns a completion
	  // record like context.tryEntries[i].completion. This interface could
	  // have been (and was previously) designed to take a closure to be
	  // invoked without arguments, but in all the cases we care about we
	  // already have an existing method we want to call, so there's no need
	  // to create a new function object. We can even get away with assuming
	  // the method takes exactly one argument, since that happens to be true
	  // in every case, so we don't have to touch the arguments object. The
	  // only additional allocation required is the completion record, which
	  // has a stable shape and so hopefully should be cheap to allocate.
	  function tryCatch(fn, obj, arg) {
	    try {
	      return { type: "normal", arg: fn.call(obj, arg) };
	    } catch (err) {
	      return { type: "throw", arg: err };
	    }
	  }

	  var GenStateSuspendedStart = "suspendedStart";
	  var GenStateSuspendedYield = "suspendedYield";
	  var GenStateExecuting = "executing";
	  var GenStateCompleted = "completed";

	  // Returning this object from the innerFn has the same effect as
	  // breaking out of the dispatch switch statement.
	  var ContinueSentinel = {};

	  // Dummy constructor functions that we use as the .constructor and
	  // .constructor.prototype properties for functions that return Generator
	  // objects. For full spec compliance, you may wish to configure your
	  // minifier not to mangle the names of these two functions.
	  function Generator() {}
	  function GeneratorFunction() {}
	  function GeneratorFunctionPrototype() {}

	  // This is a polyfill for %IteratorPrototype% for environments that
	  // don't natively support it.
	  var IteratorPrototype = {};
	  IteratorPrototype[iteratorSymbol] = function () {
	    return this;
	  };

	  var getProto = Object.getPrototypeOf;
	  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
	  if (NativeIteratorPrototype &&
	      NativeIteratorPrototype !== Op &&
	      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
	    // This environment has a native %IteratorPrototype%; use it instead
	    // of the polyfill.
	    IteratorPrototype = NativeIteratorPrototype;
	  }

	  var Gp = GeneratorFunctionPrototype.prototype =
	    Generator.prototype = Object.create(IteratorPrototype);
	  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
	  GeneratorFunctionPrototype.constructor = GeneratorFunction;
	  GeneratorFunctionPrototype[toStringTagSymbol] =
	    GeneratorFunction.displayName = "GeneratorFunction";

	  // Helper for defining the .next, .throw, and .return methods of the
	  // Iterator interface in terms of a single ._invoke method.
	  function defineIteratorMethods(prototype) {
	    ["next", "throw", "return"].forEach(function(method) {
	      prototype[method] = function(arg) {
	        return this._invoke(method, arg);
	      };
	    });
	  }

	  runtime.isGeneratorFunction = function(genFun) {
	    var ctor = typeof genFun === "function" && genFun.constructor;
	    return ctor
	      ? ctor === GeneratorFunction ||
	        // For the native GeneratorFunction constructor, the best we can
	        // do is to check its .name property.
	        (ctor.displayName || ctor.name) === "GeneratorFunction"
	      : false;
	  };

	  runtime.mark = function(genFun) {
	    if (Object.setPrototypeOf) {
	      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
	    } else {
	      genFun.__proto__ = GeneratorFunctionPrototype;
	      if (!(toStringTagSymbol in genFun)) {
	        genFun[toStringTagSymbol] = "GeneratorFunction";
	      }
	    }
	    genFun.prototype = Object.create(Gp);
	    return genFun;
	  };

	  // Within the body of any async function, `await x` is transformed to
	  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
	  // `hasOwn.call(value, "__await")` to determine if the yielded value is
	  // meant to be awaited.
	  runtime.awrap = function(arg) {
	    return { __await: arg };
	  };

	  function AsyncIterator(generator) {
	    function invoke(method, arg, resolve, reject) {
	      var record = tryCatch(generator[method], generator, arg);
	      if (record.type === "throw") {
	        reject(record.arg);
	      } else {
	        var result = record.arg;
	        var value = result.value;
	        if (value &&
	            typeof value === "object" &&
	            hasOwn.call(value, "__await")) {
	          return Promise.resolve(value.__await).then(function(value) {
	            invoke("next", value, resolve, reject);
	          }, function(err) {
	            invoke("throw", err, resolve, reject);
	          });
	        }

	        return Promise.resolve(value).then(function(unwrapped) {
	          // When a yielded Promise is resolved, its final value becomes
	          // the .value of the Promise<{value,done}> result for the
	          // current iteration. If the Promise is rejected, however, the
	          // result for this iteration will be rejected with the same
	          // reason. Note that rejections of yielded Promises are not
	          // thrown back into the generator function, as is the case
	          // when an awaited Promise is rejected. This difference in
	          // behavior between yield and await is important, because it
	          // allows the consumer to decide what to do with the yielded
	          // rejection (swallow it and continue, manually .throw it back
	          // into the generator, abandon iteration, whatever). With
	          // await, by contrast, there is no opportunity to examine the
	          // rejection reason outside the generator function, so the
	          // only option is to throw it from the await expression, and
	          // let the generator function handle the exception.
	          result.value = unwrapped;
	          resolve(result);
	        }, reject);
	      }
	    }

	    if (typeof process === "object" && process.domain) {
	      invoke = process.domain.bind(invoke);
	    }

	    var previousPromise;

	    function enqueue(method, arg) {
	      function callInvokeWithMethodAndArg() {
	        return new Promise(function(resolve, reject) {
	          invoke(method, arg, resolve, reject);
	        });
	      }

	      return previousPromise =
	        // If enqueue has been called before, then we want to wait until
	        // all previous Promises have been resolved before calling invoke,
	        // so that results are always delivered in the correct order. If
	        // enqueue has not been called before, then it is important to
	        // call invoke immediately, without waiting on a callback to fire,
	        // so that the async generator function has the opportunity to do
	        // any necessary setup in a predictable way. This predictability
	        // is why the Promise constructor synchronously invokes its
	        // executor callback, and why async functions synchronously
	        // execute code before the first await. Since we implement simple
	        // async functions in terms of async generators, it is especially
	        // important to get this right, even though it requires care.
	        previousPromise ? previousPromise.then(
	          callInvokeWithMethodAndArg,
	          // Avoid propagating failures to Promises returned by later
	          // invocations of the iterator.
	          callInvokeWithMethodAndArg
	        ) : callInvokeWithMethodAndArg();
	    }

	    // Define the unified helper method that is used to implement .next,
	    // .throw, and .return (see defineIteratorMethods).
	    this._invoke = enqueue;
	  }

	  defineIteratorMethods(AsyncIterator.prototype);
	  runtime.AsyncIterator = AsyncIterator;

	  // Note that simple async functions are implemented on top of
	  // AsyncIterator objects; they just return a Promise for the value of
	  // the final result produced by the iterator.
	  runtime.async = function(innerFn, outerFn, self, tryLocsList) {
	    var iter = new AsyncIterator(
	      wrap(innerFn, outerFn, self, tryLocsList)
	    );

	    return runtime.isGeneratorFunction(outerFn)
	      ? iter // If outerFn is a generator, return the full iterator.
	      : iter.next().then(function(result) {
	          return result.done ? result.value : iter.next();
	        });
	  };

	  function makeInvokeMethod(innerFn, self, context) {
	    var state = GenStateSuspendedStart;

	    return function invoke(method, arg) {
	      if (state === GenStateExecuting) {
	        throw new Error("Generator is already running");
	      }

	      if (state === GenStateCompleted) {
	        if (method === "throw") {
	          throw arg;
	        }

	        // Be forgiving, per 25.3.3.3.3 of the spec:
	        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
	        return doneResult();
	      }

	      while (true) {
	        var delegate = context.delegate;
	        if (delegate) {
	          if (method === "return" ||
	              (method === "throw" && delegate.iterator[method] === undefined)) {
	            // A return or throw (when the delegate iterator has no throw
	            // method) always terminates the yield* loop.
	            context.delegate = null;

	            // If the delegate iterator has a return method, give it a
	            // chance to clean up.
	            var returnMethod = delegate.iterator["return"];
	            if (returnMethod) {
	              var record = tryCatch(returnMethod, delegate.iterator, arg);
	              if (record.type === "throw") {
	                // If the return method threw an exception, let that
	                // exception prevail over the original return or throw.
	                method = "throw";
	                arg = record.arg;
	                continue;
	              }
	            }

	            if (method === "return") {
	              // Continue with the outer return, now that the delegate
	              // iterator has been terminated.
	              continue;
	            }
	          }

	          var record = tryCatch(
	            delegate.iterator[method],
	            delegate.iterator,
	            arg
	          );

	          if (record.type === "throw") {
	            context.delegate = null;

	            // Like returning generator.throw(uncaught), but without the
	            // overhead of an extra function call.
	            method = "throw";
	            arg = record.arg;
	            continue;
	          }

	          // Delegate generator ran and handled its own exceptions so
	          // regardless of what the method was, we continue as if it is
	          // "next" with an undefined arg.
	          method = "next";
	          arg = undefined;

	          var info = record.arg;
	          if (info.done) {
	            context[delegate.resultName] = info.value;
	            context.next = delegate.nextLoc;
	          } else {
	            state = GenStateSuspendedYield;
	            return info;
	          }

	          context.delegate = null;
	        }

	        if (method === "next") {
	          // Setting context._sent for legacy support of Babel's
	          // function.sent implementation.
	          context.sent = context._sent = arg;

	        } else if (method === "throw") {
	          if (state === GenStateSuspendedStart) {
	            state = GenStateCompleted;
	            throw arg;
	          }

	          if (context.dispatchException(arg)) {
	            // If the dispatched exception was caught by a catch block,
	            // then let that catch block handle the exception normally.
	            method = "next";
	            arg = undefined;
	          }

	        } else if (method === "return") {
	          context.abrupt("return", arg);
	        }

	        state = GenStateExecuting;

	        var record = tryCatch(innerFn, self, context);
	        if (record.type === "normal") {
	          // If an exception is thrown from innerFn, we leave state ===
	          // GenStateExecuting and loop back for another invocation.
	          state = context.done
	            ? GenStateCompleted
	            : GenStateSuspendedYield;

	          var info = {
	            value: record.arg,
	            done: context.done
	          };

	          if (record.arg === ContinueSentinel) {
	            if (context.delegate && method === "next") {
	              // Deliberately forget the last sent value so that we don't
	              // accidentally pass it on to the delegate.
	              arg = undefined;
	            }
	          } else {
	            return info;
	          }

	        } else if (record.type === "throw") {
	          state = GenStateCompleted;
	          // Dispatch the exception by looping back around to the
	          // context.dispatchException(arg) call above.
	          method = "throw";
	          arg = record.arg;
	        }
	      }
	    };
	  }

	  // Define Generator.prototype.{next,throw,return} in terms of the
	  // unified ._invoke helper method.
	  defineIteratorMethods(Gp);

	  Gp[toStringTagSymbol] = "Generator";

	  Gp.toString = function() {
	    return "[object Generator]";
	  };

	  function pushTryEntry(locs) {
	    var entry = { tryLoc: locs[0] };

	    if (1 in locs) {
	      entry.catchLoc = locs[1];
	    }

	    if (2 in locs) {
	      entry.finallyLoc = locs[2];
	      entry.afterLoc = locs[3];
	    }

	    this.tryEntries.push(entry);
	  }

	  function resetTryEntry(entry) {
	    var record = entry.completion || {};
	    record.type = "normal";
	    delete record.arg;
	    entry.completion = record;
	  }

	  function Context(tryLocsList) {
	    // The root entry object (effectively a try statement without a catch
	    // or a finally block) gives us a place to store values thrown from
	    // locations where there is no enclosing try statement.
	    this.tryEntries = [{ tryLoc: "root" }];
	    tryLocsList.forEach(pushTryEntry, this);
	    this.reset(true);
	  }

	  runtime.keys = function(object) {
	    var keys = [];
	    for (var key in object) {
	      keys.push(key);
	    }
	    keys.reverse();

	    // Rather than returning an object with a next method, we keep
	    // things simple and return the next function itself.
	    return function next() {
	      while (keys.length) {
	        var key = keys.pop();
	        if (key in object) {
	          next.value = key;
	          next.done = false;
	          return next;
	        }
	      }

	      // To avoid creating an additional object, we just hang the .value
	      // and .done properties off the next function object itself. This
	      // also ensures that the minifier will not anonymize the function.
	      next.done = true;
	      return next;
	    };
	  };

	  function values(iterable) {
	    if (iterable) {
	      var iteratorMethod = iterable[iteratorSymbol];
	      if (iteratorMethod) {
	        return iteratorMethod.call(iterable);
	      }

	      if (typeof iterable.next === "function") {
	        return iterable;
	      }

	      if (!isNaN(iterable.length)) {
	        var i = -1, next = function next() {
	          while (++i < iterable.length) {
	            if (hasOwn.call(iterable, i)) {
	              next.value = iterable[i];
	              next.done = false;
	              return next;
	            }
	          }

	          next.value = undefined;
	          next.done = true;

	          return next;
	        };

	        return next.next = next;
	      }
	    }

	    // Return an iterator with no values.
	    return { next: doneResult };
	  }
	  runtime.values = values;

	  function doneResult() {
	    return { value: undefined, done: true };
	  }

	  Context.prototype = {
	    constructor: Context,

	    reset: function(skipTempReset) {
	      this.prev = 0;
	      this.next = 0;
	      // Resetting context._sent for legacy support of Babel's
	      // function.sent implementation.
	      this.sent = this._sent = undefined;
	      this.done = false;
	      this.delegate = null;

	      this.tryEntries.forEach(resetTryEntry);

	      if (!skipTempReset) {
	        for (var name in this) {
	          // Not sure about the optimal order of these conditions:
	          if (name.charAt(0) === "t" &&
	              hasOwn.call(this, name) &&
	              !isNaN(+name.slice(1))) {
	            this[name] = undefined;
	          }
	        }
	      }
	    },

	    stop: function() {
	      this.done = true;

	      var rootEntry = this.tryEntries[0];
	      var rootRecord = rootEntry.completion;
	      if (rootRecord.type === "throw") {
	        throw rootRecord.arg;
	      }

	      return this.rval;
	    },

	    dispatchException: function(exception) {
	      if (this.done) {
	        throw exception;
	      }

	      var context = this;
	      function handle(loc, caught) {
	        record.type = "throw";
	        record.arg = exception;
	        context.next = loc;
	        return !!caught;
	      }

	      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	        var entry = this.tryEntries[i];
	        var record = entry.completion;

	        if (entry.tryLoc === "root") {
	          // Exception thrown outside of any try block that could handle
	          // it, so set the completion value of the entire function to
	          // throw the exception.
	          return handle("end");
	        }

	        if (entry.tryLoc <= this.prev) {
	          var hasCatch = hasOwn.call(entry, "catchLoc");
	          var hasFinally = hasOwn.call(entry, "finallyLoc");

	          if (hasCatch && hasFinally) {
	            if (this.prev < entry.catchLoc) {
	              return handle(entry.catchLoc, true);
	            } else if (this.prev < entry.finallyLoc) {
	              return handle(entry.finallyLoc);
	            }

	          } else if (hasCatch) {
	            if (this.prev < entry.catchLoc) {
	              return handle(entry.catchLoc, true);
	            }

	          } else if (hasFinally) {
	            if (this.prev < entry.finallyLoc) {
	              return handle(entry.finallyLoc);
	            }

	          } else {
	            throw new Error("try statement without catch or finally");
	          }
	        }
	      }
	    },

	    abrupt: function(type, arg) {
	      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	        var entry = this.tryEntries[i];
	        if (entry.tryLoc <= this.prev &&
	            hasOwn.call(entry, "finallyLoc") &&
	            this.prev < entry.finallyLoc) {
	          var finallyEntry = entry;
	          break;
	        }
	      }

	      if (finallyEntry &&
	          (type === "break" ||
	           type === "continue") &&
	          finallyEntry.tryLoc <= arg &&
	          arg <= finallyEntry.finallyLoc) {
	        // Ignore the finally entry if control is not jumping to a
	        // location outside the try/catch block.
	        finallyEntry = null;
	      }

	      var record = finallyEntry ? finallyEntry.completion : {};
	      record.type = type;
	      record.arg = arg;

	      if (finallyEntry) {
	        this.next = finallyEntry.finallyLoc;
	      } else {
	        this.complete(record);
	      }

	      return ContinueSentinel;
	    },

	    complete: function(record, afterLoc) {
	      if (record.type === "throw") {
	        throw record.arg;
	      }

	      if (record.type === "break" ||
	          record.type === "continue") {
	        this.next = record.arg;
	      } else if (record.type === "return") {
	        this.rval = record.arg;
	        this.next = "end";
	      } else if (record.type === "normal" && afterLoc) {
	        this.next = afterLoc;
	      }
	    },

	    finish: function(finallyLoc) {
	      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	        var entry = this.tryEntries[i];
	        if (entry.finallyLoc === finallyLoc) {
	          this.complete(entry.completion, entry.afterLoc);
	          resetTryEntry(entry);
	          return ContinueSentinel;
	        }
	      }
	    },

	    "catch": function(tryLoc) {
	      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	        var entry = this.tryEntries[i];
	        if (entry.tryLoc === tryLoc) {
	          var record = entry.completion;
	          if (record.type === "throw") {
	            var thrown = record.arg;
	            resetTryEntry(entry);
	          }
	          return thrown;
	        }
	      }

	      // The context.catch method must only be called with a location
	      // argument that corresponds to a known catch block.
	      throw new Error("illegal catch attempt");
	    },

	    delegateYield: function(iterable, resultName, nextLoc) {
	      this.delegate = {
	        iterator: values(iterable),
	        resultName: resultName,
	        nextLoc: nextLoc
	      };

	      return ContinueSentinel;
	    }
	  };
	})(
	  // Among the various tricks for obtaining a reference to the global
	  // object, this seems to be the most reliable technique that does not
	  // use indirect eval (which violates Content Security Policy).
	  typeof global === "object" ? global :
	  typeof window === "object" ? window :
	  typeof self === "object" ? self : this
	);

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(295)))

/***/ },
/* 295 */
/***/ function(module, exports) {

	// shim for using process in browser
	var process = module.exports = {};

	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.

	var cachedSetTimeout;
	var cachedClearTimeout;

	function defaultSetTimout() {
	    throw new Error('setTimeout has not been defined');
	}
	function defaultClearTimeout () {
	    throw new Error('clearTimeout has not been defined');
	}
	(function () {
	    try {
	        if (typeof setTimeout === 'function') {
	            cachedSetTimeout = setTimeout;
	        } else {
	            cachedSetTimeout = defaultSetTimout;
	        }
	    } catch (e) {
	        cachedSetTimeout = defaultSetTimout;
	    }
	    try {
	        if (typeof clearTimeout === 'function') {
	            cachedClearTimeout = clearTimeout;
	        } else {
	            cachedClearTimeout = defaultClearTimeout;
	        }
	    } catch (e) {
	        cachedClearTimeout = defaultClearTimeout;
	    }
	} ())
	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    // if setTimeout wasn't available but was latter defined
	    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
	        cachedSetTimeout = setTimeout;
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch(e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch(e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }


	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    // if clearTimeout wasn't available but was latter defined
	    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
	        cachedClearTimeout = clearTimeout;
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }



	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;

	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}

	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;

	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}

	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	};

	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};

	function noop() {}

	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;

	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};

	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ },
/* 296 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(297);
	module.exports = __webpack_require__(10).RegExp.escape;

/***/ },
/* 297 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/benjamingr/RexExp.escape
	var $export = __webpack_require__(9)
	  , $re     = __webpack_require__(298)(/[\\^$*+?.()|[\]{}]/g, '\\$&');

	$export($export.S, 'RegExp', {escape: function escape(it){ return $re(it); }});


/***/ },
/* 298 */
/***/ function(module, exports) {

	module.exports = function(regExp, replace){
	  var replacer = replace === Object(replace) ? function(part){
	    return replace[part];
	  } : replace;
	  return function(it){
	    return String(it).replace(regExp, replacer);
	  };
	};

/***/ },
/* 299 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var getSocketURL = __webpack_require__(300).getSocketURL;
	var getAppId = __webpack_require__(300).getAppId;
	var Login = __webpack_require__(302).Login;
	var objectNotEmpty = __webpack_require__(419).objectNotEmpty;
	var getLoginToken = __webpack_require__(420).getLoginToken;
	var displayAcctSettings = __webpack_require__(421).displayAcctSettings;
	var SessionDurationLimit = __webpack_require__(427).SessionDurationLimit;
	var checkClientsCountry = __webpack_require__(307).checkClientsCountry;
	var Cashier = __webpack_require__(428).Cashier;
	var CashierJP = __webpack_require__(434).CashierJP;
	var PaymentAgentWithdrawWS = __webpack_require__(435).PaymentAgentWithdrawWS;
	var create_language_drop_down = __webpack_require__(436).create_language_drop_down;
	var TNCApproval = __webpack_require__(437).TNCApproval;
	var ViewPopupWS = __webpack_require__(438).ViewPopupWS;
	var ViewBalanceUI = __webpack_require__(461).ViewBalanceUI;
	var Cookies = __webpack_require__(301);
	var State = __webpack_require__(304).State;
	var Highchart = __webpack_require__(449).Highchart;
	var WSTickDisplay = __webpack_require__(453).WSTickDisplay;
	var TradePage = __webpack_require__(465).TradePage;
	var Notifications = __webpack_require__(458).Notifications;
	var TradePage_Beta = __webpack_require__(512).TradePage_Beta;
	var reloadPage = __webpack_require__(456).reloadPage;
	var MBTradePage = __webpack_require__(531).MBTradePage;
	var RealityCheck = __webpack_require__(490).RealityCheck;
	var RealityCheckData = __webpack_require__(492).RealityCheckData;
	var localize = __webpack_require__(423).localize;
	var getLanguage = __webpack_require__(303).getLanguage;
	var validate_loginid = __webpack_require__(305).validate_loginid;
	var GTM = __webpack_require__(430).GTM;
	var Clock = __webpack_require__(439).Clock;
	var Header = __webpack_require__(429).Header;
	var LocalStore = __webpack_require__(304).LocalStore;
	var Client = __webpack_require__(305).Client;
	var page = __webpack_require__(486).page;
	var check_risk_classification = __webpack_require__(431).check_risk_classification;
	var qualify_for_risk_classification = __webpack_require__(431).qualify_for_risk_classification;

	/*
	 * It provides a abstraction layer over native javascript Websocket.
	 *
	 * Provide additional functionality like if connection is close, open
	 * it again and process the buffered requests
	 *
	 *
	 * Usage:
	 *
	 * `BinarySocket.init()` to initiate the connection
	 * `BinarySocket.send({contracts_for : 1})` to send message to server
	 */
	var BinarySocketClass = function BinarySocketClass() {
	    'use strict';

	    var binarySocket = void 0,
	        bufferedSends = [],
	        manualClosed = false,
	        events = {},
	        authorized = false,
	        req_number = 0,
	        wrongAppId = 0;

	    var timeouts = {},
	        socketUrl = getSocketURL() + '?app_id=' + getAppId() + '&l=' + getLanguage();

	    var clearTimeouts = function clearTimeouts() {
	        Object.keys(timeouts).forEach(function (key) {
	            clearTimeout(timeouts[key]);
	            delete timeouts[key];
	        });
	    };

	    var isReady = function isReady() {
	        return binarySocket && binarySocket.readyState === 1;
	    };

	    var isClose = function isClose() {
	        return !binarySocket || binarySocket.readyState === 2 || binarySocket.readyState === 3;
	    };

	    var sendBufferedSends = function sendBufferedSends() {
	        while (bufferedSends.length > 0) {
	            binarySocket.send(JSON.stringify(bufferedSends.shift()));
	        }
	    };

	    var send = function send(data) {
	        if (isClose()) {
	            bufferedSends.push(data);
	            init(1);
	        } else if (isReady()) {
	            if (!data.hasOwnProperty('passthrough') && !data.hasOwnProperty('verify_email')) {
	                data.passthrough = {};
	            }
	            // temporary check
	            if ((data.contracts_for || data.proposal) && !data.passthrough.hasOwnProperty('dispatch_to') && !State.get('is_mb_trading')) {
	                data.passthrough.req_number = ++req_number;
	                timeouts[req_number] = setTimeout(function () {
	                    if (typeof reloadPage === 'function' && data.contracts_for) {
	                        window.alert("The server didn't respond to the request:\n\n" + JSON.stringify(data) + '\n\n');
	                        reloadPage();
	                    } else {
	                        $('.price_container').hide();
	                    }
	                }, 60 * 1000);
	            } else if (data.contracts_for && !data.passthrough.hasOwnProperty('dispatch_to') && State.get('is_mb_trading')) {
	                data.passthrough.req_number = ++req_number;
	                timeouts[req_number] = setTimeout(function () {
	                    MBTradePage.onDisconnect();
	                }, 10 * 1000);
	            }

	            binarySocket.send(JSON.stringify(data));
	        } else {
	            bufferedSends.push(data);
	        }
	    };

	    var init = function init(es) {
	        if (wrongAppId === getAppId()) {
	            return;
	        }
	        if (!es) {
	            events = {};
	        }
	        if ((typeof es === 'undefined' ? 'undefined' : _typeof(es)) === 'object') {
	            bufferedSends = [];
	            manualClosed = false;
	            events = es;
	            clearTimeouts();
	        }

	        if (isClose()) {
	            binarySocket = new WebSocket(socketUrl);
	        }

	        binarySocket.onopen = function () {
	            var apiToken = getLoginToken();
	            if (apiToken && !authorized && localStorage.getItem('client.tokens')) {
	                binarySocket.send(JSON.stringify({ authorize: apiToken }));
	            } else {
	                sendBufferedSends();
	            }

	            if (typeof events.onopen === 'function') {
	                events.onopen();
	            }

	            if (isReady()) {
	                if (!Login.is_login_pages()) {
	                    validate_loginid();
	                    binarySocket.send(JSON.stringify({ website_status: 1 }));
	                }
	                if (!Clock.getClockStarted()) Clock.start_clock_ws();
	            }
	        };

	        binarySocket.onmessage = function (msg) {
	            var response = JSON.parse(msg.data);
	            if (response) {
	                if (response.hasOwnProperty('echo_req') && response.echo_req !== null && response.echo_req.hasOwnProperty('passthrough')) {
	                    var passthrough = response.echo_req.passthrough;
	                    if (passthrough.hasOwnProperty('req_number')) {
	                        clearInterval(timeouts[response.echo_req.passthrough.req_number]);
	                        delete timeouts[response.echo_req.passthrough.req_number];
	                    } else if (passthrough.hasOwnProperty('dispatch_to')) {
	                        switch (passthrough.dispatch_to) {
	                            case 'ViewPopupWS':
	                                ViewPopupWS.dispatch(response);break;
	                            case 'ViewChartWS':
	                                Highchart.dispatch(response);break;
	                            case 'ViewTickDisplayWS':
	                                WSTickDisplay.dispatch(response);break;
	                            // no default
	                        }
	                    }
	                }
	                var type = response.msg_type;
	                if (type === 'authorize') {
	                    if (response.hasOwnProperty('error')) {
	                        var isActiveTab = sessionStorage.getItem('active_tab') === '1';
	                        if (response.error.code === 'SelfExclusion' && isActiveTab) {
	                            sessionStorage.removeItem('active_tab');
	                            window.alert(response.error.message);
	                        }
	                        LocalStore.set('reality_check.ack', 0);
	                        Client.send_logout_request(isActiveTab);
	                    } else if (response.authorize.loginid !== Client.get_value('loginid')) {
	                        Client.send_logout_request(true);
	                    } else if (!(response.hasOwnProperty('echo_req') && response.echo_req.hasOwnProperty('passthrough') && response.echo_req.passthrough.hasOwnProperty('dispatch_to') && response.echo_req.passthrough.dispatch_to === 'cashier_password')) {
	                        authorized = true;
	                        if (typeof events.onauth === 'function') {
	                            events.onauth();
	                        }
	                        if (!Login.is_login_pages()) {
	                            Client.response_authorize(response);
	                            send({ balance: 1, subscribe: 1 });
	                            send({ get_settings: 1 });
	                            send({ get_account_status: 1 });
	                            if (Cookies.get('residence')) send({ landing_company: Cookies.get('residence') });
	                            if (!Client.get_boolean('is_virtual')) send({ get_self_exclusion: 1 });
	                            if (/tnc_approvalws/.test(window.location.pathname)) {
	                                TNCApproval.showTNC();
	                            }
	                        }
	                        sendBufferedSends();
	                    }
	                } else if (type === 'balance') {
	                    ViewBalanceUI.updateBalances(response);
	                } else if (type === 'time') {
	                    Clock.time_counter(response);
	                } else if (type === 'logout') {
	                    RealityCheckData.clear();
	                    Client.do_logout(response);
	                } else if (type === 'landing_company') {
	                    var _ret = function () {
	                        var landing_company = response.landing_company;
	                        Client.landing_company(landing_company);
	                        Header.topbar_message_visibility(landing_company);
	                        var company = void 0;
	                        if (response.hasOwnProperty('error')) return {
	                                v: void 0
	                            };
	                        Object.keys(landing_company).forEach(function (key) {
	                            if (Client.get_value('landing_company_name') === landing_company[key].shortcode) {
	                                company = landing_company[key];
	                            }
	                        });
	                        if (company) {
	                            var has_reality_check = company.has_reality_check;
	                            if (has_reality_check) {
	                                Client.set_value('has_reality_check', has_reality_check);
	                                RealityCheck.init();
	                            }
	                        }
	                    }();

	                    if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
	                } else if (type === 'get_self_exclusion') {
	                    SessionDurationLimit.exclusionResponseHandler(response);
	                } else if (type === 'payout_currencies') {
	                    Client.set_value('currencies', response.payout_currencies.join(','));
	                } else if (type === 'get_settings' && response.get_settings) {
	                    var country_code = response.get_settings.country_code;
	                    if (country_code) {
	                        Client.set_value('residence', country_code);
	                        if (!Cookies.get('residence')) {
	                            Client.set_cookie('residence', country_code);
	                            send({ landing_company: country_code });
	                        }
	                    } else if (country_code === null && response.get_settings.country === null) {
	                        Header.topbar_message_visibility('show_residence');
	                    }
	                    if (/realws|maltainvestws|japanws/.test(window.location.href)) {
	                        displayAcctSettings(response);
	                    }
	                    GTM.event_handler(response.get_settings);
	                    Client.set_value('tnc_status', response.get_settings.client_tnc_status || '-');
	                    if (!localStorage.getItem('risk_classification')) Client.check_tnc();
	                    var jpStatus = response.get_settings.jp_account_status;
	                    if (jpStatus) {
	                        Client.set_value('jp_status', jpStatus.status);
	                    }
	                    if (response.get_settings.is_authenticated_payment_agent) {
	                        $('#topMenuPaymentAgent').removeClass('invisible');
	                    }
	                    Client.set_value('first_name', response.get_settings.first_name);
	                    CashierJP.set_name_id();
	                    CashierJP.set_email_id();
	                } else if (type === 'website_status') {
	                    if (!response.hasOwnProperty('error')) {
	                        create_language_drop_down(response.website_status.supported_languages);
	                        LocalStore.set('website.tnc_version', response.website_status.terms_conditions_version);
	                        if (!localStorage.getItem('risk_classification')) Client.check_tnc();
	                        if (response.website_status.hasOwnProperty('clients_country')) {
	                            localStorage.setItem('clients_country', response.website_status.clients_country);
	                            if (!$('body').hasClass('BlueTopBack') && !Login.is_login_pages()) {
	                                checkClientsCountry();
	                            }
	                        }
	                    }
	                } else if (type === 'reality_check') {
	                    RealityCheck.realityCheckWSHandler(response);
	                } else if (type === 'get_account_status' && response.get_account_status) {
	                    if (response.get_account_status.risk_classification === 'high' && qualify_for_risk_classification()) {
	                        send({ get_financial_assessment: 1 });
	                    } else {
	                        localStorage.removeItem('risk_classification');
	                        Client.check_tnc();
	                    }
	                    localStorage.setItem('risk_classification.response', response.get_account_status.risk_classification);

	                    sessionStorage.setItem('client_status', response.get_account_status.status);
	                    page.show_authenticate_message();

	                    if (response.echo_req.hasOwnProperty('passthrough') && response.echo_req.passthrough.hasOwnProperty('dispatch_to')) {
	                        if (response.echo_req.passthrough.dispatch_to === 'ForwardWS') {
	                            BinarySocket.send({ cashier_password: '1' });
	                        } else if (response.echo_req.passthrough.dispatch_to === 'Cashier') {
	                            Cashier.check_locked();
	                        } else if (response.echo_req.passthrough.dispatch_to === 'PaymentAgentWithdrawWS') {
	                            PaymentAgentWithdrawWS.lock_withdrawal(Client.status_detected('withdrawal_locked, cashier_locked', 'any') ? 'locked' : 'unlocked');
	                        }
	                    }
	                } else if (type === 'get_financial_assessment' && !response.hasOwnProperty('error')) {
	                    if (!objectNotEmpty(response.get_financial_assessment)) {
	                        if (qualify_for_risk_classification() && localStorage.getItem('risk_classification.response') === 'high') {
	                            localStorage.setItem('risk_classification', 'high');
	                            check_risk_classification();
	                        }
	                    } else if ((localStorage.getItem('reality_check.ack') === '1' || !localStorage.getItem('reality_check.interval')) && localStorage.getItem('risk_classification') !== 'high') {
	                        localStorage.removeItem('risk_classification');
	                        localStorage.removeItem('risk_classification.response');
	                        Client.check_tnc();
	                    }
	                }
	                if (response.hasOwnProperty('error')) {
	                    if (response.error && response.error.code) {
	                        if (response.error.code && (response.error.code === 'WrongResponse' || response.error.code === 'OutputValidationFailed')) {
	                            $('#content').empty().html('<div class="container"><p class="notice-msg center-text">' + (response.error.code === 'WrongResponse' && response.error.message ? response.error.message : localize('Sorry, an error occurred while processing your request.')) + '</p></div>');
	                        } else if (response.error.code === 'RateLimit' && !/jp_trading/i.test(window.location.pathname)) {
	                            $('#ratelimit-error-message').css('display', 'block').on('click', '#ratelimit-refresh-link', function () {
	                                window.location.reload();
	                            });
	                        } else if (response.error.code === 'InvalidToken' && type !== 'reset_password' && type !== 'new_account_virtual' && type !== 'paymentagent_withdraw' && type !== 'cashier') {
	                            Client.send_logout_request();
	                        } else if (response.error.code === 'InvalidAppID') {
	                            wrongAppId = getAppId();
	                            window.alert(response.error.message);
	                        }
	                    }
	                }
	                if (typeof events.onmessage === 'function') {
	                    events.onmessage(msg);
	                }
	            }
	        };

	        binarySocket.onclose = function () {
	            authorized = false;
	            clearTimeouts();

	            if (!manualClosed && wrongAppId !== getAppId()) {
	                (function () {
	                    var toCall = State.get('is_trading') ? TradePage.onDisconnect : State.get('is_beta_trading') ? TradePage_Beta.onDisconnect : State.get('is_mb_trading') ? MBTradePage.onDisconnect : '';
	                    if (toCall) {
	                        Notifications.show({ text: localize('Connection error: Please check your internet connection.'), uid: 'CONNECTION_ERROR', dismissible: true });
	                        timeouts.error = setTimeout(function () {
	                            toCall();
	                        }, 10 * 1000);
	                    } else {
	                        init(1);
	                    }
	                })();
	            }
	            if (typeof events.onclose === 'function') {
	                events.onclose();
	            }
	        };

	        binarySocket.onerror = function (error) {
	            console.log('socket error', error);
	        };
	    };

	    var close = function close() {
	        manualClosed = true;
	        bufferedSends = [];
	        events = {};
	        if (binarySocket) {
	            binarySocket.close();
	        }
	    };

	    var clear = function clear() {
	        bufferedSends = [];
	        manualClosed = false;
	        events = {};
	    };

	    return {
	        init: init,
	        send: send,
	        close: close,
	        socket: function socket() {
	            return binarySocket;
	        },
	        clear: clear,
	        clearTimeouts: clearTimeouts
	    };
	};

	var BinarySocket = new BinarySocketClass();

	module.exports = {
	    BinarySocket: BinarySocket
	};

/***/ },
/* 300 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Cookies = __webpack_require__(301);

	/*
	 * Configuration values needed in js codes
	 *
	 * NOTE:
	 * Please use the following command to avoid accidentally committing personal changes
	 * git update-index --assume-unchanged src/javascript/config.js
	 *
	 */

	function getAppId() {
	    return localStorage.getItem('config.app_id') ? localStorage.getItem('config.app_id') : /staging\.binary\.com/i.test(window.location.hostname) ? '1098' : '1';
	}

	function getSocketURL() {
	    var server_url = localStorage.getItem('config.server_url');
	    if (!server_url) {
	        (function () {
	            var loginid = Cookies.get('loginid'),
	                isReal = loginid && !/^VRT/.test(loginid),
	                toGreenPercent = { real: 100, virtual: 0, logged_out: 0 },
	                // default percentage
	            categoryMap = ['real', 'virtual', 'logged_out'],
	                randomPercent = Math.random() * 100,
	                percentValues = Cookies.get('connection_setup'); // set by GTM

	            // override defaults by cookie values
	            if (percentValues && percentValues.indexOf(',') > 0) {
	                (function () {
	                    var cookiePercents = percentValues.split(',');
	                    categoryMap.map(function (cat, idx) {
	                        if (cookiePercents[idx] && !isNaN(cookiePercents[idx])) {
	                            toGreenPercent[cat] = +cookiePercents[idx].trim();
	                        }
	                    });
	                })();
	            }

	            server_url = (/staging\.binary\.com/i.test(window.location.hostname) ? 'www2' : isReal ? randomPercent < toGreenPercent.real ? 'green' : 'blue' : loginid ? randomPercent < toGreenPercent.virtual ? 'green' : 'blue' : randomPercent < toGreenPercent.logged_out ? 'green' : 'blue') + '.binaryws.com';
	        })();
	    }
	    return 'wss://' + server_url + '/websockets/v3';
	}

	module.exports = {
	    getAppId: getAppId,
	    getSocketURL: getSocketURL
	};

/***/ },
/* 301 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	/*!
	 * JavaScript Cookie v2.1.2
	 * https://github.com/js-cookie/js-cookie
	 *
	 * Copyright 2006, 2015 Klaus Hartl & Fagner Brack
	 * Released under the MIT license
	 */
	;(function (factory) {
		if (true) {
			!(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else if ((typeof exports === 'undefined' ? 'undefined' : _typeof(exports)) === 'object') {
			module.exports = factory();
		} else {
			var OldCookies = window.Cookies;
			var api = window.Cookies = factory();
			api.noConflict = function () {
				window.Cookies = OldCookies;
				return api;
			};
		}
	})(function () {
		function extend() {
			var i = 0;
			var result = {};
			for (; i < arguments.length; i++) {
				var attributes = arguments[i];
				for (var key in attributes) {
					result[key] = attributes[key];
				}
			}
			return result;
		}

		function init(converter) {
			function api(key, value, attributes) {
				var result;
				if (typeof document === 'undefined') {
					return;
				}

				// Write

				if (arguments.length > 1) {
					attributes = extend({
						path: '/'
					}, api.defaults, attributes);

					if (typeof attributes.expires === 'number') {
						var expires = new Date();
						expires.setMilliseconds(expires.getMilliseconds() + attributes.expires * 864e+5);
						attributes.expires = expires;
					}

					try {
						result = JSON.stringify(value);
						if (/^[\{\[]/.test(result)) {
							value = result;
						}
					} catch (e) {}

					if (!converter.write) {
						value = encodeURIComponent(String(value)).replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);
					} else {
						value = converter.write(value, key);
					}

					key = encodeURIComponent(String(key));
					key = key.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent);
					key = key.replace(/[\(\)]/g, escape);

					return document.cookie = [key, '=', value, attributes.expires && '; expires=' + attributes.expires.toUTCString(), // use expires attribute, max-age is not supported by IE
					attributes.path && '; path=' + attributes.path, attributes.domain && '; domain=' + attributes.domain, attributes.secure ? '; secure' : ''].join('');
				}

				// Read

				if (!key) {
					result = {};
				}

				// To prevent the for loop in the first place assign an empty array
				// in case there are no cookies at all. Also prevents odd result when
				// calling "get()"
				var cookies = document.cookie ? document.cookie.split('; ') : [];
				var rdecode = /(%[0-9A-Z]{2})+/g;
				var i = 0;

				for (; i < cookies.length; i++) {
					var parts = cookies[i].split('=');
					var cookie = parts.slice(1).join('=');

					if (cookie.charAt(0) === '"') {
						cookie = cookie.slice(1, -1);
					}

					try {
						var name = parts[0].replace(rdecode, decodeURIComponent);
						cookie = converter.read ? converter.read(cookie, name) : converter(cookie, name) || cookie.replace(rdecode, decodeURIComponent);

						if (this.json) {
							try {
								cookie = JSON.parse(cookie);
							} catch (e) {}
						}

						if (key === name) {
							result = cookie;
							break;
						}

						if (!key) {
							result[name] = cookie;
						}
					} catch (e) {}
				}

				return result;
			}

			api.set = api;
			api.get = function (key) {
				return api(key);
			};
			api.getJSON = function () {
				return api.apply({
					json: true
				}, [].slice.call(arguments));
			};
			api.defaults = {};

			api.remove = function (key, attributes) {
				api(key, '', extend(attributes, {
					expires: -1
				}));
			};

			api.withConverter = init;

			return api;
		}

		return init(function () {});
	});

/***/ },
/* 302 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var getAppId = __webpack_require__(300).getAppId;
	var getLanguage = __webpack_require__(303).getLanguage;
	var Client = __webpack_require__(305).Client;

	var Login = function () {
	    'use strict';

	    var redirect_to_login = function redirect_to_login() {
	        if (!Client.get_boolean('is_logged_in') && !is_login_pages()) {
	            try {
	                sessionStorage.setItem('redirect_url', window.location.href);
	            } catch (e) {
	                window.alert('The website needs features which are not enabled on private mode browsing. Please use normal mode.');
	            }
	            window.location.href = this.login_url();
	        }
	    };

	    var login_url = function login_url() {
	        var server_url = localStorage.getItem('config.server_url');
	        return server_url && /qa/.test(server_url) ? 'https://www.' + server_url.split('.')[1] + '.com/oauth2/authorize?app_id=' + getAppId() + '&l=' + getLanguage() : 'https://oauth.binary.com/oauth2/authorize?app_id=' + getAppId() + '&l=' + getLanguage();
	    };

	    var is_login_pages = function is_login_pages() {
	        return (/logged_inws|oauth2/.test(document.URL)
	        );
	    };

	    return {
	        redirect_to_login: redirect_to_login,
	        is_login_pages: is_login_pages,
	        login_url: login_url
	    };
	}();

	module.exports = {
	    Login: Login
	};

/***/ },
/* 303 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Cookies = __webpack_require__(301);
	var CookieStorage = __webpack_require__(304).CookieStorage;

	var Language = function () {
	    var all_languages = function all_languages() {
	        return {
	            EN: 'English',
	            DE: 'Deutsch',
	            ES: 'Español',
	            FR: 'Français',
	            ID: 'Indonesia',
	            IT: 'Italiano',
	            JA: '日本語',
	            PL: 'Polish',
	            PT: 'Português',
	            RU: 'Русский',
	            TH: 'Thai',
	            VI: 'Tiếng Việt',
	            ZH_CN: '简体中文',
	            ZH_TW: '繁體中文'
	        };
	    };

	    var set_cookie_language = function set_cookie_language() {
	        if (!Cookies.get('language')) {
	            var cookie = new CookieStorage('language');
	            cookie.write(language());
	        }
	    };

	    var language_from_url = function language_from_url() {
	        var regex = new RegExp('^(' + Object.keys(all_languages()).join('|') + ')$', 'i');
	        var langs = window.location.href.split('/').slice(3);
	        for (var i = 0; i < langs.length; i++) {
	            var lang = langs[i];
	            if (regex.test(lang)) return lang;
	        }
	        return '';
	    };

	    var current_lang = null;
	    var language = function language() {
	        var lang = current_lang;
	        if (!lang) {
	            lang = (language_from_url() || Cookies.get('language') || 'EN').toUpperCase();
	            current_lang = lang;
	        }
	        return lang;
	    };

	    var url_for_language = function url_for_language(lang) {
	        return window.location.href.replace(new RegExp('\/' + language() + '\/', 'i'), '/' + lang.trim().toLowerCase() + '/');
	    };

	    var on_change_language = function on_change_language() {
	        $('#select_language').find('li').on('click', function () {
	            var lang = $(this).attr('class');
	            if (language() === lang) return;
	            $('#display_language').find('.language').text($(this).text());
	            var cookie = new CookieStorage('language');
	            cookie.write(lang);
	            document.location = url_for_language(lang);
	        });
	    };

	    return {
	        all_languages: all_languages,
	        set_cookie_language: set_cookie_language,
	        language: language,
	        url_for_language: url_for_language,
	        on_change_language: on_change_language
	    };
	}();

	module.exports = {
	    getAllLanguages: Language.all_languages,
	    getLanguage: Language.language,
	    setCookieLanguage: Language.set_cookie_language,
	    URLForLanguage: Language.url_for_language,
	    onChangeLanguage: Language.on_change_language
	};

/***/ },
/* 304 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Cookies = __webpack_require__(301);

	var isStorageSupported = function isStorageSupported(storage) {
	    if (typeof storage === 'undefined') {
	        return false;
	    }

	    var testKey = 'test';
	    try {
	        storage.setItem(testKey, '1');
	        storage.removeItem(testKey);
	        return true;
	    } catch (e) {
	        return false;
	    }
	};

	var Store = function Store(storage) {
	    this.storage = storage;
	};

	Store.prototype = {
	    get: function get(key) {
	        return this.storage.getItem(key) || undefined;
	    },
	    set: function set(key, value) {
	        if (typeof value !== 'undefined') {
	            this.storage.setItem(key, value);
	        }
	    },
	    remove: function remove(key) {
	        this.storage.removeItem(key);
	    },
	    clear: function clear() {
	        this.storage.clear();
	    }
	};

	var InScriptStore = function InScriptStore(object) {
	    this.store = typeof object !== 'undefined' ? object : {};
	};

	InScriptStore.prototype = {
	    get: function get(key) {
	        return this.store[key];
	    },
	    set: function set(key, value) {
	        this.store[key] = value;
	    },
	    remove: function remove(key) {
	        delete this.store[key];
	    },
	    clear: function clear() {
	        this.store = {};
	    },
	    has: function has(key) {
	        return this.get(key) !== undefined;
	    },
	    keys: function keys() {
	        return Object.keys(this.store);
	    }
	};

	var State = new InScriptStore();

	var CookieStorage = function CookieStorage(cookie_name, cookie_domain) {
	    this.initialized = false;
	    this.cookie_name = cookie_name;
	    var hostname = window.location.hostname;
	    this.domain = cookie_domain || (/\.binary\.com/i.test(hostname) ? '.' + hostname.split('.').slice(-2).join('.') : hostname);
	    this.path = '/';
	    this.expires = new Date('Thu, 1 Jan 2037 12:00:00 GMT');
	    this.value = {};
	};

	CookieStorage.prototype = {
	    read: function read() {
	        var cookie_value = Cookies.get(this.cookie_name);
	        try {
	            this.value = cookie_value ? JSON.parse(cookie_value) : {};
	        } catch (e) {
	            this.value = {};
	        }
	        this.initialized = true;
	    },
	    write: function write(value, expireDate, isSecure) {
	        if (!this.initialized) this.read();
	        this.value = value;
	        if (expireDate) this.expires = expireDate;
	        Cookies.set(this.cookie_name, this.value, {
	            expires: this.expires,
	            path: this.path,
	            domain: this.domain,
	            secure: !!isSecure
	        });
	    },
	    get: function get(key) {
	        if (!this.initialized) this.read();
	        return this.value[key];
	    },
	    set: function set(key, value) {
	        if (!this.initialized) this.read();
	        this.value[key] = value;
	        Cookies.set(this.cookie_name, this.value, {
	            expires: new Date(this.expires),
	            path: this.path,
	            domain: this.domain
	        });
	    },
	    remove: function remove() {
	        Cookies.remove(this.cookie_name, {
	            path: this.path,
	            domain: this.domain
	        });
	    }
	};

	var SessionStore = void 0,
	    LocalStore = void 0;
	if (typeof window !== 'undefined' && isStorageSupported(window.localStorage)) {
	    LocalStore = new Store(window.localStorage);
	}

	if (typeof window !== 'undefined' && isStorageSupported(window.sessionStorage)) {
	    if (!LocalStore) {
	        LocalStore = new Store(window.sessionStorage);
	    }
	    SessionStore = new Store(window.sessionStorage);
	}

	if (!SessionStore || !LocalStore) {
	    if (!LocalStore) {
	        LocalStore = new InScriptStore();
	    }
	    if (!SessionStore) {
	        SessionStore = new InScriptStore();
	    }
	}

	module.exports = {
	    isStorageSupported: isStorageSupported,
	    Store: Store,
	    InScriptStore: InScriptStore,
	    CookieStorage: CookieStorage,
	    State: State,
	    SessionStore: SessionStore,
	    LocalStore: LocalStore
	};

/***/ },
/* 305 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var CookieStorage = __webpack_require__(304).CookieStorage;
	var LocalStore = __webpack_require__(304).LocalStore;
	var url_for = __webpack_require__(306).url_for;
	var default_redirect_url = __webpack_require__(306).default_redirect_url;
	var japanese_client = __webpack_require__(307).japanese_client;
	var Cookies = __webpack_require__(301);
	var moment = __webpack_require__(308);

	var Client = function () {
	    var client_object = {};
	    var landing_company_response = {};

	    var parseLoginIDList = function parseLoginIDList(string) {
	        if (!string) return [];
	        return string.split('+').sort().map(function (str) {
	            var items = str.split(':');
	            var id = items[0];
	            return {
	                id: id,
	                real: items[1] === 'R',
	                disabled: items[2] === 'D',
	                financial: /^MF/.test(id),
	                non_financial: /^MLT/.test(id)
	            };
	        });
	    };

	    var init = function init() {
	        var loginid = Cookies.get('loginid');
	        client_object.loginid_array = parseLoginIDList(Cookies.get('loginid_list') || '');
	        var is_logged_in = loginid && client_object.loginid_array.length > 0 && get_storage_value('tokens');

	        set_storage_value('email', Cookies.get('email'));
	        set_storage_value('loginid', loginid);
	        set_storage_value('is_logged_in', is_logged_in);
	        set_storage_value('residence', Cookies.get('residence'));
	    };

	    var validate_loginid = function validate_loginid() {
	        var loginid_list = Cookies.get('loginid_list');
	        var client_id = Cookies.get('loginid');
	        if (!client_id || !loginid_list) return;

	        var valid_loginids = new RegExp('^(MX|MF|VRTC|MLT|CR|FOG|VRTJ|JP)[0-9]+$', 'i');

	        if (!valid_loginids.test(client_id)) {
	            send_logout_request();
	        }

	        var accIds = loginid_list.split('+');
	        accIds.forEach(function (acc_id) {
	            if (!valid_loginids.test(acc_id.split(':')[0])) {
	                send_logout_request();
	            }
	        });
	    };

	    var redirect_if_is_virtual = function redirect_if_is_virtual(redirectPage) {
	        var is_virtual = get_boolean('is_virtual');
	        if (is_virtual) {
	            window.location.href = url_for(redirectPage || '');
	        }
	        return is_virtual;
	    };

	    var redirect_if_login = function redirect_if_login() {
	        if (get_boolean('is_logged_in')) {
	            window.location.href = default_redirect_url();
	        }
	        return get_boolean('is_logged_in');
	    };

	    var set_storage_value = function set_storage_value(key, value) {
	        client_object[key] = value;
	        return LocalStore.set('client.' + key, value);
	    };

	    // use this function to get variables that have values
	    var get_storage_value = function get_storage_value(key) {
	        return client_object[key] || LocalStore.get('client.' + key) || '';
	    };

	    // use this function to get variables that are a boolean
	    var get_boolean = function get_boolean(value) {
	        return JSON.parse(get_storage_value(value) || false);
	    };

	    var check_storage_values = function check_storage_values(origin) {
	        var is_ok = true;

	        // currencies
	        if (!get_storage_value('currencies')) {
	            BinarySocket.send({
	                payout_currencies: 1,
	                passthrough: {
	                    handler: 'client',
	                    origin: origin || ''
	                }
	            });
	            is_ok = false;
	        }

	        if (get_boolean('is_logged_in')) {
	            if (!get_boolean('is_virtual') && Cookies.get('residence') && !get_boolean('has_reality_check')) {
	                BinarySocket.send({
	                    landing_company: Cookies.get('residence'),
	                    passthrough: {
	                        handler: 'client',
	                        origin: origin || ''
	                    }
	                });
	                is_ok = false;
	            }
	        }

	        // website TNC version
	        if (!LocalStore.get('website.tnc_version')) {
	            BinarySocket.send({ website_status: 1 });
	        }

	        return is_ok;
	    };

	    var response_authorize = function response_authorize(response) {
	        var authorize = response.authorize;
	        if (!Cookies.get('email')) {
	            set_cookie('email', authorize.email);
	            set_storage_value('email', authorize.email);
	        }
	        set_storage_value('session_start', parseInt(moment().valueOf() / 1000));
	        set_storage_value('is_virtual', authorize.is_virtual);
	        set_storage_value('landing_company_name', authorize.landing_company_name);
	        set_storage_value('landing_company_fullname', authorize.landing_company_fullname);
	        set_storage_value('currency', authorize.currency);
	        check_storage_values();
	        client_object.values_set = true;
	        activate_by_client_type();
	    };

	    var check_tnc = function check_tnc() {
	        if (/user\/tnc_approvalws/.test(window.location.href) || /terms-and-conditions/.test(window.location.href) || get_boolean('is_virtual') || sessionStorage.getItem('check_tnc') !== 'check') {
	            return;
	        }
	        var client_tnc_status = get_storage_value('tnc_status'),
	            website_tnc_version = LocalStore.get('website.tnc_version');
	        if (client_tnc_status && website_tnc_version && client_tnc_status !== website_tnc_version) {
	            sessionStorage.setItem('tnc_redirect', window.location.href);
	            window.location.href = url_for('user/tnc_approvalws');
	        }
	    };

	    var set_check_tnc = function set_check_tnc() {
	        if (!$('body').hasClass('BlueTopBack')) {
	            sessionStorage.setItem('check_tnc', 'check');
	            localStorage.removeItem('client.tnc_status');
	            localStorage.removeItem('website.tnc_version');
	        }
	    };

	    var clear_storage_values = function clear_storage_values() {
	        // clear all client values from local storage
	        Object.keys(localStorage).forEach(function (c) {
	            if (/^client\.(?!(tokens$))/.test(c)) {
	                LocalStore.set(c, '');
	            }
	        });
	        set_check_tnc();
	        sessionStorage.setItem('currencies', '');
	    };

	    var get_token = function get_token(client_loginid) {
	        var token = void 0;
	        var tokens = get_storage_value('tokens');
	        if (client_loginid && tokens) {
	            var tokensObj = JSON.parse(tokens);
	            if (tokensObj.hasOwnProperty(client_loginid) && tokensObj[client_loginid]) {
	                token = tokensObj[client_loginid];
	            }
	        }
	        return token;
	    };

	    var add_token = function add_token(client_loginid, token) {
	        if (!client_loginid || !token || get_token(client_loginid)) {
	            return false;
	        }
	        var tokens = get_storage_value('tokens');
	        var tokensObj = tokens && tokens.length > 0 ? JSON.parse(tokens) : {};
	        tokensObj[client_loginid] = token;
	        set_storage_value('tokens', JSON.stringify(tokensObj));
	        return true;
	    };

	    var set_cookie = function set_cookie(cookieName, Value, domain) {
	        var cookie_expire = new Date();
	        cookie_expire.setDate(cookie_expire.getDate() + 60);
	        var cookie = new CookieStorage(cookieName, domain);
	        cookie.write(Value, cookie_expire, true);
	    };

	    var process_new_account = function process_new_account(client_email, client_loginid, token, virtual_client) {
	        if (!client_email || !client_loginid || !token) {
	            return;
	        }
	        // save token
	        add_token(client_loginid, token);
	        // set cookies
	        set_cookie('email', client_email);
	        set_cookie('login', token);
	        set_cookie('loginid', client_loginid);
	        set_cookie('loginid_list', virtual_client ? client_loginid + ':V:E' : client_loginid + ':R:E+' + Cookies.get('loginid_list'));
	        // set local storage
	        localStorage.setItem('GTM_newaccount', '1');
	        localStorage.setItem('active_loginid', client_loginid);
	        window.location.href = default_redirect_url();
	    };

	    var can_upgrade_gaming_to_financial = function can_upgrade_gaming_to_financial(data) {
	        return data.hasOwnProperty('financial_company') && data.financial_company.shortcode === 'maltainvest';
	    };

	    var can_upgrade_virtual_to_financial = function can_upgrade_virtual_to_financial(data) {
	        return data.hasOwnProperty('financial_company') && !data.hasOwnProperty('gaming_company') && data.financial_company.shortcode === 'maltainvest';
	    };

	    var can_upgrade_virtual_to_japan = function can_upgrade_virtual_to_japan(data) {
	        return data.hasOwnProperty('financial_company') && !data.hasOwnProperty('gaming_company') && data.financial_company.shortcode === 'japan';
	    };

	    var has_gaming_financial_enabled = function has_gaming_financial_enabled() {
	        var has_financial = false,
	            has_gaming = false,
	            looping_user = void 0;
	        for (var i = 0; i < client_object.loginid_array.length; i++) {
	            looping_user = client_object.loginid_array[i];
	            if (looping_user.financial && !looping_user.disabled && !looping_user.non_financial) {
	                has_financial = true;
	            } else if (!looping_user.financial && !looping_user.disabled && looping_user.non_financial) {
	                has_gaming = true;
	            }
	        }
	        return has_gaming && has_financial;
	    };

	    var activate_by_client_type = function activate_by_client_type() {
	        $('.by_client_type').addClass('invisible');
	        if (get_boolean('is_logged_in')) {
	            if (!client_object.values_set) {
	                return;
	            }
	            $('#client-logged-in').addClass('gr-centered');
	            $('.client_logged_in').removeClass('invisible');
	            if (!get_boolean('is_virtual')) {
	                // control-class is a fake class, only used to counteract ja-hide class
	                $('.by_client_type.client_real').not(japanese_client() ? '.ja-hide' : '.control-class').removeClass('invisible').show();

	                $('#topbar').addClass('primary-color-dark').removeClass('secondary-bg-color');

	                if (!/^CR/.test(get_storage_value('loginid'))) {
	                    $('#payment-agent-section').addClass('invisible').hide();
	                }

	                if (has_gaming_financial_enabled()) {
	                    $('#account-transfer-section').removeClass('invisible');
	                }
	            } else {
	                $('.by_client_type.client_virtual').removeClass('invisible').show();

	                $('#topbar').addClass('secondary-bg-color').removeClass('primary-color-dark');
	            }
	        } else {
	            $('.by_client_type.client_logged_out').removeClass('invisible').show();

	            $('#topbar').removeClass('secondary-bg-color').addClass('primary-color-dark');
	        }
	    };

	    var send_logout_request = function send_logout_request(showLoginPage) {
	        if (showLoginPage) {
	            sessionStorage.setItem('showLoginPage', 1);
	        }
	        BinarySocket.send({ logout: '1' });
	    };

	    var do_logout = function do_logout(response) {
	        if (response.logout !== 1) return;
	        Client.clear_storage_values();
	        LocalStore.remove('client.tokens');
	        LocalStore.set('reality_check.ack', 0);
	        sessionStorage.removeItem('client_status');
	        var cookies = ['login', 'loginid', 'loginid_list', 'email', 'settings', 'reality_check', 'affiliate_token', 'affiliate_tracking', 'residence'];
	        var domains = ['.' + document.domain.split('.').slice(-2).join('.'), '.' + document.domain];

	        var parent_path = window.location.pathname.split('/', 2)[1];
	        if (parent_path !== '') {
	            parent_path = '/' + parent_path;
	        }

	        cookies.forEach(function (c) {
	            var regex = new RegExp(c);
	            Cookies.remove(c, { path: '/', domain: domains[0] });
	            Cookies.remove(c, { path: '/', domain: domains[1] });
	            Cookies.remove(c);
	            if (regex.test(document.cookie) && parent_path) {
	                Cookies.remove(c, { path: parent_path, domain: domains[0] });
	                Cookies.remove(c, { path: parent_path, domain: domains[1] });
	                Cookies.remove(c, { path: parent_path });
	            }
	        });
	        localStorage.removeItem('risk_classification');
	        localStorage.removeItem('risk_classification.response');
	        window.location.reload();
	    };

	    // type can take one or more params, separated by comma
	    // e.g. one param = 'authenticated', two params = 'unwelcome, authenticated'
	    // match_type can be `any` `all`, by default is `any`
	    // should be passed when more than one param in type.
	    // `any` will return true if any of the params in type are found in client status
	    // `all` will return true if all of the params in type are found in client status
	    var status_detected = function status_detected(type, match_type) {
	        var client_status = sessionStorage.getItem('client_status');
	        if (!client_status || client_status.length === 0) return false;
	        var require_auth = /\,/.test(type) ? type.split(/, */) : [type];
	        client_status = client_status.split(',');
	        match_type = match_type && match_type === 'all' ? 'all' : 'any';
	        for (var i = 0; i < require_auth.length; i++) {
	            if (match_type === 'any' && client_status.indexOf(require_auth[i]) > -1) return true;
	            if (match_type === 'all' && client_status.indexOf(require_auth[i]) < 0) return false;
	        }
	        return match_type !== 'any';
	    };

	    var get_set_landing_company = function get_set_landing_company(response) {
	        // eslint-disable-line consistent-return
	        if (response) landing_company_response = response;else return landing_company_response;
	    };

	    return {
	        init: init,
	        validate_loginid: validate_loginid,
	        redirect_if_is_virtual: redirect_if_is_virtual,
	        redirect_if_login: redirect_if_login,
	        set_value: set_storage_value,
	        get_value: get_storage_value,
	        get_boolean: get_boolean,
	        check_storage_values: check_storage_values,
	        response_authorize: response_authorize,
	        check_tnc: check_tnc,
	        set_check_tnc: set_check_tnc,
	        clear_storage_values: clear_storage_values,
	        get_token: get_token,
	        add_token: add_token,
	        set_cookie: set_cookie,
	        process_new_account: process_new_account,

	        can_upgrade_gaming_to_financial: can_upgrade_gaming_to_financial,
	        can_upgrade_virtual_to_financial: can_upgrade_virtual_to_financial,
	        can_upgrade_virtual_to_japan: can_upgrade_virtual_to_japan,
	        activate_by_client_type: activate_by_client_type,

	        send_logout_request: send_logout_request,
	        do_logout: do_logout,
	        status_detected: status_detected,
	        landing_company: get_set_landing_company
	    };
	}();

	module.exports = {
	    Client: Client,
	    validate_loginid: Client.validate_loginid
	};

/***/ },
/* 306 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var getLanguage = __webpack_require__(303).getLanguage;
	var japanese_client = __webpack_require__(307).japanese_client;

	var Url = function Url(url) {
	    this.history_supported = typeof window !== 'undefined' && window.history && window.history.pushState;
	    if (typeof url !== 'undefined') {
	        this.location = $('<a>', { href: decodeURIComponent(url) })[0];
	    } else if (typeof window !== 'undefined') {
	        this.location = window.location;
	    }
	};

	Url.prototype = {
	    reset: function reset() {
	        if (typeof window !== 'undefined') {
	            this.location = window.location;
	        }
	        this._param_hash = undefined;
	        $(this).trigger('change', [this]);
	    },
	    update: function update(url) {
	        var state_info = { container: 'content', url: url, useClass: 'pjaxload' };
	        if (this.history_supported) {
	            history.pushState(state_info, '', url);
	            this.reset();
	        }
	    },
	    param: function param(name) {
	        var param_hash = this.params_hash();
	        return param_hash[name];
	    },
	    path_matches: function path_matches(url) {
	        var this_pathname = this.location.pathname,
	            url_pathname = url.location.pathname;
	        return this_pathname === url_pathname || '/' + this_pathname === url_pathname;
	    },
	    params_hash_to_string: function params_hash_to_string(params) {
	        return Object.keys(params).map(function (key) {
	            return key + '=' + params[key];
	        }).join('&');
	    },
	    is_in: function is_in(url) {
	        if (this.path_matches(url)) {
	            var this_params = this.params();
	            var param_count = this_params.length,
	                match_count = 0;
	            while (param_count--) {
	                if (url.param(this_params[param_count][0]) === this_params[param_count][1]) {
	                    match_count++;
	                }
	            }
	            if (match_count === this_params.length) {
	                return true;
	            }
	        }

	        return false;
	    },
	    params_hash: function params_hash() {
	        if (!this._param_hash || this._param_hash && Object.keys(this._param_hash).length === 0) {
	            this._param_hash = {};
	            var params = this.params();
	            var param = params.length;
	            while (param--) {
	                if (params[param][0]) {
	                    this._param_hash[params[param][0]] = params[param][1];
	                }
	            }
	        }
	        return this._param_hash;
	    },
	    params: function params() {
	        var params = [],
	            parsed = this.location.search.substr(1).split('&');
	        var p_l = parsed.length;
	        while (p_l--) {
	            var param = parsed[p_l].split('=');
	            params.push(param);
	        }
	        return params;
	    }
	};

	var url_for = function url_for(path, params) {
	    if (!path) {
	        path = '';
	    } else if (path.length > 0 && path[0] === '/') {
	        path = path.substr(1);
	    }
	    var lang = getLanguage().toLowerCase();
	    var url = '';
	    if (typeof window !== 'undefined') {
	        url = window.location.href;
	    }
	    return url.substring(0, url.indexOf('/' + lang + '/') + lang.length + 2) + (path || 'home') + '.html' + (params ? '?' + params : '');
	};

	var url_for_static = function url_for_static(path) {
	    if (!path) {
	        path = '';
	    } else if (path.length > 0 && path[0] === '/') {
	        path = path.substr(1);
	    }

	    var staticHost = void 0;
	    if (typeof window !== 'undefined') {
	        staticHost = window.staticHost;
	    }
	    if (!staticHost || staticHost.length === 0) {
	        staticHost = $('script[src*="binary.min.js"],script[src*="binary.js"]').attr('src');

	        if (staticHost && staticHost.length > 0) {
	            staticHost = staticHost.substr(0, staticHost.indexOf('/js/') + 1);
	        } else {
	            staticHost = 'https://www.binary.com/';
	        }

	        if (typeof window !== 'undefined') {
	            window.staticHost = staticHost;
	        }
	    }

	    return staticHost + path;
	};

	var default_redirect_url = function default_redirect_url() {
	    return url_for(japanese_client() ? 'multi_barriers_trading' : 'trading');
	};

	var url = new Url();

	module.exports = {
	    Url: Url,
	    url_for: url_for,
	    url_for_static: url_for_static,
	    default_redirect_url: default_redirect_url,
	    url: url
	};

/***/ },
/* 307 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Cookies = __webpack_require__(301);
	var getLanguage = __webpack_require__(303).getLanguage;
	var URLForLanguage = __webpack_require__(303).URLForLanguage;

	function checkClientsCountry() {
	    var clients_country = localStorage.getItem('clients_country');
	    if (clients_country) {
	        if (clients_country === 'jp') {
	            limitLanguage('JA');
	        } else if (clients_country === 'id') {
	            limitLanguage('ID');
	        } else {
	            $('.languages').show();
	        }
	    } else {
	        BinarySocket.init();
	        BinarySocket.send({ website_status: '1' });
	    }
	}

	function limitLanguage(lang) {
	    if (getLanguage() !== lang) {
	        window.location.href = URLForLanguage(lang);
	    }
	    if (document.getElementById('select_language')) {
	        $('.languages').remove();
	        $('#gmt-clock').removeClass('gr-5 gr-6-m').addClass('gr-6 gr-12-m');
	        $('#contact-us').removeClass('gr-2').addClass('gr-6');
	    }
	}

	function japanese_client() {
	    // handle for test case
	    if (typeof window === 'undefined') return false;
	    return getLanguage() === 'JA' || Cookies.get('residence') === 'jp' || localStorage.getItem('clients_country') === 'jp';
	}

	function checkLanguage() {
	    if (getLanguage() === 'ID') {
	        var regex = new RegExp('id'),
	            $blogLink = $('.blog a'),
	            $blogHREF = $blogLink.attr('href');
	        if (!regex.test($blogHREF)) {
	            $blogLink.attr('href', $blogHREF + '/id/');
	        }
	    }
	    if (japanese_client()) {
	        var visible = 'visibility: visible;';
	        $('.ja-hide').addClass('invisible');
	        $('.ja-show').attr('style', 'display: inline !important;' + visible);
	        $('.ja-show-block').attr('style', 'display: block !important;' + visible);
	        $('.ja-show-inline-block').attr('style', 'display: inline-block !important;' + visible);
	        $('.ja-no-padding').attr('style', 'padding-top: 0; padding-bottom: 0;');
	        $('#regulatory-text').removeClass('gr-9 gr-7-p').addClass('gr-12 gr-12-p');
	    }
	}

	module.exports = {
	    checkClientsCountry: checkClientsCountry,
	    japanese_client: japanese_client,
	    checkLanguage: checkLanguage
	};

/***/ },
/* 308 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {//! moment.js
	//! version : 2.17.1
	//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
	//! license : MIT
	//! momentjs.com

	;(function (global, factory) {
	     true ? module.exports = factory() :
	    typeof define === 'function' && define.amd ? define(factory) :
	    global.moment = factory()
	}(this, (function () { 'use strict';

	var hookCallback;

	function hooks () {
	    return hookCallback.apply(null, arguments);
	}

	// This is done to register the method called with moment()
	// without creating circular dependencies.
	function setHookCallback (callback) {
	    hookCallback = callback;
	}

	function isArray(input) {
	    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';
	}

	function isObject(input) {
	    // IE8 will treat undefined and null as object if it wasn't for
	    // input != null
	    return input != null && Object.prototype.toString.call(input) === '[object Object]';
	}

	function isObjectEmpty(obj) {
	    var k;
	    for (k in obj) {
	        // even if its not own property I'd still call it non-empty
	        return false;
	    }
	    return true;
	}

	function isNumber(input) {
	    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';
	}

	function isDate(input) {
	    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';
	}

	function map(arr, fn) {
	    var res = [], i;
	    for (i = 0; i < arr.length; ++i) {
	        res.push(fn(arr[i], i));
	    }
	    return res;
	}

	function hasOwnProp(a, b) {
	    return Object.prototype.hasOwnProperty.call(a, b);
	}

	function extend(a, b) {
	    for (var i in b) {
	        if (hasOwnProp(b, i)) {
	            a[i] = b[i];
	        }
	    }

	    if (hasOwnProp(b, 'toString')) {
	        a.toString = b.toString;
	    }

	    if (hasOwnProp(b, 'valueOf')) {
	        a.valueOf = b.valueOf;
	    }

	    return a;
	}

	function createUTC (input, format, locale, strict) {
	    return createLocalOrUTC(input, format, locale, strict, true).utc();
	}

	function defaultParsingFlags() {
	    // We need to deep clone this object.
	    return {
	        empty           : false,
	        unusedTokens    : [],
	        unusedInput     : [],
	        overflow        : -2,
	        charsLeftOver   : 0,
	        nullInput       : false,
	        invalidMonth    : null,
	        invalidFormat   : false,
	        userInvalidated : false,
	        iso             : false,
	        parsedDateParts : [],
	        meridiem        : null
	    };
	}

	function getParsingFlags(m) {
	    if (m._pf == null) {
	        m._pf = defaultParsingFlags();
	    }
	    return m._pf;
	}

	var some;
	if (Array.prototype.some) {
	    some = Array.prototype.some;
	} else {
	    some = function (fun) {
	        var t = Object(this);
	        var len = t.length >>> 0;

	        for (var i = 0; i < len; i++) {
	            if (i in t && fun.call(this, t[i], i, t)) {
	                return true;
	            }
	        }

	        return false;
	    };
	}

	var some$1 = some;

	function isValid(m) {
	    if (m._isValid == null) {
	        var flags = getParsingFlags(m);
	        var parsedParts = some$1.call(flags.parsedDateParts, function (i) {
	            return i != null;
	        });
	        var isNowValid = !isNaN(m._d.getTime()) &&
	            flags.overflow < 0 &&
	            !flags.empty &&
	            !flags.invalidMonth &&
	            !flags.invalidWeekday &&
	            !flags.nullInput &&
	            !flags.invalidFormat &&
	            !flags.userInvalidated &&
	            (!flags.meridiem || (flags.meridiem && parsedParts));

	        if (m._strict) {
	            isNowValid = isNowValid &&
	                flags.charsLeftOver === 0 &&
	                flags.unusedTokens.length === 0 &&
	                flags.bigHour === undefined;
	        }

	        if (Object.isFrozen == null || !Object.isFrozen(m)) {
	            m._isValid = isNowValid;
	        }
	        else {
	            return isNowValid;
	        }
	    }
	    return m._isValid;
	}

	function createInvalid (flags) {
	    var m = createUTC(NaN);
	    if (flags != null) {
	        extend(getParsingFlags(m), flags);
	    }
	    else {
	        getParsingFlags(m).userInvalidated = true;
	    }

	    return m;
	}

	function isUndefined(input) {
	    return input === void 0;
	}

	// Plugins that add properties should also add the key here (null value),
	// so we can properly clone ourselves.
	var momentProperties = hooks.momentProperties = [];

	function copyConfig(to, from) {
	    var i, prop, val;

	    if (!isUndefined(from._isAMomentObject)) {
	        to._isAMomentObject = from._isAMomentObject;
	    }
	    if (!isUndefined(from._i)) {
	        to._i = from._i;
	    }
	    if (!isUndefined(from._f)) {
	        to._f = from._f;
	    }
	    if (!isUndefined(from._l)) {
	        to._l = from._l;
	    }
	    if (!isUndefined(from._strict)) {
	        to._strict = from._strict;
	    }
	    if (!isUndefined(from._tzm)) {
	        to._tzm = from._tzm;
	    }
	    if (!isUndefined(from._isUTC)) {
	        to._isUTC = from._isUTC;
	    }
	    if (!isUndefined(from._offset)) {
	        to._offset = from._offset;
	    }
	    if (!isUndefined(from._pf)) {
	        to._pf = getParsingFlags(from);
	    }
	    if (!isUndefined(from._locale)) {
	        to._locale = from._locale;
	    }

	    if (momentProperties.length > 0) {
	        for (i in momentProperties) {
	            prop = momentProperties[i];
	            val = from[prop];
	            if (!isUndefined(val)) {
	                to[prop] = val;
	            }
	        }
	    }

	    return to;
	}

	var updateInProgress = false;

	// Moment prototype object
	function Moment(config) {
	    copyConfig(this, config);
	    this._d = new Date(config._d != null ? config._d.getTime() : NaN);
	    if (!this.isValid()) {
	        this._d = new Date(NaN);
	    }
	    // Prevent infinite loop in case updateOffset creates new moment
	    // objects.
	    if (updateInProgress === false) {
	        updateInProgress = true;
	        hooks.updateOffset(this);
	        updateInProgress = false;
	    }
	}

	function isMoment (obj) {
	    return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);
	}

	function absFloor (number) {
	    if (number < 0) {
	        // -0 -> 0
	        return Math.ceil(number) || 0;
	    } else {
	        return Math.floor(number);
	    }
	}

	function toInt(argumentForCoercion) {
	    var coercedNumber = +argumentForCoercion,
	        value = 0;

	    if (coercedNumber !== 0 && isFinite(coercedNumber)) {
	        value = absFloor(coercedNumber);
	    }

	    return value;
	}

	// compare two arrays, return the number of differences
	function compareArrays(array1, array2, dontConvert) {
	    var len = Math.min(array1.length, array2.length),
	        lengthDiff = Math.abs(array1.length - array2.length),
	        diffs = 0,
	        i;
	    for (i = 0; i < len; i++) {
	        if ((dontConvert && array1[i] !== array2[i]) ||
	            (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {
	            diffs++;
	        }
	    }
	    return diffs + lengthDiff;
	}

	function warn(msg) {
	    if (hooks.suppressDeprecationWarnings === false &&
	            (typeof console !==  'undefined') && console.warn) {
	        console.warn('Deprecation warning: ' + msg);
	    }
	}

	function deprecate(msg, fn) {
	    var firstTime = true;

	    return extend(function () {
	        if (hooks.deprecationHandler != null) {
	            hooks.deprecationHandler(null, msg);
	        }
	        if (firstTime) {
	            var args = [];
	            var arg;
	            for (var i = 0; i < arguments.length; i++) {
	                arg = '';
	                if (typeof arguments[i] === 'object') {
	                    arg += '\n[' + i + '] ';
	                    for (var key in arguments[0]) {
	                        arg += key + ': ' + arguments[0][key] + ', ';
	                    }
	                    arg = arg.slice(0, -2); // Remove trailing comma and space
	                } else {
	                    arg = arguments[i];
	                }
	                args.push(arg);
	            }
	            warn(msg + '\nArguments: ' + Array.prototype.slice.call(args).join('') + '\n' + (new Error()).stack);
	            firstTime = false;
	        }
	        return fn.apply(this, arguments);
	    }, fn);
	}

	var deprecations = {};

	function deprecateSimple(name, msg) {
	    if (hooks.deprecationHandler != null) {
	        hooks.deprecationHandler(name, msg);
	    }
	    if (!deprecations[name]) {
	        warn(msg);
	        deprecations[name] = true;
	    }
	}

	hooks.suppressDeprecationWarnings = false;
	hooks.deprecationHandler = null;

	function isFunction(input) {
	    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
	}

	function set (config) {
	    var prop, i;
	    for (i in config) {
	        prop = config[i];
	        if (isFunction(prop)) {
	            this[i] = prop;
	        } else {
	            this['_' + i] = prop;
	        }
	    }
	    this._config = config;
	    // Lenient ordinal parsing accepts just a number in addition to
	    // number + (possibly) stuff coming from _ordinalParseLenient.
	    this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + (/\d{1,2}/).source);
	}

	function mergeConfigs(parentConfig, childConfig) {
	    var res = extend({}, parentConfig), prop;
	    for (prop in childConfig) {
	        if (hasOwnProp(childConfig, prop)) {
	            if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
	                res[prop] = {};
	                extend(res[prop], parentConfig[prop]);
	                extend(res[prop], childConfig[prop]);
	            } else if (childConfig[prop] != null) {
	                res[prop] = childConfig[prop];
	            } else {
	                delete res[prop];
	            }
	        }
	    }
	    for (prop in parentConfig) {
	        if (hasOwnProp(parentConfig, prop) &&
	                !hasOwnProp(childConfig, prop) &&
	                isObject(parentConfig[prop])) {
	            // make sure changes to properties don't modify parent config
	            res[prop] = extend({}, res[prop]);
	        }
	    }
	    return res;
	}

	function Locale(config) {
	    if (config != null) {
	        this.set(config);
	    }
	}

	var keys;

	if (Object.keys) {
	    keys = Object.keys;
	} else {
	    keys = function (obj) {
	        var i, res = [];
	        for (i in obj) {
	            if (hasOwnProp(obj, i)) {
	                res.push(i);
	            }
	        }
	        return res;
	    };
	}

	var keys$1 = keys;

	var defaultCalendar = {
	    sameDay : '[Today at] LT',
	    nextDay : '[Tomorrow at] LT',
	    nextWeek : 'dddd [at] LT',
	    lastDay : '[Yesterday at] LT',
	    lastWeek : '[Last] dddd [at] LT',
	    sameElse : 'L'
	};

	function calendar (key, mom, now) {
	    var output = this._calendar[key] || this._calendar['sameElse'];
	    return isFunction(output) ? output.call(mom, now) : output;
	}

	var defaultLongDateFormat = {
	    LTS  : 'h:mm:ss A',
	    LT   : 'h:mm A',
	    L    : 'MM/DD/YYYY',
	    LL   : 'MMMM D, YYYY',
	    LLL  : 'MMMM D, YYYY h:mm A',
	    LLLL : 'dddd, MMMM D, YYYY h:mm A'
	};

	function longDateFormat (key) {
	    var format = this._longDateFormat[key],
	        formatUpper = this._longDateFormat[key.toUpperCase()];

	    if (format || !formatUpper) {
	        return format;
	    }

	    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {
	        return val.slice(1);
	    });

	    return this._longDateFormat[key];
	}

	var defaultInvalidDate = 'Invalid date';

	function invalidDate () {
	    return this._invalidDate;
	}

	var defaultOrdinal = '%d';
	var defaultOrdinalParse = /\d{1,2}/;

	function ordinal (number) {
	    return this._ordinal.replace('%d', number);
	}

	var defaultRelativeTime = {
	    future : 'in %s',
	    past   : '%s ago',
	    s  : 'a few seconds',
	    m  : 'a minute',
	    mm : '%d minutes',
	    h  : 'an hour',
	    hh : '%d hours',
	    d  : 'a day',
	    dd : '%d days',
	    M  : 'a month',
	    MM : '%d months',
	    y  : 'a year',
	    yy : '%d years'
	};

	function relativeTime (number, withoutSuffix, string, isFuture) {
	    var output = this._relativeTime[string];
	    return (isFunction(output)) ?
	        output(number, withoutSuffix, string, isFuture) :
	        output.replace(/%d/i, number);
	}

	function pastFuture (diff, output) {
	    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
	    return isFunction(format) ? format(output) : format.replace(/%s/i, output);
	}

	var aliases = {};

	function addUnitAlias (unit, shorthand) {
	    var lowerCase = unit.toLowerCase();
	    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
	}

	function normalizeUnits(units) {
	    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;
	}

	function normalizeObjectUnits(inputObject) {
	    var normalizedInput = {},
	        normalizedProp,
	        prop;

	    for (prop in inputObject) {
	        if (hasOwnProp(inputObject, prop)) {
	            normalizedProp = normalizeUnits(prop);
	            if (normalizedProp) {
	                normalizedInput[normalizedProp] = inputObject[prop];
	            }
	        }
	    }

	    return normalizedInput;
	}

	var priorities = {};

	function addUnitPriority(unit, priority) {
	    priorities[unit] = priority;
	}

	function getPrioritizedUnits(unitsObj) {
	    var units = [];
	    for (var u in unitsObj) {
	        units.push({unit: u, priority: priorities[u]});
	    }
	    units.sort(function (a, b) {
	        return a.priority - b.priority;
	    });
	    return units;
	}

	function makeGetSet (unit, keepTime) {
	    return function (value) {
	        if (value != null) {
	            set$1(this, unit, value);
	            hooks.updateOffset(this, keepTime);
	            return this;
	        } else {
	            return get(this, unit);
	        }
	    };
	}

	function get (mom, unit) {
	    return mom.isValid() ?
	        mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;
	}

	function set$1 (mom, unit, value) {
	    if (mom.isValid()) {
	        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
	    }
	}

	// MOMENTS

	function stringGet (units) {
	    units = normalizeUnits(units);
	    if (isFunction(this[units])) {
	        return this[units]();
	    }
	    return this;
	}


	function stringSet (units, value) {
	    if (typeof units === 'object') {
	        units = normalizeObjectUnits(units);
	        var prioritized = getPrioritizedUnits(units);
	        for (var i = 0; i < prioritized.length; i++) {
	            this[prioritized[i].unit](units[prioritized[i].unit]);
	        }
	    } else {
	        units = normalizeUnits(units);
	        if (isFunction(this[units])) {
	            return this[units](value);
	        }
	    }
	    return this;
	}

	function zeroFill(number, targetLength, forceSign) {
	    var absNumber = '' + Math.abs(number),
	        zerosToFill = targetLength - absNumber.length,
	        sign = number >= 0;
	    return (sign ? (forceSign ? '+' : '') : '-') +
	        Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
	}

	var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;

	var localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;

	var formatFunctions = {};

	var formatTokenFunctions = {};

	// token:    'M'
	// padded:   ['MM', 2]
	// ordinal:  'Mo'
	// callback: function () { this.month() + 1 }
	function addFormatToken (token, padded, ordinal, callback) {
	    var func = callback;
	    if (typeof callback === 'string') {
	        func = function () {
	            return this[callback]();
	        };
	    }
	    if (token) {
	        formatTokenFunctions[token] = func;
	    }
	    if (padded) {
	        formatTokenFunctions[padded[0]] = function () {
	            return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
	        };
	    }
	    if (ordinal) {
	        formatTokenFunctions[ordinal] = function () {
	            return this.localeData().ordinal(func.apply(this, arguments), token);
	        };
	    }
	}

	function removeFormattingTokens(input) {
	    if (input.match(/\[[\s\S]/)) {
	        return input.replace(/^\[|\]$/g, '');
	    }
	    return input.replace(/\\/g, '');
	}

	function makeFormatFunction(format) {
	    var array = format.match(formattingTokens), i, length;

	    for (i = 0, length = array.length; i < length; i++) {
	        if (formatTokenFunctions[array[i]]) {
	            array[i] = formatTokenFunctions[array[i]];
	        } else {
	            array[i] = removeFormattingTokens(array[i]);
	        }
	    }

	    return function (mom) {
	        var output = '', i;
	        for (i = 0; i < length; i++) {
	            output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];
	        }
	        return output;
	    };
	}

	// format date using native date object
	function formatMoment(m, format) {
	    if (!m.isValid()) {
	        return m.localeData().invalidDate();
	    }

	    format = expandFormat(format, m.localeData());
	    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);

	    return formatFunctions[format](m);
	}

	function expandFormat(format, locale) {
	    var i = 5;

	    function replaceLongDateFormatTokens(input) {
	        return locale.longDateFormat(input) || input;
	    }

	    localFormattingTokens.lastIndex = 0;
	    while (i >= 0 && localFormattingTokens.test(format)) {
	        format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
	        localFormattingTokens.lastIndex = 0;
	        i -= 1;
	    }

	    return format;
	}

	var match1         = /\d/;            //       0 - 9
	var match2         = /\d\d/;          //      00 - 99
	var match3         = /\d{3}/;         //     000 - 999
	var match4         = /\d{4}/;         //    0000 - 9999
	var match6         = /[+-]?\d{6}/;    // -999999 - 999999
	var match1to2      = /\d\d?/;         //       0 - 99
	var match3to4      = /\d\d\d\d?/;     //     999 - 9999
	var match5to6      = /\d\d\d\d\d\d?/; //   99999 - 999999
	var match1to3      = /\d{1,3}/;       //       0 - 999
	var match1to4      = /\d{1,4}/;       //       0 - 9999
	var match1to6      = /[+-]?\d{1,6}/;  // -999999 - 999999

	var matchUnsigned  = /\d+/;           //       0 - inf
	var matchSigned    = /[+-]?\d+/;      //    -inf - inf

	var matchOffset    = /Z|[+-]\d\d:?\d\d/gi; // +00:00 -00:00 +0000 -0000 or Z
	var matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z

	var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/; // 123456789 123456789.123

	// any word (or two) characters or numbers including two/three word month in arabic.
	// includes scottish gaelic two word and hyphenated months
	var matchWord = /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i;


	var regexes = {};

	function addRegexToken (token, regex, strictRegex) {
	    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {
	        return (isStrict && strictRegex) ? strictRegex : regex;
	    };
	}

	function getParseRegexForToken (token, config) {
	    if (!hasOwnProp(regexes, token)) {
	        return new RegExp(unescapeFormat(token));
	    }

	    return regexes[token](config._strict, config._locale);
	}

	// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
	function unescapeFormat(s) {
	    return regexEscape(s.replace('\\', '').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
	        return p1 || p2 || p3 || p4;
	    }));
	}

	function regexEscape(s) {
	    return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
	}

	var tokens = {};

	function addParseToken (token, callback) {
	    var i, func = callback;
	    if (typeof token === 'string') {
	        token = [token];
	    }
	    if (isNumber(callback)) {
	        func = function (input, array) {
	            array[callback] = toInt(input);
	        };
	    }
	    for (i = 0; i < token.length; i++) {
	        tokens[token[i]] = func;
	    }
	}

	function addWeekParseToken (token, callback) {
	    addParseToken(token, function (input, array, config, token) {
	        config._w = config._w || {};
	        callback(input, config._w, config, token);
	    });
	}

	function addTimeToArrayFromToken(token, input, config) {
	    if (input != null && hasOwnProp(tokens, token)) {
	        tokens[token](input, config._a, config, token);
	    }
	}

	var YEAR = 0;
	var MONTH = 1;
	var DATE = 2;
	var HOUR = 3;
	var MINUTE = 4;
	var SECOND = 5;
	var MILLISECOND = 6;
	var WEEK = 7;
	var WEEKDAY = 8;

	var indexOf;

	if (Array.prototype.indexOf) {
	    indexOf = Array.prototype.indexOf;
	} else {
	    indexOf = function (o) {
	        // I know
	        var i;
	        for (i = 0; i < this.length; ++i) {
	            if (this[i] === o) {
	                return i;
	            }
	        }
	        return -1;
	    };
	}

	var indexOf$1 = indexOf;

	function daysInMonth(year, month) {
	    return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();
	}

	// FORMATTING

	addFormatToken('M', ['MM', 2], 'Mo', function () {
	    return this.month() + 1;
	});

	addFormatToken('MMM', 0, 0, function (format) {
	    return this.localeData().monthsShort(this, format);
	});

	addFormatToken('MMMM', 0, 0, function (format) {
	    return this.localeData().months(this, format);
	});

	// ALIASES

	addUnitAlias('month', 'M');

	// PRIORITY

	addUnitPriority('month', 8);

	// PARSING

	addRegexToken('M',    match1to2);
	addRegexToken('MM',   match1to2, match2);
	addRegexToken('MMM',  function (isStrict, locale) {
	    return locale.monthsShortRegex(isStrict);
	});
	addRegexToken('MMMM', function (isStrict, locale) {
	    return locale.monthsRegex(isStrict);
	});

	addParseToken(['M', 'MM'], function (input, array) {
	    array[MONTH] = toInt(input) - 1;
	});

	addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
	    var month = config._locale.monthsParse(input, token, config._strict);
	    // if we didn't find a month name, mark the date as invalid.
	    if (month != null) {
	        array[MONTH] = month;
	    } else {
	        getParsingFlags(config).invalidMonth = input;
	    }
	});

	// LOCALES

	var MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;
	var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');
	function localeMonths (m, format) {
	    if (!m) {
	        return this._months;
	    }
	    return isArray(this._months) ? this._months[m.month()] :
	        this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];
	}

	var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');
	function localeMonthsShort (m, format) {
	    if (!m) {
	        return this._monthsShort;
	    }
	    return isArray(this._monthsShort) ? this._monthsShort[m.month()] :
	        this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];
	}

	function handleStrictParse(monthName, format, strict) {
	    var i, ii, mom, llc = monthName.toLocaleLowerCase();
	    if (!this._monthsParse) {
	        // this is not used
	        this._monthsParse = [];
	        this._longMonthsParse = [];
	        this._shortMonthsParse = [];
	        for (i = 0; i < 12; ++i) {
	            mom = createUTC([2000, i]);
	            this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();
	            this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
	        }
	    }

	    if (strict) {
	        if (format === 'MMM') {
	            ii = indexOf$1.call(this._shortMonthsParse, llc);
	            return ii !== -1 ? ii : null;
	        } else {
	            ii = indexOf$1.call(this._longMonthsParse, llc);
	            return ii !== -1 ? ii : null;
	        }
	    } else {
	        if (format === 'MMM') {
	            ii = indexOf$1.call(this._shortMonthsParse, llc);
	            if (ii !== -1) {
	                return ii;
	            }
	            ii = indexOf$1.call(this._longMonthsParse, llc);
	            return ii !== -1 ? ii : null;
	        } else {
	            ii = indexOf$1.call(this._longMonthsParse, llc);
	            if (ii !== -1) {
	                return ii;
	            }
	            ii = indexOf$1.call(this._shortMonthsParse, llc);
	            return ii !== -1 ? ii : null;
	        }
	    }
	}

	function localeMonthsParse (monthName, format, strict) {
	    var i, mom, regex;

	    if (this._monthsParseExact) {
	        return handleStrictParse.call(this, monthName, format, strict);
	    }

	    if (!this._monthsParse) {
	        this._monthsParse = [];
	        this._longMonthsParse = [];
	        this._shortMonthsParse = [];
	    }

	    // TODO: add sorting
	    // Sorting makes sure if one month (or abbr) is a prefix of another
	    // see sorting in computeMonthsParse
	    for (i = 0; i < 12; i++) {
	        // make the regex if we don't have it already
	        mom = createUTC([2000, i]);
	        if (strict && !this._longMonthsParse[i]) {
	            this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');
	            this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');
	        }
	        if (!strict && !this._monthsParse[i]) {
	            regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
	            this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
	        }
	        // test the regex
	        if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {
	            return i;
	        } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {
	            return i;
	        } else if (!strict && this._monthsParse[i].test(monthName)) {
	            return i;
	        }
	    }
	}

	// MOMENTS

	function setMonth (mom, value) {
	    var dayOfMonth;

	    if (!mom.isValid()) {
	        // No op
	        return mom;
	    }

	    if (typeof value === 'string') {
	        if (/^\d+$/.test(value)) {
	            value = toInt(value);
	        } else {
	            value = mom.localeData().monthsParse(value);
	            // TODO: Another silent failure?
	            if (!isNumber(value)) {
	                return mom;
	            }
	        }
	    }

	    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
	    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
	    return mom;
	}

	function getSetMonth (value) {
	    if (value != null) {
	        setMonth(this, value);
	        hooks.updateOffset(this, true);
	        return this;
	    } else {
	        return get(this, 'Month');
	    }
	}

	function getDaysInMonth () {
	    return daysInMonth(this.year(), this.month());
	}

	var defaultMonthsShortRegex = matchWord;
	function monthsShortRegex (isStrict) {
	    if (this._monthsParseExact) {
	        if (!hasOwnProp(this, '_monthsRegex')) {
	            computeMonthsParse.call(this);
	        }
	        if (isStrict) {
	            return this._monthsShortStrictRegex;
	        } else {
	            return this._monthsShortRegex;
	        }
	    } else {
	        if (!hasOwnProp(this, '_monthsShortRegex')) {
	            this._monthsShortRegex = defaultMonthsShortRegex;
	        }
	        return this._monthsShortStrictRegex && isStrict ?
	            this._monthsShortStrictRegex : this._monthsShortRegex;
	    }
	}

	var defaultMonthsRegex = matchWord;
	function monthsRegex (isStrict) {
	    if (this._monthsParseExact) {
	        if (!hasOwnProp(this, '_monthsRegex')) {
	            computeMonthsParse.call(this);
	        }
	        if (isStrict) {
	            return this._monthsStrictRegex;
	        } else {
	            return this._monthsRegex;
	        }
	    } else {
	        if (!hasOwnProp(this, '_monthsRegex')) {
	            this._monthsRegex = defaultMonthsRegex;
	        }
	        return this._monthsStrictRegex && isStrict ?
	            this._monthsStrictRegex : this._monthsRegex;
	    }
	}

	function computeMonthsParse () {
	    function cmpLenRev(a, b) {
	        return b.length - a.length;
	    }

	    var shortPieces = [], longPieces = [], mixedPieces = [],
	        i, mom;
	    for (i = 0; i < 12; i++) {
	        // make the regex if we don't have it already
	        mom = createUTC([2000, i]);
	        shortPieces.push(this.monthsShort(mom, ''));
	        longPieces.push(this.months(mom, ''));
	        mixedPieces.push(this.months(mom, ''));
	        mixedPieces.push(this.monthsShort(mom, ''));
	    }
	    // Sorting makes sure if one month (or abbr) is a prefix of another it
	    // will match the longer piece.
	    shortPieces.sort(cmpLenRev);
	    longPieces.sort(cmpLenRev);
	    mixedPieces.sort(cmpLenRev);
	    for (i = 0; i < 12; i++) {
	        shortPieces[i] = regexEscape(shortPieces[i]);
	        longPieces[i] = regexEscape(longPieces[i]);
	    }
	    for (i = 0; i < 24; i++) {
	        mixedPieces[i] = regexEscape(mixedPieces[i]);
	    }

	    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
	    this._monthsShortRegex = this._monthsRegex;
	    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
	    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
	}

	// FORMATTING

	addFormatToken('Y', 0, 0, function () {
	    var y = this.year();
	    return y <= 9999 ? '' + y : '+' + y;
	});

	addFormatToken(0, ['YY', 2], 0, function () {
	    return this.year() % 100;
	});

	addFormatToken(0, ['YYYY',   4],       0, 'year');
	addFormatToken(0, ['YYYYY',  5],       0, 'year');
	addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

	// ALIASES

	addUnitAlias('year', 'y');

	// PRIORITIES

	addUnitPriority('year', 1);

	// PARSING

	addRegexToken('Y',      matchSigned);
	addRegexToken('YY',     match1to2, match2);
	addRegexToken('YYYY',   match1to4, match4);
	addRegexToken('YYYYY',  match1to6, match6);
	addRegexToken('YYYYYY', match1to6, match6);

	addParseToken(['YYYYY', 'YYYYYY'], YEAR);
	addParseToken('YYYY', function (input, array) {
	    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
	});
	addParseToken('YY', function (input, array) {
	    array[YEAR] = hooks.parseTwoDigitYear(input);
	});
	addParseToken('Y', function (input, array) {
	    array[YEAR] = parseInt(input, 10);
	});

	// HELPERS

	function daysInYear(year) {
	    return isLeapYear(year) ? 366 : 365;
	}

	function isLeapYear(year) {
	    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
	}

	// HOOKS

	hooks.parseTwoDigitYear = function (input) {
	    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
	};

	// MOMENTS

	var getSetYear = makeGetSet('FullYear', true);

	function getIsLeapYear () {
	    return isLeapYear(this.year());
	}

	function createDate (y, m, d, h, M, s, ms) {
	    //can't just apply() to create a date:
	    //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply
	    var date = new Date(y, m, d, h, M, s, ms);

	    //the date constructor remaps years 0-99 to 1900-1999
	    if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {
	        date.setFullYear(y);
	    }
	    return date;
	}

	function createUTCDate (y) {
	    var date = new Date(Date.UTC.apply(null, arguments));

	    //the Date.UTC function remaps years 0-99 to 1900-1999
	    if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {
	        date.setUTCFullYear(y);
	    }
	    return date;
	}

	// start-of-first-week - start-of-year
	function firstWeekOffset(year, dow, doy) {
	    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
	        fwd = 7 + dow - doy,
	        // first-week day local weekday -- which local weekday is fwd
	        fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;

	    return -fwdlw + fwd - 1;
	}

	//http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
	function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
	    var localWeekday = (7 + weekday - dow) % 7,
	        weekOffset = firstWeekOffset(year, dow, doy),
	        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
	        resYear, resDayOfYear;

	    if (dayOfYear <= 0) {
	        resYear = year - 1;
	        resDayOfYear = daysInYear(resYear) + dayOfYear;
	    } else if (dayOfYear > daysInYear(year)) {
	        resYear = year + 1;
	        resDayOfYear = dayOfYear - daysInYear(year);
	    } else {
	        resYear = year;
	        resDayOfYear = dayOfYear;
	    }

	    return {
	        year: resYear,
	        dayOfYear: resDayOfYear
	    };
	}

	function weekOfYear(mom, dow, doy) {
	    var weekOffset = firstWeekOffset(mom.year(), dow, doy),
	        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
	        resWeek, resYear;

	    if (week < 1) {
	        resYear = mom.year() - 1;
	        resWeek = week + weeksInYear(resYear, dow, doy);
	    } else if (week > weeksInYear(mom.year(), dow, doy)) {
	        resWeek = week - weeksInYear(mom.year(), dow, doy);
	        resYear = mom.year() + 1;
	    } else {
	        resYear = mom.year();
	        resWeek = week;
	    }

	    return {
	        week: resWeek,
	        year: resYear
	    };
	}

	function weeksInYear(year, dow, doy) {
	    var weekOffset = firstWeekOffset(year, dow, doy),
	        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
	    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
	}

	// FORMATTING

	addFormatToken('w', ['ww', 2], 'wo', 'week');
	addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

	// ALIASES

	addUnitAlias('week', 'w');
	addUnitAlias('isoWeek', 'W');

	// PRIORITIES

	addUnitPriority('week', 5);
	addUnitPriority('isoWeek', 5);

	// PARSING

	addRegexToken('w',  match1to2);
	addRegexToken('ww', match1to2, match2);
	addRegexToken('W',  match1to2);
	addRegexToken('WW', match1to2, match2);

	addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {
	    week[token.substr(0, 1)] = toInt(input);
	});

	// HELPERS

	// LOCALES

	function localeWeek (mom) {
	    return weekOfYear(mom, this._week.dow, this._week.doy).week;
	}

	var defaultLocaleWeek = {
	    dow : 0, // Sunday is the first day of the week.
	    doy : 6  // The week that contains Jan 1st is the first week of the year.
	};

	function localeFirstDayOfWeek () {
	    return this._week.dow;
	}

	function localeFirstDayOfYear () {
	    return this._week.doy;
	}

	// MOMENTS

	function getSetWeek (input) {
	    var week = this.localeData().week(this);
	    return input == null ? week : this.add((input - week) * 7, 'd');
	}

	function getSetISOWeek (input) {
	    var week = weekOfYear(this, 1, 4).week;
	    return input == null ? week : this.add((input - week) * 7, 'd');
	}

	// FORMATTING

	addFormatToken('d', 0, 'do', 'day');

	addFormatToken('dd', 0, 0, function (format) {
	    return this.localeData().weekdaysMin(this, format);
	});

	addFormatToken('ddd', 0, 0, function (format) {
	    return this.localeData().weekdaysShort(this, format);
	});

	addFormatToken('dddd', 0, 0, function (format) {
	    return this.localeData().weekdays(this, format);
	});

	addFormatToken('e', 0, 0, 'weekday');
	addFormatToken('E', 0, 0, 'isoWeekday');

	// ALIASES

	addUnitAlias('day', 'd');
	addUnitAlias('weekday', 'e');
	addUnitAlias('isoWeekday', 'E');

	// PRIORITY
	addUnitPriority('day', 11);
	addUnitPriority('weekday', 11);
	addUnitPriority('isoWeekday', 11);

	// PARSING

	addRegexToken('d',    match1to2);
	addRegexToken('e',    match1to2);
	addRegexToken('E',    match1to2);
	addRegexToken('dd',   function (isStrict, locale) {
	    return locale.weekdaysMinRegex(isStrict);
	});
	addRegexToken('ddd',   function (isStrict, locale) {
	    return locale.weekdaysShortRegex(isStrict);
	});
	addRegexToken('dddd',   function (isStrict, locale) {
	    return locale.weekdaysRegex(isStrict);
	});

	addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
	    var weekday = config._locale.weekdaysParse(input, token, config._strict);
	    // if we didn't get a weekday name, mark the date as invalid
	    if (weekday != null) {
	        week.d = weekday;
	    } else {
	        getParsingFlags(config).invalidWeekday = input;
	    }
	});

	addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
	    week[token] = toInt(input);
	});

	// HELPERS

	function parseWeekday(input, locale) {
	    if (typeof input !== 'string') {
	        return input;
	    }

	    if (!isNaN(input)) {
	        return parseInt(input, 10);
	    }

	    input = locale.weekdaysParse(input);
	    if (typeof input === 'number') {
	        return input;
	    }

	    return null;
	}

	function parseIsoWeekday(input, locale) {
	    if (typeof input === 'string') {
	        return locale.weekdaysParse(input) % 7 || 7;
	    }
	    return isNaN(input) ? null : input;
	}

	// LOCALES

	var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');
	function localeWeekdays (m, format) {
	    if (!m) {
	        return this._weekdays;
	    }
	    return isArray(this._weekdays) ? this._weekdays[m.day()] :
	        this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];
	}

	var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');
	function localeWeekdaysShort (m) {
	    return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;
	}

	var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');
	function localeWeekdaysMin (m) {
	    return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;
	}

	function handleStrictParse$1(weekdayName, format, strict) {
	    var i, ii, mom, llc = weekdayName.toLocaleLowerCase();
	    if (!this._weekdaysParse) {
	        this._weekdaysParse = [];
	        this._shortWeekdaysParse = [];
	        this._minWeekdaysParse = [];

	        for (i = 0; i < 7; ++i) {
	            mom = createUTC([2000, 1]).day(i);
	            this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();
	            this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();
	            this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
	        }
	    }

	    if (strict) {
	        if (format === 'dddd') {
	            ii = indexOf$1.call(this._weekdaysParse, llc);
	            return ii !== -1 ? ii : null;
	        } else if (format === 'ddd') {
	            ii = indexOf$1.call(this._shortWeekdaysParse, llc);
	            return ii !== -1 ? ii : null;
	        } else {
	            ii = indexOf$1.call(this._minWeekdaysParse, llc);
	            return ii !== -1 ? ii : null;
	        }
	    } else {
	        if (format === 'dddd') {
	            ii = indexOf$1.call(this._weekdaysParse, llc);
	            if (ii !== -1) {
	                return ii;
	            }
	            ii = indexOf$1.call(this._shortWeekdaysParse, llc);
	            if (ii !== -1) {
	                return ii;
	            }
	            ii = indexOf$1.call(this._minWeekdaysParse, llc);
	            return ii !== -1 ? ii : null;
	        } else if (format === 'ddd') {
	            ii = indexOf$1.call(this._shortWeekdaysParse, llc);
	            if (ii !== -1) {
	                return ii;
	            }
	            ii = indexOf$1.call(this._weekdaysParse, llc);
	            if (ii !== -1) {
	                return ii;
	            }
	            ii = indexOf$1.call(this._minWeekdaysParse, llc);
	            return ii !== -1 ? ii : null;
	        } else {
	            ii = indexOf$1.call(this._minWeekdaysParse, llc);
	            if (ii !== -1) {
	                return ii;
	            }
	            ii = indexOf$1.call(this._weekdaysParse, llc);
	            if (ii !== -1) {
	                return ii;
	            }
	            ii = indexOf$1.call(this._shortWeekdaysParse, llc);
	            return ii !== -1 ? ii : null;
	        }
	    }
	}

	function localeWeekdaysParse (weekdayName, format, strict) {
	    var i, mom, regex;

	    if (this._weekdaysParseExact) {
	        return handleStrictParse$1.call(this, weekdayName, format, strict);
	    }

	    if (!this._weekdaysParse) {
	        this._weekdaysParse = [];
	        this._minWeekdaysParse = [];
	        this._shortWeekdaysParse = [];
	        this._fullWeekdaysParse = [];
	    }

	    for (i = 0; i < 7; i++) {
	        // make the regex if we don't have it already

	        mom = createUTC([2000, 1]).day(i);
	        if (strict && !this._fullWeekdaysParse[i]) {
	            this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\.?') + '$', 'i');
	            this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\.?') + '$', 'i');
	            this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\.?') + '$', 'i');
	        }
	        if (!this._weekdaysParse[i]) {
	            regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
	            this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
	        }
	        // test the regex
	        if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {
	            return i;
	        } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {
	            return i;
	        } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {
	            return i;
	        } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
	            return i;
	        }
	    }
	}

	// MOMENTS

	function getSetDayOfWeek (input) {
	    if (!this.isValid()) {
	        return input != null ? this : NaN;
	    }
	    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
	    if (input != null) {
	        input = parseWeekday(input, this.localeData());
	        return this.add(input - day, 'd');
	    } else {
	        return day;
	    }
	}

	function getSetLocaleDayOfWeek (input) {
	    if (!this.isValid()) {
	        return input != null ? this : NaN;
	    }
	    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
	    return input == null ? weekday : this.add(input - weekday, 'd');
	}

	function getSetISODayOfWeek (input) {
	    if (!this.isValid()) {
	        return input != null ? this : NaN;
	    }

	    // behaves the same as moment#day except
	    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
	    // as a setter, sunday should belong to the previous week.

	    if (input != null) {
	        var weekday = parseIsoWeekday(input, this.localeData());
	        return this.day(this.day() % 7 ? weekday : weekday - 7);
	    } else {
	        return this.day() || 7;
	    }
	}

	var defaultWeekdaysRegex = matchWord;
	function weekdaysRegex (isStrict) {
	    if (this._weekdaysParseExact) {
	        if (!hasOwnProp(this, '_weekdaysRegex')) {
	            computeWeekdaysParse.call(this);
	        }
	        if (isStrict) {
	            return this._weekdaysStrictRegex;
	        } else {
	            return this._weekdaysRegex;
	        }
	    } else {
	        if (!hasOwnProp(this, '_weekdaysRegex')) {
	            this._weekdaysRegex = defaultWeekdaysRegex;
	        }
	        return this._weekdaysStrictRegex && isStrict ?
	            this._weekdaysStrictRegex : this._weekdaysRegex;
	    }
	}

	var defaultWeekdaysShortRegex = matchWord;
	function weekdaysShortRegex (isStrict) {
	    if (this._weekdaysParseExact) {
	        if (!hasOwnProp(this, '_weekdaysRegex')) {
	            computeWeekdaysParse.call(this);
	        }
	        if (isStrict) {
	            return this._weekdaysShortStrictRegex;
	        } else {
	            return this._weekdaysShortRegex;
	        }
	    } else {
	        if (!hasOwnProp(this, '_weekdaysShortRegex')) {
	            this._weekdaysShortRegex = defaultWeekdaysShortRegex;
	        }
	        return this._weekdaysShortStrictRegex && isStrict ?
	            this._weekdaysShortStrictRegex : this._weekdaysShortRegex;
	    }
	}

	var defaultWeekdaysMinRegex = matchWord;
	function weekdaysMinRegex (isStrict) {
	    if (this._weekdaysParseExact) {
	        if (!hasOwnProp(this, '_weekdaysRegex')) {
	            computeWeekdaysParse.call(this);
	        }
	        if (isStrict) {
	            return this._weekdaysMinStrictRegex;
	        } else {
	            return this._weekdaysMinRegex;
	        }
	    } else {
	        if (!hasOwnProp(this, '_weekdaysMinRegex')) {
	            this._weekdaysMinRegex = defaultWeekdaysMinRegex;
	        }
	        return this._weekdaysMinStrictRegex && isStrict ?
	            this._weekdaysMinStrictRegex : this._weekdaysMinRegex;
	    }
	}


	function computeWeekdaysParse () {
	    function cmpLenRev(a, b) {
	        return b.length - a.length;
	    }

	    var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],
	        i, mom, minp, shortp, longp;
	    for (i = 0; i < 7; i++) {
	        // make the regex if we don't have it already
	        mom = createUTC([2000, 1]).day(i);
	        minp = this.weekdaysMin(mom, '');
	        shortp = this.weekdaysShort(mom, '');
	        longp = this.weekdays(mom, '');
	        minPieces.push(minp);
	        shortPieces.push(shortp);
	        longPieces.push(longp);
	        mixedPieces.push(minp);
	        mixedPieces.push(shortp);
	        mixedPieces.push(longp);
	    }
	    // Sorting makes sure if one weekday (or abbr) is a prefix of another it
	    // will match the longer piece.
	    minPieces.sort(cmpLenRev);
	    shortPieces.sort(cmpLenRev);
	    longPieces.sort(cmpLenRev);
	    mixedPieces.sort(cmpLenRev);
	    for (i = 0; i < 7; i++) {
	        shortPieces[i] = regexEscape(shortPieces[i]);
	        longPieces[i] = regexEscape(longPieces[i]);
	        mixedPieces[i] = regexEscape(mixedPieces[i]);
	    }

	    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
	    this._weekdaysShortRegex = this._weekdaysRegex;
	    this._weekdaysMinRegex = this._weekdaysRegex;

	    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
	    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
	    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');
	}

	// FORMATTING

	function hFormat() {
	    return this.hours() % 12 || 12;
	}

	function kFormat() {
	    return this.hours() || 24;
	}

	addFormatToken('H', ['HH', 2], 0, 'hour');
	addFormatToken('h', ['hh', 2], 0, hFormat);
	addFormatToken('k', ['kk', 2], 0, kFormat);

	addFormatToken('hmm', 0, 0, function () {
	    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
	});

	addFormatToken('hmmss', 0, 0, function () {
	    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +
	        zeroFill(this.seconds(), 2);
	});

	addFormatToken('Hmm', 0, 0, function () {
	    return '' + this.hours() + zeroFill(this.minutes(), 2);
	});

	addFormatToken('Hmmss', 0, 0, function () {
	    return '' + this.hours() + zeroFill(this.minutes(), 2) +
	        zeroFill(this.seconds(), 2);
	});

	function meridiem (token, lowercase) {
	    addFormatToken(token, 0, 0, function () {
	        return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);
	    });
	}

	meridiem('a', true);
	meridiem('A', false);

	// ALIASES

	addUnitAlias('hour', 'h');

	// PRIORITY
	addUnitPriority('hour', 13);

	// PARSING

	function matchMeridiem (isStrict, locale) {
	    return locale._meridiemParse;
	}

	addRegexToken('a',  matchMeridiem);
	addRegexToken('A',  matchMeridiem);
	addRegexToken('H',  match1to2);
	addRegexToken('h',  match1to2);
	addRegexToken('HH', match1to2, match2);
	addRegexToken('hh', match1to2, match2);

	addRegexToken('hmm', match3to4);
	addRegexToken('hmmss', match5to6);
	addRegexToken('Hmm', match3to4);
	addRegexToken('Hmmss', match5to6);

	addParseToken(['H', 'HH'], HOUR);
	addParseToken(['a', 'A'], function (input, array, config) {
	    config._isPm = config._locale.isPM(input);
	    config._meridiem = input;
	});
	addParseToken(['h', 'hh'], function (input, array, config) {
	    array[HOUR] = toInt(input);
	    getParsingFlags(config).bigHour = true;
	});
	addParseToken('hmm', function (input, array, config) {
	    var pos = input.length - 2;
	    array[HOUR] = toInt(input.substr(0, pos));
	    array[MINUTE] = toInt(input.substr(pos));
	    getParsingFlags(config).bigHour = true;
	});
	addParseToken('hmmss', function (input, array, config) {
	    var pos1 = input.length - 4;
	    var pos2 = input.length - 2;
	    array[HOUR] = toInt(input.substr(0, pos1));
	    array[MINUTE] = toInt(input.substr(pos1, 2));
	    array[SECOND] = toInt(input.substr(pos2));
	    getParsingFlags(config).bigHour = true;
	});
	addParseToken('Hmm', function (input, array, config) {
	    var pos = input.length - 2;
	    array[HOUR] = toInt(input.substr(0, pos));
	    array[MINUTE] = toInt(input.substr(pos));
	});
	addParseToken('Hmmss', function (input, array, config) {
	    var pos1 = input.length - 4;
	    var pos2 = input.length - 2;
	    array[HOUR] = toInt(input.substr(0, pos1));
	    array[MINUTE] = toInt(input.substr(pos1, 2));
	    array[SECOND] = toInt(input.substr(pos2));
	});

	// LOCALES

	function localeIsPM (input) {
	    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
	    // Using charAt should be more compatible.
	    return ((input + '').toLowerCase().charAt(0) === 'p');
	}

	var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;
	function localeMeridiem (hours, minutes, isLower) {
	    if (hours > 11) {
	        return isLower ? 'pm' : 'PM';
	    } else {
	        return isLower ? 'am' : 'AM';
	    }
	}


	// MOMENTS

	// Setting the hour should keep the time, because the user explicitly
	// specified which hour he wants. So trying to maintain the same hour (in
	// a new timezone) makes sense. Adding/subtracting hours does not follow
	// this rule.
	var getSetHour = makeGetSet('Hours', true);

	// months
	// week
	// weekdays
	// meridiem
	var baseConfig = {
	    calendar: defaultCalendar,
	    longDateFormat: defaultLongDateFormat,
	    invalidDate: defaultInvalidDate,
	    ordinal: defaultOrdinal,
	    ordinalParse: defaultOrdinalParse,
	    relativeTime: defaultRelativeTime,

	    months: defaultLocaleMonths,
	    monthsShort: defaultLocaleMonthsShort,

	    week: defaultLocaleWeek,

	    weekdays: defaultLocaleWeekdays,
	    weekdaysMin: defaultLocaleWeekdaysMin,
	    weekdaysShort: defaultLocaleWeekdaysShort,

	    meridiemParse: defaultLocaleMeridiemParse
	};

	// internal storage for locale config files
	var locales = {};
	var localeFamilies = {};
	var globalLocale;

	function normalizeLocale(key) {
	    return key ? key.toLowerCase().replace('_', '-') : key;
	}

	// pick the locale from the array
	// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
	// substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
	function chooseLocale(names) {
	    var i = 0, j, next, locale, split;

	    while (i < names.length) {
	        split = normalizeLocale(names[i]).split('-');
	        j = split.length;
	        next = normalizeLocale(names[i + 1]);
	        next = next ? next.split('-') : null;
	        while (j > 0) {
	            locale = loadLocale(split.slice(0, j).join('-'));
	            if (locale) {
	                return locale;
	            }
	            if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
	                //the next array item is better than a shallower substring of this one
	                break;
	            }
	            j--;
	        }
	        i++;
	    }
	    return null;
	}

	function loadLocale(name) {
	    var oldLocale = null;
	    // TODO: Find a better way to register and load all the locales in Node
	    if (!locales[name] && (typeof module !== 'undefined') &&
	            module && module.exports) {
	        try {
	            oldLocale = globalLocale._abbr;
	            __webpack_require__(310)("./" + name);
	            // because defineLocale currently also sets the global locale, we
	            // want to undo that for lazy loaded locales
	            getSetGlobalLocale(oldLocale);
	        } catch (e) { }
	    }
	    return locales[name];
	}

	// This function will load locale and then set the global locale.  If
	// no arguments are passed in, it will simply return the current global
	// locale key.
	function getSetGlobalLocale (key, values) {
	    var data;
	    if (key) {
	        if (isUndefined(values)) {
	            data = getLocale(key);
	        }
	        else {
	            data = defineLocale(key, values);
	        }

	        if (data) {
	            // moment.duration._locale = moment._locale = data;
	            globalLocale = data;
	        }
	    }

	    return globalLocale._abbr;
	}

	function defineLocale (name, config) {
	    if (config !== null) {
	        var parentConfig = baseConfig;
	        config.abbr = name;
	        if (locales[name] != null) {
	            deprecateSimple('defineLocaleOverride',
	                    'use moment.updateLocale(localeName, config) to change ' +
	                    'an existing locale. moment.defineLocale(localeName, ' +
	                    'config) should only be used for creating a new locale ' +
	                    'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');
	            parentConfig = locales[name]._config;
	        } else if (config.parentLocale != null) {
	            if (locales[config.parentLocale] != null) {
	                parentConfig = locales[config.parentLocale]._config;
	            } else {
	                if (!localeFamilies[config.parentLocale]) {
	                    localeFamilies[config.parentLocale] = [];
	                }
	                localeFamilies[config.parentLocale].push({
	                    name: name,
	                    config: config
	                });
	                return null;
	            }
	        }
	        locales[name] = new Locale(mergeConfigs(parentConfig, config));

	        if (localeFamilies[name]) {
	            localeFamilies[name].forEach(function (x) {
	                defineLocale(x.name, x.config);
	            });
	        }

	        // backwards compat for now: also set the locale
	        // make sure we set the locale AFTER all child locales have been
	        // created, so we won't end up with the child locale set.
	        getSetGlobalLocale(name);


	        return locales[name];
	    } else {
	        // useful for testing
	        delete locales[name];
	        return null;
	    }
	}

	function updateLocale(name, config) {
	    if (config != null) {
	        var locale, parentConfig = baseConfig;
	        // MERGE
	        if (locales[name] != null) {
	            parentConfig = locales[name]._config;
	        }
	        config = mergeConfigs(parentConfig, config);
	        locale = new Locale(config);
	        locale.parentLocale = locales[name];
	        locales[name] = locale;

	        // backwards compat for now: also set the locale
	        getSetGlobalLocale(name);
	    } else {
	        // pass null for config to unupdate, useful for tests
	        if (locales[name] != null) {
	            if (locales[name].parentLocale != null) {
	                locales[name] = locales[name].parentLocale;
	            } else if (locales[name] != null) {
	                delete locales[name];
	            }
	        }
	    }
	    return locales[name];
	}

	// returns locale data
	function getLocale (key) {
	    var locale;

	    if (key && key._locale && key._locale._abbr) {
	        key = key._locale._abbr;
	    }

	    if (!key) {
	        return globalLocale;
	    }

	    if (!isArray(key)) {
	        //short-circuit everything else
	        locale = loadLocale(key);
	        if (locale) {
	            return locale;
	        }
	        key = [key];
	    }

	    return chooseLocale(key);
	}

	function listLocales() {
	    return keys$1(locales);
	}

	function checkOverflow (m) {
	    var overflow;
	    var a = m._a;

	    if (a && getParsingFlags(m).overflow === -2) {
	        overflow =
	            a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :
	            a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :
	            a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :
	            a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :
	            a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :
	            a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :
	            -1;

	        if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
	            overflow = DATE;
	        }
	        if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
	            overflow = WEEK;
	        }
	        if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
	            overflow = WEEKDAY;
	        }

	        getParsingFlags(m).overflow = overflow;
	    }

	    return m;
	}

	// iso 8601 regex
	// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
	var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
	var basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;

	var tzRegex = /Z|[+-]\d\d(?::?\d\d)?/;

	var isoDates = [
	    ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
	    ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
	    ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
	    ['GGGG-[W]WW', /\d{4}-W\d\d/, false],
	    ['YYYY-DDD', /\d{4}-\d{3}/],
	    ['YYYY-MM', /\d{4}-\d\d/, false],
	    ['YYYYYYMMDD', /[+-]\d{10}/],
	    ['YYYYMMDD', /\d{8}/],
	    // YYYYMM is NOT allowed by the standard
	    ['GGGG[W]WWE', /\d{4}W\d{3}/],
	    ['GGGG[W]WW', /\d{4}W\d{2}/, false],
	    ['YYYYDDD', /\d{7}/]
	];

	// iso time formats and regexes
	var isoTimes = [
	    ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
	    ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
	    ['HH:mm:ss', /\d\d:\d\d:\d\d/],
	    ['HH:mm', /\d\d:\d\d/],
	    ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
	    ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
	    ['HHmmss', /\d\d\d\d\d\d/],
	    ['HHmm', /\d\d\d\d/],
	    ['HH', /\d\d/]
	];

	var aspNetJsonRegex = /^\/?Date\((\-?\d+)/i;

	// date from iso format
	function configFromISO(config) {
	    var i, l,
	        string = config._i,
	        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
	        allowTime, dateFormat, timeFormat, tzFormat;

	    if (match) {
	        getParsingFlags(config).iso = true;

	        for (i = 0, l = isoDates.length; i < l; i++) {
	            if (isoDates[i][1].exec(match[1])) {
	                dateFormat = isoDates[i][0];
	                allowTime = isoDates[i][2] !== false;
	                break;
	            }
	        }
	        if (dateFormat == null) {
	            config._isValid = false;
	            return;
	        }
	        if (match[3]) {
	            for (i = 0, l = isoTimes.length; i < l; i++) {
	                if (isoTimes[i][1].exec(match[3])) {
	                    // match[2] should be 'T' or space
	                    timeFormat = (match[2] || ' ') + isoTimes[i][0];
	                    break;
	                }
	            }
	            if (timeFormat == null) {
	                config._isValid = false;
	                return;
	            }
	        }
	        if (!allowTime && timeFormat != null) {
	            config._isValid = false;
	            return;
	        }
	        if (match[4]) {
	            if (tzRegex.exec(match[4])) {
	                tzFormat = 'Z';
	            } else {
	                config._isValid = false;
	                return;
	            }
	        }
	        config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
	        configFromStringAndFormat(config);
	    } else {
	        config._isValid = false;
	    }
	}

	// date from iso format or fallback
	function configFromString(config) {
	    var matched = aspNetJsonRegex.exec(config._i);

	    if (matched !== null) {
	        config._d = new Date(+matched[1]);
	        return;
	    }

	    configFromISO(config);
	    if (config._isValid === false) {
	        delete config._isValid;
	        hooks.createFromInputFallback(config);
	    }
	}

	hooks.createFromInputFallback = deprecate(
	    'value provided is not in a recognized ISO format. moment construction falls back to js Date(), ' +
	    'which is not reliable across all browsers and versions. Non ISO date formats are ' +
	    'discouraged and will be removed in an upcoming major release. Please refer to ' +
	    'http://momentjs.com/guides/#/warnings/js-date/ for more info.',
	    function (config) {
	        config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
	    }
	);

	// Pick the first defined of two or three arguments.
	function defaults(a, b, c) {
	    if (a != null) {
	        return a;
	    }
	    if (b != null) {
	        return b;
	    }
	    return c;
	}

	function currentDateArray(config) {
	    // hooks is actually the exported moment object
	    var nowValue = new Date(hooks.now());
	    if (config._useUTC) {
	        return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];
	    }
	    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
	}

	// convert an array to a date.
	// the array should mirror the parameters below
	// note: all values past the year are optional and will default to the lowest possible value.
	// [year, month, day , hour, minute, second, millisecond]
	function configFromArray (config) {
	    var i, date, input = [], currentDate, yearToUse;

	    if (config._d) {
	        return;
	    }

	    currentDate = currentDateArray(config);

	    //compute day of the year from weeks and weekdays
	    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
	        dayOfYearFromWeekInfo(config);
	    }

	    //if the day of the year is set, figure out what it is
	    if (config._dayOfYear) {
	        yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

	        if (config._dayOfYear > daysInYear(yearToUse)) {
	            getParsingFlags(config)._overflowDayOfYear = true;
	        }

	        date = createUTCDate(yearToUse, 0, config._dayOfYear);
	        config._a[MONTH] = date.getUTCMonth();
	        config._a[DATE] = date.getUTCDate();
	    }

	    // Default to current date.
	    // * if no year, month, day of month are given, default to today
	    // * if day of month is given, default month and year
	    // * if month is given, default only year
	    // * if year is given, don't default anything
	    for (i = 0; i < 3 && config._a[i] == null; ++i) {
	        config._a[i] = input[i] = currentDate[i];
	    }

	    // Zero out whatever was not defaulted, including time
	    for (; i < 7; i++) {
	        config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];
	    }

	    // Check for 24:00:00.000
	    if (config._a[HOUR] === 24 &&
	            config._a[MINUTE] === 0 &&
	            config._a[SECOND] === 0 &&
	            config._a[MILLISECOND] === 0) {
	        config._nextDay = true;
	        config._a[HOUR] = 0;
	    }

	    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);
	    // Apply timezone offset from input. The actual utcOffset can be changed
	    // with parseZone.
	    if (config._tzm != null) {
	        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
	    }

	    if (config._nextDay) {
	        config._a[HOUR] = 24;
	    }
	}

	function dayOfYearFromWeekInfo(config) {
	    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;

	    w = config._w;
	    if (w.GG != null || w.W != null || w.E != null) {
	        dow = 1;
	        doy = 4;

	        // TODO: We need to take the current isoWeekYear, but that depends on
	        // how we interpret now (local, utc, fixed offset). So create
	        // a now version of current config (take local/utc/offset flags, and
	        // create now).
	        weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);
	        week = defaults(w.W, 1);
	        weekday = defaults(w.E, 1);
	        if (weekday < 1 || weekday > 7) {
	            weekdayOverflow = true;
	        }
	    } else {
	        dow = config._locale._week.dow;
	        doy = config._locale._week.doy;

	        var curWeek = weekOfYear(createLocal(), dow, doy);

	        weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);

	        // Default to current week.
	        week = defaults(w.w, curWeek.week);

	        if (w.d != null) {
	            // weekday -- low day numbers are considered next week
	            weekday = w.d;
	            if (weekday < 0 || weekday > 6) {
	                weekdayOverflow = true;
	            }
	        } else if (w.e != null) {
	            // local weekday -- counting starts from begining of week
	            weekday = w.e + dow;
	            if (w.e < 0 || w.e > 6) {
	                weekdayOverflow = true;
	            }
	        } else {
	            // default to begining of week
	            weekday = dow;
	        }
	    }
	    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
	        getParsingFlags(config)._overflowWeeks = true;
	    } else if (weekdayOverflow != null) {
	        getParsingFlags(config)._overflowWeekday = true;
	    } else {
	        temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
	        config._a[YEAR] = temp.year;
	        config._dayOfYear = temp.dayOfYear;
	    }
	}

	// constant that refers to the ISO standard
	hooks.ISO_8601 = function () {};

	// date from string and format string
	function configFromStringAndFormat(config) {
	    // TODO: Move this to another part of the creation flow to prevent circular deps
	    if (config._f === hooks.ISO_8601) {
	        configFromISO(config);
	        return;
	    }

	    config._a = [];
	    getParsingFlags(config).empty = true;

	    // This array is used to make a Date, either with `new Date` or `Date.UTC`
	    var string = '' + config._i,
	        i, parsedInput, tokens, token, skipped,
	        stringLength = string.length,
	        totalParsedInputLength = 0;

	    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];

	    for (i = 0; i < tokens.length; i++) {
	        token = tokens[i];
	        parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];
	        // console.log('token', token, 'parsedInput', parsedInput,
	        //         'regex', getParseRegexForToken(token, config));
	        if (parsedInput) {
	            skipped = string.substr(0, string.indexOf(parsedInput));
	            if (skipped.length > 0) {
	                getParsingFlags(config).unusedInput.push(skipped);
	            }
	            string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
	            totalParsedInputLength += parsedInput.length;
	        }
	        // don't parse if it's not a known token
	        if (formatTokenFunctions[token]) {
	            if (parsedInput) {
	                getParsingFlags(config).empty = false;
	            }
	            else {
	                getParsingFlags(config).unusedTokens.push(token);
	            }
	            addTimeToArrayFromToken(token, parsedInput, config);
	        }
	        else if (config._strict && !parsedInput) {
	            getParsingFlags(config).unusedTokens.push(token);
	        }
	    }

	    // add remaining unparsed input length to the string
	    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;
	    if (string.length > 0) {
	        getParsingFlags(config).unusedInput.push(string);
	    }

	    // clear _12h flag if hour is <= 12
	    if (config._a[HOUR] <= 12 &&
	        getParsingFlags(config).bigHour === true &&
	        config._a[HOUR] > 0) {
	        getParsingFlags(config).bigHour = undefined;
	    }

	    getParsingFlags(config).parsedDateParts = config._a.slice(0);
	    getParsingFlags(config).meridiem = config._meridiem;
	    // handle meridiem
	    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);

	    configFromArray(config);
	    checkOverflow(config);
	}


	function meridiemFixWrap (locale, hour, meridiem) {
	    var isPm;

	    if (meridiem == null) {
	        // nothing to do
	        return hour;
	    }
	    if (locale.meridiemHour != null) {
	        return locale.meridiemHour(hour, meridiem);
	    } else if (locale.isPM != null) {
	        // Fallback
	        isPm = locale.isPM(meridiem);
	        if (isPm && hour < 12) {
	            hour += 12;
	        }
	        if (!isPm && hour === 12) {
	            hour = 0;
	        }
	        return hour;
	    } else {
	        // this is not supposed to happen
	        return hour;
	    }
	}

	// date from string and array of format strings
	function configFromStringAndArray(config) {
	    var tempConfig,
	        bestMoment,

	        scoreToBeat,
	        i,
	        currentScore;

	    if (config._f.length === 0) {
	        getParsingFlags(config).invalidFormat = true;
	        config._d = new Date(NaN);
	        return;
	    }

	    for (i = 0; i < config._f.length; i++) {
	        currentScore = 0;
	        tempConfig = copyConfig({}, config);
	        if (config._useUTC != null) {
	            tempConfig._useUTC = config._useUTC;
	        }
	        tempConfig._f = config._f[i];
	        configFromStringAndFormat(tempConfig);

	        if (!isValid(tempConfig)) {
	            continue;
	        }

	        // if there is any input that was not parsed add a penalty for that format
	        currentScore += getParsingFlags(tempConfig).charsLeftOver;

	        //or tokens
	        currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;

	        getParsingFlags(tempConfig).score = currentScore;

	        if (scoreToBeat == null || currentScore < scoreToBeat) {
	            scoreToBeat = currentScore;
	            bestMoment = tempConfig;
	        }
	    }

	    extend(config, bestMoment || tempConfig);
	}

	function configFromObject(config) {
	    if (config._d) {
	        return;
	    }

	    var i = normalizeObjectUnits(config._i);
	    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {
	        return obj && parseInt(obj, 10);
	    });

	    configFromArray(config);
	}

	function createFromConfig (config) {
	    var res = new Moment(checkOverflow(prepareConfig(config)));
	    if (res._nextDay) {
	        // Adding is smart enough around DST
	        res.add(1, 'd');
	        res._nextDay = undefined;
	    }

	    return res;
	}

	function prepareConfig (config) {
	    var input = config._i,
	        format = config._f;

	    config._locale = config._locale || getLocale(config._l);

	    if (input === null || (format === undefined && input === '')) {
	        return createInvalid({nullInput: true});
	    }

	    if (typeof input === 'string') {
	        config._i = input = config._locale.preparse(input);
	    }

	    if (isMoment(input)) {
	        return new Moment(checkOverflow(input));
	    } else if (isDate(input)) {
	        config._d = input;
	    } else if (isArray(format)) {
	        configFromStringAndArray(config);
	    } else if (format) {
	        configFromStringAndFormat(config);
	    }  else {
	        configFromInput(config);
	    }

	    if (!isValid(config)) {
	        config._d = null;
	    }

	    return config;
	}

	function configFromInput(config) {
	    var input = config._i;
	    if (input === undefined) {
	        config._d = new Date(hooks.now());
	    } else if (isDate(input)) {
	        config._d = new Date(input.valueOf());
	    } else if (typeof input === 'string') {
	        configFromString(config);
	    } else if (isArray(input)) {
	        config._a = map(input.slice(0), function (obj) {
	            return parseInt(obj, 10);
	        });
	        configFromArray(config);
	    } else if (typeof(input) === 'object') {
	        configFromObject(config);
	    } else if (isNumber(input)) {
	        // from milliseconds
	        config._d = new Date(input);
	    } else {
	        hooks.createFromInputFallback(config);
	    }
	}

	function createLocalOrUTC (input, format, locale, strict, isUTC) {
	    var c = {};

	    if (locale === true || locale === false) {
	        strict = locale;
	        locale = undefined;
	    }

	    if ((isObject(input) && isObjectEmpty(input)) ||
	            (isArray(input) && input.length === 0)) {
	        input = undefined;
	    }
	    // object construction must be done this way.
	    // https://github.com/moment/moment/issues/1423
	    c._isAMomentObject = true;
	    c._useUTC = c._isUTC = isUTC;
	    c._l = locale;
	    c._i = input;
	    c._f = format;
	    c._strict = strict;

	    return createFromConfig(c);
	}

	function createLocal (input, format, locale, strict) {
	    return createLocalOrUTC(input, format, locale, strict, false);
	}

	var prototypeMin = deprecate(
	    'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',
	    function () {
	        var other = createLocal.apply(null, arguments);
	        if (this.isValid() && other.isValid()) {
	            return other < this ? this : other;
	        } else {
	            return createInvalid();
	        }
	    }
	);

	var prototypeMax = deprecate(
	    'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',
	    function () {
	        var other = createLocal.apply(null, arguments);
	        if (this.isValid() && other.isValid()) {
	            return other > this ? this : other;
	        } else {
	            return createInvalid();
	        }
	    }
	);

	// Pick a moment m from moments so that m[fn](other) is true for all
	// other. This relies on the function fn to be transitive.
	//
	// moments should either be an array of moment objects or an array, whose
	// first element is an array of moment objects.
	function pickBy(fn, moments) {
	    var res, i;
	    if (moments.length === 1 && isArray(moments[0])) {
	        moments = moments[0];
	    }
	    if (!moments.length) {
	        return createLocal();
	    }
	    res = moments[0];
	    for (i = 1; i < moments.length; ++i) {
	        if (!moments[i].isValid() || moments[i][fn](res)) {
	            res = moments[i];
	        }
	    }
	    return res;
	}

	// TODO: Use [].sort instead?
	function min () {
	    var args = [].slice.call(arguments, 0);

	    return pickBy('isBefore', args);
	}

	function max () {
	    var args = [].slice.call(arguments, 0);

	    return pickBy('isAfter', args);
	}

	var now = function () {
	    return Date.now ? Date.now() : +(new Date());
	};

	function Duration (duration) {
	    var normalizedInput = normalizeObjectUnits(duration),
	        years = normalizedInput.year || 0,
	        quarters = normalizedInput.quarter || 0,
	        months = normalizedInput.month || 0,
	        weeks = normalizedInput.week || 0,
	        days = normalizedInput.day || 0,
	        hours = normalizedInput.hour || 0,
	        minutes = normalizedInput.minute || 0,
	        seconds = normalizedInput.second || 0,
	        milliseconds = normalizedInput.millisecond || 0;

	    // representation for dateAddRemove
	    this._milliseconds = +milliseconds +
	        seconds * 1e3 + // 1000
	        minutes * 6e4 + // 1000 * 60
	        hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
	    // Because of dateAddRemove treats 24 hours as different from a
	    // day when working around DST, we need to store them separately
	    this._days = +days +
	        weeks * 7;
	    // It is impossible translate months into days without knowing
	    // which months you are are talking about, so we have to store
	    // it separately.
	    this._months = +months +
	        quarters * 3 +
	        years * 12;

	    this._data = {};

	    this._locale = getLocale();

	    this._bubble();
	}

	function isDuration (obj) {
	    return obj instanceof Duration;
	}

	function absRound (number) {
	    if (number < 0) {
	        return Math.round(-1 * number) * -1;
	    } else {
	        return Math.round(number);
	    }
	}

	// FORMATTING

	function offset (token, separator) {
	    addFormatToken(token, 0, 0, function () {
	        var offset = this.utcOffset();
	        var sign = '+';
	        if (offset < 0) {
	            offset = -offset;
	            sign = '-';
	        }
	        return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);
	    });
	}

	offset('Z', ':');
	offset('ZZ', '');

	// PARSING

	addRegexToken('Z',  matchShortOffset);
	addRegexToken('ZZ', matchShortOffset);
	addParseToken(['Z', 'ZZ'], function (input, array, config) {
	    config._useUTC = true;
	    config._tzm = offsetFromString(matchShortOffset, input);
	});

	// HELPERS

	// timezone chunker
	// '+10:00' > ['10',  '00']
	// '-1530'  > ['-15', '30']
	var chunkOffset = /([\+\-]|\d\d)/gi;

	function offsetFromString(matcher, string) {
	    var matches = (string || '').match(matcher);

	    if (matches === null) {
	        return null;
	    }

	    var chunk   = matches[matches.length - 1] || [];
	    var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];
	    var minutes = +(parts[1] * 60) + toInt(parts[2]);

	    return minutes === 0 ?
	      0 :
	      parts[0] === '+' ? minutes : -minutes;
	}

	// Return a moment from input, that is local/utc/zone equivalent to model.
	function cloneWithOffset(input, model) {
	    var res, diff;
	    if (model._isUTC) {
	        res = model.clone();
	        diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();
	        // Use low-level api, because this fn is low-level api.
	        res._d.setTime(res._d.valueOf() + diff);
	        hooks.updateOffset(res, false);
	        return res;
	    } else {
	        return createLocal(input).local();
	    }
	}

	function getDateOffset (m) {
	    // On Firefox.24 Date#getTimezoneOffset returns a floating point.
	    // https://github.com/moment/moment/pull/1871
	    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;
	}

	// HOOKS

	// This function will be called whenever a moment is mutated.
	// It is intended to keep the offset in sync with the timezone.
	hooks.updateOffset = function () {};

	// MOMENTS

	// keepLocalTime = true means only change the timezone, without
	// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
	// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
	// +0200, so we adjust the time as needed, to be valid.
	//
	// Keeping the time actually adds/subtracts (one hour)
	// from the actual represented time. That is why we call updateOffset
	// a second time. In case it wants us to change the offset again
	// _changeInProgress == true case, then we have to adjust, because
	// there is no such time in the given timezone.
	function getSetOffset (input, keepLocalTime) {
	    var offset = this._offset || 0,
	        localAdjust;
	    if (!this.isValid()) {
	        return input != null ? this : NaN;
	    }
	    if (input != null) {
	        if (typeof input === 'string') {
	            input = offsetFromString(matchShortOffset, input);
	            if (input === null) {
	                return this;
	            }
	        } else if (Math.abs(input) < 16) {
	            input = input * 60;
	        }
	        if (!this._isUTC && keepLocalTime) {
	            localAdjust = getDateOffset(this);
	        }
	        this._offset = input;
	        this._isUTC = true;
	        if (localAdjust != null) {
	            this.add(localAdjust, 'm');
	        }
	        if (offset !== input) {
	            if (!keepLocalTime || this._changeInProgress) {
	                addSubtract(this, createDuration(input - offset, 'm'), 1, false);
	            } else if (!this._changeInProgress) {
	                this._changeInProgress = true;
	                hooks.updateOffset(this, true);
	                this._changeInProgress = null;
	            }
	        }
	        return this;
	    } else {
	        return this._isUTC ? offset : getDateOffset(this);
	    }
	}

	function getSetZone (input, keepLocalTime) {
	    if (input != null) {
	        if (typeof input !== 'string') {
	            input = -input;
	        }

	        this.utcOffset(input, keepLocalTime);

	        return this;
	    } else {
	        return -this.utcOffset();
	    }
	}

	function setOffsetToUTC (keepLocalTime) {
	    return this.utcOffset(0, keepLocalTime);
	}

	function setOffsetToLocal (keepLocalTime) {
	    if (this._isUTC) {
	        this.utcOffset(0, keepLocalTime);
	        this._isUTC = false;

	        if (keepLocalTime) {
	            this.subtract(getDateOffset(this), 'm');
	        }
	    }
	    return this;
	}

	function setOffsetToParsedOffset () {
	    if (this._tzm != null) {
	        this.utcOffset(this._tzm);
	    } else if (typeof this._i === 'string') {
	        var tZone = offsetFromString(matchOffset, this._i);
	        if (tZone != null) {
	            this.utcOffset(tZone);
	        }
	        else {
	            this.utcOffset(0, true);
	        }
	    }
	    return this;
	}

	function hasAlignedHourOffset (input) {
	    if (!this.isValid()) {
	        return false;
	    }
	    input = input ? createLocal(input).utcOffset() : 0;

	    return (this.utcOffset() - input) % 60 === 0;
	}

	function isDaylightSavingTime () {
	    return (
	        this.utcOffset() > this.clone().month(0).utcOffset() ||
	        this.utcOffset() > this.clone().month(5).utcOffset()
	    );
	}

	function isDaylightSavingTimeShifted () {
	    if (!isUndefined(this._isDSTShifted)) {
	        return this._isDSTShifted;
	    }

	    var c = {};

	    copyConfig(c, this);
	    c = prepareConfig(c);

	    if (c._a) {
	        var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
	        this._isDSTShifted = this.isValid() &&
	            compareArrays(c._a, other.toArray()) > 0;
	    } else {
	        this._isDSTShifted = false;
	    }

	    return this._isDSTShifted;
	}

	function isLocal () {
	    return this.isValid() ? !this._isUTC : false;
	}

	function isUtcOffset () {
	    return this.isValid() ? this._isUTC : false;
	}

	function isUtc () {
	    return this.isValid() ? this._isUTC && this._offset === 0 : false;
	}

	// ASP.NET json date format regex
	var aspNetRegex = /^(\-)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/;

	// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
	// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
	// and further modified to allow for strings containing both week and day
	var isoRegex = /^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;

	function createDuration (input, key) {
	    var duration = input,
	        // matching against regexp is expensive, do it on demand
	        match = null,
	        sign,
	        ret,
	        diffRes;

	    if (isDuration(input)) {
	        duration = {
	            ms : input._milliseconds,
	            d  : input._days,
	            M  : input._months
	        };
	    } else if (isNumber(input)) {
	        duration = {};
	        if (key) {
	            duration[key] = input;
	        } else {
	            duration.milliseconds = input;
	        }
	    } else if (!!(match = aspNetRegex.exec(input))) {
	        sign = (match[1] === '-') ? -1 : 1;
	        duration = {
	            y  : 0,
	            d  : toInt(match[DATE])                         * sign,
	            h  : toInt(match[HOUR])                         * sign,
	            m  : toInt(match[MINUTE])                       * sign,
	            s  : toInt(match[SECOND])                       * sign,
	            ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match
	        };
	    } else if (!!(match = isoRegex.exec(input))) {
	        sign = (match[1] === '-') ? -1 : 1;
	        duration = {
	            y : parseIso(match[2], sign),
	            M : parseIso(match[3], sign),
	            w : parseIso(match[4], sign),
	            d : parseIso(match[5], sign),
	            h : parseIso(match[6], sign),
	            m : parseIso(match[7], sign),
	            s : parseIso(match[8], sign)
	        };
	    } else if (duration == null) {// checks for null or undefined
	        duration = {};
	    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {
	        diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));

	        duration = {};
	        duration.ms = diffRes.milliseconds;
	        duration.M = diffRes.months;
	    }

	    ret = new Duration(duration);

	    if (isDuration(input) && hasOwnProp(input, '_locale')) {
	        ret._locale = input._locale;
	    }

	    return ret;
	}

	createDuration.fn = Duration.prototype;

	function parseIso (inp, sign) {
	    // We'd normally use ~~inp for this, but unfortunately it also
	    // converts floats to ints.
	    // inp may be undefined, so careful calling replace on it.
	    var res = inp && parseFloat(inp.replace(',', '.'));
	    // apply sign while we're at it
	    return (isNaN(res) ? 0 : res) * sign;
	}

	function positiveMomentsDifference(base, other) {
	    var res = {milliseconds: 0, months: 0};

	    res.months = other.month() - base.month() +
	        (other.year() - base.year()) * 12;
	    if (base.clone().add(res.months, 'M').isAfter(other)) {
	        --res.months;
	    }

	    res.milliseconds = +other - +(base.clone().add(res.months, 'M'));

	    return res;
	}

	function momentsDifference(base, other) {
	    var res;
	    if (!(base.isValid() && other.isValid())) {
	        return {milliseconds: 0, months: 0};
	    }

	    other = cloneWithOffset(other, base);
	    if (base.isBefore(other)) {
	        res = positiveMomentsDifference(base, other);
	    } else {
	        res = positiveMomentsDifference(other, base);
	        res.milliseconds = -res.milliseconds;
	        res.months = -res.months;
	    }

	    return res;
	}

	// TODO: remove 'name' arg after deprecation is removed
	function createAdder(direction, name) {
	    return function (val, period) {
	        var dur, tmp;
	        //invert the arguments, but complain about it
	        if (period !== null && !isNaN(+period)) {
	            deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +
	            'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');
	            tmp = val; val = period; period = tmp;
	        }

	        val = typeof val === 'string' ? +val : val;
	        dur = createDuration(val, period);
	        addSubtract(this, dur, direction);
	        return this;
	    };
	}

	function addSubtract (mom, duration, isAdding, updateOffset) {
	    var milliseconds = duration._milliseconds,
	        days = absRound(duration._days),
	        months = absRound(duration._months);

	    if (!mom.isValid()) {
	        // No op
	        return;
	    }

	    updateOffset = updateOffset == null ? true : updateOffset;

	    if (milliseconds) {
	        mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
	    }
	    if (days) {
	        set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);
	    }
	    if (months) {
	        setMonth(mom, get(mom, 'Month') + months * isAdding);
	    }
	    if (updateOffset) {
	        hooks.updateOffset(mom, days || months);
	    }
	}

	var add      = createAdder(1, 'add');
	var subtract = createAdder(-1, 'subtract');

	function getCalendarFormat(myMoment, now) {
	    var diff = myMoment.diff(now, 'days', true);
	    return diff < -6 ? 'sameElse' :
	            diff < -1 ? 'lastWeek' :
	            diff < 0 ? 'lastDay' :
	            diff < 1 ? 'sameDay' :
	            diff < 2 ? 'nextDay' :
	            diff < 7 ? 'nextWeek' : 'sameElse';
	}

	function calendar$1 (time, formats) {
	    // We want to compare the start of today, vs this.
	    // Getting start-of-today depends on whether we're local/utc/offset or not.
	    var now = time || createLocal(),
	        sod = cloneWithOffset(now, this).startOf('day'),
	        format = hooks.calendarFormat(this, sod) || 'sameElse';

	    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);

	    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));
	}

	function clone () {
	    return new Moment(this);
	}

	function isAfter (input, units) {
	    var localInput = isMoment(input) ? input : createLocal(input);
	    if (!(this.isValid() && localInput.isValid())) {
	        return false;
	    }
	    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');
	    if (units === 'millisecond') {
	        return this.valueOf() > localInput.valueOf();
	    } else {
	        return localInput.valueOf() < this.clone().startOf(units).valueOf();
	    }
	}

	function isBefore (input, units) {
	    var localInput = isMoment(input) ? input : createLocal(input);
	    if (!(this.isValid() && localInput.isValid())) {
	        return false;
	    }
	    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');
	    if (units === 'millisecond') {
	        return this.valueOf() < localInput.valueOf();
	    } else {
	        return this.clone().endOf(units).valueOf() < localInput.valueOf();
	    }
	}

	function isBetween (from, to, units, inclusivity) {
	    inclusivity = inclusivity || '()';
	    return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&
	        (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));
	}

	function isSame (input, units) {
	    var localInput = isMoment(input) ? input : createLocal(input),
	        inputMs;
	    if (!(this.isValid() && localInput.isValid())) {
	        return false;
	    }
	    units = normalizeUnits(units || 'millisecond');
	    if (units === 'millisecond') {
	        return this.valueOf() === localInput.valueOf();
	    } else {
	        inputMs = localInput.valueOf();
	        return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();
	    }
	}

	function isSameOrAfter (input, units) {
	    return this.isSame(input, units) || this.isAfter(input,units);
	}

	function isSameOrBefore (input, units) {
	    return this.isSame(input, units) || this.isBefore(input,units);
	}

	function diff (input, units, asFloat) {
	    var that,
	        zoneDelta,
	        delta, output;

	    if (!this.isValid()) {
	        return NaN;
	    }

	    that = cloneWithOffset(input, this);

	    if (!that.isValid()) {
	        return NaN;
	    }

	    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;

	    units = normalizeUnits(units);

	    if (units === 'year' || units === 'month' || units === 'quarter') {
	        output = monthDiff(this, that);
	        if (units === 'quarter') {
	            output = output / 3;
	        } else if (units === 'year') {
	            output = output / 12;
	        }
	    } else {
	        delta = this - that;
	        output = units === 'second' ? delta / 1e3 : // 1000
	            units === 'minute' ? delta / 6e4 : // 1000 * 60
	            units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60
	            units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst
	            units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst
	            delta;
	    }
	    return asFloat ? output : absFloor(output);
	}

	function monthDiff (a, b) {
	    // difference in months
	    var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),
	        // b is in (anchor - 1 month, anchor + 1 month)
	        anchor = a.clone().add(wholeMonthDiff, 'months'),
	        anchor2, adjust;

	    if (b - anchor < 0) {
	        anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
	        // linear across the month
	        adjust = (b - anchor) / (anchor - anchor2);
	    } else {
	        anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
	        // linear across the month
	        adjust = (b - anchor) / (anchor2 - anchor);
	    }

	    //check for negative zero, return zero if negative zero
	    return -(wholeMonthDiff + adjust) || 0;
	}

	hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
	hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';

	function toString () {
	    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
	}

	function toISOString () {
	    var m = this.clone().utc();
	    if (0 < m.year() && m.year() <= 9999) {
	        if (isFunction(Date.prototype.toISOString)) {
	            // native implementation is ~50x faster, use it when we can
	            return this.toDate().toISOString();
	        } else {
	            return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
	        }
	    } else {
	        return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
	    }
	}

	/**
	 * Return a human readable representation of a moment that can
	 * also be evaluated to get a new moment which is the same
	 *
	 * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
	 */
	function inspect () {
	    if (!this.isValid()) {
	        return 'moment.invalid(/* ' + this._i + ' */)';
	    }
	    var func = 'moment';
	    var zone = '';
	    if (!this.isLocal()) {
	        func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';
	        zone = 'Z';
	    }
	    var prefix = '[' + func + '("]';
	    var year = (0 < this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';
	    var datetime = '-MM-DD[T]HH:mm:ss.SSS';
	    var suffix = zone + '[")]';

	    return this.format(prefix + year + datetime + suffix);
	}

	function format (inputString) {
	    if (!inputString) {
	        inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;
	    }
	    var output = formatMoment(this, inputString);
	    return this.localeData().postformat(output);
	}

	function from (time, withoutSuffix) {
	    if (this.isValid() &&
	            ((isMoment(time) && time.isValid()) ||
	             createLocal(time).isValid())) {
	        return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);
	    } else {
	        return this.localeData().invalidDate();
	    }
	}

	function fromNow (withoutSuffix) {
	    return this.from(createLocal(), withoutSuffix);
	}

	function to (time, withoutSuffix) {
	    if (this.isValid() &&
	            ((isMoment(time) && time.isValid()) ||
	             createLocal(time).isValid())) {
	        return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);
	    } else {
	        return this.localeData().invalidDate();
	    }
	}

	function toNow (withoutSuffix) {
	    return this.to(createLocal(), withoutSuffix);
	}

	// If passed a locale key, it will set the locale for this
	// instance.  Otherwise, it will return the locale configuration
	// variables for this instance.
	function locale (key) {
	    var newLocaleData;

	    if (key === undefined) {
	        return this._locale._abbr;
	    } else {
	        newLocaleData = getLocale(key);
	        if (newLocaleData != null) {
	            this._locale = newLocaleData;
	        }
	        return this;
	    }
	}

	var lang = deprecate(
	    'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
	    function (key) {
	        if (key === undefined) {
	            return this.localeData();
	        } else {
	            return this.locale(key);
	        }
	    }
	);

	function localeData () {
	    return this._locale;
	}

	function startOf (units) {
	    units = normalizeUnits(units);
	    // the following switch intentionally omits break keywords
	    // to utilize falling through the cases.
	    switch (units) {
	        case 'year':
	            this.month(0);
	            /* falls through */
	        case 'quarter':
	        case 'month':
	            this.date(1);
	            /* falls through */
	        case 'week':
	        case 'isoWeek':
	        case 'day':
	        case 'date':
	            this.hours(0);
	            /* falls through */
	        case 'hour':
	            this.minutes(0);
	            /* falls through */
	        case 'minute':
	            this.seconds(0);
	            /* falls through */
	        case 'second':
	            this.milliseconds(0);
	    }

	    // weeks are a special case
	    if (units === 'week') {
	        this.weekday(0);
	    }
	    if (units === 'isoWeek') {
	        this.isoWeekday(1);
	    }

	    // quarters are also special
	    if (units === 'quarter') {
	        this.month(Math.floor(this.month() / 3) * 3);
	    }

	    return this;
	}

	function endOf (units) {
	    units = normalizeUnits(units);
	    if (units === undefined || units === 'millisecond') {
	        return this;
	    }

	    // 'date' is an alias for 'day', so it should be considered as such.
	    if (units === 'date') {
	        units = 'day';
	    }

	    return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');
	}

	function valueOf () {
	    return this._d.valueOf() - ((this._offset || 0) * 60000);
	}

	function unix () {
	    return Math.floor(this.valueOf() / 1000);
	}

	function toDate () {
	    return new Date(this.valueOf());
	}

	function toArray () {
	    var m = this;
	    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];
	}

	function toObject () {
	    var m = this;
	    return {
	        years: m.year(),
	        months: m.month(),
	        date: m.date(),
	        hours: m.hours(),
	        minutes: m.minutes(),
	        seconds: m.seconds(),
	        milliseconds: m.milliseconds()
	    };
	}

	function toJSON () {
	    // new Date(NaN).toJSON() === null
	    return this.isValid() ? this.toISOString() : null;
	}

	function isValid$1 () {
	    return isValid(this);
	}

	function parsingFlags () {
	    return extend({}, getParsingFlags(this));
	}

	function invalidAt () {
	    return getParsingFlags(this).overflow;
	}

	function creationData() {
	    return {
	        input: this._i,
	        format: this._f,
	        locale: this._locale,
	        isUTC: this._isUTC,
	        strict: this._strict
	    };
	}

	// FORMATTING

	addFormatToken(0, ['gg', 2], 0, function () {
	    return this.weekYear() % 100;
	});

	addFormatToken(0, ['GG', 2], 0, function () {
	    return this.isoWeekYear() % 100;
	});

	function addWeekYearFormatToken (token, getter) {
	    addFormatToken(0, [token, token.length], 0, getter);
	}

	addWeekYearFormatToken('gggg',     'weekYear');
	addWeekYearFormatToken('ggggg',    'weekYear');
	addWeekYearFormatToken('GGGG',  'isoWeekYear');
	addWeekYearFormatToken('GGGGG', 'isoWeekYear');

	// ALIASES

	addUnitAlias('weekYear', 'gg');
	addUnitAlias('isoWeekYear', 'GG');

	// PRIORITY

	addUnitPriority('weekYear', 1);
	addUnitPriority('isoWeekYear', 1);


	// PARSING

	addRegexToken('G',      matchSigned);
	addRegexToken('g',      matchSigned);
	addRegexToken('GG',     match1to2, match2);
	addRegexToken('gg',     match1to2, match2);
	addRegexToken('GGGG',   match1to4, match4);
	addRegexToken('gggg',   match1to4, match4);
	addRegexToken('GGGGG',  match1to6, match6);
	addRegexToken('ggggg',  match1to6, match6);

	addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {
	    week[token.substr(0, 2)] = toInt(input);
	});

	addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
	    week[token] = hooks.parseTwoDigitYear(input);
	});

	// MOMENTS

	function getSetWeekYear (input) {
	    return getSetWeekYearHelper.call(this,
	            input,
	            this.week(),
	            this.weekday(),
	            this.localeData()._week.dow,
	            this.localeData()._week.doy);
	}

	function getSetISOWeekYear (input) {
	    return getSetWeekYearHelper.call(this,
	            input, this.isoWeek(), this.isoWeekday(), 1, 4);
	}

	function getISOWeeksInYear () {
	    return weeksInYear(this.year(), 1, 4);
	}

	function getWeeksInYear () {
	    var weekInfo = this.localeData()._week;
	    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
	}

	function getSetWeekYearHelper(input, week, weekday, dow, doy) {
	    var weeksTarget;
	    if (input == null) {
	        return weekOfYear(this, dow, doy).year;
	    } else {
	        weeksTarget = weeksInYear(input, dow, doy);
	        if (week > weeksTarget) {
	            week = weeksTarget;
	        }
	        return setWeekAll.call(this, input, week, weekday, dow, doy);
	    }
	}

	function setWeekAll(weekYear, week, weekday, dow, doy) {
	    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
	        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);

	    this.year(date.getUTCFullYear());
	    this.month(date.getUTCMonth());
	    this.date(date.getUTCDate());
	    return this;
	}

	// FORMATTING

	addFormatToken('Q', 0, 'Qo', 'quarter');

	// ALIASES

	addUnitAlias('quarter', 'Q');

	// PRIORITY

	addUnitPriority('quarter', 7);

	// PARSING

	addRegexToken('Q', match1);
	addParseToken('Q', function (input, array) {
	    array[MONTH] = (toInt(input) - 1) * 3;
	});

	// MOMENTS

	function getSetQuarter (input) {
	    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
	}

	// FORMATTING

	addFormatToken('D', ['DD', 2], 'Do', 'date');

	// ALIASES

	addUnitAlias('date', 'D');

	// PRIOROITY
	addUnitPriority('date', 9);

	// PARSING

	addRegexToken('D',  match1to2);
	addRegexToken('DD', match1to2, match2);
	addRegexToken('Do', function (isStrict, locale) {
	    return isStrict ? locale._ordinalParse : locale._ordinalParseLenient;
	});

	addParseToken(['D', 'DD'], DATE);
	addParseToken('Do', function (input, array) {
	    array[DATE] = toInt(input.match(match1to2)[0], 10);
	});

	// MOMENTS

	var getSetDayOfMonth = makeGetSet('Date', true);

	// FORMATTING

	addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

	// ALIASES

	addUnitAlias('dayOfYear', 'DDD');

	// PRIORITY
	addUnitPriority('dayOfYear', 4);

	// PARSING

	addRegexToken('DDD',  match1to3);
	addRegexToken('DDDD', match3);
	addParseToken(['DDD', 'DDDD'], function (input, array, config) {
	    config._dayOfYear = toInt(input);
	});

	// HELPERS

	// MOMENTS

	function getSetDayOfYear (input) {
	    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;
	    return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');
	}

	// FORMATTING

	addFormatToken('m', ['mm', 2], 0, 'minute');

	// ALIASES

	addUnitAlias('minute', 'm');

	// PRIORITY

	addUnitPriority('minute', 14);

	// PARSING

	addRegexToken('m',  match1to2);
	addRegexToken('mm', match1to2, match2);
	addParseToken(['m', 'mm'], MINUTE);

	// MOMENTS

	var getSetMinute = makeGetSet('Minutes', false);

	// FORMATTING

	addFormatToken('s', ['ss', 2], 0, 'second');

	// ALIASES

	addUnitAlias('second', 's');

	// PRIORITY

	addUnitPriority('second', 15);

	// PARSING

	addRegexToken('s',  match1to2);
	addRegexToken('ss', match1to2, match2);
	addParseToken(['s', 'ss'], SECOND);

	// MOMENTS

	var getSetSecond = makeGetSet('Seconds', false);

	// FORMATTING

	addFormatToken('S', 0, 0, function () {
	    return ~~(this.millisecond() / 100);
	});

	addFormatToken(0, ['SS', 2], 0, function () {
	    return ~~(this.millisecond() / 10);
	});

	addFormatToken(0, ['SSS', 3], 0, 'millisecond');
	addFormatToken(0, ['SSSS', 4], 0, function () {
	    return this.millisecond() * 10;
	});
	addFormatToken(0, ['SSSSS', 5], 0, function () {
	    return this.millisecond() * 100;
	});
	addFormatToken(0, ['SSSSSS', 6], 0, function () {
	    return this.millisecond() * 1000;
	});
	addFormatToken(0, ['SSSSSSS', 7], 0, function () {
	    return this.millisecond() * 10000;
	});
	addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
	    return this.millisecond() * 100000;
	});
	addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
	    return this.millisecond() * 1000000;
	});


	// ALIASES

	addUnitAlias('millisecond', 'ms');

	// PRIORITY

	addUnitPriority('millisecond', 16);

	// PARSING

	addRegexToken('S',    match1to3, match1);
	addRegexToken('SS',   match1to3, match2);
	addRegexToken('SSS',  match1to3, match3);

	var token;
	for (token = 'SSSS'; token.length <= 9; token += 'S') {
	    addRegexToken(token, matchUnsigned);
	}

	function parseMs(input, array) {
	    array[MILLISECOND] = toInt(('0.' + input) * 1000);
	}

	for (token = 'S'; token.length <= 9; token += 'S') {
	    addParseToken(token, parseMs);
	}
	// MOMENTS

	var getSetMillisecond = makeGetSet('Milliseconds', false);

	// FORMATTING

	addFormatToken('z',  0, 0, 'zoneAbbr');
	addFormatToken('zz', 0, 0, 'zoneName');

	// MOMENTS

	function getZoneAbbr () {
	    return this._isUTC ? 'UTC' : '';
	}

	function getZoneName () {
	    return this._isUTC ? 'Coordinated Universal Time' : '';
	}

	var proto = Moment.prototype;

	proto.add               = add;
	proto.calendar          = calendar$1;
	proto.clone             = clone;
	proto.diff              = diff;
	proto.endOf             = endOf;
	proto.format            = format;
	proto.from              = from;
	proto.fromNow           = fromNow;
	proto.to                = to;
	proto.toNow             = toNow;
	proto.get               = stringGet;
	proto.invalidAt         = invalidAt;
	proto.isAfter           = isAfter;
	proto.isBefore          = isBefore;
	proto.isBetween         = isBetween;
	proto.isSame            = isSame;
	proto.isSameOrAfter     = isSameOrAfter;
	proto.isSameOrBefore    = isSameOrBefore;
	proto.isValid           = isValid$1;
	proto.lang              = lang;
	proto.locale            = locale;
	proto.localeData        = localeData;
	proto.max               = prototypeMax;
	proto.min               = prototypeMin;
	proto.parsingFlags      = parsingFlags;
	proto.set               = stringSet;
	proto.startOf           = startOf;
	proto.subtract          = subtract;
	proto.toArray           = toArray;
	proto.toObject          = toObject;
	proto.toDate            = toDate;
	proto.toISOString       = toISOString;
	proto.inspect           = inspect;
	proto.toJSON            = toJSON;
	proto.toString          = toString;
	proto.unix              = unix;
	proto.valueOf           = valueOf;
	proto.creationData      = creationData;

	// Year
	proto.year       = getSetYear;
	proto.isLeapYear = getIsLeapYear;

	// Week Year
	proto.weekYear    = getSetWeekYear;
	proto.isoWeekYear = getSetISOWeekYear;

	// Quarter
	proto.quarter = proto.quarters = getSetQuarter;

	// Month
	proto.month       = getSetMonth;
	proto.daysInMonth = getDaysInMonth;

	// Week
	proto.week           = proto.weeks        = getSetWeek;
	proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;
	proto.weeksInYear    = getWeeksInYear;
	proto.isoWeeksInYear = getISOWeeksInYear;

	// Day
	proto.date       = getSetDayOfMonth;
	proto.day        = proto.days             = getSetDayOfWeek;
	proto.weekday    = getSetLocaleDayOfWeek;
	proto.isoWeekday = getSetISODayOfWeek;
	proto.dayOfYear  = getSetDayOfYear;

	// Hour
	proto.hour = proto.hours = getSetHour;

	// Minute
	proto.minute = proto.minutes = getSetMinute;

	// Second
	proto.second = proto.seconds = getSetSecond;

	// Millisecond
	proto.millisecond = proto.milliseconds = getSetMillisecond;

	// Offset
	proto.utcOffset            = getSetOffset;
	proto.utc                  = setOffsetToUTC;
	proto.local                = setOffsetToLocal;
	proto.parseZone            = setOffsetToParsedOffset;
	proto.hasAlignedHourOffset = hasAlignedHourOffset;
	proto.isDST                = isDaylightSavingTime;
	proto.isLocal              = isLocal;
	proto.isUtcOffset          = isUtcOffset;
	proto.isUtc                = isUtc;
	proto.isUTC                = isUtc;

	// Timezone
	proto.zoneAbbr = getZoneAbbr;
	proto.zoneName = getZoneName;

	// Deprecations
	proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);
	proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);
	proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);
	proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);
	proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);

	function createUnix (input) {
	    return createLocal(input * 1000);
	}

	function createInZone () {
	    return createLocal.apply(null, arguments).parseZone();
	}

	function preParsePostFormat (string) {
	    return string;
	}

	var proto$1 = Locale.prototype;

	proto$1.calendar        = calendar;
	proto$1.longDateFormat  = longDateFormat;
	proto$1.invalidDate     = invalidDate;
	proto$1.ordinal         = ordinal;
	proto$1.preparse        = preParsePostFormat;
	proto$1.postformat      = preParsePostFormat;
	proto$1.relativeTime    = relativeTime;
	proto$1.pastFuture      = pastFuture;
	proto$1.set             = set;

	// Month
	proto$1.months            =        localeMonths;
	proto$1.monthsShort       =        localeMonthsShort;
	proto$1.monthsParse       =        localeMonthsParse;
	proto$1.monthsRegex       = monthsRegex;
	proto$1.monthsShortRegex  = monthsShortRegex;

	// Week
	proto$1.week = localeWeek;
	proto$1.firstDayOfYear = localeFirstDayOfYear;
	proto$1.firstDayOfWeek = localeFirstDayOfWeek;

	// Day of Week
	proto$1.weekdays       =        localeWeekdays;
	proto$1.weekdaysMin    =        localeWeekdaysMin;
	proto$1.weekdaysShort  =        localeWeekdaysShort;
	proto$1.weekdaysParse  =        localeWeekdaysParse;

	proto$1.weekdaysRegex       =        weekdaysRegex;
	proto$1.weekdaysShortRegex  =        weekdaysShortRegex;
	proto$1.weekdaysMinRegex    =        weekdaysMinRegex;

	// Hours
	proto$1.isPM = localeIsPM;
	proto$1.meridiem = localeMeridiem;

	function get$1 (format, index, field, setter) {
	    var locale = getLocale();
	    var utc = createUTC().set(setter, index);
	    return locale[field](utc, format);
	}

	function listMonthsImpl (format, index, field) {
	    if (isNumber(format)) {
	        index = format;
	        format = undefined;
	    }

	    format = format || '';

	    if (index != null) {
	        return get$1(format, index, field, 'month');
	    }

	    var i;
	    var out = [];
	    for (i = 0; i < 12; i++) {
	        out[i] = get$1(format, i, field, 'month');
	    }
	    return out;
	}

	// ()
	// (5)
	// (fmt, 5)
	// (fmt)
	// (true)
	// (true, 5)
	// (true, fmt, 5)
	// (true, fmt)
	function listWeekdaysImpl (localeSorted, format, index, field) {
	    if (typeof localeSorted === 'boolean') {
	        if (isNumber(format)) {
	            index = format;
	            format = undefined;
	        }

	        format = format || '';
	    } else {
	        format = localeSorted;
	        index = format;
	        localeSorted = false;

	        if (isNumber(format)) {
	            index = format;
	            format = undefined;
	        }

	        format = format || '';
	    }

	    var locale = getLocale(),
	        shift = localeSorted ? locale._week.dow : 0;

	    if (index != null) {
	        return get$1(format, (index + shift) % 7, field, 'day');
	    }

	    var i;
	    var out = [];
	    for (i = 0; i < 7; i++) {
	        out[i] = get$1(format, (i + shift) % 7, field, 'day');
	    }
	    return out;
	}

	function listMonths (format, index) {
	    return listMonthsImpl(format, index, 'months');
	}

	function listMonthsShort (format, index) {
	    return listMonthsImpl(format, index, 'monthsShort');
	}

	function listWeekdays (localeSorted, format, index) {
	    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
	}

	function listWeekdaysShort (localeSorted, format, index) {
	    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
	}

	function listWeekdaysMin (localeSorted, format, index) {
	    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
	}

	getSetGlobalLocale('en', {
	    ordinalParse: /\d{1,2}(th|st|nd|rd)/,
	    ordinal : function (number) {
	        var b = number % 10,
	            output = (toInt(number % 100 / 10) === 1) ? 'th' :
	            (b === 1) ? 'st' :
	            (b === 2) ? 'nd' :
	            (b === 3) ? 'rd' : 'th';
	        return number + output;
	    }
	});

	// Side effect imports
	hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);
	hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);

	var mathAbs = Math.abs;

	function abs () {
	    var data           = this._data;

	    this._milliseconds = mathAbs(this._milliseconds);
	    this._days         = mathAbs(this._days);
	    this._months       = mathAbs(this._months);

	    data.milliseconds  = mathAbs(data.milliseconds);
	    data.seconds       = mathAbs(data.seconds);
	    data.minutes       = mathAbs(data.minutes);
	    data.hours         = mathAbs(data.hours);
	    data.months        = mathAbs(data.months);
	    data.years         = mathAbs(data.years);

	    return this;
	}

	function addSubtract$1 (duration, input, value, direction) {
	    var other = createDuration(input, value);

	    duration._milliseconds += direction * other._milliseconds;
	    duration._days         += direction * other._days;
	    duration._months       += direction * other._months;

	    return duration._bubble();
	}

	// supports only 2.0-style add(1, 's') or add(duration)
	function add$1 (input, value) {
	    return addSubtract$1(this, input, value, 1);
	}

	// supports only 2.0-style subtract(1, 's') or subtract(duration)
	function subtract$1 (input, value) {
	    return addSubtract$1(this, input, value, -1);
	}

	function absCeil (number) {
	    if (number < 0) {
	        return Math.floor(number);
	    } else {
	        return Math.ceil(number);
	    }
	}

	function bubble () {
	    var milliseconds = this._milliseconds;
	    var days         = this._days;
	    var months       = this._months;
	    var data         = this._data;
	    var seconds, minutes, hours, years, monthsFromDays;

	    // if we have a mix of positive and negative values, bubble down first
	    // check: https://github.com/moment/moment/issues/2166
	    if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||
	            (milliseconds <= 0 && days <= 0 && months <= 0))) {
	        milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
	        days = 0;
	        months = 0;
	    }

	    // The following code bubbles up values, see the tests for
	    // examples of what that means.
	    data.milliseconds = milliseconds % 1000;

	    seconds           = absFloor(milliseconds / 1000);
	    data.seconds      = seconds % 60;

	    minutes           = absFloor(seconds / 60);
	    data.minutes      = minutes % 60;

	    hours             = absFloor(minutes / 60);
	    data.hours        = hours % 24;

	    days += absFloor(hours / 24);

	    // convert days to months
	    monthsFromDays = absFloor(daysToMonths(days));
	    months += monthsFromDays;
	    days -= absCeil(monthsToDays(monthsFromDays));

	    // 12 months -> 1 year
	    years = absFloor(months / 12);
	    months %= 12;

	    data.days   = days;
	    data.months = months;
	    data.years  = years;

	    return this;
	}

	function daysToMonths (days) {
	    // 400 years have 146097 days (taking into account leap year rules)
	    // 400 years have 12 months === 4800
	    return days * 4800 / 146097;
	}

	function monthsToDays (months) {
	    // the reverse of daysToMonths
	    return months * 146097 / 4800;
	}

	function as (units) {
	    var days;
	    var months;
	    var milliseconds = this._milliseconds;

	    units = normalizeUnits(units);

	    if (units === 'month' || units === 'year') {
	        days   = this._days   + milliseconds / 864e5;
	        months = this._months + daysToMonths(days);
	        return units === 'month' ? months : months / 12;
	    } else {
	        // handle milliseconds separately because of floating point math errors (issue #1867)
	        days = this._days + Math.round(monthsToDays(this._months));
	        switch (units) {
	            case 'week'   : return days / 7     + milliseconds / 6048e5;
	            case 'day'    : return days         + milliseconds / 864e5;
	            case 'hour'   : return days * 24    + milliseconds / 36e5;
	            case 'minute' : return days * 1440  + milliseconds / 6e4;
	            case 'second' : return days * 86400 + milliseconds / 1000;
	            // Math.floor prevents floating point math errors here
	            case 'millisecond': return Math.floor(days * 864e5) + milliseconds;
	            default: throw new Error('Unknown unit ' + units);
	        }
	    }
	}

	// TODO: Use this.as('ms')?
	function valueOf$1 () {
	    return (
	        this._milliseconds +
	        this._days * 864e5 +
	        (this._months % 12) * 2592e6 +
	        toInt(this._months / 12) * 31536e6
	    );
	}

	function makeAs (alias) {
	    return function () {
	        return this.as(alias);
	    };
	}

	var asMilliseconds = makeAs('ms');
	var asSeconds      = makeAs('s');
	var asMinutes      = makeAs('m');
	var asHours        = makeAs('h');
	var asDays         = makeAs('d');
	var asWeeks        = makeAs('w');
	var asMonths       = makeAs('M');
	var asYears        = makeAs('y');

	function get$2 (units) {
	    units = normalizeUnits(units);
	    return this[units + 's']();
	}

	function makeGetter(name) {
	    return function () {
	        return this._data[name];
	    };
	}

	var milliseconds = makeGetter('milliseconds');
	var seconds      = makeGetter('seconds');
	var minutes      = makeGetter('minutes');
	var hours        = makeGetter('hours');
	var days         = makeGetter('days');
	var months       = makeGetter('months');
	var years        = makeGetter('years');

	function weeks () {
	    return absFloor(this.days() / 7);
	}

	var round = Math.round;
	var thresholds = {
	    s: 45,  // seconds to minute
	    m: 45,  // minutes to hour
	    h: 22,  // hours to day
	    d: 26,  // days to month
	    M: 11   // months to year
	};

	// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
	function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
	    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
	}

	function relativeTime$1 (posNegDuration, withoutSuffix, locale) {
	    var duration = createDuration(posNegDuration).abs();
	    var seconds  = round(duration.as('s'));
	    var minutes  = round(duration.as('m'));
	    var hours    = round(duration.as('h'));
	    var days     = round(duration.as('d'));
	    var months   = round(duration.as('M'));
	    var years    = round(duration.as('y'));

	    var a = seconds < thresholds.s && ['s', seconds]  ||
	            minutes <= 1           && ['m']           ||
	            minutes < thresholds.m && ['mm', minutes] ||
	            hours   <= 1           && ['h']           ||
	            hours   < thresholds.h && ['hh', hours]   ||
	            days    <= 1           && ['d']           ||
	            days    < thresholds.d && ['dd', days]    ||
	            months  <= 1           && ['M']           ||
	            months  < thresholds.M && ['MM', months]  ||
	            years   <= 1           && ['y']           || ['yy', years];

	    a[2] = withoutSuffix;
	    a[3] = +posNegDuration > 0;
	    a[4] = locale;
	    return substituteTimeAgo.apply(null, a);
	}

	// This function allows you to set the rounding function for relative time strings
	function getSetRelativeTimeRounding (roundingFunction) {
	    if (roundingFunction === undefined) {
	        return round;
	    }
	    if (typeof(roundingFunction) === 'function') {
	        round = roundingFunction;
	        return true;
	    }
	    return false;
	}

	// This function allows you to set a threshold for relative time strings
	function getSetRelativeTimeThreshold (threshold, limit) {
	    if (thresholds[threshold] === undefined) {
	        return false;
	    }
	    if (limit === undefined) {
	        return thresholds[threshold];
	    }
	    thresholds[threshold] = limit;
	    return true;
	}

	function humanize (withSuffix) {
	    var locale = this.localeData();
	    var output = relativeTime$1(this, !withSuffix, locale);

	    if (withSuffix) {
	        output = locale.pastFuture(+this, output);
	    }

	    return locale.postformat(output);
	}

	var abs$1 = Math.abs;

	function toISOString$1() {
	    // for ISO strings we do not use the normal bubbling rules:
	    //  * milliseconds bubble up until they become hours
	    //  * days do not bubble at all
	    //  * months bubble up until they become years
	    // This is because there is no context-free conversion between hours and days
	    // (think of clock changes)
	    // and also not between days and months (28-31 days per month)
	    var seconds = abs$1(this._milliseconds) / 1000;
	    var days         = abs$1(this._days);
	    var months       = abs$1(this._months);
	    var minutes, hours, years;

	    // 3600 seconds -> 60 minutes -> 1 hour
	    minutes           = absFloor(seconds / 60);
	    hours             = absFloor(minutes / 60);
	    seconds %= 60;
	    minutes %= 60;

	    // 12 months -> 1 year
	    years  = absFloor(months / 12);
	    months %= 12;


	    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
	    var Y = years;
	    var M = months;
	    var D = days;
	    var h = hours;
	    var m = minutes;
	    var s = seconds;
	    var total = this.asSeconds();

	    if (!total) {
	        // this is the same as C#'s (Noda) and python (isodate)...
	        // but not other JS (goog.date)
	        return 'P0D';
	    }

	    return (total < 0 ? '-' : '') +
	        'P' +
	        (Y ? Y + 'Y' : '') +
	        (M ? M + 'M' : '') +
	        (D ? D + 'D' : '') +
	        ((h || m || s) ? 'T' : '') +
	        (h ? h + 'H' : '') +
	        (m ? m + 'M' : '') +
	        (s ? s + 'S' : '');
	}

	var proto$2 = Duration.prototype;

	proto$2.abs            = abs;
	proto$2.add            = add$1;
	proto$2.subtract       = subtract$1;
	proto$2.as             = as;
	proto$2.asMilliseconds = asMilliseconds;
	proto$2.asSeconds      = asSeconds;
	proto$2.asMinutes      = asMinutes;
	proto$2.asHours        = asHours;
	proto$2.asDays         = asDays;
	proto$2.asWeeks        = asWeeks;
	proto$2.asMonths       = asMonths;
	proto$2.asYears        = asYears;
	proto$2.valueOf        = valueOf$1;
	proto$2._bubble        = bubble;
	proto$2.get            = get$2;
	proto$2.milliseconds   = milliseconds;
	proto$2.seconds        = seconds;
	proto$2.minutes        = minutes;
	proto$2.hours          = hours;
	proto$2.days           = days;
	proto$2.weeks          = weeks;
	proto$2.months         = months;
	proto$2.years          = years;
	proto$2.humanize       = humanize;
	proto$2.toISOString    = toISOString$1;
	proto$2.toString       = toISOString$1;
	proto$2.toJSON         = toISOString$1;
	proto$2.locale         = locale;
	proto$2.localeData     = localeData;

	// Deprecations
	proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);
	proto$2.lang = lang;

	// Side effect imports

	// FORMATTING

	addFormatToken('X', 0, 0, 'unix');
	addFormatToken('x', 0, 0, 'valueOf');

	// PARSING

	addRegexToken('x', matchSigned);
	addRegexToken('X', matchTimestamp);
	addParseToken('X', function (input, array, config) {
	    config._d = new Date(parseFloat(input, 10) * 1000);
	});
	addParseToken('x', function (input, array, config) {
	    config._d = new Date(toInt(input));
	});

	// Side effect imports


	hooks.version = '2.17.1';

	setHookCallback(createLocal);

	hooks.fn                    = proto;
	hooks.min                   = min;
	hooks.max                   = max;
	hooks.now                   = now;
	hooks.utc                   = createUTC;
	hooks.unix                  = createUnix;
	hooks.months                = listMonths;
	hooks.isDate                = isDate;
	hooks.locale                = getSetGlobalLocale;
	hooks.invalid               = createInvalid;
	hooks.duration              = createDuration;
	hooks.isMoment              = isMoment;
	hooks.weekdays              = listWeekdays;
	hooks.parseZone             = createInZone;
	hooks.localeData            = getLocale;
	hooks.isDuration            = isDuration;
	hooks.monthsShort           = listMonthsShort;
	hooks.weekdaysMin           = listWeekdaysMin;
	hooks.defineLocale          = defineLocale;
	hooks.updateLocale          = updateLocale;
	hooks.locales               = listLocales;
	hooks.weekdaysShort         = listWeekdaysShort;
	hooks.normalizeUnits        = normalizeUnits;
	hooks.relativeTimeRounding = getSetRelativeTimeRounding;
	hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
	hooks.calendarFormat        = getCalendarFormat;
	hooks.prototype             = proto;

	return hooks;

	})));

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(309)(module)))

/***/ },
/* 309 */
/***/ function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ },
/* 310 */
/***/ function(module, exports, __webpack_require__) {

	var map = {
		"./af": 311,
		"./af.js": 311,
		"./ar": 312,
		"./ar-dz": 313,
		"./ar-dz.js": 313,
		"./ar-ly": 314,
		"./ar-ly.js": 314,
		"./ar-ma": 315,
		"./ar-ma.js": 315,
		"./ar-sa": 316,
		"./ar-sa.js": 316,
		"./ar-tn": 317,
		"./ar-tn.js": 317,
		"./ar.js": 312,
		"./az": 318,
		"./az.js": 318,
		"./be": 319,
		"./be.js": 319,
		"./bg": 320,
		"./bg.js": 320,
		"./bn": 321,
		"./bn.js": 321,
		"./bo": 322,
		"./bo.js": 322,
		"./br": 323,
		"./br.js": 323,
		"./bs": 324,
		"./bs.js": 324,
		"./ca": 325,
		"./ca.js": 325,
		"./cs": 326,
		"./cs.js": 326,
		"./cv": 327,
		"./cv.js": 327,
		"./cy": 328,
		"./cy.js": 328,
		"./da": 329,
		"./da.js": 329,
		"./de": 330,
		"./de-at": 331,
		"./de-at.js": 331,
		"./de.js": 330,
		"./dv": 332,
		"./dv.js": 332,
		"./el": 333,
		"./el.js": 333,
		"./en-au": 334,
		"./en-au.js": 334,
		"./en-ca": 335,
		"./en-ca.js": 335,
		"./en-gb": 336,
		"./en-gb.js": 336,
		"./en-ie": 337,
		"./en-ie.js": 337,
		"./en-nz": 338,
		"./en-nz.js": 338,
		"./eo": 339,
		"./eo.js": 339,
		"./es": 340,
		"./es-do": 341,
		"./es-do.js": 341,
		"./es.js": 340,
		"./et": 342,
		"./et.js": 342,
		"./eu": 343,
		"./eu.js": 343,
		"./fa": 344,
		"./fa.js": 344,
		"./fi": 345,
		"./fi.js": 345,
		"./fo": 346,
		"./fo.js": 346,
		"./fr": 347,
		"./fr-ca": 348,
		"./fr-ca.js": 348,
		"./fr-ch": 349,
		"./fr-ch.js": 349,
		"./fr.js": 347,
		"./fy": 350,
		"./fy.js": 350,
		"./gd": 351,
		"./gd.js": 351,
		"./gl": 352,
		"./gl.js": 352,
		"./he": 353,
		"./he.js": 353,
		"./hi": 354,
		"./hi.js": 354,
		"./hr": 355,
		"./hr.js": 355,
		"./hu": 356,
		"./hu.js": 356,
		"./hy-am": 357,
		"./hy-am.js": 357,
		"./id": 358,
		"./id.js": 358,
		"./is": 359,
		"./is.js": 359,
		"./it": 360,
		"./it.js": 360,
		"./ja": 361,
		"./ja.js": 361,
		"./jv": 362,
		"./jv.js": 362,
		"./ka": 363,
		"./ka.js": 363,
		"./kk": 364,
		"./kk.js": 364,
		"./km": 365,
		"./km.js": 365,
		"./ko": 366,
		"./ko.js": 366,
		"./ky": 367,
		"./ky.js": 367,
		"./lb": 368,
		"./lb.js": 368,
		"./lo": 369,
		"./lo.js": 369,
		"./lt": 370,
		"./lt.js": 370,
		"./lv": 371,
		"./lv.js": 371,
		"./me": 372,
		"./me.js": 372,
		"./mi": 373,
		"./mi.js": 373,
		"./mk": 374,
		"./mk.js": 374,
		"./ml": 375,
		"./ml.js": 375,
		"./mr": 376,
		"./mr.js": 376,
		"./ms": 377,
		"./ms-my": 378,
		"./ms-my.js": 378,
		"./ms.js": 377,
		"./my": 379,
		"./my.js": 379,
		"./nb": 380,
		"./nb.js": 380,
		"./ne": 381,
		"./ne.js": 381,
		"./nl": 382,
		"./nl-be": 383,
		"./nl-be.js": 383,
		"./nl.js": 382,
		"./nn": 384,
		"./nn.js": 384,
		"./pa-in": 385,
		"./pa-in.js": 385,
		"./pl": 386,
		"./pl.js": 386,
		"./pt": 387,
		"./pt-br": 388,
		"./pt-br.js": 388,
		"./pt.js": 387,
		"./ro": 389,
		"./ro.js": 389,
		"./ru": 390,
		"./ru.js": 390,
		"./se": 391,
		"./se.js": 391,
		"./si": 392,
		"./si.js": 392,
		"./sk": 393,
		"./sk.js": 393,
		"./sl": 394,
		"./sl.js": 394,
		"./sq": 395,
		"./sq.js": 395,
		"./sr": 396,
		"./sr-cyrl": 397,
		"./sr-cyrl.js": 397,
		"./sr.js": 396,
		"./ss": 398,
		"./ss.js": 398,
		"./sv": 399,
		"./sv.js": 399,
		"./sw": 400,
		"./sw.js": 400,
		"./ta": 401,
		"./ta.js": 401,
		"./te": 402,
		"./te.js": 402,
		"./tet": 403,
		"./tet.js": 403,
		"./th": 404,
		"./th.js": 404,
		"./tl-ph": 405,
		"./tl-ph.js": 405,
		"./tlh": 406,
		"./tlh.js": 406,
		"./tr": 407,
		"./tr.js": 407,
		"./tzl": 408,
		"./tzl.js": 408,
		"./tzm": 409,
		"./tzm-latn": 410,
		"./tzm-latn.js": 410,
		"./tzm.js": 409,
		"./uk": 411,
		"./uk.js": 411,
		"./uz": 412,
		"./uz.js": 412,
		"./vi": 413,
		"./vi.js": 413,
		"./x-pseudo": 414,
		"./x-pseudo.js": 414,
		"./yo": 415,
		"./yo.js": 415,
		"./zh-cn": 416,
		"./zh-cn.js": 416,
		"./zh-hk": 417,
		"./zh-hk.js": 417,
		"./zh-tw": 418,
		"./zh-tw.js": 418
	};
	function webpackContext(req) {
		return __webpack_require__(webpackContextResolve(req));
	};
	function webpackContextResolve(req) {
		return map[req] || (function() { throw new Error("Cannot find module '" + req + "'.") }());
	};
	webpackContext.keys = function webpackContextKeys() {
		return Object.keys(map);
	};
	webpackContext.resolve = webpackContextResolve;
	module.exports = webpackContext;
	webpackContext.id = 310;


/***/ },
/* 311 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Afrikaans [af]
	//! author : Werner Mollentze : https://github.com/wernerm

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var af = moment.defineLocale('af', {
	    months : 'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split('_'),
	    monthsShort : 'Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split('_'),
	    weekdays : 'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split('_'),
	    weekdaysShort : 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),
	    weekdaysMin : 'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'),
	    meridiemParse: /vm|nm/i,
	    isPM : function (input) {
	        return /^nm$/i.test(input);
	    },
	    meridiem : function (hours, minutes, isLower) {
	        if (hours < 12) {
	            return isLower ? 'vm' : 'VM';
	        } else {
	            return isLower ? 'nm' : 'NM';
	        }
	    },
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd, D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay : '[Vandag om] LT',
	        nextDay : '[Môre om] LT',
	        nextWeek : 'dddd [om] LT',
	        lastDay : '[Gister om] LT',
	        lastWeek : '[Laas] dddd [om] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'oor %s',
	        past : '%s gelede',
	        s : '\'n paar sekondes',
	        m : '\'n minuut',
	        mm : '%d minute',
	        h : '\'n uur',
	        hh : '%d ure',
	        d : '\'n dag',
	        dd : '%d dae',
	        M : '\'n maand',
	        MM : '%d maande',
	        y : '\'n jaar',
	        yy : '%d jaar'
	    },
	    ordinalParse: /\d{1,2}(ste|de)/,
	    ordinal : function (number) {
	        return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de'); // Thanks to Joris Röling : https://github.com/jjupiter
	    },
	    week : {
	        dow : 1, // Maandag is die eerste dag van die week.
	        doy : 4  // Die week wat die 4de Januarie bevat is die eerste week van die jaar.
	    }
	});

	return af;

	})));


/***/ },
/* 312 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Arabic [ar]
	//! author : Abdel Said: https://github.com/abdelsaid
	//! author : Ahmed Elkhatib
	//! author : forabi https://github.com/forabi

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var symbolMap = {
	    '1': '١',
	    '2': '٢',
	    '3': '٣',
	    '4': '٤',
	    '5': '٥',
	    '6': '٦',
	    '7': '٧',
	    '8': '٨',
	    '9': '٩',
	    '0': '٠'
	};
	var numberMap = {
	    '١': '1',
	    '٢': '2',
	    '٣': '3',
	    '٤': '4',
	    '٥': '5',
	    '٦': '6',
	    '٧': '7',
	    '٨': '8',
	    '٩': '9',
	    '٠': '0'
	};
	var pluralForm = function (n) {
	    return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;
	};
	var plurals = {
	    s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],
	    m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],
	    h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],
	    d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],
	    M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],
	    y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']
	};
	var pluralize = function (u) {
	    return function (number, withoutSuffix, string, isFuture) {
	        var f = pluralForm(number),
	            str = plurals[u][pluralForm(number)];
	        if (f === 2) {
	            str = str[withoutSuffix ? 0 : 1];
	        }
	        return str.replace(/%d/i, number);
	    };
	};
	var months = [
	    'كانون الثاني يناير',
	    'شباط فبراير',
	    'آذار مارس',
	    'نيسان أبريل',
	    'أيار مايو',
	    'حزيران يونيو',
	    'تموز يوليو',
	    'آب أغسطس',
	    'أيلول سبتمبر',
	    'تشرين الأول أكتوبر',
	    'تشرين الثاني نوفمبر',
	    'كانون الأول ديسمبر'
	];

	var ar = moment.defineLocale('ar', {
	    months : months,
	    monthsShort : months,
	    weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	    weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
	    weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'D/\u200FM/\u200FYYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd D MMMM YYYY HH:mm'
	    },
	    meridiemParse: /ص|م/,
	    isPM : function (input) {
	        return 'م' === input;
	    },
	    meridiem : function (hour, minute, isLower) {
	        if (hour < 12) {
	            return 'ص';
	        } else {
	            return 'م';
	        }
	    },
	    calendar : {
	        sameDay: '[اليوم عند الساعة] LT',
	        nextDay: '[غدًا عند الساعة] LT',
	        nextWeek: 'dddd [عند الساعة] LT',
	        lastDay: '[أمس عند الساعة] LT',
	        lastWeek: 'dddd [عند الساعة] LT',
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'بعد %s',
	        past : 'منذ %s',
	        s : pluralize('s'),
	        m : pluralize('m'),
	        mm : pluralize('m'),
	        h : pluralize('h'),
	        hh : pluralize('h'),
	        d : pluralize('d'),
	        dd : pluralize('d'),
	        M : pluralize('M'),
	        MM : pluralize('M'),
	        y : pluralize('y'),
	        yy : pluralize('y')
	    },
	    preparse: function (string) {
	        return string.replace(/\u200f/g, '').replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
	            return numberMap[match];
	        }).replace(/،/g, ',');
	    },
	    postformat: function (string) {
	        return string.replace(/\d/g, function (match) {
	            return symbolMap[match];
	        }).replace(/,/g, '،');
	    },
	    week : {
	        dow : 6, // Saturday is the first day of the week.
	        doy : 12  // The week that contains Jan 1st is the first week of the year.
	    }
	});

	return ar;

	})));


/***/ },
/* 313 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Arabic (Algeria) [ar-dz]
	//! author : Noureddine LOUAHEDJ : https://github.com/noureddineme

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var arDz = moment.defineLocale('ar-dz', {
	    months : 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	    monthsShort : 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	    weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	    weekdaysShort : 'احد_اثنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
	    weekdaysMin : 'أح_إث_ثلا_أر_خم_جم_سب'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay: '[اليوم على الساعة] LT',
	        nextDay: '[غدا على الساعة] LT',
	        nextWeek: 'dddd [على الساعة] LT',
	        lastDay: '[أمس على الساعة] LT',
	        lastWeek: 'dddd [على الساعة] LT',
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'في %s',
	        past : 'منذ %s',
	        s : 'ثوان',
	        m : 'دقيقة',
	        mm : '%d دقائق',
	        h : 'ساعة',
	        hh : '%d ساعات',
	        d : 'يوم',
	        dd : '%d أيام',
	        M : 'شهر',
	        MM : '%d أشهر',
	        y : 'سنة',
	        yy : '%d سنوات'
	    },
	    week : {
	        dow : 0, // Sunday is the first day of the week.
	        doy : 4  // The week that contains Jan 1st is the first week of the year.
	    }
	});

	return arDz;

	})));


/***/ },
/* 314 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Arabic (Lybia) [ar-ly]
	//! author : Ali Hmer: https://github.com/kikoanis

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var symbolMap = {
	    '1': '1',
	    '2': '2',
	    '3': '3',
	    '4': '4',
	    '5': '5',
	    '6': '6',
	    '7': '7',
	    '8': '8',
	    '9': '9',
	    '0': '0'
	};
	var pluralForm = function (n) {
	    return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;
	};
	var plurals = {
	    s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],
	    m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],
	    h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],
	    d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],
	    M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],
	    y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']
	};
	var pluralize = function (u) {
	    return function (number, withoutSuffix, string, isFuture) {
	        var f = pluralForm(number),
	            str = plurals[u][pluralForm(number)];
	        if (f === 2) {
	            str = str[withoutSuffix ? 0 : 1];
	        }
	        return str.replace(/%d/i, number);
	    };
	};
	var months = [
	    'يناير',
	    'فبراير',
	    'مارس',
	    'أبريل',
	    'مايو',
	    'يونيو',
	    'يوليو',
	    'أغسطس',
	    'سبتمبر',
	    'أكتوبر',
	    'نوفمبر',
	    'ديسمبر'
	];

	var arLy = moment.defineLocale('ar-ly', {
	    months : months,
	    monthsShort : months,
	    weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	    weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
	    weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'D/\u200FM/\u200FYYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd D MMMM YYYY HH:mm'
	    },
	    meridiemParse: /ص|م/,
	    isPM : function (input) {
	        return 'م' === input;
	    },
	    meridiem : function (hour, minute, isLower) {
	        if (hour < 12) {
	            return 'ص';
	        } else {
	            return 'م';
	        }
	    },
	    calendar : {
	        sameDay: '[اليوم عند الساعة] LT',
	        nextDay: '[غدًا عند الساعة] LT',
	        nextWeek: 'dddd [عند الساعة] LT',
	        lastDay: '[أمس عند الساعة] LT',
	        lastWeek: 'dddd [عند الساعة] LT',
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'بعد %s',
	        past : 'منذ %s',
	        s : pluralize('s'),
	        m : pluralize('m'),
	        mm : pluralize('m'),
	        h : pluralize('h'),
	        hh : pluralize('h'),
	        d : pluralize('d'),
	        dd : pluralize('d'),
	        M : pluralize('M'),
	        MM : pluralize('M'),
	        y : pluralize('y'),
	        yy : pluralize('y')
	    },
	    preparse: function (string) {
	        return string.replace(/\u200f/g, '').replace(/،/g, ',');
	    },
	    postformat: function (string) {
	        return string.replace(/\d/g, function (match) {
	            return symbolMap[match];
	        }).replace(/,/g, '،');
	    },
	    week : {
	        dow : 6, // Saturday is the first day of the week.
	        doy : 12  // The week that contains Jan 1st is the first week of the year.
	    }
	});

	return arLy;

	})));


/***/ },
/* 315 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Arabic (Morocco) [ar-ma]
	//! author : ElFadili Yassine : https://github.com/ElFadiliY
	//! author : Abdel Said : https://github.com/abdelsaid

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var arMa = moment.defineLocale('ar-ma', {
	    months : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
	    monthsShort : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
	    weekdays : 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	    weekdaysShort : 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
	    weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay: '[اليوم على الساعة] LT',
	        nextDay: '[غدا على الساعة] LT',
	        nextWeek: 'dddd [على الساعة] LT',
	        lastDay: '[أمس على الساعة] LT',
	        lastWeek: 'dddd [على الساعة] LT',
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'في %s',
	        past : 'منذ %s',
	        s : 'ثوان',
	        m : 'دقيقة',
	        mm : '%d دقائق',
	        h : 'ساعة',
	        hh : '%d ساعات',
	        d : 'يوم',
	        dd : '%d أيام',
	        M : 'شهر',
	        MM : '%d أشهر',
	        y : 'سنة',
	        yy : '%d سنوات'
	    },
	    week : {
	        dow : 6, // Saturday is the first day of the week.
	        doy : 12  // The week that contains Jan 1st is the first week of the year.
	    }
	});

	return arMa;

	})));


/***/ },
/* 316 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Arabic (Saudi Arabia) [ar-sa]
	//! author : Suhail Alkowaileet : https://github.com/xsoh

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var symbolMap = {
	    '1': '١',
	    '2': '٢',
	    '3': '٣',
	    '4': '٤',
	    '5': '٥',
	    '6': '٦',
	    '7': '٧',
	    '8': '٨',
	    '9': '٩',
	    '0': '٠'
	};
	var numberMap = {
	    '١': '1',
	    '٢': '2',
	    '٣': '3',
	    '٤': '4',
	    '٥': '5',
	    '٦': '6',
	    '٧': '7',
	    '٨': '8',
	    '٩': '9',
	    '٠': '0'
	};

	var arSa = moment.defineLocale('ar-sa', {
	    months : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	    monthsShort : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	    weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	    weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
	    weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd D MMMM YYYY HH:mm'
	    },
	    meridiemParse: /ص|م/,
	    isPM : function (input) {
	        return 'م' === input;
	    },
	    meridiem : function (hour, minute, isLower) {
	        if (hour < 12) {
	            return 'ص';
	        } else {
	            return 'م';
	        }
	    },
	    calendar : {
	        sameDay: '[اليوم على الساعة] LT',
	        nextDay: '[غدا على الساعة] LT',
	        nextWeek: 'dddd [على الساعة] LT',
	        lastDay: '[أمس على الساعة] LT',
	        lastWeek: 'dddd [على الساعة] LT',
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'في %s',
	        past : 'منذ %s',
	        s : 'ثوان',
	        m : 'دقيقة',
	        mm : '%d دقائق',
	        h : 'ساعة',
	        hh : '%d ساعات',
	        d : 'يوم',
	        dd : '%d أيام',
	        M : 'شهر',
	        MM : '%d أشهر',
	        y : 'سنة',
	        yy : '%d سنوات'
	    },
	    preparse: function (string) {
	        return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
	            return numberMap[match];
	        }).replace(/،/g, ',');
	    },
	    postformat: function (string) {
	        return string.replace(/\d/g, function (match) {
	            return symbolMap[match];
	        }).replace(/,/g, '،');
	    },
	    week : {
	        dow : 0, // Sunday is the first day of the week.
	        doy : 6  // The week that contains Jan 1st is the first week of the year.
	    }
	});

	return arSa;

	})));


/***/ },
/* 317 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale  :  Arabic (Tunisia) [ar-tn]
	//! author : Nader Toukabri : https://github.com/naderio

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var arTn = moment.defineLocale('ar-tn', {
	    months: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	    monthsShort: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	    weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	    weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
	    weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat: {
	        LT: 'HH:mm',
	        LTS: 'HH:mm:ss',
	        L: 'DD/MM/YYYY',
	        LL: 'D MMMM YYYY',
	        LLL: 'D MMMM YYYY HH:mm',
	        LLLL: 'dddd D MMMM YYYY HH:mm'
	    },
	    calendar: {
	        sameDay: '[اليوم على الساعة] LT',
	        nextDay: '[غدا على الساعة] LT',
	        nextWeek: 'dddd [على الساعة] LT',
	        lastDay: '[أمس على الساعة] LT',
	        lastWeek: 'dddd [على الساعة] LT',
	        sameElse: 'L'
	    },
	    relativeTime: {
	        future: 'في %s',
	        past: 'منذ %s',
	        s: 'ثوان',
	        m: 'دقيقة',
	        mm: '%d دقائق',
	        h: 'ساعة',
	        hh: '%d ساعات',
	        d: 'يوم',
	        dd: '%d أيام',
	        M: 'شهر',
	        MM: '%d أشهر',
	        y: 'سنة',
	        yy: '%d سنوات'
	    },
	    week: {
	        dow: 1, // Monday is the first day of the week.
	        doy: 4 // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return arTn;

	})));


/***/ },
/* 318 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Azerbaijani [az]
	//! author : topchiyev : https://github.com/topchiyev

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var suffixes = {
	    1: '-inci',
	    5: '-inci',
	    8: '-inci',
	    70: '-inci',
	    80: '-inci',
	    2: '-nci',
	    7: '-nci',
	    20: '-nci',
	    50: '-nci',
	    3: '-üncü',
	    4: '-üncü',
	    100: '-üncü',
	    6: '-ncı',
	    9: '-uncu',
	    10: '-uncu',
	    30: '-uncu',
	    60: '-ıncı',
	    90: '-ıncı'
	};

	var az = moment.defineLocale('az', {
	    months : 'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split('_'),
	    monthsShort : 'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'),
	    weekdays : 'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split('_'),
	    weekdaysShort : 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),
	    weekdaysMin : 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd, D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay : '[bugün saat] LT',
	        nextDay : '[sabah saat] LT',
	        nextWeek : '[gələn həftə] dddd [saat] LT',
	        lastDay : '[dünən] LT',
	        lastWeek : '[keçən həftə] dddd [saat] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : '%s sonra',
	        past : '%s əvvəl',
	        s : 'birneçə saniyyə',
	        m : 'bir dəqiqə',
	        mm : '%d dəqiqə',
	        h : 'bir saat',
	        hh : '%d saat',
	        d : 'bir gün',
	        dd : '%d gün',
	        M : 'bir ay',
	        MM : '%d ay',
	        y : 'bir il',
	        yy : '%d il'
	    },
	    meridiemParse: /gecə|səhər|gündüz|axşam/,
	    isPM : function (input) {
	        return /^(gündüz|axşam)$/.test(input);
	    },
	    meridiem : function (hour, minute, isLower) {
	        if (hour < 4) {
	            return 'gecə';
	        } else if (hour < 12) {
	            return 'səhər';
	        } else if (hour < 17) {
	            return 'gündüz';
	        } else {
	            return 'axşam';
	        }
	    },
	    ordinalParse: /\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,
	    ordinal : function (number) {
	        if (number === 0) {  // special case for zero
	            return number + '-ıncı';
	        }
	        var a = number % 10,
	            b = number % 100 - a,
	            c = number >= 100 ? 100 : null;
	        return number + (suffixes[a] || suffixes[b] || suffixes[c]);
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});

	return az;

	})));


/***/ },
/* 319 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Belarusian [be]
	//! author : Dmitry Demidov : https://github.com/demidov91
	//! author: Praleska: http://praleska.pro/
	//! Author : Menelion Elensúle : https://github.com/Oire

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	function plural(word, num) {
	    var forms = word.split('_');
	    return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
	}
	function relativeTimeWithPlural(number, withoutSuffix, key) {
	    var format = {
	        'mm': withoutSuffix ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін',
	        'hh': withoutSuffix ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін',
	        'dd': 'дзень_дні_дзён',
	        'MM': 'месяц_месяцы_месяцаў',
	        'yy': 'год_гады_гадоў'
	    };
	    if (key === 'm') {
	        return withoutSuffix ? 'хвіліна' : 'хвіліну';
	    }
	    else if (key === 'h') {
	        return withoutSuffix ? 'гадзіна' : 'гадзіну';
	    }
	    else {
	        return number + ' ' + plural(format[key], +number);
	    }
	}

	var be = moment.defineLocale('be', {
	    months : {
	        format: 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split('_'),
	        standalone: 'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split('_')
	    },
	    monthsShort : 'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split('_'),
	    weekdays : {
	        format: 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split('_'),
	        standalone: 'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split('_'),
	        isFormat: /\[ ?[Вв] ?(?:мінулую|наступную)? ?\] ?dddd/
	    },
	    weekdaysShort : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
	    weekdaysMin : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D MMMM YYYY г.',
	        LLL : 'D MMMM YYYY г., HH:mm',
	        LLLL : 'dddd, D MMMM YYYY г., HH:mm'
	    },
	    calendar : {
	        sameDay: '[Сёння ў] LT',
	        nextDay: '[Заўтра ў] LT',
	        lastDay: '[Учора ў] LT',
	        nextWeek: function () {
	            return '[У] dddd [ў] LT';
	        },
	        lastWeek: function () {
	            switch (this.day()) {
	                case 0:
	                case 3:
	                case 5:
	                case 6:
	                    return '[У мінулую] dddd [ў] LT';
	                case 1:
	                case 2:
	                case 4:
	                    return '[У мінулы] dddd [ў] LT';
	            }
	        },
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'праз %s',
	        past : '%s таму',
	        s : 'некалькі секунд',
	        m : relativeTimeWithPlural,
	        mm : relativeTimeWithPlural,
	        h : relativeTimeWithPlural,
	        hh : relativeTimeWithPlural,
	        d : 'дзень',
	        dd : relativeTimeWithPlural,
	        M : 'месяц',
	        MM : relativeTimeWithPlural,
	        y : 'год',
	        yy : relativeTimeWithPlural
	    },
	    meridiemParse: /ночы|раніцы|дня|вечара/,
	    isPM : function (input) {
	        return /^(дня|вечара)$/.test(input);
	    },
	    meridiem : function (hour, minute, isLower) {
	        if (hour < 4) {
	            return 'ночы';
	        } else if (hour < 12) {
	            return 'раніцы';
	        } else if (hour < 17) {
	            return 'дня';
	        } else {
	            return 'вечара';
	        }
	    },
	    ordinalParse: /\d{1,2}-(і|ы|га)/,
	    ordinal: function (number, period) {
	        switch (period) {
	            case 'M':
	            case 'd':
	            case 'DDD':
	            case 'w':
	            case 'W':
	                return (number % 10 === 2 || number % 10 === 3) && (number % 100 !== 12 && number % 100 !== 13) ? number + '-і' : number + '-ы';
	            case 'D':
	                return number + '-га';
	            default:
	                return number;
	        }
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});

	return be;

	})));


/***/ },
/* 320 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Bulgarian [bg]
	//! author : Krasen Borisov : https://github.com/kraz

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var bg = moment.defineLocale('bg', {
	    months : 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),
	    monthsShort : 'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),
	    weekdays : 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),
	    weekdaysShort : 'нед_пон_вто_сря_чет_пет_съб'.split('_'),
	    weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
	    longDateFormat : {
	        LT : 'H:mm',
	        LTS : 'H:mm:ss',
	        L : 'D.MM.YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY H:mm',
	        LLLL : 'dddd, D MMMM YYYY H:mm'
	    },
	    calendar : {
	        sameDay : '[Днес в] LT',
	        nextDay : '[Утре в] LT',
	        nextWeek : 'dddd [в] LT',
	        lastDay : '[Вчера в] LT',
	        lastWeek : function () {
	            switch (this.day()) {
	                case 0:
	                case 3:
	                case 6:
	                    return '[В изминалата] dddd [в] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[В изминалия] dddd [в] LT';
	            }
	        },
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'след %s',
	        past : 'преди %s',
	        s : 'няколко секунди',
	        m : 'минута',
	        mm : '%d минути',
	        h : 'час',
	        hh : '%d часа',
	        d : 'ден',
	        dd : '%d дни',
	        M : 'месец',
	        MM : '%d месеца',
	        y : 'година',
	        yy : '%d години'
	    },
	    ordinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
	    ordinal : function (number) {
	        var lastDigit = number % 10,
	            last2Digits = number % 100;
	        if (number === 0) {
	            return number + '-ев';
	        } else if (last2Digits === 0) {
	            return number + '-ен';
	        } else if (last2Digits > 10 && last2Digits < 20) {
	            return number + '-ти';
	        } else if (lastDigit === 1) {
	            return number + '-ви';
	        } else if (lastDigit === 2) {
	            return number + '-ри';
	        } else if (lastDigit === 7 || lastDigit === 8) {
	            return number + '-ми';
	        } else {
	            return number + '-ти';
	        }
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});

	return bg;

	})));


/***/ },
/* 321 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Bengali [bn]
	//! author : Kaushik Gandhi : https://github.com/kaushikgandhi

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var symbolMap = {
	    '1': '১',
	    '2': '২',
	    '3': '৩',
	    '4': '৪',
	    '5': '৫',
	    '6': '৬',
	    '7': '৭',
	    '8': '৮',
	    '9': '৯',
	    '0': '০'
	};
	var numberMap = {
	    '১': '1',
	    '২': '2',
	    '৩': '3',
	    '৪': '4',
	    '৫': '5',
	    '৬': '6',
	    '৭': '7',
	    '৮': '8',
	    '৯': '9',
	    '০': '0'
	};

	var bn = moment.defineLocale('bn', {
	    months : 'জানুয়ারী_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split('_'),
	    monthsShort : 'জানু_ফেব_মার্চ_এপ্র_মে_জুন_জুল_আগ_সেপ্ট_অক্টো_নভে_ডিসে'.split('_'),
	    weekdays : 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split('_'),
	    weekdaysShort : 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),
	    weekdaysMin : 'রবি_সোম_মঙ্গ_বুধ_বৃহঃ_শুক্র_শনি'.split('_'),
	    longDateFormat : {
	        LT : 'A h:mm সময়',
	        LTS : 'A h:mm:ss সময়',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY, A h:mm সময়',
	        LLLL : 'dddd, D MMMM YYYY, A h:mm সময়'
	    },
	    calendar : {
	        sameDay : '[আজ] LT',
	        nextDay : '[আগামীকাল] LT',
	        nextWeek : 'dddd, LT',
	        lastDay : '[গতকাল] LT',
	        lastWeek : '[গত] dddd, LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : '%s পরে',
	        past : '%s আগে',
	        s : 'কয়েক সেকেন্ড',
	        m : 'এক মিনিট',
	        mm : '%d মিনিট',
	        h : 'এক ঘন্টা',
	        hh : '%d ঘন্টা',
	        d : 'এক দিন',
	        dd : '%d দিন',
	        M : 'এক মাস',
	        MM : '%d মাস',
	        y : 'এক বছর',
	        yy : '%d বছর'
	    },
	    preparse: function (string) {
	        return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {
	            return numberMap[match];
	        });
	    },
	    postformat: function (string) {
	        return string.replace(/\d/g, function (match) {
	            return symbolMap[match];
	        });
	    },
	    meridiemParse: /রাত|সকাল|দুপুর|বিকাল|রাত/,
	    meridiemHour : function (hour, meridiem) {
	        if (hour === 12) {
	            hour = 0;
	        }
	        if ((meridiem === 'রাত' && hour >= 4) ||
	                (meridiem === 'দুপুর' && hour < 5) ||
	                meridiem === 'বিকাল') {
	            return hour + 12;
	        } else {
	            return hour;
	        }
	    },
	    meridiem : function (hour, minute, isLower) {
	        if (hour < 4) {
	            return 'রাত';
	        } else if (hour < 10) {
	            return 'সকাল';
	        } else if (hour < 17) {
	            return 'দুপুর';
	        } else if (hour < 20) {
	            return 'বিকাল';
	        } else {
	            return 'রাত';
	        }
	    },
	    week : {
	        dow : 0, // Sunday is the first day of the week.
	        doy : 6  // The week that contains Jan 1st is the first week of the year.
	    }
	});

	return bn;

	})));


/***/ },
/* 322 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Tibetan [bo]
	//! author : Thupten N. Chakrishar : https://github.com/vajradog

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var symbolMap = {
	    '1': '༡',
	    '2': '༢',
	    '3': '༣',
	    '4': '༤',
	    '5': '༥',
	    '6': '༦',
	    '7': '༧',
	    '8': '༨',
	    '9': '༩',
	    '0': '༠'
	};
	var numberMap = {
	    '༡': '1',
	    '༢': '2',
	    '༣': '3',
	    '༤': '4',
	    '༥': '5',
	    '༦': '6',
	    '༧': '7',
	    '༨': '8',
	    '༩': '9',
	    '༠': '0'
	};

	var bo = moment.defineLocale('bo', {
	    months : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
	    monthsShort : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
	    weekdays : 'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split('_'),
	    weekdaysShort : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
	    weekdaysMin : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
	    longDateFormat : {
	        LT : 'A h:mm',
	        LTS : 'A h:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY, A h:mm',
	        LLLL : 'dddd, D MMMM YYYY, A h:mm'
	    },
	    calendar : {
	        sameDay : '[དི་རིང] LT',
	        nextDay : '[སང་ཉིན] LT',
	        nextWeek : '[བདུན་ཕྲག་རྗེས་མ], LT',
	        lastDay : '[ཁ་སང] LT',
	        lastWeek : '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : '%s ལ་',
	        past : '%s སྔན་ལ',
	        s : 'ལམ་སང',
	        m : 'སྐར་མ་གཅིག',
	        mm : '%d སྐར་མ',
	        h : 'ཆུ་ཚོད་གཅིག',
	        hh : '%d ཆུ་ཚོད',
	        d : 'ཉིན་གཅིག',
	        dd : '%d ཉིན་',
	        M : 'ཟླ་བ་གཅིག',
	        MM : '%d ཟླ་བ',
	        y : 'ལོ་གཅིག',
	        yy : '%d ལོ'
	    },
	    preparse: function (string) {
	        return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) {
	            return numberMap[match];
	        });
	    },
	    postformat: function (string) {
	        return string.replace(/\d/g, function (match) {
	            return symbolMap[match];
	        });
	    },
	    meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,
	    meridiemHour : function (hour, meridiem) {
	        if (hour === 12) {
	            hour = 0;
	        }
	        if ((meridiem === 'མཚན་མོ' && hour >= 4) ||
	                (meridiem === 'ཉིན་གུང' && hour < 5) ||
	                meridiem === 'དགོང་དག') {
	            return hour + 12;
	        } else {
	            return hour;
	        }
	    },
	    meridiem : function (hour, minute, isLower) {
	        if (hour < 4) {
	            return 'མཚན་མོ';
	        } else if (hour < 10) {
	            return 'ཞོགས་ཀས';
	        } else if (hour < 17) {
	            return 'ཉིན་གུང';
	        } else if (hour < 20) {
	            return 'དགོང་དག';
	        } else {
	            return 'མཚན་མོ';
	        }
	    },
	    week : {
	        dow : 0, // Sunday is the first day of the week.
	        doy : 6  // The week that contains Jan 1st is the first week of the year.
	    }
	});

	return bo;

	})));


/***/ },
/* 323 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Breton [br]
	//! author : Jean-Baptiste Le Duigou : https://github.com/jbleduigou

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	function relativeTimeWithMutation(number, withoutSuffix, key) {
	    var format = {
	        'mm': 'munutenn',
	        'MM': 'miz',
	        'dd': 'devezh'
	    };
	    return number + ' ' + mutation(format[key], number);
	}
	function specialMutationForYears(number) {
	    switch (lastNumber(number)) {
	        case 1:
	        case 3:
	        case 4:
	        case 5:
	        case 9:
	            return number + ' bloaz';
	        default:
	            return number + ' vloaz';
	    }
	}
	function lastNumber(number) {
	    if (number > 9) {
	        return lastNumber(number % 10);
	    }
	    return number;
	}
	function mutation(text, number) {
	    if (number === 2) {
	        return softMutation(text);
	    }
	    return text;
	}
	function softMutation(text) {
	    var mutationTable = {
	        'm': 'v',
	        'b': 'v',
	        'd': 'z'
	    };
	    if (mutationTable[text.charAt(0)] === undefined) {
	        return text;
	    }
	    return mutationTable[text.charAt(0)] + text.substring(1);
	}

	var br = moment.defineLocale('br', {
	    months : 'Genver_C\'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split('_'),
	    monthsShort : 'Gen_C\'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),
	    weekdays : 'Sul_Lun_Meurzh_Merc\'her_Yaou_Gwener_Sadorn'.split('_'),
	    weekdaysShort : 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),
	    weekdaysMin : 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'h[e]mm A',
	        LTS : 'h[e]mm:ss A',
	        L : 'DD/MM/YYYY',
	        LL : 'D [a viz] MMMM YYYY',
	        LLL : 'D [a viz] MMMM YYYY h[e]mm A',
	        LLLL : 'dddd, D [a viz] MMMM YYYY h[e]mm A'
	    },
	    calendar : {
	        sameDay : '[Hiziv da] LT',
	        nextDay : '[Warc\'hoazh da] LT',
	        nextWeek : 'dddd [da] LT',
	        lastDay : '[Dec\'h da] LT',
	        lastWeek : 'dddd [paset da] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'a-benn %s',
	        past : '%s \'zo',
	        s : 'un nebeud segondennoù',
	        m : 'ur vunutenn',
	        mm : relativeTimeWithMutation,
	        h : 'un eur',
	        hh : '%d eur',
	        d : 'un devezh',
	        dd : relativeTimeWithMutation,
	        M : 'ur miz',
	        MM : relativeTimeWithMutation,
	        y : 'ur bloaz',
	        yy : specialMutationForYears
	    },
	    ordinalParse: /\d{1,2}(añ|vet)/,
	    ordinal : function (number) {
	        var output = (number === 1) ? 'añ' : 'vet';
	        return number + output;
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return br;

	})));


/***/ },
/* 324 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Bosnian [bs]
	//! author : Nedim Cholich : https://github.com/frontyard
	//! based on (hr) translation by Bojan Marković

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	function translate(number, withoutSuffix, key) {
	    var result = number + ' ';
	    switch (key) {
	        case 'm':
	            return withoutSuffix ? 'jedna minuta' : 'jedne minute';
	        case 'mm':
	            if (number === 1) {
	                result += 'minuta';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'minute';
	            } else {
	                result += 'minuta';
	            }
	            return result;
	        case 'h':
	            return withoutSuffix ? 'jedan sat' : 'jednog sata';
	        case 'hh':
	            if (number === 1) {
	                result += 'sat';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'sata';
	            } else {
	                result += 'sati';
	            }
	            return result;
	        case 'dd':
	            if (number === 1) {
	                result += 'dan';
	            } else {
	                result += 'dana';
	            }
	            return result;
	        case 'MM':
	            if (number === 1) {
	                result += 'mjesec';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'mjeseca';
	            } else {
	                result += 'mjeseci';
	            }
	            return result;
	        case 'yy':
	            if (number === 1) {
	                result += 'godina';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'godine';
	            } else {
	                result += 'godina';
	            }
	            return result;
	    }
	}

	var bs = moment.defineLocale('bs', {
	    months : 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split('_'),
	    monthsShort : 'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split('_'),
	    monthsParseExact: true,
	    weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
	    weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
	    weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'H:mm',
	        LTS : 'H:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D. MMMM YYYY',
	        LLL : 'D. MMMM YYYY H:mm',
	        LLLL : 'dddd, D. MMMM YYYY H:mm'
	    },
	    calendar : {
	        sameDay  : '[danas u] LT',
	        nextDay  : '[sutra u] LT',
	        nextWeek : function () {
	            switch (this.day()) {
	                case 0:
	                    return '[u] [nedjelju] [u] LT';
	                case 3:
	                    return '[u] [srijedu] [u] LT';
	                case 6:
	                    return '[u] [subotu] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[u] dddd [u] LT';
	            }
	        },
	        lastDay  : '[jučer u] LT',
	        lastWeek : function () {
	            switch (this.day()) {
	                case 0:
	                case 3:
	                    return '[prošlu] dddd [u] LT';
	                case 6:
	                    return '[prošle] [subote] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[prošli] dddd [u] LT';
	            }
	        },
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'za %s',
	        past   : 'prije %s',
	        s      : 'par sekundi',
	        m      : translate,
	        mm     : translate,
	        h      : translate,
	        hh     : translate,
	        d      : 'dan',
	        dd     : translate,
	        M      : 'mjesec',
	        MM     : translate,
	        y      : 'godinu',
	        yy     : translate
	    },
	    ordinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});

	return bs;

	})));


/***/ },
/* 325 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Catalan [ca]
	//! author : Juan G. Hurtado : https://github.com/juanghurtado

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var ca = moment.defineLocale('ca', {
	    months : 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),
	    monthsShort : 'gen._febr._mar._abr._mai._jun._jul._ag._set._oct._nov._des.'.split('_'),
	    monthsParseExact : true,
	    weekdays : 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),
	    weekdaysShort : 'dg._dl._dt._dc._dj._dv._ds.'.split('_'),
	    weekdaysMin : 'Dg_Dl_Dt_Dc_Dj_Dv_Ds'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'H:mm',
	        LTS : 'H:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY H:mm',
	        LLLL : 'dddd D MMMM YYYY H:mm'
	    },
	    calendar : {
	        sameDay : function () {
	            return '[avui a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	        },
	        nextDay : function () {
	            return '[demà a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	        },
	        nextWeek : function () {
	            return 'dddd [a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	        },
	        lastDay : function () {
	            return '[ahir a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	        },
	        lastWeek : function () {
	            return '[el] dddd [passat a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	        },
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'd\'aquí %s',
	        past : 'fa %s',
	        s : 'uns segons',
	        m : 'un minut',
	        mm : '%d minuts',
	        h : 'una hora',
	        hh : '%d hores',
	        d : 'un dia',
	        dd : '%d dies',
	        M : 'un mes',
	        MM : '%d mesos',
	        y : 'un any',
	        yy : '%d anys'
	    },
	    ordinalParse: /\d{1,2}(r|n|t|è|a)/,
	    ordinal : function (number, period) {
	        var output = (number === 1) ? 'r' :
	            (number === 2) ? 'n' :
	            (number === 3) ? 'r' :
	            (number === 4) ? 't' : 'è';
	        if (period === 'w' || period === 'W') {
	            output = 'a';
	        }
	        return number + output;
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return ca;

	})));


/***/ },
/* 326 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Czech [cs]
	//! author : petrbela : https://github.com/petrbela

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var months = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_');
	var monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_');
	function plural(n) {
	    return (n > 1) && (n < 5) && (~~(n / 10) !== 1);
	}
	function translate(number, withoutSuffix, key, isFuture) {
	    var result = number + ' ';
	    switch (key) {
	        case 's':  // a few seconds / in a few seconds / a few seconds ago
	            return (withoutSuffix || isFuture) ? 'pár sekund' : 'pár sekundami';
	        case 'm':  // a minute / in a minute / a minute ago
	            return withoutSuffix ? 'minuta' : (isFuture ? 'minutu' : 'minutou');
	        case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'minuty' : 'minut');
	            } else {
	                return result + 'minutami';
	            }
	            break;
	        case 'h':  // an hour / in an hour / an hour ago
	            return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');
	        case 'hh': // 9 hours / in 9 hours / 9 hours ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'hodiny' : 'hodin');
	            } else {
	                return result + 'hodinami';
	            }
	            break;
	        case 'd':  // a day / in a day / a day ago
	            return (withoutSuffix || isFuture) ? 'den' : 'dnem';
	        case 'dd': // 9 days / in 9 days / 9 days ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'dny' : 'dní');
	            } else {
	                return result + 'dny';
	            }
	            break;
	        case 'M':  // a month / in a month / a month ago
	            return (withoutSuffix || isFuture) ? 'měsíc' : 'měsícem';
	        case 'MM': // 9 months / in 9 months / 9 months ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'měsíce' : 'měsíců');
	            } else {
	                return result + 'měsíci';
	            }
	            break;
	        case 'y':  // a year / in a year / a year ago
	            return (withoutSuffix || isFuture) ? 'rok' : 'rokem';
	        case 'yy': // 9 years / in 9 years / 9 years ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'roky' : 'let');
	            } else {
	                return result + 'lety';
	            }
	            break;
	    }
	}

	var cs = moment.defineLocale('cs', {
	    months : months,
	    monthsShort : monthsShort,
	    monthsParse : (function (months, monthsShort) {
	        var i, _monthsParse = [];
	        for (i = 0; i < 12; i++) {
	            // use custom parser to solve problem with July (červenec)
	            _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');
	        }
	        return _monthsParse;
	    }(months, monthsShort)),
	    shortMonthsParse : (function (monthsShort) {
	        var i, _shortMonthsParse = [];
	        for (i = 0; i < 12; i++) {
	            _shortMonthsParse[i] = new RegExp('^' + monthsShort[i] + '$', 'i');
	        }
	        return _shortMonthsParse;
	    }(monthsShort)),
	    longMonthsParse : (function (months) {
	        var i, _longMonthsParse = [];
	        for (i = 0; i < 12; i++) {
	            _longMonthsParse[i] = new RegExp('^' + months[i] + '$', 'i');
	        }
	        return _longMonthsParse;
	    }(months)),
	    weekdays : 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),
	    weekdaysShort : 'ne_po_út_st_čt_pá_so'.split('_'),
	    weekdaysMin : 'ne_po_út_st_čt_pá_so'.split('_'),
	    longDateFormat : {
	        LT: 'H:mm',
	        LTS : 'H:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D. MMMM YYYY',
	        LLL : 'D. MMMM YYYY H:mm',
	        LLLL : 'dddd D. MMMM YYYY H:mm',
	        l : 'D. M. YYYY'
	    },
	    calendar : {
	        sameDay: '[dnes v] LT',
	        nextDay: '[zítra v] LT',
	        nextWeek: function () {
	            switch (this.day()) {
	                case 0:
	                    return '[v neděli v] LT';
	                case 1:
	                case 2:
	                    return '[v] dddd [v] LT';
	                case 3:
	                    return '[ve středu v] LT';
	                case 4:
	                    return '[ve čtvrtek v] LT';
	                case 5:
	                    return '[v pátek v] LT';
	                case 6:
	                    return '[v sobotu v] LT';
	            }
	        },
	        lastDay: '[včera v] LT',
	        lastWeek: function () {
	            switch (this.day()) {
	                case 0:
	                    return '[minulou neděli v] LT';
	                case 1:
	                case 2:
	                    return '[minulé] dddd [v] LT';
	                case 3:
	                    return '[minulou středu v] LT';
	                case 4:
	                case 5:
	                    return '[minulý] dddd [v] LT';
	                case 6:
	                    return '[minulou sobotu v] LT';
	            }
	        },
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'za %s',
	        past : 'před %s',
	        s : translate,
	        m : translate,
	        mm : translate,
	        h : translate,
	        hh : translate,
	        d : translate,
	        dd : translate,
	        M : translate,
	        MM : translate,
	        y : translate,
	        yy : translate
	    },
	    ordinalParse : /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return cs;

	})));


/***/ },
/* 327 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Chuvash [cv]
	//! author : Anatoly Mironov : https://github.com/mirontoli

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var cv = moment.defineLocale('cv', {
	    months : 'кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав'.split('_'),
	    monthsShort : 'кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш'.split('_'),
	    weekdays : 'вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун'.split('_'),
	    weekdaysShort : 'выр_тун_ытл_юн_кӗҫ_эрн_шӑм'.split('_'),
	    weekdaysMin : 'вр_тн_ыт_юн_кҫ_эр_шм'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD-MM-YYYY',
	        LL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]',
	        LLL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',
	        LLLL : 'dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm'
	    },
	    calendar : {
	        sameDay: '[Паян] LT [сехетре]',
	        nextDay: '[Ыран] LT [сехетре]',
	        lastDay: '[Ӗнер] LT [сехетре]',
	        nextWeek: '[Ҫитес] dddd LT [сехетре]',
	        lastWeek: '[Иртнӗ] dddd LT [сехетре]',
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : function (output) {
	            var affix = /сехет$/i.exec(output) ? 'рен' : /ҫул$/i.exec(output) ? 'тан' : 'ран';
	            return output + affix;
	        },
	        past : '%s каялла',
	        s : 'пӗр-ик ҫеккунт',
	        m : 'пӗр минут',
	        mm : '%d минут',
	        h : 'пӗр сехет',
	        hh : '%d сехет',
	        d : 'пӗр кун',
	        dd : '%d кун',
	        M : 'пӗр уйӑх',
	        MM : '%d уйӑх',
	        y : 'пӗр ҫул',
	        yy : '%d ҫул'
	    },
	    ordinalParse: /\d{1,2}-мӗш/,
	    ordinal : '%d-мӗш',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});

	return cv;

	})));


/***/ },
/* 328 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Welsh [cy]
	//! author : Robert Allen : https://github.com/robgallen
	//! author : https://github.com/ryangreaves

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var cy = moment.defineLocale('cy', {
	    months: 'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split('_'),
	    monthsShort: 'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split('_'),
	    weekdays: 'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split('_'),
	    weekdaysShort: 'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'),
	    weekdaysMin: 'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'),
	    weekdaysParseExact : true,
	    // time formats are the same as en-gb
	    longDateFormat: {
	        LT: 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L: 'DD/MM/YYYY',
	        LL: 'D MMMM YYYY',
	        LLL: 'D MMMM YYYY HH:mm',
	        LLLL: 'dddd, D MMMM YYYY HH:mm'
	    },
	    calendar: {
	        sameDay: '[Heddiw am] LT',
	        nextDay: '[Yfory am] LT',
	        nextWeek: 'dddd [am] LT',
	        lastDay: '[Ddoe am] LT',
	        lastWeek: 'dddd [diwethaf am] LT',
	        sameElse: 'L'
	    },
	    relativeTime: {
	        future: 'mewn %s',
	        past: '%s yn ôl',
	        s: 'ychydig eiliadau',
	        m: 'munud',
	        mm: '%d munud',
	        h: 'awr',
	        hh: '%d awr',
	        d: 'diwrnod',
	        dd: '%d diwrnod',
	        M: 'mis',
	        MM: '%d mis',
	        y: 'blwyddyn',
	        yy: '%d flynedd'
	    },
	    ordinalParse: /\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,
	    // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh
	    ordinal: function (number) {
	        var b = number,
	            output = '',
	            lookup = [
	                '', 'af', 'il', 'ydd', 'ydd', 'ed', 'ed', 'ed', 'fed', 'fed', 'fed', // 1af to 10fed
	                'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'fed' // 11eg to 20fed
	            ];
	        if (b > 20) {
	            if (b === 40 || b === 50 || b === 60 || b === 80 || b === 100) {
	                output = 'fed'; // not 30ain, 70ain or 90ain
	            } else {
	                output = 'ain';
	            }
	        } else if (b > 0) {
	            output = lookup[b];
	        }
	        return number + output;
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return cy;

	})));


/***/ },
/* 329 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Danish [da]
	//! author : Ulrik Nielsen : https://github.com/mrbase

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var da = moment.defineLocale('da', {
	    months : 'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split('_'),
	    monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
	    weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
	    weekdaysShort : 'søn_man_tir_ons_tor_fre_lør'.split('_'),
	    weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D. MMMM YYYY',
	        LLL : 'D. MMMM YYYY HH:mm',
	        LLLL : 'dddd [d.] D. MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay : '[I dag kl.] LT',
	        nextDay : '[I morgen kl.] LT',
	        nextWeek : 'dddd [kl.] LT',
	        lastDay : '[I går kl.] LT',
	        lastWeek : '[sidste] dddd [kl] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'om %s',
	        past : '%s siden',
	        s : 'få sekunder',
	        m : 'et minut',
	        mm : '%d minutter',
	        h : 'en time',
	        hh : '%d timer',
	        d : 'en dag',
	        dd : '%d dage',
	        M : 'en måned',
	        MM : '%d måneder',
	        y : 'et år',
	        yy : '%d år'
	    },
	    ordinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return da;

	})));


/***/ },
/* 330 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : German [de]
	//! author : lluchs : https://github.com/lluchs
	//! author: Menelion Elensúle: https://github.com/Oire
	//! author : Mikolaj Dadela : https://github.com/mik01aj

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	function processRelativeTime(number, withoutSuffix, key, isFuture) {
	    var format = {
	        'm': ['eine Minute', 'einer Minute'],
	        'h': ['eine Stunde', 'einer Stunde'],
	        'd': ['ein Tag', 'einem Tag'],
	        'dd': [number + ' Tage', number + ' Tagen'],
	        'M': ['ein Monat', 'einem Monat'],
	        'MM': [number + ' Monate', number + ' Monaten'],
	        'y': ['ein Jahr', 'einem Jahr'],
	        'yy': [number + ' Jahre', number + ' Jahren']
	    };
	    return withoutSuffix ? format[key][0] : format[key][1];
	}

	var de = moment.defineLocale('de', {
	    months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
	    monthsShort : 'Jan._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
	    monthsParseExact : true,
	    weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
	    weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
	    weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT: 'HH:mm',
	        LTS: 'HH:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D. MMMM YYYY',
	        LLL : 'D. MMMM YYYY HH:mm',
	        LLLL : 'dddd, D. MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay: '[heute um] LT [Uhr]',
	        sameElse: 'L',
	        nextDay: '[morgen um] LT [Uhr]',
	        nextWeek: 'dddd [um] LT [Uhr]',
	        lastDay: '[gestern um] LT [Uhr]',
	        lastWeek: '[letzten] dddd [um] LT [Uhr]'
	    },
	    relativeTime : {
	        future : 'in %s',
	        past : 'vor %s',
	        s : 'ein paar Sekunden',
	        m : processRelativeTime,
	        mm : '%d Minuten',
	        h : processRelativeTime,
	        hh : '%d Stunden',
	        d : processRelativeTime,
	        dd : processRelativeTime,
	        M : processRelativeTime,
	        MM : processRelativeTime,
	        y : processRelativeTime,
	        yy : processRelativeTime
	    },
	    ordinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return de;

	})));


/***/ },
/* 331 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : German (Austria) [de-at]
	//! author : lluchs : https://github.com/lluchs
	//! author: Menelion Elensúle: https://github.com/Oire
	//! author : Martin Groller : https://github.com/MadMG
	//! author : Mikolaj Dadela : https://github.com/mik01aj

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	function processRelativeTime(number, withoutSuffix, key, isFuture) {
	    var format = {
	        'm': ['eine Minute', 'einer Minute'],
	        'h': ['eine Stunde', 'einer Stunde'],
	        'd': ['ein Tag', 'einem Tag'],
	        'dd': [number + ' Tage', number + ' Tagen'],
	        'M': ['ein Monat', 'einem Monat'],
	        'MM': [number + ' Monate', number + ' Monaten'],
	        'y': ['ein Jahr', 'einem Jahr'],
	        'yy': [number + ' Jahre', number + ' Jahren']
	    };
	    return withoutSuffix ? format[key][0] : format[key][1];
	}

	var deAt = moment.defineLocale('de-at', {
	    months : 'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
	    monthsShort : 'Jän._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
	    monthsParseExact : true,
	    weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
	    weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
	    weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT: 'HH:mm',
	        LTS: 'HH:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D. MMMM YYYY',
	        LLL : 'D. MMMM YYYY HH:mm',
	        LLLL : 'dddd, D. MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay: '[heute um] LT [Uhr]',
	        sameElse: 'L',
	        nextDay: '[morgen um] LT [Uhr]',
	        nextWeek: 'dddd [um] LT [Uhr]',
	        lastDay: '[gestern um] LT [Uhr]',
	        lastWeek: '[letzten] dddd [um] LT [Uhr]'
	    },
	    relativeTime : {
	        future : 'in %s',
	        past : 'vor %s',
	        s : 'ein paar Sekunden',
	        m : processRelativeTime,
	        mm : '%d Minuten',
	        h : processRelativeTime,
	        hh : '%d Stunden',
	        d : processRelativeTime,
	        dd : processRelativeTime,
	        M : processRelativeTime,
	        MM : processRelativeTime,
	        y : processRelativeTime,
	        yy : processRelativeTime
	    },
	    ordinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return deAt;

	})));


/***/ },
/* 332 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Maldivian [dv]
	//! author : Jawish Hameed : https://github.com/jawish

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var months = [
	    'ޖެނުއަރީ',
	    'ފެބްރުއަރީ',
	    'މާރިޗު',
	    'އޭޕްރީލު',
	    'މޭ',
	    'ޖޫން',
	    'ޖުލައި',
	    'އޯގަސްޓު',
	    'ސެޕްޓެމްބަރު',
	    'އޮކްޓޯބަރު',
	    'ނޮވެމްބަރު',
	    'ޑިސެމްބަރު'
	];
	var weekdays = [
	    'އާދިއްތަ',
	    'ހޯމަ',
	    'އަންގާރަ',
	    'ބުދަ',
	    'ބުރާސްފަތި',
	    'ހުކުރު',
	    'ހޮނިހިރު'
	];

	var dv = moment.defineLocale('dv', {
	    months : months,
	    monthsShort : months,
	    weekdays : weekdays,
	    weekdaysShort : weekdays,
	    weekdaysMin : 'އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި'.split('_'),
	    longDateFormat : {

	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'D/M/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd D MMMM YYYY HH:mm'
	    },
	    meridiemParse: /މކ|މފ/,
	    isPM : function (input) {
	        return 'މފ' === input;
	    },
	    meridiem : function (hour, minute, isLower) {
	        if (hour < 12) {
	            return 'މކ';
	        } else {
	            return 'މފ';
	        }
	    },
	    calendar : {
	        sameDay : '[މިއަދު] LT',
	        nextDay : '[މާދަމާ] LT',
	        nextWeek : 'dddd LT',
	        lastDay : '[އިއްޔެ] LT',
	        lastWeek : '[ފާއިތުވި] dddd LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'ތެރޭގައި %s',
	        past : 'ކުރިން %s',
	        s : 'ސިކުންތުކޮޅެއް',
	        m : 'މިނިޓެއް',
	        mm : 'މިނިޓު %d',
	        h : 'ގަޑިއިރެއް',
	        hh : 'ގަޑިއިރު %d',
	        d : 'ދުވަހެއް',
	        dd : 'ދުވަސް %d',
	        M : 'މަހެއް',
	        MM : 'މަސް %d',
	        y : 'އަހަރެއް',
	        yy : 'އަހަރު %d'
	    },
	    preparse: function (string) {
	        return string.replace(/،/g, ',');
	    },
	    postformat: function (string) {
	        return string.replace(/,/g, '،');
	    },
	    week : {
	        dow : 7,  // Sunday is the first day of the week.
	        doy : 12  // The week that contains Jan 1st is the first week of the year.
	    }
	});

	return dv;

	})));


/***/ },
/* 333 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Greek [el]
	//! author : Aggelos Karalias : https://github.com/mehiel

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';

	function isFunction(input) {
	    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
	}


	var el = moment.defineLocale('el', {
	    monthsNominativeEl : 'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split('_'),
	    monthsGenitiveEl : 'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split('_'),
	    months : function (momentToFormat, format) {
	        if (/D/.test(format.substring(0, format.indexOf('MMMM')))) { // if there is a day number before 'MMMM'
	            return this._monthsGenitiveEl[momentToFormat.month()];
	        } else {
	            return this._monthsNominativeEl[momentToFormat.month()];
	        }
	    },
	    monthsShort : 'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split('_'),
	    weekdays : 'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split('_'),
	    weekdaysShort : 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),
	    weekdaysMin : 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),
	    meridiem : function (hours, minutes, isLower) {
	        if (hours > 11) {
	            return isLower ? 'μμ' : 'ΜΜ';
	        } else {
	            return isLower ? 'πμ' : 'ΠΜ';
	        }
	    },
	    isPM : function (input) {
	        return ((input + '').toLowerCase()[0] === 'μ');
	    },
	    meridiemParse : /[ΠΜ]\.?Μ?\.?/i,
	    longDateFormat : {
	        LT : 'h:mm A',
	        LTS : 'h:mm:ss A',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY h:mm A',
	        LLLL : 'dddd, D MMMM YYYY h:mm A'
	    },
	    calendarEl : {
	        sameDay : '[Σήμερα {}] LT',
	        nextDay : '[Αύριο {}] LT',
	        nextWeek : 'dddd [{}] LT',
	        lastDay : '[Χθες {}] LT',
	        lastWeek : function () {
	            switch (this.day()) {
	                case 6:
	                    return '[το προηγούμενο] dddd [{}] LT';
	                default:
	                    return '[την προηγούμενη] dddd [{}] LT';
	            }
	        },
	        sameElse : 'L'
	    },
	    calendar : function (key, mom) {
	        var output = this._calendarEl[key],
	            hours = mom && mom.hours();
	        if (isFunction(output)) {
	            output = output.apply(mom);
	        }
	        return output.replace('{}', (hours % 12 === 1 ? 'στη' : 'στις'));
	    },
	    relativeTime : {
	        future : 'σε %s',
	        past : '%s πριν',
	        s : 'λίγα δευτερόλεπτα',
	        m : 'ένα λεπτό',
	        mm : '%d λεπτά',
	        h : 'μία ώρα',
	        hh : '%d ώρες',
	        d : 'μία μέρα',
	        dd : '%d μέρες',
	        M : 'ένας μήνας',
	        MM : '%d μήνες',
	        y : 'ένας χρόνος',
	        yy : '%d χρόνια'
	    },
	    ordinalParse: /\d{1,2}η/,
	    ordinal: '%dη',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4st is the first week of the year.
	    }
	});

	return el;

	})));


/***/ },
/* 334 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : English (Australia) [en-au]
	//! author : Jared Morse : https://github.com/jarcoal

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var enAu = moment.defineLocale('en-au', {
	    months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	    monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	    weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	    weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	    weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	    longDateFormat : {
	        LT : 'h:mm A',
	        LTS : 'h:mm:ss A',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY h:mm A',
	        LLLL : 'dddd, D MMMM YYYY h:mm A'
	    },
	    calendar : {
	        sameDay : '[Today at] LT',
	        nextDay : '[Tomorrow at] LT',
	        nextWeek : 'dddd [at] LT',
	        lastDay : '[Yesterday at] LT',
	        lastWeek : '[Last] dddd [at] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'in %s',
	        past : '%s ago',
	        s : 'a few seconds',
	        m : 'a minute',
	        mm : '%d minutes',
	        h : 'an hour',
	        hh : '%d hours',
	        d : 'a day',
	        dd : '%d days',
	        M : 'a month',
	        MM : '%d months',
	        y : 'a year',
	        yy : '%d years'
	    },
	    ordinalParse: /\d{1,2}(st|nd|rd|th)/,
	    ordinal : function (number) {
	        var b = number % 10,
	            output = (~~(number % 100 / 10) === 1) ? 'th' :
	            (b === 1) ? 'st' :
	            (b === 2) ? 'nd' :
	            (b === 3) ? 'rd' : 'th';
	        return number + output;
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return enAu;

	})));


/***/ },
/* 335 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : English (Canada) [en-ca]
	//! author : Jonathan Abourbih : https://github.com/jonbca

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var enCa = moment.defineLocale('en-ca', {
	    months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	    monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	    weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	    weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	    weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	    longDateFormat : {
	        LT : 'h:mm A',
	        LTS : 'h:mm:ss A',
	        L : 'YYYY-MM-DD',
	        LL : 'MMMM D, YYYY',
	        LLL : 'MMMM D, YYYY h:mm A',
	        LLLL : 'dddd, MMMM D, YYYY h:mm A'
	    },
	    calendar : {
	        sameDay : '[Today at] LT',
	        nextDay : '[Tomorrow at] LT',
	        nextWeek : 'dddd [at] LT',
	        lastDay : '[Yesterday at] LT',
	        lastWeek : '[Last] dddd [at] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'in %s',
	        past : '%s ago',
	        s : 'a few seconds',
	        m : 'a minute',
	        mm : '%d minutes',
	        h : 'an hour',
	        hh : '%d hours',
	        d : 'a day',
	        dd : '%d days',
	        M : 'a month',
	        MM : '%d months',
	        y : 'a year',
	        yy : '%d years'
	    },
	    ordinalParse: /\d{1,2}(st|nd|rd|th)/,
	    ordinal : function (number) {
	        var b = number % 10,
	            output = (~~(number % 100 / 10) === 1) ? 'th' :
	            (b === 1) ? 'st' :
	            (b === 2) ? 'nd' :
	            (b === 3) ? 'rd' : 'th';
	        return number + output;
	    }
	});

	return enCa;

	})));


/***/ },
/* 336 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : English (United Kingdom) [en-gb]
	//! author : Chris Gedrim : https://github.com/chrisgedrim

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var enGb = moment.defineLocale('en-gb', {
	    months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	    monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	    weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	    weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	    weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd, D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay : '[Today at] LT',
	        nextDay : '[Tomorrow at] LT',
	        nextWeek : 'dddd [at] LT',
	        lastDay : '[Yesterday at] LT',
	        lastWeek : '[Last] dddd [at] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'in %s',
	        past : '%s ago',
	        s : 'a few seconds',
	        m : 'a minute',
	        mm : '%d minutes',
	        h : 'an hour',
	        hh : '%d hours',
	        d : 'a day',
	        dd : '%d days',
	        M : 'a month',
	        MM : '%d months',
	        y : 'a year',
	        yy : '%d years'
	    },
	    ordinalParse: /\d{1,2}(st|nd|rd|th)/,
	    ordinal : function (number) {
	        var b = number % 10,
	            output = (~~(number % 100 / 10) === 1) ? 'th' :
	            (b === 1) ? 'st' :
	            (b === 2) ? 'nd' :
	            (b === 3) ? 'rd' : 'th';
	        return number + output;
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return enGb;

	})));


/***/ },
/* 337 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : English (Ireland) [en-ie]
	//! author : Chris Cartlidge : https://github.com/chriscartlidge

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var enIe = moment.defineLocale('en-ie', {
	    months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	    monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	    weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	    weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	    weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD-MM-YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay : '[Today at] LT',
	        nextDay : '[Tomorrow at] LT',
	        nextWeek : 'dddd [at] LT',
	        lastDay : '[Yesterday at] LT',
	        lastWeek : '[Last] dddd [at] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'in %s',
	        past : '%s ago',
	        s : 'a few seconds',
	        m : 'a minute',
	        mm : '%d minutes',
	        h : 'an hour',
	        hh : '%d hours',
	        d : 'a day',
	        dd : '%d days',
	        M : 'a month',
	        MM : '%d months',
	        y : 'a year',
	        yy : '%d years'
	    },
	    ordinalParse: /\d{1,2}(st|nd|rd|th)/,
	    ordinal : function (number) {
	        var b = number % 10,
	            output = (~~(number % 100 / 10) === 1) ? 'th' :
	            (b === 1) ? 'st' :
	            (b === 2) ? 'nd' :
	            (b === 3) ? 'rd' : 'th';
	        return number + output;
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return enIe;

	})));


/***/ },
/* 338 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : English (New Zealand) [en-nz]
	//! author : Luke McGregor : https://github.com/lukemcgregor

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var enNz = moment.defineLocale('en-nz', {
	    months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	    monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	    weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	    weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	    weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	    longDateFormat : {
	        LT : 'h:mm A',
	        LTS : 'h:mm:ss A',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY h:mm A',
	        LLLL : 'dddd, D MMMM YYYY h:mm A'
	    },
	    calendar : {
	        sameDay : '[Today at] LT',
	        nextDay : '[Tomorrow at] LT',
	        nextWeek : 'dddd [at] LT',
	        lastDay : '[Yesterday at] LT',
	        lastWeek : '[Last] dddd [at] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'in %s',
	        past : '%s ago',
	        s : 'a few seconds',
	        m : 'a minute',
	        mm : '%d minutes',
	        h : 'an hour',
	        hh : '%d hours',
	        d : 'a day',
	        dd : '%d days',
	        M : 'a month',
	        MM : '%d months',
	        y : 'a year',
	        yy : '%d years'
	    },
	    ordinalParse: /\d{1,2}(st|nd|rd|th)/,
	    ordinal : function (number) {
	        var b = number % 10,
	            output = (~~(number % 100 / 10) === 1) ? 'th' :
	            (b === 1) ? 'st' :
	            (b === 2) ? 'nd' :
	            (b === 3) ? 'rd' : 'th';
	        return number + output;
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return enNz;

	})));


/***/ },
/* 339 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Esperanto [eo]
	//! author : Colin Dean : https://github.com/colindean
	//! komento: Mi estas malcerta se mi korekte traktis akuzativojn en tiu traduko.
	//!          Se ne, bonvolu korekti kaj avizi min por ke mi povas lerni!

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var eo = moment.defineLocale('eo', {
	    months : 'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split('_'),
	    monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aŭg_sep_okt_nov_dec'.split('_'),
	    weekdays : 'Dimanĉo_Lundo_Mardo_Merkredo_Ĵaŭdo_Vendredo_Sabato'.split('_'),
	    weekdaysShort : 'Dim_Lun_Mard_Merk_Ĵaŭ_Ven_Sab'.split('_'),
	    weekdaysMin : 'Di_Lu_Ma_Me_Ĵa_Ve_Sa'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'YYYY-MM-DD',
	        LL : 'D[-an de] MMMM, YYYY',
	        LLL : 'D[-an de] MMMM, YYYY HH:mm',
	        LLLL : 'dddd, [la] D[-an de] MMMM, YYYY HH:mm'
	    },
	    meridiemParse: /[ap]\.t\.m/i,
	    isPM: function (input) {
	        return input.charAt(0).toLowerCase() === 'p';
	    },
	    meridiem : function (hours, minutes, isLower) {
	        if (hours > 11) {
	            return isLower ? 'p.t.m.' : 'P.T.M.';
	        } else {
	            return isLower ? 'a.t.m.' : 'A.T.M.';
	        }
	    },
	    calendar : {
	        sameDay : '[Hodiaŭ je] LT',
	        nextDay : '[Morgaŭ je] LT',
	        nextWeek : 'dddd [je] LT',
	        lastDay : '[Hieraŭ je] LT',
	        lastWeek : '[pasinta] dddd [je] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'je %s',
	        past : 'antaŭ %s',
	        s : 'sekundoj',
	        m : 'minuto',
	        mm : '%d minutoj',
	        h : 'horo',
	        hh : '%d horoj',
	        d : 'tago',//ne 'diurno', ĉar estas uzita por proksimumo
	        dd : '%d tagoj',
	        M : 'monato',
	        MM : '%d monatoj',
	        y : 'jaro',
	        yy : '%d jaroj'
	    },
	    ordinalParse: /\d{1,2}a/,
	    ordinal : '%da',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});

	return eo;

	})));


/***/ },
/* 340 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Spanish [es]
	//! author : Julio Napurí : https://github.com/julionc

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');
	var monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');

	var es = moment.defineLocale('es', {
	    months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
	    monthsShort : function (m, format) {
	        if (/-MMM-/.test(format)) {
	            return monthsShort[m.month()];
	        } else {
	            return monthsShortDot[m.month()];
	        }
	    },
	    monthsParseExact : true,
	    weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
	    weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
	    weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'H:mm',
	        LTS : 'H:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D [de] MMMM [de] YYYY',
	        LLL : 'D [de] MMMM [de] YYYY H:mm',
	        LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'
	    },
	    calendar : {
	        sameDay : function () {
	            return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	        },
	        nextDay : function () {
	            return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	        },
	        nextWeek : function () {
	            return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	        },
	        lastDay : function () {
	            return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	        },
	        lastWeek : function () {
	            return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	        },
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'en %s',
	        past : 'hace %s',
	        s : 'unos segundos',
	        m : 'un minuto',
	        mm : '%d minutos',
	        h : 'una hora',
	        hh : '%d horas',
	        d : 'un día',
	        dd : '%d días',
	        M : 'un mes',
	        MM : '%d meses',
	        y : 'un año',
	        yy : '%d años'
	    },
	    ordinalParse : /\d{1,2}º/,
	    ordinal : '%dº',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return es;

	})));


/***/ },
/* 341 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Spanish (Dominican Republic) [es-do]

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');
	var monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');

	var esDo = moment.defineLocale('es-do', {
	    months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
	    monthsShort : function (m, format) {
	        if (/-MMM-/.test(format)) {
	            return monthsShort[m.month()];
	        } else {
	            return monthsShortDot[m.month()];
	        }
	    },
	    monthsParseExact : true,
	    weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
	    weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
	    weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'h:mm A',
	        LTS : 'h:mm:ss A',
	        L : 'DD/MM/YYYY',
	        LL : 'D [de] MMMM [de] YYYY',
	        LLL : 'D [de] MMMM [de] YYYY h:mm A',
	        LLLL : 'dddd, D [de] MMMM [de] YYYY h:mm A'
	    },
	    calendar : {
	        sameDay : function () {
	            return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	        },
	        nextDay : function () {
	            return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	        },
	        nextWeek : function () {
	            return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	        },
	        lastDay : function () {
	            return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	        },
	        lastWeek : function () {
	            return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	        },
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'en %s',
	        past : 'hace %s',
	        s : 'unos segundos',
	        m : 'un minuto',
	        mm : '%d minutos',
	        h : 'una hora',
	        hh : '%d horas',
	        d : 'un día',
	        dd : '%d días',
	        M : 'un mes',
	        MM : '%d meses',
	        y : 'un año',
	        yy : '%d años'
	    },
	    ordinalParse : /\d{1,2}º/,
	    ordinal : '%dº',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return esDo;

	})));


/***/ },
/* 342 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Estonian [et]
	//! author : Henry Kehlmann : https://github.com/madhenry
	//! improvements : Illimar Tambek : https://github.com/ragulka

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	function processRelativeTime(number, withoutSuffix, key, isFuture) {
	    var format = {
	        's' : ['mõne sekundi', 'mõni sekund', 'paar sekundit'],
	        'm' : ['ühe minuti', 'üks minut'],
	        'mm': [number + ' minuti', number + ' minutit'],
	        'h' : ['ühe tunni', 'tund aega', 'üks tund'],
	        'hh': [number + ' tunni', number + ' tundi'],
	        'd' : ['ühe päeva', 'üks päev'],
	        'M' : ['kuu aja', 'kuu aega', 'üks kuu'],
	        'MM': [number + ' kuu', number + ' kuud'],
	        'y' : ['ühe aasta', 'aasta', 'üks aasta'],
	        'yy': [number + ' aasta', number + ' aastat']
	    };
	    if (withoutSuffix) {
	        return format[key][2] ? format[key][2] : format[key][1];
	    }
	    return isFuture ? format[key][0] : format[key][1];
	}

	var et = moment.defineLocale('et', {
	    months        : 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),
	    monthsShort   : 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),
	    weekdays      : 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),
	    weekdaysShort : 'P_E_T_K_N_R_L'.split('_'),
	    weekdaysMin   : 'P_E_T_K_N_R_L'.split('_'),
	    longDateFormat : {
	        LT   : 'H:mm',
	        LTS : 'H:mm:ss',
	        L    : 'DD.MM.YYYY',
	        LL   : 'D. MMMM YYYY',
	        LLL  : 'D. MMMM YYYY H:mm',
	        LLLL : 'dddd, D. MMMM YYYY H:mm'
	    },
	    calendar : {
	        sameDay  : '[Täna,] LT',
	        nextDay  : '[Homme,] LT',
	        nextWeek : '[Järgmine] dddd LT',
	        lastDay  : '[Eile,] LT',
	        lastWeek : '[Eelmine] dddd LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : '%s pärast',
	        past   : '%s tagasi',
	        s      : processRelativeTime,
	        m      : processRelativeTime,
	        mm     : processRelativeTime,
	        h      : processRelativeTime,
	        hh     : processRelativeTime,
	        d      : processRelativeTime,
	        dd     : '%d päeva',
	        M      : processRelativeTime,
	        MM     : processRelativeTime,
	        y      : processRelativeTime,
	        yy     : processRelativeTime
	    },
	    ordinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return et;

	})));


/***/ },
/* 343 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Basque [eu]
	//! author : Eneko Illarramendi : https://github.com/eillarra

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var eu = moment.defineLocale('eu', {
	    months : 'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split('_'),
	    monthsShort : 'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split('_'),
	    monthsParseExact : true,
	    weekdays : 'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split('_'),
	    weekdaysShort : 'ig._al._ar._az._og._ol._lr.'.split('_'),
	    weekdaysMin : 'ig_al_ar_az_og_ol_lr'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'YYYY-MM-DD',
	        LL : 'YYYY[ko] MMMM[ren] D[a]',
	        LLL : 'YYYY[ko] MMMM[ren] D[a] HH:mm',
	        LLLL : 'dddd, YYYY[ko] MMMM[ren] D[a] HH:mm',
	        l : 'YYYY-M-D',
	        ll : 'YYYY[ko] MMM D[a]',
	        lll : 'YYYY[ko] MMM D[a] HH:mm',
	        llll : 'ddd, YYYY[ko] MMM D[a] HH:mm'
	    },
	    calendar : {
	        sameDay : '[gaur] LT[etan]',
	        nextDay : '[bihar] LT[etan]',
	        nextWeek : 'dddd LT[etan]',
	        lastDay : '[atzo] LT[etan]',
	        lastWeek : '[aurreko] dddd LT[etan]',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : '%s barru',
	        past : 'duela %s',
	        s : 'segundo batzuk',
	        m : 'minutu bat',
	        mm : '%d minutu',
	        h : 'ordu bat',
	        hh : '%d ordu',
	        d : 'egun bat',
	        dd : '%d egun',
	        M : 'hilabete bat',
	        MM : '%d hilabete',
	        y : 'urte bat',
	        yy : '%d urte'
	    },
	    ordinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});

	return eu;

	})));


/***/ },
/* 344 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Persian [fa]
	//! author : Ebrahim Byagowi : https://github.com/ebraminio

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var symbolMap = {
	    '1': '۱',
	    '2': '۲',
	    '3': '۳',
	    '4': '۴',
	    '5': '۵',
	    '6': '۶',
	    '7': '۷',
	    '8': '۸',
	    '9': '۹',
	    '0': '۰'
	};
	var numberMap = {
	    '۱': '1',
	    '۲': '2',
	    '۳': '3',
	    '۴': '4',
	    '۵': '5',
	    '۶': '6',
	    '۷': '7',
	    '۸': '8',
	    '۹': '9',
	    '۰': '0'
	};

	var fa = moment.defineLocale('fa', {
	    months : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
	    monthsShort : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
	    weekdays : 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split('_'),
	    weekdaysShort : 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split('_'),
	    weekdaysMin : 'ی_د_س_چ_پ_ج_ش'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd, D MMMM YYYY HH:mm'
	    },
	    meridiemParse: /قبل از ظهر|بعد از ظهر/,
	    isPM: function (input) {
	        return /بعد از ظهر/.test(input);
	    },
	    meridiem : function (hour, minute, isLower) {
	        if (hour < 12) {
	            return 'قبل از ظهر';
	        } else {
	            return 'بعد از ظهر';
	        }
	    },
	    calendar : {
	        sameDay : '[امروز ساعت] LT',
	        nextDay : '[فردا ساعت] LT',
	        nextWeek : 'dddd [ساعت] LT',
	        lastDay : '[دیروز ساعت] LT',
	        lastWeek : 'dddd [پیش] [ساعت] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'در %s',
	        past : '%s پیش',
	        s : 'چندین ثانیه',
	        m : 'یک دقیقه',
	        mm : '%d دقیقه',
	        h : 'یک ساعت',
	        hh : '%d ساعت',
	        d : 'یک روز',
	        dd : '%d روز',
	        M : 'یک ماه',
	        MM : '%d ماه',
	        y : 'یک سال',
	        yy : '%d سال'
	    },
	    preparse: function (string) {
	        return string.replace(/[۰-۹]/g, function (match) {
	            return numberMap[match];
	        }).replace(/،/g, ',');
	    },
	    postformat: function (string) {
	        return string.replace(/\d/g, function (match) {
	            return symbolMap[match];
	        }).replace(/,/g, '،');
	    },
	    ordinalParse: /\d{1,2}م/,
	    ordinal : '%dم',
	    week : {
	        dow : 6, // Saturday is the first day of the week.
	        doy : 12 // The week that contains Jan 1st is the first week of the year.
	    }
	});

	return fa;

	})));


/***/ },
/* 345 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Finnish [fi]
	//! author : Tarmo Aidantausta : https://github.com/bleadof

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' ');
	var numbersFuture = [
	        'nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden',
	        numbersPast[7], numbersPast[8], numbersPast[9]
	    ];
	function translate(number, withoutSuffix, key, isFuture) {
	    var result = '';
	    switch (key) {
	        case 's':
	            return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';
	        case 'm':
	            return isFuture ? 'minuutin' : 'minuutti';
	        case 'mm':
	            result = isFuture ? 'minuutin' : 'minuuttia';
	            break;
	        case 'h':
	            return isFuture ? 'tunnin' : 'tunti';
	        case 'hh':
	            result = isFuture ? 'tunnin' : 'tuntia';
	            break;
	        case 'd':
	            return isFuture ? 'päivän' : 'päivä';
	        case 'dd':
	            result = isFuture ? 'päivän' : 'päivää';
	            break;
	        case 'M':
	            return isFuture ? 'kuukauden' : 'kuukausi';
	        case 'MM':
	            result = isFuture ? 'kuukauden' : 'kuukautta';
	            break;
	        case 'y':
	            return isFuture ? 'vuoden' : 'vuosi';
	        case 'yy':
	            result = isFuture ? 'vuoden' : 'vuotta';
	            break;
	    }
	    result = verbalNumber(number, isFuture) + ' ' + result;
	    return result;
	}
	function verbalNumber(number, isFuture) {
	    return number < 10 ? (isFuture ? numbersFuture[number] : numbersPast[number]) : number;
	}

	var fi = moment.defineLocale('fi', {
	    months : 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),
	    monthsShort : 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),
	    weekdays : 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),
	    weekdaysShort : 'su_ma_ti_ke_to_pe_la'.split('_'),
	    weekdaysMin : 'su_ma_ti_ke_to_pe_la'.split('_'),
	    longDateFormat : {
	        LT : 'HH.mm',
	        LTS : 'HH.mm.ss',
	        L : 'DD.MM.YYYY',
	        LL : 'Do MMMM[ta] YYYY',
	        LLL : 'Do MMMM[ta] YYYY, [klo] HH.mm',
	        LLLL : 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',
	        l : 'D.M.YYYY',
	        ll : 'Do MMM YYYY',
	        lll : 'Do MMM YYYY, [klo] HH.mm',
	        llll : 'ddd, Do MMM YYYY, [klo] HH.mm'
	    },
	    calendar : {
	        sameDay : '[tänään] [klo] LT',
	        nextDay : '[huomenna] [klo] LT',
	        nextWeek : 'dddd [klo] LT',
	        lastDay : '[eilen] [klo] LT',
	        lastWeek : '[viime] dddd[na] [klo] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : '%s päästä',
	        past : '%s sitten',
	        s : translate,
	        m : translate,
	        mm : translate,
	        h : translate,
	        hh : translate,
	        d : translate,
	        dd : translate,
	        M : translate,
	        MM : translate,
	        y : translate,
	        yy : translate
	    },
	    ordinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return fi;

	})));


/***/ },
/* 346 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Faroese [fo]
	//! author : Ragnar Johannesen : https://github.com/ragnar123

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var fo = moment.defineLocale('fo', {
	    months : 'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
	    monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
	    weekdays : 'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split('_'),
	    weekdaysShort : 'sun_mán_týs_mik_hós_frí_ley'.split('_'),
	    weekdaysMin : 'su_má_tý_mi_hó_fr_le'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd D. MMMM, YYYY HH:mm'
	    },
	    calendar : {
	        sameDay : '[Í dag kl.] LT',
	        nextDay : '[Í morgin kl.] LT',
	        nextWeek : 'dddd [kl.] LT',
	        lastDay : '[Í gjár kl.] LT',
	        lastWeek : '[síðstu] dddd [kl] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'um %s',
	        past : '%s síðani',
	        s : 'fá sekund',
	        m : 'ein minutt',
	        mm : '%d minuttir',
	        h : 'ein tími',
	        hh : '%d tímar',
	        d : 'ein dagur',
	        dd : '%d dagar',
	        M : 'ein mánaði',
	        MM : '%d mánaðir',
	        y : 'eitt ár',
	        yy : '%d ár'
	    },
	    ordinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return fo;

	})));


/***/ },
/* 347 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : French [fr]
	//! author : John Fischer : https://github.com/jfroffice

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var fr = moment.defineLocale('fr', {
	    months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
	    monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
	    monthsParseExact : true,
	    weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
	    weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
	    weekdaysMin : 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay: '[Aujourd\'hui à] LT',
	        nextDay: '[Demain à] LT',
	        nextWeek: 'dddd [à] LT',
	        lastDay: '[Hier à] LT',
	        lastWeek: 'dddd [dernier à] LT',
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'dans %s',
	        past : 'il y a %s',
	        s : 'quelques secondes',
	        m : 'une minute',
	        mm : '%d minutes',
	        h : 'une heure',
	        hh : '%d heures',
	        d : 'un jour',
	        dd : '%d jours',
	        M : 'un mois',
	        MM : '%d mois',
	        y : 'un an',
	        yy : '%d ans'
	    },
	    ordinalParse: /\d{1,2}(er|)/,
	    ordinal : function (number) {
	        return number + (number === 1 ? 'er' : '');
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return fr;

	})));


/***/ },
/* 348 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : French (Canada) [fr-ca]
	//! author : Jonathan Abourbih : https://github.com/jonbca

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var frCa = moment.defineLocale('fr-ca', {
	    months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
	    monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
	    monthsParseExact : true,
	    weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
	    weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
	    weekdaysMin : 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'YYYY-MM-DD',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay: '[Aujourd\'hui à] LT',
	        nextDay: '[Demain à] LT',
	        nextWeek: 'dddd [à] LT',
	        lastDay: '[Hier à] LT',
	        lastWeek: 'dddd [dernier à] LT',
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'dans %s',
	        past : 'il y a %s',
	        s : 'quelques secondes',
	        m : 'une minute',
	        mm : '%d minutes',
	        h : 'une heure',
	        hh : '%d heures',
	        d : 'un jour',
	        dd : '%d jours',
	        M : 'un mois',
	        MM : '%d mois',
	        y : 'un an',
	        yy : '%d ans'
	    },
	    ordinalParse: /\d{1,2}(er|e)/,
	    ordinal : function (number) {
	        return number + (number === 1 ? 'er' : 'e');
	    }
	});

	return frCa;

	})));


/***/ },
/* 349 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : French (Switzerland) [fr-ch]
	//! author : Gaspard Bucher : https://github.com/gaspard

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var frCh = moment.defineLocale('fr-ch', {
	    months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
	    monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
	    monthsParseExact : true,
	    weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
	    weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
	    weekdaysMin : 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay: '[Aujourd\'hui à] LT',
	        nextDay: '[Demain à] LT',
	        nextWeek: 'dddd [à] LT',
	        lastDay: '[Hier à] LT',
	        lastWeek: 'dddd [dernier à] LT',
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'dans %s',
	        past : 'il y a %s',
	        s : 'quelques secondes',
	        m : 'une minute',
	        mm : '%d minutes',
	        h : 'une heure',
	        hh : '%d heures',
	        d : 'un jour',
	        dd : '%d jours',
	        M : 'un mois',
	        MM : '%d mois',
	        y : 'un an',
	        yy : '%d ans'
	    },
	    ordinalParse: /\d{1,2}(er|e)/,
	    ordinal : function (number) {
	        return number + (number === 1 ? 'er' : 'e');
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return frCh;

	})));


/***/ },
/* 350 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Frisian [fy]
	//! author : Robin van der Vliet : https://github.com/robin0van0der0v

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var monthsShortWithDots = 'jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.'.split('_');
	var monthsShortWithoutDots = 'jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_');

	var fy = moment.defineLocale('fy', {
	    months : 'jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber'.split('_'),
	    monthsShort : function (m, format) {
	        if (/-MMM-/.test(format)) {
	            return monthsShortWithoutDots[m.month()];
	        } else {
	            return monthsShortWithDots[m.month()];
	        }
	    },
	    monthsParseExact : true,
	    weekdays : 'snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon'.split('_'),
	    weekdaysShort : 'si._mo._ti._wo._to._fr._so.'.split('_'),
	    weekdaysMin : 'Si_Mo_Ti_Wo_To_Fr_So'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD-MM-YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay: '[hjoed om] LT',
	        nextDay: '[moarn om] LT',
	        nextWeek: 'dddd [om] LT',
	        lastDay: '[juster om] LT',
	        lastWeek: '[ôfrûne] dddd [om] LT',
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'oer %s',
	        past : '%s lyn',
	        s : 'in pear sekonden',
	        m : 'ien minút',
	        mm : '%d minuten',
	        h : 'ien oere',
	        hh : '%d oeren',
	        d : 'ien dei',
	        dd : '%d dagen',
	        M : 'ien moanne',
	        MM : '%d moannen',
	        y : 'ien jier',
	        yy : '%d jierren'
	    },
	    ordinalParse: /\d{1,2}(ste|de)/,
	    ordinal : function (number) {
	        return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return fy;

	})));


/***/ },
/* 351 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Scottish Gaelic [gd]
	//! author : Jon Ashdown : https://github.com/jonashdown

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var months = [
	    'Am Faoilleach', 'An Gearran', 'Am Màrt', 'An Giblean', 'An Cèitean', 'An t-Ògmhios', 'An t-Iuchar', 'An Lùnastal', 'An t-Sultain', 'An Dàmhair', 'An t-Samhain', 'An Dùbhlachd'
	];

	var monthsShort = ['Faoi', 'Gear', 'Màrt', 'Gibl', 'Cèit', 'Ògmh', 'Iuch', 'Lùn', 'Sult', 'Dàmh', 'Samh', 'Dùbh'];

	var weekdays = ['Didòmhnaich', 'Diluain', 'Dimàirt', 'Diciadain', 'Diardaoin', 'Dihaoine', 'Disathairne'];

	var weekdaysShort = ['Did', 'Dil', 'Dim', 'Dic', 'Dia', 'Dih', 'Dis'];

	var weekdaysMin = ['Dò', 'Lu', 'Mà', 'Ci', 'Ar', 'Ha', 'Sa'];

	var gd = moment.defineLocale('gd', {
	    months : months,
	    monthsShort : monthsShort,
	    monthsParseExact : true,
	    weekdays : weekdays,
	    weekdaysShort : weekdaysShort,
	    weekdaysMin : weekdaysMin,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd, D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay : '[An-diugh aig] LT',
	        nextDay : '[A-màireach aig] LT',
	        nextWeek : 'dddd [aig] LT',
	        lastDay : '[An-dè aig] LT',
	        lastWeek : 'dddd [seo chaidh] [aig] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'ann an %s',
	        past : 'bho chionn %s',
	        s : 'beagan diogan',
	        m : 'mionaid',
	        mm : '%d mionaidean',
	        h : 'uair',
	        hh : '%d uairean',
	        d : 'latha',
	        dd : '%d latha',
	        M : 'mìos',
	        MM : '%d mìosan',
	        y : 'bliadhna',
	        yy : '%d bliadhna'
	    },
	    ordinalParse : /\d{1,2}(d|na|mh)/,
	    ordinal : function (number) {
	        var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';
	        return number + output;
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return gd;

	})));


/***/ },
/* 352 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Galician [gl]
	//! author : Juan G. Hurtado : https://github.com/juanghurtado

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var gl = moment.defineLocale('gl', {
	    months : 'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split('_'),
	    monthsShort : 'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split('_'),
	    monthsParseExact: true,
	    weekdays : 'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'),
	    weekdaysShort : 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),
	    weekdaysMin : 'do_lu_ma_mé_xo_ve_sá'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'H:mm',
	        LTS : 'H:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D [de] MMMM [de] YYYY',
	        LLL : 'D [de] MMMM [de] YYYY H:mm',
	        LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'
	    },
	    calendar : {
	        sameDay : function () {
	            return '[hoxe ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';
	        },
	        nextDay : function () {
	            return '[mañá ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';
	        },
	        nextWeek : function () {
	            return 'dddd [' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';
	        },
	        lastDay : function () {
	            return '[onte ' + ((this.hours() !== 1) ? 'á' : 'a') + '] LT';
	        },
	        lastWeek : function () {
	            return '[o] dddd [pasado ' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';
	        },
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : function (str) {
	            if (str.indexOf('un') === 0) {
	                return 'n' + str;
	            }
	            return 'en ' + str;
	        },
	        past : 'hai %s',
	        s : 'uns segundos',
	        m : 'un minuto',
	        mm : '%d minutos',
	        h : 'unha hora',
	        hh : '%d horas',
	        d : 'un día',
	        dd : '%d días',
	        M : 'un mes',
	        MM : '%d meses',
	        y : 'un ano',
	        yy : '%d anos'
	    },
	    ordinalParse : /\d{1,2}º/,
	    ordinal : '%dº',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return gl;

	})));


/***/ },
/* 353 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Hebrew [he]
	//! author : Tomer Cohen : https://github.com/tomer
	//! author : Moshe Simantov : https://github.com/DevelopmentIL
	//! author : Tal Ater : https://github.com/TalAter

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var he = moment.defineLocale('he', {
	    months : 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),
	    monthsShort : 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),
	    weekdays : 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),
	    weekdaysShort : 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),
	    weekdaysMin : 'א_ב_ג_ד_ה_ו_ש'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D [ב]MMMM YYYY',
	        LLL : 'D [ב]MMMM YYYY HH:mm',
	        LLLL : 'dddd, D [ב]MMMM YYYY HH:mm',
	        l : 'D/M/YYYY',
	        ll : 'D MMM YYYY',
	        lll : 'D MMM YYYY HH:mm',
	        llll : 'ddd, D MMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay : '[היום ב־]LT',
	        nextDay : '[מחר ב־]LT',
	        nextWeek : 'dddd [בשעה] LT',
	        lastDay : '[אתמול ב־]LT',
	        lastWeek : '[ביום] dddd [האחרון בשעה] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'בעוד %s',
	        past : 'לפני %s',
	        s : 'מספר שניות',
	        m : 'דקה',
	        mm : '%d דקות',
	        h : 'שעה',
	        hh : function (number) {
	            if (number === 2) {
	                return 'שעתיים';
	            }
	            return number + ' שעות';
	        },
	        d : 'יום',
	        dd : function (number) {
	            if (number === 2) {
	                return 'יומיים';
	            }
	            return number + ' ימים';
	        },
	        M : 'חודש',
	        MM : function (number) {
	            if (number === 2) {
	                return 'חודשיים';
	            }
	            return number + ' חודשים';
	        },
	        y : 'שנה',
	        yy : function (number) {
	            if (number === 2) {
	                return 'שנתיים';
	            } else if (number % 10 === 0 && number !== 10) {
	                return number + ' שנה';
	            }
	            return number + ' שנים';
	        }
	    },
	    meridiemParse: /אחה"צ|לפנה"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,
	    isPM : function (input) {
	        return /^(אחה"צ|אחרי הצהריים|בערב)$/.test(input);
	    },
	    meridiem : function (hour, minute, isLower) {
	        if (hour < 5) {
	            return 'לפנות בוקר';
	        } else if (hour < 10) {
	            return 'בבוקר';
	        } else if (hour < 12) {
	            return isLower ? 'לפנה"צ' : 'לפני הצהריים';
	        } else if (hour < 18) {
	            return isLower ? 'אחה"צ' : 'אחרי הצהריים';
	        } else {
	            return 'בערב';
	        }
	    }
	});

	return he;

	})));


/***/ },
/* 354 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Hindi [hi]
	//! author : Mayank Singhal : https://github.com/mayanksinghal

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var symbolMap = {
	    '1': '१',
	    '2': '२',
	    '3': '३',
	    '4': '४',
	    '5': '५',
	    '6': '६',
	    '7': '७',
	    '8': '८',
	    '9': '९',
	    '0': '०'
	};
	var numberMap = {
	    '१': '1',
	    '२': '2',
	    '३': '3',
	    '४': '4',
	    '५': '5',
	    '६': '6',
	    '७': '7',
	    '८': '8',
	    '९': '9',
	    '०': '0'
	};

	var hi = moment.defineLocale('hi', {
	    months : 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),
	    monthsShort : 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),
	    monthsParseExact: true,
	    weekdays : 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
	    weekdaysShort : 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),
	    weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),
	    longDateFormat : {
	        LT : 'A h:mm बजे',
	        LTS : 'A h:mm:ss बजे',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY, A h:mm बजे',
	        LLLL : 'dddd, D MMMM YYYY, A h:mm बजे'
	    },
	    calendar : {
	        sameDay : '[आज] LT',
	        nextDay : '[कल] LT',
	        nextWeek : 'dddd, LT',
	        lastDay : '[कल] LT',
	        lastWeek : '[पिछले] dddd, LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : '%s में',
	        past : '%s पहले',
	        s : 'कुछ ही क्षण',
	        m : 'एक मिनट',
	        mm : '%d मिनट',
	        h : 'एक घंटा',
	        hh : '%d घंटे',
	        d : 'एक दिन',
	        dd : '%d दिन',
	        M : 'एक महीने',
	        MM : '%d महीने',
	        y : 'एक वर्ष',
	        yy : '%d वर्ष'
	    },
	    preparse: function (string) {
	        return string.replace(/[१२३४५६७८९०]/g, function (match) {
	            return numberMap[match];
	        });
	    },
	    postformat: function (string) {
	        return string.replace(/\d/g, function (match) {
	            return symbolMap[match];
	        });
	    },
	    // Hindi notation for meridiems are quite fuzzy in practice. While there exists
	    // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.
	    meridiemParse: /रात|सुबह|दोपहर|शाम/,
	    meridiemHour : function (hour, meridiem) {
	        if (hour === 12) {
	            hour = 0;
	        }
	        if (meridiem === 'रात') {
	            return hour < 4 ? hour : hour + 12;
	        } else if (meridiem === 'सुबह') {
	            return hour;
	        } else if (meridiem === 'दोपहर') {
	            return hour >= 10 ? hour : hour + 12;
	        } else if (meridiem === 'शाम') {
	            return hour + 12;
	        }
	    },
	    meridiem : function (hour, minute, isLower) {
	        if (hour < 4) {
	            return 'रात';
	        } else if (hour < 10) {
	            return 'सुबह';
	        } else if (hour < 17) {
	            return 'दोपहर';
	        } else if (hour < 20) {
	            return 'शाम';
	        } else {
	            return 'रात';
	        }
	    },
	    week : {
	        dow : 0, // Sunday is the first day of the week.
	        doy : 6  // The week that contains Jan 1st is the first week of the year.
	    }
	});

	return hi;

	})));


/***/ },
/* 355 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Croatian [hr]
	//! author : Bojan Marković : https://github.com/bmarkovic

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	function translate(number, withoutSuffix, key) {
	    var result = number + ' ';
	    switch (key) {
	        case 'm':
	            return withoutSuffix ? 'jedna minuta' : 'jedne minute';
	        case 'mm':
	            if (number === 1) {
	                result += 'minuta';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'minute';
	            } else {
	                result += 'minuta';
	            }
	            return result;
	        case 'h':
	            return withoutSuffix ? 'jedan sat' : 'jednog sata';
	        case 'hh':
	            if (number === 1) {
	                result += 'sat';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'sata';
	            } else {
	                result += 'sati';
	            }
	            return result;
	        case 'dd':
	            if (number === 1) {
	                result += 'dan';
	            } else {
	                result += 'dana';
	            }
	            return result;
	        case 'MM':
	            if (number === 1) {
	                result += 'mjesec';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'mjeseca';
	            } else {
	                result += 'mjeseci';
	            }
	            return result;
	        case 'yy':
	            if (number === 1) {
	                result += 'godina';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'godine';
	            } else {
	                result += 'godina';
	            }
	            return result;
	    }
	}

	var hr = moment.defineLocale('hr', {
	    months : {
	        format: 'siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca'.split('_'),
	        standalone: 'siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split('_')
	    },
	    monthsShort : 'sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split('_'),
	    monthsParseExact: true,
	    weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
	    weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
	    weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'H:mm',
	        LTS : 'H:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D. MMMM YYYY',
	        LLL : 'D. MMMM YYYY H:mm',
	        LLLL : 'dddd, D. MMMM YYYY H:mm'
	    },
	    calendar : {
	        sameDay  : '[danas u] LT',
	        nextDay  : '[sutra u] LT',
	        nextWeek : function () {
	            switch (this.day()) {
	                case 0:
	                    return '[u] [nedjelju] [u] LT';
	                case 3:
	                    return '[u] [srijedu] [u] LT';
	                case 6:
	                    return '[u] [subotu] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[u] dddd [u] LT';
	            }
	        },
	        lastDay  : '[jučer u] LT',
	        lastWeek : function () {
	            switch (this.day()) {
	                case 0:
	                case 3:
	                    return '[prošlu] dddd [u] LT';
	                case 6:
	                    return '[prošle] [subote] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[prošli] dddd [u] LT';
	            }
	        },
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'za %s',
	        past   : 'prije %s',
	        s      : 'par sekundi',
	        m      : translate,
	        mm     : translate,
	        h      : translate,
	        hh     : translate,
	        d      : 'dan',
	        dd     : translate,
	        M      : 'mjesec',
	        MM     : translate,
	        y      : 'godinu',
	        yy     : translate
	    },
	    ordinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});

	return hr;

	})));


/***/ },
/* 356 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Hungarian [hu]
	//! author : Adam Brunner : https://github.com/adambrunner

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');
	function translate(number, withoutSuffix, key, isFuture) {
	    var num = number,
	        suffix;
	    switch (key) {
	        case 's':
	            return (isFuture || withoutSuffix) ? 'néhány másodperc' : 'néhány másodperce';
	        case 'm':
	            return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');
	        case 'mm':
	            return num + (isFuture || withoutSuffix ? ' perc' : ' perce');
	        case 'h':
	            return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');
	        case 'hh':
	            return num + (isFuture || withoutSuffix ? ' óra' : ' órája');
	        case 'd':
	            return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');
	        case 'dd':
	            return num + (isFuture || withoutSuffix ? ' nap' : ' napja');
	        case 'M':
	            return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
	        case 'MM':
	            return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
	        case 'y':
	            return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');
	        case 'yy':
	            return num + (isFuture || withoutSuffix ? ' év' : ' éve');
	    }
	    return '';
	}
	function week(isFuture) {
	    return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[this.day()] + '] LT[-kor]';
	}

	var hu = moment.defineLocale('hu', {
	    months : 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),
	    monthsShort : 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'),
	    weekdays : 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),
	    weekdaysShort : 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),
	    weekdaysMin : 'v_h_k_sze_cs_p_szo'.split('_'),
	    longDateFormat : {
	        LT : 'H:mm',
	        LTS : 'H:mm:ss',
	        L : 'YYYY.MM.DD.',
	        LL : 'YYYY. MMMM D.',
	        LLL : 'YYYY. MMMM D. H:mm',
	        LLLL : 'YYYY. MMMM D., dddd H:mm'
	    },
	    meridiemParse: /de|du/i,
	    isPM: function (input) {
	        return input.charAt(1).toLowerCase() === 'u';
	    },
	    meridiem : function (hours, minutes, isLower) {
	        if (hours < 12) {
	            return isLower === true ? 'de' : 'DE';
	        } else {
	            return isLower === true ? 'du' : 'DU';
	        }
	    },
	    calendar : {
	        sameDay : '[ma] LT[-kor]',
	        nextDay : '[holnap] LT[-kor]',
	        nextWeek : function () {
	            return week.call(this, true);
	        },
	        lastDay : '[tegnap] LT[-kor]',
	        lastWeek : function () {
	            return week.call(this, false);
	        },
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : '%s múlva',
	        past : '%s',
	        s : translate,
	        m : translate,
	        mm : translate,
	        h : translate,
	        hh : translate,
	        d : translate,
	        dd : translate,
	        M : translate,
	        MM : translate,
	        y : translate,
	        yy : translate
	    },
	    ordinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return hu;

	})));


/***/ },
/* 357 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Armenian [hy-am]
	//! author : Armendarabyan : https://github.com/armendarabyan

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var hyAm = moment.defineLocale('hy-am', {
	    months : {
	        format: 'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split('_'),
	        standalone: 'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split('_')
	    },
	    monthsShort : 'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_'),
	    weekdays : 'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split('_'),
	    weekdaysShort : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
	    weekdaysMin : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D MMMM YYYY թ.',
	        LLL : 'D MMMM YYYY թ., HH:mm',
	        LLLL : 'dddd, D MMMM YYYY թ., HH:mm'
	    },
	    calendar : {
	        sameDay: '[այսօր] LT',
	        nextDay: '[վաղը] LT',
	        lastDay: '[երեկ] LT',
	        nextWeek: function () {
	            return 'dddd [օրը ժամը] LT';
	        },
	        lastWeek: function () {
	            return '[անցած] dddd [օրը ժամը] LT';
	        },
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : '%s հետո',
	        past : '%s առաջ',
	        s : 'մի քանի վայրկյան',
	        m : 'րոպե',
	        mm : '%d րոպե',
	        h : 'ժամ',
	        hh : '%d ժամ',
	        d : 'օր',
	        dd : '%d օր',
	        M : 'ամիս',
	        MM : '%d ամիս',
	        y : 'տարի',
	        yy : '%d տարի'
	    },
	    meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,
	    isPM: function (input) {
	        return /^(ցերեկվա|երեկոյան)$/.test(input);
	    },
	    meridiem : function (hour) {
	        if (hour < 4) {
	            return 'գիշերվա';
	        } else if (hour < 12) {
	            return 'առավոտվա';
	        } else if (hour < 17) {
	            return 'ցերեկվա';
	        } else {
	            return 'երեկոյան';
	        }
	    },
	    ordinalParse: /\d{1,2}|\d{1,2}-(ին|րդ)/,
	    ordinal: function (number, period) {
	        switch (period) {
	            case 'DDD':
	            case 'w':
	            case 'W':
	            case 'DDDo':
	                if (number === 1) {
	                    return number + '-ին';
	                }
	                return number + '-րդ';
	            default:
	                return number;
	        }
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});

	return hyAm;

	})));


/***/ },
/* 358 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Indonesian [id]
	//! author : Mohammad Satrio Utomo : https://github.com/tyok
	//! reference: http://id.wikisource.org/wiki/Pedoman_Umum_Ejaan_Bahasa_Indonesia_yang_Disempurnakan

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var id = moment.defineLocale('id', {
	    months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),
	    monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des'.split('_'),
	    weekdays : 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),
	    weekdaysShort : 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),
	    weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),
	    longDateFormat : {
	        LT : 'HH.mm',
	        LTS : 'HH.mm.ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY [pukul] HH.mm',
	        LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
	    },
	    meridiemParse: /pagi|siang|sore|malam/,
	    meridiemHour : function (hour, meridiem) {
	        if (hour === 12) {
	            hour = 0;
	        }
	        if (meridiem === 'pagi') {
	            return hour;
	        } else if (meridiem === 'siang') {
	            return hour >= 11 ? hour : hour + 12;
	        } else if (meridiem === 'sore' || meridiem === 'malam') {
	            return hour + 12;
	        }
	    },
	    meridiem : function (hours, minutes, isLower) {
	        if (hours < 11) {
	            return 'pagi';
	        } else if (hours < 15) {
	            return 'siang';
	        } else if (hours < 19) {
	            return 'sore';
	        } else {
	            return 'malam';
	        }
	    },
	    calendar : {
	        sameDay : '[Hari ini pukul] LT',
	        nextDay : '[Besok pukul] LT',
	        nextWeek : 'dddd [pukul] LT',
	        lastDay : '[Kemarin pukul] LT',
	        lastWeek : 'dddd [lalu pukul] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'dalam %s',
	        past : '%s yang lalu',
	        s : 'beberapa detik',
	        m : 'semenit',
	        mm : '%d menit',
	        h : 'sejam',
	        hh : '%d jam',
	        d : 'sehari',
	        dd : '%d hari',
	        M : 'sebulan',
	        MM : '%d bulan',
	        y : 'setahun',
	        yy : '%d tahun'
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});

	return id;

	})));


/***/ },
/* 359 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Icelandic [is]
	//! author : Hinrik Örn Sigurðsson : https://github.com/hinrik

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	function plural(n) {
	    if (n % 100 === 11) {
	        return true;
	    } else if (n % 10 === 1) {
	        return false;
	    }
	    return true;
	}
	function translate(number, withoutSuffix, key, isFuture) {
	    var result = number + ' ';
	    switch (key) {
	        case 's':
	            return withoutSuffix || isFuture ? 'nokkrar sekúndur' : 'nokkrum sekúndum';
	        case 'm':
	            return withoutSuffix ? 'mínúta' : 'mínútu';
	        case 'mm':
	            if (plural(number)) {
	                return result + (withoutSuffix || isFuture ? 'mínútur' : 'mínútum');
	            } else if (withoutSuffix) {
	                return result + 'mínúta';
	            }
	            return result + 'mínútu';
	        case 'hh':
	            if (plural(number)) {
	                return result + (withoutSuffix || isFuture ? 'klukkustundir' : 'klukkustundum');
	            }
	            return result + 'klukkustund';
	        case 'd':
	            if (withoutSuffix) {
	                return 'dagur';
	            }
	            return isFuture ? 'dag' : 'degi';
	        case 'dd':
	            if (plural(number)) {
	                if (withoutSuffix) {
	                    return result + 'dagar';
	                }
	                return result + (isFuture ? 'daga' : 'dögum');
	            } else if (withoutSuffix) {
	                return result + 'dagur';
	            }
	            return result + (isFuture ? 'dag' : 'degi');
	        case 'M':
	            if (withoutSuffix) {
	                return 'mánuður';
	            }
	            return isFuture ? 'mánuð' : 'mánuði';
	        case 'MM':
	            if (plural(number)) {
	                if (withoutSuffix) {
	                    return result + 'mánuðir';
	                }
	                return result + (isFuture ? 'mánuði' : 'mánuðum');
	            } else if (withoutSuffix) {
	                return result + 'mánuður';
	            }
	            return result + (isFuture ? 'mánuð' : 'mánuði');
	        case 'y':
	            return withoutSuffix || isFuture ? 'ár' : 'ári';
	        case 'yy':
	            if (plural(number)) {
	                return result + (withoutSuffix || isFuture ? 'ár' : 'árum');
	            }
	            return result + (withoutSuffix || isFuture ? 'ár' : 'ári');
	    }
	}

	var is = moment.defineLocale('is', {
	    months : 'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split('_'),
	    monthsShort : 'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split('_'),
	    weekdays : 'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split('_'),
	    weekdaysShort : 'sun_mán_þri_mið_fim_fös_lau'.split('_'),
	    weekdaysMin : 'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'),
	    longDateFormat : {
	        LT : 'H:mm',
	        LTS : 'H:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D. MMMM YYYY',
	        LLL : 'D. MMMM YYYY [kl.] H:mm',
	        LLLL : 'dddd, D. MMMM YYYY [kl.] H:mm'
	    },
	    calendar : {
	        sameDay : '[í dag kl.] LT',
	        nextDay : '[á morgun kl.] LT',
	        nextWeek : 'dddd [kl.] LT',
	        lastDay : '[í gær kl.] LT',
	        lastWeek : '[síðasta] dddd [kl.] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'eftir %s',
	        past : 'fyrir %s síðan',
	        s : translate,
	        m : translate,
	        mm : translate,
	        h : 'klukkustund',
	        hh : translate,
	        d : translate,
	        dd : translate,
	        M : translate,
	        MM : translate,
	        y : translate,
	        yy : translate
	    },
	    ordinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return is;

	})));


/***/ },
/* 360 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Italian [it]
	//! author : Lorenzo : https://github.com/aliem
	//! author: Mattia Larentis: https://github.com/nostalgiaz

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var it = moment.defineLocale('it', {
	    months : 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),
	    monthsShort : 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),
	    weekdays : 'Domenica_Lunedì_Martedì_Mercoledì_Giovedì_Venerdì_Sabato'.split('_'),
	    weekdaysShort : 'Dom_Lun_Mar_Mer_Gio_Ven_Sab'.split('_'),
	    weekdaysMin : 'Do_Lu_Ma_Me_Gi_Ve_Sa'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd, D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay: '[Oggi alle] LT',
	        nextDay: '[Domani alle] LT',
	        nextWeek: 'dddd [alle] LT',
	        lastDay: '[Ieri alle] LT',
	        lastWeek: function () {
	            switch (this.day()) {
	                case 0:
	                    return '[la scorsa] dddd [alle] LT';
	                default:
	                    return '[lo scorso] dddd [alle] LT';
	            }
	        },
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : function (s) {
	            return ((/^[0-9].+$/).test(s) ? 'tra' : 'in') + ' ' + s;
	        },
	        past : '%s fa',
	        s : 'alcuni secondi',
	        m : 'un minuto',
	        mm : '%d minuti',
	        h : 'un\'ora',
	        hh : '%d ore',
	        d : 'un giorno',
	        dd : '%d giorni',
	        M : 'un mese',
	        MM : '%d mesi',
	        y : 'un anno',
	        yy : '%d anni'
	    },
	    ordinalParse : /\d{1,2}º/,
	    ordinal: '%dº',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return it;

	})));


/***/ },
/* 361 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Japanese [ja]
	//! author : LI Long : https://github.com/baryon

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var ja = moment.defineLocale('ja', {
	    months : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	    monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	    weekdays : '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),
	    weekdaysShort : '日_月_火_水_木_金_土'.split('_'),
	    weekdaysMin : '日_月_火_水_木_金_土'.split('_'),
	    longDateFormat : {
	        LT : 'Ah時m分',
	        LTS : 'Ah時m分s秒',
	        L : 'YYYY/MM/DD',
	        LL : 'YYYY年M月D日',
	        LLL : 'YYYY年M月D日Ah時m分',
	        LLLL : 'YYYY年M月D日Ah時m分 dddd'
	    },
	    meridiemParse: /午前|午後/i,
	    isPM : function (input) {
	        return input === '午後';
	    },
	    meridiem : function (hour, minute, isLower) {
	        if (hour < 12) {
	            return '午前';
	        } else {
	            return '午後';
	        }
	    },
	    calendar : {
	        sameDay : '[今日] LT',
	        nextDay : '[明日] LT',
	        nextWeek : '[来週]dddd LT',
	        lastDay : '[昨日] LT',
	        lastWeek : '[前週]dddd LT',
	        sameElse : 'L'
	    },
	    ordinalParse : /\d{1,2}日/,
	    ordinal : function (number, period) {
	        switch (period) {
	            case 'd':
	            case 'D':
	            case 'DDD':
	                return number + '日';
	            default:
	                return number;
	        }
	    },
	    relativeTime : {
	        future : '%s後',
	        past : '%s前',
	        s : '数秒',
	        m : '1分',
	        mm : '%d分',
	        h : '1時間',
	        hh : '%d時間',
	        d : '1日',
	        dd : '%d日',
	        M : '1ヶ月',
	        MM : '%dヶ月',
	        y : '1年',
	        yy : '%d年'
	    }
	});

	return ja;

	})));


/***/ },
/* 362 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Javanese [jv]
	//! author : Rony Lantip : https://github.com/lantip
	//! reference: http://jv.wikipedia.org/wiki/Basa_Jawa

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var jv = moment.defineLocale('jv', {
	    months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember'.split('_'),
	    monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des'.split('_'),
	    weekdays : 'Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu'.split('_'),
	    weekdaysShort : 'Min_Sen_Sel_Reb_Kem_Jem_Sep'.split('_'),
	    weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sp'.split('_'),
	    longDateFormat : {
	        LT : 'HH.mm',
	        LTS : 'HH.mm.ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY [pukul] HH.mm',
	        LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
	    },
	    meridiemParse: /enjing|siyang|sonten|ndalu/,
	    meridiemHour : function (hour, meridiem) {
	        if (hour === 12) {
	            hour = 0;
	        }
	        if (meridiem === 'enjing') {
	            return hour;
	        } else if (meridiem === 'siyang') {
	            return hour >= 11 ? hour : hour + 12;
	        } else if (meridiem === 'sonten' || meridiem === 'ndalu') {
	            return hour + 12;
	        }
	    },
	    meridiem : function (hours, minutes, isLower) {
	        if (hours < 11) {
	            return 'enjing';
	        } else if (hours < 15) {
	            return 'siyang';
	        } else if (hours < 19) {
	            return 'sonten';
	        } else {
	            return 'ndalu';
	        }
	    },
	    calendar : {
	        sameDay : '[Dinten puniko pukul] LT',
	        nextDay : '[Mbenjang pukul] LT',
	        nextWeek : 'dddd [pukul] LT',
	        lastDay : '[Kala wingi pukul] LT',
	        lastWeek : 'dddd [kepengker pukul] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'wonten ing %s',
	        past : '%s ingkang kepengker',
	        s : 'sawetawis detik',
	        m : 'setunggal menit',
	        mm : '%d menit',
	        h : 'setunggal jam',
	        hh : '%d jam',
	        d : 'sedinten',
	        dd : '%d dinten',
	        M : 'sewulan',
	        MM : '%d wulan',
	        y : 'setaun',
	        yy : '%d taun'
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});

	return jv;

	})));


/***/ },
/* 363 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Georgian [ka]
	//! author : Irakli Janiashvili : https://github.com/irakli-janiashvili

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var ka = moment.defineLocale('ka', {
	    months : {
	        standalone: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_'),
	        format: 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_')
	    },
	    monthsShort : 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),
	    weekdays : {
	        standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),
	        format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_'),
	        isFormat: /(წინა|შემდეგ)/
	    },
	    weekdaysShort : 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),
	    weekdaysMin : 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),
	    longDateFormat : {
	        LT : 'h:mm A',
	        LTS : 'h:mm:ss A',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY h:mm A',
	        LLLL : 'dddd, D MMMM YYYY h:mm A'
	    },
	    calendar : {
	        sameDay : '[დღეს] LT[-ზე]',
	        nextDay : '[ხვალ] LT[-ზე]',
	        lastDay : '[გუშინ] LT[-ზე]',
	        nextWeek : '[შემდეგ] dddd LT[-ზე]',
	        lastWeek : '[წინა] dddd LT-ზე',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : function (s) {
	            return (/(წამი|წუთი|საათი|წელი)/).test(s) ?
	                s.replace(/ი$/, 'ში') :
	                s + 'ში';
	        },
	        past : function (s) {
	            if ((/(წამი|წუთი|საათი|დღე|თვე)/).test(s)) {
	                return s.replace(/(ი|ე)$/, 'ის წინ');
	            }
	            if ((/წელი/).test(s)) {
	                return s.replace(/წელი$/, 'წლის წინ');
	            }
	        },
	        s : 'რამდენიმე წამი',
	        m : 'წუთი',
	        mm : '%d წუთი',
	        h : 'საათი',
	        hh : '%d საათი',
	        d : 'დღე',
	        dd : '%d დღე',
	        M : 'თვე',
	        MM : '%d თვე',
	        y : 'წელი',
	        yy : '%d წელი'
	    },
	    ordinalParse: /0|1-ლი|მე-\d{1,2}|\d{1,2}-ე/,
	    ordinal : function (number) {
	        if (number === 0) {
	            return number;
	        }
	        if (number === 1) {
	            return number + '-ლი';
	        }
	        if ((number < 20) || (number <= 100 && (number % 20 === 0)) || (number % 100 === 0)) {
	            return 'მე-' + number;
	        }
	        return number + '-ე';
	    },
	    week : {
	        dow : 1,
	        doy : 7
	    }
	});

	return ka;

	})));


/***/ },
/* 364 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Kazakh [kk]
	//! authors : Nurlan Rakhimzhanov : https://github.com/nurlan

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var suffixes = {
	    0: '-ші',
	    1: '-ші',
	    2: '-ші',
	    3: '-ші',
	    4: '-ші',
	    5: '-ші',
	    6: '-шы',
	    7: '-ші',
	    8: '-ші',
	    9: '-шы',
	    10: '-шы',
	    20: '-шы',
	    30: '-шы',
	    40: '-шы',
	    50: '-ші',
	    60: '-шы',
	    70: '-ші',
	    80: '-ші',
	    90: '-шы',
	    100: '-ші'
	};

	var kk = moment.defineLocale('kk', {
	    months : 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split('_'),
	    monthsShort : 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),
	    weekdays : 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split('_'),
	    weekdaysShort : 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),
	    weekdaysMin : 'жк_дй_сй_ср_бй_жм_сн'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd, D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay : '[Бүгін сағат] LT',
	        nextDay : '[Ертең сағат] LT',
	        nextWeek : 'dddd [сағат] LT',
	        lastDay : '[Кеше сағат] LT',
	        lastWeek : '[Өткен аптаның] dddd [сағат] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : '%s ішінде',
	        past : '%s бұрын',
	        s : 'бірнеше секунд',
	        m : 'бір минут',
	        mm : '%d минут',
	        h : 'бір сағат',
	        hh : '%d сағат',
	        d : 'бір күн',
	        dd : '%d күн',
	        M : 'бір ай',
	        MM : '%d ай',
	        y : 'бір жыл',
	        yy : '%d жыл'
	    },
	    ordinalParse: /\d{1,2}-(ші|шы)/,
	    ordinal : function (number) {
	        var a = number % 10,
	            b = number >= 100 ? 100 : null;
	        return number + (suffixes[number] || suffixes[a] || suffixes[b]);
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});

	return kk;

	})));


/***/ },
/* 365 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Cambodian [km]
	//! author : Kruy Vanna : https://github.com/kruyvanna

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var km = moment.defineLocale('km', {
	    months: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),
	    monthsShort: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),
	    weekdays: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
	    weekdaysShort: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
	    weekdaysMin: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
	    longDateFormat: {
	        LT: 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L: 'DD/MM/YYYY',
	        LL: 'D MMMM YYYY',
	        LLL: 'D MMMM YYYY HH:mm',
	        LLLL: 'dddd, D MMMM YYYY HH:mm'
	    },
	    calendar: {
	        sameDay: '[ថ្ងៃនេះ ម៉ោង] LT',
	        nextDay: '[ស្អែក ម៉ោង] LT',
	        nextWeek: 'dddd [ម៉ោង] LT',
	        lastDay: '[ម្សិលមិញ ម៉ោង] LT',
	        lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',
	        sameElse: 'L'
	    },
	    relativeTime: {
	        future: '%sទៀត',
	        past: '%sមុន',
	        s: 'ប៉ុន្មានវិនាទី',
	        m: 'មួយនាទី',
	        mm: '%d នាទី',
	        h: 'មួយម៉ោង',
	        hh: '%d ម៉ោង',
	        d: 'មួយថ្ងៃ',
	        dd: '%d ថ្ងៃ',
	        M: 'មួយខែ',
	        MM: '%d ខែ',
	        y: 'មួយឆ្នាំ',
	        yy: '%d ឆ្នាំ'
	    },
	    week: {
	        dow: 1, // Monday is the first day of the week.
	        doy: 4 // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return km;

	})));


/***/ },
/* 366 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Korean [ko]
	//! author : Kyungwook, Park : https://github.com/kyungw00k
	//! author : Jeeeyul Lee <jeeeyul@gmail.com>

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var ko = moment.defineLocale('ko', {
	    months : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
	    monthsShort : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
	    weekdays : '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),
	    weekdaysShort : '일_월_화_수_목_금_토'.split('_'),
	    weekdaysMin : '일_월_화_수_목_금_토'.split('_'),
	    longDateFormat : {
	        LT : 'A h시 m분',
	        LTS : 'A h시 m분 s초',
	        L : 'YYYY.MM.DD',
	        LL : 'YYYY년 MMMM D일',
	        LLL : 'YYYY년 MMMM D일 A h시 m분',
	        LLLL : 'YYYY년 MMMM D일 dddd A h시 m분'
	    },
	    calendar : {
	        sameDay : '오늘 LT',
	        nextDay : '내일 LT',
	        nextWeek : 'dddd LT',
	        lastDay : '어제 LT',
	        lastWeek : '지난주 dddd LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : '%s 후',
	        past : '%s 전',
	        s : '몇 초',
	        ss : '%d초',
	        m : '일분',
	        mm : '%d분',
	        h : '한 시간',
	        hh : '%d시간',
	        d : '하루',
	        dd : '%d일',
	        M : '한 달',
	        MM : '%d달',
	        y : '일 년',
	        yy : '%d년'
	    },
	    ordinalParse : /\d{1,2}일/,
	    ordinal : '%d일',
	    meridiemParse : /오전|오후/,
	    isPM : function (token) {
	        return token === '오후';
	    },
	    meridiem : function (hour, minute, isUpper) {
	        return hour < 12 ? '오전' : '오후';
	    }
	});

	return ko;

	})));


/***/ },
/* 367 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Kyrgyz [ky]
	//! author : Chyngyz Arystan uulu : https://github.com/chyngyz

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';



	var suffixes = {
	    0: '-чү',
	    1: '-чи',
	    2: '-чи',
	    3: '-чү',
	    4: '-чү',
	    5: '-чи',
	    6: '-чы',
	    7: '-чи',
	    8: '-чи',
	    9: '-чу',
	    10: '-чу',
	    20: '-чы',
	    30: '-чу',
	    40: '-чы',
	    50: '-чү',
	    60: '-чы',
	    70: '-чи',
	    80: '-чи',
	    90: '-чу',
	    100: '-чү'
	};

	var ky = moment.defineLocale('ky', {
	    months : 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),
	    monthsShort : 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'),
	    weekdays : 'Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби'.split('_'),
	    weekdaysShort : 'Жек_Дүй_Шей_Шар_Бей_Жум_Ише'.split('_'),
	    weekdaysMin : 'Жк_Дй_Шй_Шр_Бй_Жм_Иш'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd, D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay : '[Бүгүн саат] LT',
	        nextDay : '[Эртең саат] LT',
	        nextWeek : 'dddd [саат] LT',
	        lastDay : '[Кече саат] LT',
	        lastWeek : '[Өткен аптанын] dddd [күнү] [саат] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : '%s ичинде',
	        past : '%s мурун',
	        s : 'бирнече секунд',
	        m : 'бир мүнөт',
	        mm : '%d мүнөт',
	        h : 'бир саат',
	        hh : '%d саат',
	        d : 'бир күн',
	        dd : '%d күн',
	        M : 'бир ай',
	        MM : '%d ай',
	        y : 'бир жыл',
	        yy : '%d жыл'
	    },
	    ordinalParse: /\d{1,2}-(чи|чы|чү|чу)/,
	    ordinal : function (number) {
	        var a = number % 10,
	            b = number >= 100 ? 100 : null;
	        return number + (suffixes[number] || suffixes[a] || suffixes[b]);
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});

	return ky;

	})));


/***/ },
/* 368 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Luxembourgish [lb]
	//! author : mweimerskirch : https://github.com/mweimerskirch
	//! author : David Raison : https://github.com/kwisatz

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	function processRelativeTime(number, withoutSuffix, key, isFuture) {
	    var format = {
	        'm': ['eng Minutt', 'enger Minutt'],
	        'h': ['eng Stonn', 'enger Stonn'],
	        'd': ['een Dag', 'engem Dag'],
	        'M': ['ee Mount', 'engem Mount'],
	        'y': ['ee Joer', 'engem Joer']
	    };
	    return withoutSuffix ? format[key][0] : format[key][1];
	}
	function processFutureTime(string) {
	    var number = string.substr(0, string.indexOf(' '));
	    if (eifelerRegelAppliesToNumber(number)) {
	        return 'a ' + string;
	    }
	    return 'an ' + string;
	}
	function processPastTime(string) {
	    var number = string.substr(0, string.indexOf(' '));
	    if (eifelerRegelAppliesToNumber(number)) {
	        return 'viru ' + string;
	    }
	    return 'virun ' + string;
	}
	/**
	 * Returns true if the word before the given number loses the '-n' ending.
	 * e.g. 'an 10 Deeg' but 'a 5 Deeg'
	 *
	 * @param number {integer}
	 * @returns {boolean}
	 */
	function eifelerRegelAppliesToNumber(number) {
	    number = parseInt(number, 10);
	    if (isNaN(number)) {
	        return false;
	    }
	    if (number < 0) {
	        // Negative Number --> always true
	        return true;
	    } else if (number < 10) {
	        // Only 1 digit
	        if (4 <= number && number <= 7) {
	            return true;
	        }
	        return false;
	    } else if (number < 100) {
	        // 2 digits
	        var lastDigit = number % 10, firstDigit = number / 10;
	        if (lastDigit === 0) {
	            return eifelerRegelAppliesToNumber(firstDigit);
	        }
	        return eifelerRegelAppliesToNumber(lastDigit);
	    } else if (number < 10000) {
	        // 3 or 4 digits --> recursively check first digit
	        while (number >= 10) {
	            number = number / 10;
	        }
	        return eifelerRegelAppliesToNumber(number);
	    } else {
	        // Anything larger than 4 digits: recursively check first n-3 digits
	        number = number / 1000;
	        return eifelerRegelAppliesToNumber(number);
	    }
	}

	var lb = moment.defineLocale('lb', {
	    months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
	    monthsShort: 'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
	    monthsParseExact : true,
	    weekdays: 'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split('_'),
	    weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),
	    weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat: {
	        LT: 'H:mm [Auer]',
	        LTS: 'H:mm:ss [Auer]',
	        L: 'DD.MM.YYYY',
	        LL: 'D. MMMM YYYY',
	        LLL: 'D. MMMM YYYY H:mm [Auer]',
	        LLLL: 'dddd, D. MMMM YYYY H:mm [Auer]'
	    },
	    calendar: {
	        sameDay: '[Haut um] LT',
	        sameElse: 'L',
	        nextDay: '[Muer um] LT',
	        nextWeek: 'dddd [um] LT',
	        lastDay: '[Gëschter um] LT',
	        lastWeek: function () {
	            // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule
	            switch (this.day()) {
	                case 2:
	                case 4:
	                    return '[Leschten] dddd [um] LT';
	                default:
	                    return '[Leschte] dddd [um] LT';
	            }
	        }
	    },
	    relativeTime : {
	        future : processFutureTime,
	        past : processPastTime,
	        s : 'e puer Sekonnen',
	        m : processRelativeTime,
	        mm : '%d Minutten',
	        h : processRelativeTime,
	        hh : '%d Stonnen',
	        d : processRelativeTime,
	        dd : '%d Deeg',
	        M : processRelativeTime,
	        MM : '%d Méint',
	        y : processRelativeTime,
	        yy : '%d Joer'
	    },
	    ordinalParse: /\d{1,2}\./,
	    ordinal: '%d.',
	    week: {
	        dow: 1, // Monday is the first day of the week.
	        doy: 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return lb;

	})));


/***/ },
/* 369 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Lao [lo]
	//! author : Ryan Hart : https://github.com/ryanhart2

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var lo = moment.defineLocale('lo', {
	    months : 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),
	    monthsShort : 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),
	    weekdays : 'ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
	    weekdaysShort : 'ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
	    weekdaysMin : 'ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'ວັນdddd D MMMM YYYY HH:mm'
	    },
	    meridiemParse: /ຕອນເຊົ້າ|ຕອນແລງ/,
	    isPM: function (input) {
	        return input === 'ຕອນແລງ';
	    },
	    meridiem : function (hour, minute, isLower) {
	        if (hour < 12) {
	            return 'ຕອນເຊົ້າ';
	        } else {
	            return 'ຕອນແລງ';
	        }
	    },
	    calendar : {
	        sameDay : '[ມື້ນີ້ເວລາ] LT',
	        nextDay : '[ມື້ອື່ນເວລາ] LT',
	        nextWeek : '[ວັນ]dddd[ໜ້າເວລາ] LT',
	        lastDay : '[ມື້ວານນີ້ເວລາ] LT',
	        lastWeek : '[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'ອີກ %s',
	        past : '%sຜ່ານມາ',
	        s : 'ບໍ່ເທົ່າໃດວິນາທີ',
	        m : '1 ນາທີ',
	        mm : '%d ນາທີ',
	        h : '1 ຊົ່ວໂມງ',
	        hh : '%d ຊົ່ວໂມງ',
	        d : '1 ມື້',
	        dd : '%d ມື້',
	        M : '1 ເດືອນ',
	        MM : '%d ເດືອນ',
	        y : '1 ປີ',
	        yy : '%d ປີ'
	    },
	    ordinalParse: /(ທີ່)\d{1,2}/,
	    ordinal : function (number) {
	        return 'ທີ່' + number;
	    }
	});

	return lo;

	})));


/***/ },
/* 370 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Lithuanian [lt]
	//! author : Mindaugas Mozūras : https://github.com/mmozuras

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var units = {
	    'm' : 'minutė_minutės_minutę',
	    'mm': 'minutės_minučių_minutes',
	    'h' : 'valanda_valandos_valandą',
	    'hh': 'valandos_valandų_valandas',
	    'd' : 'diena_dienos_dieną',
	    'dd': 'dienos_dienų_dienas',
	    'M' : 'mėnuo_mėnesio_mėnesį',
	    'MM': 'mėnesiai_mėnesių_mėnesius',
	    'y' : 'metai_metų_metus',
	    'yy': 'metai_metų_metus'
	};
	function translateSeconds(number, withoutSuffix, key, isFuture) {
	    if (withoutSuffix) {
	        return 'kelios sekundės';
	    } else {
	        return isFuture ? 'kelių sekundžių' : 'kelias sekundes';
	    }
	}
	function translateSingular(number, withoutSuffix, key, isFuture) {
	    return withoutSuffix ? forms(key)[0] : (isFuture ? forms(key)[1] : forms(key)[2]);
	}
	function special(number) {
	    return number % 10 === 0 || (number > 10 && number < 20);
	}
	function forms(key) {
	    return units[key].split('_');
	}
	function translate(number, withoutSuffix, key, isFuture) {
	    var result = number + ' ';
	    if (number === 1) {
	        return result + translateSingular(number, withoutSuffix, key[0], isFuture);
	    } else if (withoutSuffix) {
	        return result + (special(number) ? forms(key)[1] : forms(key)[0]);
	    } else {
	        if (isFuture) {
	            return result + forms(key)[1];
	        } else {
	            return result + (special(number) ? forms(key)[1] : forms(key)[2]);
	        }
	    }
	}
	var lt = moment.defineLocale('lt', {
	    months : {
	        format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_'),
	        standalone: 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split('_'),
	        isFormat: /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?|MMMM?(\[[^\[\]]*\]|\s)+D[oD]?/
	    },
	    monthsShort : 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),
	    weekdays : {
	        format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split('_'),
	        standalone: 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_'),
	        isFormat: /dddd HH:mm/
	    },
	    weekdaysShort : 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),
	    weekdaysMin : 'S_P_A_T_K_Pn_Š'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'YYYY-MM-DD',
	        LL : 'YYYY [m.] MMMM D [d.]',
	        LLL : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
	        LLLL : 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',
	        l : 'YYYY-MM-DD',
	        ll : 'YYYY [m.] MMMM D [d.]',
	        lll : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
	        llll : 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]'
	    },
	    calendar : {
	        sameDay : '[Šiandien] LT',
	        nextDay : '[Rytoj] LT',
	        nextWeek : 'dddd LT',
	        lastDay : '[Vakar] LT',
	        lastWeek : '[Praėjusį] dddd LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'po %s',
	        past : 'prieš %s',
	        s : translateSeconds,
	        m : translateSingular,
	        mm : translate,
	        h : translateSingular,
	        hh : translate,
	        d : translateSingular,
	        dd : translate,
	        M : translateSingular,
	        MM : translate,
	        y : translateSingular,
	        yy : translate
	    },
	    ordinalParse: /\d{1,2}-oji/,
	    ordinal : function (number) {
	        return number + '-oji';
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return lt;

	})));


/***/ },
/* 371 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Latvian [lv]
	//! author : Kristaps Karlsons : https://github.com/skakri
	//! author : Jānis Elmeris : https://github.com/JanisE

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var units = {
	    'm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),
	    'mm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),
	    'h': 'stundas_stundām_stunda_stundas'.split('_'),
	    'hh': 'stundas_stundām_stunda_stundas'.split('_'),
	    'd': 'dienas_dienām_diena_dienas'.split('_'),
	    'dd': 'dienas_dienām_diena_dienas'.split('_'),
	    'M': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
	    'MM': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
	    'y': 'gada_gadiem_gads_gadi'.split('_'),
	    'yy': 'gada_gadiem_gads_gadi'.split('_')
	};
	/**
	 * @param withoutSuffix boolean true = a length of time; false = before/after a period of time.
	 */
	function format(forms, number, withoutSuffix) {
	    if (withoutSuffix) {
	        // E.g. "21 minūte", "3 minūtes".
	        return number % 10 === 1 && number % 100 !== 11 ? forms[2] : forms[3];
	    } else {
	        // E.g. "21 minūtes" as in "pēc 21 minūtes".
	        // E.g. "3 minūtēm" as in "pēc 3 minūtēm".
	        return number % 10 === 1 && number % 100 !== 11 ? forms[0] : forms[1];
	    }
	}
	function relativeTimeWithPlural(number, withoutSuffix, key) {
	    return number + ' ' + format(units[key], number, withoutSuffix);
	}
	function relativeTimeWithSingular(number, withoutSuffix, key) {
	    return format(units[key], number, withoutSuffix);
	}
	function relativeSeconds(number, withoutSuffix) {
	    return withoutSuffix ? 'dažas sekundes' : 'dažām sekundēm';
	}

	var lv = moment.defineLocale('lv', {
	    months : 'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split('_'),
	    monthsShort : 'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split('_'),
	    weekdays : 'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split('_'),
	    weekdaysShort : 'Sv_P_O_T_C_Pk_S'.split('_'),
	    weekdaysMin : 'Sv_P_O_T_C_Pk_S'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD.MM.YYYY.',
	        LL : 'YYYY. [gada] D. MMMM',
	        LLL : 'YYYY. [gada] D. MMMM, HH:mm',
	        LLLL : 'YYYY. [gada] D. MMMM, dddd, HH:mm'
	    },
	    calendar : {
	        sameDay : '[Šodien pulksten] LT',
	        nextDay : '[Rīt pulksten] LT',
	        nextWeek : 'dddd [pulksten] LT',
	        lastDay : '[Vakar pulksten] LT',
	        lastWeek : '[Pagājušā] dddd [pulksten] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'pēc %s',
	        past : 'pirms %s',
	        s : relativeSeconds,
	        m : relativeTimeWithSingular,
	        mm : relativeTimeWithPlural,
	        h : relativeTimeWithSingular,
	        hh : relativeTimeWithPlural,
	        d : relativeTimeWithSingular,
	        dd : relativeTimeWithPlural,
	        M : relativeTimeWithSingular,
	        MM : relativeTimeWithPlural,
	        y : relativeTimeWithSingular,
	        yy : relativeTimeWithPlural
	    },
	    ordinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return lv;

	})));


/***/ },
/* 372 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Montenegrin [me]
	//! author : Miodrag Nikač <miodrag@restartit.me> : https://github.com/miodragnikac

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var translator = {
	    words: { //Different grammatical cases
	        m: ['jedan minut', 'jednog minuta'],
	        mm: ['minut', 'minuta', 'minuta'],
	        h: ['jedan sat', 'jednog sata'],
	        hh: ['sat', 'sata', 'sati'],
	        dd: ['dan', 'dana', 'dana'],
	        MM: ['mjesec', 'mjeseca', 'mjeseci'],
	        yy: ['godina', 'godine', 'godina']
	    },
	    correctGrammaticalCase: function (number, wordKey) {
	        return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
	    },
	    translate: function (number, withoutSuffix, key) {
	        var wordKey = translator.words[key];
	        if (key.length === 1) {
	            return withoutSuffix ? wordKey[0] : wordKey[1];
	        } else {
	            return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
	        }
	    }
	};

	var me = moment.defineLocale('me', {
	    months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),
	    monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),
	    monthsParseExact : true,
	    weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
	    weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
	    weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat: {
	        LT: 'H:mm',
	        LTS : 'H:mm:ss',
	        L: 'DD.MM.YYYY',
	        LL: 'D. MMMM YYYY',
	        LLL: 'D. MMMM YYYY H:mm',
	        LLLL: 'dddd, D. MMMM YYYY H:mm'
	    },
	    calendar: {
	        sameDay: '[danas u] LT',
	        nextDay: '[sjutra u] LT',

	        nextWeek: function () {
	            switch (this.day()) {
	                case 0:
	                    return '[u] [nedjelju] [u] LT';
	                case 3:
	                    return '[u] [srijedu] [u] LT';
	                case 6:
	                    return '[u] [subotu] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[u] dddd [u] LT';
	            }
	        },
	        lastDay  : '[juče u] LT',
	        lastWeek : function () {
	            var lastWeekDays = [
	                '[prošle] [nedjelje] [u] LT',
	                '[prošlog] [ponedjeljka] [u] LT',
	                '[prošlog] [utorka] [u] LT',
	                '[prošle] [srijede] [u] LT',
	                '[prošlog] [četvrtka] [u] LT',
	                '[prošlog] [petka] [u] LT',
	                '[prošle] [subote] [u] LT'
	            ];
	            return lastWeekDays[this.day()];
	        },
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'za %s',
	        past   : 'prije %s',
	        s      : 'nekoliko sekundi',
	        m      : translator.translate,
	        mm     : translator.translate,
	        h      : translator.translate,
	        hh     : translator.translate,
	        d      : 'dan',
	        dd     : translator.translate,
	        M      : 'mjesec',
	        MM     : translator.translate,
	        y      : 'godinu',
	        yy     : translator.translate
	    },
	    ordinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});

	return me;

	})));


/***/ },
/* 373 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Maori [mi]
	//! author : John Corrigan <robbiecloset@gmail.com> : https://github.com/johnideal

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var mi = moment.defineLocale('mi', {
	    months: 'Kohi-tāte_Hui-tanguru_Poutū-te-rangi_Paenga-whāwhā_Haratua_Pipiri_Hōngoingoi_Here-turi-kōkā_Mahuru_Whiringa-ā-nuku_Whiringa-ā-rangi_Hakihea'.split('_'),
	    monthsShort: 'Kohi_Hui_Pou_Pae_Hara_Pipi_Hōngoi_Here_Mahu_Whi-nu_Whi-ra_Haki'.split('_'),
	    monthsRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
	    monthsStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
	    monthsShortRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
	    monthsShortStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,2}/i,
	    weekdays: 'Rātapu_Mane_Tūrei_Wenerei_Tāite_Paraire_Hātarei'.split('_'),
	    weekdaysShort: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
	    weekdaysMin: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
	    longDateFormat: {
	        LT: 'HH:mm',
	        LTS: 'HH:mm:ss',
	        L: 'DD/MM/YYYY',
	        LL: 'D MMMM YYYY',
	        LLL: 'D MMMM YYYY [i] HH:mm',
	        LLLL: 'dddd, D MMMM YYYY [i] HH:mm'
	    },
	    calendar: {
	        sameDay: '[i teie mahana, i] LT',
	        nextDay: '[apopo i] LT',
	        nextWeek: 'dddd [i] LT',
	        lastDay: '[inanahi i] LT',
	        lastWeek: 'dddd [whakamutunga i] LT',
	        sameElse: 'L'
	    },
	    relativeTime: {
	        future: 'i roto i %s',
	        past: '%s i mua',
	        s: 'te hēkona ruarua',
	        m: 'he meneti',
	        mm: '%d meneti',
	        h: 'te haora',
	        hh: '%d haora',
	        d: 'he ra',
	        dd: '%d ra',
	        M: 'he marama',
	        MM: '%d marama',
	        y: 'he tau',
	        yy: '%d tau'
	    },
	    ordinalParse: /\d{1,2}º/,
	    ordinal: '%dº',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return mi;

	})));


/***/ },
/* 374 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Macedonian [mk]
	//! author : Borislav Mickov : https://github.com/B0k0

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var mk = moment.defineLocale('mk', {
	    months : 'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split('_'),
	    monthsShort : 'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split('_'),
	    weekdays : 'недела_понеделник_вторник_среда_четврток_петок_сабота'.split('_'),
	    weekdaysShort : 'нед_пон_вто_сре_чет_пет_саб'.split('_'),
	    weekdaysMin : 'нe_пo_вт_ср_че_пе_сa'.split('_'),
	    longDateFormat : {
	        LT : 'H:mm',
	        LTS : 'H:mm:ss',
	        L : 'D.MM.YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY H:mm',
	        LLLL : 'dddd, D MMMM YYYY H:mm'
	    },
	    calendar : {
	        sameDay : '[Денес во] LT',
	        nextDay : '[Утре во] LT',
	        nextWeek : '[Во] dddd [во] LT',
	        lastDay : '[Вчера во] LT',
	        lastWeek : function () {
	            switch (this.day()) {
	                case 0:
	                case 3:
	                case 6:
	                    return '[Изминатата] dddd [во] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[Изминатиот] dddd [во] LT';
	            }
	        },
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'после %s',
	        past : 'пред %s',
	        s : 'неколку секунди',
	        m : 'минута',
	        mm : '%d минути',
	        h : 'час',
	        hh : '%d часа',
	        d : 'ден',
	        dd : '%d дена',
	        M : 'месец',
	        MM : '%d месеци',
	        y : 'година',
	        yy : '%d години'
	    },
	    ordinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
	    ordinal : function (number) {
	        var lastDigit = number % 10,
	            last2Digits = number % 100;
	        if (number === 0) {
	            return number + '-ев';
	        } else if (last2Digits === 0) {
	            return number + '-ен';
	        } else if (last2Digits > 10 && last2Digits < 20) {
	            return number + '-ти';
	        } else if (lastDigit === 1) {
	            return number + '-ви';
	        } else if (lastDigit === 2) {
	            return number + '-ри';
	        } else if (lastDigit === 7 || lastDigit === 8) {
	            return number + '-ми';
	        } else {
	            return number + '-ти';
	        }
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});

	return mk;

	})));


/***/ },
/* 375 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Malayalam [ml]
	//! author : Floyd Pink : https://github.com/floydpink

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var ml = moment.defineLocale('ml', {
	    months : 'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split('_'),
	    monthsShort : 'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split('_'),
	    monthsParseExact : true,
	    weekdays : 'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split('_'),
	    weekdaysShort : 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split('_'),
	    weekdaysMin : 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'),
	    longDateFormat : {
	        LT : 'A h:mm -നു',
	        LTS : 'A h:mm:ss -നു',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY, A h:mm -നു',
	        LLLL : 'dddd, D MMMM YYYY, A h:mm -നു'
	    },
	    calendar : {
	        sameDay : '[ഇന്ന്] LT',
	        nextDay : '[നാളെ] LT',
	        nextWeek : 'dddd, LT',
	        lastDay : '[ഇന്നലെ] LT',
	        lastWeek : '[കഴിഞ്ഞ] dddd, LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : '%s കഴിഞ്ഞ്',
	        past : '%s മുൻപ്',
	        s : 'അൽപ നിമിഷങ്ങൾ',
	        m : 'ഒരു മിനിറ്റ്',
	        mm : '%d മിനിറ്റ്',
	        h : 'ഒരു മണിക്കൂർ',
	        hh : '%d മണിക്കൂർ',
	        d : 'ഒരു ദിവസം',
	        dd : '%d ദിവസം',
	        M : 'ഒരു മാസം',
	        MM : '%d മാസം',
	        y : 'ഒരു വർഷം',
	        yy : '%d വർഷം'
	    },
	    meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,
	    meridiemHour : function (hour, meridiem) {
	        if (hour === 12) {
	            hour = 0;
	        }
	        if ((meridiem === 'രാത്രി' && hour >= 4) ||
	                meridiem === 'ഉച്ച കഴിഞ്ഞ്' ||
	                meridiem === 'വൈകുന്നേരം') {
	            return hour + 12;
	        } else {
	            return hour;
	        }
	    },
	    meridiem : function (hour, minute, isLower) {
	        if (hour < 4) {
	            return 'രാത്രി';
	        } else if (hour < 12) {
	            return 'രാവിലെ';
	        } else if (hour < 17) {
	            return 'ഉച്ച കഴിഞ്ഞ്';
	        } else if (hour < 20) {
	            return 'വൈകുന്നേരം';
	        } else {
	            return 'രാത്രി';
	        }
	    }
	});

	return ml;

	})));


/***/ },
/* 376 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Marathi [mr]
	//! author : Harshad Kale : https://github.com/kalehv
	//! author : Vivek Athalye : https://github.com/vnathalye

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var symbolMap = {
	    '1': '१',
	    '2': '२',
	    '3': '३',
	    '4': '४',
	    '5': '५',
	    '6': '६',
	    '7': '७',
	    '8': '८',
	    '9': '९',
	    '0': '०'
	};
	var numberMap = {
	    '१': '1',
	    '२': '2',
	    '३': '3',
	    '४': '4',
	    '५': '5',
	    '६': '6',
	    '७': '7',
	    '८': '8',
	    '९': '9',
	    '०': '0'
	};

	function relativeTimeMr(number, withoutSuffix, string, isFuture)
	{
	    var output = '';
	    if (withoutSuffix) {
	        switch (string) {
	            case 's': output = 'काही सेकंद'; break;
	            case 'm': output = 'एक मिनिट'; break;
	            case 'mm': output = '%d मिनिटे'; break;
	            case 'h': output = 'एक तास'; break;
	            case 'hh': output = '%d तास'; break;
	            case 'd': output = 'एक दिवस'; break;
	            case 'dd': output = '%d दिवस'; break;
	            case 'M': output = 'एक महिना'; break;
	            case 'MM': output = '%d महिने'; break;
	            case 'y': output = 'एक वर्ष'; break;
	            case 'yy': output = '%d वर्षे'; break;
	        }
	    }
	    else {
	        switch (string) {
	            case 's': output = 'काही सेकंदां'; break;
	            case 'm': output = 'एका मिनिटा'; break;
	            case 'mm': output = '%d मिनिटां'; break;
	            case 'h': output = 'एका तासा'; break;
	            case 'hh': output = '%d तासां'; break;
	            case 'd': output = 'एका दिवसा'; break;
	            case 'dd': output = '%d दिवसां'; break;
	            case 'M': output = 'एका महिन्या'; break;
	            case 'MM': output = '%d महिन्यां'; break;
	            case 'y': output = 'एका वर्षा'; break;
	            case 'yy': output = '%d वर्षां'; break;
	        }
	    }
	    return output.replace(/%d/i, number);
	}

	var mr = moment.defineLocale('mr', {
	    months : 'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split('_'),
	    monthsShort: 'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split('_'),
	    monthsParseExact : true,
	    weekdays : 'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
	    weekdaysShort : 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'),
	    weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),
	    longDateFormat : {
	        LT : 'A h:mm वाजता',
	        LTS : 'A h:mm:ss वाजता',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY, A h:mm वाजता',
	        LLLL : 'dddd, D MMMM YYYY, A h:mm वाजता'
	    },
	    calendar : {
	        sameDay : '[आज] LT',
	        nextDay : '[उद्या] LT',
	        nextWeek : 'dddd, LT',
	        lastDay : '[काल] LT',
	        lastWeek: '[मागील] dddd, LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future: '%sमध्ये',
	        past: '%sपूर्वी',
	        s: relativeTimeMr,
	        m: relativeTimeMr,
	        mm: relativeTimeMr,
	        h: relativeTimeMr,
	        hh: relativeTimeMr,
	        d: relativeTimeMr,
	        dd: relativeTimeMr,
	        M: relativeTimeMr,
	        MM: relativeTimeMr,
	        y: relativeTimeMr,
	        yy: relativeTimeMr
	    },
	    preparse: function (string) {
	        return string.replace(/[१२३४५६७८९०]/g, function (match) {
	            return numberMap[match];
	        });
	    },
	    postformat: function (string) {
	        return string.replace(/\d/g, function (match) {
	            return symbolMap[match];
	        });
	    },
	    meridiemParse: /रात्री|सकाळी|दुपारी|सायंकाळी/,
	    meridiemHour : function (hour, meridiem) {
	        if (hour === 12) {
	            hour = 0;
	        }
	        if (meridiem === 'रात्री') {
	            return hour < 4 ? hour : hour + 12;
	        } else if (meridiem === 'सकाळी') {
	            return hour;
	        } else if (meridiem === 'दुपारी') {
	            return hour >= 10 ? hour : hour + 12;
	        } else if (meridiem === 'सायंकाळी') {
	            return hour + 12;
	        }
	    },
	    meridiem: function (hour, minute, isLower) {
	        if (hour < 4) {
	            return 'रात्री';
	        } else if (hour < 10) {
	            return 'सकाळी';
	        } else if (hour < 17) {
	            return 'दुपारी';
	        } else if (hour < 20) {
	            return 'सायंकाळी';
	        } else {
	            return 'रात्री';
	        }
	    },
	    week : {
	        dow : 0, // Sunday is the first day of the week.
	        doy : 6  // The week that contains Jan 1st is the first week of the year.
	    }
	});

	return mr;

	})));


/***/ },
/* 377 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Malay [ms]
	//! author : Weldan Jamili : https://github.com/weldan

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var ms = moment.defineLocale('ms', {
	    months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
	    monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
	    weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
	    weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
	    weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
	    longDateFormat : {
	        LT : 'HH.mm',
	        LTS : 'HH.mm.ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY [pukul] HH.mm',
	        LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
	    },
	    meridiemParse: /pagi|tengahari|petang|malam/,
	    meridiemHour: function (hour, meridiem) {
	        if (hour === 12) {
	            hour = 0;
	        }
	        if (meridiem === 'pagi') {
	            return hour;
	        } else if (meridiem === 'tengahari') {
	            return hour >= 11 ? hour : hour + 12;
	        } else if (meridiem === 'petang' || meridiem === 'malam') {
	            return hour + 12;
	        }
	    },
	    meridiem : function (hours, minutes, isLower) {
	        if (hours < 11) {
	            return 'pagi';
	        } else if (hours < 15) {
	            return 'tengahari';
	        } else if (hours < 19) {
	            return 'petang';
	        } else {
	            return 'malam';
	        }
	    },
	    calendar : {
	        sameDay : '[Hari ini pukul] LT',
	        nextDay : '[Esok pukul] LT',
	        nextWeek : 'dddd [pukul] LT',
	        lastDay : '[Kelmarin pukul] LT',
	        lastWeek : 'dddd [lepas pukul] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'dalam %s',
	        past : '%s yang lepas',
	        s : 'beberapa saat',
	        m : 'seminit',
	        mm : '%d minit',
	        h : 'sejam',
	        hh : '%d jam',
	        d : 'sehari',
	        dd : '%d hari',
	        M : 'sebulan',
	        MM : '%d bulan',
	        y : 'setahun',
	        yy : '%d tahun'
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});

	return ms;

	})));


/***/ },
/* 378 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Malay [ms-my]
	//! note : DEPRECATED, the correct one is [ms]
	//! author : Weldan Jamili : https://github.com/weldan

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var msMy = moment.defineLocale('ms-my', {
	    months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
	    monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
	    weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
	    weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
	    weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
	    longDateFormat : {
	        LT : 'HH.mm',
	        LTS : 'HH.mm.ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY [pukul] HH.mm',
	        LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
	    },
	    meridiemParse: /pagi|tengahari|petang|malam/,
	    meridiemHour: function (hour, meridiem) {
	        if (hour === 12) {
	            hour = 0;
	        }
	        if (meridiem === 'pagi') {
	            return hour;
	        } else if (meridiem === 'tengahari') {
	            return hour >= 11 ? hour : hour + 12;
	        } else if (meridiem === 'petang' || meridiem === 'malam') {
	            return hour + 12;
	        }
	    },
	    meridiem : function (hours, minutes, isLower) {
	        if (hours < 11) {
	            return 'pagi';
	        } else if (hours < 15) {
	            return 'tengahari';
	        } else if (hours < 19) {
	            return 'petang';
	        } else {
	            return 'malam';
	        }
	    },
	    calendar : {
	        sameDay : '[Hari ini pukul] LT',
	        nextDay : '[Esok pukul] LT',
	        nextWeek : 'dddd [pukul] LT',
	        lastDay : '[Kelmarin pukul] LT',
	        lastWeek : 'dddd [lepas pukul] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'dalam %s',
	        past : '%s yang lepas',
	        s : 'beberapa saat',
	        m : 'seminit',
	        mm : '%d minit',
	        h : 'sejam',
	        hh : '%d jam',
	        d : 'sehari',
	        dd : '%d hari',
	        M : 'sebulan',
	        MM : '%d bulan',
	        y : 'setahun',
	        yy : '%d tahun'
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});

	return msMy;

	})));


/***/ },
/* 379 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Burmese [my]
	//! author : Squar team, mysquar.com
	//! author : David Rossellat : https://github.com/gholadr
	//! author : Tin Aung Lin : https://github.com/thanyawzinmin

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var symbolMap = {
	    '1': '၁',
	    '2': '၂',
	    '3': '၃',
	    '4': '၄',
	    '5': '၅',
	    '6': '၆',
	    '7': '၇',
	    '8': '၈',
	    '9': '၉',
	    '0': '၀'
	};
	var numberMap = {
	    '၁': '1',
	    '၂': '2',
	    '၃': '3',
	    '၄': '4',
	    '၅': '5',
	    '၆': '6',
	    '၇': '7',
	    '၈': '8',
	    '၉': '9',
	    '၀': '0'
	};

	var my = moment.defineLocale('my', {
	    months: 'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split('_'),
	    monthsShort: 'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split('_'),
	    weekdays: 'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split('_'),
	    weekdaysShort: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),
	    weekdaysMin: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),

	    longDateFormat: {
	        LT: 'HH:mm',
	        LTS: 'HH:mm:ss',
	        L: 'DD/MM/YYYY',
	        LL: 'D MMMM YYYY',
	        LLL: 'D MMMM YYYY HH:mm',
	        LLLL: 'dddd D MMMM YYYY HH:mm'
	    },
	    calendar: {
	        sameDay: '[ယနေ.] LT [မှာ]',
	        nextDay: '[မနက်ဖြန်] LT [မှာ]',
	        nextWeek: 'dddd LT [မှာ]',
	        lastDay: '[မနေ.က] LT [မှာ]',
	        lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]',
	        sameElse: 'L'
	    },
	    relativeTime: {
	        future: 'လာမည့် %s မှာ',
	        past: 'လွန်ခဲ့သော %s က',
	        s: 'စက္ကန်.အနည်းငယ်',
	        m: 'တစ်မိနစ်',
	        mm: '%d မိနစ်',
	        h: 'တစ်နာရီ',
	        hh: '%d နာရီ',
	        d: 'တစ်ရက်',
	        dd: '%d ရက်',
	        M: 'တစ်လ',
	        MM: '%d လ',
	        y: 'တစ်နှစ်',
	        yy: '%d နှစ်'
	    },
	    preparse: function (string) {
	        return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) {
	            return numberMap[match];
	        });
	    },
	    postformat: function (string) {
	        return string.replace(/\d/g, function (match) {
	            return symbolMap[match];
	        });
	    },
	    week: {
	        dow: 1, // Monday is the first day of the week.
	        doy: 4 // The week that contains Jan 1st is the first week of the year.
	    }
	});

	return my;

	})));


/***/ },
/* 380 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Norwegian Bokmål [nb]
	//! authors : Espen Hovlandsdal : https://github.com/rexxars
	//!           Sigurd Gartmann : https://github.com/sigurdga

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var nb = moment.defineLocale('nb', {
	    months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
	    monthsShort : 'jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),
	    monthsParseExact : true,
	    weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
	    weekdaysShort : 'sø._ma._ti._on._to._fr._lø.'.split('_'),
	    weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D. MMMM YYYY',
	        LLL : 'D. MMMM YYYY [kl.] HH:mm',
	        LLLL : 'dddd D. MMMM YYYY [kl.] HH:mm'
	    },
	    calendar : {
	        sameDay: '[i dag kl.] LT',
	        nextDay: '[i morgen kl.] LT',
	        nextWeek: 'dddd [kl.] LT',
	        lastDay: '[i går kl.] LT',
	        lastWeek: '[forrige] dddd [kl.] LT',
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'om %s',
	        past : '%s siden',
	        s : 'noen sekunder',
	        m : 'ett minutt',
	        mm : '%d minutter',
	        h : 'en time',
	        hh : '%d timer',
	        d : 'en dag',
	        dd : '%d dager',
	        M : 'en måned',
	        MM : '%d måneder',
	        y : 'ett år',
	        yy : '%d år'
	    },
	    ordinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return nb;

	})));


/***/ },
/* 381 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Nepalese [ne]
	//! author : suvash : https://github.com/suvash

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var symbolMap = {
	    '1': '१',
	    '2': '२',
	    '3': '३',
	    '4': '४',
	    '5': '५',
	    '6': '६',
	    '7': '७',
	    '8': '८',
	    '9': '९',
	    '0': '०'
	};
	var numberMap = {
	    '१': '1',
	    '२': '2',
	    '३': '3',
	    '४': '4',
	    '५': '5',
	    '६': '6',
	    '७': '7',
	    '८': '8',
	    '९': '9',
	    '०': '0'
	};

	var ne = moment.defineLocale('ne', {
	    months : 'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split('_'),
	    monthsShort : 'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split('_'),
	    monthsParseExact : true,
	    weekdays : 'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split('_'),
	    weekdaysShort : 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split('_'),
	    weekdaysMin : 'आ._सो._मं._बु._बि._शु._श.'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'Aको h:mm बजे',
	        LTS : 'Aको h:mm:ss बजे',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY, Aको h:mm बजे',
	        LLLL : 'dddd, D MMMM YYYY, Aको h:mm बजे'
	    },
	    preparse: function (string) {
	        return string.replace(/[१२३४५६७८९०]/g, function (match) {
	            return numberMap[match];
	        });
	    },
	    postformat: function (string) {
	        return string.replace(/\d/g, function (match) {
	            return symbolMap[match];
	        });
	    },
	    meridiemParse: /राति|बिहान|दिउँसो|साँझ/,
	    meridiemHour : function (hour, meridiem) {
	        if (hour === 12) {
	            hour = 0;
	        }
	        if (meridiem === 'राति') {
	            return hour < 4 ? hour : hour + 12;
	        } else if (meridiem === 'बिहान') {
	            return hour;
	        } else if (meridiem === 'दिउँसो') {
	            return hour >= 10 ? hour : hour + 12;
	        } else if (meridiem === 'साँझ') {
	            return hour + 12;
	        }
	    },
	    meridiem : function (hour, minute, isLower) {
	        if (hour < 3) {
	            return 'राति';
	        } else if (hour < 12) {
	            return 'बिहान';
	        } else if (hour < 16) {
	            return 'दिउँसो';
	        } else if (hour < 20) {
	            return 'साँझ';
	        } else {
	            return 'राति';
	        }
	    },
	    calendar : {
	        sameDay : '[आज] LT',
	        nextDay : '[भोलि] LT',
	        nextWeek : '[आउँदो] dddd[,] LT',
	        lastDay : '[हिजो] LT',
	        lastWeek : '[गएको] dddd[,] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : '%sमा',
	        past : '%s अगाडि',
	        s : 'केही क्षण',
	        m : 'एक मिनेट',
	        mm : '%d मिनेट',
	        h : 'एक घण्टा',
	        hh : '%d घण्टा',
	        d : 'एक दिन',
	        dd : '%d दिन',
	        M : 'एक महिना',
	        MM : '%d महिना',
	        y : 'एक बर्ष',
	        yy : '%d बर्ष'
	    },
	    week : {
	        dow : 0, // Sunday is the first day of the week.
	        doy : 6  // The week that contains Jan 1st is the first week of the year.
	    }
	});

	return ne;

	})));


/***/ },
/* 382 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Dutch [nl]
	//! author : Joris Röling : https://github.com/jorisroling
	//! author : Jacob Middag : https://github.com/middagj

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_');
	var monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');

	var monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];
	var monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;

	var nl = moment.defineLocale('nl', {
	    months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),
	    monthsShort : function (m, format) {
	        if (/-MMM-/.test(format)) {
	            return monthsShortWithoutDots[m.month()];
	        } else {
	            return monthsShortWithDots[m.month()];
	        }
	    },

	    monthsRegex: monthsRegex,
	    monthsShortRegex: monthsRegex,
	    monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,
	    monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,

	    monthsParse : monthsParse,
	    longMonthsParse : monthsParse,
	    shortMonthsParse : monthsParse,

	    weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),
	    weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),
	    weekdaysMin : 'Zo_Ma_Di_Wo_Do_Vr_Za'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD-MM-YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay: '[vandaag om] LT',
	        nextDay: '[morgen om] LT',
	        nextWeek: 'dddd [om] LT',
	        lastDay: '[gisteren om] LT',
	        lastWeek: '[afgelopen] dddd [om] LT',
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'over %s',
	        past : '%s geleden',
	        s : 'een paar seconden',
	        m : 'één minuut',
	        mm : '%d minuten',
	        h : 'één uur',
	        hh : '%d uur',
	        d : 'één dag',
	        dd : '%d dagen',
	        M : 'één maand',
	        MM : '%d maanden',
	        y : 'één jaar',
	        yy : '%d jaar'
	    },
	    ordinalParse: /\d{1,2}(ste|de)/,
	    ordinal : function (number) {
	        return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return nl;

	})));


/***/ },
/* 383 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Dutch (Belgium) [nl-be]
	//! author : Joris Röling : https://github.com/jorisroling
	//! author : Jacob Middag : https://github.com/middagj

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_');
	var monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');

	var monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];
	var monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;

	var nlBe = moment.defineLocale('nl-be', {
	    months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),
	    monthsShort : function (m, format) {
	        if (/-MMM-/.test(format)) {
	            return monthsShortWithoutDots[m.month()];
	        } else {
	            return monthsShortWithDots[m.month()];
	        }
	    },

	    monthsRegex: monthsRegex,
	    monthsShortRegex: monthsRegex,
	    monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,
	    monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,

	    monthsParse : monthsParse,
	    longMonthsParse : monthsParse,
	    shortMonthsParse : monthsParse,

	    weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),
	    weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),
	    weekdaysMin : 'Zo_Ma_Di_Wo_Do_Vr_Za'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay: '[vandaag om] LT',
	        nextDay: '[morgen om] LT',
	        nextWeek: 'dddd [om] LT',
	        lastDay: '[gisteren om] LT',
	        lastWeek: '[afgelopen] dddd [om] LT',
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'over %s',
	        past : '%s geleden',
	        s : 'een paar seconden',
	        m : 'één minuut',
	        mm : '%d minuten',
	        h : 'één uur',
	        hh : '%d uur',
	        d : 'één dag',
	        dd : '%d dagen',
	        M : 'één maand',
	        MM : '%d maanden',
	        y : 'één jaar',
	        yy : '%d jaar'
	    },
	    ordinalParse: /\d{1,2}(ste|de)/,
	    ordinal : function (number) {
	        return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return nlBe;

	})));


/***/ },
/* 384 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Nynorsk [nn]
	//! author : https://github.com/mechuwind

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var nn = moment.defineLocale('nn', {
	    months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
	    monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
	    weekdays : 'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split('_'),
	    weekdaysShort : 'sun_mån_tys_ons_tor_fre_lau'.split('_'),
	    weekdaysMin : 'su_må_ty_on_to_fr_lø'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D. MMMM YYYY',
	        LLL : 'D. MMMM YYYY [kl.] H:mm',
	        LLLL : 'dddd D. MMMM YYYY [kl.] HH:mm'
	    },
	    calendar : {
	        sameDay: '[I dag klokka] LT',
	        nextDay: '[I morgon klokka] LT',
	        nextWeek: 'dddd [klokka] LT',
	        lastDay: '[I går klokka] LT',
	        lastWeek: '[Føregåande] dddd [klokka] LT',
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'om %s',
	        past : '%s sidan',
	        s : 'nokre sekund',
	        m : 'eit minutt',
	        mm : '%d minutt',
	        h : 'ein time',
	        hh : '%d timar',
	        d : 'ein dag',
	        dd : '%d dagar',
	        M : 'ein månad',
	        MM : '%d månader',
	        y : 'eit år',
	        yy : '%d år'
	    },
	    ordinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return nn;

	})));


/***/ },
/* 385 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Punjabi (India) [pa-in]
	//! author : Harpreet Singh : https://github.com/harpreetkhalsagtbit

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var symbolMap = {
	    '1': '੧',
	    '2': '੨',
	    '3': '੩',
	    '4': '੪',
	    '5': '੫',
	    '6': '੬',
	    '7': '੭',
	    '8': '੮',
	    '9': '੯',
	    '0': '੦'
	};
	var numberMap = {
	    '੧': '1',
	    '੨': '2',
	    '੩': '3',
	    '੪': '4',
	    '੫': '5',
	    '੬': '6',
	    '੭': '7',
	    '੮': '8',
	    '੯': '9',
	    '੦': '0'
	};

	var paIn = moment.defineLocale('pa-in', {
	    // There are months name as per Nanakshahi Calender but they are not used as rigidly in modern Punjabi.
	    months : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),
	    monthsShort : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),
	    weekdays : 'ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ'.split('_'),
	    weekdaysShort : 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
	    weekdaysMin : 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
	    longDateFormat : {
	        LT : 'A h:mm ਵਜੇ',
	        LTS : 'A h:mm:ss ਵਜੇ',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY, A h:mm ਵਜੇ',
	        LLLL : 'dddd, D MMMM YYYY, A h:mm ਵਜੇ'
	    },
	    calendar : {
	        sameDay : '[ਅਜ] LT',
	        nextDay : '[ਕਲ] LT',
	        nextWeek : 'dddd, LT',
	        lastDay : '[ਕਲ] LT',
	        lastWeek : '[ਪਿਛਲੇ] dddd, LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : '%s ਵਿੱਚ',
	        past : '%s ਪਿਛਲੇ',
	        s : 'ਕੁਝ ਸਕਿੰਟ',
	        m : 'ਇਕ ਮਿੰਟ',
	        mm : '%d ਮਿੰਟ',
	        h : 'ਇੱਕ ਘੰਟਾ',
	        hh : '%d ਘੰਟੇ',
	        d : 'ਇੱਕ ਦਿਨ',
	        dd : '%d ਦਿਨ',
	        M : 'ਇੱਕ ਮਹੀਨਾ',
	        MM : '%d ਮਹੀਨੇ',
	        y : 'ਇੱਕ ਸਾਲ',
	        yy : '%d ਸਾਲ'
	    },
	    preparse: function (string) {
	        return string.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, function (match) {
	            return numberMap[match];
	        });
	    },
	    postformat: function (string) {
	        return string.replace(/\d/g, function (match) {
	            return symbolMap[match];
	        });
	    },
	    // Punjabi notation for meridiems are quite fuzzy in practice. While there exists
	    // a rigid notion of a 'Pahar' it is not used as rigidly in modern Punjabi.
	    meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,
	    meridiemHour : function (hour, meridiem) {
	        if (hour === 12) {
	            hour = 0;
	        }
	        if (meridiem === 'ਰਾਤ') {
	            return hour < 4 ? hour : hour + 12;
	        } else if (meridiem === 'ਸਵੇਰ') {
	            return hour;
	        } else if (meridiem === 'ਦੁਪਹਿਰ') {
	            return hour >= 10 ? hour : hour + 12;
	        } else if (meridiem === 'ਸ਼ਾਮ') {
	            return hour + 12;
	        }
	    },
	    meridiem : function (hour, minute, isLower) {
	        if (hour < 4) {
	            return 'ਰਾਤ';
	        } else if (hour < 10) {
	            return 'ਸਵੇਰ';
	        } else if (hour < 17) {
	            return 'ਦੁਪਹਿਰ';
	        } else if (hour < 20) {
	            return 'ਸ਼ਾਮ';
	        } else {
	            return 'ਰਾਤ';
	        }
	    },
	    week : {
	        dow : 0, // Sunday is the first day of the week.
	        doy : 6  // The week that contains Jan 1st is the first week of the year.
	    }
	});

	return paIn;

	})));


/***/ },
/* 386 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Polish [pl]
	//! author : Rafal Hirsz : https://github.com/evoL

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_');
	var monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');
	function plural(n) {
	    return (n % 10 < 5) && (n % 10 > 1) && ((~~(n / 10) % 10) !== 1);
	}
	function translate(number, withoutSuffix, key) {
	    var result = number + ' ';
	    switch (key) {
	        case 'm':
	            return withoutSuffix ? 'minuta' : 'minutę';
	        case 'mm':
	            return result + (plural(number) ? 'minuty' : 'minut');
	        case 'h':
	            return withoutSuffix  ? 'godzina'  : 'godzinę';
	        case 'hh':
	            return result + (plural(number) ? 'godziny' : 'godzin');
	        case 'MM':
	            return result + (plural(number) ? 'miesiące' : 'miesięcy');
	        case 'yy':
	            return result + (plural(number) ? 'lata' : 'lat');
	    }
	}

	var pl = moment.defineLocale('pl', {
	    months : function (momentToFormat, format) {
	        if (format === '') {
	            // Hack: if format empty we know this is used to generate
	            // RegExp by moment. Give then back both valid forms of months
	            // in RegExp ready format.
	            return '(' + monthsSubjective[momentToFormat.month()] + '|' + monthsNominative[momentToFormat.month()] + ')';
	        } else if (/D MMMM/.test(format)) {
	            return monthsSubjective[momentToFormat.month()];
	        } else {
	            return monthsNominative[momentToFormat.month()];
	        }
	    },
	    monthsShort : 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),
	    weekdays : 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),
	    weekdaysShort : 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),
	    weekdaysMin : 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd, D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay: '[Dziś o] LT',
	        nextDay: '[Jutro o] LT',
	        nextWeek: '[W] dddd [o] LT',
	        lastDay: '[Wczoraj o] LT',
	        lastWeek: function () {
	            switch (this.day()) {
	                case 0:
	                    return '[W zeszłą niedzielę o] LT';
	                case 3:
	                    return '[W zeszłą środę o] LT';
	                case 6:
	                    return '[W zeszłą sobotę o] LT';
	                default:
	                    return '[W zeszły] dddd [o] LT';
	            }
	        },
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'za %s',
	        past : '%s temu',
	        s : 'kilka sekund',
	        m : translate,
	        mm : translate,
	        h : translate,
	        hh : translate,
	        d : '1 dzień',
	        dd : '%d dni',
	        M : 'miesiąc',
	        MM : translate,
	        y : 'rok',
	        yy : translate
	    },
	    ordinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return pl;

	})));


/***/ },
/* 387 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Portuguese [pt]
	//! author : Jefferson : https://github.com/jalex79

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var pt = moment.defineLocale('pt', {
	    months : 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),
	    monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),
	    weekdays : 'Domingo_Segunda-Feira_Terça-Feira_Quarta-Feira_Quinta-Feira_Sexta-Feira_Sábado'.split('_'),
	    weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
	    weekdaysMin : 'Dom_2ª_3ª_4ª_5ª_6ª_Sáb'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D [de] MMMM [de] YYYY',
	        LLL : 'D [de] MMMM [de] YYYY HH:mm',
	        LLLL : 'dddd, D [de] MMMM [de] YYYY HH:mm'
	    },
	    calendar : {
	        sameDay: '[Hoje às] LT',
	        nextDay: '[Amanhã às] LT',
	        nextWeek: 'dddd [às] LT',
	        lastDay: '[Ontem às] LT',
	        lastWeek: function () {
	            return (this.day() === 0 || this.day() === 6) ?
	                '[Último] dddd [às] LT' : // Saturday + Sunday
	                '[Última] dddd [às] LT'; // Monday - Friday
	        },
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'em %s',
	        past : 'há %s',
	        s : 'segundos',
	        m : 'um minuto',
	        mm : '%d minutos',
	        h : 'uma hora',
	        hh : '%d horas',
	        d : 'um dia',
	        dd : '%d dias',
	        M : 'um mês',
	        MM : '%d meses',
	        y : 'um ano',
	        yy : '%d anos'
	    },
	    ordinalParse: /\d{1,2}º/,
	    ordinal : '%dº',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return pt;

	})));


/***/ },
/* 388 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Portuguese (Brazil) [pt-br]
	//! author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var ptBr = moment.defineLocale('pt-br', {
	    months : 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),
	    monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),
	    weekdays : 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),
	    weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
	    weekdaysMin : 'Dom_2ª_3ª_4ª_5ª_6ª_Sáb'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D [de] MMMM [de] YYYY',
	        LLL : 'D [de] MMMM [de] YYYY [às] HH:mm',
	        LLLL : 'dddd, D [de] MMMM [de] YYYY [às] HH:mm'
	    },
	    calendar : {
	        sameDay: '[Hoje às] LT',
	        nextDay: '[Amanhã às] LT',
	        nextWeek: 'dddd [às] LT',
	        lastDay: '[Ontem às] LT',
	        lastWeek: function () {
	            return (this.day() === 0 || this.day() === 6) ?
	                '[Último] dddd [às] LT' : // Saturday + Sunday
	                '[Última] dddd [às] LT'; // Monday - Friday
	        },
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'em %s',
	        past : '%s atrás',
	        s : 'poucos segundos',
	        m : 'um minuto',
	        mm : '%d minutos',
	        h : 'uma hora',
	        hh : '%d horas',
	        d : 'um dia',
	        dd : '%d dias',
	        M : 'um mês',
	        MM : '%d meses',
	        y : 'um ano',
	        yy : '%d anos'
	    },
	    ordinalParse: /\d{1,2}º/,
	    ordinal : '%dº'
	});

	return ptBr;

	})));


/***/ },
/* 389 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Romanian [ro]
	//! author : Vlad Gurdiga : https://github.com/gurdiga
	//! author : Valentin Agachi : https://github.com/avaly

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	function relativeTimeWithPlural(number, withoutSuffix, key) {
	    var format = {
	            'mm': 'minute',
	            'hh': 'ore',
	            'dd': 'zile',
	            'MM': 'luni',
	            'yy': 'ani'
	        },
	        separator = ' ';
	    if (number % 100 >= 20 || (number >= 100 && number % 100 === 0)) {
	        separator = ' de ';
	    }
	    return number + separator + format[key];
	}

	var ro = moment.defineLocale('ro', {
	    months : 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),
	    monthsShort : 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),
	    monthsParseExact: true,
	    weekdays : 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),
	    weekdaysShort : 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),
	    weekdaysMin : 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),
	    longDateFormat : {
	        LT : 'H:mm',
	        LTS : 'H:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY H:mm',
	        LLLL : 'dddd, D MMMM YYYY H:mm'
	    },
	    calendar : {
	        sameDay: '[azi la] LT',
	        nextDay: '[mâine la] LT',
	        nextWeek: 'dddd [la] LT',
	        lastDay: '[ieri la] LT',
	        lastWeek: '[fosta] dddd [la] LT',
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'peste %s',
	        past : '%s în urmă',
	        s : 'câteva secunde',
	        m : 'un minut',
	        mm : relativeTimeWithPlural,
	        h : 'o oră',
	        hh : relativeTimeWithPlural,
	        d : 'o zi',
	        dd : relativeTimeWithPlural,
	        M : 'o lună',
	        MM : relativeTimeWithPlural,
	        y : 'un an',
	        yy : relativeTimeWithPlural
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});

	return ro;

	})));


/***/ },
/* 390 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Russian [ru]
	//! author : Viktorminator : https://github.com/Viktorminator
	//! Author : Menelion Elensúle : https://github.com/Oire
	//! author : Коренберг Марк : https://github.com/socketpair

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	function plural(word, num) {
	    var forms = word.split('_');
	    return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
	}
	function relativeTimeWithPlural(number, withoutSuffix, key) {
	    var format = {
	        'mm': withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',
	        'hh': 'час_часа_часов',
	        'dd': 'день_дня_дней',
	        'MM': 'месяц_месяца_месяцев',
	        'yy': 'год_года_лет'
	    };
	    if (key === 'm') {
	        return withoutSuffix ? 'минута' : 'минуту';
	    }
	    else {
	        return number + ' ' + plural(format[key], +number);
	    }
	}
	var monthsParse = [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i];

	// http://new.gramota.ru/spravka/rules/139-prop : § 103
	// Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637
	// CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753
	var ru = moment.defineLocale('ru', {
	    months : {
	        format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_'),
	        standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_')
	    },
	    monthsShort : {
	        // по CLDR именно "июл." и "июн.", но какой смысл менять букву на точку ?
	        format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),
	        standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split('_')
	    },
	    weekdays : {
	        standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),
	        format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_'),
	        isFormat: /\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\] ?dddd/
	    },
	    weekdaysShort : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
	    weekdaysMin : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
	    monthsParse : monthsParse,
	    longMonthsParse : monthsParse,
	    shortMonthsParse : monthsParse,

	    // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки
	    monthsRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,

	    // копия предыдущего
	    monthsShortRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,

	    // полные названия с падежами
	    monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,

	    // Выражение, которое соотвествует только сокращённым формам
	    monthsShortStrictRegex: /^(янв\.|февр?\.|мар[т.]|апр\.|ма[яй]|июн[ья.]|июл[ья.]|авг\.|сент?\.|окт\.|нояб?\.|дек\.)/i,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D MMMM YYYY г.',
	        LLL : 'D MMMM YYYY г., HH:mm',
	        LLLL : 'dddd, D MMMM YYYY г., HH:mm'
	    },
	    calendar : {
	        sameDay: '[Сегодня в] LT',
	        nextDay: '[Завтра в] LT',
	        lastDay: '[Вчера в] LT',
	        nextWeek: function (now) {
	            if (now.week() !== this.week()) {
	                switch (this.day()) {
	                    case 0:
	                        return '[В следующее] dddd [в] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                        return '[В следующий] dddd [в] LT';
	                    case 3:
	                    case 5:
	                    case 6:
	                        return '[В следующую] dddd [в] LT';
	                }
	            } else {
	                if (this.day() === 2) {
	                    return '[Во] dddd [в] LT';
	                } else {
	                    return '[В] dddd [в] LT';
	                }
	            }
	        },
	        lastWeek: function (now) {
	            if (now.week() !== this.week()) {
	                switch (this.day()) {
	                    case 0:
	                        return '[В прошлое] dddd [в] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                        return '[В прошлый] dddd [в] LT';
	                    case 3:
	                    case 5:
	                    case 6:
	                        return '[В прошлую] dddd [в] LT';
	                }
	            } else {
	                if (this.day() === 2) {
	                    return '[Во] dddd [в] LT';
	                } else {
	                    return '[В] dddd [в] LT';
	                }
	            }
	        },
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'через %s',
	        past : '%s назад',
	        s : 'несколько секунд',
	        m : relativeTimeWithPlural,
	        mm : relativeTimeWithPlural,
	        h : 'час',
	        hh : relativeTimeWithPlural,
	        d : 'день',
	        dd : relativeTimeWithPlural,
	        M : 'месяц',
	        MM : relativeTimeWithPlural,
	        y : 'год',
	        yy : relativeTimeWithPlural
	    },
	    meridiemParse: /ночи|утра|дня|вечера/i,
	    isPM : function (input) {
	        return /^(дня|вечера)$/.test(input);
	    },
	    meridiem : function (hour, minute, isLower) {
	        if (hour < 4) {
	            return 'ночи';
	        } else if (hour < 12) {
	            return 'утра';
	        } else if (hour < 17) {
	            return 'дня';
	        } else {
	            return 'вечера';
	        }
	    },
	    ordinalParse: /\d{1,2}-(й|го|я)/,
	    ordinal: function (number, period) {
	        switch (period) {
	            case 'M':
	            case 'd':
	            case 'DDD':
	                return number + '-й';
	            case 'D':
	                return number + '-го';
	            case 'w':
	            case 'W':
	                return number + '-я';
	            default:
	                return number;
	        }
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});

	return ru;

	})));


/***/ },
/* 391 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Northern Sami [se]
	//! authors : Bård Rolstad Henriksen : https://github.com/karamell

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';



	var se = moment.defineLocale('se', {
	    months : 'ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu'.split('_'),
	    monthsShort : 'ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov'.split('_'),
	    weekdays : 'sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat'.split('_'),
	    weekdaysShort : 'sotn_vuos_maŋ_gask_duor_bear_láv'.split('_'),
	    weekdaysMin : 's_v_m_g_d_b_L'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'MMMM D. [b.] YYYY',
	        LLL : 'MMMM D. [b.] YYYY [ti.] HH:mm',
	        LLLL : 'dddd, MMMM D. [b.] YYYY [ti.] HH:mm'
	    },
	    calendar : {
	        sameDay: '[otne ti] LT',
	        nextDay: '[ihttin ti] LT',
	        nextWeek: 'dddd [ti] LT',
	        lastDay: '[ikte ti] LT',
	        lastWeek: '[ovddit] dddd [ti] LT',
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : '%s geažes',
	        past : 'maŋit %s',
	        s : 'moadde sekunddat',
	        m : 'okta minuhta',
	        mm : '%d minuhtat',
	        h : 'okta diimmu',
	        hh : '%d diimmut',
	        d : 'okta beaivi',
	        dd : '%d beaivvit',
	        M : 'okta mánnu',
	        MM : '%d mánut',
	        y : 'okta jahki',
	        yy : '%d jagit'
	    },
	    ordinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return se;

	})));


/***/ },
/* 392 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Sinhalese [si]
	//! author : Sampath Sitinamaluwa : https://github.com/sampathsris

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	/*jshint -W100*/
	var si = moment.defineLocale('si', {
	    months : 'ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්'.split('_'),
	    monthsShort : 'ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ'.split('_'),
	    weekdays : 'ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා'.split('_'),
	    weekdaysShort : 'ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන'.split('_'),
	    weekdaysMin : 'ඉ_ස_අ_බ_බ්‍ර_සි_සෙ'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'a h:mm',
	        LTS : 'a h:mm:ss',
	        L : 'YYYY/MM/DD',
	        LL : 'YYYY MMMM D',
	        LLL : 'YYYY MMMM D, a h:mm',
	        LLLL : 'YYYY MMMM D [වැනි] dddd, a h:mm:ss'
	    },
	    calendar : {
	        sameDay : '[අද] LT[ට]',
	        nextDay : '[හෙට] LT[ට]',
	        nextWeek : 'dddd LT[ට]',
	        lastDay : '[ඊයේ] LT[ට]',
	        lastWeek : '[පසුගිය] dddd LT[ට]',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : '%sකින්',
	        past : '%sකට පෙර',
	        s : 'තත්පර කිහිපය',
	        m : 'මිනිත්තුව',
	        mm : 'මිනිත්තු %d',
	        h : 'පැය',
	        hh : 'පැය %d',
	        d : 'දිනය',
	        dd : 'දින %d',
	        M : 'මාසය',
	        MM : 'මාස %d',
	        y : 'වසර',
	        yy : 'වසර %d'
	    },
	    ordinalParse: /\d{1,2} වැනි/,
	    ordinal : function (number) {
	        return number + ' වැනි';
	    },
	    meridiemParse : /පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,
	    isPM : function (input) {
	        return input === 'ප.ව.' || input === 'පස් වරු';
	    },
	    meridiem : function (hours, minutes, isLower) {
	        if (hours > 11) {
	            return isLower ? 'ප.ව.' : 'පස් වරු';
	        } else {
	            return isLower ? 'පෙ.ව.' : 'පෙර වරු';
	        }
	    }
	});

	return si;

	})));


/***/ },
/* 393 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Slovak [sk]
	//! author : Martin Minka : https://github.com/k2s
	//! based on work of petrbela : https://github.com/petrbela

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var months = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_');
	var monthsShort = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');
	function plural(n) {
	    return (n > 1) && (n < 5);
	}
	function translate(number, withoutSuffix, key, isFuture) {
	    var result = number + ' ';
	    switch (key) {
	        case 's':  // a few seconds / in a few seconds / a few seconds ago
	            return (withoutSuffix || isFuture) ? 'pár sekúnd' : 'pár sekundami';
	        case 'm':  // a minute / in a minute / a minute ago
	            return withoutSuffix ? 'minúta' : (isFuture ? 'minútu' : 'minútou');
	        case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'minúty' : 'minút');
	            } else {
	                return result + 'minútami';
	            }
	            break;
	        case 'h':  // an hour / in an hour / an hour ago
	            return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');
	        case 'hh': // 9 hours / in 9 hours / 9 hours ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'hodiny' : 'hodín');
	            } else {
	                return result + 'hodinami';
	            }
	            break;
	        case 'd':  // a day / in a day / a day ago
	            return (withoutSuffix || isFuture) ? 'deň' : 'dňom';
	        case 'dd': // 9 days / in 9 days / 9 days ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'dni' : 'dní');
	            } else {
	                return result + 'dňami';
	            }
	            break;
	        case 'M':  // a month / in a month / a month ago
	            return (withoutSuffix || isFuture) ? 'mesiac' : 'mesiacom';
	        case 'MM': // 9 months / in 9 months / 9 months ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'mesiace' : 'mesiacov');
	            } else {
	                return result + 'mesiacmi';
	            }
	            break;
	        case 'y':  // a year / in a year / a year ago
	            return (withoutSuffix || isFuture) ? 'rok' : 'rokom';
	        case 'yy': // 9 years / in 9 years / 9 years ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'roky' : 'rokov');
	            } else {
	                return result + 'rokmi';
	            }
	            break;
	    }
	}

	var sk = moment.defineLocale('sk', {
	    months : months,
	    monthsShort : monthsShort,
	    weekdays : 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),
	    weekdaysShort : 'ne_po_ut_st_št_pi_so'.split('_'),
	    weekdaysMin : 'ne_po_ut_st_št_pi_so'.split('_'),
	    longDateFormat : {
	        LT: 'H:mm',
	        LTS : 'H:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D. MMMM YYYY',
	        LLL : 'D. MMMM YYYY H:mm',
	        LLLL : 'dddd D. MMMM YYYY H:mm'
	    },
	    calendar : {
	        sameDay: '[dnes o] LT',
	        nextDay: '[zajtra o] LT',
	        nextWeek: function () {
	            switch (this.day()) {
	                case 0:
	                    return '[v nedeľu o] LT';
	                case 1:
	                case 2:
	                    return '[v] dddd [o] LT';
	                case 3:
	                    return '[v stredu o] LT';
	                case 4:
	                    return '[vo štvrtok o] LT';
	                case 5:
	                    return '[v piatok o] LT';
	                case 6:
	                    return '[v sobotu o] LT';
	            }
	        },
	        lastDay: '[včera o] LT',
	        lastWeek: function () {
	            switch (this.day()) {
	                case 0:
	                    return '[minulú nedeľu o] LT';
	                case 1:
	                case 2:
	                    return '[minulý] dddd [o] LT';
	                case 3:
	                    return '[minulú stredu o] LT';
	                case 4:
	                case 5:
	                    return '[minulý] dddd [o] LT';
	                case 6:
	                    return '[minulú sobotu o] LT';
	            }
	        },
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'za %s',
	        past : 'pred %s',
	        s : translate,
	        m : translate,
	        mm : translate,
	        h : translate,
	        hh : translate,
	        d : translate,
	        dd : translate,
	        M : translate,
	        MM : translate,
	        y : translate,
	        yy : translate
	    },
	    ordinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return sk;

	})));


/***/ },
/* 394 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Slovenian [sl]
	//! author : Robert Sedovšek : https://github.com/sedovsek

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	function processRelativeTime(number, withoutSuffix, key, isFuture) {
	    var result = number + ' ';
	    switch (key) {
	        case 's':
	            return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';
	        case 'm':
	            return withoutSuffix ? 'ena minuta' : 'eno minuto';
	        case 'mm':
	            if (number === 1) {
	                result += withoutSuffix ? 'minuta' : 'minuto';
	            } else if (number === 2) {
	                result += withoutSuffix || isFuture ? 'minuti' : 'minutama';
	            } else if (number < 5) {
	                result += withoutSuffix || isFuture ? 'minute' : 'minutami';
	            } else {
	                result += withoutSuffix || isFuture ? 'minut' : 'minutami';
	            }
	            return result;
	        case 'h':
	            return withoutSuffix ? 'ena ura' : 'eno uro';
	        case 'hh':
	            if (number === 1) {
	                result += withoutSuffix ? 'ura' : 'uro';
	            } else if (number === 2) {
	                result += withoutSuffix || isFuture ? 'uri' : 'urama';
	            } else if (number < 5) {
	                result += withoutSuffix || isFuture ? 'ure' : 'urami';
	            } else {
	                result += withoutSuffix || isFuture ? 'ur' : 'urami';
	            }
	            return result;
	        case 'd':
	            return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';
	        case 'dd':
	            if (number === 1) {
	                result += withoutSuffix || isFuture ? 'dan' : 'dnem';
	            } else if (number === 2) {
	                result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';
	            } else {
	                result += withoutSuffix || isFuture ? 'dni' : 'dnevi';
	            }
	            return result;
	        case 'M':
	            return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';
	        case 'MM':
	            if (number === 1) {
	                result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';
	            } else if (number === 2) {
	                result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';
	            } else if (number < 5) {
	                result += withoutSuffix || isFuture ? 'mesece' : 'meseci';
	            } else {
	                result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';
	            }
	            return result;
	        case 'y':
	            return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';
	        case 'yy':
	            if (number === 1) {
	                result += withoutSuffix || isFuture ? 'leto' : 'letom';
	            } else if (number === 2) {
	                result += withoutSuffix || isFuture ? 'leti' : 'letoma';
	            } else if (number < 5) {
	                result += withoutSuffix || isFuture ? 'leta' : 'leti';
	            } else {
	                result += withoutSuffix || isFuture ? 'let' : 'leti';
	            }
	            return result;
	    }
	}

	var sl = moment.defineLocale('sl', {
	    months : 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),
	    monthsShort : 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),
	    monthsParseExact: true,
	    weekdays : 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),
	    weekdaysShort : 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),
	    weekdaysMin : 'ne_po_to_sr_če_pe_so'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'H:mm',
	        LTS : 'H:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D. MMMM YYYY',
	        LLL : 'D. MMMM YYYY H:mm',
	        LLLL : 'dddd, D. MMMM YYYY H:mm'
	    },
	    calendar : {
	        sameDay  : '[danes ob] LT',
	        nextDay  : '[jutri ob] LT',

	        nextWeek : function () {
	            switch (this.day()) {
	                case 0:
	                    return '[v] [nedeljo] [ob] LT';
	                case 3:
	                    return '[v] [sredo] [ob] LT';
	                case 6:
	                    return '[v] [soboto] [ob] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[v] dddd [ob] LT';
	            }
	        },
	        lastDay  : '[včeraj ob] LT',
	        lastWeek : function () {
	            switch (this.day()) {
	                case 0:
	                    return '[prejšnjo] [nedeljo] [ob] LT';
	                case 3:
	                    return '[prejšnjo] [sredo] [ob] LT';
	                case 6:
	                    return '[prejšnjo] [soboto] [ob] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[prejšnji] dddd [ob] LT';
	            }
	        },
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'čez %s',
	        past   : 'pred %s',
	        s      : processRelativeTime,
	        m      : processRelativeTime,
	        mm     : processRelativeTime,
	        h      : processRelativeTime,
	        hh     : processRelativeTime,
	        d      : processRelativeTime,
	        dd     : processRelativeTime,
	        M      : processRelativeTime,
	        MM     : processRelativeTime,
	        y      : processRelativeTime,
	        yy     : processRelativeTime
	    },
	    ordinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});

	return sl;

	})));


/***/ },
/* 395 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Albanian [sq]
	//! author : Flakërim Ismani : https://github.com/flakerimi
	//! author : Menelion Elensúle : https://github.com/Oire
	//! author : Oerd Cukalla : https://github.com/oerd

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var sq = moment.defineLocale('sq', {
	    months : 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split('_'),
	    monthsShort : 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),
	    weekdays : 'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split('_'),
	    weekdaysShort : 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),
	    weekdaysMin : 'D_H_Ma_Më_E_P_Sh'.split('_'),
	    weekdaysParseExact : true,
	    meridiemParse: /PD|MD/,
	    isPM: function (input) {
	        return input.charAt(0) === 'M';
	    },
	    meridiem : function (hours, minutes, isLower) {
	        return hours < 12 ? 'PD' : 'MD';
	    },
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd, D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay : '[Sot në] LT',
	        nextDay : '[Nesër në] LT',
	        nextWeek : 'dddd [në] LT',
	        lastDay : '[Dje në] LT',
	        lastWeek : 'dddd [e kaluar në] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'në %s',
	        past : '%s më parë',
	        s : 'disa sekonda',
	        m : 'një minutë',
	        mm : '%d minuta',
	        h : 'një orë',
	        hh : '%d orë',
	        d : 'një ditë',
	        dd : '%d ditë',
	        M : 'një muaj',
	        MM : '%d muaj',
	        y : 'një vit',
	        yy : '%d vite'
	    },
	    ordinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return sq;

	})));


/***/ },
/* 396 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Serbian [sr]
	//! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var translator = {
	    words: { //Different grammatical cases
	        m: ['jedan minut', 'jedne minute'],
	        mm: ['minut', 'minute', 'minuta'],
	        h: ['jedan sat', 'jednog sata'],
	        hh: ['sat', 'sata', 'sati'],
	        dd: ['dan', 'dana', 'dana'],
	        MM: ['mesec', 'meseca', 'meseci'],
	        yy: ['godina', 'godine', 'godina']
	    },
	    correctGrammaticalCase: function (number, wordKey) {
	        return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
	    },
	    translate: function (number, withoutSuffix, key) {
	        var wordKey = translator.words[key];
	        if (key.length === 1) {
	            return withoutSuffix ? wordKey[0] : wordKey[1];
	        } else {
	            return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
	        }
	    }
	};

	var sr = moment.defineLocale('sr', {
	    months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),
	    monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),
	    monthsParseExact: true,
	    weekdays: 'nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota'.split('_'),
	    weekdaysShort: 'ned._pon._uto._sre._čet._pet._sub.'.split('_'),
	    weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat: {
	        LT: 'H:mm',
	        LTS : 'H:mm:ss',
	        L: 'DD.MM.YYYY',
	        LL: 'D. MMMM YYYY',
	        LLL: 'D. MMMM YYYY H:mm',
	        LLLL: 'dddd, D. MMMM YYYY H:mm'
	    },
	    calendar: {
	        sameDay: '[danas u] LT',
	        nextDay: '[sutra u] LT',
	        nextWeek: function () {
	            switch (this.day()) {
	                case 0:
	                    return '[u] [nedelju] [u] LT';
	                case 3:
	                    return '[u] [sredu] [u] LT';
	                case 6:
	                    return '[u] [subotu] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[u] dddd [u] LT';
	            }
	        },
	        lastDay  : '[juče u] LT',
	        lastWeek : function () {
	            var lastWeekDays = [
	                '[prošle] [nedelje] [u] LT',
	                '[prošlog] [ponedeljka] [u] LT',
	                '[prošlog] [utorka] [u] LT',
	                '[prošle] [srede] [u] LT',
	                '[prošlog] [četvrtka] [u] LT',
	                '[prošlog] [petka] [u] LT',
	                '[prošle] [subote] [u] LT'
	            ];
	            return lastWeekDays[this.day()];
	        },
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'za %s',
	        past   : 'pre %s',
	        s      : 'nekoliko sekundi',
	        m      : translator.translate,
	        mm     : translator.translate,
	        h      : translator.translate,
	        hh     : translator.translate,
	        d      : 'dan',
	        dd     : translator.translate,
	        M      : 'mesec',
	        MM     : translator.translate,
	        y      : 'godinu',
	        yy     : translator.translate
	    },
	    ordinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});

	return sr;

	})));


/***/ },
/* 397 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Serbian Cyrillic [sr-cyrl]
	//! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var translator = {
	    words: { //Different grammatical cases
	        m: ['један минут', 'једне минуте'],
	        mm: ['минут', 'минуте', 'минута'],
	        h: ['један сат', 'једног сата'],
	        hh: ['сат', 'сата', 'сати'],
	        dd: ['дан', 'дана', 'дана'],
	        MM: ['месец', 'месеца', 'месеци'],
	        yy: ['година', 'године', 'година']
	    },
	    correctGrammaticalCase: function (number, wordKey) {
	        return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
	    },
	    translate: function (number, withoutSuffix, key) {
	        var wordKey = translator.words[key];
	        if (key.length === 1) {
	            return withoutSuffix ? wordKey[0] : wordKey[1];
	        } else {
	            return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
	        }
	    }
	};

	var srCyrl = moment.defineLocale('sr-cyrl', {
	    months: 'јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар'.split('_'),
	    monthsShort: 'јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.'.split('_'),
	    monthsParseExact: true,
	    weekdays: 'недеља_понедељак_уторак_среда_четвртак_петак_субота'.split('_'),
	    weekdaysShort: 'нед._пон._уто._сре._чет._пет._суб.'.split('_'),
	    weekdaysMin: 'не_по_ут_ср_че_пе_су'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat: {
	        LT: 'H:mm',
	        LTS : 'H:mm:ss',
	        L: 'DD.MM.YYYY',
	        LL: 'D. MMMM YYYY',
	        LLL: 'D. MMMM YYYY H:mm',
	        LLLL: 'dddd, D. MMMM YYYY H:mm'
	    },
	    calendar: {
	        sameDay: '[данас у] LT',
	        nextDay: '[сутра у] LT',
	        nextWeek: function () {
	            switch (this.day()) {
	                case 0:
	                    return '[у] [недељу] [у] LT';
	                case 3:
	                    return '[у] [среду] [у] LT';
	                case 6:
	                    return '[у] [суботу] [у] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[у] dddd [у] LT';
	            }
	        },
	        lastDay  : '[јуче у] LT',
	        lastWeek : function () {
	            var lastWeekDays = [
	                '[прошле] [недеље] [у] LT',
	                '[прошлог] [понедељка] [у] LT',
	                '[прошлог] [уторка] [у] LT',
	                '[прошле] [среде] [у] LT',
	                '[прошлог] [четвртка] [у] LT',
	                '[прошлог] [петка] [у] LT',
	                '[прошле] [суботе] [у] LT'
	            ];
	            return lastWeekDays[this.day()];
	        },
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'за %s',
	        past   : 'пре %s',
	        s      : 'неколико секунди',
	        m      : translator.translate,
	        mm     : translator.translate,
	        h      : translator.translate,
	        hh     : translator.translate,
	        d      : 'дан',
	        dd     : translator.translate,
	        M      : 'месец',
	        MM     : translator.translate,
	        y      : 'годину',
	        yy     : translator.translate
	    },
	    ordinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});

	return srCyrl;

	})));


/***/ },
/* 398 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : siSwati [ss]
	//! author : Nicolai Davies<mail@nicolai.io> : https://github.com/nicolaidavies

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';



	var ss = moment.defineLocale('ss', {
	    months : "Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni".split('_'),
	    monthsShort : 'Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo'.split('_'),
	    weekdays : 'Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo'.split('_'),
	    weekdaysShort : 'Lis_Umb_Lsb_Les_Lsi_Lsh_Umg'.split('_'),
	    weekdaysMin : 'Li_Us_Lb_Lt_Ls_Lh_Ug'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'h:mm A',
	        LTS : 'h:mm:ss A',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY h:mm A',
	        LLLL : 'dddd, D MMMM YYYY h:mm A'
	    },
	    calendar : {
	        sameDay : '[Namuhla nga] LT',
	        nextDay : '[Kusasa nga] LT',
	        nextWeek : 'dddd [nga] LT',
	        lastDay : '[Itolo nga] LT',
	        lastWeek : 'dddd [leliphelile] [nga] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'nga %s',
	        past : 'wenteka nga %s',
	        s : 'emizuzwana lomcane',
	        m : 'umzuzu',
	        mm : '%d emizuzu',
	        h : 'lihora',
	        hh : '%d emahora',
	        d : 'lilanga',
	        dd : '%d emalanga',
	        M : 'inyanga',
	        MM : '%d tinyanga',
	        y : 'umnyaka',
	        yy : '%d iminyaka'
	    },
	    meridiemParse: /ekuseni|emini|entsambama|ebusuku/,
	    meridiem : function (hours, minutes, isLower) {
	        if (hours < 11) {
	            return 'ekuseni';
	        } else if (hours < 15) {
	            return 'emini';
	        } else if (hours < 19) {
	            return 'entsambama';
	        } else {
	            return 'ebusuku';
	        }
	    },
	    meridiemHour : function (hour, meridiem) {
	        if (hour === 12) {
	            hour = 0;
	        }
	        if (meridiem === 'ekuseni') {
	            return hour;
	        } else if (meridiem === 'emini') {
	            return hour >= 11 ? hour : hour + 12;
	        } else if (meridiem === 'entsambama' || meridiem === 'ebusuku') {
	            if (hour === 0) {
	                return 0;
	            }
	            return hour + 12;
	        }
	    },
	    ordinalParse: /\d{1,2}/,
	    ordinal : '%d',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return ss;

	})));


/***/ },
/* 399 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Swedish [sv]
	//! author : Jens Alm : https://github.com/ulmus

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var sv = moment.defineLocale('sv', {
	    months : 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),
	    monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
	    weekdays : 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),
	    weekdaysShort : 'sön_mån_tis_ons_tor_fre_lör'.split('_'),
	    weekdaysMin : 'sö_må_ti_on_to_fr_lö'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'YYYY-MM-DD',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY [kl.] HH:mm',
	        LLLL : 'dddd D MMMM YYYY [kl.] HH:mm',
	        lll : 'D MMM YYYY HH:mm',
	        llll : 'ddd D MMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay: '[Idag] LT',
	        nextDay: '[Imorgon] LT',
	        lastDay: '[Igår] LT',
	        nextWeek: '[På] dddd LT',
	        lastWeek: '[I] dddd[s] LT',
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'om %s',
	        past : 'för %s sedan',
	        s : 'några sekunder',
	        m : 'en minut',
	        mm : '%d minuter',
	        h : 'en timme',
	        hh : '%d timmar',
	        d : 'en dag',
	        dd : '%d dagar',
	        M : 'en månad',
	        MM : '%d månader',
	        y : 'ett år',
	        yy : '%d år'
	    },
	    ordinalParse: /\d{1,2}(e|a)/,
	    ordinal : function (number) {
	        var b = number % 10,
	            output = (~~(number % 100 / 10) === 1) ? 'e' :
	            (b === 1) ? 'a' :
	            (b === 2) ? 'a' :
	            (b === 3) ? 'e' : 'e';
	        return number + output;
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return sv;

	})));


/***/ },
/* 400 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Swahili [sw]
	//! author : Fahad Kassim : https://github.com/fadsel

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var sw = moment.defineLocale('sw', {
	    months : 'Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba'.split('_'),
	    monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des'.split('_'),
	    weekdays : 'Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi'.split('_'),
	    weekdaysShort : 'Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos'.split('_'),
	    weekdaysMin : 'J2_J3_J4_J5_Al_Ij_J1'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd, D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay : '[leo saa] LT',
	        nextDay : '[kesho saa] LT',
	        nextWeek : '[wiki ijayo] dddd [saat] LT',
	        lastDay : '[jana] LT',
	        lastWeek : '[wiki iliyopita] dddd [saat] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : '%s baadaye',
	        past : 'tokea %s',
	        s : 'hivi punde',
	        m : 'dakika moja',
	        mm : 'dakika %d',
	        h : 'saa limoja',
	        hh : 'masaa %d',
	        d : 'siku moja',
	        dd : 'masiku %d',
	        M : 'mwezi mmoja',
	        MM : 'miezi %d',
	        y : 'mwaka mmoja',
	        yy : 'miaka %d'
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});

	return sw;

	})));


/***/ },
/* 401 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Tamil [ta]
	//! author : Arjunkumar Krishnamoorthy : https://github.com/tk120404

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var symbolMap = {
	    '1': '௧',
	    '2': '௨',
	    '3': '௩',
	    '4': '௪',
	    '5': '௫',
	    '6': '௬',
	    '7': '௭',
	    '8': '௮',
	    '9': '௯',
	    '0': '௦'
	};
	var numberMap = {
	    '௧': '1',
	    '௨': '2',
	    '௩': '3',
	    '௪': '4',
	    '௫': '5',
	    '௬': '6',
	    '௭': '7',
	    '௮': '8',
	    '௯': '9',
	    '௦': '0'
	};

	var ta = moment.defineLocale('ta', {
	    months : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
	    monthsShort : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
	    weekdays : 'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split('_'),
	    weekdaysShort : 'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split('_'),
	    weekdaysMin : 'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY, HH:mm',
	        LLLL : 'dddd, D MMMM YYYY, HH:mm'
	    },
	    calendar : {
	        sameDay : '[இன்று] LT',
	        nextDay : '[நாளை] LT',
	        nextWeek : 'dddd, LT',
	        lastDay : '[நேற்று] LT',
	        lastWeek : '[கடந்த வாரம்] dddd, LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : '%s இல்',
	        past : '%s முன்',
	        s : 'ஒரு சில விநாடிகள்',
	        m : 'ஒரு நிமிடம்',
	        mm : '%d நிமிடங்கள்',
	        h : 'ஒரு மணி நேரம்',
	        hh : '%d மணி நேரம்',
	        d : 'ஒரு நாள்',
	        dd : '%d நாட்கள்',
	        M : 'ஒரு மாதம்',
	        MM : '%d மாதங்கள்',
	        y : 'ஒரு வருடம்',
	        yy : '%d ஆண்டுகள்'
	    },
	    ordinalParse: /\d{1,2}வது/,
	    ordinal : function (number) {
	        return number + 'வது';
	    },
	    preparse: function (string) {
	        return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (match) {
	            return numberMap[match];
	        });
	    },
	    postformat: function (string) {
	        return string.replace(/\d/g, function (match) {
	            return symbolMap[match];
	        });
	    },
	    // refer http://ta.wikipedia.org/s/1er1
	    meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,
	    meridiem : function (hour, minute, isLower) {
	        if (hour < 2) {
	            return ' யாமம்';
	        } else if (hour < 6) {
	            return ' வைகறை';  // வைகறை
	        } else if (hour < 10) {
	            return ' காலை'; // காலை
	        } else if (hour < 14) {
	            return ' நண்பகல்'; // நண்பகல்
	        } else if (hour < 18) {
	            return ' எற்பாடு'; // எற்பாடு
	        } else if (hour < 22) {
	            return ' மாலை'; // மாலை
	        } else {
	            return ' யாமம்';
	        }
	    },
	    meridiemHour : function (hour, meridiem) {
	        if (hour === 12) {
	            hour = 0;
	        }
	        if (meridiem === 'யாமம்') {
	            return hour < 2 ? hour : hour + 12;
	        } else if (meridiem === 'வைகறை' || meridiem === 'காலை') {
	            return hour;
	        } else if (meridiem === 'நண்பகல்') {
	            return hour >= 10 ? hour : hour + 12;
	        } else {
	            return hour + 12;
	        }
	    },
	    week : {
	        dow : 0, // Sunday is the first day of the week.
	        doy : 6  // The week that contains Jan 1st is the first week of the year.
	    }
	});

	return ta;

	})));


/***/ },
/* 402 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Telugu [te]
	//! author : Krishna Chaitanya Thota : https://github.com/kcthota

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var te = moment.defineLocale('te', {
	    months : 'జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జూలై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్'.split('_'),
	    monthsShort : 'జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జూలై_ఆగ._సెప్._అక్టో._నవ._డిసె.'.split('_'),
	    monthsParseExact : true,
	    weekdays : 'ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం'.split('_'),
	    weekdaysShort : 'ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని'.split('_'),
	    weekdaysMin : 'ఆ_సో_మం_బు_గు_శు_శ'.split('_'),
	    longDateFormat : {
	        LT : 'A h:mm',
	        LTS : 'A h:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY, A h:mm',
	        LLLL : 'dddd, D MMMM YYYY, A h:mm'
	    },
	    calendar : {
	        sameDay : '[నేడు] LT',
	        nextDay : '[రేపు] LT',
	        nextWeek : 'dddd, LT',
	        lastDay : '[నిన్న] LT',
	        lastWeek : '[గత] dddd, LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : '%s లో',
	        past : '%s క్రితం',
	        s : 'కొన్ని క్షణాలు',
	        m : 'ఒక నిమిషం',
	        mm : '%d నిమిషాలు',
	        h : 'ఒక గంట',
	        hh : '%d గంటలు',
	        d : 'ఒక రోజు',
	        dd : '%d రోజులు',
	        M : 'ఒక నెల',
	        MM : '%d నెలలు',
	        y : 'ఒక సంవత్సరం',
	        yy : '%d సంవత్సరాలు'
	    },
	    ordinalParse : /\d{1,2}వ/,
	    ordinal : '%dవ',
	    meridiemParse: /రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,
	    meridiemHour : function (hour, meridiem) {
	        if (hour === 12) {
	            hour = 0;
	        }
	        if (meridiem === 'రాత్రి') {
	            return hour < 4 ? hour : hour + 12;
	        } else if (meridiem === 'ఉదయం') {
	            return hour;
	        } else if (meridiem === 'మధ్యాహ్నం') {
	            return hour >= 10 ? hour : hour + 12;
	        } else if (meridiem === 'సాయంత్రం') {
	            return hour + 12;
	        }
	    },
	    meridiem : function (hour, minute, isLower) {
	        if (hour < 4) {
	            return 'రాత్రి';
	        } else if (hour < 10) {
	            return 'ఉదయం';
	        } else if (hour < 17) {
	            return 'మధ్యాహ్నం';
	        } else if (hour < 20) {
	            return 'సాయంత్రం';
	        } else {
	            return 'రాత్రి';
	        }
	    },
	    week : {
	        dow : 0, // Sunday is the first day of the week.
	        doy : 6  // The week that contains Jan 1st is the first week of the year.
	    }
	});

	return te;

	})));


/***/ },
/* 403 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Tetun Dili (East Timor) [tet]
	//! author : Joshua Brooks : https://github.com/joshbrooks
	//! author : Onorio De J. Afonso : https://github.com/marobo

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var tet = moment.defineLocale('tet', {
	    months : 'Janeiru_Fevereiru_Marsu_Abril_Maiu_Juniu_Juliu_Augustu_Setembru_Outubru_Novembru_Dezembru'.split('_'),
	    monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Aug_Set_Out_Nov_Dez'.split('_'),
	    weekdays : 'Domingu_Segunda_Tersa_Kuarta_Kinta_Sexta_Sabadu'.split('_'),
	    weekdaysShort : 'Dom_Seg_Ters_Kua_Kint_Sext_Sab'.split('_'),
	    weekdaysMin : 'Do_Seg_Te_Ku_Ki_Sex_Sa'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd, D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay: '[Ohin iha] LT',
	        nextDay: '[Aban iha] LT',
	        nextWeek: 'dddd [iha] LT',
	        lastDay: '[Horiseik iha] LT',
	        lastWeek: 'dddd [semana kotuk] [iha] LT',
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'iha %s',
	        past : '%s liuba',
	        s : 'minutu balun',
	        m : 'minutu ida',
	        mm : 'minutus %d',
	        h : 'horas ida',
	        hh : 'horas %d',
	        d : 'loron ida',
	        dd : 'loron %d',
	        M : 'fulan ida',
	        MM : 'fulan %d',
	        y : 'tinan ida',
	        yy : 'tinan %d'
	    },
	    ordinalParse: /\d{1,2}(st|nd|rd|th)/,
	    ordinal : function (number) {
	        var b = number % 10,
	            output = (~~(number % 100 / 10) === 1) ? 'th' :
	            (b === 1) ? 'st' :
	            (b === 2) ? 'nd' :
	            (b === 3) ? 'rd' : 'th';
	        return number + output;
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return tet;

	})));


/***/ },
/* 404 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Thai [th]
	//! author : Kridsada Thanabulpong : https://github.com/sirn

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var th = moment.defineLocale('th', {
	    months : 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),
	    monthsShort : 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),
	    monthsParseExact: true,
	    weekdays : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),
	    weekdaysShort : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'), // yes, three characters difference
	    weekdaysMin : 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'H:mm',
	        LTS : 'H:mm:ss',
	        L : 'YYYY/MM/DD',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY เวลา H:mm',
	        LLLL : 'วันddddที่ D MMMM YYYY เวลา H:mm'
	    },
	    meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,
	    isPM: function (input) {
	        return input === 'หลังเที่ยง';
	    },
	    meridiem : function (hour, minute, isLower) {
	        if (hour < 12) {
	            return 'ก่อนเที่ยง';
	        } else {
	            return 'หลังเที่ยง';
	        }
	    },
	    calendar : {
	        sameDay : '[วันนี้ เวลา] LT',
	        nextDay : '[พรุ่งนี้ เวลา] LT',
	        nextWeek : 'dddd[หน้า เวลา] LT',
	        lastDay : '[เมื่อวานนี้ เวลา] LT',
	        lastWeek : '[วัน]dddd[ที่แล้ว เวลา] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'อีก %s',
	        past : '%sที่แล้ว',
	        s : 'ไม่กี่วินาที',
	        m : '1 นาที',
	        mm : '%d นาที',
	        h : '1 ชั่วโมง',
	        hh : '%d ชั่วโมง',
	        d : '1 วัน',
	        dd : '%d วัน',
	        M : '1 เดือน',
	        MM : '%d เดือน',
	        y : '1 ปี',
	        yy : '%d ปี'
	    }
	});

	return th;

	})));


/***/ },
/* 405 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Tagalog (Philippines) [tl-ph]
	//! author : Dan Hagman : https://github.com/hagmandan

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var tlPh = moment.defineLocale('tl-ph', {
	    months : 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split('_'),
	    monthsShort : 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),
	    weekdays : 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split('_'),
	    weekdaysShort : 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),
	    weekdaysMin : 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'MM/D/YYYY',
	        LL : 'MMMM D, YYYY',
	        LLL : 'MMMM D, YYYY HH:mm',
	        LLLL : 'dddd, MMMM DD, YYYY HH:mm'
	    },
	    calendar : {
	        sameDay: 'LT [ngayong araw]',
	        nextDay: '[Bukas ng] LT',
	        nextWeek: 'LT [sa susunod na] dddd',
	        lastDay: 'LT [kahapon]',
	        lastWeek: 'LT [noong nakaraang] dddd',
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'sa loob ng %s',
	        past : '%s ang nakalipas',
	        s : 'ilang segundo',
	        m : 'isang minuto',
	        mm : '%d minuto',
	        h : 'isang oras',
	        hh : '%d oras',
	        d : 'isang araw',
	        dd : '%d araw',
	        M : 'isang buwan',
	        MM : '%d buwan',
	        y : 'isang taon',
	        yy : '%d taon'
	    },
	    ordinalParse: /\d{1,2}/,
	    ordinal : function (number) {
	        return number;
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return tlPh;

	})));


/***/ },
/* 406 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Klingon [tlh]
	//! author : Dominika Kruk : https://github.com/amaranthrose

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var numbersNouns = 'pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut'.split('_');

	function translateFuture(output) {
	    var time = output;
	    time = (output.indexOf('jaj') !== -1) ?
	    time.slice(0, -3) + 'leS' :
	    (output.indexOf('jar') !== -1) ?
	    time.slice(0, -3) + 'waQ' :
	    (output.indexOf('DIS') !== -1) ?
	    time.slice(0, -3) + 'nem' :
	    time + ' pIq';
	    return time;
	}

	function translatePast(output) {
	    var time = output;
	    time = (output.indexOf('jaj') !== -1) ?
	    time.slice(0, -3) + 'Hu’' :
	    (output.indexOf('jar') !== -1) ?
	    time.slice(0, -3) + 'wen' :
	    (output.indexOf('DIS') !== -1) ?
	    time.slice(0, -3) + 'ben' :
	    time + ' ret';
	    return time;
	}

	function translate(number, withoutSuffix, string, isFuture) {
	    var numberNoun = numberAsNoun(number);
	    switch (string) {
	        case 'mm':
	            return numberNoun + ' tup';
	        case 'hh':
	            return numberNoun + ' rep';
	        case 'dd':
	            return numberNoun + ' jaj';
	        case 'MM':
	            return numberNoun + ' jar';
	        case 'yy':
	            return numberNoun + ' DIS';
	    }
	}

	function numberAsNoun(number) {
	    var hundred = Math.floor((number % 1000) / 100),
	    ten = Math.floor((number % 100) / 10),
	    one = number % 10,
	    word = '';
	    if (hundred > 0) {
	        word += numbersNouns[hundred] + 'vatlh';
	    }
	    if (ten > 0) {
	        word += ((word !== '') ? ' ' : '') + numbersNouns[ten] + 'maH';
	    }
	    if (one > 0) {
	        word += ((word !== '') ? ' ' : '') + numbersNouns[one];
	    }
	    return (word === '') ? 'pagh' : word;
	}

	var tlh = moment.defineLocale('tlh', {
	    months : 'tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’'.split('_'),
	    monthsShort : 'jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’'.split('_'),
	    monthsParseExact : true,
	    weekdays : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
	    weekdaysShort : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
	    weekdaysMin : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd, D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay: '[DaHjaj] LT',
	        nextDay: '[wa’leS] LT',
	        nextWeek: 'LLL',
	        lastDay: '[wa’Hu’] LT',
	        lastWeek: 'LLL',
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : translateFuture,
	        past : translatePast,
	        s : 'puS lup',
	        m : 'wa’ tup',
	        mm : translate,
	        h : 'wa’ rep',
	        hh : translate,
	        d : 'wa’ jaj',
	        dd : translate,
	        M : 'wa’ jar',
	        MM : translate,
	        y : 'wa’ DIS',
	        yy : translate
	    },
	    ordinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return tlh;

	})));


/***/ },
/* 407 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Turkish [tr]
	//! authors : Erhan Gundogan : https://github.com/erhangundogan,
	//!           Burak Yiğit Kaya: https://github.com/BYK

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var suffixes = {
	    1: '\'inci',
	    5: '\'inci',
	    8: '\'inci',
	    70: '\'inci',
	    80: '\'inci',
	    2: '\'nci',
	    7: '\'nci',
	    20: '\'nci',
	    50: '\'nci',
	    3: '\'üncü',
	    4: '\'üncü',
	    100: '\'üncü',
	    6: '\'ncı',
	    9: '\'uncu',
	    10: '\'uncu',
	    30: '\'uncu',
	    60: '\'ıncı',
	    90: '\'ıncı'
	};

	var tr = moment.defineLocale('tr', {
	    months : 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),
	    monthsShort : 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),
	    weekdays : 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),
	    weekdaysShort : 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),
	    weekdaysMin : 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd, D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay : '[bugün saat] LT',
	        nextDay : '[yarın saat] LT',
	        nextWeek : '[haftaya] dddd [saat] LT',
	        lastDay : '[dün] LT',
	        lastWeek : '[geçen hafta] dddd [saat] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : '%s sonra',
	        past : '%s önce',
	        s : 'birkaç saniye',
	        m : 'bir dakika',
	        mm : '%d dakika',
	        h : 'bir saat',
	        hh : '%d saat',
	        d : 'bir gün',
	        dd : '%d gün',
	        M : 'bir ay',
	        MM : '%d ay',
	        y : 'bir yıl',
	        yy : '%d yıl'
	    },
	    ordinalParse: /\d{1,2}'(inci|nci|üncü|ncı|uncu|ıncı)/,
	    ordinal : function (number) {
	        if (number === 0) {  // special case for zero
	            return number + '\'ıncı';
	        }
	        var a = number % 10,
	            b = number % 100 - a,
	            c = number >= 100 ? 100 : null;
	        return number + (suffixes[a] || suffixes[b] || suffixes[c]);
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});

	return tr;

	})));


/***/ },
/* 408 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Talossan [tzl]
	//! author : Robin van der Vliet : https://github.com/robin0van0der0v
	//! author : Iustì Canun

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	// After the year there should be a slash and the amount of years since December 26, 1979 in Roman numerals.
	// This is currently too difficult (maybe even impossible) to add.
	var tzl = moment.defineLocale('tzl', {
	    months : 'Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar'.split('_'),
	    monthsShort : 'Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec'.split('_'),
	    weekdays : 'Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi'.split('_'),
	    weekdaysShort : 'Súl_Lún_Mai_Már_Xhú_Vié_Sát'.split('_'),
	    weekdaysMin : 'Sú_Lú_Ma_Má_Xh_Vi_Sá'.split('_'),
	    longDateFormat : {
	        LT : 'HH.mm',
	        LTS : 'HH.mm.ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D. MMMM [dallas] YYYY',
	        LLL : 'D. MMMM [dallas] YYYY HH.mm',
	        LLLL : 'dddd, [li] D. MMMM [dallas] YYYY HH.mm'
	    },
	    meridiemParse: /d\'o|d\'a/i,
	    isPM : function (input) {
	        return 'd\'o' === input.toLowerCase();
	    },
	    meridiem : function (hours, minutes, isLower) {
	        if (hours > 11) {
	            return isLower ? 'd\'o' : 'D\'O';
	        } else {
	            return isLower ? 'd\'a' : 'D\'A';
	        }
	    },
	    calendar : {
	        sameDay : '[oxhi à] LT',
	        nextDay : '[demà à] LT',
	        nextWeek : 'dddd [à] LT',
	        lastDay : '[ieiri à] LT',
	        lastWeek : '[sür el] dddd [lasteu à] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'osprei %s',
	        past : 'ja%s',
	        s : processRelativeTime,
	        m : processRelativeTime,
	        mm : processRelativeTime,
	        h : processRelativeTime,
	        hh : processRelativeTime,
	        d : processRelativeTime,
	        dd : processRelativeTime,
	        M : processRelativeTime,
	        MM : processRelativeTime,
	        y : processRelativeTime,
	        yy : processRelativeTime
	    },
	    ordinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	function processRelativeTime(number, withoutSuffix, key, isFuture) {
	    var format = {
	        's': ['viensas secunds', '\'iensas secunds'],
	        'm': ['\'n míut', '\'iens míut'],
	        'mm': [number + ' míuts', '' + number + ' míuts'],
	        'h': ['\'n þora', '\'iensa þora'],
	        'hh': [number + ' þoras', '' + number + ' þoras'],
	        'd': ['\'n ziua', '\'iensa ziua'],
	        'dd': [number + ' ziuas', '' + number + ' ziuas'],
	        'M': ['\'n mes', '\'iens mes'],
	        'MM': [number + ' mesen', '' + number + ' mesen'],
	        'y': ['\'n ar', '\'iens ar'],
	        'yy': [number + ' ars', '' + number + ' ars']
	    };
	    return isFuture ? format[key][0] : (withoutSuffix ? format[key][0] : format[key][1]);
	}

	return tzl;

	})));


/***/ },
/* 409 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Central Atlas Tamazight [tzm]
	//! author : Abdel Said : https://github.com/abdelsaid

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var tzm = moment.defineLocale('tzm', {
	    months : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
	    monthsShort : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
	    weekdays : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
	    weekdaysShort : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
	    weekdaysMin : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS: 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay: '[ⴰⵙⴷⵅ ⴴ] LT',
	        nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',
	        nextWeek: 'dddd [ⴴ] LT',
	        lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',
	        lastWeek: 'dddd [ⴴ] LT',
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s',
	        past : 'ⵢⴰⵏ %s',
	        s : 'ⵉⵎⵉⴽ',
	        m : 'ⵎⵉⵏⵓⴺ',
	        mm : '%d ⵎⵉⵏⵓⴺ',
	        h : 'ⵙⴰⵄⴰ',
	        hh : '%d ⵜⴰⵙⵙⴰⵄⵉⵏ',
	        d : 'ⴰⵙⵙ',
	        dd : '%d oⵙⵙⴰⵏ',
	        M : 'ⴰⵢoⵓⵔ',
	        MM : '%d ⵉⵢⵢⵉⵔⵏ',
	        y : 'ⴰⵙⴳⴰⵙ',
	        yy : '%d ⵉⵙⴳⴰⵙⵏ'
	    },
	    week : {
	        dow : 6, // Saturday is the first day of the week.
	        doy : 12  // The week that contains Jan 1st is the first week of the year.
	    }
	});

	return tzm;

	})));


/***/ },
/* 410 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Central Atlas Tamazight Latin [tzm-latn]
	//! author : Abdel Said : https://github.com/abdelsaid

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var tzmLatn = moment.defineLocale('tzm-latn', {
	    months : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
	    monthsShort : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
	    weekdays : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
	    weekdaysShort : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
	    weekdaysMin : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay: '[asdkh g] LT',
	        nextDay: '[aska g] LT',
	        nextWeek: 'dddd [g] LT',
	        lastDay: '[assant g] LT',
	        lastWeek: 'dddd [g] LT',
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'dadkh s yan %s',
	        past : 'yan %s',
	        s : 'imik',
	        m : 'minuḍ',
	        mm : '%d minuḍ',
	        h : 'saɛa',
	        hh : '%d tassaɛin',
	        d : 'ass',
	        dd : '%d ossan',
	        M : 'ayowr',
	        MM : '%d iyyirn',
	        y : 'asgas',
	        yy : '%d isgasn'
	    },
	    week : {
	        dow : 6, // Saturday is the first day of the week.
	        doy : 12  // The week that contains Jan 1st is the first week of the year.
	    }
	});

	return tzmLatn;

	})));


/***/ },
/* 411 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Ukrainian [uk]
	//! author : zemlanin : https://github.com/zemlanin
	//! Author : Menelion Elensúle : https://github.com/Oire

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	function plural(word, num) {
	    var forms = word.split('_');
	    return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
	}
	function relativeTimeWithPlural(number, withoutSuffix, key) {
	    var format = {
	        'mm': withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',
	        'hh': withoutSuffix ? 'година_години_годин' : 'годину_години_годин',
	        'dd': 'день_дні_днів',
	        'MM': 'місяць_місяці_місяців',
	        'yy': 'рік_роки_років'
	    };
	    if (key === 'm') {
	        return withoutSuffix ? 'хвилина' : 'хвилину';
	    }
	    else if (key === 'h') {
	        return withoutSuffix ? 'година' : 'годину';
	    }
	    else {
	        return number + ' ' + plural(format[key], +number);
	    }
	}
	function weekdaysCaseReplace(m, format) {
	    var weekdays = {
	        'nominative': 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),
	        'accusative': 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),
	        'genitive': 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')
	    },
	    nounCase = (/(\[[ВвУу]\]) ?dddd/).test(format) ?
	        'accusative' :
	        ((/\[?(?:минулої|наступної)? ?\] ?dddd/).test(format) ?
	            'genitive' :
	            'nominative');
	    return weekdays[nounCase][m.day()];
	}
	function processHoursFunction(str) {
	    return function () {
	        return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';
	    };
	}

	var uk = moment.defineLocale('uk', {
	    months : {
	        'format': 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_'),
	        'standalone': 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_')
	    },
	    monthsShort : 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),
	    weekdays : weekdaysCaseReplace,
	    weekdaysShort : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
	    weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D MMMM YYYY р.',
	        LLL : 'D MMMM YYYY р., HH:mm',
	        LLLL : 'dddd, D MMMM YYYY р., HH:mm'
	    },
	    calendar : {
	        sameDay: processHoursFunction('[Сьогодні '),
	        nextDay: processHoursFunction('[Завтра '),
	        lastDay: processHoursFunction('[Вчора '),
	        nextWeek: processHoursFunction('[У] dddd ['),
	        lastWeek: function () {
	            switch (this.day()) {
	                case 0:
	                case 3:
	                case 5:
	                case 6:
	                    return processHoursFunction('[Минулої] dddd [').call(this);
	                case 1:
	                case 2:
	                case 4:
	                    return processHoursFunction('[Минулого] dddd [').call(this);
	            }
	        },
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : 'за %s',
	        past : '%s тому',
	        s : 'декілька секунд',
	        m : relativeTimeWithPlural,
	        mm : relativeTimeWithPlural,
	        h : 'годину',
	        hh : relativeTimeWithPlural,
	        d : 'день',
	        dd : relativeTimeWithPlural,
	        M : 'місяць',
	        MM : relativeTimeWithPlural,
	        y : 'рік',
	        yy : relativeTimeWithPlural
	    },
	    // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason
	    meridiemParse: /ночі|ранку|дня|вечора/,
	    isPM: function (input) {
	        return /^(дня|вечора)$/.test(input);
	    },
	    meridiem : function (hour, minute, isLower) {
	        if (hour < 4) {
	            return 'ночі';
	        } else if (hour < 12) {
	            return 'ранку';
	        } else if (hour < 17) {
	            return 'дня';
	        } else {
	            return 'вечора';
	        }
	    },
	    ordinalParse: /\d{1,2}-(й|го)/,
	    ordinal: function (number, period) {
	        switch (period) {
	            case 'M':
	            case 'd':
	            case 'DDD':
	            case 'w':
	            case 'W':
	                return number + '-й';
	            case 'D':
	                return number + '-го';
	            default:
	                return number;
	        }
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 1st is the first week of the year.
	    }
	});

	return uk;

	})));


/***/ },
/* 412 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Uzbek [uz]
	//! author : Sardor Muminov : https://github.com/muminoff

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var uz = moment.defineLocale('uz', {
	    months : 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split('_'),
	    monthsShort : 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),
	    weekdays : 'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split('_'),
	    weekdaysShort : 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),
	    weekdaysMin : 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'D MMMM YYYY, dddd HH:mm'
	    },
	    calendar : {
	        sameDay : '[Бугун соат] LT [да]',
	        nextDay : '[Эртага] LT [да]',
	        nextWeek : 'dddd [куни соат] LT [да]',
	        lastDay : '[Кеча соат] LT [да]',
	        lastWeek : '[Утган] dddd [куни соат] LT [да]',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'Якин %s ичида',
	        past : 'Бир неча %s олдин',
	        s : 'фурсат',
	        m : 'бир дакика',
	        mm : '%d дакика',
	        h : 'бир соат',
	        hh : '%d соат',
	        d : 'бир кун',
	        dd : '%d кун',
	        M : 'бир ой',
	        MM : '%d ой',
	        y : 'бир йил',
	        yy : '%d йил'
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 7  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return uz;

	})));


/***/ },
/* 413 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Vietnamese [vi]
	//! author : Bang Nguyen : https://github.com/bangnk

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var vi = moment.defineLocale('vi', {
	    months : 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),
	    monthsShort : 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),
	    monthsParseExact : true,
	    weekdays : 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),
	    weekdaysShort : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
	    weekdaysMin : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
	    weekdaysParseExact : true,
	    meridiemParse: /sa|ch/i,
	    isPM : function (input) {
	        return /^ch$/i.test(input);
	    },
	    meridiem : function (hours, minutes, isLower) {
	        if (hours < 12) {
	            return isLower ? 'sa' : 'SA';
	        } else {
	            return isLower ? 'ch' : 'CH';
	        }
	    },
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM [năm] YYYY',
	        LLL : 'D MMMM [năm] YYYY HH:mm',
	        LLLL : 'dddd, D MMMM [năm] YYYY HH:mm',
	        l : 'DD/M/YYYY',
	        ll : 'D MMM YYYY',
	        lll : 'D MMM YYYY HH:mm',
	        llll : 'ddd, D MMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay: '[Hôm nay lúc] LT',
	        nextDay: '[Ngày mai lúc] LT',
	        nextWeek: 'dddd [tuần tới lúc] LT',
	        lastDay: '[Hôm qua lúc] LT',
	        lastWeek: 'dddd [tuần rồi lúc] LT',
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : '%s tới',
	        past : '%s trước',
	        s : 'vài giây',
	        m : 'một phút',
	        mm : '%d phút',
	        h : 'một giờ',
	        hh : '%d giờ',
	        d : 'một ngày',
	        dd : '%d ngày',
	        M : 'một tháng',
	        MM : '%d tháng',
	        y : 'một năm',
	        yy : '%d năm'
	    },
	    ordinalParse: /\d{1,2}/,
	    ordinal : function (number) {
	        return number;
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return vi;

	})));


/***/ },
/* 414 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Pseudo [x-pseudo]
	//! author : Andrew Hood : https://github.com/andrewhood125

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var xPseudo = moment.defineLocale('x-pseudo', {
	    months : 'J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér'.split('_'),
	    monthsShort : 'J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc'.split('_'),
	    monthsParseExact : true,
	    weekdays : 'S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý'.split('_'),
	    weekdaysShort : 'S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát'.split('_'),
	    weekdaysMin : 'S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'HH:mm',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd, D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay : '[T~ódá~ý át] LT',
	        nextDay : '[T~ómó~rró~w át] LT',
	        nextWeek : 'dddd [át] LT',
	        lastDay : '[Ý~ést~érdá~ý át] LT',
	        lastWeek : '[L~ást] dddd [át] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'í~ñ %s',
	        past : '%s á~gó',
	        s : 'á ~féw ~sécó~ñds',
	        m : 'á ~míñ~úté',
	        mm : '%d m~íñú~tés',
	        h : 'á~ñ hó~úr',
	        hh : '%d h~óúrs',
	        d : 'á ~dáý',
	        dd : '%d d~áýs',
	        M : 'á ~móñ~th',
	        MM : '%d m~óñt~hs',
	        y : 'á ~ýéár',
	        yy : '%d ý~éárs'
	    },
	    ordinalParse: /\d{1,2}(th|st|nd|rd)/,
	    ordinal : function (number) {
	        var b = number % 10,
	            output = (~~(number % 100 / 10) === 1) ? 'th' :
	            (b === 1) ? 'st' :
	            (b === 2) ? 'nd' :
	            (b === 3) ? 'rd' : 'th';
	        return number + output;
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return xPseudo;

	})));


/***/ },
/* 415 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Yoruba Nigeria [yo]
	//! author : Atolagbe Abisoye : https://github.com/andela-batolagbe

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var yo = moment.defineLocale('yo', {
	    months : 'Sẹ́rẹ́_Èrèlè_Ẹrẹ̀nà_Ìgbé_Èbibi_Òkùdu_Agẹmo_Ògún_Owewe_Ọ̀wàrà_Bélú_Ọ̀pẹ̀̀'.split('_'),
	    monthsShort : 'Sẹ́r_Èrl_Ẹrn_Ìgb_Èbi_Òkù_Agẹ_Ògú_Owe_Ọ̀wà_Bél_Ọ̀pẹ̀̀'.split('_'),
	    weekdays : 'Àìkú_Ajé_Ìsẹ́gun_Ọjọ́rú_Ọjọ́bọ_Ẹtì_Àbámẹ́ta'.split('_'),
	    weekdaysShort : 'Àìk_Ajé_Ìsẹ́_Ọjr_Ọjb_Ẹtì_Àbá'.split('_'),
	    weekdaysMin : 'Àì_Aj_Ìs_Ọr_Ọb_Ẹt_Àb'.split('_'),
	    longDateFormat : {
	        LT : 'h:mm A',
	        LTS : 'h:mm:ss A',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY h:mm A',
	        LLLL : 'dddd, D MMMM YYYY h:mm A'
	    },
	    calendar : {
	        sameDay : '[Ònì ni] LT',
	        nextDay : '[Ọ̀la ni] LT',
	        nextWeek : 'dddd [Ọsẹ̀ tón\'bọ] [ni] LT',
	        lastDay : '[Àna ni] LT',
	        lastWeek : 'dddd [Ọsẹ̀ tólọ́] [ni] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'ní %s',
	        past : '%s kọjá',
	        s : 'ìsẹjú aayá die',
	        m : 'ìsẹjú kan',
	        mm : 'ìsẹjú %d',
	        h : 'wákati kan',
	        hh : 'wákati %d',
	        d : 'ọjọ́ kan',
	        dd : 'ọjọ́ %d',
	        M : 'osù kan',
	        MM : 'osù %d',
	        y : 'ọdún kan',
	        yy : 'ọdún %d'
	    },
	    ordinalParse : /ọjọ́\s\d{1,2}/,
	    ordinal : 'ọjọ́ %d',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4 // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return yo;

	})));


/***/ },
/* 416 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Chinese (China) [zh-cn]
	//! author : suupic : https://github.com/suupic
	//! author : Zeno Zeng : https://github.com/zenozeng

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var zhCn = moment.defineLocale('zh-cn', {
	    months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
	    monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	    weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
	    weekdaysShort : '周日_周一_周二_周三_周四_周五_周六'.split('_'),
	    weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
	    longDateFormat : {
	        LT : 'Ah点mm分',
	        LTS : 'Ah点m分s秒',
	        L : 'YYYY-MM-DD',
	        LL : 'YYYY年MMMD日',
	        LLL : 'YYYY年MMMD日Ah点mm分',
	        LLLL : 'YYYY年MMMD日ddddAh点mm分',
	        l : 'YYYY-MM-DD',
	        ll : 'YYYY年MMMD日',
	        lll : 'YYYY年MMMD日Ah点mm分',
	        llll : 'YYYY年MMMD日ddddAh点mm分'
	    },
	    meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
	    meridiemHour: function (hour, meridiem) {
	        if (hour === 12) {
	            hour = 0;
	        }
	        if (meridiem === '凌晨' || meridiem === '早上' ||
	                meridiem === '上午') {
	            return hour;
	        } else if (meridiem === '下午' || meridiem === '晚上') {
	            return hour + 12;
	        } else {
	            // '中午'
	            return hour >= 11 ? hour : hour + 12;
	        }
	    },
	    meridiem : function (hour, minute, isLower) {
	        var hm = hour * 100 + minute;
	        if (hm < 600) {
	            return '凌晨';
	        } else if (hm < 900) {
	            return '早上';
	        } else if (hm < 1130) {
	            return '上午';
	        } else if (hm < 1230) {
	            return '中午';
	        } else if (hm < 1800) {
	            return '下午';
	        } else {
	            return '晚上';
	        }
	    },
	    calendar : {
	        sameDay : function () {
	            return this.minutes() === 0 ? '[今天]Ah[点整]' : '[今天]LT';
	        },
	        nextDay : function () {
	            return this.minutes() === 0 ? '[明天]Ah[点整]' : '[明天]LT';
	        },
	        lastDay : function () {
	            return this.minutes() === 0 ? '[昨天]Ah[点整]' : '[昨天]LT';
	        },
	        nextWeek : function () {
	            var startOfWeek, prefix;
	            startOfWeek = moment().startOf('week');
	            prefix = this.diff(startOfWeek, 'days') >= 7 ? '[下]' : '[本]';
	            return this.minutes() === 0 ? prefix + 'dddAh点整' : prefix + 'dddAh点mm';
	        },
	        lastWeek : function () {
	            var startOfWeek, prefix;
	            startOfWeek = moment().startOf('week');
	            prefix = this.unix() < startOfWeek.unix()  ? '[上]' : '[本]';
	            return this.minutes() === 0 ? prefix + 'dddAh点整' : prefix + 'dddAh点mm';
	        },
	        sameElse : 'LL'
	    },
	    ordinalParse: /\d{1,2}(日|月|周)/,
	    ordinal : function (number, period) {
	        switch (period) {
	            case 'd':
	            case 'D':
	            case 'DDD':
	                return number + '日';
	            case 'M':
	                return number + '月';
	            case 'w':
	            case 'W':
	                return number + '周';
	            default:
	                return number;
	        }
	    },
	    relativeTime : {
	        future : '%s内',
	        past : '%s前',
	        s : '几秒',
	        m : '1 分钟',
	        mm : '%d 分钟',
	        h : '1 小时',
	        hh : '%d 小时',
	        d : '1 天',
	        dd : '%d 天',
	        M : '1 个月',
	        MM : '%d 个月',
	        y : '1 年',
	        yy : '%d 年'
	    },
	    week : {
	        // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return zhCn;

	})));


/***/ },
/* 417 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Chinese (Hong Kong) [zh-hk]
	//! author : Ben : https://github.com/ben-lin
	//! author : Chris Lam : https://github.com/hehachris
	//! author : Konstantin : https://github.com/skfd

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var zhHk = moment.defineLocale('zh-hk', {
	    months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
	    monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	    weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
	    weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),
	    weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
	    longDateFormat : {
	        LT : 'Ah點mm分',
	        LTS : 'Ah點m分s秒',
	        L : 'YYYY年MMMD日',
	        LL : 'YYYY年MMMD日',
	        LLL : 'YYYY年MMMD日Ah點mm分',
	        LLLL : 'YYYY年MMMD日ddddAh點mm分',
	        l : 'YYYY年MMMD日',
	        ll : 'YYYY年MMMD日',
	        lll : 'YYYY年MMMD日Ah點mm分',
	        llll : 'YYYY年MMMD日ddddAh點mm分'
	    },
	    meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
	    meridiemHour : function (hour, meridiem) {
	        if (hour === 12) {
	            hour = 0;
	        }
	        if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
	            return hour;
	        } else if (meridiem === '中午') {
	            return hour >= 11 ? hour : hour + 12;
	        } else if (meridiem === '下午' || meridiem === '晚上') {
	            return hour + 12;
	        }
	    },
	    meridiem : function (hour, minute, isLower) {
	        var hm = hour * 100 + minute;
	        if (hm < 600) {
	            return '凌晨';
	        } else if (hm < 900) {
	            return '早上';
	        } else if (hm < 1130) {
	            return '上午';
	        } else if (hm < 1230) {
	            return '中午';
	        } else if (hm < 1800) {
	            return '下午';
	        } else {
	            return '晚上';
	        }
	    },
	    calendar : {
	        sameDay : '[今天]LT',
	        nextDay : '[明天]LT',
	        nextWeek : '[下]ddddLT',
	        lastDay : '[昨天]LT',
	        lastWeek : '[上]ddddLT',
	        sameElse : 'L'
	    },
	    ordinalParse: /\d{1,2}(日|月|週)/,
	    ordinal : function (number, period) {
	        switch (period) {
	            case 'd' :
	            case 'D' :
	            case 'DDD' :
	                return number + '日';
	            case 'M' :
	                return number + '月';
	            case 'w' :
	            case 'W' :
	                return number + '週';
	            default :
	                return number;
	        }
	    },
	    relativeTime : {
	        future : '%s內',
	        past : '%s前',
	        s : '幾秒',
	        m : '1 分鐘',
	        mm : '%d 分鐘',
	        h : '1 小時',
	        hh : '%d 小時',
	        d : '1 天',
	        dd : '%d 天',
	        M : '1 個月',
	        MM : '%d 個月',
	        y : '1 年',
	        yy : '%d 年'
	    }
	});

	return zhHk;

	})));


/***/ },
/* 418 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Chinese (Taiwan) [zh-tw]
	//! author : Ben : https://github.com/ben-lin
	//! author : Chris Lam : https://github.com/hehachris

	;(function (global, factory) {
	    true ? factory(__webpack_require__(308)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var zhTw = moment.defineLocale('zh-tw', {
	    months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
	    monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	    weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
	    weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),
	    weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
	    longDateFormat : {
	        LT : 'Ah點mm分',
	        LTS : 'Ah點m分s秒',
	        L : 'YYYY年MMMD日',
	        LL : 'YYYY年MMMD日',
	        LLL : 'YYYY年MMMD日Ah點mm分',
	        LLLL : 'YYYY年MMMD日ddddAh點mm分',
	        l : 'YYYY年MMMD日',
	        ll : 'YYYY年MMMD日',
	        lll : 'YYYY年MMMD日Ah點mm分',
	        llll : 'YYYY年MMMD日ddddAh點mm分'
	    },
	    meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
	    meridiemHour : function (hour, meridiem) {
	        if (hour === 12) {
	            hour = 0;
	        }
	        if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
	            return hour;
	        } else if (meridiem === '中午') {
	            return hour >= 11 ? hour : hour + 12;
	        } else if (meridiem === '下午' || meridiem === '晚上') {
	            return hour + 12;
	        }
	    },
	    meridiem : function (hour, minute, isLower) {
	        var hm = hour * 100 + minute;
	        if (hm < 600) {
	            return '凌晨';
	        } else if (hm < 900) {
	            return '早上';
	        } else if (hm < 1130) {
	            return '上午';
	        } else if (hm < 1230) {
	            return '中午';
	        } else if (hm < 1800) {
	            return '下午';
	        } else {
	            return '晚上';
	        }
	    },
	    calendar : {
	        sameDay : '[今天]LT',
	        nextDay : '[明天]LT',
	        nextWeek : '[下]ddddLT',
	        lastDay : '[昨天]LT',
	        lastWeek : '[上]ddddLT',
	        sameElse : 'L'
	    },
	    ordinalParse: /\d{1,2}(日|月|週)/,
	    ordinal : function (number, period) {
	        switch (period) {
	            case 'd' :
	            case 'D' :
	            case 'DDD' :
	                return number + '日';
	            case 'M' :
	                return number + '月';
	            case 'w' :
	            case 'W' :
	                return number + '週';
	            default :
	                return number;
	        }
	    },
	    relativeTime : {
	        future : '%s內',
	        past : '%s前',
	        s : '幾秒',
	        m : '1 分鐘',
	        mm : '%d 分鐘',
	        h : '1 小時',
	        hh : '%d 小時',
	        d : '1 天',
	        dd : '%d 天',
	        M : '1 個月',
	        MM : '%d 個月',
	        y : '1 年',
	        yy : '%d 年'
	    }
	});

	return zhTw;

	})));


/***/ },
/* 419 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Write loading image to a container for ajax request
	 *
	 * @param container: a jQuery object
	 */
	function showLoadingImage(container) {
	    container.empty().append('<div class="barspinner dark"><div class="rect1"></div><div class="rect2"></div><div class="rect3"></div><div class="rect4"></div><div class="rect5"></div></div>');
	}

	/**
	 * Returns the highest z-index in the page.
	 * Accepts a jquery style selector to only check those elements,
	 * uses all container tags by default
	 * If no element found, returns null.
	 *
	 * @param selector: a jquery style selector for target elements
	 * @return int|null
	 */
	function get_highest_zindex(selector) {
	    if (!selector) {
	        selector = 'div,p,area,nav,section,header,canvas,aside,span';
	    }
	    var all = [];
	    var _store_zindex = function _store_zindex() {
	        if ($(this).is(':visible')) {
	            var z = $(this).css('z-index');
	            if (!isNaN(z)) {
	                all.push(z);
	            }
	        }
	    };
	    $(selector).each(_store_zindex);

	    return all.length ? Math.max.apply(Math, all) : null;
	}

	function downloadCSV(csvContents, filename) {
	    filename = filename || 'data.csv';
	    if (navigator.msSaveBlob) {
	        // IE 10+
	        navigator.msSaveBlob(new Blob([csvContents], { type: 'text/csv;charset=utf-8;' }), filename);
	    } else {
	        // Other browsers
	        var csv = 'data:text/csv;charset=utf-8,' + csvContents;
	        var downloadLink = document.createElement('a');
	        downloadLink.href = encodeURI(csv);
	        downloadLink.download = filename;

	        document.body.appendChild(downloadLink);
	        downloadLink.click();
	        document.body.removeChild(downloadLink);
	    }
	}

	function template(string, content) {
	    return string.replace(/\[_(\d+)\]/g, function (s, index) {
	        return content[+index - 1];
	    });
	}

	function objectNotEmpty(obj) {
	    var isEmpty = true;
	    if (obj && obj instanceof Object) {
	        Object.keys(obj).forEach(function (key) {
	            if (obj.hasOwnProperty(key)) isEmpty = false;
	        });
	    }
	    return !isEmpty;
	}

	module.exports = {
	    showLoadingImage: showLoadingImage,
	    get_highest_zindex: get_highest_zindex,
	    downloadCSV: downloadCSV,
	    template: template,
	    objectNotEmpty: objectNotEmpty
	};

/***/ },
/* 420 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Cookies = __webpack_require__(301);

	var email_rot13 = function email_rot13(str) {
	    return str.replace(/[a-zA-Z]/g, function (c) {
	        var c2 = c.charCodeAt(0) + 13;
	        return String.fromCharCode((c <= 'Z' ? 90 : 122) >= c2 ? c2 : c2 - 26);
	    });
	};

	// returns true if internet explorer browser
	var isIE = function isIE() {
	    return (/(msie|trident|edge)/i.test(window.navigator.userAgent) && !window.opera
	    );
	};

	// hide and show hedging value if trading purpose is set to hedging
	var detect_hedging = function detect_hedging($purpose, $hedging) {
	    $purpose.change(function () {
	        if ($purpose.val() === 'Hedging') {
	            $hedging.removeClass('invisible');
	        } else if ($hedging.is(':visible')) {
	            $hedging.addClass('invisible');
	        }
	    });
	};

	var jqueryuiTabsToDropdown = function jqueryuiTabsToDropdown($container) {
	    var $ddl = $('<select/>');
	    $container.find('li a').each(function () {
	        $ddl.append($('<option/>', { text: $(this).text(), value: $(this).attr('href') }));
	    });
	    $ddl.change(function () {
	        $container.find('li a[href="' + $(this).val() + '"]').click();
	    });
	    return $ddl;
	};

	// use function to generate elements and append them
	// element is select and element to append is option
	var appendTextValueChild = function appendTextValueChild(element, text, value, disabled, el_class) {
	    if (element && !element.nodeName) {
	        if (typeof element === 'string') {
	            element = document.getElementById(element);
	        } else {
	            element = undefined;
	        }
	    }
	    if (!element) return;
	    var option = document.createElement('option');
	    option.text = text;
	    // setting null value helps with detecting required error
	    // on 'Please select' options
	    // that have no value of their own
	    option.value = value || '';
	    if (disabled === 'disabled') {
	        option.setAttribute('disabled', 'disabled');
	    }
	    if (el_class) {
	        option.className = el_class;
	    }
	    element.appendChild(option);
	};

	var isValidDate = function isValidDate(day, month, year) {
	    // Assume not leap year by default (note zero index for Jan)
	    var daysInMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];

	    // If evenly divisible by 4 and not evenly divisible by 100,
	    // or is evenly divisible by 400, then a leap year
	    if (year % 4 === 0 && year % 100 !== 0 || year % 400 === 0) {
	        daysInMonth[1] = 29;
	    }
	    return day <= daysInMonth[--month];
	};

	/*
	 * function to check if element is visible or not
	 *
	 * alternative to jquery $('#id').is(':visible')
	 */
	var isVisible = function isVisible(elem) {
	    'use strict';

	    return !(!elem || elem.offsetWidth === 0 && elem.offsetHeight === 0);
	};

	/*
	 * function to check if browser supports the type date/time
	 * send a wrong val in case browser 'pretends' to support
	 */
	function checkInput(type, wrongVal) {
	    var input = document.createElement('input');
	    input.setAttribute('type', type);
	    input.setAttribute('value', wrongVal);
	    return input.value !== wrongVal;
	}

	/*
	 * function to check if new date is selected using native picker
	 * if yes, update the data-value. if no, return false.
	 */
	function dateValueChanged(element, type) {
	    if (element.getAttribute('data-value') === element.value) {
	        return false;
	    }
	    if (element.getAttribute('type') === type) {
	        element.setAttribute('data-value', element.value);
	    }
	    return true;
	}

	function selectorExists(element) {
	    return typeof element !== 'undefined' && element !== null;
	}

	function get_set_element_value(element, text, type) {
	    // eslint-disable-line consistent-return
	    if (selectorExists(element)) {
	        if (typeof text === 'undefined') return element[type];
	        // else
	        element[type] = text;
	    }
	}

	function elementTextContent(element, text) {
	    return get_set_element_value(element, text, 'textContent');
	}

	function elementInnerHtml(element, text) {
	    return get_set_element_value(element, text, 'innerHTML');
	}

	module.exports = {
	    getLoginToken: function getLoginToken() {
	        return Cookies.get('login');
	    },
	    email_rot13: email_rot13,
	    isIE: isIE,
	    detect_hedging: detect_hedging,
	    jqueryuiTabsToDropdown: jqueryuiTabsToDropdown,
	    appendTextValueChild: appendTextValueChild,
	    isValidDate: isValidDate,
	    isVisible: isVisible,
	    checkInput: checkInput,
	    dateValueChanged: dateValueChanged,
	    selectorExists: selectorExists,
	    elementTextContent: elementTextContent,
	    elementInnerHtml: elementInnerHtml
	};

/***/ },
/* 421 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var generateBirthDate = __webpack_require__(422).generateBirthDate;
	var objectNotEmpty = __webpack_require__(419).objectNotEmpty;
	var localize = __webpack_require__(423).localize;
	var Client = __webpack_require__(305).Client;
	var url_for = __webpack_require__(306).url_for;
	var Validate = __webpack_require__(425).Validate;
	var Content = __webpack_require__(426).Content;
	var japanese_client = __webpack_require__(307).japanese_client;
	var appendTextValueChild = __webpack_require__(420).appendTextValueChild;
	var Cookies = __webpack_require__(301);
	var moment = __webpack_require__(308);
	var elementInnerHtml = __webpack_require__(420).elementInnerHtml;

	var displayAcctSettings = function displayAcctSettings(response) {
	    var country = response.get_settings.country_code;
	    if (country && country !== null) {
	        $('#real-form').show();
	        Client.set_value('residence', country);
	        generateBirthDate();
	        generateState();
	        if (/maltainvestws/.test(window.location.pathname)) {
	            var settings = response.get_settings;
	            var title = document.getElementById('title'),
	                fname = document.getElementById('fname'),
	                lname = document.getElementById('lname'),
	                dobdd = document.getElementById('dobdd'),
	                dobmm = document.getElementById('dobmm'),
	                dobyy = document.getElementById('dobyy');
	            var inputs = document.getElementsByClassName('input-disabled');
	            if (settings.salutation) {
	                title.value = settings.salutation;
	                fname.value = settings.first_name;
	                lname.value = settings.last_name;
	                var date = moment.utc(settings.date_of_birth * 1000);
	                dobdd.value = date.format('DD').replace(/^0/, '');
	                dobmm.value = date.format('MM');
	                dobyy.value = date.format('YYYY');
	                for (var i = 0; i < inputs.length; i++) {
	                    inputs[i].disabled = true;
	                }
	                document.getElementById('address1').value = settings.address_line_1;
	                document.getElementById('address2').value = settings.address_line_2;
	                document.getElementById('address-town').value = settings.address_city;
	                window.state = settings.address_state;
	                document.getElementById('address-postcode').value = settings.address_postcode;
	                document.getElementById('tel').value = settings.phone;
	            } else {
	                for (var j = 0; j < inputs.length; j++) {
	                    inputs[j].disabled = false;
	                }
	            }
	        }
	    } else if (document.getElementById('move-residence-here') && $('#residence-form').is(':hidden')) {
	        show_residence_form();
	    }
	};

	var show_residence_form = function show_residence_form() {
	    var residenceForm = $('#residence-form');
	    var residenceDisabled = $('#residence-disabled');
	    residenceDisabled.insertAfter('#move-residence-here');
	    $('#error-residence').insertAfter('#residence-disabled');
	    residenceDisabled.removeAttr('disabled');
	    residenceForm.show();
	    residenceForm.submit(function (evt) {
	        evt.preventDefault();
	        var residence_value = residenceDisabled.val();
	        if (Validate.fieldNotEmpty(residence_value, document.getElementById('error-residence'))) {
	            Client.set_cookie('residence', residence_value);
	            Client.set_value('residence', residence_value);
	            BinarySocket.send({ set_settings: 1, residence: residence_value });
	        }
	    });
	};

	var generateState = function generateState() {
	    var state = document.getElementById('address-state');
	    if (state.length !== 0) return;
	    appendTextValueChild(state, Content.localize().textSelect, '');
	    if (Client.get_value('residence') !== '') {
	        BinarySocket.send({ states_list: Client.get_value('residence') });
	    }
	};

	var handleResidence = function handleResidence() {
	    generateBirthDate();
	    BinarySocket.init({
	        onmessage: function onmessage(msg) {
	            var select = void 0;
	            var response = JSON.parse(msg.data),
	                type = response.msg_type,
	                residenceDisabled = $('#residence-disabled');
	            if (type === 'set_settings') {
	                var errorElement = document.getElementById('error-residence');
	                if (response.hasOwnProperty('error')) {
	                    if (response.error.message) {
	                        elementInnerHtml(errorElement, response.error.message);
	                        errorElement.setAttribute('style', 'display:block');
	                    }
	                } else {
	                    errorElement.setAttribute('style', 'display:none');
	                    BinarySocket.send({ landing_company: Client.get_value('residence') });
	                }
	            } else if (type === 'landing_company') {
	                Cookies.set('residence', Client.get_value('residence'), { domain: '.' + document.domain.split('.').slice(-2).join('.'), path: '/' });
	                if ((Client.can_upgrade_gaming_to_financial(response.landing_company) && !Client.get_boolean('is_virtual') || Client.can_upgrade_virtual_to_financial(response.landing_company)) && !/maltainvestws/.test(window.location.href)) {
	                    window.location.href = url_for('new_account/maltainvestws');
	                } else if (Client.can_upgrade_virtual_to_japan(response.landing_company) && Client.get_boolean('is_virtual') && !/japanws/.test(window.location.href)) {
	                    window.location.href = url_for('new_account/japanws');
	                } else if (!$('#real-form').is(':visible')) {
	                    BinarySocket.send({ residence_list: 1 });
	                    $('#residence-form').hide();
	                    residenceDisabled.insertAfter('#move-residence-back');
	                    $('#error-residence').insertAfter('#residence-disabled');
	                    residenceDisabled.attr('disabled', 'disabled');
	                    generateState();
	                    $('#real-form').show();
	                }
	            } else if (type === 'states_list') {
	                select = $('#address-state');
	                var states = response.states_list;

	                select.empty();

	                if (states && states.length > 0) {
	                    states.forEach(function (state) {
	                        select.append($('<option/>', { value: state.value, text: state.text }));
	                    });
	                } else {
	                    select.replaceWith($('<input/>', { id: 'address-state', name: 'address_state', type: 'text', maxlength: '35' }));
	                }
	                $('#address-state').parent().parent().show();
	                if (window.state) {
	                    $('#address-state').val(window.state);
	                }
	            } else if (type === 'residence_list') {
	                select = document.getElementById('residence-disabled') || document.getElementById('residence');
	                var phoneElement = document.getElementById('tel'),
	                    residenceValue = Client.get_value('residence'),
	                    residence_list = response.residence_list;
	                if (residence_list.length > 0) {
	                    for (var j = 0; j < residence_list.length; j++) {
	                        var residence = residence_list[j];
	                        if (select) {
	                            appendTextValueChild(select, residence.text, residence.value, residence.disabled ? 'disabled' : undefined);
	                        }
	                        if (residenceValue !== 'jp' && phoneElement && phoneElement.value === '' && residence.phone_idd && residenceValue === residence.value) {
	                            phoneElement.value = '+' + residence.phone_idd;
	                        }
	                    }
	                    if (residenceValue && select) {
	                        select.value = residenceValue;
	                    }
	                    if (document.getElementById('virtual-form')) {
	                        BinarySocket.send({ website_status: 1 });
	                    }
	                }
	            } else if (type === 'website_status') {
	                var status = response.website_status,
	                    $residence = $('#residence');
	                if (status && status.clients_country) {
	                    (function () {
	                        var clientCountry = $residence.find('option[value="' + status.clients_country + '"]');
	                        if (!clientCountry.attr('disabled')) {
	                            clientCountry.prop('selected', true);
	                        }
	                        var email_consent_parent = $('#email_consent').parent().parent();
	                        if (status.clients_country === 'jp' || japanese_client()) {
	                            if (!document.getElementById('japan-label')) $residence.parent().append('<label id="japan-label">' + localize('Japan') + '</label>');
	                            email_consent_parent.removeClass('invisible');
	                        } else {
	                            $residence.removeClass('invisible').on('change', function () {
	                                if ($(this).val() === 'jp') {
	                                    email_consent_parent.removeClass('invisible');
	                                } else {
	                                    email_consent_parent.addClass('invisible');
	                                }
	                            });
	                        }
	                    })();
	                }
	            } else if (type === 'get_financial_assessment' && objectNotEmpty(response.get_financial_assessment)) {
	                var keys = Object.keys(response.get_financial_assessment);
	                keys.forEach(function (key) {
	                    var val = response.get_financial_assessment[key];
	                    $('#' + key).val(val);
	                });
	            }
	        }
	    });
	};

	module.exports = {
	    displayAcctSettings: displayAcctSettings,
	    handleResidence: handleResidence
	};

/***/ },
/* 422 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var japanese_client = __webpack_require__(307).japanese_client;
	var localize = __webpack_require__(423).localize;
	var elementInnerHtml = __webpack_require__(420).elementInnerHtml;

	function generateBirthDate() {
	    var days = document.getElementById('dobdd'),
	        months = document.getElementById('dobmm'),
	        year = document.getElementById('dobyy');

	    if (!days || document.getElementById('dobdd').length > 1) return;

	    // days
	    dropDownNumbers(days, 1, 31);
	    // months
	    dropDownMonths(months, 1, 12);
	    // years
	    var currentYear = new Date().getFullYear(),
	        startYear = currentYear - 100,
	        endYear = currentYear - 17;
	    dropDownNumbers(year, startYear, endYear);

	    if (japanese_client()) {
	        elementInnerHtml(days.options[0], localize('Day'));
	        elementInnerHtml(months.options[0], localize('Month'));
	        elementInnerHtml(year.options[0], localize('Year'));
	    }
	}

	// append numbers to a drop down menu, eg 1-30
	function dropDownNumbers(select, startNum, endNum) {
	    select.appendChild(document.createElement('option'));

	    for (var i = startNum; i <= endNum; i++) {
	        var option = document.createElement('option');
	        option.text = i;
	        option.value = i;
	        select.appendChild(option);
	    }
	}

	function dropDownMonths(select, startNum, endNum) {
	    var months = localize(['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']);
	    select.appendChild(document.createElement('option'));
	    for (var i = startNum; i <= endNum; i++) {
	        var option = document.createElement('option');
	        if (i <= '9') {
	            option.value = '0' + i;
	        } else {
	            option.value = i;
	        }
	        for (var j = i; j <= i; j++) {
	            option.text = months[j - 1];
	        }
	        select.appendChild(option);
	    }
	}

	module.exports = {
	    generateBirthDate: generateBirthDate
	};

/***/ },
/* 423 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var texts_json = __webpack_require__(424).texts_json;
	var template = __webpack_require__(419).template;
	var moment = __webpack_require__(308);

	var Localize = function () {
	    var texts = {};
	    var localizedTexts = void 0;
	    var init = function init() {
	        // make texts objects localizable
	        Object.keys(texts_json).forEach(function (key) {
	            texts[key] = texts_json[key] ? texts_json[key] : {};
	        });
	    };

	    var localizeForLang = function localizeForLang(lang) {
	        init();
	        localizedTexts = texts[lang];
	        moment.locale(lang.toLowerCase());
	    };

	    var do_localize = function do_localize(text, params) {
	        var index = text.replace(/[\s|.]/g, '_');
	        text = localizedTexts && localizedTexts[index] || text;
	        // only do templating when explicitly required
	        return params ? template(text, params) : text;
	    };

	    var localize = function localize(text, params) {
	        if (Array.isArray(text)) {
	            return text.map(function (t) {
	                return do_localize(t, params);
	            });
	        }
	        // else
	        return do_localize(text, params);
	    };

	    return {
	        localizeForLang: localizeForLang,
	        localize: localize
	    };
	}();

	module.exports = {
	    localize: Localize.localize,
	    localizeForLang: Localize.localizeForLang
	};

/***/ },
/* 424 */
/***/ function(module, exports) {

	"use strict";

	var texts_json = {};
	texts_json['EN'] = { "[ctx,minimum_duration,_for_example_minimum_15_seconds]min": "min" };
	texts_json['DE'] = { "months": "Monate", "Your_details_have_been_updated_": "Ihre Angaben wurden aktualisiert.", "Forex_trading_experience": "Devisenhandelserfahrung", "Connection_error:_Please_check_your_internet_connection_": "Verbindungsfehler: Bitte überprüfen Sie Ihre Internetverbindung.", "Su": "So", "Please_select": "Bitte wählen Sie", "Transaction_performed_by_[_1]_(App_ID:_[_2])": "Überweisung durchgeführt von [_1] (App ID: [_2])", "You_did_not_change_anything_": "Sie haben nichts geändert.", "Save_as_SVG": "Als SVG speichern", "In/Out": "Innerhalb/Außerhalb", "Margin_FX": "Margen FX", "Education": "Ausbildung", "Closed": "Geschlossen", "Original_High_Barrier": "Ursprüngliche obere Grenze", "Please_complete_the_following_financial_assessment_form_before_continuing_": "Bevor Sie fortfahren, füllen Sie bitte das nachfolgende finanzielle Beurteilungsformular aus.", "Are_you_sure_that_you_want_to_permanently_delete_token": "Sind Sie sicher, dass Sie den Token endgültig löschen möchten?", "Please_log_in_": "Melden Sie sich bitte an.", "Trading_Times": "Börsenzeiten", "Update": "Aktualisieren", "seconds": "Sekunden", "Transfer_to_Login_ID": "Wechsel zur Login ID", "New_Password": "Neues Passwort", "Short": "Kurz", "Your_Application_is_Being_Processed_": "Ihr Antrag wird bearbeitet.", "Senior_Perl_Developer": "Leitender Perl-Entwickler", "Information_Technology": "Informationstechnologie", "Quantitative_Analyst": "Quantitativer Analyst", "Number_of_ticks": "Anzahl der Ticks", "Adjusted_High_Barrier": "Angepasste obere Grenze", "Points": "Punkte", "Less_than_$25,000": "Weniger als 25.000 $", "Sunday": "Sonntag", "Time_is_in_the_wrong_format_": "Die Zeit ist im falschen Format.", "Back": "Zurück", "Please_[_1]_to_view_this_page": "Bitte [_1], um diese Seite anzuzeigen", "Jump_To": "Springen zu", "Your_account_is_currently_suspended__Only_withdrawals_are_now_permitted__For_further_information,_please_contact_[_1]_": "Ihr Konto ist derzeit gesperrt. Jetzt sind nur Auszahlungen erlaubt. Setzen Sie sich bitte mit [_1] in Verbindung, um mehr Informationen zu erhalten.", "Over_$500,001": "Über $ 500.001", "Loss": "Verlust", "Th": "Do", "High_Barrier": "Hohe Schwelle", "Action": "Handlung", "Settings": "Einstellungen", "Not": "Nicht", "Dec": "Dez", "6-10_transactions_in_the_past_12_months": "6-10 Transaktionen in den letzten 12 Monaten", "Anti-Fraud_Officer": "Betrugsbekämpfungsbeauftragter", "Contract_ID": "Kontrakt ID", "Commodities_trading_experience": "Rohstoff Handelserfahrung", "High_barrier": "Hohe Schwelle", "Deposits_and_withdrawal_for_your_account_is_not_allowed_at_this_moment__Please_contact_[_1]_to_unlock_it_": "Derzeit sind Einzahlungen und Auszahlungen nicht erlaubt. Bitte setzen Sie sich mit [_1] in Verbindung, um es freizuschalten.", "Period": "Zeitraum", "Resale_not_offered": "Wiederverkauf wird nicht angeboten", "Primary": "Primär", "Last_Digit_Stats": "Statistiken der Letzten Stelle", "Tuesday": "Dienstag", "Other_financial_instruments_trading_experience": "Handelserfahrung mit anderen Finanzinstrumenten", "Please_input_a_valid_date": "Bitte geben Sie ein gültiges Datum ein", "PM": "nachmittags", "Failed_to_reset_password__[_1],_please_retry_": "Das Zurücksetzen des Passworts ist fehlgeschlagen. [_1], bitte erneut versuchen.", "Marketing_Project_Manager": "Marketing Projektmanager", "Payout": "Auszahlung", "Your_session_duration_limit_will_end_in_[_1]_seconds_": "Das Limit Ihrer Sitzungsdauer endet in [_1] Sekunden.", "Purchase": "Kauf", "Low_barrier_offset": "Verschiebung der unteren Schwelle", "Password_should_have_lower_and_uppercase_letters_with_numbers_": "Das Passwort muss Klein- und Großbuchstaben sowie Zahlen enthalten.", "There_was_a_problem_validating_your_personal_details__Please_fix_the_fields_[_1]here": "Bei der Bestätigung Ihrer personenbezogenen Daten ist ein Problem aufgetreten. Bitte berichtigen Sie diese Felder [_1]hier", "Applications": "Anwendungen", "The_two_passwords_that_you_entered_do_not_match_": "Die beiden Passwörter, die Sie eingegeben haben, stimmen nicht überein.", "Sorry,_an_error_occurred_while_processing_your_account_": "Es tut uns leid, bei der Bearbeitung Ihres Kontos ist ein Fehler aufgetreten.", "Sorry,_your_account_is_not_authorised_for_any_further_contract_purchases_": "Es tut uns leid, aber Ihr Konto ist für den Erwerb weiterer Kontrakte nicht berechtigt.", "week": "Woche", "Market_is_closed__Please_try_again_later_": "Börse ist derzeit geschlossen. Bitte versuchen Sie es später erneut.", "No_Live_price_update": "Keine Live Kursaktualisierung", "Try_adding_more_letters_or_numbers_": "Versuchen Sie mehr Buchstaben oder Zahlen hinzuzufügen.", "Stop-type": "Stopp-Art", "Keep_track_of_your_authorised_applications_": "Verfolgen Sie Ihre genehmigten Anwendungen.", "Amount": "Betrag", "Quality_Assurance_Engineer": "Qualitätssicherungsingenieur", "Over_$1,000,000": "Über $1.000.000", "Statement": "Abrechnung", "Finish": "Beenden", "Financial_Assessment": "Finanzielle Beurteilung", "Year": "Jahr", "hours": "Stunden", "February": "Februar", "Graphic_Designers": "Grafikdesigner", "Less_than_$100,000": "Weniger als 100.000 $", "Ms": "Frl.", "December": "Dezember", "The_Payment_Agent_facility_is_currently_not_available_in_your_country_": "In Ihrem Land ist derzeit kein Zahlungsagent vorhanden.", "You_must_accept_the_terms_and_conditions_to_open_an_account_": "Sie müssen die Geschäftsbedingungen akzeptieren, um ein Konto eröffnen zu können.", "Fridays": "Freitage", "Password_is_strong": "Passwort ist stark", "Sale_Date": "Verkaufsdatum", "Buy": "Kaufen", "Corporate_Action": "Unternehmenshandlung", "password": "Passwort", "0-1_year": "0-1 Jahre", "To": "An", "Date_(GMT)": "Datum (GMT)", "High_Barrier_([_1])": "Hohe Schwelle ([_1])", "Closes_early_(at_18:00)": "Schließt früh (um 18:00)", "Balance": "Guthaben", "Contract_Expiry": "Kontraktauslauf", "Binary_options_or_other_financial_derivatives_trading_frequency": "Handelshäufigkeit mit Binären Optionen oder anderen Finanzderivaten", "Last_Used": "Zuletzt verwendet", "An_additional_password_can_be_used_to_restrict_access_to_the_cashier_": "Es darf ein zusätzliches Passwort verwendet werden, um den Zugang zum Kassensabschnitt zu beschränken.", "When_you_click_\"Ok\"_you_will_be_excluded_from_trading_on_the_site_until_the_selected_date_": "Wenn Sie auf 'Ok' klicken, werden Sie bis zum ausgewählten Datum vom Handel auf dieser Site ausgeschlossen.", "Exit_Spot": "Schlusskurs", "Contract_purchased_with_app_ID": "Kontrakt mit App ID erworben", "Human_Resource_Executive": "Personalmanager", "October": "Oktober", "Targeting_short-term_profits": "Auf kurzfristige Gewinne gerichtet", "Only_2_decimal_points_are_allowed_": "Es sind nur 2 Dezimalstellen erlaubt.", "Country_Manager": "Ländermanager", "Remaining_Time": "Verbleibende Zeit", "Verification_Token": "Verifikationstoken", "Today": "Heute", "second": "Sekunde", "This_contract_has_WON": "Dieser Kontrakt hat GEWONNEN", "Delete": "Löschen", "This_is_a_staging_server_-_For_testing_purposes_only": "Dies ist ein Staging-Server - Nur zu Testzwecken", "40_transactions_or_more_in_the_past_12_months": "40 Transaktionen, oder mehr, in den letzten 12 Monaten", "We_are_not_accepting_accounts_from_residents_of_this_country_at_the_present_time_": "Derzeit lehnen wir die Eröffnung von Konten für Einwohner dieses Landes ab.", "Stocks_trading_experience": "Aktienhandelserfahrung", "Weekday": "Wochentag", "Minimum_of_[_1]_characters_required_": "Mindestens [_1] Zeichen sind erforderlich.", "Please_check_your_email_to_retrieve_the_token_needed_to_reset_your_password_": "Bitte überprüfen Sie Ihren E-Mail Eingang, um den Token, der für die Zurücksetzung Ihres Passworts nötig ist, abzurufen.", "Old_password_is_wrong_": "Altes Passwort ist falsch.", "Your_current_balance_is": "Ihr aktuelles Guthaben beträgt", "Password_does_not_match_": "Passwort stimmt nicht überein.", "Entry_Spot": "Startkurs", "Tu": "Di", "You_need_to_finish_all_20_questions_": "Sie müssen alle 20 Fragen beantworten.", "Spot_Time": "Kassa-Zeit", "Exit_spot": "Schlusskurs", "0-5_transactions_in_the_past_12_months": "0-5 Transaktionen in den letzten 12 Monaten", "Target": "Ziel", "Your_account_has_no_Login/Logout_activity_": "Ihr Konto hat keine Anmelde- und/oder Abmeldeaktivität.", "Exclude_time_must_be_after_today_": "Die Ausschlusszeit muss nach dem heutigen Tag beginnen.", "New_token_created_": "Neuer Token generiert.", "is_required__Current_spread": "ist erforderlich. Aktueller Spread", "Format:_yyyy-mm-dd_(not_required_for_virtual-money_accounts)": "Format: jjjj-mm-tt (bei virtuellen Konten nicht erforderlich)", "Waiting_for_exit_tick_": "Warten auf den Endtick.", "Once_you_click_the_'Submit'_button,_the_funds_will_be_withdrawn_from_your_account_and_transferred_to_your_Client's_account_": "Wenn Sie auf \"Abschicken\" klicken, wird der Betrag von Ihrem Konto abgebucht und auf Ihr Kundenkonto überwiesen.", "End_Time": "Endzeit", "Long": "Lang", "Over_3_years": "Über 3 Jahre", "verification_token": "Verifikationstoken", "Sell": "Verkaufen", "Adjusted_Barrier": "Veränderte Grenze", "July": "Juli", "Return": "Rendite", "Original_Barrier": "Ursprüngliche Grenze", "today,_Fridays": "heute, Freitage", "Terms_&_Conditions": "Allgemeine Geschäftsbedingungen", "Entry_spot": "Startkurs", "Stop_Profit_Level": "Stop Profit Höhe", "Contract_Confirmation": "Vertragsbestätigung", "Password_is_moderate": "Passwort ist moderat", "Stop_Loss_Level": "Stop Loss Höhe", "Successful": "Erfolgreich", "Date_and_Time": "Datum und Zeit", "Select_your_market": "Wählen Sie Ihren Markt", "(Bejing/CST_-8_hours)": "(Peking/CST -8 Stunden)", "Day": "Tag", "days": "Tage", "From": "Von", "Your_password_has_been_successfully_reset__Please_log_into_your_account_using_your_new_password_": "Ihr Passwort wurde erfolgreich zurückgesetzt. Bitte loggen Sie mit Ihrem neuen Passwort in Ihr Konto ein.", "Your_withdrawal_limit_is_[_1]_[_2]_": "Ihr Abhebelimit beträgt  [_1] [_2].", "View": "Ansehen", "January": "Januar", "Major_Pairs": "Wichtigste Paare", "weeks": "Wochen", "Contract_/_Temporary_/_Part_Time": "Vertrag / Befristet / Teilzeit", "[ctx,minimum_duration,_for_example_minimum_15_seconds]min": "Minuten", "Exit_Level": "Ausstiegshöhe", "Proofreader": "Korrektor", "Virtual_Account": "Virtuelles Konto", "Open_a_Financial_Account": "Eröffnen Sie ein Finanzkonto", "Wednesday": "Mittwoch", "Questions": "Fragen", "Christmas_Day": "Weihnachtstag", "Failed_to_update_trade_description_": "Aktualisierung der Kontraktbeschreibung fehlgeschlagen.", "Confirm_New_Password": "Neues Passwort bestätigen", "Current": "Derzeit", "Level_of_Education": "Ausbildungsgrad", "Price": "Kurs", "Please_choose_which_currency_you_would_like_to_transact_in_": "Bitte wählen Sie die Währung aus, in der Sie Transaktionen abwickeln möchten.", "Note": "Anmerkung", "Sell_time": "Verkaufszeit", "Password_is_not_strong_enough_": "Passwort ist nicht stark genug.", "Password_is_weak": "Passwort ist schwach", "For_added_security,_please_check_your_email_to_retrieve_the_verification_token_": "Bitte sehen Sie zur zusätzlichen Sicherheit bei Ihren E-Mails nach, um den Verfikationstoken abzurufen.", "Sorry,_account_opening_is_unavailable_": "Leider ist die Kontoeröffnung nicht möglich.", "mins": "Min", "Upgrade_to_a_Real_Account": "Erweitern Sie auf ein Echtgeldkonto", "Please_confirm_the_trade_on_your_statement_before_proceeding_": "Bevor Sie fortfahren, bestätigen Sie bitte das Geschäft in Ihrem Auszug.", "Our_site_does_not_charge_any_transfer_fees_": "Unsere Site berechnet keine Überweisungsgebühren.", "Invalid_date_of_birth_": "Falsches Geburtsdatum.", "Miss": "Verpasst", "Save_as_JPEG": "Als JPEG speichern", "Salaried_Employee": "Abhängig Beschäftigte/r", "[_1]_[_2]_has_been_credited_to_your_Virtual_money_account_[_3]": "[_1] [_2] wurden Ihrem virtuellen Geldkonto [_3] gutgeschrieben", "Social_Media_Executive": "Leitender Angestellter für Soziale Medien", "Net_Annual_Income": "Nettojahreseinkommen", "We_are_not_able_to_stream_live_prices_at_the_moment__To_enjoy_live_streaming_of_prices_try_refreshing_the_page,_if_you_get_this_issue_after_repeated_attempts_try_a_different_browser": "Wir können zu diesem Zeitpunkt keine Kurse live anzeigen. Zur Ansicht der Echtzeitanzeige der Kurse sollten Sie diese Seite über den Browser aktualisieren. Wenn das Problem nach wiederholten Aktualisierungen der Seite weiter besteht, sollten Sie einen anderen Browser ausprobieren", "Contract_Sold": "Kontrakt verkauft", "Please_select_a_payment_agent": "Bitte wählen Sie einen Zahlungsagent aus", "May": "Mai", "Please_select_at_least_one_scope": "Bitte wählen Sie zumindest einen Bereich aus", "today": "heute", "Transfer_to": "Überweisung an", "Exclude_time_cannot_be_for_more_than_5_years_": "Die Ausschlusszeit darf nicht länger als 5 Jahre sein.", "Deposit": "Einzahlung", "Charting_for_this_underlying_is_delayed": "Die grafische Darstellung für diesen Basiswert ist verzögert", "Please_deposit_before_transfer_to_client_": "Bitte einzahlen, bevor Sie an den Kunden überweisen.", "Translator": "Übersetzer", "There_was_a_problem_accessing_the_server_": "Es gab ein Problem beim Zugriff auf den Server.", "Contract": "Kontrakt", "Indices_trading_frequency": "Indizes Handelshäufigkeit", "Your_withdrawal_limit_is_[_1]_[_2]_(or_equivalent_in_other_currency)_": "Ihr Auszahlungslimit beträgt  [_1] [_2] (oder Gegenwert in anderer Währung).", "Upgrade_to_a_Financial_Account": "In ein Finanzkonto ändern", "Health": "Befinden", "Failed": "Fehlgeschlagen", "Please_enter_a_valid_amount_": "Bitte geben Sie einen gültigen Betrag ein.", "Asset_Index": "Vermögensindex", "Binary_options_or_other_financial_derivatives_trading_experience": "Erfahrung mit Binären Optionen oder Handel mit anderen Finanzderivaten", "High_barrier_offset": "Hohe Schwellenverschiebung", "Chart": "Diagramm", "year": "Jahr", "AM": "morgens", "Your_transaction_reference_is": "Ihre Überweisungsreferenz lautet", "Gaming_Account": "Spielkonto", "Profit/Loss_(points)": "Gewinn/Verlust (Punkte)", "Your_provided_email_address_is_already_in_use_by_another_Login_ID__According_to_our_terms_and_conditions,_you_may_only_register_once_through_our_site__If_you_have_forgotten_the_password_of_your_existing_account,_please_<a_href=\"[_1]\">try_our_password_recovery_tool</a>_or_contact_customer_service_": "Sie haben eine E-Mail Adresse angegeben, die schon von einer anderen Login ID verwendet wird. Gemäß unserer Allgemeinen Geschäftsbedingungen dürfen Sie sich nur ein Mal auf unserer Site anmelden. Wenn Sie Ihr Passwort für Ihr bestehendes Konto vergessen haben, rufen Sie bitte  <a href=\"[_1]\">unser Passwort Wiederherstellungstool auf</a> oder setzen sich mit dem Kundendienst in Verbindung.", "Session_duration_limit_cannot_be_more_than_6_weeks_": "Die Sitzungsdauer kann nicht mehr als 6 Wochen betragen.", "Equals": "Gleicht", "The_financial_trading_services_contained_within_this_site_are_only_suitable_for_customers_who_are_able_to_bear_the_loss_of_all_the_money_they_invest_and_who_understand_and_have_experience_of_the_risk_involved_in_the_acquistion_of_financial_contracts__Transactions_in_financial_contracts_carry_a_high_degree_of_risk__If_purchased_contracts_expire_worthless,_you_will_suffer_a_total_loss_of_your_investment,_which_consists_of_the_contract_premium_": "Die Finanzhandelsdienste, die diese Site enthält, eignen sich nur für Kunden, die einen Verlust ihres gesamten investierten Geldes verkraften können und die die Risiken erkennen, die mit dem Erwerb von Finanzverträgen im Zusammenhang stehen und damit Erfahrung haben. Transaktionen mit Finanzkontrakten beinhalten ein hohes Risiko. Wenn erworbene Kontrakte wertlos auslaufen, geht Ihre gesamte Investition, die aus der Kontraktprämie besteht, verloren.", "Description": "Beschreibung", "Profit/Loss": "Gewinn/Verlust", "Real_Account": "Echtes Konto", "Withdrawal": "Auszahlung", "login": "Login", "Predict_the_direction<br_/>and_purchase": "Sagen Sie die Richtung voraus<br />und kaufen Sie", "Print_chart": "Chart drucken", "The_maximum_number_of_tokens_([_1])_has_been_reached_": "Die Höchstzahl an Token ([_1]) wurde erreicht.", "You_have_sold_this_contract_at_[_1]_[_2]": "Sie haben diesen Kontrakt für [_1] [_2] verkauft", "IP_Address": "IP-Adresse", "Your_trading_statistics_since_[_1]_": "Ihre Trading-Statistiken seit [_1].", "Low_Barrier": "Untere Schwelle", "Purchase_Price": "Kaufpreis", "New_Year's_Day": "Neujahrstag", "This_field_is_required_": "Dieses Feld ist erforderlich.", "Please_select_a_value": "Bitte wählen Sie einen Wert aus", "Due_to_recent_changes_in_the_regulations,_we_are_required_to_ask_our_clients_to_complete_the_following_Financial_Assessment__Please_note_that_you_will_not_be_able_to_continue_trading_until_this_is_completed_": "Wegen der kürzlich vorgenommenen Änderungen der Vorschriften sind wir gezwungen, unsere Kunden zu bitten, die folgende Finanzielle Beurteilung auszufüllen. Bitte beachten Sie, dass Sie, bis diese ausgefüllt ist, nicht weiter Handel treiben können.", "Your_Client_will_receive_an_email_notification_informing_him/her_that_the_transfer_has_been_processed_": "Ihr Kunde wird eine E-Mail Benachrichtigung erhalten, in der er/sie darüber informiert wird, dass die Überweisung bearbeitet wurde.", "min:_1,000": "Min: 1.000", "Revoke_access": "Zugang widerrufen", "Try_adding_more_letters_": "Versuchen Sie mehr Buchstaben hinzuzufügen.", "Senior_Front-End_Developer": "Leitender Frontend-Entwickler", "Month": "Monat", "Start_Time": "Startzeit", "Low_Barrier_([_1])": "Untere Schwelle ([_1])", "Affiliate": "Geschäftspartner", "Unlock_Cashier": "Kasse entsperren", "Hour": "Stunde", "Cashier": "Kasse", "Your_password_cannot_be_the_same_as_your_email": "Ihr Passwort kann nicht wie Ihre E-Mail Adresse lauten", "Sell_at_market": "Zum Börsenkurs verkaufen", "Exclude_time_cannot_be_less_than_6_months_": "Die Ausschlusszeit darf nicht kürzer als 6 Monate sein.", "Only_[_1]_are_allowed_": "Es sind nur [_1] erlaubt.", "Both_the_above": "Beide obige", "Potential_Payout": "Mögliche Auszahlung", "Sorry,_this_feature_is_available_to_virtual_accounts_only_": "Leider steht diese Funktion nur für virtuelle Konten zur Verfügung.", "Verification_code_format_incorrect_": "Format des Verifikationscodes falsch.", "Step": "Schritt", "Original_Low_Barrier": "Ursprüngliche untere Grenze", "Please_enter_a_date_that_is_at_least_6_months_from_now_": "Bitte geben Sie ein Datum ein, das mindestens 6 Monate in der Zukunft liegt.", "Stop-loss": "Stop-Loss", "Contract_Information": "Kontraktinformation", "Your_[_1]_day_withdrawal_limit_is_currently_[_2]_[_3]_(or_equivalent_in_other_currency)_": "Ihr [_1] Tage Abhebelimit beträgt derzeit [_2] [_3] (oder Gegenwert in einer anderen Währung).", "Walkthrough_Guide": "Kompletter Leitfaden", "Internal_Audit": "Interne Prüfung", "Therefore_your_current_immediate_maximum_withdrawal_(subject_to_your_account_having_sufficient_funds)_is_[_1]_[_2]_(or_equivalent_in_other_currency)_": "Daher ist Ihr aktuelles sofortiges Maximum für eine Abhebung (sofern Ihr Konto über ausreichend Guthaben verfügt) EUR [_1] [_2] (oder Gegenwert in einer anderen Währung).", "letters": "Buchstaben", "This_contract_won": "Dieser Vertrag gewann", "Other": "Sonstiges", "The_server_<a_href=\"[_1]\">endpoint</a>_is:_[_2]": "Der Server <a href=\"[_1]\">Endpunkt</a> ist: [_2]", "Password_Reset": "Passwort Zurücksetzung", "Credit/Debit": "Gutschrift/Lastschrift", "Now": "Jetzt", "Authorise_your_account_": "Autorisieren Sie Ihr Konto.", "email_address": "E-Mail Adresse", "Your_account_is_not_fully_authenticated_": "Ihr Konto ist nicht vollständig authentifiziert.", "Amount_per_point": "Betrag je Punkt", "Your_token_has_expired__Please_click_<a_class=\"pjaxload\"_href=\"[_1]\">here</a>_to_restart_the_verification_process_": "Ihr Token ist abgelaufen. Bitte klicken Sie <a class=\"pjaxload\" href=\"[_1]\">hier</a>, um den Verfikationsprozess zu wiederholen.", "If_you_need_assistance_feel_free_to_contact_our_[_1]Customer_Support": "Sollten Sie Hilfe benötigen, können Sie sich gerne mit unserer [_1]Kundenbetreuung in Verbindung setzen", "Indices_trading_experience": "Indizes Handelserfahrung", "Duration": "Laufzeit", "Sale_Price": "Verkaufskurs", "Explanation": "Erläuterung", "Lock_Cashier": "Kasse blockieren", "Login_History": "Login-Verlauf", "Deposit_[_1]_[_2]_virtual_money_into_your_account_[_3]": "Zahlen Sie [_1] [_2] virtuelles Geld auf Ihr Konto [_3] ein", "Your_cashier_is_locked_as_per_your_request_-_to_unlock_it,_please_enter_the_password_": "Ihre Kasse ist auf Ihren Antrag hin gesperrt - um Sie zu entsperren, geben Sie bitte das Passwort ein.", "Your_settings_have_been_updated_successfully_": "Ihre Einstellungen wurden erfolgreich aktualisiert.", "points": "Punkte", "Previous_Day": "Vorheriger Tag", "1-2_years": "1-2 Jahre", "Sorry,_this_feature_is_not_available_": "Leider ist diese Funktion nicht vorhanden.", "Upcoming_Events": "Bevorstehende Events", "Thursday": "Donnerstag", "Estimated_Net_Worth": "Geschätzter Nettowert", "Week_of": "Woche von", "Password_score_is:_[_1]__Passing_score_is:_20_": "Passwort Punktzahl ist: [_1]. Mindestpunktzahl ist: 20.", "minimum_available_duration": "kürzeste vorhandene Dauer", "All_markets_are_closed_now__Please_try_again_later_": "Alle Börsen sind derzeit geschlossen. Bitte versuchen Sie es später erneut.", "Last_digit_stats_for_the_latest_[_1]_ticks_on_[_2]": "Letzte Stellen Statistik der letzten [_1] Ticks von [_2]", "Contract_is_not_started_yet": "Kontrakt ist noch nicht gestartet", "You_have_already_withdrawn_[_1]_[_2]_": "Sie haben bereits [_1] [_2] abgehoben.", "Forex": "Devisenhandel", "comma": "Komma", "Select_your_trade_type": "Wählen Sie Ihren Trade-Typ aus", "hour": "Stunde", "Investments_&_Dividends": "Investitionen & Dividenden", "Profit_Table": "Gewinntabelle", "Reset_Password": "Passwort zurücksetzen", "Up/Down": "Auf/Ab", "$100,000_-_$500,000": "$100.000 - $500.000", "Quality_Assurance": "Qualitätssicherung", "Your_transaction_reference_number_is_[_1]": "Ihre Überweisungsnummer ist [_1]", "Please_enter_a_number_greater_or_equal_to_[_1]_": "Bitte geben Sie eine Zahl größer oder gleich groß wie [_1] ein.", "End_time_must_be_after_start_time_": "Die Endzeit muss nach der Startzeit beginnen.", "loading___": "wird geladen...", "Marketing_Executives": "Marketingleiter", "Adjusted_Low_Barrier": "Angepasste untere Grenze", "Please_check_your_email_for_the_value_of_this_token": "Bitte überprüfen Sie für den Wert dieses Token Ihren E-Mail Eingang", "Indicative": "Indikativ", "Quantitative_Analysis": "Quantitative Analyse", "Select_your_underlying_asset": "Wählen Sie Ihren Basiswert aus", "This_contract_can_not_be_traded_in_the_final_2_minutes_before_settlement": "Dieser Vertrag kann in den letzten 2 Minuten vor der Abwicklung nicht gehandelt werden", "Compliance_Executive": "Compliancebeauftragter", "New_password_is_same_as_old_password_": "Das neue Passwort ist das gleiche wie das alte Passwort.", "numbers": "Zahlen", "month": "Monat", "Password_must_contains_at_least_1_digit,_1_uppercase_letter_and_1_lowercase_letter_": "Das Passwort muss mindestens 1 Zahl, 1 Großbuchstaben und 1 Kleinbuchstaben enthalten.", "Investment_Account": "Investmentkonto", "An_error_occured_": "Es ist ein Fehler aufgetreten.", "Saturday": "Samstag", "period": "Zeitraum", "m": "M", "Global_Customer_Service_Representatives": "Globale Kundendienstmitarbeiter", "Barrier_([_1])": "Schwelle ([_1])", "Invalid_email_address": "Falsche E-Mail Adresse", "This_symbol_is_not_active__Please_try_another_symbol_": "Dieses Zeichen ist nicht aktiv. Bitte versuchen Sie ein anderes Zeichen.", "Confirm": "Bestätigen", "Please_follow_the_pattern_3_numbers,_a_dash,_followed_by_4_numbers_": "Bitte befolgen Sie dieses Muster: 3 Zahlen, ein Bindestrich, gefolgt von 4 Zahlen.", "Mrs": "Frau", "Your_cashier_is_locked_as_per_your_request_-_to_unlock_it,_please_click_[_1]here": "Ihre Kasse wurde auf Ihren Antrag hin gesperrt - um Sie wieder zu entsperren, klicken Sie bitte [_1] hier", "ticks": "Ticks", "Password": "Passwort", "Quantitative_Developer": "Quantitativer Entwickler", "Friday": "Freitag", "Next": "Weiter", "You_have_already_withdrawn_the_equivalent_of_[_1]_[_2]_in_aggregate_over_the_last_[_3]_days_": "Sie haben bereits den Gegenwert von [_1] [_2]  abgehoben, der sich in den letzten [_3] Tagen angesammelt hat.", "Permissions": "Berechtigungen", "apostrophe": "Apostroph", "Low_barrier": "Untere Schwelle", "minutes": "Minuten", "[_1]_Please_click_the_link_below_to_restart_the_password_recovery_process__If_you_require_further_assistance,_please_contact_our_Customer_Support_": "[_1] Bitte klicken Sie auf den nachfolgenden Link, um den Passwort Erneuerungsprozess zu starten. Wenn Sie weitere Unterstützung benötigen, setzen Sie sich bitte mit unserem Kundensupport in Verbindung.", "$100,000_-_$250,000": "$100.000 - $250.000", "Other_financial_instruments_trading_frequency": "Handelshäufigkeit von anderen Finanzinstrumenten", "Barrier_Change": "Grenzänderung", "Invalid_amount,_minimum_is": "Ungültiger Betrag, das Minimum ist", "This_feature_is_not_relevant_to_virtual-money_accounts_": "Diese Funktion ist für virtuelle Geldkonten nicht relevant", "End_time": "Endzeit", "Administrative_Executive": "Verwaltungsleiter", "Never_Used": "Nie verwendet", "You_should_enter_between_[_1]_characters_": "Sie müssen zwischen [_1] Zeichen eingeben.", "Pension": "Rente/Pension", "Industry_of_Employment": "Beschäftigungsbranche", "This_contract_was_affected_by_a_Corporate_Action_event_": "Dieser Kontrakt ist von einer Unternehmenshandlung betroffen.", "Mar": "Mär", "Self-Employed": "Selbstständig", "Current_Time": "Aktuelle Zeit", "Ends_In/Out": "Endet innerhalb/außerhalb", "You_have_not_granted_access_to_any_applications_": "Sie haben keinen Zugriff auf Anwendungen gewährt.", "Your_request_to_withdraw_[_1]_[_2]_from_your_account_[_3]_to_Payment_Agent_[_4]_account_has_been_successfully_processed_": "Ihr Auftrag, [_1] [_2] von Ihrem Konto [_3] auf das Konto des Zahlungsagent [_4] zu überweisen, wurde erfolgreich bearbeitet.", "Closes": "Schließt", "Accounts_And_Payments_Executive": "Buchhaltungs- & Zahlungsverkehrsleiter", "Forex_trading_frequency": "Devisenhandelshäufigkeit", "Invalid_amount,_maximum_is": "Ungültiger Betrag, das Maximum ist", "Total_Profit/Loss": "Gesamter Gewinn/Verlust", "minute": "Minute", "Prices": "Kurse", "Matches/Differs": "Gleich/Verschieden", "Finance": "Finanzen", "Save_as_PDF": "Als PDF speichern", "Please_enter_an_integer_value": "Bitte geben Sie einen ganzzahligen Wert ein", "Internal_Auditor": "Interner Revisor", "Remaining_time": "Verbleibende Zeit", "Your_changes_have_been_updated_": "Ihre Änderungen wurden aktualisiert.", "Potential_Profit": "Möglicher Gewinn", "Your_account_is_fully_authenticated_and_your_withdrawal_limits_have_been_lifted_": "Ihr Konto ist vollständig authentifiziert und Ihr Abhebelimit wurde angehoben.", "Save_as_PNG": "Als PNG speichern", "There_was_an_error": "Es ist ein Fehler aufgetreten", "Start_time": "Startzeit", "This_contract_lost": "Dieser Kontrakt verlor", "True": "Wahr", "Open": "Offen", "Details": "Angaben", "Reference_ID": "Referenznr.", "This_contract_has_LOST": "Dieser Kontrakt hat VERLOREN", "Income_Source": "Einkommensquelle", "Purchase_Time": "Kaufuhrzeit", "Enter_the_barrier_in_terms_of_the_difference_from_the_spot_price__If_you_enter_+0_005,_then_you_will_be_purchasing_a_contract_with_a_barrier_0_005_higher_than_the_entry_spot__The_entry_spot_will_be_the_next_tick_after_your_order_has_been_received": "Geben Sie die Schwelle für die Differenz zum Kassakurs an. Wenn Sie +0,005 eingeben, erwerben Sie einen Kontrakt mit einer 0,005 höheren Schwelle als der Startkurs. Der Startkurs ist der nächste Tick nachdem Ihr Auftrag eingegangen ist", "Please_enter_a_number_between_[_1]_": "Bitte geben Sie eine Zahl zwischen [_1] ein.", "Please_wait_<br_/>Your_request_is_being_processed_": "Bitte warten Sie.<br />Ihre Anfrage wird bearbeitet.", "Entry_Level": "Einstiegshöhe", "Net_profit": "Nettogewinn", "Last_Digit_Prediction": "Voraussage der Letzten Stelle", "Construction": "Aufbau", "$25,000_-_$100,000": "$25.000 - $100.000", "min": "Min.", "Select_market": "Wählen Sie den Markt", "Please_check_the_above_form_for_pending_errors_": "Bitte überprüfen Sie das oben stehende Formular nach ausstehenden Fehlern.", "Stays_In/Goes_Out": "Bleibt in/Geht außerhalb", "March": "März", "Mr": "Herr", "Insufficient_balance_": "Unzureichendes Guthaben.", "Authenticate": "Authentifizieren", "Waiting_for_entry_tick_": "Warten auf den Eingangstick.", "Date": "Datum", "Stocks_trading_frequency": "Aktienhandelshäufigkeit", "Deposit_of": "Einzahlung in Höhe von", "Date_of_Birth": "Geburtsdatum", "space": "Bereich", "Secondary": "Sekundäre/r", "Monday": "Montag", "June": "Juni", "View_your_statement": "Ihre Abrechnung ansehen", "Oct": "Okt", "Are_you_sure_that_you_want_to_permanently_revoke_access_to_application": "Sind Sie sicher, dass Sie den Zugang endgültig widerrufen möchten", "You_have_already_withdrawn_the_equivalent_of_[_1]_[_2]_": "Sie haben bereits den Gegenwert von [_1] [_2] abgehoben.", "Closes_early_(at_21:00)": "Schließt früh (um 21:00)", "Sorry,_account_signup_is_not_available_in_your_country__Please_contact_<a_href=\"[_1]\">customer_support</a>_for_more_information_": "Es tut uns leid, die Anmeldung ist in Ihrem Land nicht vorhanden. Bitte kontaktieren Sie die <a class=\"pjaxload\" href=\"[_1]\">Kundenbetreuung</a>, um weitere Informationen zu erhalten.", "Profit": "Rendite", "Stake": "Einsatz", "Resources": "Quellen", "Opens": "Öffnet", "Even/Odd": "Gerade/ungerade", "details": "Angaben", "hyphen": "Trennungsstrich", "Current_Level": "Aktuelle Höhe", "Total_Cost": "Gesamtkosten", "Save_as_CSV": "Als CSV speichern", "Withdraw": "Abheben", "Exercise_period": "Ausübungszeitraum", "Exit_Spot_Time": "Schlusskurszeit", "Accounting": "Buchhaltung", "When_you_click_'Ok'_you_will_be_excluded_from_trading_on_the_site_until_the_selected_date_": "Wenn Sie auf 'Ok' klicken, werden Sie bis zum ausgewählten Datum vom Handel auf dieser Site ausgeschlossen.", "Barrier_offset": "Schwellenverschiebung", "Human_Resources": "Personalabteilung", "Please_confirm_the_transaction_details_in_order_to_complete_the_transfer:": "Bitte bestätigen Sie die Transaktionsdaten, um den Transfer zu vervollständigen:", "not_available": "nicht vorhanden", "All_barriers_in_this_trading_window_are_expired": "Alle Schwellen in diesem Handelsfenster sind abgelaufen", "Rise/Fall": "Steigen/Fallen", "Start_Trading": "Handel beginnen", "Previous": "Vorige", "My_Account": "Mein Konto", "Processing_your_request___": "Ihre Anfrage wird bearbeitet...", "Tertiary": "Tertiär", "Please_fill_in_the_Login_ID_and_Amount_you_wish_to_transfer_to_your_Client_in_the_form_below:": "Bitte tragen Sie im nachfolgenden Formular die Login ID und den Betrag ein, den Sie Ihrem Kunden überweisen möchten:", "False": "Falsch", "There_was_some_invalid_character_in_an_input_field_": "Es ist ein ungültiges Zeichen in einem Eingabefeld vorhanden.", "A_scanned_copy_of_your_passport,_driving_licence_(provisional_or_full)_or_identity_card,_showing_your_name_and_date_of_birth__Your_document_must_be_valid_for_at_least_6_months_after_this_date_": "Eine gescannte Kopie Ihres Reisepasses, gültigen Führerscheins (vorläufig oder endgültig) oder Personalausweises, auf der Ihr Name und das Geburtsdatum erkennbar sind.", "Sorry,_an_error_occurred_while_processing_your_request_": "Es tut uns leid, bei der Bearbeitung Ihrer Anfrage ist ein Fehler aufgetreten.", "Never": "Nie", "Please_enter_a_number_between_0_and_[_1]": "Bitte geben Sie eine Zahl zwischen 0 und [_1] ein", "Refresh_page": "Seite neu laden", "Tourism": "Tourismus", "Commodities_trading_frequency": "Rohstoffe Handelshäufigkeit", "We": "Mi", "Your_account_has_no_trading_activity_": "Ihr Konto hat keine Handelsaktivität.", "[_1]_has_updated_its_[_2]__By_clicking_OK,_you_confirm_that_you_have_read_and_accepted_the_updated_[_2]_": "[_1] hat seine [_2] aktualisiert. Wenn Sie auf OK klicken, bestätigen Sie, dass Sie die aktualisierten [_2] zur Kenntnis genommen haben.", "Please_submit_a_valid_[_1]_": "Bitte übermitteln Sie eine gültige [_1].", "day": "Tag", "Next_Day": "Nächster Tag", "Your_request_to_transfer_[_1]_[_2]_from_[_3]_to_[_4]_has_been_successfully_processed_": "Ihr Auftrag [_1] [_2] von [_3] an [_4] zu überweisen, wurde erfolgreich bearbeitet.", "Settles": "Begleicht", "Over/Under": "Über/Unter", "Therefore_your_current_immediate_maximum_withdrawal_(subject_to_your_account_having_sufficient_funds)_is_[_1]_[_2]_": "Daher beträgt Ihre derzeitige maximale Sofortabhebung (vorausgesetzt Ihr Konto hat ein ausreichendes Guthaben) [_1] [_2].", "Contract_will_be_sold_at_the_prevailing_market_price_when_the_request_is_received_by_our_servers__This_price_may_differ_from_the_indicated_price_": "Der Kontrakt wird, sobald der Auftrag von unseren Servern empfangen wurde, zum dann geltenden Marktkurs verkauft. Dieser Kurs kann von den angegebenen Kursen abweichen.", "years": "Jahre", "Touch/No_Touch": "Erreicht", "There_was_a_problem_accessing_the_server_during_purchase_": "Während des Kaufs ist ein Problem beim Zugriff auf den Server aufgetreten.", "Sorry,_you_have_entered_an_incorrect_cashier_password": "Es tut uns leid, aber Sie haben ein ungültiges Kassen-Passwort eingegeben", "Password_is_very_strong": "Passwort ist sehr stark", "Withdrawal_for_your_account_is_not_allowed_at_this_moment__Please_contact_[_1]_to_unlock_it_": "Auszahlungen von Ihrem Konto sind derzeit nicht erlaubt. Bitte setzen Sie sich mi [_1] in Verbindung, um es zu entsperren.", "Please_try_again_": "Bitte versuchen Sie es erneut.", "$250,000_-_$1,000,000": "$250.000-$1.000.000", "max:_100,000": "Max: 100.000", "Try_adding_more_numbers_": "Versuchen Sie, mehr Zahlen hinzuzufügen.", "Asset": "Kapital", "Barrier": "Schwelle", "Higher/Lower": "Höher/Tiefer", "Please_select_a_valid_date": "Bitte wählen Sie ein gültiges Datum aus", "Adjust_trade_parameters": "Anpassen von Handelsparametern", "Spot": "Kassakurs" };
	texts_json['ES'] = { "Login_History": "Historial de accesos", "Deposit_[_1]_[_2]_virtual_money_into_your_account_[_3]": "Deposite [_1] [_2] de dinero virtual en su cuenta [_3]", "Your_cashier_is_locked_as_per_your_request_-_to_unlock_it,_please_enter_the_password_": "Su cajero está bloqueado según su petición - para desbloquearlo, por favor introduzca la contraseña.", "Over_100_million_JPY": "Más de 100 millones JPY", "Jan": "Ene", "Explanation": "Explicación", "Lock_Cashier": "Bloquear cajero", "Your_token_has_expired__Please_click_<a_class=\"pjaxload\"_href=\"[_1]\">here</a>_to_restart_the_verification_process_": "Su token ha caducado. Por favor haga clic <a class=\"pjaxload\" href=\"[_1]\">aquí</a> para reiniciar el proceso de verificación.", "If_you_need_assistance_feel_free_to_contact_our_[_1]Customer_Support": "Si necesita ayuda no dude en ponerse en contacto con nuestro [_1] Servicio de Atención al Cliente", "Indices_trading_experience": "Experiencia de comercio con índices", "Sale_Price": "Precio venta", "Duration": "Duración", "Amount_per_point": "Cantidad por punto", "Hedging": "Cobertura", "Credit/Debit": "Crédito/débito", "Password_Reset": "Contraseña Restablecida", "Now": "Ahora", "Authorise_your_account_": "Autorice su cuenta.", "email_address": "correo electrónico", "Walkthrough_Guide": "Guía tutorial", "Therefore_your_current_immediate_maximum_withdrawal_(subject_to_your_account_having_sufficient_funds)_is_[_1]_[_2]_(or_equivalent_in_other_currency)_": "Por lo tanto, la cantidad máxima que puede retirar de forma inmediata (sujeta a la existencia de fondos suficientes en su cuenta) es [_1] [_2] (o su equivalente en otra divisa).", "Internal_Audit": "Auditoría interna", "letters": "letras", "This_contract_won": "Este contrato ganó", "Other": "Otro", "Stop-loss": "Stop loss", "Your_[_1]_day_withdrawal_limit_is_currently_[_2]_[_3]_(or_equivalent_in_other_currency)_": "Su [_1] límite diario para retirar dinero es actualmente [_2] [_3] (o el equivalente en otra divisa).", "Contract_Information": "Información del Contrato", "Step": "Paso", "Original_Low_Barrier": "Barrera Inferior Original", "Please_enter_a_date_that_is_at_least_6_months_from_now_": "Por favor, elija una fecha que es por lo menos 6 meses a partir de ahora.", "Verification_code_format_incorrect_": "El formato del código de verificación es incorrecto.", "Only_[_1]_are_allowed_": "Se permiten solo [_1].", "Both_the_above": "Ambos mencionados arriba", "Potential_Payout": "Pago potencial", "Sorry,_this_feature_is_available_to_virtual_accounts_only_": "Lo sentimos, esta característica está disponible solo para cuentas virtuales.", "Unlock_Cashier": "Desbloquear cajero", "Affiliate": "Afiliado", "No_experience": "Sin experiencia", "Cashier": "Cajero", "Your_password_cannot_be_the_same_as_your_email": "Su contraseña no puede ser la misma que su dirección de correo electrónico", "Sell_at_market": "Vender al precio actual", "Exclude_time_cannot_be_less_than_6_months_": "El tiempo de exclusión no puede ser menor a 6 meses.", "Name": "Nombre", "Senior_Front-End_Developer": "Desarrolador Senior de Front-End", "Month": "Mes", "Start_Time": "Hora de comienzo", "Your_Client_will_receive_an_email_notification_informing_him/her_that_the_transfer_has_been_processed_": "Su Cliente recibirá una notificación por correo electrónico informándole a él/ella que la transferencia ha sido procesada.", "Try_adding_more_letters_": "Pruebe añadir más letras.", "Revoke_access": "Revocar el acceso", "This_field_is_required_": "Este campo es obligatorio.", "Sa": "SA", "Due_to_recent_changes_in_the_regulations,_we_are_required_to_ask_our_clients_to_complete_the_following_Financial_Assessment__Please_note_that_you_will_not_be_able_to_continue_trading_until_this_is_completed_": "Debido a recientes cambios en las regulaciones, nos vemos obligados a pedir a nuestros clientes que completen el siguiente Asesramiento Financiero. Tenga en cuenta que no podrás seguir operando hasta que no lo complete.", "The_maximum_number_of_tokens_([_1])_has_been_reached_": "El máximo número de tokens ([_1]) ha sido alcanzado.", "You_have_sold_this_contract_at_[_1]_[_2]": "Usted ha vendido este contrato en [_1] [_2]", "IP_Address": "Dirección IP", "Your_trading_statistics_since_[_1]_": "Las estadísticas de sus transacciones desde [_1].", "Low_Barrier": "Barrera Inferior", "Purchase_Price": "Precio de compra", "6_months_to_1_year": "6 meses a un año", "Withdrawal": "Retiro", "login": "iniciar sesión", "Predict_the_direction<br_/>and_purchase": "Prediga la dirección<br /> y compre", "Print_chart": "Imprimir el gráfico", "Permissions": "Permisos", "apostrophe": "apóstrofe", "Low_barrier": "Barrera inferior", "minutes": "minutos", "[_1]_Please_click_the_link_below_to_restart_the_password_recovery_process__If_you_require_further_assistance,_please_contact_our_Customer_Support_": "[_1] Por favor haga clic en el enlace de abajo para reiniciar el proceso de recuperación de contraseña. Si necesita más ayuda, póngase en contacto con nuestro Servicio de Atención al Cliente.", "Barrier_Change": "Cambio de Límite", "Other_financial_instruments_trading_frequency": "Frecuencia de comercio con otros instrumentos financieros", "Invalid_amount,_minimum_is": "Monto inválido, el mínimo es", "Next": "Siguiente", "Quantitative_Developer": "Desarrollador Cuantitativo", "Password": "Contraseña", "Friday": "Viernes", "You_have_already_withdrawn_the_equivalent_of_[_1]_[_2]_in_aggregate_over_the_last_[_3]_days_": "Usted ya retiró un total equivalente a [_1] [_2]  en los últimos [_3] días.", "Confirm": "Confirmar", "Please_follow_the_pattern_3_numbers,_a_dash,_followed_by_4_numbers_": "Por favor, siga el patrón de 3 números y un guión seguido de 4 números.", "Mrs": "Srta.", "Your_cashier_is_locked_as_per_your_request_-_to_unlock_it,_please_click_[_1]here": "Su cajero está bloqueado por petición suya - para desbloquearlo, por favor haga clic [_1] aquí", "ticks": "intervalos", "Global_Customer_Service_Representatives": "Representantes del Servicio de Atención al Cliente Global", "Invalid_email_address": "Correo electrónico no válido", "50-100_million_JPY": "50-100 milliones JPY", "April": "Abril", "Investment_Account": "Cuenta de inversión", "Foreign_currency_deposit": "Depósito en moneda extranjera", "An_error_occured_": "Ha ocurrido un error.", "Saturday": "Sábado", "period": "período", "numbers": "números", "month": "mes", "Password_must_contains_at_least_1_digit,_1_uppercase_letter_and_1_lowercase_letter_": "La contraseña debe contener al menos 1 dígito, 1 letra mayúscula y 1 letra minúscula.", "New_password_is_same_as_old_password_": "La nueva contraseña es la misma que la contraseña anterior.", "Select_your_underlying_asset": "Seleccione el activo subyacente", "Compliance_Executive": "Ejecutivo de cumplimiento", "This_contract_can_not_be_traded_in_the_final_2_minutes_before_settlement": "Este contrato no puede ser operado en los últimos 2 minutos antes del final", "Marketing_Executives": "Ejecutivo de Marketing", "Adjusted_Low_Barrier": "Límite Inferior Ajustado", "Please_check_your_email_for_the_value_of_this_token": "Por favor verifique su correo electrónico para el valor de este token", "Indicative": "Indicativo", "Quantitative_Analysis": "Análisis Cuantitativo", "Reset_Password": "Restablecer contraseña", "Quality_Assurance": "Control de Calidad", "Up/Down": "Arriba/Abajo", "Please_enter_a_number_greater_or_equal_to_[_1]_": "Por favor ingrese un valor mayor o igual a [_1].", "Your_transaction_reference_number_is_[_1]": "El número de referencia de su transacción es [_1]", "loading___": "cargando...", "Investments_&_Dividends": "Inversiones y dividendos", "hour": "hora", "Portfolio": "Cartera", "Profit_Table": "Tabla de beneficios", "Browser": "Navegador", "You_have_already_withdrawn_[_1]_[_2]_": "Usted ya retiró [_1] [_2].", "Contract_is_not_started_yet": "El contrato no ha comenzado todavía", "comma": "coma", "Select_your_trade_type": "Seleccione el tipo de contrato", "Password_score_is:_[_1]__Passing_score_is:_20_": "La fuerza de la contraseña es: [_1]. El puntaje para aprobar es: 20.", "Estimated_Net_Worth": "Valor neto estimado", "Week_of": "Semana de", "minimum_available_duration": "duración mínima disponible", "All_markets_are_closed_now__Please_try_again_later_": "Todos los mercados están cerrados ahora. Inténtelo más tarde.", "Last_digit_stats_for_the_latest_[_1]_ticks_on_[_2]": "Los últimos dígitos para los [_1] intervalos más recientes a [_2]", "Upcoming_Events": "Próximos eventos", "Thursday": "Jueves", "Previous_Day": "Día Anterior", "1-2_years": "1-2 años", "Sorry,_this_feature_is_not_available_": "Esta funcionalidad no está disponible.", "Self-employed": "Autónomo", "Your_settings_have_been_updated_successfully_": "Su configuración se ha actualizado exitosamente.", "points": "puntos", "Monday": "Lunes", "Stocks_trading_frequency": "Frecuencia de comercio con acciones", "Deposit_of": "Depósito de", "Date_of_Birth": "Fecha de Nacimiento", "Secondary": "Secundario", "space": "espacio", "Mr": "Sr", "Authenticate": "Autenticar", "Waiting_for_entry_tick_": "Esperando el tick de entrada.", "Date": "Fecha", "Stays_In/Goes_Out": "Queda Dentro/Sale Fuera", "March": "Marzo", "Select_market": "Seleccione mercado", "Japan": "Japón", "Entry_Level": "Nivel de entrada", "Last_Digit_Prediction": "Predicción del último dígito", "Net_profit": "Beneficio Neto", "Construction": "Construcción", "Purchase_Time": "Hora de compra", "Enter_the_barrier_in_terms_of_the_difference_from_the_spot_price__If_you_enter_+0_005,_then_you_will_be_purchasing_a_contract_with_a_barrier_0_005_higher_than_the_entry_spot__The_entry_spot_will_be_the_next_tick_after_your_order_has_been_received": "Introduzca el límite en términos de la diferencia con el precio al contado. Si usted introduce +0.005, estará adquiriendo un contrato con un límite 0.005 por encima del precio al contado. El precio al contado es el precio recibido una vez ejecutada la orden de la compra", "Please_wait_<br_/>Your_request_is_being_processed_": "Por favor, aguarde.<br />Su solicitud se está procesando.", "Please_enter_a_number_between_[_1]_": "Por favor, introduzca un número entre [_1].", "This_contract_has_LOST": "Este contrato ha PERDIDO", "Income_Source": "Fuente de ingresos", "Start_time": "Hora de comienzo", "This_contract_lost": "Este contrato perdió", "Details": "detalles", "Reference_ID": "ID de Referencia", "Ok": "Aceptar", "Open": "Abierto", "DevOps_Manager": "Director del Equipo de Operaciones de Desarrollo", "Internal_Auditor": "Auditor Interno", "Potential_Profit": "Beneficios potenciales", "Your_changes_have_been_updated_": "Sus cambios se han actualizado.", "Save_as_PNG": "Guardar en formato PNG", "Your_account_is_fully_authenticated_and_your_withdrawal_limits_have_been_lifted_": "Su cuenta está totalmente autenticada y su límite de retirada ha sido aumentado.", "There_was_an_error": "Hubo un error", "Save_as_PDF": "Guardar en formato PDF", "Please_enter_an_integer_value": "Ingrese un valor entero", "minute": "minuto", "Prices": "Precios", "Matches/Differs": "Iguales/Diferentes", "Finance": "Finanzas", "Accounts_And_Payments_Executive": "Ejecutivo de Contabilidad y Pagos", "Forex_trading_frequency": "Frecuencia de comercio en forex", "Invalid_amount,_maximum_is": "Monto invalido. El máximo es", "Total_Profit/Loss": "Beneficios/perdidas totales", "Self-Employed": "Autónomo", "Status": "Estado", "Current_Time": "Hora actual", "Ends_In/Out": "Finaliza Dentro/Fuera", "Your_request_to_withdraw_[_1]_[_2]_from_your_account_[_3]_to_Payment_Agent_[_4]_account_has_been_successfully_processed_": "Su solicitud de retirada de [_1] [_2] de su cuenta [_3] al agente de pagos [_4] se ha procesado correctamente.", "You_have_not_granted_access_to_any_applications_": "Usted no ha concedido acceso a ninguna aplicación.", "Tick": "Intervalo", "Closes": "Cierra", "Pension": "Pensión", "Industry_of_Employment": "Industria de Empleo", "Over_5_years": "Más de 5 años", "This_contract_was_affected_by_a_Corporate_Action_event_": "Este contrato ha sido afectado por un evento de Acción Corporativa.", "This_feature_is_not_relevant_to_virtual-money_accounts_": "Esta característica no es relevante para cuentas de dinero virtual.", "Apr": "Abr", "Administrative_Executive": "Ejecutivo de Administración", "Never_Used": "Nunca usado", "You_should_enter_between_[_1]_characters_": "Debe ingresar entre [_1] caracteres.", "End_time": "Hora de finalización", "Asset": "Activo", "Barrier": "Límite", "Please_select_a_valid_date": "Seleccione una fecha válida", "Adjust_trade_parameters": "Ajustar parámetros de comercio", "Spot": "Precio actual del mercado", "Higher/Lower": "Superior/Inferior", "Public_worker": "Trabajador público", "Try_adding_more_numbers_": "Pruebe añadir más números.", "Password_is_very_strong": "La contraseña es muy fuerte", "Sorry,_you_have_entered_an_incorrect_cashier_password": "Lo sentimos, ingresó una contraseña de cajero incorrecta", "Withdrawal_for_your_account_is_not_allowed_at_this_moment__Please_contact_[_1]_to_unlock_it_": "No se permiten las retiradas de su cuenta en este momento. Por favor, póngase en contacto con [_1] para desbloquearla.", "Please_try_again_": "Por favor, inténtelo de nuevo.", "Touch/No_Touch": "Toque/Sin toque", "Login_ID": "Identificación de acceso", "There_was_a_problem_accessing_the_server_during_purchase_": "Hubo un problema al acceder al servidor durante la compra.", "Next_Day": "Día siguiente", "Less_than_6_months": "Menos de 6 meses", "Your_request_to_transfer_[_1]_[_2]_from_[_3]_to_[_4]_has_been_successfully_processed_": "Su solicitud de transferencia [_1] [_2] de [_3] a [_4] ha sido procesada exitosamente.", "Settles": "Establece", "Over/Under": "Encima/Debajo", "Therefore_your_current_immediate_maximum_withdrawal_(subject_to_your_account_having_sufficient_funds)_is_[_1]_[_2]_": "Por lo tanto, la cantidad máxima que puede retirar de forma inmediata (sujeta a la existencia de fondos suficientes en su cuenta) es [_1] [_2].", "Contract_will_be_sold_at_the_prevailing_market_price_when_the_request_is_received_by_our_servers__This_price_may_differ_from_the_indicated_price_": "El contrato se venderá al precio vigente en el mercado en el momento de la recepción de la solicitud de venta por nuestros servidores. Este precio puede ser diferente del precio indicado.", "years": "años", "Your_account_has_no_trading_activity_": "Su cuenta no tiene actividad comercial.", "[_1]_has_updated_its_[_2]__By_clicking_OK,_you_confirm_that_you_have_read_and_accepted_the_updated_[_2]_": "[_1] ha actualizado sus [_2]. Al hacer clic en Aceptar, usted confirma que ha leído y aceptado los [_2] actualizados.", "Please_submit_a_valid_[_1]_": "Por favor ingrese un valor válido de [_1].", "day": "día", "Refresh_page": "Recargar la página", "Please_enter_a_number_between_0_and_[_1]": "Ingrese un valor entre 0 y [_1]", "Tourism": "Turismo", "Commodities_trading_frequency": "Frecuencia de comercio con materias primas", "We": "MI", "There_was_some_invalid_character_in_an_input_field_": "Había un carácter no válido en el campo de entrada.", "Sorry,_an_error_occurred_while_processing_your_request_": "Lo sentimos, ha ocurrido un error mientras se procesaba su petición.", "A_scanned_copy_of_your_passport,_driving_licence_(provisional_or_full)_or_identity_card,_showing_your_name_and_date_of_birth__Your_document_must_be_valid_for_at_least_6_months_after_this_date_": "Una copia escaneada de su pasaporte, el carnet de conducción actual (provisional o completo) o de la tarjeta de identidad que muestra su nombre, apellido y fecha de nacimiento. El documento debe ser válido durante al menos 6 meses después de esta fecha.", "Fr": "VI", "Never": "Nunca", "Start_Trading": "Operar ahora", "Previous": "Anterior", "My_Account": "Mi cuenta", "Tertiary": "Terciario", "Please_fill_in_the_Login_ID_and_Amount_you_wish_to_transfer_to_your_Client_in_the_form_below:": "Complete con su identificación de acceso y el monto que desea transferir a su cliente en el formulario a continuación:", "Barrier_offset": "Desplazamiento de barrera", "Exit_Spot_Time": "Tiempo de Punto de Salida", "Accounting": "Contabilidad", "When_you_click_'Ok'_you_will_be_excluded_from_trading_on_the_site_until_the_selected_date_": "Al hacer clic en \"OK\" usted será excluido de las operaciones en la web hasta la fecha seleccionada.", "Human_Resources": "Recursos Humanos", "Please_confirm_the_transaction_details_in_order_to_complete_the_transfer:": "Confirme los detalles de la transacción para completar la transferencia:", "All_barriers_in_this_trading_window_are_expired": "Todos los límites en esta ventana de comercio han caducado", "not_available": "no disponible", "Rise/Fall": "Alza/Baja", "Save_as_CSV": "Guardar en formato CSV", "Withdraw": "Retirar", "Exercise_period": "Período del ejercicio", "Even/Odd": "Par/Impar", "details": "detalles", "hyphen": "guión", "Total_Cost": "Coste total", "Current_Level": "Nivel actual", "Resources": "Recursos", "Opens": "Abre", "Profit": "Beneficios", "Stake": "Inversión", "Are_you_sure_that_you_want_to_permanently_revoke_access_to_application": "Está seguro de que desea revocar permanentemente el acceso a la aplicación", "You_have_already_withdrawn_the_equivalent_of_[_1]_[_2]_": "Usted ya retiró el equivalente a [_1] [_2].", "1-3_million_JPY": "1-3 millones JPY", "View_your_statement": "Vea su extracto", "June": "Junio", "Other_financial_instruments_trading_experience": "Experiencia de comercio con otros instrumentos financieros", "Tuesday": "Martes", "Please_input_a_valid_date": "Ingrese una fecha válida", "3-5_million_JPY": "3-5 millones JPY", "Failed_to_reset_password__[_1],_please_retry_": "Error al restablecer la contraseña. [_1], por favor vuelva a intentarlo.", "Marketing_Project_Manager": "Director de proyectos de marketing", "Your_session_duration_limit_will_end_in_[_1]_seconds_": "El límite de duración de su sesión terminará en [_1] segundos.", "Payout": "Pago", "Less_than_1_million_JPY": "Menos de 1 millón JPY", "Purchase": "Comprar", "Period": "Período", "Primary": "Primario", "Last_Digit_Stats": "Estadísticas del último dígito", "Contract_ID": "ID del Contrato", "Commodities_trading_experience": "Experiencia de comercio con materias primas", "High_barrier": "Barrera superior", "Deposits_and_withdrawal_for_your_account_is_not_allowed_at_this_moment__Please_contact_[_1]_to_unlock_it_": "En este momento no puede depositar ni retirar fondos de su cuenta. Por favor, póngase en contacto con [_1] para desbloquearla.", "Dec": "Dic", "Anti-Fraud_Officer": "Oficial Contra Fraude", "6-10_transactions_in_the_past_12_months": "6-10 transacciones en los úlitmos 12 meses", "High_Barrier": "Barrera Superior", "Action": "Acción", "Settings": "Configuración", "5-10_million_JPY": "5-10 milliones JPY", "Jump_To": "Saltar a", "Please_[_1]_to_view_this_page": "Por favor [_1] para ver esta página", "Your_account_is_currently_suspended__Only_withdrawals_are_now_permitted__For_further_information,_please_contact_[_1]_": "Su cuenta está actualmente suspendida. Solo tiene permitido retirar. Para más información, por favor póngase en contacto con 1%.", "Over_$500,001": "Más de $500,001", "Th": "JU", "Loss": "Pérdida", "Back": "Atrás", "Zoom": "Enfocar", "Less_than_$25,000": "Menos de $25,000", "Sunday": "Domingo", "10-30_million_JPY": "10-30 millones JPY", "Adjusted_High_Barrier": "Límite Superior Ajustado", "Points": "Puntos", "Senior_Perl_Developer": "Desarrollador Senior de Perl", "Information_Technology": "Informática", "Quantitative_Analyst": "Analítico Cuantitativo", "Number_of_ticks": "Número de intervalos", "Short": "Cortos", "New_Password": "Contraseña nueva", "Please_log_in_": "Por favor inicie sesión.", "Are_you_sure_that_you_want_to_permanently_delete_token": "Está seguro de querer eliminar el token", "Trading_Times": "Horarios comerciales", "Update": "Actualizar", "Transfer_to_Login_ID": "Transferir a usuario", "seconds": "segundos", "Closed": "Cerrado", "September": "Septiembre", "Original_High_Barrier": "Barrera Superior Original", "Please_complete_the_following_financial_assessment_form_before_continuing_": "Por favor rellene el siguiente formulario de evaluación financiera antes de continuar.", "Transaction_performed_by_[_1]_(App_ID:_[_2])": "Transacción realizada por [_1] (ID de la aplicación: [_2])", "Please_select": "Seleccione", "You_did_not_change_anything_": "No ha cambiado nada.", "In/Out": "Dentro/Fuera", "Save_as_SVG": "Guardar en formato SVG", "Margin_FX": "Margen FX", "Education": "Formación", "Su": "DO", "months": "meses", "Forex_trading_experience": "Experiencia de comercio en forex", "Your_details_have_been_updated_": "Sus datos se han actualizado.", "Weekday": "Día de la semana", "Minimum_of_[_1]_characters_required_": "Mínimo de [_1] caracteres requeridos.", "Please_check_your_email_to_retrieve_the_token_needed_to_reset_your_password_": "Por favor verifique su correo electrónico para encontrar el token que necesita para restablecer su contraseña.", "Old_password_is_wrong_": "Su antigua contraseña es incorrecta.", "November": "Noviembre", "Your_current_balance_is": "El balance actual  de su cuenta es", "Delete": "Eliminar", "This_contract_has_WON": "Este contrato ha GANADO", "40_transactions_or_more_in_the_past_12_months": "40 transacciones o más en los úlitmos 12 meses", "We_are_not_accepting_accounts_from_residents_of_this_country_at_the_present_time_": "En este momento, no aceptamos cuentas de residentes de este país.", "Stocks_trading_experience": "Experiencia de comercio con acciones", "Country_Manager": "Gerente de país", "Remaining_Time": "Tiempo Restante", "Verification_Token": "Token de Verificación", "second": "segundo", "October": "Octubre", "Only_2_decimal_points_are_allowed_": "Se permiten solo [_1].", "Contract_purchased_with_app_ID": "Contrato adquirido con app ID", "Exit_Spot": "Punto de salida", "Housewife_/_Househusband": "Ama / Amo de casa", "Human_Resource_Executive": "Ejecutivo de Recursos Humanos", "Last_Used": "Último usado", "Binary_options_or_other_financial_derivatives_trading_frequency": "Frecuencia de comercio con opciones binarias o de otros derivados financieros", "An_additional_password_can_be_used_to_restrict_access_to_the_cashier_": "Se puede utilizar una contraseña adicional para restringir el acceso al cajero.", "When_you_click_\"Ok\"_you_will_be_excluded_from_trading_on_the_site_until_the_selected_date_": "Al hacer clic en \"OK\" usted será excluido de las operaciones en la web hasta la fecha seleccionada.", "Balance": "Saldo", "Contract_Expiry": "Vencimiento del Contrato", "password": "contraseña", "0-1_year": "0-1 año(s)", "To": "Al", "30-50_million_JPY": "30-50 millones JPY", "Date_(GMT)": "Fecha (GMT)", "Fridays": "Viernes", "Sale_Date": "Fecha de venta", "Password_is_strong": "La contraseña es fuerte", "Corporate_Action": "Acción Corporativa", "Buy": "Comprar", "Compliance": "Сumplimiento", "The_Payment_Agent_facility_is_currently_not_available_in_your_country_": "Los agentes de pagos no están disponibles actualmente para su país.", "You_must_accept_the_terms_and_conditions_to_open_an_account_": "Usted debe aceptar los términos y condiciones para abrir una cuenta.", "February": "Febrero", "Less_than_$100,000": "Menos de $100.000", "December": "Diciembre", "Graphic_Designers": "Diseñadores gráficos", "Ms": "Sra.", "Quality_Assurance_Engineer": "Ingeniero de Control de Calidad", "Amount": "Monto", "Statement": "Extracto", "Over_$1,000,000": "Más de $1,000,000", "Shop": "Tienda", "hours": "horas", "Financial_Assessment": "Asesoramiento financiero", "Finish": "Terminar", "Year": "Año", "Office_worker": "Trabajador de oficina", "No_Live_price_update": "Falta de actualización de precios en tiempo real", "Try_adding_more_letters_or_numbers_": "Pruebe a añadir más letras o números.", "Stop-type": "Tipo de stop", "Keep_track_of_your_authorised_applications_": "Realizar un seguimiento de sus aplicaciones autorizadas.", "The_two_passwords_that_you_entered_do_not_match_": "Las dos contraseñas introducidas no coinciden.", "Sorry,_your_account_is_not_authorised_for_any_further_contract_purchases_": "Lo sentimos, su cuenta no está autorizada para continuar con la compra de contratos.", "Sorry,_an_error_occurred_while_processing_your_account_": "Lo sentimos, ha ocurrido un error mientras se procesaba su cuenta.", "There_was_a_problem_validating_your_personal_details__Please_fix_the_fields_[_1]here": "Hubo un problema al validar sus detalles personales. Por favor, corrija los campos [_1] aquí", "Applications": "Aplicaciones", "Low_barrier_offset": "Desplazamiento de la barrera inferior", "Password_should_have_lower_and_uppercase_letters_with_numbers_": "La contraseña debe tener letras minúsculas y mayúsculas con números.", "Questions": "Preguntas", "Failed_to_update_trade_description_": "Error al actualizar la desripción del contrato.", "August": "Agosto", "Open_a_Financial_Account": "Abrir una cuenta financiera", "Virtual_Account": "Cuenta virtual", "Wednesday": "Miércoles", "Proofreader": "Corrector", "Major_Pairs": "Pares mayores", "1-3_years": "1-3 años", "Contract_/_Temporary_/_Part_Time": "Contrato / Temporal / A tiempo parcial", "Aug": "Ago", "[ctx,minimum_duration,_for_example_minimum_15_seconds]min": "min", "Exit_Level": "Nivel de salida", "Others": "Otros", "From": "Desde", "Your_password_has_been_successfully_reset__Please_log_into_your_account_using_your_new_password_": "Su contraseña se ha restablecido. Por favor, inicie sesión en su cuenta utilizando su nueva contraseña.", "Your_withdrawal_limit_is_[_1]_[_2]_": "Su límite de retirada es [_1] [_2].", "January": "Enero", "View": "Ver", "Successful": "Exitoso", "Select_your_market": "Seleccione su mercado", "Date_and_Time": "Fecha y Hora", "(Bejing/CST_-8_hours)": "(Bejing/CST -8 horas)", "days": "días", "Day": "Día", "3-5_years": "3-5 años", "Entry_spot": "Punto de entrada", "Stop_Profit_Level": "Nivel de stop profit", "Password_is_moderate": "La contraseña es de fuerza mediana", "Contract_Confirmation": "Confirmación del contrato", "Stop_Loss_Level": "Nivel de stop loss", "Return": "Ganancias", "Original_Barrier": "Barrera Original", "Terms_&_Conditions": "Términos & condiciones", "Adjusted_Barrier": "Límite ajustado", "July": "Julio", "Once_you_click_the_'Submit'_button,_the_funds_will_be_withdrawn_from_your_account_and_transferred_to_your_Client's_account_": "Una vez que haga clic en el botón \"Enviar\" los fondos se retirarán de su cuenta y se enviarán a la cuenta de su Cliente.", "End_Time": "Hora de finalización", "Long": "Largos", "verification_token": "token de verificación", "Over_3_years": "Durante 3 años", "Sell": "Venta", "is_required__Current_spread": "es requerido. El spread actual", "Format:_yyyy-mm-dd_(not_required_for_virtual-money_accounts)": "Formato: aaaa-mm-dd (no requerido para las cuentas de dinero virtual)", "New_token_created_": "Un token nuevo ha sido creado.", "Exit_spot": "Punto de salida", "0-5_transactions_in_the_past_12_months": "0-5 transacciones en los úlitmos 12 meses", "Target": "Objetivo", "Your_account_has_no_Login/Logout_activity_": "Su cuenta no tiene actividad de accesos/cierres de sesión.", "Exclude_time_must_be_after_today_": "El tiempo de exclusión debe ser a partir de mañana.", "You_need_to_finish_all_20_questions_": "Tiene que terminar todas las 20 preguntas.", "Tu": "MA", "Spot_Time": "Tiempo Spot", "Password_does_not_match_": "La contraseña no coincide.", "Entry_Spot": "Punto de entrada", "Profit/Loss": "Ganado/Perdido", "Description": "Descripción", "Real_Account": "Cuenta real", "Session_duration_limit_cannot_be_more_than_6_weeks_": "El límite de la duración de la sesión no puede ser superior a 6 semanas.", "The_financial_trading_services_contained_within_this_site_are_only_suitable_for_customers_who_are_able_to_bear_the_loss_of_all_the_money_they_invest_and_who_understand_and_have_experience_of_the_risk_involved_in_the_acquistion_of_financial_contracts__Transactions_in_financial_contracts_carry_a_high_degree_of_risk__If_purchased_contracts_expire_worthless,_you_will_suffer_a_total_loss_of_your_investment,_which_consists_of_the_contract_premium_": "Los servicios contractuales financieros de este sitio solo son adecuados para los Clientes que pueden lidiar con la pérdida del dinero que invierten y que comprenden y tienen experiencia con los riesgos implícitos en la adquisición de contratos financieros. Las transacciones en los contractos financieros implican muchas posibilidades de riesgo. Si los contratos comprados caducan sin valor, sufrirá la pérdida total de su inversión, que consistirá en la prima contractual.", "Profit/Loss_(points)": "Beneficios/Pérdidas (puntos)", "Your_provided_email_address_is_already_in_use_by_another_Login_ID__According_to_our_terms_and_conditions,_you_may_only_register_once_through_our_site__If_you_have_forgotten_the_password_of_your_existing_account,_please_<a_href=\"[_1]\">try_our_password_recovery_tool</a>_or_contact_customer_service_": "El correo electrónico proporcionado por usted ya está siendo usado con otra cuenta. De acuerdo con nuestros términos y condiciones, sólo está permitido registrarse una sola vez en nuestro sitio. Si ha olvidado la contraseña de su cuenta existente, <a href=\"[_1]\">pruebe nuestra herramienta de recuperación de contraseña</a> o contacte con nuestro servicio de atención al cliente.", "Gaming_Account": "Cuenta de juego", "year": "año", "Your_transaction_reference_is": "La referencia de su transacción es", "Binary_options_or_other_financial_derivatives_trading_experience": "Experiencia comercial con opciones binarias o derivados de otros instrumentos financieros", "High_barrier_offset": "Desplazamiento de la barrera superior", "Chart": "Gráfico", "Upgrade_to_a_Financial_Account": "Actualice a la cuenta financiera", "Health": "Salud", "Failed": "Fallado", "Please_enter_a_valid_amount_": "Ingrese un monto válido.", "Asset_Index": "Índice de activos", "There_was_a_problem_accessing_the_server_": "Hubo un problema al acceder al servidor.", "Translator": "Traductor", "Indices_trading_frequency": "Frecuencia de comercio con índices", "Contract": "Contrato", "Administrator": "Administrador", "Your_withdrawal_limit_is_[_1]_[_2]_(or_equivalent_in_other_currency)_": "Su límite de retirada es [_1] [_2] (o el equivalente en otra divisa).", "Charting_for_this_underlying_is_delayed": "Gráficos para este instrumento se muestran con retraso", "Mo": "LU", "Please_deposit_before_transfer_to_client_": "Por favor deposite antes de la transferencia al cliente.", "Transfer_to": "Transferir a", "Deposit": "Depósito", "Exclude_time_cannot_be_for_more_than_5_years_": "El tiempo de exclusión no puede ser mayor a 5 años.", "Net_Annual_Income": "Ingreso anual neto", "We_are_not_able_to_stream_live_prices_at_the_moment__To_enjoy_live_streaming_of_prices_try_refreshing_the_page,_if_you_get_this_issue_after_repeated_attempts_try_a_different_browser": "En estos momento no somos capaces de transmitir los precios en tiempo real. Para ver los precios en directo intente actualizar la página. Si el problema persiste después de repetidos intentos, pruebe un navegador diferente", "Contract_Sold": "Contrato Vendido", "Please_select_a_payment_agent": "Seleccione un agente de pago", "Salaried_Employee": "Empleado asalariado", "[_1]_[_2]_has_been_credited_to_your_Virtual_money_account_[_3]": "[_1] [_2] se ha acreditado en su cuenta de dinero virtual [_3]", "Social_Media_Executive": "Ejecutivo de Medios Sociales", "Miss": "Srta.", "Save_as_JPEG": "Guardar en formato JPEG", "Upgrade_to_a_Real_Account": "Actualice a la cuenta de dinero real", "Please_confirm_the_trade_on_your_statement_before_proceeding_": "Por favor, confirme el contrato en su cartera antes de proceder.", "Invalid_date_of_birth_": "Fecha de nacimiento incorrecta.", "Our_site_does_not_charge_any_transfer_fees_": "Nuestro sitio no cobra ninguna tarifa de transferencia.", "For_added_security,_please_check_your_email_to_retrieve_the_verification_token_": "Para mayor seguridad, por favor revise su correo electrónico para obtener el token de verificación.", "Password_is_weak": "La contraseña es débil", "Sorry,_account_opening_is_unavailable_": "Lo sentimos, apertura de una cuenta actualmente no está disponible.", "Level_of_Education": "Nivel de formación", "Price": "Precio", "Note": "Nota", "Please_choose_which_currency_you_would_like_to_transact_in_": "Seleccione la divisa con la que desea realizar la transacción.", "Password_is_not_strong_enough_": "La contraseña no es lo suficientemente fuerte.", "Confirm_New_Password": "Confirmar Contraseña Nueva", "Current": "Actual" };
	texts_json['FR'] = { "Senior_Perl_Developer": "Développeur Perl sénior", "Information_Technology": "Technologie de l'information", "Number_of_ticks": "Nombre de ticks", "Update": "Mise à jour", "Transfer_to_Login_ID": "Transfert à l'Identifiant de Connexion", "Jun": "juin", "Trading_Times": "Horaires de trading", "Are_you_sure_that_you_want_to_permanently_delete_token": "Voulez-vous vraiment supprimer ce jeton de façon permanente ?", "Please_log_in_": "Veuillez vous connecter.", "Your_Application_is_Being_Processed_": "Votre demande est en cours de traitement.", "Education": "Formation", "Transaction_performed_by_[_1]_(App_ID:_[_2])": "Transaction effectuée par [_1] (identifiant d'application : [_2])", "In/Out": "Zone In/Out", "Save_as_SVG": "Enregistrer au format SVG", "Original_High_Barrier": "Barrière supérieure initiale", "Please_complete_the_following_financial_assessment_form_before_continuing_": "Veuillez remplir le formulaire d'évaluation financière suivant avant de continuer.", "September": "septembre", "Forex_trading_experience": "Expérience du trading sur le Forex", "months": "mois", "Resale_not_offered": "La revente n'est pas proposée", "Last_Digit_Stats": "Statistiques du dernier chiffre", "Failed_to_reset_password__[_1],_please_retry_": "Échec de la réinitialisation du mot de passe. [_1], veuillez réessayer.", "Please_input_a_valid_date": "Veuillez saisir une date valide", "3-5_million_JPY": "3-5 millions JPY", "Tuesday": "mardi", "Anti-Fraud_Officer": "Responsable de la lutte anti-fraude [H/F]", "6-10_transactions_in_the_past_12_months": "6-10 transactions au cours des 12 derniers mois", "Contract_ID": "Identifiant du contrat", "Over_$500,001": "Plus de 500 001 $", "Loss": "Pertes", "Sunday": "dimanche", "10-30_million_JPY": "10-30 millions JPY", "Jul": "juill.", "You_must_accept_the_terms_and_conditions_to_open_an_account_": "Vous devez accepter les conditions générales pour ouvrir un compte.", "The_Payment_Agent_facility_is_currently_not_available_in_your_country_": "L'option des Agents de Paiement n'est pas disponible pour le moment dans votre pays.", "Corporate_Action": "Opération sur titre", "Buy": "Acheter", "Compliance": "Conformité", "Password_is_strong": "La sécurité du mot de passe est élevée", "Amount": "Montant", "Quality_Assurance_Engineer": "Ingénieur en assurance qualité [H/F]", "Statement": "Relevé", "Over_$1,000,000": "Plus de 1 000 000 $", "February": "février", "Less_than_$100,000": "Moins de 100 000 $", "December": "décembre", "Graphic_Designers": "Graphistes [H/F]", "Ms": "Mlle", "Market_is_closed__Please_try_again_later_": "Le marché est fermé. Veuillez réessayer ultérieurement.", "The_two_passwords_that_you_entered_do_not_match_": "Les deux mots de passe que vous avez entrés ne correspondent pas.", "Sorry,_an_error_occurred_while_processing_your_account_": "Désolé, une erreur est survenu pendant le traitement de votre compte.", "week": "semaine", "Try_adding_more_letters_or_numbers_": "Essayez d'ajouter des lettres ou des chiffres.", "Low_barrier_offset": "Marge de barrière inférieure", "Password_should_have_lower_and_uppercase_letters_with_numbers_": "Le mot de passe doit se composer de majuscules, de minuscules et de chiffres.", "We_are_not_accepting_accounts_from_residents_of_this_country_at_the_present_time_": "Nous n'acceptions pas de comptes de résidents de ce pays pour le moment.", "Stocks_trading_experience": "Expérience du trading sur actions", "This_contract_has_WON": "Ce contrat a été GAGNÉ", "Old_password_is_wrong_": "L'ancien mot de passe est erroné.", "November": "novembre", "October": "octobre", "Today": "Aujourd'hui", "second": "seconde", "Country_Manager": "Responsable pays [H/F]", "Last_Used": "Dernière utilisation", "An_additional_password_can_be_used_to_restrict_access_to_the_cashier_": "Un mot de passe supplémentaire peut être utilisé afin de restreindre l'accès à la caisse.", "Human_Resource_Executive": "Responsable des ressources humaines [H/F]", "Housewife_/_Househusband": "Au foyer", "High_Barrier_([_1])": "Barrière supérieure ([_1])", "Contract_Expiry": "Échéance du contrat", "July": "juillet", "Adjusted_Barrier": "Barrière ajustée", "Format:_yyyy-mm-dd_(not_required_for_virtual-money_accounts)": "Format : aaaa-mm-jj (non requis pour les comptes virtuels)", "verification_token": "jeton de vérification", "Target": "Cible", "0-5_transactions_in_the_past_12_months": "0-5 transaction(s) au cours des 12 derniers mois", "Password_does_not_match_": "Le mot de passe est incorrect.", "Spot_Time": "Heure spot", "Tu": "mar.", "Wednesday": "mercredi", "Major_Pairs": "Paires majeures", "Ref_": "Réf.", "Contract_/_Temporary_/_Part_Time": "Contrat / temporaire / temps partiel", "weeks": "semaines", "Proofreader": "Relecteur [H/F]", "Your_withdrawal_limit_is_[_1]_[_2]_": "Votre limite de retrait est de [_2] [_1].", "View": "Affichage", "January": "janvier", "Your_password_has_been_successfully_reset__Please_log_into_your_account_using_your_new_password_": "Votre mot de passe a été réinitialisé avec succès. Veuillez vous connecter à votre compte en utilisant votre nouveau mot de passe.", "Copywriter": "Rédacteur [H/F]", "Stop_Profit_Level": "Niveau stop-profit", "3-5_years": "3-5 ans", "Entry_spot": "Point d'entrée", "Date_and_Time": "Date et heure", "Select_your_market": "Sélectionnez votre marché", "days": "jours", "Successful": "Réussite", "Please_select_a_payment_agent": "Veuillez sélectionner une date valide", "Net_Annual_Income": "Revenu annuel net", "Exclude_time_cannot_be_for_more_than_5_years_": "Le temps d'exclusion ne peut pas être supérieur à 5 ans.", "Deposit": "Dépôt", "Token": "Jeton", "Miss": "Mlle", "[_1]_[_2]_has_been_credited_to_your_Virtual_money_account_[_3]": "[_2] [_1] ont été crédités sur votre compte virtuel [_3]", "Salaried_Employee": "Employé salarié", "Sorry,_account_opening_is_unavailable_": "Désolé, l'ouverture de compte est indisponible.", "Password_is_weak": "La sécurité du mot de passe est faible", "For_added_security,_please_check_your_email_to_retrieve_the_verification_token_": "Pour une sécurité accrue, veuillez vérifier votre adresse e-mail pour obtenir votre jeton de vérification.", "Our_site_does_not_charge_any_transfer_fees_": "Notre site ne facture aucuns frais de transfert.", "Invalid_date_of_birth_": "Date de naissance non valide.", "Password_is_not_strong_enough_": "Le mot de passe n'est pas assez fiable.", "Price": "Prix", "Level_of_Education": "Niveau de formation", "Sell_time": "Heure de vente", "Session_duration_limit_cannot_be_more_than_6_weeks_": "La limite de durée de session ne peut excéder 6 semaines.", "Equals": "Égaux", "Real_Account": "Compte réel", "Your_transaction_reference_is": "Votre référence de transaction est", "Profit/Loss_(points)": "Profits/pertes (points)", "Gaming_Account": "Compte de jeu", "Failed": "Échec", "Please_enter_a_valid_amount_": "Veuillez entrer un montant valide.", "Health": "Santé", "High_barrier_offset": "Marge de barrière supérieure", "Binary_options_or_other_financial_derivatives_trading_experience": "Expérience du trading d'options binaires ou d'autres instruments dérivés", "Mo": "Lu", "There_was_a_problem_accessing_the_server_": "Il y a eu un problème d'accès au serveur.", "Translator": "Traducteur [H/F]", "Contract": "Contrat", "Indices_trading_frequency": "Fréquence de trading sur indices", "Both_the_above": "Les deux options ci-dessus", "Month": "Mois", "Sell_at_market": "Vendre au prix du marché", "Exclude_time_cannot_be_less_than_6_months_": "Le temps d'exclusion ne peut pas être inférieur à 6 mois.", "Hour": "Heure", "Cashier": "Caisse", "Your_password_cannot_be_the_same_as_your_email": "Votre mot de passe ne peut pas être identique à votre e-mail", "Due_to_recent_changes_in_the_regulations,_we_are_required_to_ask_our_clients_to_complete_the_following_Financial_Assessment__Please_note_that_you_will_not_be_able_to_continue_trading_until_this_is_completed_": "En raison de récents changements réglementaires, nous sommes dans l'obligation de demander à nos clients de remplir le formulaire d'évaluation financière suivant. Sachez que vous ne pourrez pas poursuivre vos activités de trading avant de l'avoir fait.", "This_field_is_required_": "Ce champ est requis.", "Your_Client_will_receive_an_email_notification_informing_him/her_that_the_transfer_has_been_processed_": "Votre Client va recevoir un émail de notification l'informant que le transfert a été effectué.", "Try_adding_more_letters_": "Essayez d'ajouter des lettres.", "min:_1,000": "min : 1000", "Withdrawal": "Retrait", "Purchase_Price": "Prix d'achat", "You_have_sold_this_contract_at_[_1]_[_2]": "Vous avez vendu ce contrat [_2] [_1]", "The_maximum_number_of_tokens_([_1])_has_been_reached_": "Le nombre maximum de jetons d'authentification ([_1]) est atteint.", "IP_Address": "Adresse IP", "Lock_Cashier": "Caisse", "Deposit_[_1]_[_2]_virtual_money_into_your_account_[_3]": "Effectuer un dépôt de [_2] [_1] en argent virtuel sur votre compte [_3]", "Your_token_has_expired__Please_click_<a_class=\"pjaxload\"_href=\"[_1]\">here</a>_to_restart_the_verification_process_": "Votre jeton a expiré. Veuillez cliquer <a class=\"pjaxload\" href=\"[_1]\">ici</a> pour relancer le processus de vérification.", "Walkthrough_Guide": "Guide interactif", "Password_Reset": "Réinitialisation de mot de passe", "Authorise_your_account_": "Autoriser votre compte.", "The_server_<a_href=\"[_1]\">endpoint</a>_is:_[_2]": "Le <a href=\"[_1]\"> 1terminal</a> 2 du serveur est : [_2]", "Hedging": "Opérations de couverture", "Original_Low_Barrier": "Barrière inférieure initiale", "End_time_must_be_after_start_time_": "L'heure de fin doit être ultérieure à l'heure de début.", "loading___": "chargement...", "Quality_Assurance": "Assurance qualité", "Up/Down": "Hausse/Baisse", "Please_enter_a_number_greater_or_equal_to_[_1]_": "Veuillez saisir un chiffre supérieur ou égal à [_1].", "Your_transaction_reference_number_is_[_1]": "Le numéro de référence de votre transaction est [_1]", "Please_check_your_email_for_the_value_of_this_token": "Veuillez consulter vos e-mails pour obtenir ce jeton.", "Adjusted_Low_Barrier": "Barrière inférieure ajustée", "Quantitative_Analysis": "Analyse quantitative", "Indicative": "Indicatif", "Marketing_Executives": "Responsables marketing [H/F]", "Select_your_trade_type": "Sélectionnez votre type de transaction", "You_have_already_withdrawn_[_1]_[_2]_": "Vous avez déjà retiré [_2] [_1].", "Portfolio": "Portefeuille", "Upcoming_Events": "Évènements à venir", "Last_digit_stats_for_the_latest_[_1]_ticks_on_[_2]": "Statistiques du dernier chiffre pour les [_1] derniers ticks sur [_2]", "minimum_available_duration": "durée minimale disponible", "Week_of": "Semaine de", "Sorry,_this_feature_is_not_available_": "Désolé, cette option n'est pas disponible.", "Self-employed": "Non-salarié", "Password": "Mot de passe", "$100,000_-_$250,000": "100 000 $ - 250 000 $", "Low_barrier": "Barrière inférieure", "This_symbol_is_not_active__Please_try_another_symbol_": "Ce symbole n'est pas actif. Veuillez sélectionner un autre symbole.", "Global_Customer_Service_Representatives": "Représentants internationaux du service à la clientèle [H/F]", "Barrier_([_1])": "Barrière ([_1])", "Invalid_email_address": "Adresse email non valide", "Your_cashier_is_locked_as_per_your_request_-_to_unlock_it,_please_click_[_1]here": "Votre caisse est verrouillée conformément à votre demande. Pour la déverrouiller, veuillez cliquer [_1]ici", "Please_follow_the_pattern_3_numbers,_a_dash,_followed_by_4_numbers_": "Veuillez respecter le format suivant : 3 chiffres, 1 tiret suivi de 4 chiffres.", "Mrs": "Mme", "month": "mois", "Password_must_contains_at_least_1_digit,_1_uppercase_letter_and_1_lowercase_letter_": "Le mot de passe doit contenir au moins 1 chiffre, 1 lettre majuscule et 1 lettre minuscule.", "numbers": "chiffres", "Saturday": "samedi", "period": "période", "Investment_Account": "Compte d'investissement", "This_contract_can_not_be_traded_in_the_final_2_minutes_before_settlement": "Ce contrat ne peut pas être négocié dans les 2 minutes précédant le règlement", "Select_your_underlying_asset": "Sélectionnez votre actif sous-jacent", "New_password_is_same_as_old_password_": "Nouveau mot de passe identique à l'ancien mot de passe.", "Your_account_is_fully_authenticated_and_your_withdrawal_limits_have_been_lifted_": "Votre compte est entièrement authentifié et vos limites de retrait ont été levées.", "Save_as_PNG": "Enregistrer au format PNG", "Internal_Auditor": "Auditeur interne [H/F]", "Remaining_time": "Temps restant", "Potential_Profit": "Profits potentiels", "Open": "Ouvrir", "Start_time": "Heure de début", "Matches/Differs": "Égal/Différent", "Prices": "Prix", "Please_enter_an_integer_value": "Veuillez saisir un nombre entier", "Ends_In/Out": "Termine dans/hors de la zone", "Status": "Statut", "You_have_not_granted_access_to_any_applications_": "Vous n'avez acheté aucun contrat.", "Your_request_to_withdraw_[_1]_[_2]_from_your_account_[_3]_to_Payment_Agent_[_4]_account_has_been_successfully_processed_": "Votre demande de retirer [_1] [_2] de votre compte [_3] pour le compte de l'Agent de Paiement [_4] a été traitée avec succès.", "Self-Employed": "Non-salarié", "Invalid_amount,_maximum_is": "Montant non valide, le maximum est de", "Forex_trading_frequency": "Fréquence de trading sur le Forex", "Never_Used": "Jamais utilisé", "Administrative_Executive": "Responsable administratif [H/F]", "End_time": "Moment de fin", "You_should_enter_between_[_1]_characters_": "Vous sevez saisir entre [_1] caractères.", "This_contract_was_affected_by_a_Corporate_Action_event_": "Ce contrat a été affecté par un événement relatif à une opération sur titre.", "Stocks_trading_frequency": "Fréquence de trading sur actions", "March": "mars", "Authenticate": "Authentification", "$25,000_-_$100,000": "25 000 $ - 100 000 $", "Japan": "Japon", "This_contract_has_LOST": "Ce contrat a été PERDU", "Please_wait_<br_/>Your_request_is_being_processed_": "Veuillez patienter.<br />Votre demande est en cours de traitement.", "not_available": "non disponible", "Rise/Fall": "Hausse/Baisse", "Human_Resources": "Ressources humaines", "Please_fill_in_the_Login_ID_and_Amount_you_wish_to_transfer_to_your_Client_in_the_form_below:": "Veuillez compléter votre Identifiant de connexion et le Montant que vous souhaitez transférer à votre Client dans le formulaire ci-dessous:", "Previous": "Précédent", "My_Account": "Mon compte", "details": "informations", "hyphen": "trait d'union", "Total_Cost": "Coût total", "Even/Odd": "Pair/Impair", "Withdraw": "Retrait", "Profit": "Profits", "Stake": "Investissement", "Closes_early_(at_21:00)": "Ferme tôt (à 21h)", "Opens": "Ouvre", "June": "juin", "You_have_already_withdrawn_the_equivalent_of_[_1]_[_2]_": "Vous avez déjà retiré l'équivalent de [_2] [_1].", "Oct": "oct.", "Try_adding_more_numbers_": "Essayez d'ajouter des chiffres.", "Higher/Lower": "Supérieur/Inférieur", "Barrier": "Barrière", "Login_ID": "Identifiant de connexion", "Password_is_very_strong": "La sécurité du mot de passe est très élevée", "Sorry,_you_have_entered_an_incorrect_cashier_password": "Désolé, vous avez entré un mot de passe de caisse incorrect", "Please_submit_a_valid_[_1]_": "Veuillez saisir une [_1] valide.", "[_1]_has_updated_its_[_2]__By_clicking_OK,_you_confirm_that_you_have_read_and_accepted_the_updated_[_2]_": "[_1] a mis à jour ses [_2]. En cliquant sur OK, vous confirmez que vous avez lu et accepté la version à jour des [_2].", "day": "jour", "Over/Under": "Au dessus/En dessous", "Next_Day": "Jour suivant", "Settles": "Règlements", "There_was_some_invalid_character_in_an_input_field_": "Un caractère non valide a été saisi dans un champ.", "Please_enter_a_number_between_0_and_[_1]": "Veuillez saisir un chiffre entre 0 et [_1].", "Commodities_trading_frequency": "Fréquence de trading sur matières premières", "Quantitative_Analyst": "Analyste quantitatif [H/F]", "Adjusted_High_Barrier": "Barrière supérieure ajustée", "seconds": "secondes", "Random": "Aléatoire", "New_Password": "Nouveau mot de passe", "Short": "Court", "You_did_not_change_anything_": "Vous n'avez effectué aucune modification.", "Please_select": "Sélection", "Closed": "Fermé", "Director": "Directeur", "Your_details_have_been_updated_": "Vos détails ont été actualisés.", "Su": "Di", "Primary": "Principal", "Period": "Période", "Your_session_duration_limit_will_end_in_[_1]_seconds_": "Votre limite de durée de session sera atteinte dans [_1] secondes.", "Purchase": "Achat", "Payout": "Paiement", "Marketing_Project_Manager": "Coordinateur de projet marketing [H/F]", "Other_financial_instruments_trading_experience": "Expérience du trading sur d'autres instruments financiers", "Dec": "déc.", "High_barrier": "Barrière supérieure", "Deposits_and_withdrawal_for_your_account_is_not_allowed_at_this_moment__Please_contact_[_1]_to_unlock_it_": "Les dépôts et retraits ne sont actuellement pas autorisés sur votre compte. Veuillez contacter [_1] pour accéder à ces fonctions.", "Commodities_trading_experience": "Expérience du trading sur matières premières", "Your_account_is_currently_suspended__Only_withdrawals_are_now_permitted__For_further_information,_please_contact_[_1]_": "Votre compte est actuellement suspendu. Désormais, seuls les retraits sont autorisés. Pour obtenir des informations supplémentaires, veuillez contacter [_1].", "Th": "Je", "Jump_To": "Aller à", "Please_[_1]_to_view_this_page": "Veuillez [_1] pour afficher cette page", "5-10_million_JPY": "5-10 millions JPY", "Not": "Pas", "Settings": "Paramètres", "High_Barrier": "Barrière supérieure", "Less_than_$25,000": "Moins de 25 000 $", "Back": "Retour", "Fridays": "Vendredis", "Sale_Date": "Date de vente", "Shop": "Boutique", "Year": "Année", "Financial_Assessment": "Évaluation financière", "Finish": "Finnois", "hours": "heures", "Sorry,_your_account_is_not_authorised_for_any_further_contract_purchases_": "Désolé, votre compte n'est autorisé pour aucun achat supplémentaire de contrat.", "Keep_track_of_your_authorised_applications_": "Consultez la liste de vos applications autorisées.", "Stop-type": "Type d'ordre stop", "No_Live_price_update": "Pas de mises à jour du prix en Direct", "There_was_a_problem_validating_your_personal_details__Please_fix_the_fields_[_1]here": "Un problème s'est produit durant la validation de vos informations personnelles. Veuillez vérifier les champs [_1] ici", "Delete": "Supprimer", "40_transactions_or_more_in_the_past_12_months": "40 transactions ou plus au cours des  12 derniers mois", "This_is_a_staging_server_-_For_testing_purposes_only": "Il s'agit d'un serveur intermédiaire, utilisé uniquement à des fins de test", "Your_current_balance_is": "Votre solde actuel est de", "Weekday": "Jour de la semaine", "Please_check_your_email_to_retrieve_the_token_needed_to_reset_your_password_": "Veuillez consulter vos e-mails pour obtenir le jeton nécessaire à la réinitialisation de votre mot de passe.", "Minimum_of_[_1]_characters_required_": "Un minimum de [_1] caractères est requis.", "Only_2_decimal_points_are_allowed_": "Seulement 2 décimales autorisées.", "Verification_Token": "Jeton de vérification", "Remaining_Time": "Temps restant", "Binary_options_or_other_financial_derivatives_trading_frequency": "Expérience du trading d'options binaires ou d'autres instruments dérivés", "When_you_click_\"Ok\"_you_will_be_excluded_from_trading_on_the_site_until_the_selected_date_": "Lorsque vous cliquerez sur « Ok », vous serez exclu des opérations de trading du site jusqu'à la date sélectionnée.", "Contract_purchased_with_app_ID": "Contrat acheté avec un identifiant d'application", "Exit_Spot": "Point de sortie", "To": "à", "30-50_million_JPY": "30-50 millions JPY", "password": "mot de passe", "0-1_year": "0-1 an", "Balance": "Solde", "Closes_early_(at_18:00)": "Ferme tôt (à 18h)", "Terms_&_Conditions": "Conditions générales", "Original_Barrier": "Barrière initiale", "Return": "Retours sur investissement", "is_required__Current_spread": "est requis. Spread actuel", "Over_3_years": "Plus de 3 ans", "Sell": "Vente", "End_Time": "Heure de fin", "Once_you_click_the_'Submit'_button,_the_funds_will_be_withdrawn_from_your_account_and_transferred_to_your_Client's_account_": "Lorsque vous cliquerez sur le bouton « Envoyer », les fonds seront prélevés sur votre compte et transférés vers votre compte client.", "Exclude_time_must_be_after_today_": "Le temps d'exclusion doit être ultérieur.", "Your_account_has_no_Login/Logout_activity_": "Votre compte n'indique aucune activité de connexion/déconnexion.", "Exit_spot": "Point de sortie", "New_token_created_": "Nouveau jeton d'authentification créé.", "Entry_Spot": "Point d'entrée", "You_need_to_finish_all_20_questions_": "Vous devez répondre aux 20 questions.", "August": "août", "Open_a_Financial_Account": "Ouvrir un compte financier", "Virtual_Account": "Compte virtuel", "Failed_to_update_trade_description_": "Échec de mise à jour de la description de la transaction.", "Christmas_Day": "Jour de Noël", "Exit_Level": "Niveau de sortie", "Others": "Autres", "[ctx,minimum_duration,_for_example_minimum_15_seconds]min": "min", "Aug": "août", "1-3_years": "1-3 ans", "From": "Des fonds", "Password_is_moderate": "La sécurité du mot de passe est modérée", "Contract_Confirmation": "Confirmation de contrat", "Stop_Loss_Level": "Niveau stop-loss", "(Bejing/CST_-8_hours)": "(Pékin/CST - 8 heures)", "Day": "Jour", "May": "mai", "Contract_Sold": "Contrat vendu", "We_are_not_able_to_stream_live_prices_at_the_moment__To_enjoy_live_streaming_of_prices_try_refreshing_the_page,_if_you_get_this_issue_after_repeated_attempts_try_a_different_browser": "Nous ne pouvons pas diffuser des prix en direct en ce moment. Afin de profiter de la diffusion en direct de prix, veuillez rafraîchir la page, si vous avez ce problème après plusieurs tentatives, essayer un navigateur différent", "Transfer_to": "Transfert à", "Please_select_at_least_one_scope": "Veuillez sélectionner au moins un champ d'application", "Save_as_JPEG": "Enregistrer au format JPEG", "Social_Media_Executive": "Responsable des réseaux sociaux [H/F]", "Upgrade_to_a_Real_Account": "Ouvrir un compte réel", "Please_confirm_the_trade_on_your_statement_before_proceeding_": "Veuillez confirmer l'opération sur votre relevé avant de continuer.", "Confirm_New_Password": "Confirmer le nouveau mot de passe", "Current": "Valeur actuelle", "Please_choose_which_currency_you_would_like_to_transact_in_": "Veuillez sélectionner la devise avec laquelle vous souhaitez effectuer des transactions.", "Note": "Remarque", "The_financial_trading_services_contained_within_this_site_are_only_suitable_for_customers_who_are_able_to_bear_the_loss_of_all_the_money_they_invest_and_who_understand_and_have_experience_of_the_risk_involved_in_the_acquistion_of_financial_contracts__Transactions_in_financial_contracts_carry_a_high_degree_of_risk__If_purchased_contracts_expire_worthless,_you_will_suffer_a_total_loss_of_your_investment,_which_consists_of_the_contract_premium_": "Les services financiers disponibles sur ce site conviennent uniquement aux Clients capables d’assumer la perte de l’ensemble des fonds qu’ils investissent, et qui comprennent et ont l’expérience des risques liés à l’acquisition de contrats financiers. Les transactions effectuées dans le cadre de contrats financiers présentent un niveau de risque élevé. Si les contrats achetés expirent sans valeur, vous subirez une perte totale de votre investissement, à savoir la prime du contrat.", "Profit/Loss": "Profits/pertes", "year": "année", "Your_provided_email_address_is_already_in_use_by_another_Login_ID__According_to_our_terms_and_conditions,_you_may_only_register_once_through_our_site__If_you_have_forgotten_the_password_of_your_existing_account,_please_<a_href=\"[_1]\">try_our_password_recovery_tool</a>_or_contact_customer_service_": "L'adresse e-mail que vous avez saisie est déjà utilisée par un autre Identifiant de connexion. Conformément à nos conditions générales, vous ne pouvez vous inscrire qu'une seule fois sur notre site. Si vous avez oublié le mot de passe de votre compte existant, veuillez <a href=\"[_1]\">essayer notre outil de récupération de mot de passe</a> ou contacter le service clients.", "Asset_Index": "Indice des actifs", "Upgrade_to_a_Financial_Account": "Ouvrir un compte financier", "Chart": "Graphique", "Charting_for_this_underlying_is_delayed": "Les graphiques sont retardés pour ce sous-jacent", "Please_deposit_before_transfer_to_client_": "Veuillez effectuer un dépôt avant de virer des fonds vers un compte client.", "Administrator": "Administration", "Your_withdrawal_limit_is_[_1]_[_2]_(or_equivalent_in_other_currency)_": "Votre limite de retrait est de [_2] [_1] (ou équivalent dans une autre devise).", "Potential_Payout": "Paiement potentiel", "Sorry,_this_feature_is_available_to_virtual_accounts_only_": "Désolé, cette fonctionnalité est disponible uniquement pour les comptes virtuels.", "Only_[_1]_are_allowed_": "Seulement [_1] autorisées.", "Verification_code_format_incorrect_": "Le format du code de vérification est incorrect.", "Start_Time": "Heure de début", "Low_Barrier_([_1])": "Barrière inférieure ([_1])", "Name": "Nom", "Senior_Front-End_Developer": "Développeur Javascript front-end [H/F]", "Unlock_Cashier": "Déverrouiller la caisse", "Affiliate": "Affilié", "New_Year's_Day": "Jour de l'An", "Revoke_access": "Révoquer l'accès", "Predict_the_direction<br_/>and_purchase": "Prédire la direction<br />et acheter", "login": "connexion", "Print_chart": "Imprimer le graphique", "6_months_to_1_year": "6 mois à 1 an", "Low_Barrier": "Barrière inférieure", "Your_trading_statistics_since_[_1]_": "Vos statistiques de trading depuis [_1].", "Explanation": "Explication", "Your_cashier_is_locked_as_per_your_request_-_to_unlock_it,_please_enter_the_password_": "Votre caisse est verrouillée conformément à votre demande - si vous souhaitez la déverrouiller, veuillez saisir le mot de passe.", "Jan": "jan.", "Sep": "sep.", "Feb": "fév.", "Login_History": "Historique de connexion", "Amount_per_point": "Montant par point de base", "Sale_Price": "Prix de vente", "Duration": "Durée", "Indices_trading_experience": "Expérience du trading sur indices", "If_you_need_assistance_feel_free_to_contact_our_[_1]Customer_Support": "Si vous avez besoin d'aide, n'hésitez pas à contacter notre Service Clientèle [_1]", "letters": "lettres", "This_contract_won": "Ce contrat a été gagné", "Other": "Autre", "Internal_Audit": "Audit interne", "Therefore_your_current_immediate_maximum_withdrawal_(subject_to_your_account_having_sufficient_funds)_is_[_1]_[_2]_(or_equivalent_in_other_currency)_": "Par conséquent, votre montant maximal de retrait immédiat (sous réserve de fonds suffisants disponibles sur votre compte) est de [_2] [_1] (ou équivalent dans une autre devise).", "Credit/Debit": "Crédit/débit", "Now": "Maintenant", "email_address": "Adresse e-mail", "Please_enter_a_date_that_is_at_least_6_months_from_now_": "Veuillez introduire une date qui est au moins 6 mois plus tard.", "Step": "Étape", "Your_[_1]_day_withdrawal_limit_is_currently_[_2]_[_3]_(or_equivalent_in_other_currency)_": "Votre limite de retrait sur [_1] jours est actuellement de [_3] [_2] (ou équivalent dans une autre devise).", "Contract_Information": "Informations du contrat", "$100,000_-_$500,000": "100 000 $ - 500 000 $", "Reset_Password": "Réinitialiser le mot de passe", "Contract_is_not_started_yet": "Le contrat n'est pas encore actif", "comma": "virgule", "Profit_Table": "Tableau des profits", "Nov": "nov.", "Browser": "Navigateur", "hour": "heure", "Investments_&_Dividends": "Investissements et dividendes", "Thursday": "jeudi", "All_markets_are_closed_now__Please_try_again_later_": "Tous les marchés sont actuellement fermés. Veuillez réessayer ultérieurement.", "Password_score_is:_[_1]__Passing_score_is:_20_": "Le niveau de sécurité du mot de passe est de : [_1]. Le niveau de sécurité minimum est de : 20.", "Estimated_Net_Worth": "Valeur nette estimée", "Your_settings_have_been_updated_successfully_": "Vos paramètres ont été actualisés avec succès.", "Previous_Day": "Jour précédent", "1-2_years": "1-2 ans", "You_have_already_withdrawn_the_equivalent_of_[_1]_[_2]_in_aggregate_over_the_last_[_3]_days_": "Vous avez déjà retiré l'équivalent de [_2] [_1] au total au cours des [_3] derniers jours.", "Next": "Suivant", "Friday": "vendredi", "Quantitative_Developer": "Développeur quantitatif [H/F]", "[_1]_Please_click_the_link_below_to_restart_the_password_recovery_process__If_you_require_further_assistance,_please_contact_our_Customer_Support_": "[_1] Veuillez cliquer sur le lien ci-dessous pour relancer le processus de récupération de mot de passe. Pour obtenir de l'aide, veuillez contacter notre Service Clientèle.", "Barrier_Change": "Modification de barrière", "Invalid_amount,_minimum_is": "Montant non valide, le minimum est de", "Other_financial_instruments_trading_frequency": "Fréquence du trading sur d'autres instruments financiers", "Confirm": "Confirmer", "Foreign_currency_deposit": "Dépôt en devise étrangère", "An_error_occured_": "Une erreur s'est produite.", "April": "avril", "50-100_million_JPY": "50-100 millions JPY", "Compliance_Executive": "Responsable conformité [H/F]", "There_was_an_error": "Une erreur s'est produite", "Your_changes_have_been_updated_": "Vos modifications ont été prises en compte.", "This_contract_lost": "Ce contrat a été perdu", "True": "Vrai", "Ok": "OK", "Details": "Informations", "DevOps_Manager": "Responsable DevOps [H/F]", "Reference_ID": "Identifiant de référence", "Save_as_PDF": "Enregistrer au format PDF", "Current_Time": "Heure actuelle", "Closes": "Fermetures", "Total_Profit/Loss": "Total des profits/pertes", "Accounts_And_Payments_Executive": "Responsable des comptes et paiements", "Apr": "avr.", "This_feature_is_not_relevant_to_virtual-money_accounts_": "Cette fonction ne s'applique pas aux comptes virtuels.", "Over_5_years": "Plus de 5 ans", "Mar": "mars", "Industry_of_Employment": "Secteur professionnel", "Deposit_of": "Dépôt de", "Secondary": "Secondaire", "space": "espace", "Date_of_Birth": "Date de naissance", "Monday": "lundi", "Please_check_the_above_form_for_pending_errors_": "Veuillez vérifier que les informations ci-dessus ne contiennent pas d'erreurs.", "Stays_In/Goes_Out": "Reste dans/Sort de la zone", "Waiting_for_entry_tick_": "En attente du tick d'entrée.", "Insufficient_balance_": "Solde insuffisant.", "Entry_Level": "Niveau d'entrée", "Last_Digit_Prediction": "Prédiction sur le dernier chiffre", "Net_profit": "Bénéfice net", "Select_market": "Sélectionnez un marché", "Income_Source": "Source de Revenu", "Enter_the_barrier_in_terms_of_the_difference_from_the_spot_price__If_you_enter_+0_005,_then_you_will_be_purchasing_a_contract_with_a_barrier_0_005_higher_than_the_entry_spot__The_entry_spot_will_be_the_next_tick_after_your_order_has_been_received": "Saisissez une barrière, c’est-à-dire une différence par rapport au prix spot. Si vous saisissez +0.005, vous achèterez alors un contrat avec une barrière supérieure de 0,005 par rapport au spot d'entrée. Le spot d'entrée correspond au tick qui suit la réception de votre ordre", "Please_enter_a_number_between_[_1]_": "Veuillez saisir un chiffre entre [_1].", "Purchase_Time": "Heure d'achat", "All_barriers_in_this_trading_window_are_expired": "Toutes les barrières de cette fenêtre de trading sont expirées", "Barrier_offset": "Marge de barrière", "Exit_Spot_Time": "Prix de sortie actuel", "When_you_click_'Ok'_you_will_be_excluded_from_trading_on_the_site_until_the_selected_date_": "Lorsque vous cliquerez sur « Ok », vous serez exclu des opérations de trading du site jusqu'à la date sélectionnée.", "Accounting": "Comptabilité", "Please_confirm_the_transaction_details_in_order_to_complete_the_transfer:": "Veuillez confirmer les détails de la transaction afin de compléter le transfert:", "False": "Faux", "Start_Trading": "Commencer le trading", "Tertiary": "Supérieur", "Processing_your_request___": "Traitement de votre demande en cours...", "Current_Level": "Niveau actuel", "Exercise_period": "Période d'exercice", "Save_as_CSV": "Enregistrer au format CSV", "Resources": "Ressources", "View_your_statement": "Voir votre extrait", "1-3_million_JPY": "1-3 million(s) JPY", "Are_you_sure_that_you_want_to_permanently_revoke_access_to_application": "Voulez-vous vraiment révoquer l'accès à cette application de façon permanente ?", "max:_100,000": "max : 100 000", "$250,000_-_$1,000,000": "250 000 $ - 1 000 000 $", "Please_select_a_valid_date": "Veuillez sélectionner une date valide", "Adjust_trade_parameters": "Définir les paramètres de la transaction", "Asset": "Actif", "Touch/No_Touch": "Touche/Ne touche pas", "There_was_a_problem_accessing_the_server_during_purchase_": "Il y a eu un problème d'accès au serveur durant l'achat.", "Please_try_again_": "Veuillez réessayer.", "Withdrawal_for_your_account_is_not_allowed_at_this_moment__Please_contact_[_1]_to_unlock_it_": "Les retraits sur votre compte ne sont pas autorisés actuellement. Veuillez contacter [_1] pour déverrouiller cette fontion.", "Your_account_has_no_trading_activity_": "Votre compte n'indique aucune activité de trading.", "Therefore_your_current_immediate_maximum_withdrawal_(subject_to_your_account_having_sufficient_funds)_is_[_1]_[_2]_": "Par conséquent, votre montant maximal de retrait immédiat (sous réserve de fonds suffisants disponibles sur votre compte) est de [_2] [_1].", "Contract_will_be_sold_at_the_prevailing_market_price_when_the_request_is_received_by_our_servers__This_price_may_differ_from_the_indicated_price_": "Le contrat sera vendu au prix de marché en vigueur à réception de la demande par nos serveurs. Ce prix peut différer du prix indiqué.", "years": "années", "Less_than_6_months": "Moins de 6 mois", "Your_request_to_transfer_[_1]_[_2]_from_[_3]_to_[_4]_has_been_successfully_processed_": "Votre demande de transférer [_1] [_2] de [_3] à [_4] a été traitée avec succès.", "Sorry,_an_error_occurred_while_processing_your_request_": "Désolé, une erreur s'est produite pendant le traitement de votre demande.", "A_scanned_copy_of_your_passport,_driving_licence_(provisional_or_full)_or_identity_card,_showing_your_name_and_date_of_birth__Your_document_must_be_valid_for_at_least_6_months_after_this_date_": "Copie scannée de votre passeport, de votre permis de conduire (provisoire ou non) ou de votre carte d'identité, indiquant votre nom et votre date de naissance. Votre document doit être valide pour au moins 6 mois à compter de cette date.", "Never": "Jamais", "Fr": "ven.", "We": "Me", "Refresh_page": "Actualiser la page", "Tourism": "Tourisme" };
	texts_json['ID'] = { "Upcoming_Events": "Acara Mendatang", "Last_digit_stats_for_the_latest_[_1]_ticks_on_[_2]": "Statistik digit terakhir untuk [_1] tik pada [_2]", "Week_of": "Minggu ke", "minimum_available_duration": "durasi minimal yang tersedia", "Sorry,_this_feature_is_not_available_": "Maaf, fasilitas ini tidak tersedia.", "End_time_must_be_after_start_time_": "Waktu berakhir harus setelah waktu mulai.", "loading___": "pemuatan...", "Quality_Assurance": "Jaminan Kualitas", "Please_enter_a_number_greater_or_equal_to_[_1]_": "Masukkan angka lebih besar atau sama dengan [_1].", "Your_transaction_reference_number_is_[_1]": "Nomor referensi transaksi Anda adalah [_1]", "Please_check_your_email_for_the_value_of_this_token": "Silahkan cek email Anda untuk melihat token ini", "Adjusted_Low_Barrier": "Penyesuaian Pembatas Rendah", "Indicative": "Indikatif", "Quantitative_Analysis": "Analisis Kuantitatif", "Marketing_Executives": "Eksekutif Pemasaran", "Select_your_trade_type": "Pilih jenis kontrak Anda", "You_have_already_withdrawn_[_1]_[_2]_": "Anda telah menarik dana sebesar [_1] [_2].", "Portfolio": "Portopolio", "month": "bulan", "Password_must_contains_at_least_1_digit,_1_uppercase_letter_and_1_lowercase_letter_": "Kata sandi harus mengandung minimal 1 angka, 1 huruf besar dan 1 huruf kecil.", "numbers": "nomor", "Saturday": "Sabtu", "period": "periode", "Investment_Account": "Akun Investasi", "This_contract_can_not_be_traded_in_the_final_2_minutes_before_settlement": "Kontrak ini tidak dapat dibeli pada 2 menit terakhir sebelum penyelesaian", "Select_your_underlying_asset": "Pilih aset dasar Anda", "New_password_is_same_as_old_password_": "Kata sandi baru sama dengan kata sandi lama.", "Password": "Kata Sandi", "Low_barrier": "Batasan rendah", "Permissions": "Izin", "minutes": "menit", "This_symbol_is_not_active__Please_try_another_symbol_": "Simbol ini tidak aktif. Silakan coba simbol lain.", "Global_Customer_Service_Representatives": "Perwakilan Customer Service Global", "Barrier_([_1])": "Batasan ([_1])", "Invalid_email_address": "Invalid alamat email", "Your_cashier_is_locked_as_per_your_request_-_to_unlock_it,_please_click_[_1]here": "Kasir Anda telah terkunci sesuai permintaan Anda - untuk membuka kunci, silahkan klik [_1] disini", "Please_follow_the_pattern_3_numbers,_a_dash,_followed_by_4_numbers_": "Silahkan ikuti pola 3 angka, garis, diikuti oleh 4 angka.", "Mrs": "Ibu", "Due_to_recent_changes_in_the_regulations,_we_are_required_to_ask_our_clients_to_complete_the_following_Financial_Assessment__Please_note_that_you_will_not_be_able_to_continue_trading_until_this_is_completed_": "Berhubung perubahan terbaru dalam peraturan, kami perlu memastikan untuk meminta klien menyelesaikan Penilaian Keuangan berikut. Mohon diketahui bahwa Anda tidak akan dapat melanjutkan pendaftaran hingga proses ini selesai.", "Please_select_a_value": "Silahkan pilih nilai", "This_field_is_required_": "Bagian ini diperlukan.", "Your_Client_will_receive_an_email_notification_informing_him/her_that_the_transfer_has_been_processed_": "Klien Anda akan menerima e-mail pemberitahuan bahwa transfer mereka telah diproses.", "Try_adding_more_letters_": "Coba tambahkan lebih huruf.", "Withdrawal": "Penarikan", "Purchase_Price": "Harga Beli", "The_maximum_number_of_tokens_([_1])_has_been_reached_": "Jumlah maksimum token ([_1]) telah tercapai.", "You_have_sold_this_contract_at_[_1]_[_2]": "Anda telah menjual kontrak pada [_1] [_2]", "IP_Address": "Alamat IP", "Both_the_above": "Keduanya diatas", "Month": "Bulan", "Sell_at_market": "Jual pada pasar", "Exclude_time_cannot_be_less_than_6_months_": "Waktu pengecualian tidak boleh kurang dari 6 bulan.", "Hour": "Jam", "Your_password_cannot_be_the_same_as_your_email": "Kata sandi tidak boleh sama dengan alamat email", "Cashier": "Kasir", "Walkthrough_Guide": "Panduan Langsung", "Password_Reset": "Merubah Kata Sandi", "Authorise_your_account_": "Otorisasi akun Anda.", "The_server_<a_href=\"[_1]\">endpoint</a>_is:_[_2]": "Titik akhir <a href=\"[_1]\">server</a> adalah: [_2]", "Original_Low_Barrier": "Batasan Rendah Asli", "Lock_Cashier": "Kunci Kasir", "Deposit_[_1]_[_2]_virtual_money_into_your_account_[_3]": "Tambahkan Deposit [_1] [_2] dana virtual kedalam akun [_3] Anda", "Your_token_has_expired__Please_click_<a_class=\"pjaxload\"_href=\"[_1]\">here</a>_to_restart_the_verification_process_": "Token Anda telah berakhir. Silahkan klik <a class=\"pjaxload\" href=\"[_1]\">disini</a> untuk memulai kembali proses verifikasi.", "Profit": "Keuntungan", "Stake": "Modal", "Sorry,_account_signup_is_not_available_in_your_country__Please_contact_<a_href=\"[_1]\">customer_support</a>_for_more_information_": "Maaf, pendaftaran akun tidak tersedia untuk negara domisili Anda. Silahkan hubungi <a href=\"[_1]\">customer support</a> untuk info lebih lanjut.", "Closes_early_(at_21:00)": "Ditutup awal (pada 21:00)", "Opens": "Dibuka", "June": "Juni", "You_have_already_withdrawn_the_equivalent_of_[_1]_[_2]_": "Anda telah melakukan penarikan setara dengan [_1] [_2].", "Oct": "Oktober", "not_available": "tidak tersedia", "Human_Resources": "Sumber Daya Manusia", "Please_fill_in_the_Login_ID_and_Amount_you_wish_to_transfer_to_your_Client_in_the_form_below:": "Silahkan isi Login ID dan jumlah yang ingin Anda transfer ke klien Anda dalam formulir di bawah ini:", "My_Account": "Akun Saya", "Previous": "Sebelumnya", "hyphen": "tanda penghubung", "details": "perincian", "Total_Cost": "Total Biaya", "Withdraw": "Pencairan", "Please_submit_a_valid_[_1]_": "Silakan kirim [_1] yang berlaku.", "[_1]_has_updated_its_[_2]__By_clicking_OK,_you_confirm_that_you_have_read_and_accepted_the_updated_[_2]_": "[_1] telah memperbarui [_2]. Dengan mengklik OK, berarti Anda sudah membaca dan menyetujui [_2] terbaru.", "day": "hari", "Next_Day": "Hari Berikutnya", "Settles": "Diselesaikan", "There_was_some_invalid_character_in_an_input_field_": "Terdapat beberapa karakter yang tidak berlaku pada kolom input.", "Please_enter_a_number_between_0_and_[_1]": "Silakan masukkan nomor antara 0 dan [_1]", "Commodities_trading_frequency": "Frekuensi trading komoditas", "Try_adding_more_numbers_": "Coba tambahkan angka.", "Spot": "Posisi", "Barrier": "Batasan", "Sorry,_you_have_entered_an_incorrect_cashier_password": "Maaf, kata sandi yang Anda masukkan salah", "Password_is_very_strong": "Kata sandi sangat kuat", "Your_request_to_withdraw_[_1]_[_2]_from_your_account_[_3]_to_Payment_Agent_[_4]_account_has_been_successfully_processed_": "Permohonan penarikan Anda [_1] [_2] dari account [_3] ke Agen Pembayaran [_4] telah diproses.", "You_have_not_granted_access_to_any_applications_": "Anda belum diberikan akses ke dalam aplikasi apapun.", "Self-Employed": "Wirausaha", "Invalid_amount,_maximum_is": "Jumlah tidak berlaku, maksimal", "Forex_trading_frequency": "Frekuensi trading forex", "Administrative_Executive": "Eksekutif Administrasi", "Never_Used": "Tidak pernah dipakai", "End_time": "Waktu end", "You_should_enter_between_[_1]_characters_": "Anda harus memasukkan antara [_1] karakter.", "This_contract_was_affected_by_a_Corporate_Action_event_": "Kontrak ini dipengaruhi oleh peristiwa Aksi Korporasi.", "Your_account_is_fully_authenticated_and_your_withdrawal_limits_have_been_lifted_": "Akun Anda telah terbukti dan batasan penarikan Anda telah dihapuskan.", "Save_as_PNG": "Simpan dalam PNG", "Remaining_time": "Waktu yang tersisa", "Potential_Profit": "Potensi Hasil", "Open": "Awal", "Start_time": "Waktu mulai", "Finance": "Keuangan", "Prices": "OHLC", "Please_enter_an_integer_value": "Silahkan masukan nilai penuh", "Japan": "Jepang", "This_contract_has_LOST": "Kontrak ini telah RUGI", "Please_wait_<br_/>Your_request_is_being_processed_": "Silahkan tunggu.<br />Permohonan Anda sedang diproses.", "Stocks_trading_frequency": "Frekuensi trading saham", "March": "Maret", "Date": "Tanggal", "Authenticate": "Pembuktian", "Market_is_closed__Please_try_again_later_": "Pasar ditutup. Silakan coba kembali nanti.", "The_two_passwords_that_you_entered_do_not_match_": "Kedua-dua password yang Anda masukkan tidak cocok.", "week": "minggu", "Sorry,_an_error_occurred_while_processing_your_account_": "Maaf, error terjadi ketika memproses rekening Anda.", "Try_adding_more_letters_or_numbers_": "Coba tambahkan lebih huruf atau angka.", "Low_barrier_offset": "Batasan offset rendah", "Password_should_have_lower_and_uppercase_letters_with_numbers_": "Kata sandi harus memiliki huruf kecil dan besar beserta angka.", "Applications": "Aplikasi", "You_must_accept_the_terms_and_conditions_to_open_an_account_": "Anda harus menyetujui syarat dan ketentuan untuk mendaftar akun.", "The_Payment_Agent_facility_is_currently_not_available_in_your_country_": "Fasilitas Agen Pembayaran tidak tersedia pada negara anda.", "Corporate_Action": "Aksi Korperasi", "Buy": "Beli", "Compliance": "Kepatuhan", "Password_is_strong": "Kata sandi kuat", "Quality_Assurance_Engineer": "Insinyur Penjamin Kualitas", "Amount": "Jumlah", "Over_$1,000,000": "Lebih dari $1,000,000", "Statement": "Pernyataan", "February": "Pebruari", "Ms": "Sdri.", "Less_than_$100,000": "Kurang dari $100,000", "Graphic_Designers": "Desainer Grafis", "December": "Desember", "Last_Used": "Terakhir digunakan", "An_additional_password_can_be_used_to_restrict_access_to_the_cashier_": "Kata sandi tambahan dapat digunakan untuk membatasi akses ke kasir.", "Human_Resource_Executive": "Eksekutif Sumber Daya Manusia", "Housewife_/_Househusband": "Ibu Rumah Tangga / Kepala Rumah Tangga", "High_Barrier_([_1])": "Batasan Tinggi ([_1])", "Contract_Expiry": "Kontrak berakhir", "We_are_not_accepting_accounts_from_residents_of_this_country_at_the_present_time_": "Untuk saat ini kami tidak menerima pendaftaran akun dari warga negara berikut.", "Stocks_trading_experience": "Pengalaman trading saham", "This_contract_has_WON": "Kontrak ini telah UNTUNG", "Old_password_is_wrong_": "Kata sandi lama salah.", "November": "Nopember", "October": "Oktober", "Today": "Hari ini", "second": "detik", "Country_Manager": "Country Manajer", "Education": "Edukasi", "Transaction_performed_by_[_1]_(App_ID:_[_2])": "Transaksi dilakukan oleh [_1] (App ID: [_2])", "Save_as_SVG": "Simpan dalam SVG", "Original_High_Barrier": "Batasan Tinggi Asli", "Please_complete_the_following_financial_assessment_form_before_continuing_": "Lengkapi formulir penilaian keuangan berikut sebelum melanjutkan.", "Forex_trading_experience": "Pengalaman trading forex", "months": "bulan", "Connection_error:_Please_check_your_internet_connection_": "Koneksi error: Silakan periksa koneksi internet Anda.", "Information_Technology": "Teknologi Informasi", "Number_of_ticks": "Jumlah tik", "Points": "Poin", "Update": "Memperbarui", "Jun": "Juni", "Transfer_to_Login_ID": "Transfer ke Login ID", "Trading_Times": "Waktu Trading", "Are_you_sure_that_you_want_to_permanently_delete_token": "Apakah Anda yakin untuk menghapus token secara permanen", "Please_log_in_": "Silahkan log in.", "Your_Application_is_Being_Processed_": "Permohonan Anda Sudah Terproses.", "Over_$500,001": "Lebih $500,001", "Loss": "Rugi", "Action": "Aksi", "10-30_million_JPY": "10-30 juta JPY", "Sunday": "Minggu", "Time_is_in_the_wrong_format_": "Waktu dalam format salah.", "Resale_not_offered": "Penjualan ulang tidak ditawarkan", "Last_Digit_Stats": "Statistik Digit Terakhir", "Failed_to_reset_password__[_1],_please_retry_": "Gagal untuk mereset kata sandi. [_1], silahkan coba lagi.", "3-5_million_JPY": "3-5 juta JPY", "Please_input_a_valid_date": "Masukkan tanggal yang benar", "Tuesday": "Selasa", "Anti-Fraud_Officer": "Petugas Anti-Penipuan", "6-10_transactions_in_the_past_12_months": "6-10 transaksi pada 12 bulan terakhir", "Contract_ID": "ID Kontrak", "mins": "menit", "Sorry,_account_opening_is_unavailable_": "Maaf, pembukaan akun tidak tersedia.", "For_added_security,_please_check_your_email_to_retrieve_the_verification_token_": "Untuk keamanan tambahan, silahkan lihat email Anda untuk mengambil token verifikasi.", "Password_is_weak": "Kata sandi lemah", "Our_site_does_not_charge_any_transfer_fees_": "Situs kami tidak membebankan biaya transfer.", "Invalid_date_of_birth_": "Tanggal lahir salah.", "Password_is_not_strong_enough_": "Kata sandi tidak cukup kuat.", "Price": "Harga", "Level_of_Education": "Tingkat Pendidikan", "Sell_time": "Waktu jual", "Please_select_a_payment_agent": "Silahkan pilih agen pembayaran", "Net_Annual_Income": "Penghasilan Bersih Tahunan", "Exclude_time_cannot_be_for_more_than_5_years_": "Waktu pengecualian tidak dapat melebihi 5 tahun.", "Miss": "Nona", "[_1]_[_2]_has_been_credited_to_your_Virtual_money_account_[_3]": "[_1] [_2] telah dikreditkan kedalam akun uang virtual Anda [_3]", "Salaried_Employee": "Gaji Karyawan", "Please_enter_a_valid_amount_": "Tolong masukan jumlah yang benar.", "Failed": "Gagal", "Health": "Kesehatan", "High_barrier_offset": "Batasan offset tinggi", "Binary_options_or_other_financial_derivatives_trading_experience": "Opsi Binary atau pengalaman trading pada keuangan derivatif lainnya", "Mo": "Sen", "There_was_a_problem_accessing_the_server_": "Terjadi masalah pada saat mengakses server.", "Translator": "Penterjemah", "Contract": "Kontrak", "Indices_trading_frequency": "Frekuensi trading indeks", "Session_duration_limit_cannot_be_more_than_6_weeks_": "Batas durasi sesi tidak dapat lebih dari 6 minggu.", "Equals": "Sama", "Real_Account": "Akun Riil", "Your_transaction_reference_is": "Referensi transaksi Anda adalah", "Gaming_Account": "Akun Trading", "Profit/Loss_(points)": "Untung/Rugi (poin)", "Target": "Sasaran", "0-5_transactions_in_the_past_12_months": "0-5 transaksi dalam 12 bulan terakhir", "Password_does_not_match_": "Kata sandi tidak cocok.", "Spot_Time": "Waktu Spot", "Tu": "Kam", "July": "Juli", "Adjusted_Barrier": "Penyesuaian Pembatas", "Waiting_for_exit_tick_": "Menunggu tik akhir.", "Format:_yyyy-mm-dd_(not_required_for_virtual-money_accounts)": "Format: tahun-bulan-tanggal (tidak diperlukan untuk akun uang virtual)", "verification_token": "token verifikasi", "Your_withdrawal_limit_is_[_1]_[_2]_": "Batas penarikan Anda adalah [_1] [_2].", "View": "Lihat", "Minute": "Menitan", "January": "Januari", "Your_password_has_been_successfully_reset__Please_log_into_your_account_using_your_new_password_": "Kata sandi Anda sudah berhasil dibuat ulang. Silahkan akes akun Anda menggunakan kata sandi baru.", "Stop_Profit_Level": "Tingkat Stop Profit", "3-5_years": "3-5 tahun", "Entry_spot": "Spot masuk", "Date_and_Time": "Tanggal dan Waktu", "Select_your_market": "Pilih market anda", "days": "hari", "Successful": "Berhasil", "Wednesday": "Rabu", "Questions": "Pertanyaan", "Major_Pairs": "Pasangan Utama", "Contract_/_Temporary_/_Part_Time": "Kontrak / Sementara / Paruh Waktu", "weeks": "minggu", "Proofreader": "Korektor", "Thursday": "Kamis", "All_markets_are_closed_now__Please_try_again_later_": "Semua pasar ditutup saat ini. Coba kembali nanti.", "Estimated_Net_Worth": "Estimasi Nilai Bersih", "Password_score_is:_[_1]__Passing_score_is:_20_": "Skor kata sandi: [_1]. Skor lulus adalah: 20.", "points": "nilai", "Your_settings_have_been_updated_successfully_": "Pengaturan Anda telah sukses diperbarui.", "Previous_Day": "Hari Sebelumnya", "1-2_years": "1-2 tahun", "Reset_Password": "Ulang Kata Sandi", "Contract_is_not_started_yet": "Kontrak belum dimulai", "comma": "koma", "Profit_Table": "Tabel Laba Rugi", "Nov": "Nop", "hour": "jam", "Investments_&_Dividends": "Investasi & Dividen", "Foreign_currency_deposit": "Deposito valuta asing", "An_error_occured_": "Terjadi error.", "50-100_million_JPY": "50-100 juta JPY", "Compliance_Executive": "Eksekutif Compliance", "You_have_already_withdrawn_the_equivalent_of_[_1]_[_2]_in_aggregate_over_the_last_[_3]_days_": "Anda telah menarik dana sebesar [_1] [_2] dalam tempo [_3] hari terakhir.", "Friday": "Jum'at", "Quantitative_Developer": "Pengembang Kuantitatif", "Next": "Lanjutkan", "[_1]_Please_click_the_link_below_to_restart_the_password_recovery_process__If_you_require_further_assistance,_please_contact_our_Customer_Support_": "[_1] Silahkan klik link di bawah ini untuk memulai kembali proses pemulihan kata sandi. Jika Anda membutuhkan bantuan lebih lanjut, silakan hubungi Customer Support kami.", "Barrier_Change": "Perubahan Batasan", "Other_financial_instruments_trading_frequency": "Frekuensi trading instrumen keuangan lainnya", "Invalid_amount,_minimum_is": "Jumlah tidak berlaku, minimal", "apostrophe": "apostrof", "ticks": "tik", "Confirm": "Lanjutkan", "Sa": "Sab", "New_Year's_Day": "Tahun Baru", "Revoke_access": "Mencabut akses", "Predict_the_direction<br_/>and_purchase": "Analisa arah<br />dan beli", "Print_chart": "Cetak grafik", "6_months_to_1_year": "6 bulan hingga 1 tahun", "Low_Barrier": "Batasan Rendah", "Your_trading_statistics_since_[_1]_": "Statistik trading Anda sejak [_1].", "Potential_Payout": "Potensi Hasil", "Sorry,_this_feature_is_available_to_virtual_accounts_only_": "Maaf, fasilitas ini hanya tersedia untuk rekening virtual saja.", "Only_[_1]_are_allowed_": "Hanya [_1] dibenarkan.", "Verification_code_format_incorrect_": "Format kode verifikasi salah.", "Start_Time": "Waktu Mulai", "Low_Barrier_([_1])": "Batasan Rendah ([_1])", "Name": "Nama", "Affiliate": "Afiliasi", "Unlock_Cashier": "Buka Kasir", "letters": "huruf", "Other": "Lainnya", "This_contract_won": "Kontrak ini untung", "Internal_Audit": "Audit Internal", "Therefore_your_current_immediate_maximum_withdrawal_(subject_to_your_account_having_sufficient_funds)_is_[_1]_[_2]_(or_equivalent_in_other_currency)_": "Maka dengan itu jumlah maksimal yang dapat Anda tarik (tergantung pada saldo tunai yang tersedia) adalah [_1] [_2] (atau setara dengan mata uang lainnya).", "Credit/Debit": "Kredit/Debit", "Now": "Sekarang", "email_address": "alamat email", "Please_enter_a_date_that_is_at_least_6_months_from_now_": "Masukkan tanggal setidaknya 6 bulan dari sekarang.", "Step": "Langkah", "Your_[_1]_day_withdrawal_limit_is_currently_[_2]_[_3]_(or_equivalent_in_other_currency)_": "Batas penarikan [_1] hari Anda saat ini adalah [_2] [_3] (atau setara dengan mata uang lainnya).", "Contract_Information": "Informasi Kontrak", "Explanation": "Penjelasan", "Your_cashier_is_locked_as_per_your_request_-_to_unlock_it,_please_enter_the_password_": "Kasir Anda terkunci sesuai permintaan Anda - untuk membuka kunci, masukkan kata sandi.", "Feb": "Peb", "Login_History": "Catatan Login", "Amount_per_point": "Jumlah per poin", "Your_account_is_not_fully_authenticated_": "Akun Anda belum diverifikasi sepenuhnya.", "Sale_Price": "Harga Jual", "Indices_trading_experience": "Pengalaman trading indeks", "Duration": "Durasi", "If_you_need_assistance_feel_free_to_contact_our_[_1]Customer_Support": "Jika Anda membutuhkan bantuan jangan ragu untuk menghubungi Customer Support [_1] kami", "Resources": "Sumber", "1-3_million_JPY": "1-3 juta JPY", "View_your_statement": "Lihat pernyataan Anda", "Are_you_sure_that_you_want_to_permanently_revoke_access_to_application": "Apakah Anda yakin bahwa Anda ingin secara permanen mencabut akses ke aplikasi", "All_barriers_in_this_trading_window_are_expired": "Semua batasan pada tampilan trading ini telah berakhir", "Exit_Spot_Time": "Waktu Exit Spot", "Accounting": "Akuntansi", "When_you_click_'Ok'_you_will_be_excluded_from_trading_on_the_site_until_the_selected_date_": "Setelah mengklik 'Ok' Anda akan dikecualikan dari trading hingga tanggal yang dipilih.", "Please_confirm_the_transaction_details_in_order_to_complete_the_transfer:": "Pastikan Anda telah memilih Agen Pembayaran yang benar, salah transfer adalah diluar tanggungjawab kami:", "False": "Salah", "Start_Trading": "Mulai Trading", "Processing_your_request___": "Memproses permintaan Anda...", "Tertiary": "Tersier", "Current_Level": "Tingkat Terkini", "Exercise_period": "Periode latihan", "Save_as_CSV": "Simpan dalam CSV", "Your_account_has_no_trading_activity_": "Akun Anda tidak memiliki aktifitas trading.", "Therefore_your_current_immediate_maximum_withdrawal_(subject_to_your_account_having_sufficient_funds)_is_[_1]_[_2]_": "Oleh karena itu jumlah maksimal yang dapat Anda cairkan langsung (jika saldo mencukupi) adalah [_1] [_2].", "years": "tahun", "Contract_will_be_sold_at_the_prevailing_market_price_when_the_request_is_received_by_our_servers__This_price_may_differ_from_the_indicated_price_": "Kontrak akan dijual pada harga pasar terkini ketika permintaan diterima oleh server kami. Harga ini mungkin berbeda dari harga yang diindikasikan.", "Your_request_to_transfer_[_1]_[_2]_from_[_3]_to_[_4]_has_been_successfully_processed_": "Permintaan Anda untuk mentransfer [_1] [_2] dari [_3] ke [_4] berhasil diproses.", "Sorry,_an_error_occurred_while_processing_your_request_": "Maaf, error terjadi ketika memproses permohonan Anda.", "A_scanned_copy_of_your_passport,_driving_licence_(provisional_or_full)_or_identity_card,_showing_your_name_and_date_of_birth__Your_document_must_be_valid_for_at_least_6_months_after_this_date_": "Scan paspor, SIM atau KTP yang memperlihatkan nama dan tanggal lahir Anda. Dokumen setidaknya memiliki 6 bulan masa berlaku.", "Never": "Tidak pernah", "Fr": "Jum", "We": "Kami", "Refresh_page": "Perbarui halaman", "Tourism": "Pariwisata", "max:_100,000": "mak: 100,000", "Please_select_a_valid_date": "Silahkan pilih tanggal", "Adjust_trade_parameters": "Menyesuaikan parameter trading", "Asset": "Aset", "There_was_a_problem_accessing_the_server_during_purchase_": "Terjadi masalah mengakses server saat pembelian berlangsung.", "Please_try_again_": "Silahkan coba kembali.", "Withdrawal_for_your_account_is_not_allowed_at_this_moment__Please_contact_[_1]_to_unlock_it_": "Penarikan untuk akun Anda tidak dapat dilanjutkan untuk saat ini. Silahkan hubungi [_1] untuk pengaktifan.", "Current_Time": "Waktu Terkini", "Tick": "Tik", "Closes": "Ditutup", "Total_Profit/Loss": "Total Untung/Rugi", "Accounts_And_Payments_Executive": "Akuntan Dan Eksekutif Pembayaran", "This_feature_is_not_relevant_to_virtual-money_accounts_": "Fasilitas ini tidak tersedia untuk akun uang virtual.", "Pension": "Pensiun", "Industry_of_Employment": "Industri Kerja", "There_was_an_error": "Terdapat error", "Your_changes_have_been_updated_": "Perubahan Anda telah diperbarui.", "This_contract_lost": "Kontrak ini rugi", "True": "Benar", "Details": "Rincian", "Reference_ID": "ID referensi", "minute": "menit", "Save_as_PDF": "Simpan dalam PDF", "Construction": "Konstruksi", "Net_profit": "Laba bersih", "Last_Digit_Prediction": "Analisa Digit Terakhir", "Marketing": "Pemasaran", "Select_market": "Pilih pasar", "Income_Source": "Sumber Penghasilan", "Enter_the_barrier_in_terms_of_the_difference_from_the_spot_price__If_you_enter_+0_005,_then_you_will_be_purchasing_a_contract_with_a_barrier_0_005_higher_than_the_entry_spot__The_entry_spot_will_be_the_next_tick_after_your_order_has_been_received": "Masukan batasan yang merupakan selisih harga spot. Jika Anda memasukan +0.005, maka Anda akan membeli kontrak dengan batasan 0.005 lebih tinggi dari spot masuk. Spot masuk adalah tik setelah kontrak Anda diproses", "Please_enter_a_number_between_[_1]_": "Silakan masukkan nomor antara [_1].", "Purchase_Time": "Waktu Beli", "Deposit_of": "Deposit dari", "space": "ruang", "Date_of_Birth": "Tanggal Lahir", "Secondary": "Sekunder", "Monday": "Senin", "Please_check_the_above_form_for_pending_errors_": "Silahkan periksa formulir diatas untuk error yang masih tertunda.", "Waiting_for_entry_tick_": "Menunggu tik masuk...", "Mr": "Bapak", "Insufficient_balance_": "Saldo tidak mencukupi.", "Sorry,_your_account_is_not_authorised_for_any_further_contract_purchases_": "Maaf, akun Anda tidak dapat membeli kontrak selanjutnya.", "Keep_track_of_your_authorised_applications_": "Melacak aplikasi resmi Anda.", "No_Live_price_update": "Tidak tersedia harga Live", "There_was_a_problem_validating_your_personal_details__Please_fix_the_fields_[_1]here": "Terdapat masalah dalam memvalidasi data pribadi Anda. Perbaiki kolom [_1] disini", "Fridays": "Jum'at", "Sale_Date": "Tanggal Jual", "Shop": "Toko", "Financial_Assessment": "Penilaian Keuangan", "Year": "Tahun", "Finish": "Selesai", "hours": "jam", "Binary_options_or_other_financial_derivatives_trading_frequency": "Opsi Binary atau frekuensi trading keuangan derivatif lainnya", "When_you_click_\"Ok\"_you_will_be_excluded_from_trading_on_the_site_until_the_selected_date_": "Setelah mengklik \"Ok\" Anda akan dikecualikan dari trading hingga tanggal yang dipilih.", "Contract_purchased_with_app_ID": "Pembelian kontrak dengan app ID", "Exit_Spot": "Spot akhir", "Date_(GMT)": "Tanggal (GMT)", "0-1_year": "0-1 tahun", "30-50_million_JPY": "30-50 juta JPY", "password": "kata sandi", "To": "Kepada", "Balance": "Saldo", "Closes_early_(at_18:00)": "Ditutup awal (pada 18:00)", "Delete": "Hapus", "This_is_a_staging_server_-_For_testing_purposes_only": "Ini adalah staging server - Untuk tujuan pengujian saja", "40_transactions_or_more_in_the_past_12_months": "40 transaksi atau lebih pada 12 bulan terakhir", "Your_current_balance_is": "Saldo Anda saat ini", "Weekday": "Hari Kerja", "Minimum_of_[_1]_characters_required_": "Minimal [_1] karakter diperlukan.", "Please_check_your_email_to_retrieve_the_token_needed_to_reset_your_password_": "Silahkan periksa email Anda untuk memperoleh token diperlukan untuk mereset kata sandi Anda.", "Only_2_decimal_points_are_allowed_": "Hanya 2 poin desimal diperbolehkan.", "Verification_Token": "Token Verifikasi", "Remaining_Time": "Waktu Yang Tersisa", "h": "j", "Please_select": "Tolong pilih", "You_did_not_change_anything_": "Anda tidak melakukan perubahan.", "Closed": "Tutup", "Your_details_have_been_updated_": "Rincian Anda telah diperbarui.", "Su": "Mgg", "Quantitative_Analyst": "Analis Kuantitatif", "Adjusted_High_Barrier": "Penyesuaian Pembatas Tinggi", "seconds": "detik", "Random": "Secara Acak", "New_Password": "Kata Sandi Baru", "Short": "Pendek", "Your_account_is_currently_suspended__Only_withdrawals_are_now_permitted__For_further_information,_please_contact_[_1]_": "Saat ini akun Anda ditangguhkan. Hanya penarikan yang dapat Anda lakukan. Untuk informasi lanjut, silahkan hubungi [_1].", "Th": "Kam", "Please_[_1]_to_view_this_page": "Silahkan [_1] untuk melihat halaman ini", "Jump_To": "Lompat Ke", "5-10_million_JPY": "5-10 juta JPY", "Settings": "Pengaturan", "Not": "Bukan", "High_Barrier": "Batasan Tinggi", "Less_than_$25,000": "Kurang dari $25,000", "Back": "Kembali", "Primary": "Primer", "Period": "Masa", "Your_session_duration_limit_will_end_in_[_1]_seconds_": "Batas durasi sesi Anda akan berakhir dalam [_1] detik.", "Marketing_Project_Manager": "Manajer Proyek Pemasaran", "Purchase": "Beli", "Payout": "Hasil", "Other_financial_instruments_trading_experience": "Pengalaman trading instrumen keuangan lainnya", "Dec": "Des", "High_barrier": "Batasan Tinggi", "Deposits_and_withdrawal_for_your_account_is_not_allowed_at_this_moment__Please_contact_[_1]_to_unlock_it_": "Bagian deposit dan penarikan akun Anda tidak tersedia untuk sementara. Silahkan hubungi [_1] untuk pengaktifan.", "Commodities_trading_experience": "Pengalaman trading komoditas", "Upgrade_to_a_Real_Account": "Upgrade ke Akun Riil", "Please_confirm_the_trade_on_your_statement_before_proceeding_": "Mohon konfirmasikan kontrak pada bagian pernyataan sebelum melanjutkan.", "Confirm_New_Password": "Konfirmasi Kata Sandi Baru", "Current": "Saat ini", "Note": "Catatan", "Please_choose_which_currency_you_would_like_to_transact_in_": "Silahkan pilih mata uang mana yang ingin Anda depositkan.", "May": "Mei", "Contract_Sold": "Kontrak Terjual", "We_are_not_able_to_stream_live_prices_at_the_moment__To_enjoy_live_streaming_of_prices_try_refreshing_the_page,_if_you_get_this_issue_after_repeated_attempts_try_a_different_browser": "Kami tidak dapat memberikan striming harga live untuk saat ini. Untuk menikmati striming harga live silahkan coba merefresh halaman, atau coba browser lain", "Transfer_to": "Kirim ke", "Please_select_at_least_one_scope": "Silakan pilih minimal satu scope", "today": "hari ini", "Save_as_JPEG": "Simpan dalam JPEG", "Social_Media_Executive": "Social Media Eksekutif", "Asset_Index": "Indeks Aset", "Upgrade_to_a_Financial_Account": "Upgrade ke Akun Finansial", "Chart": "Grafik", "Charting_for_this_underlying_is_delayed": "Grafik untuk dasar pasar mengalami penundaan", "Please_deposit_before_transfer_to_client_": "Silahkan deposit sebelum melakukan transfer ke klien.", "Your_withdrawal_limit_is_[_1]_[_2]_(or_equivalent_in_other_currency)_": "Batas penarikan Anda adalah [_1] [_2] (atau setara dengan mata uang lain).", "The_financial_trading_services_contained_within_this_site_are_only_suitable_for_customers_who_are_able_to_bear_the_loss_of_all_the_money_they_invest_and_who_understand_and_have_experience_of_the_risk_involved_in_the_acquistion_of_financial_contracts__Transactions_in_financial_contracts_carry_a_high_degree_of_risk__If_purchased_contracts_expire_worthless,_you_will_suffer_a_total_loss_of_your_investment,_which_consists_of_the_contract_premium_": "Layanan trading finansial yang disediakan pada situs ini hanya cocok untuk Pelanggan yang mampu menanggung kerugian pada semua modal yang mereka tanamkan dan bagi yang mengerti dan memiliki pengalaman tentang risiko yang akan dialami pada trading kontrak finansial. Kontrak transaksi finansial adalah memiliki risiko tinggi. Jika prediksi Anda tidak tepat maka anda akan kehilangan semua modal yang anda tanamkan berupa harga kontrak yang anda bayarkan.", "Profit/Loss": "Untung/Rugi", "Description": "Deskripsi", "year": "tahun", "Your_provided_email_address_is_already_in_use_by_another_Login_ID__According_to_our_terms_and_conditions,_you_may_only_register_once_through_our_site__If_you_have_forgotten_the_password_of_your_existing_account,_please_<a_href=\"[_1]\">try_our_password_recovery_tool</a>_or_contact_customer_service_": "Alamat email Anda telah digunakan oleh Login ID lain. Menurut syarat dan ketentuan, Anda hanya dapat mendaftar satu akun uang riil pada situs kami. Jika Anda lupa kata sandi akun Anda, silahkan <a href=\"[_1]\">coba alat pemulih kata sandi baru</a> atau hubungi customer service.", "Your_account_has_no_Login/Logout_activity_": "Akun Anda tidak memiliki aktifitas Login/Logout.", "Exclude_time_must_be_after_today_": "Waktu pengecualian harus setelah hari ini.", "Exit_spot": "Spot akhir", "New_token_created_": "Token baru dibuat.", "Entry_Spot": "Spot Masuk", "You_need_to_finish_all_20_questions_": "Anda perlu menjawab semua 20 pertanyaan.", "Original_Barrier": "Batasan Asli", "today,_Fridays": "hari ini, Jumat", "Terms_&_Conditions": "Syarat & Ketentuan", "Return": "Laba", "is_required__Current_spread": "dibutuhkan. Spread saat ini", "Over_3_years": "Lebih dari 3 tahun", "Sell": "Jual", "End_Time": "Waktu berakhir", "Once_you_click_the_'Submit'_button,_the_funds_will_be_withdrawn_from_your_account_and_transferred_to_your_Client's_account_": "Setelah mengklik tombol 'Kirim', dana akan ditarik dari akun Anda dan ditransfer ke dalam akun Klien Anda.", "Long": "Panjang", "From": "Dari", "Contract_Confirmation": "Konfirmasi Kontrak", "Password_is_moderate": "Kata sandi moderat", "Stop_Loss_Level": "Tingkat Stop Loss", "(Bejing/CST_-8_hours)": "(Bejing/CST -8 jam)", "Day": "Hari", "August": "Agustus", "Virtual_Account": "Akun Virtual", "Score": "Skor", "Open_a_Financial_Account": "Daftar Akun Finansial", "Christmas_Day": "Hari Natal", "Failed_to_update_trade_description_": "Gagal memperbarui deskripsi kontrak.", "Exit_Level": "Tingkat Keluar", "1-3_years": "1-3 tahun", "Aug": "Agustus", "[ctx,minimum_duration,_for_example_minimum_15_seconds]min": "min" };
	texts_json['IT'] = { "Delete": "Elimina", "This_is_a_staging_server_-_For_testing_purposes_only": "Questo è un server tecnico - Solo per scopo di test", "40_transactions_or_more_in_the_past_12_months": "40 transazioni o più negli ultimi 12 mesi", "Weekday": "Giorno feriale", "Minimum_of_[_1]_characters_required_": "Sono richiesti minimo [_1] caratteri.", "Please_check_your_email_to_retrieve_the_token_needed_to_reset_your_password_": "Verifica il tuo indirizzo e-mail per ottenere il token necessario per ripristinare la tua password.", "Your_current_balance_is": "Il tuo saldo attuale è", "Only_2_decimal_points_are_allowed_": "Sono consentite solo 2 cifre decimali.", "Remaining_Time": "Tempo residuo", "Verification_Token": "Token di verifica", "Binary_options_or_other_financial_derivatives_trading_frequency": "Frequenza del trading in opzioni binarie o altri prodotti finanziari derivati", "When_you_click_\"Ok\"_you_will_be_excluded_from_trading_on_the_site_until_the_selected_date_": "Quando clicchi su \"Ok\" verrai escluso dal trading sul sito fino alla data selezionata.", "Exit_Spot": "Prezzo di uscita", "Contract_purchased_with_app_ID": "Contratto acquistato con l'ID dell'app", "0-1_year": "da 0 a 1 anno", "To": "A", "Date_(GMT)": "Data (GMT)", "Closes_early_(at_18:00)": "Chiude in anticipo (alle 18:00)", "Balance": "Saldo", "Fridays": "Venerdì", "Sale_Date": "Data della vendita", "hours": "ore", "Financial_Assessment": "Valutazione finanziaria", "Finish": "Termina", "Year": "Anno", "Sorry,_your_account_is_not_authorised_for_any_further_contract_purchases_": "Siamo spiacenti, il tuo account non è autorizzato per qualsiasi altro acquisto di contratti.", "No_Live_price_update": "Nessun aggiornamento dei prezzi in tempo reale", "Keep_track_of_your_authorised_applications_": "Tieni traccia delle tue applicazioni autorizzate.", "There_was_a_problem_validating_your_personal_details__Please_fix_the_fields_[_1]here": "Si è verificato un problema nella procedura di convalida dei tuoi dati personali. Sistema i campi [_1] qui", "Period": "Periodo", "Primary": "Primario", "Other_financial_instruments_trading_experience": "Esperienza di trading con altri strumenti finanziari", "Purchase": "Acquisto", "Marketing_Project_Manager": "Project Manager commerciale", "Your_session_duration_limit_will_end_in_[_1]_seconds_": "Il limite di durata della tua sessione terminerà tra [_1] secondi.", "Dec": "Dic", "Commodities_trading_experience": "Esperienza di trading con le materie prime", "High_barrier": "Barriera superiore", "Deposits_and_withdrawal_for_your_account_is_not_allowed_at_this_moment__Please_contact_[_1]_to_unlock_it_": "In questo momento sul tuo account non sono consentiti i depositi e i prelievi. Per sbloccarli, contatta [_1].", "Please_[_1]_to_view_this_page": "[_1] per visualizzare questa pagina", "Jump_To": "Salta a", "Your_account_is_currently_suspended__Only_withdrawals_are_now_permitted__For_further_information,_please_contact_[_1]_": "Al momento il tuo account è sospeso. Sono consentiti solo i prelievi. Per ulteriori informazioni, contatta [_1].", "Th": "Gio", "High_Barrier": "Barriera superiore", "Not": "No", "Settings": "Impostazioni", "Less_than_$25,000": "Meno di $25.000", "Back": "Precedente", "Quantitative_Analyst": "Analista quantitativo", "Adjusted_High_Barrier": "Barriera superiore regolata", "seconds": "secondi", "New_Password": "Nuova password", "Short": "Breve", "Please_select": "Seleziona", "You_did_not_change_anything_": "Non hai modificato nulla.", "Closed": "Chiuso", "Your_details_have_been_updated_": "I tuoi dettagli sono stati aggiornati.", "Su": "Dom", "The_financial_trading_services_contained_within_this_site_are_only_suitable_for_customers_who_are_able_to_bear_the_loss_of_all_the_money_they_invest_and_who_understand_and_have_experience_of_the_risk_involved_in_the_acquistion_of_financial_contracts__Transactions_in_financial_contracts_carry_a_high_degree_of_risk__If_purchased_contracts_expire_worthless,_you_will_suffer_a_total_loss_of_your_investment,_which_consists_of_the_contract_premium_": "I servizi di trading finanziario contenuti in questo sito sono adatti solo per i Clienti in grado di subire la perdita di tutti i soldi investiti e che comprendono ed hanno esperienza dei rischi connessi all'acquisizione di contratti finanziari. Le transazioni su contratti finanziari hanno un alto livello di rischio. Se i contratti acquistati scadono in negativo, subirai una perdita totale del tuo investimento che consiste nel premio del contratto.", "Profit/Loss": "Profitto/Perdita", "Description": "Descrizione", "year": "anno", "Your_provided_email_address_is_already_in_use_by_another_Login_ID__According_to_our_terms_and_conditions,_you_may_only_register_once_through_our_site__If_you_have_forgotten_the_password_of_your_existing_account,_please_<a_href=\"[_1]\">try_our_password_recovery_tool</a>_or_contact_customer_service_": "L'indirizzo email da te fornito è già in uso da un altro ID d'accesso. Conformemente ai nostri termini e condizioni, puoi registrarti solo una volta sul nostro sito. Se hai dimenticato la password del tuo account esistente, <a href=\"[_1]\">prova il nostro strumento di recupero della password</a> oppure contatta il servizio clienti.", "Upgrade_to_a_Financial_Account": "Passa a un account finanziario", "Asset_Index": "Indice degli asset", "Chart": "Grafico", "Charting_for_this_underlying_is_delayed": "I grafici per questo strumento sono differiti", "Please_deposit_before_transfer_to_client_": "Deposita prima di trasferire al cliente.", "Your_withdrawal_limit_is_[_1]_[_2]_(or_equivalent_in_other_currency)_": "Il tuo limite di prelievo è [_2] [_1] (oppure equivalente in altra valuta).", "Administrator": "Amministratore", "We_are_not_able_to_stream_live_prices_at_the_moment__To_enjoy_live_streaming_of_prices_try_refreshing_the_page,_if_you_get_this_issue_after_repeated_attempts_try_a_different_browser": "Al momento non siamo in grado di trasmettere i prezzi in tempo reale. Per godere dello streaming live dei prezzi, prova a riaggiornare la pagina, se dopo vari tentativi si verifica sempre lo stesso problema, prova un browser diverso", "Contract_Sold": "Contratto venduto", "May": "Mag", "Please_select_at_least_one_scope": "Seleziona almeno uno scopo", "today": "oggi", "Transfer_to": "Trasferisci a", "Save_as_JPEG": "Salva come JPEG", "Social_Media_Executive": "Addetti ai social media", "Upgrade_to_a_Real_Account": "Passa a un account reale", "Please_confirm_the_trade_on_your_statement_before_proceeding_": "Prima di procedere, conferma il trade sul tuo estratto.", "Confirm_New_Password": "Conferma la nuova password", "Current": "Attuale", "Please_choose_which_currency_you_would_like_to_transact_in_": "Scegli in quale valuta desideri operare.", "Note": "Nota", "August": "Agosto", "Open_a_Financial_Account": "Apri un account finanziario", "Score": "Punteggio", "Virtual_Account": "Account virtuale", "Failed_to_update_trade_description_": "Impossibile aggiornare la descrizione del trade.", "[ctx,minimum_duration,_for_example_minimum_15_seconds]min": "minimo ", "Aug": "Ago", "Exit_Level": "Livello di uscita", "From": "Da", "Contract_Confirmation": "Conferma del contratto", "Password_is_moderate": "La password è discreta", "Stop_Loss_Level": "Livello dello Stop Loss", "(Bejing/CST_-8_hours)": "(Pechino/CST -8 ore)", "Day": "Giorno", "Return": "Rendimento", "Original_Barrier": "Barriera originale", "Terms_&_Conditions": "Termini e condizioni", "today,_Fridays": "oggi, Venerdì", "is_required__Current_spread": "è richiesto. Spread attuale", "Long": "A lungo", "Once_you_click_the_'Submit'_button,_the_funds_will_be_withdrawn_from_your_account_and_transferred_to_your_Client's_account_": "Una volta cliccato sul pulsante \"Invia\", i fondi verranno prelevati dal tuo account e trasferiti sull'account del tuo Cliente.", "End_Time": "Orario di fine", "Over_3_years": "Più di 3 anni", "Sell": "Vendi", "Exit_spot": "Prezzo di uscita", "Exclude_time_must_be_after_today_": "Il periodo di esclusione deve essere successivo a oggi.", "Your_account_has_no_Login/Logout_activity_": "Sul tuo account non c'è alcuna attività di Login/Logout.", "New_token_created_": "Nuovo token creato.", "Entry_Spot": "Punto d'ingresso", "You_need_to_finish_all_20_questions_": "Devi completare tutte le 20 domande.", "Quantitative_Developer": "Sviluppatore quantitativo", "Friday": "Venerdì", "Next": "Successivo", "You_have_already_withdrawn_the_equivalent_of_[_1]_[_2]_in_aggregate_over_the_last_[_3]_days_": "Hai già prelevato l'equivalente complessivo di [_1] [_2] negli ultimi [_3] giorni.", "apostrophe": "apostrofo", "[_1]_Please_click_the_link_below_to_restart_the_password_recovery_process__If_you_require_further_assistance,_please_contact_our_Customer_Support_": "[_1] clicca il link sottostante per riavviare la procedura di ripristino della password. Per ulteriore assistenza, contatta la nostra Assistenza Clienti.", "Other_financial_instruments_trading_frequency": "Frequenza di trading con altri strumenti finanziari", "Barrier_Change": "Modifica della barriera", "Invalid_amount,_minimum_is": "Importo non valido, il minimo è", "Confirm": "Conferma", "ticks": "tick", "April": "Aprile", "An_error_occured_": "Si è verificato un errore.", "Compliance_Executive": "Esecutivo di conformità", "Reset_Password": "Ripristina password", "$100,000_-_$500,000": "$100.000 - $500.000", "Contract_is_not_started_yet": "Il contratto non è ancora iniziato", "comma": "virgola", "hour": "ora", "Investments_&_Dividends": "Investimenti e Dividendi", "Profit_Table": "Tabella dei profitti", "Thursday": "Giovedì", "Password_score_is:_[_1]__Passing_score_is:_20_": "Il punteggio della password è: [_1]. Il punteggio minimo è: 20.", "Estimated_Net_Worth": "Valore netto stimato", "All_markets_are_closed_now__Please_try_again_later_": "Al momento tutti i mercati sono chiusi. Si prega di riprovare più tardi.", "Your_settings_have_been_updated_successfully_": "Le tue impostazioni sono state aggiornate con successo.", "points": "punti", "Previous_Day": "Giorno precedente", "1-2_years": "1-2 anni", "Explanation": "Spiegazione", "Login_History": "Cronologia dei login", "Your_cashier_is_locked_as_per_your_request_-_to_unlock_it,_please_enter_the_password_": "Come da tua richiesta, la cassa è bloccata. Per sbloccarla, inserisci la password.", "Jan": "Gen", "Sep": "Sett", "Your_account_is_not_fully_authenticated_": "Il tuo account non è pienamente autenticato.", "Amount_per_point": "Importo per punto", "If_you_need_assistance_feel_free_to_contact_our_[_1]Customer_Support": "Se hai bisogno di assistenza, contatta la nostra Assistenza clienti [_1]", "Duration": "Durata", "Indices_trading_experience": "Esperienza di trading con gli indici", "Sale_Price": "Prezzo di vendita", "Therefore_your_current_immediate_maximum_withdrawal_(subject_to_your_account_having_sufficient_funds)_is_[_1]_[_2]_(or_equivalent_in_other_currency)_": "Pertanto il tuo attuale prelievo massimo immediato (soggetto alla disponibilità di fondi sufficienti nell'account) è pari a [_1] [_2] (o equivalente in un'altra valuta).", "Internal_Audit": "Revisione interna", "letters": "lettere", "This_contract_won": "Questo contratto ha vinto", "Other": "Altro", "Now": "Adesso", "Credit/Debit": "Credito/Debito", "email_address": "indirizzo email", "Please_enter_a_date_that_is_at_least_6_months_from_now_": "Inserisci una data che sia distante almeno 6 mesi a partire da oggi.", "Stop-loss": "Stop Loss", "Contract_Information": "Informazioni del contratto", "Your_[_1]_day_withdrawal_limit_is_currently_[_2]_[_3]_(or_equivalent_in_other_currency)_": "Il tuo limite di prelievo giornaliero di [_1] è attualmente [_2] [_3] (oppure equivalente in un'altra valuta).", "Only_[_1]_are_allowed_": "Sono consentiti solo [_1].", "Potential_Payout": "Payout potenziale", "Sorry,_this_feature_is_available_to_virtual_accounts_only_": "Siamo spiacenti, questa funzione è disponibile solo sugli account virtuali.", "Verification_code_format_incorrect_": "Formato del codice di verifica non corretto.", "Name": "Nome", "Senior_Front-End_Developer": "Sviluppatore Senior front-end", "Start_Time": "Orario di inizio", "Low_Barrier_([_1])": "Barriera inferiore ([_1])", "Affiliate": "Affiliato", "Unlock_Cashier": "Sblocca Cassa", "Sa": "Sab", "Revoke_access": "Revocare l'accesso", "Predict_the_direction<br_/>and_purchase": "Prevedi la direzione<br />e acquista", "Print_chart": "Stampa grafico", "Your_trading_statistics_since_[_1]_": "Le tue statistiche di trading dal [_1].", "Low_Barrier": "Barriera inferiore", "max:_100,000": "max: 100.000", "$250,000_-_$1,000,000": "$250.000 - $1.000.000", "Adjust_trade_parameters": "Regola i parametri di trading", "Please_select_a_valid_date": "Seleziona una data valida", "Touch/No_Touch": "Touch/No touch", "There_was_a_problem_accessing_the_server_during_purchase_": "Durante l'acquisto si è verificato un problema d'accesso al server.", "Withdrawal_for_your_account_is_not_allowed_at_this_moment__Please_contact_[_1]_to_unlock_it_": "In questo momento non è consentito prelevare dal tuo account. Per sbloccarlo, contatta [_1].", "Please_try_again_": "Riprova.", "Your_account_has_no_trading_activity_": "Sul tuo account non c'è alcuna attività di trading.", "Your_request_to_transfer_[_1]_[_2]_from_[_3]_to_[_4]_has_been_successfully_processed_": "La tua richiesta di trasferire [_1] [_2] da [_3] a [_4] è stata elaborata con successo.", "Therefore_your_current_immediate_maximum_withdrawal_(subject_to_your_account_having_sufficient_funds)_is_[_1]_[_2]_": "Pertanto il tuo attuale prelievo massimo immediato (soggetto alla disponibilità di fondi sufficienti nell'account) è pari a [_1] [_2].", "years": "anni", "Contract_will_be_sold_at_the_prevailing_market_price_when_the_request_is_received_by_our_servers__This_price_may_differ_from_the_indicated_price_": "Il Contratto verrá venduto al prezzo di mercato prevalente nel momento in cui i nostri server ricevono la richiesta. Tale prezzo può differire rispetto al prezzo indicato.", "A_scanned_copy_of_your_passport,_driving_licence_(provisional_or_full)_or_identity_card,_showing_your_name_and_date_of_birth__Your_document_must_be_valid_for_at_least_6_months_after_this_date_": "Una copia scannerizzata del tuo passaporto, patente (provvisoria o definitiva) o carta d'identità, indicante il tuo nome e la tua data di nascita. Il tuo documento deve essere valido per almeno 6 mesi dopo questa data.", "Sorry,_an_error_occurred_while_processing_your_request_": "Siamo spiacenti, si è verificato un errore durante l'elaborazione della tua richiesta.", "Fr": "Ven", "Never": "Mai", "Refresh_page": "Riaggiorna la pagina", "Tourism": "Turismo", "We": "Noi", "Exit_Spot_Time": "Orario del prezzo di uscita", "Accounting": "Contabilità", "When_you_click_'Ok'_you_will_be_excluded_from_trading_on_the_site_until_the_selected_date_": "Quando clicchi su \"Ok\" verrai escluso dal trading sul sito fino alla data selezionata.", "Barrier_offset": "Correzione della barriera", "Please_confirm_the_transaction_details_in_order_to_complete_the_transfer:": "Per completare il trasferimento, conferma i dettagli della transazione:", "All_barriers_in_this_trading_window_are_expired": "Tutte le barriere in questa finestra di trading sono scadute", "Start_Trading": "Inizia il trading", "Tertiary": "Terziario", "False": "Falso", "Current_Level": "Livello attuale", "Save_as_CSV": "Salva come CSV", "Exercise_period": "Periodo di prova", "Resources": "Risorse", "View_your_statement": "Mostra il tuo estratto", "Are_you_sure_that_you_want_to_permanently_revoke_access_to_application": "Sei sicuro di voler revocare definitivamente l'accesso all'applicazione", "Deposit_of": "Deposito di", "Date_of_Birth": "Data di nascita", "Secondary": "Secondario", "space": "spazio", "Monday": "Lunedì", "Stays_In/Goes_Out": "Stays In (Rimane in) / Goes Out (Esce fuori)", "Mr": "Sig.", "Insufficient_balance_": "Saldo non sufficiente.", "Waiting_for_entry_tick_": "In attesa del tick d'ingresso.", "Entry_Level": "Livello di entrata", "Last_Digit_Prediction": "Previsione dell'ultima cifra", "Net_profit": "Profitto netto", "Construction": "Costruzione", "Select_market": "Seleziona il mercato", "Income_Source": "Fonte di reddito", "Purchase_Time": "Orario d'acquisto", "Enter_the_barrier_in_terms_of_the_difference_from_the_spot_price__If_you_enter_+0_005,_then_you_will_be_purchasing_a_contract_with_a_barrier_0_005_higher_than_the_entry_spot__The_entry_spot_will_be_the_next_tick_after_your_order_has_been_received": "Inserisci il limite in termini di differenza dal prezzo spot. Se inserisci +0.005, allora starai acquistando un contratto con un limite 0.005 più alto rispetto al punto d'ingresso. Quest'ultimo sarà il tick successivo dopo aver ricevuto l'ordine", "Please_enter_a_number_between_[_1]_": "Inserisci un numero compreso tra [_1].", "Your_changes_have_been_updated_": "Le tue modifiche sono state aggiornate.", "There_was_an_error": "Si è verificato un errore", "True": "Vero", "This_contract_lost": "Questo contratto ha perso", "Details": "Dettagli", "Reference_ID": "ID di riferimento", "DevOps_Manager": "Manager DevOps", "minute": "minuto", "Save_as_PDF": "Salva come PDF", "Current_Time": "Orario attuale", "Closes": "Chiude", "Accounts_And_Payments_Executive": "Addetti Account e Pagamenti", "Total_Profit/Loss": "Profitto/Perdita totale", "This_feature_is_not_relevant_to_virtual-money_accounts_": "Questa funzione non è riferita agli account con denaro virtuale.", "Pension": "Pensione", "Industry_of_Employment": "Settore di occupazione", "This_contract_has_WON": "Questo contratto ha VINTO", "We_are_not_accepting_accounts_from_residents_of_this_country_at_the_present_time_": "Al momento non accettiamo account di persone residenti in questo paese.", "Stocks_trading_experience": "Esperienza di trading con azioni", "Old_password_is_wrong_": "La password vecchia è errata.", "November": "Novembre", "October": "Ottobre", "Country_Manager": "Manager del paese", "Today": "Oggi", "second": "secondo", "Last_Used": "Ultimo utilizzato", "An_additional_password_can_be_used_to_restrict_access_to_the_cashier_": "Può essere utilizzata una password aggiuntiva per limitare l'accesso alla cassa.", "Human_Resource_Executive": "Addetti alle risorse umane", "High_Barrier_([_1])": "Barriera superiore ([_1])", "Contract_Expiry": "Scadenza del contratto", "The_Payment_Agent_facility_is_currently_not_available_in_your_country_": "La funzione dell'Agente di pagamento al momento non è disponibile nel tuo paese.", "You_must_accept_the_terms_and_conditions_to_open_an_account_": "Per aprire un account, devi accettare i termini e le condizioni.", "Password_is_strong": "La password è forte", "Corporate_Action": "Operazione sul capitale", "Buy": "Acquista", "Compliance": "Conformità", "Quality_Assurance_Engineer": "Ingegnere per la garanzia della qualità", "Amount": "Importo", "Statement": "Estratto", "Over_$1,000,000": "Più di $1.000.000", "February": "Febbraio", "Graphic_Designers": "Graphic Designer", "Less_than_$100,000": "Meno di $100.000", "December": "Dicembre", "Ms": "Sig.ra", "The_two_passwords_that_you_entered_do_not_match_": "Le due password inserite non combaciano.", "Sorry,_an_error_occurred_while_processing_your_account_": "Siamo spiacenti, si è verificato un errore durante l'elaborazione del tuo account.", "week": "settimana", "Market_is_closed__Please_try_again_later_": "Il mercato è chiuso. Si prega di riprovare più tardi.", "Office_worker": "Impiegato", "Try_adding_more_letters_or_numbers_": "Prova ad aggiungere più lettere o numeri.", "Low_barrier_offset": "Scostamento della barriera inferiore", "Password_should_have_lower_and_uppercase_letters_with_numbers_": "La password deve contenere lettere minuscole e maiuscole con numeri.", "Applications": "Applicazioni", "Resale_not_offered": "La rivendita non è offerta", "Last_Digit_Stats": "Statistiche sull'ultima cifra", "Please_input_a_valid_date": "Inserisci una data valida", "Tuesday": "Martedì", "Failed_to_reset_password__[_1],_please_retry_": "Ripristino della password non riuscito. [_1], riprova.", "Anti-Fraud_Officer": "Responsabile Anti-frodi", "6-10_transactions_in_the_past_12_months": "6-10 transazioni negli ultimi 12 mesi", "Contract_ID": "ID del contratto", "Over_$500,001": "Più di $500.001", "Loss": "Perdita", "Action": "Azione", "Sunday": "Domenica", "Jul": "Lug", "Senior_Perl_Developer": "Sviluppatore Senior Perl", "Number_of_ticks": "Numero di tick", "Points": "Punti", "Please_log_in_": "Effettua il login.", "Are_you_sure_that_you_want_to_permanently_delete_token": "Sei sicuro di voler eliminare definitivamente il token", "Trading_Times": "Orari di trading", "Update": "Aggiorna", "Transfer_to_Login_ID": "Trasferisci a ID di login", "Jun": "Giu", "Your_Application_is_Being_Processed_": "La tua richiesta è stata elaborata.", "Transaction_performed_by_[_1]_(App_ID:_[_2])": "Transazione eseguita da [_1] (ID dell'app ID: [_2])", "Save_as_SVG": "Salva come SVG", "Education": "Formazione", "September": "Settembre", "Original_High_Barrier": "Barriera superiore originale", "Please_complete_the_following_financial_assessment_form_before_continuing_": "Prima di continuare, completa il seguente modulo di valutazione finanziaria.", "months": "mesi", "Forex_trading_experience": "Esperienza di trading su Forex", "Session_duration_limit_cannot_be_more_than_6_weeks_": "Il limite di durata della sessione non può essere superiore a 6 settimane.", "Real_Account": "Account reale", "Your_transaction_reference_is": "Il tuo riferimento per le transazioni è", "Gaming_Account": "Account di gioco", "Profit/Loss_(points)": "Profitto/Perdita (punti)", "Health": "Salute", "Failed": "Non riuscito", "Please_enter_a_valid_amount_": "Inserisci un importo valido.", "Binary_options_or_other_financial_derivatives_trading_experience": "Esperienza di trading in opzioni binarie o altri prodotti finanziari derivati", "High_barrier_offset": "Sfasamento della barriera superiore", "Mo": "Lun", "Translator": "Traduttore", "There_was_a_problem_accessing_the_server_": "Si è verificato un problema d'accesso al server.", "Indices_trading_frequency": "Frequenza del trading con indici", "Contract": "Contratto", "Net_Annual_Income": "Reddito annuale netto", "Please_select_a_payment_agent": "Seleziona un agente di pagamento", "Exclude_time_cannot_be_for_more_than_5_years_": "Il periodo di esclusione non può essere superiore a 5 anni.", "Deposit": "Deposita", "Miss": "Sig.ra", "Salaried_Employee": "Lavoratore dipendente", "[_1]_[_2]_has_been_credited_to_your_Virtual_money_account_[_3]": "[_1] [_2] sono stati accreditati sul tuo Account di moneta virtuale [_3]", "For_added_security,_please_check_your_email_to_retrieve_the_verification_token_": "Per maggior sicurezza, controlla la tua email per recuperare il token di verifica.", "Password_is_weak": "La password è debole", "Sorry,_account_opening_is_unavailable_": "Siamo spiacenti, l'apertura di account non è disponibile.", "Our_site_does_not_charge_any_transfer_fees_": "Il nostro sito non applica alcuna commissione sui trasferimenti di denaro.", "Invalid_date_of_birth_": "Data di nascita non valida.", "Level_of_Education": "Livello di istruzione", "Price": "Prezzo", "Sell_time": "Orario di vendita", "Password_is_not_strong_enough_": "La password non è sufficientemente forte.", "Wednesday": "Mercoledì", "Questions": "Domande", "Major_Pairs": "Coppie principali", "Ref_": "Rif.", "weeks": "settimane", "Your_password_has_been_successfully_reset__Please_log_into_your_account_using_your_new_password_": "La tua password è stata ripristinata con successo. Effettua il login sul tuo account utilizzando la tua nuova password.", "Your_withdrawal_limit_is_[_1]_[_2]_": "Il tuo limite di prelievo è [_1] [_2].", "View": "Mostra", "January": "Gennaio", "Minute": "Minuto", "Copywriter": "Redattore Pubblicitario", "Entry_spot": "Punto d'ingresso", "Stop_Profit_Level": "Livello dello Stop Profit", "Successful": "Riuscito", "Select_your_market": "Seleziona il tuo mercato", "Date_and_Time": "Data e orario", "days": "giorni", "July": "Luglio", "Adjusted_Barrier": "Barriera regolata", "Format:_yyyy-mm-dd_(not_required_for_virtual-money_accounts)": "Formato: aaaa-mm-gg (non richiesto per gli account di denaro virtuale)", "verification_token": "token di verifica", "0-5_transactions_in_the_past_12_months": "0-5 transazioni negli ultimi 12 mesi", "Password_does_not_match_": "La password non corrisponde.", "Tu": "Mar", "Spot_Time": "Orario dello spot", "Low_barrier": "Barriera inferiore", "Permissions": "Autorizzazioni", "minutes": "minuti", "$100,000_-_$250,000": "$100.000 - $250.000", "Global_Customer_Service_Representatives": "Rappresentati del Servizio Clienti globale", "Barrier_([_1])": "Barriera ([_1])", "Invalid_email_address": "Indirizzo email non valido", "This_symbol_is_not_active__Please_try_another_symbol_": "Questo simbolo non è attivo. Prova un altro simbolo.", "Please_follow_the_pattern_3_numbers,_a_dash,_followed_by_4_numbers_": "Segui il modello con 3 numeri, un trattino e 4 numeri.", "Mrs": "Sig.ra", "Your_cashier_is_locked_as_per_your_request_-_to_unlock_it,_please_click_[_1]here": "Come da tua richiesta, la cassa è bloccata. Per sbloccarla, clicca qui [_1]", "numbers": "numeri", "month": "mese", "Password_must_contains_at_least_1_digit,_1_uppercase_letter_and_1_lowercase_letter_": "La password deve contenere almeno 1 numero, 1 lettera maiuscola e 1 lettera minuscola.", "Investment_Account": "Account d'investimento", "Saturday": "Sabato", "period": "periodo", "Select_your_underlying_asset": "Scegli il tuo asset sottostante", "This_contract_can_not_be_traded_in_the_final_2_minutes_before_settlement": "Questo contratto non può essere negoziato negli ultimi 2 minuti prima della liquidazione.", "New_password_is_same_as_old_password_": "La nuova password è identica a quella vecchia.", "Quality_Assurance": "Garanzia della qualità", "Please_enter_a_number_greater_or_equal_to_[_1]_": "Inserisci un numero maggiore o uguale a [_1].", "Your_transaction_reference_number_is_[_1]": "Il tuo numero di riferimento per le transazioni è [_1]", "loading___": "caricamento...", "End_time_must_be_after_start_time_": "L'orario di fine deve essere successivo all'orario di inizio.", "Marketing_Executives": "Addetti al marketing", "Please_check_your_email_for_the_value_of_this_token": "Verifica il tuo indirizzo e-mail per il valore di questo token", "Adjusted_Low_Barrier": "Barriera inferiore regolata", "Quantitative_Analysis": "Analisi quantitativa", "Indicative": "Indicativo", "You_have_already_withdrawn_[_1]_[_2]_": "Hai già prelevato [_1] [_2].", "Select_your_trade_type": "Seleziona la tua tipologia di trade", "Portfolio": "Portafoglio", "Upcoming_Events": "Prossimi eventi", "Week_of": "Settimana di", "minimum_available_duration": "durata minima disponibile", "Last_digit_stats_for_the_latest_[_1]_ticks_on_[_2]": "Le statistiche delle ultime cifre per i [_1] tick più recenti su [_2]", "Sorry,_this_feature_is_not_available_": "Siamo spiacenti, questa funzione non è disponibile.", "Lock_Cashier": "Blocca la Cassa", "Deposit_[_1]_[_2]_virtual_money_into_your_account_[_3]": "Deposita il denaro virtuale di [_1] [_2] sul suo account [_3]", "Your_token_has_expired__Please_click_<a_class=\"pjaxload\"_href=\"[_1]\">here</a>_to_restart_the_verification_process_": "Il tuo token è scaduto. Clicca <a class=\"pjaxload\" href=\"[_1]\">qui</a> per riavviare la procedura di verifica.", "Walkthrough_Guide": "Guida dettagliata", "The_server_<a_href=\"[_1]\">endpoint</a>_is:_[_2]": "Il server <a href=\"[_1]\">finale</a> è: [_2]", "Password_Reset": "Reset della password", "Authorise_your_account_": "Autorizza il tuo account.", "Original_Low_Barrier": "Barriera inferiore originale", "Month": "Mese", "Cashier": "Cassa", "Your_password_cannot_be_the_same_as_your_email": "La tua password non può essere uguale alla tua email", "Exclude_time_cannot_be_less_than_6_months_": "Il periodo di esclusione non può essere inferiore a 6 mesi.", "Sell_at_market": "Vendi sul mercato", "This_field_is_required_": "Questo campo è obbligatorio.", "Due_to_recent_changes_in_the_regulations,_we_are_required_to_ask_our_clients_to_complete_the_following_Financial_Assessment__Please_note_that_you_will_not_be_able_to_continue_trading_until_this_is_completed_": "A seguito di recenti variazioni normative, ai nostri clienti richiediamo di completare la seguente Valutazione finanziaria. Ti preghiamo di notare che non potrai continuare a fare trading fino a quando non l'avrai completato.", "Please_select_a_value": "Seleziona un valore", "Your_Client_will_receive_an_email_notification_informing_him/her_that_the_transfer_has_been_processed_": "Il tuo Cliente riceverà un'email di notifica in cui gli viene comunicato che il trasferimento è stato elaborato.", "Try_adding_more_letters_": "Cerca di aggiungere più lettere.", "Withdrawal": "Prelievo", "The_maximum_number_of_tokens_([_1])_has_been_reached_": "Il numero massimo di token ([_1]) è stato raggiunto.", "You_have_sold_this_contract_at_[_1]_[_2]": "Hai venduto questo contratto a [_1] [_2]", "IP_Address": "Indirizzo IP", "Purchase_Price": "Prezzo d'acquisto", "Try_adding_more_numbers_": "Cerca di aggiungere più numeri.", "Barrier": "Barriera", "Higher/Lower": "High/Low", "Login_ID": "ID di accesso", "Sorry,_you_have_entered_an_incorrect_cashier_password": "Siamo spiacenti, hai inserito una password della cassa non corretta", "Password_is_very_strong": "La password è molto forte", "Please_submit_a_valid_[_1]_": "Invia un [_1] valido.", "[_1]_has_updated_its_[_2]__By_clicking_OK,_you_confirm_that_you_have_read_and_accepted_the_updated_[_2]_": "[_1] ha aggiornato i suoi [_2]. Cliccando su OK, confermi di aver letto e accettato i [_2] aggiornati.", "day": "giorno", "Next_Day": "Giorno successivo", "Settles": "Liquida", "Over/Under": "Sopra/Sotto", "There_was_some_invalid_character_in_an_input_field_": "Un campo di immissione testo conteneva uno o più caratteri non validi.", "Please_enter_a_number_between_0_and_[_1]": "Inserisci un numero compreso tra 0 e [_1]", "Commodities_trading_frequency": "Frequenza del trading con le materie prime", "Human_Resources": "Risorse umane", "not_available": "non disponibile", "Rise/Fall": "Rialzo/Ribasso", "Previous": "Precedente", "My_Account": "Il mio account", "Please_fill_in_the_Login_ID_and_Amount_you_wish_to_transfer_to_your_Client_in_the_form_below:": "Inserisci l'ID di accesso e l'Importo che desideri trasferire al tuo Cliente nel modulo sottostante:", "Even/Odd": "Pari/Dispari", "details": "dettagli", "hyphen": "trattino", "Total_Cost": "Costo totale", "Withdraw": "Preleva", "Closes_early_(at_21:00)": "Chiude in anticipo (alle 21:00)", "Profit": "Profitto", "Stake": "Puntata", "Opens": "Apre", "June": "Giugno", "Oct": "Ott", "You_have_already_withdrawn_the_equivalent_of_[_1]_[_2]_": "Hai già prelevato l'equivalente di [_1] [_2].", "Stocks_trading_frequency": "Frequenza del trading in azioni", "March": "Marzo", "Authenticate": "Convalida", "Date": "Data", "$25,000_-_$100,000": "$25.000 - $100.000", "Japan": "Giappone", "This_contract_has_LOST": "Questo contratto ha PERSO", "Please_wait_<br_/>Your_request_is_being_processed_": "Attendi.<br />La tua richiesta sta per essere elaborata.", "Remaining_time": "Tempo residuo", "Internal_Auditor": "Revisore interno", "Potential_Profit": "Profitto potenziale", "Your_account_is_fully_authenticated_and_your_withdrawal_limits_have_been_lifted_": "Il tuo account è stato completamente convalidato e sono stati rimossi i tuoi limiti di prelievo.", "Save_as_PNG": "Salva come PNG", "Start_time": "Orario d'inizio", "Open": "Apri", "Prices": "Prezzi", "Finance": "Finanza", "Matches/Differs": "Combacia/Differisce", "Please_enter_an_integer_value": "Inserisci un numero intero", "Self-Employed": "Lavoratore autonomo", "Ends_In/Out": "Termina In/Out", "Status": "Stato", "You_have_not_granted_access_to_any_applications_": "Non hai accesso ad alcuna applicazione.", "Your_request_to_withdraw_[_1]_[_2]_from_your_account_[_3]_to_Payment_Agent_[_4]_account_has_been_successfully_processed_": "La tua richiesta di prelevare [_1] [_2] dal tuo account [_3] all'account dell'Agente di pagamento [_4] è stata elaborata con successo.", "Invalid_amount,_maximum_is": "Importo non valido, il massimo è", "Forex_trading_frequency": "Frequenza di trading su Forex", "Never_Used": "Mai utilizzato", "Administrative_Executive": "Addetti Amministrazione", "End_time": "Orario di fine", "You_should_enter_between_[_1]_characters_": "Dovresti inserire tra i [_1] caratteri.", "This_contract_was_affected_by_a_Corporate_Action_event_": "Questo contratto è stato influenzato da un evento di azioni societarie." };
	texts_json['PL'] = { "You_have_already_withdrawn_[_1]_[_2]_": "Właśnie dokonano wypłaty [_2] [_1].", "Select_your_trade_type": "Wybierz rodzaj zakładu", "Quality_Assurance": "Zapewnianie jakości", "Up/Down": "Góra/dół", "Your_transaction_reference_number_is_[_1]": "Numer referencyjny Twojej transakcji to [_1]", "Please_enter_a_number_greater_or_equal_to_[_1]_": "Proszę wpisać liczbę większą lub równą [_1].", "End_time_must_be_after_start_time_": "Czas zakończenia musi być późniejszy niż czas rozpoczęcia.", "loading___": "ładowanie...", "Marketing_Executives": "Kierownicy ds. marketingu", "Please_check_your_email_for_the_value_of_this_token": "Informacja na temat tego tokenu została wysłana na Twój adres e-mail", "Adjusted_Low_Barrier": "Dolny limit został zmieniony", "Quantitative_Analysis": "Analiza ilościowa", "Indicative": "Orientacyjny", "Sorry,_this_feature_is_not_available_": "Przepraszamy, wybrana funkcja jest niedostępna.", "Upcoming_Events": "Nadchodzące wydarzenia", "Week_of": "Tydzień", "minimum_available_duration": "minimalny dostępny czas trwania", "Last_digit_stats_for_the_latest_[_1]_ticks_on_[_2]": "Statystyki końcowych cyfr dla ostatnich [_1] transakcji z najmniejszym przyrostem ceny dla rynku [_2]", "Global_Customer_Service_Representatives": "Pracownicy obsługi klienta", "Barrier_([_1])": "Limit ([_1])", "Invalid_email_address": "Nieprawidłowy adres e-mail", "{JAPAN_ONLY}It_is_determined_the_customers_have_basic_knowledge_of_option_trading_by_the_results_of_the_knowledge_test__If_the_customers_start_trading,_the_customers_need_to_agree_not_have_lawsuit_despite_the_customer_are_shortage_of_knowledge_related_to_options_trading,_and_it_cause_damages,_we_admit_to_open_the_trading_account_": "It is determined the customers have basic knowledge of option trading by the results of the knowledge test. If the customers start trading, the customers need to agree not have lawsuit despite the customer are shortage of knowledge related to options trading, and it cause damages, we admit to open the trading account.", "This_symbol_is_not_active__Please_try_another_symbol_": "Ten symbol jest nieaktywny. Użyj innego symbolu.", "Please_follow_the_pattern_3_numbers,_a_dash,_followed_by_4_numbers_": "Proszę zastosować schemat: 3 cyfry, myślnik, 4 cyfry.", "Mrs": "Pani", "Your_cashier_is_locked_as_per_your_request_-_to_unlock_it,_please_click_[_1]here": "Sekcja Kasjer została zablokowana na Twoją prośbę - jeśli chcesz ją odblokować, prosimy kliknąć [_1] tutaj", "Password": "Hasło", "Permissions": "Pozwolenia", "Low_barrier": "Dolny limit", "minutes": "min", "$100,000_-_$250,000": "100 000 $ – 250 000 $", "Select_your_underlying_asset": "Wybierz aktywa bazowe", "This_contract_can_not_be_traded_in_the_final_2_minutes_before_settlement": "Nie można zawierać tego zakładu w statnich 2 minutach przed rozliczeniem", "New_password_is_same_as_old_password_": "Nowe hasło jest identyczne z poprzednim.", "numbers": "liczby", "month": "miesiąc", "Password_must_contains_at_least_1_digit,_1_uppercase_letter_and_1_lowercase_letter_": "Hasło musi zawierać minimum 1 cyfrę, 1 wielką literę i 1 małą literę.", "Investment_Account": "Konto inwestycyjne", "period": "okres", "Saturday": "Sobota", "Month": "Miesiąc", "Hour": "Godzina", "Your_password_cannot_be_the_same_as_your_email": "Hasło nie może być takie samo jak adres e-mail", "Cashier": "Kasjer", "Exclude_time_cannot_be_less_than_6_months_": "Czas wyłączenia nie może być krótszy niż 6 miesięcy.", "Sell_at_market": "Sprzedawaj na rynku", "Withdrawal": "Wypłata", "You_have_sold_this_contract_at_[_1]_[_2]": "Sprzedano ten kontrakt po cenie [_2] [_1]", "IP_Address": "Adres IP", "The_maximum_number_of_tokens_([_1])_has_been_reached_": "Maksymalna liczba tokenów ([_1]) została osiągnięta.", "Purchase_Price": "Cena zakupu", "This_field_is_required_": "To pole jest wymagane.", "Please_select_a_value": "Proszę wybrać wartość", "Due_to_recent_changes_in_the_regulations,_we_are_required_to_ask_our_clients_to_complete_the_following_Financial_Assessment__Please_note_that_you_will_not_be_able_to_continue_trading_until_this_is_completed_": "Z powodu niedawnych zmian w przepisach jesteśmy zobowiązani poprosić klientów o wypełnienie następującego formularza oceny sytuacji finansowej. Kontynuowanie handlowania będzie niemożliwe dopóki formularz nie zostanie wypełniony.", "{JAPAN_ONLY}Sorry,_you_have_failed_the_test,_please_try_again_after_24_hours_": "Sorry, you have failed the test, please try again after 24 hours.", "Your_Client_will_receive_an_email_notification_informing_him/her_that_the_transfer_has_been_processed_": "Twój Klient dostanie powiadomienie e-mailem z informacją, że przelew został wykonany.", "Try_adding_more_letters_": "Dodaj więcej liter.", "min:_1,000": "min.: 1 000", "Your_token_has_expired__Please_click_<a_class=\"pjaxload\"_href=\"[_1]\">here</a>_to_restart_the_verification_process_": "Twój token wygasł. Kliknij <a class=\"pjaxload\" href=\"[_1]\">tutaj</a>, aby rozpocząć proces weryfikacyjny ponownie.", "Lock_Cashier": "Zablokuj sekcję Kasjer", "Deposit_[_1]_[_2]_virtual_money_into_your_account_[_3]": "Wpłać na swoje konto [_3] wirtualne pieniądze w kwocie: [_2] [_1]", "Original_Low_Barrier": "Pierwotny dolny limit", "Walkthrough_Guide": "Przewodnik ogólny", "The_server_<a_href=\"[_1]\">endpoint</a>_is:_[_2]": "<a href=\"[_1]\">Punkt końcowy</a> serwera to: [_2]", "Password_Reset": "Resetowanie hasła", "Authorise_your_account_": "Autoryzuj swoje konto.", "{JAPAN_ONLY}Section_4:_Risk": "Section 4: Risk", "Even/Odd": "Parzysta/nieparzysta", "hyphen": "myślnik", "details": "szczegóły", "Total_Cost": "Całkowity koszt", "Withdraw": "Wypłata", "Human_Resources": "Zasoby ludzkie", "Rise/Fall": "Wzrost/spadek", "not_available": "niedostępne", "Previous": "Poprzedni", "My_Account": "Moje konto", "Please_fill_in_the_Login_ID_and_Amount_you_wish_to_transfer_to_your_Client_in_the_form_below:": "W formularzu poniżej wpisz login i kwotę, którą chcesz przekazać swojemu Klientowi:", "June": "Czerwiec", "Oct": "Październik", "You_have_already_withdrawn_the_equivalent_of_[_1]_[_2]_": "Już wypłaciłeś/aś ekwiwalent [_2] [_1].", "Closes_early_(at_21:00)": "Zamykane wcześnie (o 21:00)", "Sorry,_account_signup_is_not_available_in_your_country__Please_contact_<a_href=\"[_1]\">customer_support</a>_for_more_information_": "Przepraszamy, rejestracja konta nie jest dostępna w Twoim kraju. Proszę skontaktować się z <a href=\"[_1]\">>działem obsługi klienta</a>, aby uzyskać więcej informacji.", "Profit": "Zysk", "Stake": "Stawka", "Opens": "Otwarcie", "Login_ID": "Login", "Password_is_very_strong": "Bardzo silne hasło", "Sorry,_you_have_entered_an_incorrect_cashier_password": "Przepraszamy, wpisano nieprawidłowe hasło do kasjera", "Try_adding_more_numbers_": "Dodaj więcej cyfr.", "Barrier": "Limit", "Spot": "Cena aktualna", "Higher/Lower": "Wyższy/niższy", "There_was_some_invalid_character_in_an_input_field_": "Nieprawidłowy znak w polu formularza.", "Please_enter_a_number_between_0_and_[_1]": "Proszę wpisać liczbę od 0 do [_1]", "Commodities_trading_frequency": "Częstotliwość handlowania towarami", "[_1]_has_updated_its_[_2]__By_clicking_OK,_you_confirm_that_you_have_read_and_accepted_the_updated_[_2]_": "Firma [_1] zaktualizowała swój [_2]. Kliknięcie OK oznacza, że [_2] w nowej wersji jest Ci znany i wyrażasz zgodę na jego postanowienia.", "Please_submit_a_valid_[_1]_": "Podaj poprawny [_1].", "day": "dzień", "Next_Day": "Następny dzień", "Settles": "Rozliczenie", "Over/Under": "Ponad/poniżej", "Prices": "Ceny", "Matches/Differs": "Zgadza się/Różni się", "Finance": "Finanse", "Please_enter_an_integer_value": "Wpisz liczbę całkowitą", "Remaining_time": "Pozostały czas", "Internal_Auditor": "Audytor wewnętrzny", "Potential_Profit": "Możliwy zysk", "Your_account_is_fully_authenticated_and_your_withdrawal_limits_have_been_lifted_": "Twoje konto jest w pełni zweryfikowane, a Twój limit wypłat został zwiększony.", "Save_as_PNG": "Zapisz jako PNG", "Start_time": "Godzina rozpoczęcia", "Open": "Otwarcie", "Never_Used": "Nigdy nie użyte", "Administrative_Executive": "Starszy specjalista ds. administracyjnych", "You_should_enter_between_[_1]_characters_": "Proszę wprowadzić następującą liczbę znaków: [_1].", "End_time": "Godzina zakończenia", "This_contract_was_affected_by_a_Corporate_Action_event_": "Działania przedsiębiorstwa wpłynęły na ten kontrakt.", "Self-Employed": "Samozatrudnienie", "Ends_In/Out": "Zakończy się w/poza", "Your_request_to_withdraw_[_1]_[_2]_from_your_account_[_3]_to_Payment_Agent_[_4]_account_has_been_successfully_processed_": "Twój wniosek o wypłatę [_2] [_1] z Twojego konta [_3] na konto pośrednika płatności [_4] został zrealizowany.", "You_have_not_granted_access_to_any_applications_": "Nie przyznano Ci dostępu do żadnej aplikacji.", "Forex_trading_frequency": "Częstotliwość handlowania walutami", "Invalid_amount,_maximum_is": "Nieprawidłowa kwota, maksimum wynosi", "March": "Marzec", "Authenticate": "Zweryfikuj", "Date": "Data", "Stocks_trading_frequency": "Częstotliwość handlowania akcjami", "This_contract_has_LOST": "Ten kontrakt PRZEGRAŁ.", "{JAPAN_ONLY}This_knowledge_test_is_required_by_law__As_we_provide_the_test,_we_know_customers_better_whether_the_customers_are_suitable_investors_to_be_carried_out_the_binary_options_trading,_and_customers_can_start_trading_with_us_": "This knowledge test is required by law. As we provide the test, we know customers better whether the customers are suitable investors to be carried out the binary options trading, and customers can start trading with us.", "Please_wait_<br_/>Your_request_is_being_processed_": "Prosimy o cierpliwość.<br />Twoja prośba jest właśnie przetwarzana.", "$25,000_-_$100,000": "25 000 $ – 100 000 $", "min": "min.", "Japan": "Japonia", "Quality_Assurance_Engineer": "Inżynier ds. jakości", "Amount": "Kwota", "Over_$1,000,000": "Ponad 1 000 000 $", "Statement": "Oświadczenie", "February": "Luty", "Graphic_Designers": "Graficy", "Less_than_$100,000": "Mniej niż 100 000 $", "Ms": "Pani", "{JAPAN_ONLY}Section_2:_Method": "Section 2: Method", "December": "Grudzień", "The_Payment_Agent_facility_is_currently_not_available_in_your_country_": "Usługi pośredników płatności są obecnie niedostępne w Twoim kraju.", "You_must_accept_the_terms_and_conditions_to_open_an_account_": "Musisz zaakceptować regulamin, aby otworzyć konto.", "Password_is_strong": "Silne hasło", "Buy": "Kup", "Corporate_Action": "Działania przedsiębiorstwa", "Compliance": "Zgodność", "Low_barrier_offset": "Wyrównanie dolnego limitu", "Password_should_have_lower_and_uppercase_letters_with_numbers_": "Hasło powinno zawierać wielkie i małe litery oraz cyfry.", "Applications": "Aplikacje", "The_two_passwords_that_you_entered_do_not_match_": "Wprowadzone hasła nie są identyczne.", "Sorry,_an_error_occurred_while_processing_your_account_": "Przepraszamy, wystąpił błąd podczas operacji na Twoim koncie.", "week": "Tydzień", "Market_is_closed__Please_try_again_later_": "Rynek jest zamknięty. Prosimy spróbować później.", "Try_adding_more_letters_or_numbers_": "Dodaj więcej liter i cyfr.", "October": "Październik", "Country_Manager": "Dyrektor generalny na dany kraj", "second": "sekunda", "Today": "Dziś", "This_contract_has_WON": "Ten kontrakt WYGRAŁ", "Stocks_trading_experience": "Doświadczenie w handlowaniu akcjami", "We_are_not_accepting_accounts_from_residents_of_this_country_at_the_present_time_": "W tej chwili nie otwieramy kont dla mieszkańców z tych krajów.", "Old_password_is_wrong_": "Stare hasło jest nieprawidłowe.", "November": "Listopad", "High_Barrier_([_1])": "Górny limit ([_1])", "Contract_Expiry": "Wygaśnięcie kontraktu", "Last_Used": "Ostatnio używane", "An_additional_password_can_be_used_to_restrict_access_to_the_cashier_": "Dodatkowe hasło może być wykorzystane do ograniczania dostępu do sekcji Kasjer.", "Human_Resource_Executive": "Kierownik ds. zasobów ludzkich", "Are_you_sure_that_you_want_to_permanently_delete_token": "Czy na pewno chcesz trwale usunąć token", "Please_log_in_": "Proszę się zalogować.", "Trading_Times": "Godziny handlu", "Update": "Aktualizuj", "Jun": "Czerwiec", "Transfer_to_Login_ID": "Przelew dla loginu", "Your_Application_is_Being_Processed_": "Twój wniosek jest przetwarzany.", "Senior_Perl_Developer": "Starszy programista Perl", "Information_Technology": "Technologie informacyjne (IT)", "Number_of_ticks": "Liczba najmniejszych przyrostów ceny", "Points": "Punkty", "months": "miesiące", "Forex_trading_experience": "Doświadczenie w handlowaniu walutami", "Connection_error:_Please_check_your_internet_connection_": "Błąd połączenia: sprawdż połączenie internetowe", "Transaction_performed_by_[_1]_(App_ID:_[_2])": "Transakcja dokonana przez [_1] (App ID: [_2])", "Save_as_SVG": "Zapisz jako SVG", "In/Out": "Zakłady w/poza", "Education": "Edukacja", "September": "Wrzesień", "Original_High_Barrier": "Pierwotny górny limit", "Please_complete_the_following_financial_assessment_form_before_continuing_": "Zanim przejdziesz dalej wypełnij poniższy formularz oceny sytuacji finansowej.", "Anti-Fraud_Officer": "Specjalista ds. wyłudzeń", "6-10_transactions_in_the_past_12_months": "6-10 transakcji w ciągu ostatnich 12 miesięcy", "Contract_ID": "Identyfikator kontraktu", "Resale_not_offered": "Brak możliwości odsprzedaży", "{JAPAN_ONLY}Please_complete_the_following_questions_": "Please complete the following questions.", "Last_Digit_Stats": "Statystyki ostatniej cyfry", "Tuesday": "Wtorek", "Please_input_a_valid_date": "Wpisz poprawną datę", "Failed_to_reset_password__[_1],_please_retry_": "Nie udało się zresetować hasła. [_1], spróbuj ponownie.", "Zoom": "Powiększ", "Sunday": "Niedziela", "Jul": "Lipiec", "Time_is_in_the_wrong_format_": "Czas został podany w nieprawidłowym formacie.", "Over_$500,001": "Ponad 500 001 $", "Loss": "Strata", "Action": "Czynności", "Miss": "Pani", "Salaried_Employee": "Pracownik etatowy", "[_1]_[_2]_has_been_credited_to_your_Virtual_money_account_[_3]": "[_2] [_1] zostało odjęte z Twojego konta wirtualnego [_3]", "Net_Annual_Income": "Roczny dochód netto", "Please_select_a_payment_agent": "Proszę wybrać pośrednika płatności", "Deposit": "Wpłata", "Exclude_time_cannot_be_for_more_than_5_years_": "Czas wyłączenia nie może być dłuższy niż 5 lat.", "Level_of_Education": "Poziom wykształcenia", "Price": "Cena", "Sell_time": "Godzina sprzedaży", "Password_is_not_strong_enough_": "Hasło jest za słabe.", "For_added_security,_please_check_your_email_to_retrieve_the_verification_token_": "Ze względów bezpieczeństwa token weryfikujący został wysłany na Twój adres e-mail. Sprawdź swoją skrzynkę odbiorczą.", "Password_is_weak": "Słabe hasło", "mins": "min.", "Sorry,_account_opening_is_unavailable_": "Przepraszamy, otwarcie konta jest niemożliwe.", "Our_site_does_not_charge_any_transfer_fees_": "Nie pobieramy żadnych opłat za przelewy środków.", "Invalid_date_of_birth_": "Nieprawidłowa data urodzenia.", "Your_transaction_reference_is": "Kod referencyjny Twojej transakcji to", "Gaming_Account": "Konto gracza", "Profit/Loss_(points)": "Zysk/Strata (punkty)", "Session_duration_limit_cannot_be_more_than_6_weeks_": "Limit czasu sesji nie może przekroczyć 6 tygodni.", "Equals": "Równa się", "Real_Account": "Prawdziwe konto", "Mo": "Pn", "There_was_a_problem_accessing_the_server_": "Wystąpił błąd podczas uzyskiwania dostępu do serwera.", "Translator": "Tłumacz", "Indices_trading_frequency": "Częstotliwość handlowania wskaźnikami", "Contract": "Kontrakt", "Health": "Zdrowie", "Failed": "Zakończone niepowodzeniem", "Please_enter_a_valid_amount_": "Wprowadź prawidłową kwotę.", "Binary_options_or_other_financial_derivatives_trading_experience": "Doświadczenie w handlowaniu opcjami binarnymi lub innymi instrumentami pochodnymi", "High_barrier_offset": "Wyrównanie górnego limitu", "Format:_yyyy-mm-dd_(not_required_for_virtual-money_accounts)": "Format: rrrr-mm-dd (nie jest wymagany w przypadku kont wirtualnych)", "{JAPAN_ONLY}Knowledge_Test_Result": "Knowledge Test Result", "Waiting_for_exit_tick_": "Oczekuje na końcową zmianę ceny.", "verification_token": "token weryfikacyjny", "Adjusted_Barrier": "Limit zmieniony", "July": "Lipiec", "Password_does_not_match_": "Hasło się nie zgadza.", "Tu": "Wt", "Spot_Time": "Czas spot", "0-5_transactions_in_the_past_12_months": "0-5 transakcji w ciągu ostatnich 12 miesięcy", "Target": "Cel", "Major_Pairs": "Główne pary", "weeks": "tygodnie", "Proofreader": "Korektor", "{JAPAN_ONLY}Section_5:_Calculation": "Section 5: Calculation", "Wednesday": "Środa", "Questions": "Pytania", "Entry_spot": "Pozycja wejściowa", "Stop_Profit_Level": "Poziom Stop zyskom", "Successful": "Zakończono powodzeniem", "Select_your_market": "Wybierz rynek", "Date_and_Time": "Data i godzina transakcji", "days": "dni", "Your_password_has_been_successfully_reset__Please_log_into_your_account_using_your_new_password_": "Twoje hasło zostało zresetowane. Zaloguj się na swoje konto, używając swojego nowego hasła.", "Your_withdrawal_limit_is_[_1]_[_2]_": "Twój limit wypłat wynosi [_2] [_1].", "January": "Styczeń", "View": "Widok", "Minute": "Minuta", "Contract_is_not_started_yet": "Kontrakt jeszcze się nie rozpoczął", "comma": "przecinek", "hour": "godzina", "Investments_&_Dividends": "Inwestycje i dywidenda", "Profit_Table": "Tabela zysków", "Browser": "Przeglądarka", "Nov": "Listopad", "$100,000_-_$500,000": "100 000 $ – 500 000 $", "Reset_Password": "Zresetuj hasło", "Your_settings_have_been_updated_successfully_": "Twoje ustawienia zostały uaktualnione.", "points": "punkty", "Previous_Day": "Poprzedni dzień", "1-2_years": "1-2 lata", "Thursday": "Czwartek", "Password_score_is:_[_1]__Passing_score_is:_20_": "Ocena tego hasła to: [_1]. Akceptowalna ocena to: 20.", "Estimated_Net_Worth": "Szacowana wartość netto", "All_markets_are_closed_now__Please_try_again_later_": "Wszystkie rynki są obecnie zamknięte. Prosimy spróbować później.", "m": "miesiąc", "Confirm": "Potwierdź", "ticks": "zmiany ceny", "Quantitative_Developer": "Programista danych ilościowych", "Next": "Następny", "Friday": "piątek", "You_have_already_withdrawn_the_equivalent_of_[_1]_[_2]_in_aggregate_over_the_last_[_3]_days_": "Łączny ekwiwalent [_2] [_1] został już wypłacony w ciągu ostatnich [_3] dni.", "apostrophe": "apostrof", "[_1]_Please_click_the_link_below_to_restart_the_password_recovery_process__If_you_require_further_assistance,_please_contact_our_Customer_Support_": "[_1] Aby rozpocząć proces odzyskiwania hasła, kliknij na poniższy link. Jeśli potrzebujesz pomocy, skontaktuj się z naszym działem obsługi klienta.", "Other_financial_instruments_trading_frequency": "Częstotliwość handlowania innymi instrumentami finansowymi", "Barrier_Change": "Zmiana limitu", "Invalid_amount,_minimum_is": "Nieprawidłowa kwota, minimum wynosi", "Compliance_Executive": "Starszy specjalista ds. zgodności", "April": "Kwiecień", "An_error_occured_": "Wystąpił błąd.", "Name": "Nazwisko", "Senior_Front-End_Developer": "Starszy programista front-end", "Start_Time": "Godzina rozpoczęcia", "Low_Barrier_([_1])": "Dolny limit ([_1])", "{JAPAN_ONLY}To_invest_a_binary_options_investment_accurately,_the_customer_are_required_knowledge_and_experience_related_to_derivative_transactions_": "To invest a binary options investment accurately, the customer are required knowledge and experience related to derivative transactions.", "Affiliate": "Partner", "Unlock_Cashier": "Odblokuj sekcję Kasjer", "Only_[_1]_are_allowed_": "Dozwolone są tylko [_1].", "Potential_Payout": "Możliwa wypłata", "Sorry,_this_feature_is_available_to_virtual_accounts_only_": "Przepraszamy, ta funkcja jest dostępna tylko dla kont wirtualnych.", "Verification_code_format_incorrect_": "Format kodu weryfikującego jest nieprawidłowy.", "Predict_the_direction<br_/>and_purchase": "Oszacuj kierunek zmian<br />i kup", "Print_chart": "Drukuj wykres", "Your_trading_statistics_since_[_1]_": "Twoje statystyki handlowe od [_1].", "Low_Barrier": "Dolny limit", "New_Year's_Day": "Nowy Rok", "Sa": "So", "Revoke_access": "Zablokowanie dostępu", "Your_account_is_not_fully_authenticated_": "Twoje konto nie jest w pełni zweryfikowane.", "Amount_per_point": "Kwota na punkt", "If_you_need_assistance_feel_free_to_contact_our_[_1]Customer_Support": "Jeśli potrzebujesz pomocy, skontaktuj się z działem obsługi klienta [_1]", "Sale_Price": "Cena sprzedaży", "Indices_trading_experience": "Doświadczenie w handlowaniu wskaźnikami", "Duration": "Czas trwania", "Explanation": "Wyjaśnienie", "Login_History": "Historia logowania", "Your_cashier_is_locked_as_per_your_request_-_to_unlock_it,_please_enter_the_password_": "Sekcja Kasjer została zablokowana na Twoją prośbę - jeśli chcesz ją odblokować, prosimy o podanie hasła.", "Jan": "Styczeń", "Sep": "Wrzesień", "Feb": "Luty", "Step": "Krok", "Please_enter_a_date_that_is_at_least_6_months_from_now_": "Wpisz datę odległą o co najmniej 6 miesięcy od dziś.", "{JAPAN_ONLY}Take_knowledge_test": "Take knowledge test", "Stop-loss": "Stop-stratom", "Your_[_1]_day_withdrawal_limit_is_currently_[_2]_[_3]_(or_equivalent_in_other_currency)_": "Twój [_1]-dniowy limit wypłat wynosi obecnie [_3] [_2] (Lub jego ekwiwalent w innej walucie).", "Contract_Information": "Informacje o kontrakcie", "Therefore_your_current_immediate_maximum_withdrawal_(subject_to_your_account_having_sufficient_funds)_is_[_1]_[_2]_(or_equivalent_in_other_currency)_": "Dlatego w chwili obecnej Twoja maksymalna natychmiastowa wypłata (o ile posiadasz na koncie wystarczające środki) wynosi [_2] [_1] (lub równoważność tej kwoty w innej walucie).", "Internal_Audit": "Audyt wewnętrzny", "letters": "litery", "This_contract_won": "Ten kontrakt wygrał", "Other": "Inne", "Credit/Debit": "Winien/Ma", "Now": "Teraz", "email_address": "adres e-mail", "Current_Level": "Obecny poziom", "Save_as_CSV": "Zapisz jako CSV", "Exercise_period": "Okres ćwiczeń", "Exit_Spot_Time": "Czas punktu wyjściowego", "Barrier_offset": "Wyrównanie limitu", "Accounting": "Rachunkowość", "When_you_click_'Ok'_you_will_be_excluded_from_trading_on_the_site_until_the_selected_date_": "Po kliknięciu przycisku OK handlowanie na portalu nie będzie możliwe aż do wybranej daty.", "Please_confirm_the_transaction_details_in_order_to_complete_the_transfer:": "Proszę potwierdzić szczegóły transakcji w celu zakończenia przelewu:", "All_barriers_in_this_trading_window_are_expired": "Wszystkie limity widoczne w tym oknie handlowania wygasły", "Start_Trading": "Rozpocznij handel", "Tertiary": "Wyższe", "Processing_your_request___": "Twa przetwarzanie Twojego żądania...", "False": "Fałsz", "View_your_statement": "Zobacz swój wyciąg", "Are_you_sure_that_you_want_to_permanently_revoke_access_to_application": "Czy na pewno chcesz na stałe wyłączyć dostęp do aplikacji na stałe?", "Resources": "Środki", "Touch/No_Touch": "Osiągnie", "There_was_a_problem_accessing_the_server_during_purchase_": "Wystąpił błąd podczas uzyskiwania dostępu do serwera w trakcie zakupu.", "Withdrawal_for_your_account_is_not_allowed_at_this_moment__Please_contact_[_1]_to_unlock_it_": "Wypłaty środków z Twojego konta są w tym momencie niemożliwe. Skontaktuj się z [_1], aby je odblokować.", "Please_try_again_": "Spróbuj ponownie.", "max:_100,000": "Maks.: 100 000", "$250,000_-_$1,000,000": "250 000 $ – 1 000 000 $", "Asset": "Kapitał", "Adjust_trade_parameters": "Dostosuj parametry handlowe", "Please_select_a_valid_date": "Proszę wybrać poprawną datę", "Sorry,_an_error_occurred_while_processing_your_request_": "Przepraszamy, podczas przetwarzania Twojego żądania wystąpił błąd.", "A_scanned_copy_of_your_passport,_driving_licence_(provisional_or_full)_or_identity_card,_showing_your_name_and_date_of_birth__Your_document_must_be_valid_for_at_least_6_months_after_this_date_": "Skan Twojego paszportu, prawa jazdy (czasowego lub normalnego) lub dowodu osobistego z Twoim imieniem i nazwiskiem oraz datą urodzenia. Dokument musi być ważny co najmniej 6 miesięcy od daty przesłania nam jego skanu.", "Never": "Nigdy", "Fr": "Pt", "Refresh_page": "Odśwież stronę", "Tourism": "Turystyka", "We": "Śr", "Your_account_has_no_trading_activity_": "NA Twoim koncie nie odnotowano żadnej aktywności handlowej.", "Your_request_to_transfer_[_1]_[_2]_from_[_3]_to_[_4]_has_been_successfully_processed_": "Twój wniosek o przelanie [_2] [_1] z [_3] na [_4] został zrealizowany.", "Therefore_your_current_immediate_maximum_withdrawal_(subject_to_your_account_having_sufficient_funds)_is_[_1]_[_2]_": "Dlatego w chwili obecnej Twoja maksymalna natychmiastowa wypłata (o ile posiadasz na koncie wystarczające środki) wynosi [_2] [_1].", "Contract_will_be_sold_at_the_prevailing_market_price_when_the_request_is_received_by_our_servers__This_price_may_differ_from_the_indicated_price_": "Kontrakty będą sprzedawane po obowiązującej cenie rynkowej po dotarciu wniosku na nasze serwery. Cena może różnić się od podanej ceny.", "years": "lat(a)", "minute": "min", "Save_as_PDF": "Zapisz jako PDF", "Your_changes_have_been_updated_": "Twoje zmiany zostały wprowadzone.", "There_was_an_error": "Wystąpił błąd", "This_contract_lost": "Ten kontrakt przegrał", "True": "Prawda", "Details": "Szczegóły", "Reference_ID": "ID referencyjne", "DevOps_Manager": "Kierownik zespołu DevOps", "Ok": "OK", "This_feature_is_not_relevant_to_virtual-money_accounts_": "Ta funkcja nie jest dostępna dla kont z wirtualnymi pieniędzmi.", "Apr": "Kwiecień", "Pension": "Emerytura", "Industry_of_Employment": "Sektor zatrudnienia", "Mar": "Marzec", "Current_Time": "Obecny czas", "Closes": "Zamknięcie", "Tick": "Zmiana ceny", "Accounts_And_Payments_Executive": "Starszy specjalista ds. księgowości i płatności", "Total_Profit/Loss": "Całkowity zysk/ całkowita strata", "Stays_In/Goes_Out": "Pozostanie w/przekroczy", "Please_check_the_above_form_for_pending_errors_": "Zapoznaj się z listą nierozwiązanych błędów w powyższym formularzu.", "Mr": "Pan", "Insufficient_balance_": "Niewystarczające saldo.", "Waiting_for_entry_tick_": "Oczekuje na pierwszą zmianę ceny.", "Deposit_of": "Wpłata w wysokości", "Secondary": "Drugorzędne", "Date_of_Birth": "Data urodzenia", "space": "spacja", "Monday": "Poniedziałek", "Income_Source": "Źródło dochodu", "Purchase_Time": "Godzina zakupu", "Enter_the_barrier_in_terms_of_the_difference_from_the_spot_price__If_you_enter_+0_005,_then_you_will_be_purchasing_a_contract_with_a_barrier_0_005_higher_than_the_entry_spot__The_entry_spot_will_be_the_next_tick_after_your_order_has_been_received": "Wprowadź limit w zakresie różnicy od aktualnej ceny. Jeśli wprowadzisz +0,005, zakupisz kontrakt z limitem 0,005 wyższym niż pozycja wejściowa. Pozycja wejściowa to następny najmniejszy przyrost ceny po otrzymaniu zamówienia", "Please_enter_a_number_between_[_1]_": "Proszę wpisać liczbę z przedziału [_1].", "Entry_Level": "Poziom wejściowy", "Net_profit": "Zysk netto", "Last_Digit_Prediction": "Przewidywanie ostatniej cyfry", "Construction": "Budownictwo", "Select_market": "Wybierz rynek", "Shop": "Sklep", "Financial_Assessment": "Ocena finansowa", "Finish": "Zakończ", "hours": "godziny", "Year": "Rok", "Fridays": "piątki", "Sale_Date": "Data sprzedaży", "There_was_a_problem_validating_your_personal_details__Please_fix_the_fields_[_1]here": "Nie udało nam się zweryfikować Twoich danych osobowych. Popraw znajdujące się [_1]tu pola", "Sorry,_your_account_is_not_authorised_for_any_further_contract_purchases_": "Przepraszamy, Twoje konto nie ma uprawnień do kolejnych zakupów kontraktów.", "No_Live_price_update": "Brak aktualnych cen", "Keep_track_of_your_authorised_applications_": "Obserwuj swoje zatwierdzone aplikacje.", "Stop-type": "Stop-typ", "Only_2_decimal_points_are_allowed_": "Dozwolone są tylko 2 miejsca po przecinku.", "Remaining_Time": "Pozostały czas", "h": "godz.", "Verification_Token": "Token weryfikacyjny", "Delete": "Usuń", "This_is_a_staging_server_-_For_testing_purposes_only": "To jest serwer testowy służący wyłącznie testowaniu", "40_transactions_or_more_in_the_past_12_months": "Co najmniej 40 transakcji w ciągu ostatnich 12 miesięcy", "Weekday": "Dzień roboczy", "Minimum_of_[_1]_characters_required_": "Minimalna liczba znaków: [_1].", "Please_check_your_email_to_retrieve_the_token_needed_to_reset_your_password_": "Sprawdź pocztę e-mail, aby odzyskać token potrzebny do zresetowania hasła.", "Your_current_balance_is": "Obecnie Twoje saldo wynosi", "0-1_year": "0-1 rok", "password": "hasło", "To": "Do", "Date_(GMT)": "Data (GMT)", "Closes_early_(at_18:00)": "Zamykane wcześnie (o 18:00)", "Balance": "Saldo", "Binary_options_or_other_financial_derivatives_trading_frequency": "Częstotliwość handlowania opcjami binarnymi lub innymi instrumentami pochodnymi", "When_you_click_\"Ok\"_you_will_be_excluded_from_trading_on_the_site_until_the_selected_date_": "Po kliknięciu przycisku „Ok” handlowanie na portalu nie będzie możliwe aż do wybranej daty.", "Contract_purchased_with_app_ID": "Kontrakt zakupiony z identyfikatorem aplikacji", "Exit_Spot": "Pozycja wyjściowa", "seconds": "sekundy", "Short": "Krótkie", "New_Password": "Nowe hasło", "Random": "Losowy", "Quantitative_Analyst": "Analityk ilościowy", "Adjusted_High_Barrier": "Górny limit został zmieniony", "Your_details_have_been_updated_": "Twoje dane zostały uaktualnione.", "Su": "Nd", "Please_select": "Wybierz", "You_did_not_change_anything_": "Nic nie zostało zmienione.", "Closed": "Zamknięte", "Dec": "Grudzień", "{JAPAN_ONLY}Knowledge_Test": "Knowledge Test", "Commodities_trading_experience": "Doświadczenie w handlowaniu towarami", "High_barrier": "Górny limit", "Deposits_and_withdrawal_for_your_account_is_not_allowed_at_this_moment__Please_contact_[_1]_to_unlock_it_": "Wpłaty środków na konto i ich wypłaty są w tym momencie niemożliwe. Skontaktuj się z [_1], aby je odblokować.", "Period": "Okres", "Primary": "Podstawowy", "Other_financial_instruments_trading_experience": "Doświadczenie w handlowaniu innymi instrumentami finansowymi", "Marketing_Project_Manager": "Kierownik projektów marketingowych", "Your_session_duration_limit_will_end_in_[_1]_seconds_": "Limit czasu sesji zakończy się za [_1] s.", "Payout": "Wypłata", "Purchase": "Kup", "Less_than_$25,000": "Mniej niż 25 000 $", "Back": "Poprzedni", "Jump_To": "Przejdź do", "Please_[_1]_to_view_this_page": "Zaloguj się, aby wyświetlić tę stronę", "Your_account_is_currently_suspended__Only_withdrawals_are_now_permitted__For_further_information,_please_contact_[_1]_": "Twoje konto jest obecnie zawieszone. Dozwolone jest jedynie dokonywanie wypłat. Aby uzyskać więcej informacji, skontaktuj się z [_1].", "Th": "Cz", "High_Barrier": "Górny limit", "{JAPAN_ONLY}It_prohibits_the_copying_of_the_questions___In_addition_,_You_agree_that_you_will_not_leak_to_third_party": "It prohibits the copying of the questions . In addition , You agree that you will not leak to third party", "Not": "Nie", "Settings": "Ustawienia", "Save_as_JPEG": "Zapisz jako JPEG", "Social_Media_Executive": "Kierownik ds. mediów społecznościowych", "We_are_not_able_to_stream_live_prices_at_the_moment__To_enjoy_live_streaming_of_prices_try_refreshing_the_page,_if_you_get_this_issue_after_repeated_attempts_try_a_different_browser": "W chwili obecnej nie jesteśmy w stanie przesyłać cen na żywo. Aby cieszyć się na żywo strumieniową transmisją cen, spróbuj ponownie odświeżyć stronę, a jeśli problem nadal występuje, spróbuj skorzystać z innej przeglądarki", "Contract_Sold": "Kontrakt został sprzedany", "May": "Maj", "Please_select_at_least_one_scope": "Proszę wybrać przynajmniej jeden zakres", "today": "dziś", "Transfer_to": "Przelew do", "Confirm_New_Password": "Potwierdź nowe hasło", "Current": "Obecne", "Please_choose_which_currency_you_would_like_to_transact_in_": "Wybierz, w jakiej walucie chcesz zawrzeć transakcję.", "Note": "Uwaga", "Please_confirm_the_trade_on_your_statement_before_proceeding_": "Aby przejść dalej, proszę potwierdzić transakcję w sekcji Stan konta.", "Upgrade_to_a_Real_Account": "Uaktualnij do konta z prawdziwymi pieniędzmi", "{JAPAN_ONLY}Section_1:_Structure": "Section 1: Structure", "year": "rok", "{JAPAN_ONLY}Section_3:_Outline": "Section 3: Outline", "Your_provided_email_address_is_already_in_use_by_another_Login_ID__According_to_our_terms_and_conditions,_you_may_only_register_once_through_our_site__If_you_have_forgotten_the_password_of_your_existing_account,_please_<a_href=\"[_1]\">try_our_password_recovery_tool</a>_or_contact_customer_service_": "Podany adres e-mail jest już przypisany do innego loginu. Zgodnie z naszym regulaminem można mieć tylko jedno konto na naszym portalu. Jeżeli nie pamiętasz hasła do obecnego konta, <a href=\"[_1]\">skorzystaj z opcji odzyskiwania hasła</a> lub skontaktuj się z obsługą klienta.", "The_financial_trading_services_contained_within_this_site_are_only_suitable_for_customers_who_are_able_to_bear_the_loss_of_all_the_money_they_invest_and_who_understand_and_have_experience_of_the_risk_involved_in_the_acquistion_of_financial_contracts__Transactions_in_financial_contracts_carry_a_high_degree_of_risk__If_purchased_contracts_expire_worthless,_you_will_suffer_a_total_loss_of_your_investment,_which_consists_of_the_contract_premium_": "Usługi zawierania transakcji finansowych oferowane na niniejszym portalu są odpowiednie tylko dla klientów, którzy są w stanie ponieść stratę wszystkich zainwestowanych pieniędzy i którzy rozumieją zagrożenia związane z nabywaniem kontraktów finansowych i mają doświadczenie w tym zakresie. Transakcje finansowe niosą ze sobą wysokie ryzyko. Jeśli zakupiony kontrakt zakończy się bez wartości, stracisz całą zainwestowaną sumę, na którą składać się będzie premia z kontraktu.", "Profit/Loss": "Zysk/Strata", "Description": "Opis", "Charting_for_this_underlying_is_delayed": "Dla tego rynku podstawowego wykresy są opóźnione", "Please_deposit_before_transfer_to_client_": "Wpłać środki przed ich wysłaniem do klienta.", "{JAPAN_ONLY}The_test_is_unavailable_now,_test_can_only_be_taken_again_on_next_business_day_with_respect_of_most_recent_test_": "The test is unavailable now, test can only be taken again on next business day with respect of most recent test.", "Your_withdrawal_limit_is_[_1]_[_2]_(or_equivalent_in_other_currency)_": "Twój limit wypłat to [_2] [_1] (lub jego ekwiwalent w innej walucie).", "Upgrade_to_a_Financial_Account": "Zmień na konto finansowe", "Asset_Index": "Indeks kapitałowy", "Chart": "Wykres", "is_required__Current_spread": "jest wymagany. Obecny spread", "Once_you_click_the_'Submit'_button,_the_funds_will_be_withdrawn_from_your_account_and_transferred_to_your_Client's_account_": "Po kliknięciu przycisku „Prześlij” środki zostaną wypłacone z Twojego konta i przesłane na Twoje konto Klienta.", "End_Time": "Zakończenie", "Long": "Długie", "Over_3_years": "Ponad 3 lata", "Sell": "Sprzedaj", "Return": "Zwrot", "Terms_&_Conditions": "Regulamin", "Original_Barrier": "Pierwotny limit", "today,_Fridays": "dziś, piątki", "Entry_Spot": "Pozycja wejściowa", "You_need_to_finish_all_20_questions_": "Należy odpowiedzieć na wszystkie 20 pytań.", "Exit_spot": "Punkt wyjściowy", "Exclude_time_must_be_after_today_": "Czas wyłączenia musi zaczynać się jutro lub później.", "Your_account_has_no_Login/Logout_activity_": "Na Twoim koncie nie odnotowano żadnej aktywności związanej z logowaniem/wylogowywaniem.", "New_token_created_": "Utworzono nowy token.", "[ctx,minimum_duration,_for_example_minimum_15_seconds]min": "min", "Aug": "Sierpień", "Exit_Level": "Poziom wyjściowy", "{JAPAN_ONLY}This_test_is_for_the_purpose_of_confirming_if_the_customers_have_basic_knowledge_related_to_options_trading__": "This test is for the purpose of confirming if the customers have basic knowledge related to options trading .", "August": "Sierpień", "Score": "Wynik", "Open_a_Financial_Account": "Otwórz konto finansowe", "Virtual_Account": "Konto wirtualne", "Failed_to_update_trade_description_": "Nie udało się uaktualnić opisu transakcji.", "Christmas_Day": "Boże Narodzenie", "Password_is_moderate": "Średnie hasło", "Contract_Confirmation": "Potwierdzenie kontraktu", "Stop_Loss_Level": "Poziom Stop stratom", "(Bejing/CST_-8_hours)": "(Pekin/CST - 8 godzin)", "Day": "Dzień", "From": "Od" };
	texts_json['PT'] = { "There_was_a_problem_validating_your_personal_details__Please_fix_the_fields_[_1]here": "Ocorreu um problema ao validar os seus dados pessoais. Por favor corrija os campos [_1]aqui", "Sorry,_your_account_is_not_authorised_for_any_further_contract_purchases_": "Lamentamos, a sua conta não está autorizada a mais compras de contratos.", "No_Live_price_update": "Sem atualização de preço ao vivo", "Keep_track_of_your_authorised_applications_": "Mantenha um registro dos seus aplicativos autorizados.", "Stop-type": "Tipo de limite", "Financial_Assessment": "Avaliação financeira", "Finish": "Terminar", "Year": "Ano", "hours": "horas", "Shop": "Loja", "Sale_Date": "Data de Venda", "Fridays": "Sexta-feira", "To": "Para", "0-1_year": "0-1 ano", "password": "senha", "Date_(GMT)": "Data (GMT)", "Closes_early_(at_18:00)": "Fecha cedo (às 18:00)", "Balance": "Saldo", "When_you_click_\"Ok\"_you_will_be_excluded_from_trading_on_the_site_until_the_selected_date_": "Quando você clicar em \"Ok\", você será excluído das negociações no site até a data escolhida.", "Binary_options_or_other_financial_derivatives_trading_frequency": "Frequência de negociação de opções binárias ou outros derivados financeiros", "Contract_purchased_with_app_ID": "Contrato adquirido com aplicativo ID", "Exit_Spot": "Preço de saída", "Targeting_short-term_profits": "À procura de lucros de curto prazo", "Only_2_decimal_points_are_allowed_": "Apenas 2 pontos decimais são permitidos.", "Remaining_Time": "Tempo restante", "Verification_Token": "Token de verificação", "This_is_a_staging_server_-_For_testing_purposes_only": "Este é um servidor temporário - apenas para testes", "40_transactions_or_more_in_the_past_12_months": "40 transações ou mais nos últimos 12 meses", "Delete": "Excluir", "Please_check_your_email_to_retrieve_the_token_needed_to_reset_your_password_": "Verifique o seu e-mail para obter o token necessário para a redefinição da sua senha.", "Minimum_of_[_1]_characters_required_": "Um mínimo de [_1] caracteres é necessário.", "Weekday": "Dia de semana", "Your_current_balance_is": "O seu saldo atual é", "Your_details_have_been_updated_": "As suas informações foram atualizadas.", "Director": "Diretor", "Su": "Dom", "You_did_not_change_anything_": "Você não alterou nada.", "Please_select": "Selecione", "Closed": "Fechado", "seconds": "segundos", "Short": "Curto", "New_Password": "Nova Senha", "Random": "Random (Aleatório)", "Quantitative_Analyst": "Analista quantitativo", "Student": "Estudante", "Adjusted_High_Barrier": "Barreira alta ajustada", "Less_than_$25,000": "Menos de $25.000", "Back": "Voltar", "Jump_To": "Pular para", "Please_[_1]_to_view_this_page": "Por favor [_1] para ver esta página", "Th": "Qui", "Your_account_is_currently_suspended__Only_withdrawals_are_now_permitted__For_further_information,_please_contact_[_1]_": "Sua conta está atualmente suspensa e apenas saques estão permitidos. Para mais informações, por favor contacte [_1].", "High_Barrier": "Barreira Alta", "Settings": "Configurações", "Dec": "Dez", "Commodities_trading_experience": "Experiência com negociação de matérias-primas", "Deposits_and_withdrawal_for_your_account_is_not_allowed_at_this_moment__Please_contact_[_1]_to_unlock_it_": "Depósitos e retiradas de sua conta não estão permitidos no momento. Por favor contate [_1] para o desbloqueio.", "High_barrier": "Barreira alta", "Period": "Período", "Primary": "Principal", "Other_financial_instruments_trading_experience": "Experiência com a negociação de outros instrumentos financeiros", "Marketing_Project_Manager": "Gestor de projetos de marketing", "Payout": "Prêmio", "Your_session_duration_limit_will_end_in_[_1]_seconds_": "O limite de duração da sua sessão terminará em [_1] segundos.", "Purchase": "Comprar", "Current": "Atual", "Confirm_New_Password": "Confirme a nova senha", "Please_choose_which_currency_you_would_like_to_transact_in_": "Escolha a moeda com que pretende negociar.", "Note": "Nota", "Please_confirm_the_trade_on_your_statement_before_proceeding_": "Confirme a negociação no seu extrato antes de continuar.", "Upgrade_to_a_Real_Account": "Faça a atualização para uma Conta Real", "Save_as_JPEG": "Salve como JPEG", "Social_Media_Executive": "Executivo de mídia social", "We_are_not_able_to_stream_live_prices_at_the_moment__To_enjoy_live_streaming_of_prices_try_refreshing_the_page,_if_you_get_this_issue_after_repeated_attempts_try_a_different_browser": "Não podemos transmitir ao vivo os preços no momento. Para ver os preços ao vivo tente recarregar a página, se o problema persistir após repetidas tentativas tente um navegar diferente", "Contract_Sold": "Contrato vendido", "May": "Maio", "today": "hoje", "Please_select_at_least_one_scope": "Selecione pelo menos um escopo", "Transfer_to": "Transferir para", "Please_deposit_before_transfer_to_client_": "Deposite antes de transferir para o cliente.", "Charting_for_this_underlying_is_delayed": "Os gráficos para esta base estão com atraso", "Your_withdrawal_limit_is_[_1]_[_2]_(or_equivalent_in_other_currency)_": "O seu limite de retiradas é [_1] [_2] (ou equivalente em outra moeda).", "Administrator": "Administrador", "Upgrade_to_a_Financial_Account": "Faça a atualização para uma Conta Financeira", "Asset_Index": "Índice de Ativos", "Chart": "Gráfico", "year": "ano", "Your_provided_email_address_is_already_in_use_by_another_Login_ID__According_to_our_terms_and_conditions,_you_may_only_register_once_through_our_site__If_you_have_forgotten_the_password_of_your_existing_account,_please_<a_href=\"[_1]\">try_our_password_recovery_tool</a>_or_contact_customer_service_": "O endereço de e-mail que forneceu já está em uso por outra ID de Login. De acordo com os nossos termos e condições, você pode registrar-se apenas uma vez no nosso site. Caso você tenha esquecido da senha da sua conta existente,<a href=\"[_1]\">experimente usar a ferramenta de recuperação de senha</a> ou contate o nosso serviço de apoio ao cliente.", "The_financial_trading_services_contained_within_this_site_are_only_suitable_for_customers_who_are_able_to_bear_the_loss_of_all_the_money_they_invest_and_who_understand_and_have_experience_of_the_risk_involved_in_the_acquistion_of_financial_contracts__Transactions_in_financial_contracts_carry_a_high_degree_of_risk__If_purchased_contracts_expire_worthless,_you_will_suffer_a_total_loss_of_your_investment,_which_consists_of_the_contract_premium_": "Os serviços de negociação financeira contidos neste site são adequados apenas para clientes que sejam capazes de suportar a perda de todo o dinheiro que investem e que entendem e têm experiência nos riscos envolvidos na aquisição de contratos financeiros. As transações em contratos financeiros têm um elevado grau de risco. Se os contratos adquiridos finalizarem sem valor, você sofrerá uma perda total do seu investimento, que consistirá no prêmio do contrato.", "Description": "Descrição", "Profit/Loss": "Lucro/Perda", "Entry_Spot": "Preço de entrada", "You_need_to_finish_all_20_questions_": "É obrigatório completar as 20 perguntas.", "Exit_spot": "Preço de saída", "Exclude_time_must_be_after_today_": "A hora da exclusão tem que ser depois de hoje.", "Your_account_has_no_Login/Logout_activity_": "A sua conta não tem nenhuma atividade de login/sair.", "New_token_created_": "Novo token criado.", "is_required__Current_spread": "é obrigatório. Spread atual", "Once_you_click_the_'Submit'_button,_the_funds_will_be_withdrawn_from_your_account_and_transferred_to_your_Client's_account_": "Depois de clicar no botão 'Enviar', os fundos serão retirados da sua conta e transferidos para a conta do seu Cliente.", "End_Time": "Hora final", "Long": "Longo", "Sell": "Vender", "Over_3_years": "Mais de 3 anos", "Return": "Prêmio", "Original_Barrier": "Barreira original", "Terms_&_Conditions": "Termos e Condições", "Stop_Loss_Level": "Nível do limite de perdas", "Password_is_moderate": "A senha é moderada", "Contract_Confirmation": "Confirmação de Contrato", "Day": "Dia", "(Bejing/CST_-8_hours)": "(Pequim/CST -8 horas)", "From": "De", "Aug": "Ago", "[ctx,minimum_duration,_for_example_minimum_15_seconds]min": "min", "Exit_Level": "Nível de saída", "Virtual_Account": "Conta Virtual", "Score": "Classificação", "Open_a_Financial_Account": "Abrir uma conta financeira", "August": "Agosto", "Failed_to_update_trade_description_": "Falha na atualização dos dados da negociação.", "Christmas_Day": "Dia de Natal", "Your_settings_have_been_updated_successfully_": "As suas configurações foram atualizadas com sucesso.", "points": "pontos", "1-2_years": "1-2 anos", "Previous_Day": "Dia anterior", "Thursday": "Quinta-feira", "Password_score_is:_[_1]__Passing_score_is:_20_": "A classificação da senha é [_1]. A classificação de aprovação é: 20.", "Estimated_Net_Worth": "Patrimônio líquido estimado", "All_markets_are_closed_now__Please_try_again_later_": "Todos os mercados estão agora fechados. Tente novamente mais tarde.", "comma": "vírgula", "Forex": "Forex (Mercado de Câmbio)", "Contract_is_not_started_yet": "O contrato ainda não foi iniciado", "hour": "hora", "Investments_&_Dividends": "Investimentos e dividendos", "Browser": "Navegador", "Profit_Table": "Tabela de Lucros", "Reset_Password": "Redefinir senha", "$100,000_-_$500,000": "$100.000 - $500.000", "Compliance_Executive": "Executivo de conformidade", "April": "Abril", "An_error_occured_": "Ocorreu um erro.", "Foreign_currency_deposit": "Depósito em moeda estrangeira", "Confirm": "Confirmar", "ticks": "tique-taques", "Friday": "Sexta-feira", "Quantitative_Developer": "Desenvolvedor quantitativo", "Next": "Próximo", "You_have_already_withdrawn_the_equivalent_of_[_1]_[_2]_in_aggregate_over_the_last_[_3]_days_": "Você já retirou o equivalente a [_1] [_2] em agregado durante os últimos [_3] dias.", "apostrophe": "apóstrofe", "Barrier_Change": "Alteração de barreira", "Other_financial_instruments_trading_frequency": "Frequência de negociação de outros instrumentos financeiros", "Invalid_amount,_minimum_is": "Valor inválido, o mínimo é", "[_1]_Please_click_the_link_below_to_restart_the_password_recovery_process__If_you_require_further_assistance,_please_contact_our_Customer_Support_": "[_1] Clique no link abaixo para reiniciar o processo de recuperação de senha. Caso você necessite de assistência adicional, contate o Apoio ao Cliente.", "Print_chart": "Imprimir gráfico", "login": "Conecte-se", "Predict_the_direction<br_/>and_purchase": "Preveja a direção<br />e compre", "Your_trading_statistics_since_[_1]_": "As suas estatísticas de negociação desde [_1].", "Low_Barrier": "Barreira Baixa", "New_Year's_Day": "Dia de Ano Novo", "Sa": "Sáb", "Revoke_access": "Revogar acesso", "Senior_Front-End_Developer": "Desenvolvedor front-end sénior", "Name": "Nome", "Low_Barrier_([_1])": "Barreira Baixa ([_1])", "Start_Time": "Hora de Início", "Unlock_Cashier": "Desbloquear o Caixa", "Affiliate": "Afiliado", "Only_[_1]_are_allowed_": "Apenas [_1] são permitidos.", "Sorry,_this_feature_is_available_to_virtual_accounts_only_": "Lamentamos, este recurso está disponível somente para contas virtuais.", "Potential_Payout": "Possível Prêmio", "Verification_code_format_incorrect_": "Formato incorreto de código de verificação.", "Step": "Etapa", "Please_enter_a_date_that_is_at_least_6_months_from_now_": "Por favor, digite uma data que seja, no mínimo, seis meses a partir de agora.", "Stop-loss": "Limite de perdas", "Contract_Information": "Informação do contrato", "Your_[_1]_day_withdrawal_limit_is_currently_[_2]_[_3]_(or_equivalent_in_other_currency)_": "O seu limite de retiradas de [_1] dia(s) é atualmente [_2] [_3] (ou equivalente em outra moeda).", "Internal_Audit": "Auditoria interna", "Therefore_your_current_immediate_maximum_withdrawal_(subject_to_your_account_having_sufficient_funds)_is_[_1]_[_2]_(or_equivalent_in_other_currency)_": "Portanto, a sua retirada máxima imediata atual (sujeito à existência de fundos suficientes na sua conta) é [_1] [_2] (ou equivalente em outra moeda).", "Other": "Outro", "This_contract_won": "Esse contrato ganhou", "letters": "caracteres", "email_address": "endereço de e-mail", "Now": "Agora", "Credit/Debit": "Crédito/Débito", "Amount_per_point": "Quantia por ponto", "If_you_need_assistance_feel_free_to_contact_our_[_1]Customer_Support": "Caso você precise de assistência, contate o nosso [_1]Apoio ao Cliente", "Duration": "Duração", "Indices_trading_experience": "Experiência com negociações de índices", "Sale_Price": "Preço de venda", "Explanation": "Explicação", "Login_History": "Histórico de logins", "Feb": "Fev", "Sep": "Set", "Your_cashier_is_locked_as_per_your_request_-_to_unlock_it,_please_enter_the_password_": "O seu caixa está bloqueado conforme pedido - para desbloqueá-lo, digite a senha.", "View_your_statement": "Veja o seu extrato", "Are_you_sure_that_you_want_to_permanently_revoke_access_to_application": "Tem certeza que deseja revogar permanentemente o acesso ao aplicativo", "Resources": "Recursos", "Current_Level": "Nível atual", "Save_as_CSV": "Salve como CVS", "Exercise_period": "Período do exercício", "Please_confirm_the_transaction_details_in_order_to_complete_the_transfer:": "Confirme os detalhes da transação para concluir a transferência:", "Barrier_offset": "Compensação de Barreira", "Exit_Spot_Time": "Hora do preço de saída", "Accounting": "Contabilidade", "When_you_click_'Ok'_you_will_be_excluded_from_trading_on_the_site_until_the_selected_date_": "Quando você clicar em 'Ok', você será excluído das negociações no site até a data escolhida.", "All_barriers_in_this_trading_window_are_expired": "Todas as barreiras nesta janela de negociação já expiraram", "Processing_your_request___": "Processado o seu pedido...", "Tertiary": "Ensino Superior", "Start_Trading": "Começar a Negociar", "Fr": "Sex", "Never": "Nunca", "Sorry,_an_error_occurred_while_processing_your_request_": "Lamentamos, ocorreu um erro durante o processamento do seu pedido.", "A_scanned_copy_of_your_passport,_driving_licence_(provisional_or_full)_or_identity_card,_showing_your_name_and_date_of_birth__Your_document_must_be_valid_for_at_least_6_months_after_this_date_": "Uma cópia digitalizada do seu passaporte, carta de habilitação/condução (provisória ou definitiva), ou carteira de Identidade/cartão de cidadão, onde constam o seu nome e a sua data de nascimento. O seu documento deverá estar válido durante pelo menos 6 meses após a data de envio.", "Tourism": "Turismo", "Refresh_page": "Atualizar página", "We": "Qua", "Your_account_has_no_trading_activity_": "A sua conta não tem nenhuma atividade de negociação.", "Your_request_to_transfer_[_1]_[_2]_from_[_3]_to_[_4]_has_been_successfully_processed_": "O seu pedido para transferir [_1] [_2] de [_3] para [_4] foi processado com sucesso.", "years": "anos", "Contract_will_be_sold_at_the_prevailing_market_price_when_the_request_is_received_by_our_servers__This_price_may_differ_from_the_indicated_price_": "O contrato será vendido ao preço prevalecente do mercado no momento em que o pedido for recebido pelos nossos servidores. Esse preço pode ser diferente do preço indicado.", "Therefore_your_current_immediate_maximum_withdrawal_(subject_to_your_account_having_sufficient_funds)_is_[_1]_[_2]_": "Portanto, a sua retirada máxima imediata atual (sujeita à existência de fundos suficientes na sua conta) é [_1] [_2].", "There_was_a_problem_accessing_the_server_during_purchase_": "Ocorreu um problema ao aceder ao servidor durante a aquisição.", "Touch/No_Touch": "Toca", "Withdrawal_for_your_account_is_not_allowed_at_this_moment__Please_contact_[_1]_to_unlock_it_": "Retiradas de sua conta não estão permitidas no momento. Por favor contate [_1] para desbloqueio.", "Please_try_again_": "Por favor, tente novamente.", "$250,000_-_$1,000,000": "$250.000 - $1.000.000", "max:_100,000": "máx: 100.000", "Asset": "Ativos", "Adjust_trade_parameters": "Ajustar parâmetros de negociação", "Please_select_a_valid_date": "Selecione uma data válida", "This_feature_is_not_relevant_to_virtual-money_accounts_": "Este recurso não é relevante para as contas de dinheiro virtual.", "Apr": "Abr", "Pension": "Aposentadoria", "Industry_of_Employment": "Indústria de emprego", "Closes": "Fecha", "Tick": "Tique-taque", "Current_Time": "Hora atual", "Accounts_And_Payments_Executive": "Executivo de contas e pagamentos", "Total_Profit/Loss": "Lucro/Perda Total", "minute": "minuto", "Save_as_PDF": "Salve como PDF", "Your_changes_have_been_updated_": "As suas alterações foram atualizadas.", "There_was_an_error": "Houve um erro", "Reference_ID": "ID de referência", "Details": "Dados", "DevOps_Manager": "Gestor DevOps", "This_contract_lost": "Esse contrato perdeu", "True": "Verdadeiro", "Income_Source": "Fonte de rendimento", "Purchase_Time": "Hora da Compra", "Please_enter_a_number_between_[_1]_": "Digite um número entre [_1].", "Enter_the_barrier_in_terms_of_the_difference_from_the_spot_price__If_you_enter_+0_005,_then_you_will_be_purchasing_a_contract_with_a_barrier_0_005_higher_than_the_entry_spot__The_entry_spot_will_be_the_next_tick_after_your_order_has_been_received": "Digite a barreira em termos da diferença do preço atual. Se você digitar +0,005, estará comprando um contrato com uma barreira superior ao preço inicial em 0,005. O preço inicial será o próximo movimento mínimo após o seu pedido ter sido recebido", "Last_Digit_Prediction": "Previsão do último dígito", "Net_profit": "Lucro líquido", "Entry_Level": "Nível básico", "Construction": "Construção", "Select_market": "Selecione o mercado", "Please_check_the_above_form_for_pending_errors_": "Consulte o formulário acima para erros subsistentes.", "Stays_In/Goes_Out": "Fica dentro/Sai fora", "Insufficient_balance_": "Saldo insuficiente.", "Mr": "Sr.", "Waiting_for_entry_tick_": "Aguardando tick de entrada.", "Secondary": "Ensino Secundário", "Date_of_Birth": "Data de nascimento", "space": "espaço", "Deposit_of": "Depósito de", "Monday": "Segunda-feira", "Password_should_have_lower_and_uppercase_letters_with_numbers_": "A senha deve conter letras minúsculas, maiúsculas e números.", "Low_barrier_offset": "Variação de barreira baixa", "Applications": "Aplicativos", "Sorry,_an_error_occurred_while_processing_your_account_": "Lamentamos, ocorreu um erro durante o processamento da sua conta.", "week": "semana", "The_two_passwords_that_you_entered_do_not_match_": "As palavras-chave que introduziu não coincidem.", "Market_is_closed__Please_try_again_later_": "O mercado está fechado. Tente novamente mais tarde.", "Try_adding_more_letters_or_numbers_": "Experimente adicionar mais letras ou números.", "Over_$1,000,000": "Mais de $1.000.000", "Statement": "Extrato", "Quality_Assurance_Engineer": "Engenheiro de garantia de qualidade", "Amount": "Quantia", "Less_than_$100,000": "Menos de $100.000", "Graphic_Designers": "Designers gráficos", "December": "Dezembro", "Ms": "Sra.", "February": "Fevereiro", "The_Payment_Agent_facility_is_currently_not_available_in_your_country_": "A opção Agentes de Pagamentos não está atualmente disponível no seu país.", "You_must_accept_the_terms_and_conditions_to_open_an_account_": "Tem de aceitar os termos e condições para abrir uma conta.", "Password_is_strong": "A senha é forte", "Compliance": "Conformidade", "Buy": "Comprar", "Corporate_Action": "Ação corporativa", "High_Barrier_([_1])": "Barreira Alta ([_1])", "Contract_Expiry": "Validade do contrato", "An_additional_password_can_be_used_to_restrict_access_to_the_cashier_": "Uma senha adicional pode ser usada para restringir acesso ao caixa.", "Last_Used": "Última utilização", "Housewife_/_Househusband": "Dona de casa / Dono de casa", "Human_Resource_Executive": "Executivo de recursos humanos", "October": "Outubro", "Country_Manager": "Gestor de País", "Today": "Hoje", "second": "segundo", "This_contract_has_WON": "Este contrato GANHOU", "Stocks_trading_experience": "Experiência com negociação de ações", "We_are_not_accepting_accounts_from_residents_of_this_country_at_the_present_time_": "Não aceitamos atualmente contas de residentes deste país.", "November": "Novembro", "Old_password_is_wrong_": "A senha antiga está errada.", "months": "meses", "Forex_trading_experience": "Experiência com negociações forex", "Connection_error:_Please_check_your_internet_connection_": "Erro de conexão: verifique a sua conexão com a internet.", "Save_as_SVG": "Salve como SVG", "In/Out": "Dentro/Fora", "Transaction_performed_by_[_1]_(App_ID:_[_2])": "Transação executada por [_1] (App ID: [_2])", "Education": "Formação", "Targeting_medium-term_/_long-term_profits": "À procura de lucros de médio / longo prazo", "September": "Setembro", "Please_complete_the_following_financial_assessment_form_before_continuing_": "Por favor, preencha o seguinte formulário de avaliação financeira antes de continuar.", "Original_High_Barrier": "Barreira alta original", "Trading_Times": "Horário de Negociação", "Are_you_sure_that_you_want_to_permanently_delete_token": "Tem certeza que deseja excluir permanentemente o token", "Please_log_in_": "Por favor, conecte-se.", "Transfer_to_Login_ID": "Transferir para ID de Início de Sessão", "Update": "Atualização", "Your_Application_is_Being_Processed_": "A sua inscrição está sendo processado.", "Number_of_ticks": "Número de tique-taques", "Information_Technology": "Tecnologias de informação", "Senior_Perl_Developer": "Desenvolvedor Perl sénior", "Points": "Pontos", "Zoom": "Ampliar", "Sunday": "Domingo", "Loss": "Perda", "Over_$500,001": "Mais de $500.001", "{JAPAN_ONLY}Trading_Period": "{JAPAN ONLY}Trading Guide", "Action": "Ação", "6-10_transactions_in_the_past_12_months": "6-10 transações nos últimos 12 meses", "Anti-Fraud_Officer": "Funcionário antifraude", "Contract_ID": "ID de contrato", "Last_Digit_Stats": "Estatísticas do último dígito", "Resale_not_offered": "A revenda não está disponivel", "Please_input_a_valid_date": "Insira uma data válida", "Tuesday": "Terça-feira", "Failed_to_reset_password__[_1],_please_retry_": "Falha na redefinição da senha. [_1], tente novamente.", "Sell_time": "Hora de venda", "Level_of_Education": "Nível de Instrução", "Price": "Preço", "Password_is_not_strong_enough_": "A senha não é forte o suficiente.", "For_added_security,_please_check_your_email_to_retrieve_the_verification_token_": "Para proporcionar maior segurança, verifique a sua caixa de entrada para obter o token de verificação.", "Password_is_weak": "A senha é fraca", "mins": "minutos", "Sorry,_account_opening_is_unavailable_": "Lamentamos, mas a abertura de contas está indisponível.", "Invalid_date_of_birth_": "Data de nascimento inválida.", "Our_site_does_not_charge_any_transfer_fees_": "O nosso site não cobra taxas de transferência.", "Miss": "Srª.", "Salaried_Employee": "Trabalhador assalariado", "[_1]_[_2]_has_been_credited_to_your_Virtual_money_account_[_3]": "[_1] [_2] foram creditados na sua conta de dinheiro Virtual [_3]", "Unemployed": "Desempregado", "Net_Annual_Income": "Rendimento anual líquido", "Please_select_a_payment_agent": "Selecione um agente de pagamentos", "Deposit": "Depositar", "Exclude_time_cannot_be_for_more_than_5_years_": "O tempo de exclusão não pode ser superior a 5 anos.", "Mo": "Seg", "Contract": "Contrato", "Indices_trading_frequency": "Frequência de negociação de índices", "There_was_a_problem_accessing_the_server_": "Ocorreu um problema ao aceder ao servidor.", "Translator": "Tradutor", "Health": "Saúde", "Failed": "Falhou", "Please_enter_a_valid_amount_": "Digite uma quantia válida.", "Binary_options_or_other_financial_derivatives_trading_experience": "Experiência com negociações de opções binárias ou outros derivados financeiros", "High_barrier_offset": "Variação de barreira alta", "Your_transaction_reference_is": "A referência da sua transação é", "Profit/Loss_(points)": "Ganho/Perda (pontos)", "Gaming_Account": "Conta de Jogos", "Session_duration_limit_cannot_be_more_than_6_weeks_": "O limite de duração de sessões não pode ser superior a 6 semanas.", "Real_Account": "Conta Real", "Password_does_not_match_": "A senha não corresponde.", "Tu": "Qui", "Spot_Time": "Hora à vista", "0-5_transactions_in_the_past_12_months": "0-5 transações nos últimos 12 meses", "Target": "Alvo", "Format:_yyyy-mm-dd_(not_required_for_virtual-money_accounts)": "Formato: aaaa-mm-dd (não é necessário para contas de dinheiro virtual)", "verification_token": "token de verificação", "July": "Julho", "Adjusted_Barrier": "Barreira Ajustada", "Entry_spot": "Preço de entrada", "Stop_Profit_Level": "Nível do limite de ganhos", "Successful": "Bem-sucedido", "days": "dias", "Select_your_market": "Selecione o seu mercado", "Date_and_Time": "Data e hora", "Your_password_has_been_successfully_reset__Please_log_into_your_account_using_your_new_password_": "A sua senha foi redefinida com sucesso. Por favor, inicie sessão na sua conta, usando a sua nova senha.", "View": "Ver", "January": "Janeiro", "Your_withdrawal_limit_is_[_1]_[_2]_": "O seu limite de retiradas é [_1] [_2].", "Copywriter": "Redator", "Contract_/_Temporary_/_Part_Time": "Contrato / Temporário / Meio período", "weeks": "semanas", "Major_Pairs": "Pares Principais", "Proofreader": "Revisor", "Wednesday": "Quarta-feira", "Questions": "Perguntas", "Self-employed": "Trabalhador independente", "Sorry,_this_feature_is_not_available_": "Este recurso não está disponível.", "Upcoming_Events": "Próximos Eventos", "Week_of": "Semana de", "minimum_available_duration": "duração mínima disponível", "Last_digit_stats_for_the_latest_[_1]_ticks_on_[_2]": "Estatísticas dos últimos dígitos dos últimos [_1] tique-taques de [_2]", "You_have_already_withdrawn_[_1]_[_2]_": "Você já retirou [_1] [_2].", "Select_your_trade_type": "Selecione o tipo de negociação", "Portfolio": "Portfólio", "Your_transaction_reference_number_is_[_1]": "O número de referência da sua transação é [_1]", "Please_enter_a_number_greater_or_equal_to_[_1]_": "Digite um número superior ou igual a [_1].", "Quality_Assurance": "Garantia de qualidade", "Up/Down": "Acima/Abaixo", "End_time_must_be_after_start_time_": "A hora de fim tem de ser depois da hora de início.", "loading___": "carregando...", "Marketing_Executives": "Executivos de marketing", "Quantitative_Analysis": "Análise quantitativa", "Indicative": "Indicativo", "Please_check_your_email_for_the_value_of_this_token": "Verifique o seu e-mail para o valor deste token", "Adjusted_Low_Barrier": "Barreira baixa ajustada", "Select_your_underlying_asset": "Selecione o ativo subjacente", "This_contract_can_not_be_traded_in_the_final_2_minutes_before_settlement": "Não é possível liquidar este contrato durante os últimos 2 minutos antes da liquidação final", "New_password_is_same_as_old_password_": "Nova senha é igual à senha anterior.", "numbers": "números", "Password_must_contains_at_least_1_digit,_1_uppercase_letter_and_1_lowercase_letter_": "A senha deve conter pelo menos um número, uma maiúscula e uma minúscula.", "month": "mês", "Investment_Account": "Conta de Investimento", "period": "ponto", "Saturday": "Sábado", "Barrier_([_1])": "Barreira ([_1])", "Invalid_email_address": "Endereço de e-mail inválido", "Global_Customer_Service_Representatives": "Representantes globais de apoio ao cliente", "This_symbol_is_not_active__Please_try_another_symbol_": "Este símbolo não está ativo. Experimente outro símbolo.", "Mrs": "Sra.", "Please_follow_the_pattern_3_numbers,_a_dash,_followed_by_4_numbers_": "Siga o padrão: 3 números, um hífen, seguidos por 4 números.", "Your_cashier_is_locked_as_per_your_request_-_to_unlock_it,_please_click_[_1]here": "O seu caixa está bloqueado conforme pedido - para desbloqueá-lo, clique [_1]aqui", "Password": "Senha", "minutes": "minutos", "Permissions": "Permissões", "Low_barrier": "Barreira Baixa", "$100,000_-_$250,000": "$100.000 - $250.000", "Withdrawal": "Retirada", "The_maximum_number_of_tokens_([_1])_has_been_reached_": "O número máximo de tokens ([_1]) foi atingido.", "You_have_sold_this_contract_at_[_1]_[_2]": "Você vendeu este contrato por [_1] [_2]", "IP_Address": "Endereço IP", "Purchase_Price": "Preço de Compra", "This_field_is_required_": "Este campo é obrigatório.", "Due_to_recent_changes_in_the_regulations,_we_are_required_to_ask_our_clients_to_complete_the_following_Financial_Assessment__Please_note_that_you_will_not_be_able_to_continue_trading_until_this_is_completed_": "Devido a alterações recentes nos regulamentos, somos obrigados a pedir aos nossos clientes que preencham a seguinte avaliação financeira. Note que você não poderá continuar a negociar até a avaliação estar preenchida.", "Please_select_a_value": "Selecione um valor", "Try_adding_more_letters_": "Experimente adicionar mais letras.", "min:_1,000": "mín: 1.000", "Your_Client_will_receive_an_email_notification_informing_him/her_that_the_transfer_has_been_processed_": "O seu Cliente receberá uma notificação por e-mail com a informação de que a transferência foi processada.", "Month": "Mês", "Cashier": "Caixa", "Your_password_cannot_be_the_same_as_your_email": "A sua senha não pode ser igual ao seu e-mail", "Hour": "Hora", "Sell_at_market": "Venda no mercado", "Exclude_time_cannot_be_less_than_6_months_": "O tempo de exclusão não pode ser inferior a seis meses.", "Both_the_above": "Ambos acima", "Original_Low_Barrier": "Barreira baixa original", "Walkthrough_Guide": "Guia passo a passo", "Hedging": "Cobertura", "The_server_<a_href=\"[_1]\">endpoint</a>_is:_[_2]": "O terminal do <a href=\"[_1]\"> 1servidor</a> 2 é: [_2]", "Authorise_your_account_": "Autorize a sua conta.", "Password_Reset": "Redefinição de senha", "Your_token_has_expired__Please_click_<a_class=\"pjaxload\"_href=\"[_1]\">here</a>_to_restart_the_verification_process_": "O seu token expirou. Clique <a class=\"pjaxload\" href=\"[_1]\">aqui</a> para reiniciar o processo de verificação.", "Lock_Cashier": "Bloquear Caixa", "Deposit_[_1]_[_2]_virtual_money_into_your_account_[_3]": "Deposite [_1][_2] em dinheiro virtual na sua conta [_3]", "June": "Junho", "Oct": "Out", "You_have_already_withdrawn_the_equivalent_of_[_1]_[_2]_": "Você já retirou o equivalente a [_1] [_2].", "Closes_early_(at_21:00)": "Fecha cedo (às 21:00)", "Stake": "Aposta", "Profit": "Lucro", "Opens": "Abre", "Even/Odd": "Par/Ímpar", "Total_Cost": "Custo Total", "details": "detalhes", "hyphen": "hífen", "Withdraw": "Retirar", "Human_Resources": "Recursos humanos", "Rise/Fall": "Sobe/Desce", "not_available": "Indisponível", "Previous": "Anterior", "My_Account": "Minha Conta", "Please_fill_in_the_Login_ID_and_Amount_you_wish_to_transfer_to_your_Client_in_the_form_below:": "Preencha o ID de Início de Sessão e a Quantia que pretende transferir para o seu Cliente no formulário abaixo:", "There_was_some_invalid_character_in_an_input_field_": "Houve algum caractere inválido no campo de entradas.", "Commodities_trading_frequency": "Frequência de negociação de matérias-primas", "Please_enter_a_number_between_0_and_[_1]": "Digite um número entre 0 e [_1]", "day": "dia", "Please_submit_a_valid_[_1]_": "Insira um [_1] válido.", "[_1]_has_updated_its_[_2]__By_clicking_OK,_you_confirm_that_you_have_read_and_accepted_the_updated_[_2]_": "A [_1] atualizou os seus [_2]. Ao clicar em OK, você confirma que leu e aceita os [_2] atualizados.", "Settles": "Liquida", "Next_Day": "Dia seguinte", "Over/Under": "Acima/Abaixo", "Login_ID": "ID de Login", "Sorry,_you_have_entered_an_incorrect_cashier_password": "Lamentamos, introduziu uma senha de caixa incorreta", "Password_is_very_strong": "A senha é muito forte", "Try_adding_more_numbers_": "Experimente adicionar mais números.", "Barrier": "Barreira", "Spot": "Preço atual", "Higher/Lower": "Superior/Inferior", "Administrative_Executive": "Executivo administrativo", "Never_Used": "Nunca utilizado", "You_should_enter_between_[_1]_characters_": "Você dever inserir entre [_1] caracteres.", "End_time": "Hora de fim", "{JAPAN_ONLY}Payout_Amount": "{JAPAN ONLY}month", "This_contract_was_affected_by_a_Corporate_Action_event_": "Este contrato foi afetado por um evento de ação corporativa.", "Self-Employed": "Trabalhador independente", "You_have_not_granted_access_to_any_applications_": "Você não concedeu acesso a nenhum aplicativo.", "Your_request_to_withdraw_[_1]_[_2]_from_your_account_[_3]_to_Payment_Agent_[_4]_account_has_been_successfully_processed_": "O seu pedido para levantar [_1] [_2] da sua conta [_3] para a conta [_4] do Agente de Pagamentos foi processado com sucesso.", "Status": "Estado", "Ends_In/Out": "Termina Dentro/Fora", "Invalid_amount,_maximum_is": "Valor inválido, o máximo é", "Forex_trading_frequency": "Frequência de negociação forex", "Prices": "Preços", "Matches/Differs": "Combina/Difere", "Finance": "Finanças", "Please_enter_an_integer_value": "Insira um valor inteiro", "Potential_Profit": "Lucro Potencial", "Remaining_time": "Tempo restante", "Internal_Auditor": "Auditor interno", "Your_account_is_fully_authenticated_and_your_withdrawal_limits_have_been_lifted_": "A sua conta está totalmente autenticada e os seus limites de retirada de fundos foram aumentados.", "Save_as_PNG": "Salve como PNG", "Start_time": "Hora de início", "Open": "Abrir", "This_contract_has_LOST": "Este contrato PERDEU", "Please_wait_<br_/>Your_request_is_being_processed_": "Por favor aguarde.<br />O seu pedido está sendo processado.", "$25,000_-_$100,000": "$25.000 - $100.000", "Japan": "Japão", "March": "Março", "Authenticate": "Autenticar", "Date": "Data", "Stocks_trading_frequency": "Frequência de negociação de ações" };
	texts_json['RU'] = { "October": "Октябрь", "second": "секунд(ы)", "Today": "Cегодня", "Country_Manager": "Региональный менеджер", "We_are_not_accepting_accounts_from_residents_of_this_country_at_the_present_time_": "В настоящее время мы не открываем счета для резидентов этой страны.", "Stocks_trading_experience": "Опыт торговли акциями", "This_contract_has_WON": "Контракт ВЫИГРАЛ", "November": "Ноябрь", "Old_password_is_wrong_": "Старый пароль неверный.", "High_Barrier_([_1])": "Верхний барьер ([_1])", "Contract_Expiry": "Срок истечения контракта", "An_additional_password_can_be_used_to_restrict_access_to_the_cashier_": "Можно использовать дополнительный пароль для ограничения доступа к кассе.", "Last_Used": "Последние", "Human_Resource_Executive": "Специалист отдела кадров", "Over_$1,000,000": "Свыше $1,000,000", "Statement": "История счета", "Quality_Assurance_Engineer": "Инженер службы тех. контроля", "Amount": "Количество", "Less_than_$100,000": "Менее $100,000", "December": "Декабрь", "Graphic_Designers": "Графические дизайнеры", "Ms": "Госпожа", "February": "Февраль", "You_must_accept_the_terms_and_conditions_to_open_an_account_": "Для открытия счета необходимо согласиться с правилами и условиями.", "The_Payment_Agent_facility_is_currently_not_available_in_your_country_": "Оплата через платежного агента в данный момент недоступна для Вашей страны.", "Compliance": "Служба контроля", "Buy": "Покупка", "Corporate_Action": "Корпоративное действие", "Password_is_strong": "Надёжный пароль", "Password_should_have_lower_and_uppercase_letters_with_numbers_": "Пароль должен содержать заглавные и строчные буквы и цифры.", "Low_barrier_offset": "Изменение нижнего барьера", "Applications": "Приложения", "Market_is_closed__Please_try_again_later_": "В данное время рынок закрыт. Пожалуйста, попробуйте позже.", "Sorry,_an_error_occurred_while_processing_your_account_": "Извините, произошла ошибка.", "week": "нед.", "The_two_passwords_that_you_entered_do_not_match_": "Введенные пароли не совпадают.", "Try_adding_more_letters_or_numbers_": "Попробуйте добавить больше букв или цифр.", "Anti-Fraud_Officer": "Специалист по борьбе с мошенничеством", "6-10_transactions_in_the_past_12_months": "6-10 транзакций за последние 12 месяцев", "Contract_ID": "ID контракта", "Last_Digit_Stats": "Статистика последних тиков", "Resale_not_offered": "Продажа не предлагается", "Failed_to_reset_password__[_1],_please_retry_": "Не удалось изменить пароль. [_1], пожалуйста, попробуйте ещё раз.", "Please_input_a_valid_date": "Пожалуйста, введите правильную дату", "Tuesday": "Вторник", "Sunday": "Воскресенье", "Zoom": "Приблизить", "Time_is_in_the_wrong_format_": "Неправильный формат времени.", "Jul": "Июл", "Loss": "Потери", "Over_$500,001": "Более $500,001", "Action": "Акт", "Transfer_to_Login_ID": "Перевести на логин", "Jun": "Июн", "Update": "Обновить", "Please_log_in_": "Пожалуйста, войдите в систему.", "Are_you_sure_that_you_want_to_permanently_delete_token": "Вы уверены, что хотите навсегда удалить ключ?", "Trading_Times": "Время открытия рынков", "Your_Application_is_Being_Processed_": "Ваша заявка обрабатывается.", "Number_of_ticks": "Кол-во тиков", "Information_Technology": "Информацион. технологии", "Senior_Perl_Developer": "Старший разработчик Perl", "Points": "Пункты", "Forex_trading_experience": "Опыт торговли на Форекс", "months": "мес.", "Connection_error:_Please_check_your_internet_connection_": "Проблема со связью: пожалуйста, проверьте Ваше подключение к интернету.", "Education": "Обучение", "Save_as_SVG": "Сохранить в формате SVG", "In/Out": "Внутри/Вне", "Transaction_performed_by_[_1]_(App_ID:_[_2])": "Транзакция проведена [_1] (App ID: [_2])", "Please_complete_the_following_financial_assessment_form_before_continuing_": "Прежде, чем продолжить, пожалуйста, заполните следующую форму финансовой оценки.", "Original_High_Barrier": "Исходный верхний барьер", "September": "Сентябрь", "Your_transaction_reference_is": "Ссылка на Вашу сделку", "AM": "утра", "Profit/Loss_(points)": "Прибыль/убытки (пункты)", "Gaming_Account": "Игровой счет", "Equals": "Равно", "Session_duration_limit_cannot_be_more_than_6_weeks_": "Лимит на длительность сессии не может превышать 6 недель.", "Real_Account": "Реальный счет", "Mo": "Пн", "Indices_trading_frequency": "Частота торговли индексами", "Contract": "Контракт", "There_was_a_problem_accessing_the_server_": "Возникла проблема с доступом к серверу.", "Translator": "Переводчик", "Please_enter_a_valid_amount_": "Пожалуйста, введите правильную сумму.", "Failed": "Возникла ошибка", "Health": "Здоровье", "High_barrier_offset": "Изменение верхнего барьера", "Binary_options_or_other_financial_derivatives_trading_experience": "Опыт торговли бинарными опционами или другими производными финансовыми инструментами", "Miss": "Госпожа", "Token": "Ключ", "[_1]_[_2]_has_been_credited_to_your_Virtual_money_account_[_3]": "[_1] [_2] было зачислено на Ваш Демо-счет [_3]", "Salaried_Employee": "Наемный работник", "Please_select_a_payment_agent": "Пожалуйста, выберите платежного агента", "Net_Annual_Income": "Чистый годовой доход", "Exclude_time_cannot_be_for_more_than_5_years_": "Период ограничения не может быть больше 5 лет.", "Deposit": "Пополнение", "Password_is_not_strong_enough_": "Пароль недостаточно надёжный.", "Sell_time": "Время продажи", "Price": "Цена", "Level_of_Education": "Уровень образования", "Sorry,_account_opening_is_unavailable_": "Извините, но открытие счёта недоступно.", "mins": "мин.", "For_added_security,_please_check_your_email_to_retrieve_the_verification_token_": "Для дополнительной безопасности, пожалуйста, проверьте электронную почту, на которую должен прийти проверочный ключ.", "Password_is_weak": "Слабый пароль", "Invalid_date_of_birth_": "Неправильная дата рождения.", "Our_site_does_not_charge_any_transfer_fees_": "Наш сайт не берёт комиссий за перевод.", "weeks": "нед.", "Ref_": "Номер", "Major_Pairs": "Основные пары", "Proofreader": "Корректор", "Wednesday": "Среда", "Questions": "Вопросы", "Stop_Profit_Level": "Уровень стоп-профит", "Entry_spot": "Входная котировка", "days": "дн.", "Select_your_market": "Выбрать рынок", "Date_and_Time": "Дата и время", "Successful": "Успешно", "January": "Январь", "View": "Просмотр", "Minute": "Мин.", "Your_withdrawal_limit_is_[_1]_[_2]_": "Ваш лимит на вывод составляет [_1] [_2].", "Your_password_has_been_successfully_reset__Please_log_into_your_account_using_your_new_password_": "Ваш пароль был изменен. Пожалуйста, зайдите на счет, используя новый пароль.", "Copywriter": "Автор статей", "Waiting_for_exit_tick_": "В ожидании выходного тика.", "Format:_yyyy-mm-dd_(not_required_for_virtual-money_accounts)": "Формат: гггг-мм-дд (не требуется для демо-счетов)", "verification_token": "проверочный ключ", "Adjusted_Barrier": "Скорректированный барьер", "July": "Июль", "Password_does_not_match_": "Пароль не совпадает.", "Spot_Time": "Спот-время", "Tu": "Вт", "Target": "Цель", "0-5_transactions_in_the_past_12_months": "0-5 транзакций за последние 12 месяцев", "This_symbol_is_not_active__Please_try_another_symbol_": "Данный символ неактивен. Воспользуйтесь другим символом.", "Barrier_([_1])": "Барьер ([_1])", "Invalid_email_address": "Недействительный e-mail", "Global_Customer_Service_Representatives": "Сотрудники международного отдела обслуживания клиентов", "Your_cashier_is_locked_as_per_your_request_-_to_unlock_it,_please_click_[_1]here": "Ваша касса закрыта по Вашему запросу. Для открытия, пожалуйста, нажмите сюда[_1]", "Mrs": "Госпожа", "Please_follow_the_pattern_3_numbers,_a_dash,_followed_by_4_numbers_": "Пожалуйста, следуйте данной схеме: 3 цифры, тире, а затем 4 цифры.", "Password": "Пароль", "minutes": "минут(ы)", "Low_barrier": "Нижний барьер", "Permissions": "Разрешения", "This_contract_can_not_be_traded_in_the_final_2_minutes_before_settlement": "Данным контрактом нельзя торговать в последние 2 минуты до его окончания", "Select_your_underlying_asset": "Выбрать базовый актив", "New_password_is_same_as_old_password_": "Новый пароль совпадает со старым паролем.", "Password_must_contains_at_least_1_digit,_1_uppercase_letter_and_1_lowercase_letter_": "Пароль должен содержать минимум 1 цифру, 1 заглавную букву и 1 строчную букву.", "month": "мес.", "numbers": "цифры", "Saturday": "Суббота", "period": "точки", "Investment_Account": "Инвестиционный счет", "Select_your_trade_type": "Выбрать тип контракта", "You_have_already_withdrawn_[_1]_[_2]_": "Вы уже вывели со счета [_1] [_2].", "Portfolio": "Портфель", "loading___": "загружается...", "End_time_must_be_after_start_time_": "Время окончания должно быть позднее времени начала.", "Please_enter_a_number_greater_or_equal_to_[_1]_": "Пожалуйста, введите цифру выше или равную [_1].", "Your_transaction_reference_number_is_[_1]": "Номер Вашей сделки [_1]", "Up/Down": "Вверх/Вниз", "Quality_Assurance": "Технический контроль", "Indicative": "Ориентировочная цена", "Quantitative_Analysis": "Количественный анализ", "Adjusted_Low_Barrier": "Скорректированный нижний барьер", "Please_check_your_email_for_the_value_of_this_token": "Пожалуйста, проверьте свой email; Вам должен прийти ключ", "Marketing_Executives": "Специалисты отдела маркетинга", "Sorry,_this_feature_is_not_available_": "Извините, данная функция недоступна.", "Upcoming_Events": "Ближайшие события", "Last_digit_stats_for_the_latest_[_1]_ticks_on_[_2]": "Последняя десятичная начинается для последних [_1] тиков для [_2]", "minimum_available_duration": "мин. доступный период", "Week_of": "Нед.", "Your_token_has_expired__Please_click_<a_class=\"pjaxload\"_href=\"[_1]\">here</a>_to_restart_the_verification_process_": "Срок действия Вашего ключа истёк. Пожалуйста, нажмите <a class=\"pjaxload\" href=\"[_1]\">здесь,</a> чтобы повторно запустить процесс проверки.", "Lock_Cashier": "Закрыть кассу паролем", "Deposit_[_1]_[_2]_virtual_money_into_your_account_[_3]": "Внести [_1] [_2] виртуальных денег на Ваш счет [_3]", "Original_Low_Barrier": "Исходный нижний барьер", "Walkthrough_Guide": "Гид по рынкам", "Authorise_your_account_": "Авторизуйте свой счет.", "Password_Reset": "Изменение пароля", "The_server_<a_href=\"[_1]\">endpoint</a>_is:_[_2]": "<a href=\"[_1]\">Конечная точка</a> сервера: [_2]", "Month": "Месяц", "Exclude_time_cannot_be_less_than_6_months_": "Период ограничения не может быть менее 6 месяцев.", "Sell_at_market": "Продать по текущей цене", "Cashier": "Касса", "Your_password_cannot_be_the_same_as_your_email": "Ваш пароль не может быть таким же, как Ваш эл. адрес", "Hour": "Час.", "Withdrawal": "Вывод", "Purchase_Price": "Цена покупки", "You_have_sold_this_contract_at_[_1]_[_2]": "Вы продали данный контракт по цене [_1] [_2]", "The_maximum_number_of_tokens_([_1])_has_been_reached_": "Достигнуто максимальное число ключей ([_1]).", "IP_Address": "IP-адрес", "Due_to_recent_changes_in_the_regulations,_we_are_required_to_ask_our_clients_to_complete_the_following_Financial_Assessment__Please_note_that_you_will_not_be_able_to_continue_trading_until_this_is_completed_": "Ввиду последних изменений в нормативных положениях, мы должны просить клиентов заполнить следующую форму финансовой оценки. Пожалуйста примите во внимание, что Вы не сможете продолжить торговлю, пока не пройдёте финансовую оценку.", "Please_select_a_value": "Пожалуйста, выберите значение", "This_field_is_required_": "Данное поле является необходимым.", "min:_1,000": "минимум: 1,000", "Try_adding_more_letters_": "Попробуйте добавить больше букв.", "Your_Client_will_receive_an_email_notification_informing_him/her_that_the_transfer_has_been_processed_": "Ваш клиент получит по электронной почте уведомление о том, что перевод был выполнен.", "Login_ID": "Логин", "Sorry,_you_have_entered_an_incorrect_cashier_password": "Извините, Вы ввели неверный пароль для раздела Касса", "Password_is_very_strong": "Очень надёжный пароль", "Try_adding_more_numbers_": "Попробуйте добавить больше цифр.", "Higher/Lower": "Выше/Ниже", "Spot": "Спот-котировка", "Barrier": "Барьер", "There_was_some_invalid_character_in_an_input_field_": "Неразрешённый символ в поле ввода.", "Commodities_trading_frequency": "Частота торговли сырьевыми товарами", "Please_enter_a_number_between_0_and_[_1]": "Пожалуйста, введите цифру от 0 до [_1]", "day": "дн.", "Please_submit_a_valid_[_1]_": "Пожалуйста, правильно введите [_1].", "[_1]_has_updated_its_[_2]__By_clicking_OK,_you_confirm_that_you_have_read_and_accepted_the_updated_[_2]_": "[_1] обновил [_2]. Нажав OK, Вы подтвердите, что прочитали и приняли новые [_2].", "Over/Under": "Над/Под", "Settles": "Заканчивается", "Next_Day": "Следующий день", "Total_Cost": "Общая стоимость", "hyphen": "дефис", "details": "подробности", "Even/Odd": "Чётное/Нечётное", "Withdraw": "Вывод", "not_available": "нет данных", "Rise/Fall": "Повышение/Падение", "Human_Resources": "Отдел кадров", "Please_fill_in_the_Login_ID_and_Amount_you_wish_to_transfer_to_your_Client_in_the_form_below:": "Просим указать логин и сумму, которую Вы желаете перевести Клиенту, в форме ниже:", "Previous": "Предыдущ.", "My_Account": "Мой Счет", "June": "Июнь", "You_have_already_withdrawn_the_equivalent_of_[_1]_[_2]_": "Вы уже вывели со счета сумму, эквивалентную [_1] [_2].", "Oct": "Окт", "Stake": "Ставка", "Profit": "Прибыль", "Sorry,_account_signup_is_not_available_in_your_country__Please_contact_<a_href=\"[_1]\">customer_support</a>_for_more_information_": "Извините, регистрация счёта недоступна для граждан Вашей страны. Пожалуйста, свяжитесь с отделом <a href=\"[_1]\">поддержки клиентов</a> для получения дополнительной информации.", "Closes_early_(at_21:00)": "Закрывается рано (в 21:00)", "Opens": "Открывается", "March": "Март", "Date": "Дата", "Authenticate": "Авторизация", "Stocks_trading_frequency": "Частота торговли акциями", "This_contract_has_LOST": "Контракт ПРОИГРАЛ", "Please_wait_<br_/>Your_request_is_being_processed_": "Пожалуйста, подождите.<br/>Запрос в обработке.", "Japan": "Япония", "min": "мин.", "Matches/Differs": "Совпадение/отличие", "Finance": "Финансы", "Prices": "Котировки", "Please_enter_an_integer_value": "Пожалуйста, введите целое число", "Your_account_is_fully_authenticated_and_your_withdrawal_limits_have_been_lifted_": "Ваш счет полностью авторизован, и лимит на вывод был снят.", "Save_as_PNG": "Сохранить в формате PNG", "Potential_Profit": "Потенциальная прибыль", "Remaining_time": "Оставшееся время", "Internal_Auditor": "Внутренний аудитор", "Open": "Значение при открытии", "Start_time": "Время начала", "Administrative_Executive": "Сотрудник отдела управления", "Never_Used": "Никогда не использовался", "End_time": "Окончание", "You_should_enter_between_[_1]_characters_": "Вы должны ввести [_1] знаков.", "This_contract_was_affected_by_a_Corporate_Action_event_": "На данный контракт повлияли корпоративные действия.", "Your_request_to_withdraw_[_1]_[_2]_from_your_account_[_3]_to_Payment_Agent_[_4]_account_has_been_successfully_processed_": "Ваш запрос на вывод [_1] [_2] с Вашего счета [_3] на счет платежного агента [_4] был выполнен успешно.", "You_have_not_granted_access_to_any_applications_": "У Вас нет доступа к приложениям.", "Status": "Статус", "Ends_In/Out": "Заканчивается Внутри/Вне", "Self-Employed": "Частный предприниматель", "Invalid_amount,_maximum_is": "Неправильная сумма. Максимум:", "Forex_trading_frequency": "Частота торговли на Форекс", "Only_2_decimal_points_are_allowed_": "Разрешены лишь 2 десятичные.", "Verification_Token": "Проверочный ключ", "h": "ч.", "Remaining_Time": "Оставшееся время", "This_is_a_staging_server_-_For_testing_purposes_only": "Это вспомогательный сервер, применяемый лишь для тестирования", "40_transactions_or_more_in_the_past_12_months": "40 или более транзакций за последние 12 месяцев", "Delete": "Удалить", "Your_current_balance_is": "Текущий баланс Вашего счета составляет", "Please_check_your_email_to_retrieve_the_token_needed_to_reset_your_password_": "Пожалуйста, проверьте свой эл. адрес; Вам должен прийти ключ для изменения пароля.", "Minimum_of_[_1]_characters_required_": "Необходимо минимум [_1] знака(ов).", "Weekday": "День недели", "Date_(GMT)": "Дата (GMT)", "password": "пароль", "0-1_year": "0-1 года", "To": "До", "Balance": "Баланс", "Closes_early_(at_18:00)": "Закрывается рано (в 18:00)", "When_you_click_\"Ok\"_you_will_be_excluded_from_trading_on_the_site_until_the_selected_date_": "Когда Вы нажмёте &quot;ОК&quot;, Вы будете отстранены от работы на сайте до окончания выбранной даты.", "Binary_options_or_other_financial_derivatives_trading_frequency": "Частота торговли бинарными опционами или другими производными финансовыми инструментами", "Exit_Spot": "Выходная котировка", "Contract_purchased_with_app_ID": "Контракт куплен через ID приложения", "Financial_Assessment": "Финансовая отчетность", "Year": "год", "Finish": "Завершить", "hours": "час.", "Shop": "Магазин", "Sale_Date": "Дата продажи", "Fridays": "пятница", "There_was_a_problem_validating_your_personal_details__Please_fix_the_fields_[_1]here": "Возникла проблема с подтверждением Ваших личных данных. Пожалуйста, исправьте данные здесь[_1]", "Sorry,_your_account_is_not_authorised_for_any_further_contract_purchases_": "Извините, Ваш счет не авторизован для дальнейшей покупки контрактов.", "Keep_track_of_your_authorised_applications_": "Следите за доступными приложениями.", "Stop-type": "Тип стопа", "No_Live_price_update": "Нет обновления настоящей котировки", "Dec": "Дек", "Deposits_and_withdrawal_for_your_account_is_not_allowed_at_this_moment__Please_contact_[_1]_to_unlock_it_": "Внесение и вывод средств для Вашего счета в данный момент невозможны. Пожалуйста, свяжитесь с [_1] для разблокировки.", "High_barrier": "Верхний барьер", "Commodities_trading_experience": "Опыт торговли сырьевыми товарами", "Primary": "Первичн.", "Period": "Период", "Payout": "Выплата", "Marketing_Project_Manager": "Менеджер маркетингового проекта", "Your_session_duration_limit_will_end_in_[_1]_seconds_": "Ограничение на длительность сессии закончится через [_1] сек.", "Purchase": "Покупка", "PM": "вечера", "Other_financial_instruments_trading_experience": "Опыт торговли другими финансовыми инструментами", "Less_than_$25,000": "Менее $25,000", "Back": "назад", "Th": "Чт", "Your_account_is_currently_suspended__Only_withdrawals_are_now_permitted__For_further_information,_please_contact_[_1]_": "Ваш счет заблокирован. В данный момент Вам доступна только функция вывода средств. Для дальнейшей информации, пожалуйста, свяжитесь с [_1].", "Please_[_1]_to_view_this_page": "Пожалуйста, [_1], чтобы просмотреть данную страницу", "Jump_To": "Перейти к", "Settings": "Настройки", "Not": "Не", "High_Barrier": "Верхний барьер", "seconds": "секунд(ы)", "Random": "Индексы Random", "New_Password": "Новый пароль", "Short": "Короткая позиция", "Quantitative_Analyst": "Специалист по количественному анализу", "Adjusted_High_Barrier": "Скорректированный верхний барьер", "Your_details_have_been_updated_": "Ваши данные успешно обновлены.", "Su": "Вс", "You_did_not_change_anything_": "Вы не внесли никаких изменений.", "Please_select": "Выберите", "Closed": "Закрыто", "year": "год(а)/лет", "Your_provided_email_address_is_already_in_use_by_another_Login_ID__According_to_our_terms_and_conditions,_you_may_only_register_once_through_our_site__If_you_have_forgotten_the_password_of_your_existing_account,_please_<a_href=\"[_1]\">try_our_password_recovery_tool</a>_or_contact_customer_service_": "Указанный Вами электронный адрес уже используется для другого счёта. В соответствии с нашими Правилами и условиями, Вы можете зарегистрироваться на сайте только однажды. Если Вы забыли пароль к своему счету, пожалуйста, <a href=\"[_1]\">воспользуйтесь инструментом для получения этих данных</a> или свяжитесь с нашей службой поддержки.", "The_financial_trading_services_contained_within_this_site_are_only_suitable_for_customers_who_are_able_to_bear_the_loss_of_all_the_money_they_invest_and_who_understand_and_have_experience_of_the_risk_involved_in_the_acquistion_of_financial_contracts__Transactions_in_financial_contracts_carry_a_high_degree_of_risk__If_purchased_contracts_expire_worthless,_you_will_suffer_a_total_loss_of_your_investment,_which_consists_of_the_contract_premium_": "Услуги финансового трейдинга на данном сайте предоставляются только клиентам, которые готовы к возможной потере всех инвестированных ими средств и осознают риск, связанный с приобретением финансовых контрактов. Транзакции в рамках финансовых контрактов подразумевают высокую степень риска. Если купленный контракт истекает без выплаты, Вы теряете всю сумму, потраченную на приобретение данного контракта.", "Description": "Описание", "Profit/Loss": "Плюс/Минус", "Please_deposit_before_transfer_to_client_": "Пожалуйста, пополните счёт перед переводом клиенту.", "Charting_for_this_underlying_is_delayed": "Графики для этого инструмента рисуются с задержкой", "Your_withdrawal_limit_is_[_1]_[_2]_(or_equivalent_in_other_currency)_": "Ваш лимит на вывод составляет [_1] [_2] (или эквивалентную сумму в другой валюте).", "Administrator": "Администратор", "Asset_Index": "Индекс активов", "Upgrade_to_a_Financial_Account": "Обновите до финансового счета", "Chart": "График", "Save_as_JPEG": "Сохранить в формате JPEG", "Social_Media_Executive": "SMM специалист", "May": "Май", "We_are_not_able_to_stream_live_prices_at_the_moment__To_enjoy_live_streaming_of_prices_try_refreshing_the_page,_if_you_get_this_issue_after_repeated_attempts_try_a_different_browser": "Мы не в состоянии предложить живые цены в данный момент. Чтобы посмотреть живые цены, попробуйте перезагрузить страницу. Если вы получаете это сообщение повторно, используйте другой браузер", "Contract_Sold": "Контракт продан", "Transfer_to": "Перевести на имя", "today": "сегодня", "Please_select_at_least_one_scope": "Пожалуйста, выберите минимум один параметр", "Current": "Текущие", "Confirm_New_Password": "Подтвердить новый пароль", "Note": "Примечание", "Please_choose_which_currency_you_would_like_to_transact_in_": "Пожалуйста, выберите валюту, которую Вы желаете использовать на счету.", "Upgrade_to_a_Real_Account": "Открыть реальный счет", "Please_confirm_the_trade_on_your_statement_before_proceeding_": "Пожалуйста, подтвердите контракт в своей истории счета, прежде чем продолжить.", "{JAPAN_ONLY}This_test_is_for_the_purpose_of_confirming_if_the_customers_have_basic_knowledge_related_to_options_trading__": "{JAPAN ONLY}This test is for the purpose of confirming if the customers have basic knowledge related to options trading.", "Exit_Level": "Уровень окончания", "Aug": "Авг", "[ctx,minimum_duration,_for_example_minimum_15_seconds]min": "мин.", "Virtual_Account": "Демо-счет", "Open_a_Financial_Account": "Открыть финансовый счет", "August": "Август", "Failed_to_update_trade_description_": "Невозможно обновить описание контракта.", "Christmas_Day": "Рождество", "Stop_Loss_Level": "Уровень стоп-лосс", "Contract_Confirmation": "Подтверждение контракта", "Password_is_moderate": "Средний уровень защиты пароля", "Day": "День", "(Bejing/CST_-8_hours)": "(Пекин/CST -8 часов)", "From": "от", "is_required__Current_spread": "необходим. Текущий спред", "Sell": "Продажа", "Over_3_years": "В течение 3 лет", "End_Time": "Окончание", "Once_you_click_the_'Submit'_button,_the_funds_will_be_withdrawn_from_your_account_and_transferred_to_your_Client's_account_": "Когда Вы нажмете кнопку 'Подтвердить', средства будет сняты с Вашего счета и перечислены на счет клиента.", "Long": "Длинная позиция", "today,_Fridays": "сегодня, по пятницам", "Original_Barrier": "Исходный барьер", "Terms_&_Conditions": "Правила и условия", "Return": "Прибыль", "Entry_Spot": "Входная котировка", "You_need_to_finish_all_20_questions_": "Вам необходимо ответить на 20 вопросов.", "Your_account_has_no_Login/Logout_activity_": "На Вашем счету нет активности входов/выходов.", "Exclude_time_must_be_after_today_": "Время начала ограничения должно быть позднее сегодняшней даты.", "Exit_spot": "Выходная котировка", "New_token_created_": "Создан новый ключ.", "ticks": "тиков", "Confirm": "Подтвердить", "You_have_already_withdrawn_the_equivalent_of_[_1]_[_2]_in_aggregate_over_the_last_[_3]_days_": "Вы уже в целом вывели сумму, эквивалентную [_1] [_2] за последние [_3] суток.", "Next": "Далее", "Quantitative_Developer": "Количественный разработчик", "Friday": "пятница", "Other_financial_instruments_trading_frequency": "Частота торговли другими финансовыми инструментами", "Invalid_amount,_minimum_is": "Неправильная сумма. Минимум:", "Barrier_Change": "Изменение барьера", "[_1]_Please_click_the_link_below_to_restart_the_password_recovery_process__If_you_require_further_assistance,_please_contact_our_Customer_Support_": "[_1] Пожалуйста нажмите на ссылку ниже, чтобы повторно запустить процесс восстановления пароля. Если Вам нужна дополнительная помощь, пожалуйста, свяжитесь с нашей службой поддержки.", "apostrophe": "апостроф", "Compliance_Executive": "Специалист отдела регулир. и контроля", "An_error_occured_": "Произошла ошибка.", "April": "Апрель", "comma": "запятая", "Contract_is_not_started_yet": "Контракт ещё не начался", "Forex": "Форекс", "Nov": "Ноя", "Browser": "Браузер", "Profit_Table": "Анализ счета", "hour": "час.", "Investments_&_Dividends": "Инвестиции & Дивиденды", "Reset_Password": "Изменить пароль", "points": "пункты", "Your_settings_have_been_updated_successfully_": "Настройки успешно обновлены.", "1-2_years": "1-2 года", "Previous_Day": "Предыдущ. день", "Thursday": "Четверг", "All_markets_are_closed_now__Please_try_again_later_": "В данное время все рынки закрыты. Пожалуйста, попробуйте позже.", "Password_score_is:_[_1]__Passing_score_is:_20_": "Сложность пароля: [_1]. Проходной балл: 20.", "Estimated_Net_Worth": "Собственный капитал", "Amount_per_point": "Сумма за пункт", "Your_account_is_not_fully_authenticated_": "Вы не завершили аутентификацию счёта.", "Sale_Price": "Цена продажи", "Indices_trading_experience": "Опыт торговли индексами", "Duration": "Длительность", "If_you_need_assistance_feel_free_to_contact_our_[_1]Customer_Support": "Если Вам нужна помощь, пожалуйста, обратитесь в службу поддержки[_1]", "Explanation": "Объяснение", "Feb": "Фев", "Sep": "Сен", "Jan": "Янв", "Your_cashier_is_locked_as_per_your_request_-_to_unlock_it,_please_enter_the_password_": "Ваша касса закрыта по Вашему запросу – для открытия, пожалуйста, введите пароль.", "Login_History": "История входа в систему", "Please_enter_a_date_that_is_at_least_6_months_from_now_": "Введите дату, по меньшей мере, за 6 месяцев от настоящей.", "Step": "Изменение", "Your_[_1]_day_withdrawal_limit_is_currently_[_2]_[_3]_(or_equivalent_in_other_currency)_": "Ваш дневной [_1] лимит на вывод в настоящее время составляет [_2] [_3] (или эквивалентную сумму в другой валюте).", "Contract_Information": "Детали контракта", "Stop-loss": "Стоп-лосс", "This_contract_won": "Контракт выиграл", "Other": "Другое", "letters": "буквы", "Internal_Audit": "Внутренний аудит", "Therefore_your_current_immediate_maximum_withdrawal_(subject_to_your_account_having_sufficient_funds)_is_[_1]_[_2]_(or_equivalent_in_other_currency)_": "Поэтому максимально возможная сумма к выводу на данный момент (если на счету есть средства) составляет [_1] [_2] (или эквивалентную сумму в другой валюте).", "email_address": "эл. адрес", "{JAPAN_ONLY}[_1]_[_2]_payout_if_[_3]_goes_outside_of_low_and_high_values_of_Exercise_price_through_close_on_[_4]_": "{JAPAN ONLY}[_1] [_2] payout if [_3] goes ouside of low and high values of Exercise price through close on [_4].", "Credit/Debit": "Кредит/Дебет", "Now": "Сейчас", "Low_Barrier_([_1])": "Нижний Барьер ([_1])", "Start_Time": "Время начала", "Senior_Front-End_Developer": "Старший Front-End разработчик", "Name": "Имя и фамилия", "Affiliate": "Партнерам", "Unlock_Cashier": "Открыть кассу", "Sorry,_this_feature_is_available_to_virtual_accounts_only_": "Извините, эта опция доступна только для демо-счетов.", "Potential_Payout": "Потенциальная выплата", "Only_[_1]_are_allowed_": "Разрешены только [_1] и латинские буквы.", "Verification_code_format_incorrect_": "Неправильный формат кода проверки личности.", "Print_chart": "Напечатать график", "login": "войдите", "Predict_the_direction<br_/>and_purchase": "Предскажите направление движения<br />и купите", "Low_Barrier": "Нижний Барьер", "Your_trading_statistics_since_[_1]_": "Ваша торговая статистика с [_1].", "Sa": "Сб", "New_Year's_Day": "Новый год", "Revoke_access": "Отмена доступа", "There_was_a_problem_accessing_the_server_during_purchase_": "Возникла проблема с доступом к серверу во время процесса покупки.", "Touch/No_Touch": "Касание/Нет касания", "Please_try_again_": "Пожалуйста, попробуйте снова.", "Withdrawal_for_your_account_is_not_allowed_at_this_moment__Please_contact_[_1]_to_unlock_it_": "Вывод средств для Вашего счета в данный момент недоступен. Пожалуйста, свяжитесь с [_1] для разблокировки.", "max:_100,000": "максимум: 100,000", "Adjust_trade_parameters": "Изменить параметры контракта", "Please_select_a_valid_date": "Пожалуйста, выберите правильную дату", "Asset": "Актив", "Fr": "Пт", "Never": "Никогда", "Sorry,_an_error_occurred_while_processing_your_request_": "Извините, при обработке Вашего запроса произошла ошибка.", "A_scanned_copy_of_your_passport,_driving_licence_(provisional_or_full)_or_identity_card,_showing_your_name_and_date_of_birth__Your_document_must_be_valid_for_at_least_6_months_after_this_date_": "Отсканированная копия действительного паспорта, водительских прав или национального удостоверения личности, которая показывает имя, фамилию и дату рождения. Предоставленный Вами документ должен быть действителен как минимум еще в течение 6 месяцев после сегодняшней даты.", "We": "Ср", "Tourism": "Туризм", "Refresh_page": "Обновите страницу", "Your_account_has_no_trading_activity_": "На Вашем счету нет торговой деятельности.", "Contract_will_be_sold_at_the_prevailing_market_price_when_the_request_is_received_by_our_servers__This_price_may_differ_from_the_indicated_price_": "Контракт будет продан по цене, действующей на момент получения запроса нашими серверами. Эта цена может отличаться от указанной в настоящее время.", "years": "год(а)/лет", "Therefore_your_current_immediate_maximum_withdrawal_(subject_to_your_account_having_sufficient_funds)_is_[_1]_[_2]_": "Следовательно, Ваш максимальный лимит на вывод на данный момент составляет [_1] [_2].", "Your_request_to_transfer_[_1]_[_2]_from_[_3]_to_[_4]_has_been_successfully_processed_": "Ваш запрос на перевод [_1] [_2] с [_3] на [_4] был выполнен успешно.", "Current_Level": "Текущий уровень", "Exercise_period": "Период исполнения", "Save_as_CSV": "Сохранить в формате CSV", "All_barriers_in_this_trading_window_are_expired": "Все барьеры в данном торговом окне истекли", "Please_confirm_the_transaction_details_in_order_to_complete_the_transfer:": "Просим подтвердить данные транзакции для завершения перевода:", "Accounting": "Бухгалтерия", "Exit_Spot_Time": "Время выходной котировки", "When_you_click_'Ok'_you_will_be_excluded_from_trading_on_the_site_until_the_selected_date_": "Когда Вы нажмёте \"ОК\", Вы будете отстранены от работы на сайте до окончания выбранной даты.", "Barrier_offset": "Изменение барьера", "Processing_your_request___": "Обработка Вашего запроса...", "Tertiary": "Третичн.", "Start_Trading": "Начните торговлю", "View_your_statement": "Смотрите свою историю счета", "Are_you_sure_that_you_want_to_permanently_revoke_access_to_application": "Вы уверены, что хотите навсегда отказаться от доступа к приложению", "Resources": "Полезное", "Please_check_the_above_form_for_pending_errors_": "Пожалуйста, исправьте указанные ошибки в форме выше.", "Stays_In/Goes_Out": "Останется Внутри/Выйдет за пределы", "Waiting_for_entry_tick_": "В ожидании входного тика...", "Insufficient_balance_": "Недостаточно средств на счете.", "Mr": "Господин", "Date_of_Birth": "Дата рождения", "space": "пробел", "Secondary": "Вторичн.", "Deposit_of": "Пополнение в размере", "Monday": "Понедельник", "Income_Source": "Источник дохода", "Please_enter_a_number_between_[_1]_": "Пожалуйста, введите цифру между [_1].", "Enter_the_barrier_in_terms_of_the_difference_from_the_spot_price__If_you_enter_+0_005,_then_you_will_be_purchasing_a_contract_with_a_barrier_0_005_higher_than_the_entry_spot__The_entry_spot_will_be_the_next_tick_after_your_order_has_been_received": "Внесите барьер для изменения спот-котировки. Если Вы внесете +0.005, Вы покупаете контракт с барьером на 0.005 выше, чем спот-котировка. Спот-котировкой считается следующий тик после покупки контракта", "Purchase_Time": "Время покупки", "Construction": "Строительство", "Net_profit": "Чистая прибыль", "Last_Digit_Prediction": "Прогноз последней десятичной", "Entry_Level": "Уровень входа", "Marketing": "Маркетинг", "Select_market": "Выбрать рынок", "minute": "минут(ы)", "Save_as_PDF": "Сохранить в формате PDF", "There_was_an_error": "Произошла ошибка", "Your_changes_have_been_updated_": "Ваши изменения внесены успешно.", "Details": "Подробности", "Reference_ID": "Номер", "Ok": "ОК", "DevOps_Manager": "Менеджер команды DevOps", "True": "Верно", "This_contract_lost": "Контракт проиграл", "Apr": "Апр", "This_feature_is_not_relevant_to_virtual-money_accounts_": "Данная функция недоступна на демо-счетах.", "Mar": "Мар", "Pension": "Пенсия", "Industry_of_Employment": "Сфера занятости", "Closes": "Закрывается", "Tick": "Тики", "Current_Time": "Текущее время", "Total_Profit/Loss": "Общая прибыль/убыток", "Accounts_And_Payments_Executive": "Администратор счетов и выплат" };
	texts_json['TH'] = { "ticks": "ช่วงราคา", "Confirm": "ยืนยัน", "You_have_already_withdrawn_the_equivalent_of_[_1]_[_2]_in_aggregate_over_the_last_[_3]_days_": "ท่านได้ถอน [_1] [_2] หรือเทียบเท่า ในช่วง [_3] วันที่ผ่านมา", "Next": "ถัดไป", "Quantitative_Developer": "วิศวกรทางการเงิน", "Friday": "วันศุกร์", "[_1]_Please_click_the_link_below_to_restart_the_password_recovery_process__If_you_require_further_assistance,_please_contact_our_Customer_Support_": "[_1] โปรดคลิกที่ลิงค์ด้านล่างเพื่อเริ่มกระบวนการกู้คืนรหัสผ่าน หากท่านต้องการความช่วยเหลือ โปรดติดต่อฝ่ายบริการลูกค้าของเรา", "Other_financial_instruments_trading_frequency": "ความถี่ในการซื้อขายเครื่องมือทางการเงินอื่นๆ", "Invalid_amount,_minimum_is": "จำนวนไม่ถูกต้อง ค่าต่ำสุด คือ", "Barrier_Change": "ค่า Barrier เปลี่ยนแปลง", "apostrophe": "เครื่องหมาย '", "Compliance_Executive": "เจ้าหน้าที่กำกับดูแล", "Foreign_currency_deposit": "ฝากสกุลเงินต่างประเทศ", "An_error_occured_": "มีข้อผิดพลาดเกิดขึ้น", "April": "เมษายน", "50-100_million_JPY": "50-100 ล้านเยน", "Contract_is_not_started_yet": "สัญญายังไม่เริ่ม", "Forex": "ฟอเร็กซ์", "comma": "เครื่องหมายจุลภาค (,)", "Profit_Table": "ตารางกำไร", "Nov": "พ.ย.", "Browser": "เบราเซอร์", "hour": "ชั่วโมง", "Investments_&_Dividends": "เงินปันผลและการลงทุน", "$100,000_-_$500,000": "100,000 - 500,000 เหรียญสหรัฐ", "Reset_Password": "ตั้งรหัสผ่านใหม่", "points": "จุด", "Your_settings_have_been_updated_successfully_": "การตั้งค่าของท่านถูกแก้ไขเรียบร้อยแล้ว", "Previous_Day": "เมื่อวาน", "1-2_years": "1-2 ปี", "Thursday": "วันพฤหัสบดี", "All_markets_are_closed_now__Please_try_again_later_": "ตลาดได้ปิดทำการแล้ว กรุณาทำรายการใหม่ภายหลัง", "Password_score_is:_[_1]__Passing_score_is:_20_": "คะแนนของรหัสผ่าน: [_1] คะแนนที่ผ่าน: 20", "Estimated_Net_Worth": "ประมาณการมูลค่าสุทธิ", "Amount_per_point": "จำนวนเงินต่อจุด", "Your_account_is_not_fully_authenticated_": "บัญชีของท่านยังไม่ได้ยืนยันตัวตนอย่างสมบูรณ์", "Indices_trading_experience": "ประสบการณ์การเทรดดัชนีต่างๆ", "Sale_Price": "ราคาขาย", "Duration": "ระยะเวลา", "If_you_need_assistance_feel_free_to_contact_our_[_1]Customer_Support": "หากท่านต้องการความช่วยเหลือ โปรดติดต่อแผนกบริการลูกค้า [_1]", "Explanation": "คำอธิบาย", "Your_cashier_is_locked_as_per_your_request_-_to_unlock_it,_please_enter_the_password_": "การรับ/ชำระเงินของท่านถูกล็อกตามความประสงค์ของท่าน - หากประสงค์ปลดล็อก โปรดป้อนรหัสผ่าน", "Jan": "ม.ค.", "Over_100_million_JPY": "มากกว่า 100 ล้านเยน", "Sep": "ก.ย.", "Feb": "ก.พ.", "Login_History": "ประวัติการเข้าใช้งาน", "Please_enter_a_date_that_is_at_least_6_months_from_now_": "โปรดป้อนวันที่อย่างน้อย 6 เดือน จากปัจจุบัน", "Step": "ขั้น", "Your_[_1]_day_withdrawal_limit_is_currently_[_2]_[_3]_(or_equivalent_in_other_currency)_": "วงเงินการถอนเงินต่อวันของท่าน [_1] ในปัจจุบัน คือ [_2] [_3] (หรือเทียบเท่าในสกุลเงินอื่น)", "Contract_Information": "ข้อมูลสัญญา", "Stop-loss": "ระงับขาดทุน", "letters": "ตัวอักษร", "Other": "อื่นๆ", "This_contract_won": "สัญญานี้กำไร", "Therefore_your_current_immediate_maximum_withdrawal_(subject_to_your_account_having_sufficient_funds)_is_[_1]_[_2]_(or_equivalent_in_other_currency)_": "ดังนั้น วงเงินการถอนมากที่สุดของท่านขณะนี้ (หากบัญชีท่านมีวงเงินเพียงพอ) คือ [_1] [_2] (หรือเทียบเท่าในสกุลเงินอื่น)", "Internal_Audit": "ตรวจสอบภายใน", "Credit/Debit": "เครดิต/เดบิต", "Now": "ขณะนี้", "email_address": "อีเมล์", "Start_Time": "เวลาเริ่ม", "Low_Barrier_([_1])": "Barrier ต่ำ ([_1])", "Name": "ชื่อ", "Senior_Front-End_Developer": "นักพัฒนาระบบส่วนหน้าอาวุโส", "Affiliate": "พันธมิตร", "Unlock_Cashier": "ปลดล็อกแคชเชียร์", "Potential_Payout": "ประมาณการจำนวนเงินที่ชำระ", "Sorry,_this_feature_is_available_to_virtual_accounts_only_": "ขออภัย ฟังก์ชันนี้มีให้ใช้งานเฉพาะบัญชีทดลองใช้เท่านั้น", "Only_[_1]_are_allowed_": "มีเพียง [_1] ที่จัดให้", "Verification_code_format_incorrect_": "รูปแบบของรหัสตรวจสอบไม่ถูกต้อง", "login": "เข้าสู่ระบบ", "Predict_the_direction<br_/>and_purchase": "พยากรณ์ทิศทาง<br />และซื้อ", "Print_chart": "พิมพ์กราฟ", "6_months_to_1_year": "6 เดือน ถึง 1 ปี", "Low_Barrier": "Barrier ต่ำ", "Your_trading_statistics_since_[_1]_": "สถิติการซื้อขายของท่านตั้งแต่ [_1]", "Sa": "ส", "New_Year's_Day": "วันปีใหม่", "Revoke_access": "การเพิกถอนการเข้าถึง", "There_was_a_problem_accessing_the_server_during_purchase_": "มีปัญหาเกิดขึ้นในการเข้าถึงเซิร์ฟเวอร์ขณะส่งคำสั่งซื้อ", "Please_try_again_": "โปรดลองอีกครั้ง", "Withdrawal_for_your_account_is_not_allowed_at_this_moment__Please_contact_[_1]_to_unlock_it_": "ในขณะนี้ บัญชีของท่านไม่ได้รับอนุญาตให้ดำเนินการถอนเงิน โปรดติดต่อ [_1] เพื่อปลดล็อค", "max:_100,000": "ค่าสูงสุด: 100,000", "$250,000_-_$1,000,000": "250,000 - 1,000,000 เหรียญสหรัฐ", "Public_worker": "พนักงานเอกชน", "Adjust_trade_parameters": "ปรับแต่งตัวแปรของการเทรด", "Please_select_a_valid_date": "โปรดระบุวันที่ที่ถูกต้อง", "Asset": "สินทรัพย์", "Sorry,_an_error_occurred_while_processing_your_request_": "ขออภัย มีความผิดพลาดเกิดขึ้นขณะที่ประมวลผลความประสงค์ของท่าน", "A_scanned_copy_of_your_passport,_driving_licence_(provisional_or_full)_or_identity_card,_showing_your_name_and_date_of_birth__Your_document_must_be_valid_for_at_least_6_months_after_this_date_": "สแกนสำเนาหนังสือเดินทาง หรือ สำเนาใบขับขี่ (ฉบับชั่วคราว หรือ ฉบับตลอดชีพ) หรือ สำเนาบัตรประชาชน ที่แสดงชื่อและวันเดือนปีเกิด จำนวน 1 ฉบับ เอกสารต้องไม่หมดอายุภายใน 6 เดือน นับจากวันที่ส่งเอกสาร", "Never": "ไม่เคย", "Fr": "ศ", "We": "พวกเรา", "Refresh_page": "โหลดหน้านี้ใหม่", "Tourism": "การท่องเที่ยว", "Your_account_has_no_trading_activity_": "บัญชีของท่านไม่มีประวัติการซื้อขาย", "Therefore_your_current_immediate_maximum_withdrawal_(subject_to_your_account_having_sufficient_funds)_is_[_1]_[_2]_": "ดังนั้น วงเงินการถอนมากที่สุดของท่านขณะนี้ (หากบัญชีท่านมีวงเงินเพียงพอ) คือ [_1] [_2]", "Contract_will_be_sold_at_the_prevailing_market_price_when_the_request_is_received_by_our_servers__This_price_may_differ_from_the_indicated_price_": "สัญญาจะถูกจำหน่ายที่ราคาทั่วไปของตลาดเมื่อระบบซื้อขายได้รับการแจ้งความจำนง ราคานี้อาจจะแตกต่างจากราคาที่ระบุ", "years": "ปี", "Less_than_6_months": "น้อยกว่า 6 เดือน", "Your_request_to_transfer_[_1]_[_2]_from_[_3]_to_[_4]_has_been_successfully_processed_": "คำสั่งของท่านในการโอน [_1] [_2] จาก [_3] ไป [_4] ได้ดำเนินการสำเร็จแล้ว", "Current_Level": "ระดับปัจจุบัน", "Exercise_period": "ช่วงเวลาทำงาน", "Save_as_CSV": "บันทึกเป็น CSV", "All_barriers_in_this_trading_window_are_expired": "รายการ Barrier ทั้งหมดในหน้าต่างซื้อขายนี้หมดอายุ", "Accounting": "การบัญชี", "Exit_Spot_Time": "เวลาที่สปอตสิ้นสุด", "When_you_click_'Ok'_you_will_be_excluded_from_trading_on_the_site_until_the_selected_date_": "เมื่อท่านเลือก \"Ok\" ท่านจะถูกพักจากระบบซื้อขายกระทั่งวันที่ที่ท่านระบุ", "Barrier_offset": "Barrier ออฟเซ็ท", "Please_confirm_the_transaction_details_in_order_to_complete_the_transfer:": "โปรดยืนยันรายละเอียดของธุรกรรมเพื่อทำให้การโอนสมบูรณ์:", "False": "ผิด", "Start_Trading": "เริ่มซื้อขาย", "Tertiary": "ลำดับที่สาม", "Processing_your_request___": "กำลังดำเนินการตามความประสงค์ของท่าน", "View_your_statement": "ดูสเตทเมนท์ของท่าน", "1-3_million_JPY": "1-3 ล้านเยน", "Are_you_sure_that_you_want_to_permanently_revoke_access_to_application": "ท่านแน่ใจใช่ไหมที่จะยกเลิกการเข้าใช้ระบบถาวร", "Resources": "แหล่งข้อมูล", "Please_check_the_above_form_for_pending_errors_": "โปรดตรวจสอบแบบฟอร์มข้างต้นสำหรับรายการข้อผิดพลาด", "Waiting_for_entry_tick_": "กำลังรองช่วงราคาเริ่มต้น", "Mr": "นาย", "Insufficient_balance_": "ยอดคงเหลือไม่เพียงพอ", "Deposit_of": "การฝากของ", "Secondary": "ลำดับที่สอง", "Date_of_Birth": "วันเกิด", "space": "ช่องว่าง", "Monday": "วันจันทร์", "Income_Source": "แหล่งที่มาของรายได้", "Enter_the_barrier_in_terms_of_the_difference_from_the_spot_price__If_you_enter_+0_005,_then_you_will_be_purchasing_a_contract_with_a_barrier_0_005_higher_than_the_entry_spot__The_entry_spot_will_be_the_next_tick_after_your_order_has_been_received": "เริ่มต้น Barrier ในความแตกต่างของจุดราคา หากท่านเพิ่ม +0.005 แล้ว หมายถึง คำสั่งของท่านจะซื้อที่ราคาที่สูงกว่าสปอตเริ่มต้นด้วย Barrier 0.005 สปอตเริ่มต้นจะเป็นช่วงราคาถัดไปหลังจากระบบได้รับคำสั่งของท่าน", "Please_enter_a_number_between_[_1]_": "โปรดป้อนตัวเลขระหว่าง [_1]", "Purchase_Time": "เวลาซื้อ", "Construction": "การก่อสร้าง / สิ่งปลูกสร้าง / การคิดค้น", "Entry_Level": "ระดับเริ่มต้น", "Last_Digit_Prediction": "การพยากรณ์ตัวเลขสุดท้าย", "Net_profit": "กำไรสุทธิ", "Select_market": "กำหนด ตลาด", "Marketing": "การตลาด", "minute": "นาที", "Save_as_PDF": "บันทึกเป็น PDF", "There_was_an_error": "มีความผิดพลาดเกิดขึ้น", "Your_changes_have_been_updated_": "การเปลี่ยนแปลงของท่านได้ถูกดำเนินการแล้ว", "This_contract_lost": "สัญญานี้ขาดทุน", "True": "จริง", "Details": "รายละเอียด", "DevOps_Manager": "ผู้จัดการงานพัฒนาระบบและปฏิบัติการ", "Reference_ID": "หมายเลขอ้างอิง", "Apr": "เม.ย.", "This_feature_is_not_relevant_to_virtual-money_accounts_": "ฟังก์ชันนี้ไม่สัมพันธ์กับบัญชีเงินเสมือน", "Over_5_years": "มากกว่า 5 ปี", "Mar": "มี.ค.", "Industry_of_Employment": "อุตสาหกรรมของการจ้างงาน", "Pension": "บำนาญ", "Current_Time": "เวลาปัจจุบัน:", "Closes": "ปิด", "Total_Profit/Loss": "รวมกำไร/ขาดทุน", "Accounts_And_Payments_Executive": "เจ้าหน้าที่บริการลูกค้าและรับชำระเงิน", "Only_2_decimal_points_are_allowed_": "ทศนิยม 2 หลัก เท่านั้น", "Targeting_short-term_profits": "เป้าหมายกำไรระยะสั้น", "Verification_Token": "โทเค่นเพื่อตรวจสอบ", "h": "ชม.", "Remaining_Time": "เวลาที่เหลืออยู่", "Delete": "ลบ", "40_transactions_or_more_in_the_past_12_months": "มีมากกว่า 40 ธุรกรรม ภายใน 12 เดือนที่ผ่านมา", "This_is_a_staging_server_-_For_testing_purposes_only": "นี่คือ เซิร์ฟเวอร์สำหรับพัก เพื่อใช้ในการทดสอบเท่านั้น", "Your_current_balance_is": "ยอดคงเหลือของท่าน คือ", "Weekday": "วันธรรมดาที่ไม่ใช่วันเสาร์อาทิตย์", "Please_check_your_email_to_retrieve_the_token_needed_to_reset_your_password_": "โปรดตรวจสอบอีเมล์ของท่านเพื่อใช้โทเค่นในการตั้งรหัสผ่านใหม่ของท่าน", "Minimum_of_[_1]_characters_required_": "จำนวนตัวอักขระน้อยที่สุดที่ต้องการ คือ [_1]", "Date_(GMT)": "วันที่ (GMT)", "password": "รหัสผ่าน", "0-1_year": "0-1 ปี", "30-50_million_JPY": "30-50 ล้านเยน", "To": "ถึง", "Balance": "คงเหลือ", "Closes_early_(at_18:00)": "ปิดก่อนเวลา (เมื่อเวลา 18.00 น.)", "Binary_options_or_other_financial_derivatives_trading_frequency": "ความถี่ในการเทรดไบนารีออปชั่น หรือ อนุพันธ์อื่นๆ", "When_you_click_\"Ok\"_you_will_be_excluded_from_trading_on_the_site_until_the_selected_date_": "เมื่อท่านเลือก \"Ok\" ท่านจะถูกพักจากระบบซื้อขายกระทั่งวันที่ที่ท่านระบุ", "Contract_purchased_with_app_ID": "ซื้อสัญญาด้วย app ID", "Exit_Spot": "สปอตสิ้นสุด", "Shop": "ร้าน", "Finish": "เสร็จสิ้น", "Financial_Assessment": "การประเมินทางการเงิน", "Year": "ปี", "hours": "ชั่วโมง", "Fridays": "วันศุกร์", "Sale_Date": "วันที่ขาย", "There_was_a_problem_validating_your_personal_details__Please_fix_the_fields_[_1]here": "มีปัญหาในการตรวจสอบที่อยู่ของท่าน โปรดแก้ไขข้อมูล [_1]", "Sorry,_your_account_is_not_authorised_for_any_further_contract_purchases_": "ขออภัย บัญชีของท่านไม่ได้รับอนุญาตในการซื้อสัญญาเพิ่ม", "Stop-type": "ประเภทของการระงับ", "Keep_track_of_your_authorised_applications_": "บันทึกการใช้งานแอพพลิเคชันของท่าน", "No_Live_price_update": "ไม่มีราคาใหม่", "Dec": "ธ.ค.", "High_barrier": "Barrier สูง", "Deposits_and_withdrawal_for_your_account_is_not_allowed_at_this_moment__Please_contact_[_1]_to_unlock_it_": "ท่านไม่ได้รับอนุญาตในการดำเนินการฝากเงินและการถอนเงินในบัญชีของท่านในขณะนี้ โปรดติดต่อ [_1] เพื่อปลดล็อค", "Commodities_trading_experience": "ประสบการณ์ในการซื้อขายสินค้าโภคภัณฑ์", "Primary": "หลัก", "Period": "ระยะเวลา", "PM": "น.", "Purchase": "ซื้อ", "Marketing_Project_Manager": "ผู้จัดการโครงการการตลาด", "Your_session_duration_limit_will_end_in_[_1]_seconds_": "เวลาการซื้อขายของท่านจะสิ้นสุดภายใน [_1] วินาที", "Payout": "การชำระเงิน", "Other_financial_instruments_trading_experience": "ประสบการณ์ซื้อขายเครื่องมือทางการเงินอื่นๆ", "Less_than_$25,000": "น้อยกว่า 25,000 เหรียญสหรัฐ", "Back": "กลับ", "Your_account_is_currently_suspended__Only_withdrawals_are_now_permitted__For_further_information,_please_contact_[_1]_": "ในขณะนี้บัญชีของท่านถูกพักชั่วคราว ท่านสามารถทำรายการถอนได้เท่านั้น หากต้องการข้อมูล โปรดติดต่อ [_1]", "Th": "พฤ", "Please_[_1]_to_view_this_page": "โปรด [_1] เพื่อเรียกดูหน้านี้", "Jump_To": "ข้ามไปที่", "Settings": "การตั้งค่า", "5-10_million_JPY": "5-10 ล้านเยน", "Not": "ไม่", "High_Barrier": "Barrier สูง", "seconds": "วินาที", "Random": "การสุ่ม", "New_Password": "รหัสผ่านใหม่", "Quantitative_Analyst": "นักวิเคราะห์เชิงปริมาณ", "Adjusted_High_Barrier": "ค่า Barrier สูงที่ปรับปรุงแล้ว", "Student": "นักเรียน", "Your_details_have_been_updated_": "รายละเอียดของท่านได้รับการปรับปรุงเรียบร้อยแล้ว", "Director": "ผู้อำนวยการ", "Su": "อา", "You_did_not_change_anything_": "ท่านไม่ได้แก้ไขค่าใดๆ", "Please_select": "โปรดระบุ", "Closed": "ปิด", "year": "ปี", "Your_provided_email_address_is_already_in_use_by_another_Login_ID__According_to_our_terms_and_conditions,_you_may_only_register_once_through_our_site__If_you_have_forgotten_the_password_of_your_existing_account,_please_<a_href=\"[_1]\">try_our_password_recovery_tool</a>_or_contact_customer_service_": "อีเมล์ของท่านถูกลงทะเบียนไว้กับผู้ใช้งานอีกบัญชีหนึ่ง ตามข้อตกลงและเงื่อนไข ท่านสามารถลงทะเบียนได้เพียงครั้งเดียวกับเว็บไซต์ของเรา หากท่านลืมรหัสผ่านของบัญชีที่ท่านมีอยู่ โปรด <a href=\"[_1]\">เรียกใช้การกู้คืนรหัสผ่าน</a> หรือ ติดต่อเจ้าหน้าที่บริการลูกค้า", "The_financial_trading_services_contained_within_this_site_are_only_suitable_for_customers_who_are_able_to_bear_the_loss_of_all_the_money_they_invest_and_who_understand_and_have_experience_of_the_risk_involved_in_the_acquistion_of_financial_contracts__Transactions_in_financial_contracts_carry_a_high_degree_of_risk__If_purchased_contracts_expire_worthless,_you_will_suffer_a_total_loss_of_your_investment,_which_consists_of_the_contract_premium_": "บริการการซื้อขายทางการเงินในเว็บไซต์นี้เหมาะกับลูกค้าผู้ซึ่งพึงรับรู้ต่อภาวะขาดทุนต่อเงินทั้งหมดที่ได้ลงทุน และผู้ซึ่งเข้าใจและมีประสบการณ์ต่อความเสี่ยงที่เกี่ยวข้องกับสัญญาทางการเงินต่างๆ ธุรกรรมที่เกี่ยวข้องกับสัญญาทางการเงินมีความเสี่ยงระดับสูง หากสัญญาที่ซื้อหมดอายุ ท่านจะสูญเสียเงินลงทุนของท่านทั้งหมด", "Profit/Loss": "กำไร/ขาดทุน", "Description": "รายละเอียด", "Charting_for_this_underlying_is_delayed": "กราฟของผลิตภัณฑ์อ้างอิงนี้ล่าช้า", "Please_deposit_before_transfer_to_client_": "โปรดฝากเงินก่อนทำการโอนให้ลูกค้า", "Your_withdrawal_limit_is_[_1]_[_2]_(or_equivalent_in_other_currency)_": "วงเงินการถอนของท่าน คือ [_1] [_2] (หรือเทียบเท่าในสกุลเงินอื่น)", "Administrator": "ผู้ดูแลระบบ", "Asset_Index": "ดัชนีสินทรัพย์", "Upgrade_to_a_Financial_Account": "อัพเกรดเป็นบัญชีทางการเงิน", "Chart": "แผนภูมิ", "Save_as_JPEG": "บันทึกเป็น JPEG", "Social_Media_Executive": "เจ้าหน้าที่สื่อสังคม", "May": "พ.ค.", "Contract_Sold": "สัญญาที่ถูกจำหน่าย", "We_are_not_able_to_stream_live_prices_at_the_moment__To_enjoy_live_streaming_of_prices_try_refreshing_the_page,_if_you_get_this_issue_after_repeated_attempts_try_a_different_browser": "ในขณะนี้ พวกเราไม่สามารถแสดงข้อมูลราคาแบบไลฟ์ สตรีมมิ่ง เพื่อการใช้งานดังกล่าว กรุณารีเฟรชหน้าที่ท่านกำลังใช้งาน หากยังพบปัญหา ขอให้ทดสอบกับเบราเซอร์อื่น", "Transfer_to": "โอนไป", "Please_select_at_least_one_scope": "โปรดระบุค่าอย่างน้อยหนึ่งขอบเขต", "today": "วันนี้", "Confirm_New_Password": "ยืนยันรหัสผ่านใหม่", "Current": "ปัจจุบัน", "Note": "บันทึก", "Please_choose_which_currency_you_would_like_to_transact_in_": "โปรดระบุสกุลเงินที่ท่านต้องการ", "Upgrade_to_a_Real_Account": "อัพเกรดเป็นบัญชีจริง", "Please_confirm_the_trade_on_your_statement_before_proceeding_": "โปรดยืนยันการซื้อขายตามสเตทเมนท์ของท่านก่อนการดำเนินการต่อไป", "Exit_Level": "ระดับสิ้นสุด", "Others": "อื่นๆ", "1-3_years": "1-3 ปี", "Aug": "ส.ค.", "[ctx,minimum_duration,_for_example_minimum_15_seconds]min": "นาที", "August": "สิงหาคม", "Score": "คะแนน", "Open_a_Financial_Account": "เปิดบัญชีทางการเงิน 1 บัญชี", "Virtual_Account": "บัญชีทดลองใช้", "Christmas_Day": "วันคริสต์มาส", "Failed_to_update_trade_description_": "ล้มเหลวในการปรับปรุงคำอธิบายการซื้อขาย", "Password_is_moderate": "รหัสผ่านมีความปลอดภัยปานกลาง", "Contract_Confirmation": "การยืนยันสัญญา", "Stop_Loss_Level": "ระดับการระงับการขาดทุน", "(Bejing/CST_-8_hours)": "(ปักกิ่ง/CST -8 ชั่วโมง)", "Day": "วัน", "From": "จาก", "is_required__Current_spread": "ต้องการสเปรดปัจจุบัน", "Over_3_years": "มากกว่า 3 ปี", "Sell": "ขาย", "End_Time": "เวลาสิ้นสุด", "Once_you_click_the_'Submit'_button,_the_funds_will_be_withdrawn_from_your_account_and_transferred_to_your_Client's_account_": "เมื่อท่านกดปุ่ม 'Submit' เงินหลักประกันของท่านจะถูกถอนจากบัญชีของท่านและโอนไปที่บัญชีลูกค้าของท่าน", "today,_Fridays": "วันนี้วันศุกร์", "Original_Barrier": "Barrier ดั้งเดิม", "Terms_&_Conditions": "ข้อตกลงและเงื่อนไข", "Return": "ผลตอบแทน", "Entry_Spot": "สปอตเริ่มต้น", "You_need_to_finish_all_20_questions_": "ท่านต้องตอบคำถาม 20 ข้อ ทุกข้อ", "Exclude_time_must_be_after_today_": "เวลาพักต้องเริ่มพรุ่งนี้", "Your_account_has_no_Login/Logout_activity_": "บัญชีของท่านไม่มีประวัติ การเข้าใช้งานระบบ/การออกจากระบบ", "Exit_spot": "สปอตสิ้นสุด", "New_token_created_": "สร้างโทเค่นใหม่แล้ว", "This_symbol_is_not_active__Please_try_another_symbol_": "ไม่มีสัญลักษณ์นี้ โปรดลองสัญลักษณ์อื่น", "Global_Customer_Service_Representatives": "เจ้าหน้าที่บริการลูกค้าสากล", "Invalid_email_address": "อีเมล์ไม่ถูกต้อง", "Your_cashier_is_locked_as_per_your_request_-_to_unlock_it,_please_click_[_1]here": "การรับ/ชำระเงินของท่านถูกล็อก - หากประสงค์ปลดล็อก โปรดคลิก [_1]ที่นี่", "Please_follow_the_pattern_3_numbers,_a_dash,_followed_by_4_numbers_": "โปรดป้อนข้อมูลในรูปแบบ ตัวเลข 3 หลัก ขีดกลาง และตามด้วย ตัวเลข 4 หลักสุดท้าย", "Mrs": "นาง", "Password": "รหัสผ่าน", "$100,000_-_$250,000": "100,000 - 250,000 เหรียญสหรัฐ", "Permissions": "สิทธิ์", "Low_barrier": "Barrier ต่ำ", "minutes": "นาที", "This_contract_can_not_be_traded_in_the_final_2_minutes_before_settlement": "สัญญาฉบับนี้ไม่สามารถดำเนินการได้ภายใน 2 นาที ก่อนการดำเนินการชำระเงิน", "Select_your_underlying_asset": "กำหนด ผลิตภัณฑ์อ้างอิงของท่าน", "New_password_is_same_as_old_password_": "รหัสผ่านใหม่เหมือนกับรหัสผ่านเดิม", "month": "เดือน", "Password_must_contains_at_least_1_digit,_1_uppercase_letter_and_1_lowercase_letter_": "Password must contains at least 1 digit, 1 uppercase letter and 1 lowercase letter.\nรหัสผ่านต้องประกอบด้วยตัวเลขอย่างน้อย 1 ตัว ตัวอักษรตัวใหญ่ 1 ตัว และ ตัวอักษรตัวเล็ก 1 ตัว เป็นอย่างน้อย", "numbers": "ตัวเลข", "Saturday": "วันเสาร์", "period": "ช่วงเวลา", "Investment_Account": "บัญชีเพื่อการลงทุน", "Select_your_trade_type": "กำหนด ประเภทการเทรดของท่าน", "You_have_already_withdrawn_[_1]_[_2]_": "ท่านได้ถอน [_1] [_2]", "Portfolio": "พอร์ตโฟลิโอ", "loading___": "กำลังโหลด...", "End_time_must_be_after_start_time_": "เวลาสิ้นสุดต้องเป็นเวลาภายหลังเวลาเริ่มต้น", "Quality_Assurance": "การประกันคุณภาพ", "Your_transaction_reference_number_is_[_1]": "หมายเลขอ้างอิงของธุรกรรมของท่าน คือ [_1]", "Please_enter_a_number_greater_or_equal_to_[_1]_": "โปรดป้อนตัวเลขมากกว่า หรือ เท่ากับ [_1]", "Please_check_your_email_for_the_value_of_this_token": "โปรดตรวจสอบอีเมล์ของท่านเพื่อการใช้งานโทเค่นนี้", "Adjusted_Low_Barrier": "ค่า Barrier ต่ำที่ปรับปรุงแล้ว", "Quantitative_Analysis": "การวิเคราะห์เชิงปริมาณ", "Indicative": "บ่งชี้", "Marketing_Executives": "เจ้าหน้าที่การตลาด", "Sorry,_this_feature_is_not_available_": "ขออภัย ไม่สามารถใช้งานฟังก์ชันนี้ได้", "Self-employed": "อาชีพอิสระ", "Upcoming_Events": "กิจกรรมในอนาคต", "Last_digit_stats_for_the_latest_[_1]_ticks_on_[_2]": "สถิติตัวเลขสุดท้ายสำหรับ [_1] ล่าสุด ช่วงราคาของ [_2]", "minimum_available_duration": "ช่วงเวลาต่ำสุด", "Week_of": "สัปดาห์ที่", "Your_token_has_expired__Please_click_<a_class=\"pjaxload\"_href=\"[_1]\">here</a>_to_restart_the_verification_process_": "โทเค่นของท่านหมดอายุแล้ว โปรดคลิก<a class=\"pjaxload\" href=\"[_1]\">ที่นี่</a> เพื่อดำเนินกระบวนการตรวจสอบ", "Deposit_[_1]_[_2]_virtual_money_into_your_account_[_3]": "ฝาก [_1] [_2] เงินเสมือนในบัญชีของท่าน [_3]", "Original_Low_Barrier": "Barrier ต่ำ ดั้งเดิม", "Walkthrough_Guide": "คู่มือแนะนำการใช้งาน", "Password_Reset": "ตั้งรหัสผ่านใหม่", "Authorise_your_account_": "การให้สิทธิ์ในบัญชีของท่าน", "The_server_<a_href=\"[_1]\">endpoint</a>_is:_[_2]": "เซิร์ฟเวอร์ <a href=\"[_1]\">จุดสิ้นสุด</a> คือ: [_2]", "Hedging": "เฮดจิ้ง", "Month": "เดือน", "Exclude_time_cannot_be_less_than_6_months_": "เวลาพักไม่น้อยกว่า 6 เดือน", "Sell_at_market": "ขาย ณ ตลาด", "Hour": "ชั่วโมง", "No_experience": "ไม่มีประสบการณ์", "Cashier": "แคชเชียร์", "Your_password_cannot_be_the_same_as_your_email": "รหัสผ่านของท่านไม่สามารถเป็นข้อความที่เหมือนกับอีเมล์ของท่าน", "Both_the_above": "ทั้งสองประการข้างต้น", "Withdrawal": "ถอน", "Purchase_Price": "ราคาซื้อ", "You_have_sold_this_contract_at_[_1]_[_2]": "ท่าได้ขายสัญญานี้ที่ [_1] [_2]", "The_maximum_number_of_tokens_([_1])_has_been_reached_": "จำนวนมากที่สุดของโทเค่น ([_1]) ถูกใช้หมดแล้ว", "Please_select_a_value": "โปรดระบุค่า", "Due_to_recent_changes_in_the_regulations,_we_are_required_to_ask_our_clients_to_complete_the_following_Financial_Assessment__Please_note_that_you_will_not_be_able_to_continue_trading_until_this_is_completed_": "ตามที่มีการเปลี่ยนแปลงเกิดขึ้นในหลักเกณฑ์ พวกเราใคร่ขอให้ลูกค้าดำเนินการบันทึกการประเมินทางการเงินของท่านใหม่ ทางบริษัทฯ ขอเรียนให้ทราบว่า ท่านจะไม่สามารถซื้อขายต่อไปได้หากท่านยังไม่ได้ตอบแบบสำรวจดังกล่าว", "This_field_is_required_": "ข้อมูลในช่องนี้จำเป็นต้องมี", "Your_Client_will_receive_an_email_notification_informing_him/her_that_the_transfer_has_been_processed_": "ลูกค้าของท่านจะได้รับอีเมล์แจ้งให้ทราบว่า การโอนได้ถูกดำเนินการแล้ว", "min:_1,000": "ค่าต่ำสุด: 1,000", "Try_adding_more_letters_": "ลองเพิ่มตัวอักษร", "Login_ID": "รหัสผู้ใช้งาน", "Sorry,_you_have_entered_an_incorrect_cashier_password": "ขออภัยค่ะ ท่านป้อนรหัสผ่านแคชเชียร์ไม่ถูกต้อง", "Password_is_very_strong": "รหัสผ่านมีความปลอดภัยขั้นสูง", "Try_adding_more_numbers_": "ลองเพิ่มตัวเลข", "Spot": "สปอต", "Higher/Lower": "สูงกว่า/ต่ำกว่า", "There_was_some_invalid_character_in_an_input_field_": "มีบางอักขระไม่ถูกต้องจากข้อมูลที่ป้อนเข้ามา", "Please_enter_a_number_between_0_and_[_1]": "โปรดป้อนตัวเลขระหว่าง 0 และ [_1]", "Commodities_trading_frequency": "ความถี่ในการซื้อขายสินค้าโภคภัณฑ์", "[_1]_has_updated_its_[_2]__By_clicking_OK,_you_confirm_that_you_have_read_and_accepted_the_updated_[_2]_": "[_1] ได้รับการแก้ไข [_2] แล้ว และขอให้ท่านกดปุ่ม OK เพื่อยืนยันว่า ท่านได้อ่านและยอมรับการแก้ไข [_2] นั้น", "Please_submit_a_valid_[_1]_": "โปรดส่ง [_1] ที่ถูกต้อง", "day": "วัน", "Over/Under": "สูงกว่า/ต่ำกว่า", "Next_Day": "วันถัดไป", "Settles": "ชำระเงิน", "hyphen": "ขีดกลาง (-)", "details": "รายละเอียด", "Total_Cost": "ราคารวม", "Even/Odd": "คู่/คี่", "Withdraw": "ถอนเงิน", "not_available": "ไม่มีอยู่", "Human_Resources": "ฝ่ายบุคคล", "Please_fill_in_the_Login_ID_and_Amount_you_wish_to_transfer_to_your_Client_in_the_form_below:": "โปรดกรอกรหัสผู้ใช้งาน และจำนวนเงินที่ท่านต้องการโอนให้กับลูกค้าของท่านในแบบฟอร์มด้านล่าง:", "Previous": "ก่อนหน้า", "My_Account": "บัญชีของฉัน", "June": "มิถุนายน", "You_have_already_withdrawn_the_equivalent_of_[_1]_[_2]_": "ท่านได้ถอน [_1] [_2] หรือเทียบเท่า", "Oct": "ต.ค.", "Profit": "กำไร", "Stake": "วางเงิน", "Closes_early_(at_21:00)": "ปิดก่อนเวลา (เมื่อเวลา 21.00 น.)", "Opens": "เปิด", "March": "มีนาคม", "Date": "วันที่", "Authenticate": "ยืนยันตัวตน", "Stocks_trading_frequency": "ความถี่ในการซื้อขายหลักทรัพย์ต่างๆ", "This_contract_has_LOST": "สัญญานี้สูญเปล่า", "Please_wait_<br_/>Your_request_is_being_processed_": "กรุณารอสักครู่<br />กำลังดำเนินการการร้องขอของท่าน", "$25,000_-_$100,000": "25,000 - 100,000 เหรียญสหรัฐ", "min": "ค่าต่ำสุด", "Japan": "ประเทศญี่ปุ่น", "Finance": "การเงิน", "Prices": "ราคา", "Please_enter_an_integer_value": "โปรดป้อนจำนวนเต็ม", "Your_account_is_fully_authenticated_and_your_withdrawal_limits_have_been_lifted_": "บัญชีของท่านได้รับการยืนยันตัวตนอย่างสมบูรณ์แล้ว และวงเงินการถอนเงินของท่านได้รับการยกระดับโดยการเพิ่มวงเงินแล้ว", "Save_as_PNG": "บันทึกเป็น PNG", "Remaining_time": "เวลาที่เหลืออยู่", "Internal_Auditor": "ผู้ตรวจสอบภายใน", "Potential_Profit": "ประมาณการกำไร", "Open": "เปิด", "Start_time": "เวลาเริ่ม", "Administrative_Executive": "เจ้าหน้าที่บริหารงานทั่วไป", "Never_Used": "ไม่เคยใช้", "End_time": "เวลาสิ้นสุด", "You_should_enter_between_[_1]_characters_": "ท่านควรป้อนข้อมูลระหว่าง [_1] อักขระ", "This_contract_was_affected_by_a_Corporate_Action_event_": "สัญญานี้มีผลต่อการดำเนินงานขององค์กร", "Status": "สถานะ", "You_have_not_granted_access_to_any_applications_": "ท่านไม่ได้รับอนุญาตให้เข้าใช้งานระบบใดๆ", "Your_request_to_withdraw_[_1]_[_2]_from_your_account_[_3]_to_Payment_Agent_[_4]_account_has_been_successfully_processed_": "คำสั่งของท่านเพื่อถอน [_1] [_2] จากบัญชีของท่าน [_3] ให้ตัวแทนรับชำระเงิน [_4] บัญชีได้รับการประมวลผลสำเร็จ", "Self-Employed": "อาชีพอิสระ", "Forex_trading_frequency": "ความถี่ของการเทรดฟอเร็กซ์", "Invalid_amount,_maximum_is": "จำนวนไม่ถูกต้อง ค่าสูงสุด คือ", "October": "ตุลาคม", "Today": "วันนี้", "second": "วินาที", "Country_Manager": "ผู้จัดการระดับประเทศ", "Stocks_trading_experience": "ประสบการณ์ในการซื้อขายหลักทรัพย์ต่างๆ", "We_are_not_accepting_accounts_from_residents_of_this_country_at_the_present_time_": "พวกเรายังไม่รับบัญชีจากประเทศนี้ในขณะนี้", "This_contract_has_WON": "สัญญานี้ได้ชัยชนะ", "Old_password_is_wrong_": "รหัสผ่านเก่าไม่ถูกต้อง", "November": "พฤศจิกายน", "High_Barrier_([_1])": "Barrier สูง ([_1])", "Contract_Expiry": "วันหมดอายุสัญญา", "Last_Used": "ใช้ครั้งสุดท้าย", "An_additional_password_can_be_used_to_restrict_access_to_the_cashier_": "รหัสผ่านเพิ่มนี้สามารถใช้เพื่อเข้าถึงส่วนของแคชเชียร์", "Human_Resource_Executive": "เจ้าหน้าที่บริหารงานบุคคล", "Housewife_/_Househusband": "แม่บ้าน/พ่อบ้าน", "Quality_Assurance_Engineer": "วิศวกรประกันคุณภาพ", "Amount": "จำนวน", "Over_$1,000,000": "มากกว่า 1,000,000 เหรียญสหรัฐ", "Statement": "รายงานทางการเงิน", "February": "กุมภาพันธ์", "December": "ธันวาคม", "Less_than_$100,000": "น้อยกว่า 100,000 เหรียญสหรัฐ", "Graphic_Designers": "นักออกแบบกราฟิก", "Ms": "นางสาว", "You_must_accept_the_terms_and_conditions_to_open_an_account_": "ท่านต้องยอมรับข้อตกลงและเงื่อนไขเพื่อเปิดบัญชี", "The_Payment_Agent_facility_is_currently_not_available_in_your_country_": "ขณะนี้ไม่มีบริการตัวแทนรับชำระเงินในประเทศของท่าน", "Corporate_Action": "การดำเนินการขององค์กร", "Buy": "ซื้อ", "Compliance": "การปฏิบัติตามข้อกำหนด", "Password_is_strong": "รหัสผ่านมีความปลอดภัย", "Low_barrier_offset": "Barrier ต่ำออฟเซ็ท", "Password_should_have_lower_and_uppercase_letters_with_numbers_": "รหัสผ่านควรประกอบด้วยอักษรตัวเล็ก อักษรตัวใหญ่ และตัวเลข", "Applications": "แอพพลิเคชัน", "Market_is_closed__Please_try_again_later_": "ตลาดได้ปิดทำการแล้ว กรุณาทำรายการใหม่ภายหลัง", "The_two_passwords_that_you_entered_do_not_match_": "รหัสผ่านที่ท่านป้อนสองครั้งไม่เหมือนกัน", "Sorry,_an_error_occurred_while_processing_your_account_": "ขออภัย มีความผิดพลาดเกิดขึ้นขณะที่ประมวลผลบัญชีของท่าน", "week": "สัปดาห์", "Office_worker": "พนักงานบริษัทฯ", "Try_adding_more_letters_or_numbers_": "ลองเพิ่มตัวอักษร หรือ ตัวเลข", "6-10_transactions_in_the_past_12_months": "มี 6-10 ธุรกรรมใน 12 เดือนที่ผ่านมา", "Anti-Fraud_Officer": "เจ้าหน้าที่ป้องกันการทุจริต", "Contract_ID": "หมายเลขสัญญา", "Resale_not_offered": "การขายสัญญาไม่ได้ถูกนำเสนอ", "Last_Digit_Stats": "สถิติตัวเลขสุดท้าย", "Less_than_1_million_JPY": "ต่ำกว่า 1 ล้านเยน", "Failed_to_reset_password__[_1],_please_retry_": "ไม่สามารถตั้งรหัสผ่านใหม่ [_1] โปรดลองอีกครั้ง", "Please_input_a_valid_date": "โปรดป้อนวันที่ที่ถูกต้อง", "Tuesday": "วันอังคาร", "3-5_million_JPY": "3-5 ล้านเยน", "Sunday": "วันอาทิตย์", "10-30_million_JPY": "10-30 ล้านเยน", "Zoom": "ขยาย", "Jul": "ก.ค.", "Time_is_in_the_wrong_format_": "เวลาอยู่ในรูปแบบที่ไม่ถูกต้อง", "Over_$500,001": "มากกว่า 500,001 เหรียญสหรัฐ", "Loss": "เสีย", "Action": "การกระทำ", "Update": "การปรับปรุง", "Jun": "มิ.ย.", "Transfer_to_Login_ID": "โอนไปรหัสผู้ใช้งาน", "Trading_Times": "เวลาซื้อขาย", "Are_you_sure_that_you_want_to_permanently_delete_token": "ท่านแน่ใจใช่ไหมที่จะลบโทเค่นถาวร", "Please_log_in_": "โปรดเข้าสู่ระบบ", "Your_Application_is_Being_Processed_": "ใบสมัครของท่านอยู่ในกระบวนการพิจารณา", "Senior_Perl_Developer": "นักพัฒนาระบบอาวุโส ภาษา Perl", "Number_of_ticks": "จำนวนของช่วงราคา", "Information_Technology": "เทคโนโลยีสารสนเทศ", "Points": "จุด", "Forex_trading_experience": "ประสบการณ์ของการเทรดฟอเร็กซ์", "months": "เดือน", "Connection_error:_Please_check_your_internet_connection_": "การเชื่อมต่อมีความผิดพลาด: โปรดตรวจสอบการเชื่อมต่ออินเทอร์เน็ตของท่าน", "Targeting_medium-term_/_long-term_profits": "เป้าหมายระยะกลาง / กำไรระยะยาว", "Education": "การศึกษา", "Transaction_performed_by_[_1]_(App_ID:_[_2])": "ดำเนินธุรกรรมโดย [_1] (App ID: [_2])", "Save_as_SVG": "บันทึกเป็น SVG", "Original_High_Barrier": "Barrier สูง ดั้งเดิม", "Please_complete_the_following_financial_assessment_form_before_continuing_": "โปรดบันทึกผลการประเมินทางการเงินของท่านในแบบฟอร์มต่อไปนี้ ก่อนการดำเนินการต่อไป", "September": "กันยายน", "AM": "น.", "Your_transaction_reference_is": "เลขที่อ้างอิงของธุรกรรมของท่าน คือ", "Gaming_Account": "บัญชีการพนัน", "Profit/Loss_(points)": "กำไร/ขาดทุน (จุด)", "Session_duration_limit_cannot_be_more_than_6_weeks_": "รอบระยะเวลาการซื้อขายไม่สามารถมากกว่า 6 สัปดาห์", "Equals": "เท่ากับ", "Real_Account": "บัญชีจริง", "Mo": "จ", "There_was_a_problem_accessing_the_server_": "มีปัญหาในการเข้าถึงเครื่องแม่ข่าย", "Translator": "นักแปล", "Contract": "สัญญา", "Indices_trading_frequency": "ความถี่ในการเทรดดัชนี", "Failed": "ล้มเหลว", "Please_enter_a_valid_amount_": "โปรดป้อนตัวเลขที่ถูกต้อง", "Health": "สุขภาพ", "High_barrier_offset": "Barrier สูง ที่หักกลบลบกัน", "Binary_options_or_other_financial_derivatives_trading_experience": "ประสบการณ์การเทรดไบนารีออปชั่น หรือ อนุพันธ์อื่นๆ", "Token": "โทเค่น", "Miss": "นางสาว", "[_1]_[_2]_has_been_credited_to_your_Virtual_money_account_[_3]": "[_1] [_2] ถูกเพิ่มแล้วที่บัญชีเสมือนของท่าน [_3]", "Salaried_Employee": "พนักงานที่ได้รับเงินเดือน", "Please_select_a_payment_agent": "โปรดระบุตัวแทนรับชำระเงิน", "Net_Annual_Income": "รายได้สุทธิต่อปี", "Unemployed": "ว่างงาน", "Exclude_time_cannot_be_for_more_than_5_years_": "เวลาพักไม่เกิน 5 ปี", "Deposit": "ฝาก", "Password_is_not_strong_enough_": "รหัสผ่านไม่ปลอดภัยเท่าที่ควร", "Level_of_Education": "ระดับการศึกษา", "Price": "ราคา", "Sell_time": "เวลาที่ขาย", "Sorry,_account_opening_is_unavailable_": "ขออภัย ไม่สามารถเปิดบัญชีได้", "mins": "นาที", "For_added_security,_please_check_your_email_to_retrieve_the_verification_token_": "โปรดตรวจสอบอีเมล์ของท่านเพื่อรับโทเค่นในการยืนยันตัวตน และความปลอดภัย", "Password_is_weak": "รหัสผ่านไม่ปลอดภัย", "Our_site_does_not_charge_any_transfer_fees_": "ระบบของเราไม่เรียกเก็บค่าธรรมเนียมใดๆ ในการโอน", "Invalid_date_of_birth_": "วันเกิดไม่ถูกต้อง", "Major_Pairs": "คู่หลัก", "Ref_": "อ้างอิง", "Contract_/_Temporary_/_Part_Time": "สัญญาจ้าง / ชั่วคราว / พาร์ทไทม์", "weeks": "สัปดาห์", "Proofreader": "นักพิสูจน์อักษร", "Wednesday": "วันพุธ", "Questions": "คำถาม", "Stop_Profit_Level": "ระดับการระงับกำไร", "f": "ศ", "3-5_years": "3-5 ปี", "Entry_spot": "สปอตเริ่มต้น", "Select_your_market": "กำหนด ตลาดของท่าน", "Date_and_Time": "วันที่และเวลา", "days": "วัน", "Successful": "เรียบร้อยแล้ว", "Your_withdrawal_limit_is_[_1]_[_2]_": "วงเงินการถอนของท่าน คือ [_1] [_2]", "Minute": "นาที", "View": "ดู", "January": "มกราคม", "Your_password_has_been_successfully_reset__Please_log_into_your_account_using_your_new_password_": "รหัสผ่านของท่านได้ถูกกำหนดใหม่เรียบร้อยแล้ว โปรดเข้าสู่ระบบโดยการใช้รหัสผ่านใหม่ของท่าน", "Copywriter": "กอปปี้ไรท์เตอร์หรือ ผู้เขียนต้นฉบับ", "Waiting_for_exit_tick_": "กำลังรอช่วงราคาสุดท้าย", "Format:_yyyy-mm-dd_(not_required_for_virtual-money_accounts)": "รูปแบบ: yyyy-mm-dd (ไม่ต้องระบุหากเป็นบัญชีเสมือน หรือ บัญชีทดลองใช้)", "verification_token": "โทเค่นเพื่อการตรวจสอบ", "July": "กรกฎาคม", "Password_does_not_match_": "รหัสผ่านไม่ตรงกัน", "Spot_Time": "เวลาสปอต", "Tu": "อัง", "Target": "เป้าหมาย", "0-5_transactions_in_the_past_12_months": "0-5 ธุรกรรมในระยะเวลา 12 เดือน ที่ผ่านมา" };
	texts_json['VI'] = { "Month": "Tháng", "Cashier": "Thu ngân", "Your_password_cannot_be_the_same_as_your_email": "Mật khẩu của bạn không được giống email", "Exclude_time_cannot_be_less_than_6_months_": "Thời gian loại trừ không thể ít hơn 6 tháng.", "Sell_at_market": "Bán tại thị trường", "This_field_is_required_": "Lĩnh vực này được yêu cầu.", "Due_to_recent_changes_in_the_regulations,_we_are_required_to_ask_our_clients_to_complete_the_following_Financial_Assessment__Please_note_that_you_will_not_be_able_to_continue_trading_until_this_is_completed_": "Vì những thay đổi gần đây trong các quy định, chúng tôi buộc phải yêu cầu khách hàng hoàn tất bản Đánh giá Tài chính sau. Xin lưu ý rằng bạn sẽ không thể tiếp tục giao dịch cho đến khi bản đánh giá được hoàn thành.", "Your_Client_will_receive_an_email_notification_informing_him/her_that_the_transfer_has_been_processed_": "Khách hàng của bạn sẽ nhận được một email thông báo rằng việc chuyển tiền đã được xử lý.", "min:_1,000": "tối thiểu: 1.000", "Try_adding_more_letters_": "Hãy thử nhập thêm các chữ cái.", "Withdrawal": "Rút tiền", "IP_Address": "Địa chỉ IP", "You_have_sold_this_contract_at_[_1]_[_2]": "Bạn đã bán hợp đồng này với mức [_1] [_2]", "The_maximum_number_of_tokens_([_1])_has_been_reached_": "Đã đạt đến độ dài tối đa của mã token ([_1]).", "Purchase_Price": "Giá Mua", "Lock_Cashier": "Khóa quầy Thu ngân", "Deposit_[_1]_[_2]_virtual_money_into_your_account_[_3]": "Gửi [_1] [_2] tiền ảo vào tài khoản [_3] của bạn", "Your_token_has_expired__Please_click_<a_class=\"pjaxload\"_href=\"[_1]\">here</a>_to_restart_the_verification_process_": "Chuỗi xác nhận của bạn đã hết hiệu lực. Xin vui lòng nhấp chuột vào <a class=\"pjaxload\" href=\"[_1]\">đây</a> để khởi động lại quá trình xác minh.", "Walkthrough_Guide": "Hướng dẫn tổng quan", "The_server_<a_href=\"[_1]\">endpoint</a>_is:_[_2]": "Máy chủ <a href=\"[_1]\">điểm cuối</a> là: [_2]", "Password_Reset": "Thiết lập lại Mật khẩu", "Authorise_your_account_": "Quản lý tài khoản của bạn.", "Original_Low_Barrier": "Giới hạn Thấp Ban đầu", "Up/Down": "Lên/Xuống", "Quality_Assurance": "Đảm bảo Chất Lượng", "Your_transaction_reference_number_is_[_1]": "Số tham chiếu giao dịch của bạn là [_1]", "Please_enter_a_number_greater_or_equal_to_[_1]_": "Vui lòng nhập một số lớn hơn hoặc bằng [_1].", "loading___": "đang tải...", "Marketing_Executives": "Chuyên Viên Marketing", "Adjusted_Low_Barrier": "Giới hạn thấp đã được điều chỉnh", "Please_check_your_email_for_the_value_of_this_token": "Vui lòng kiểm tra email của bạn để biết giá trị của token này", "Indicative": "Chỉ thị", "Quantitative_Analysis": "Phân Tích Định Lượng", "You_have_already_withdrawn_[_1]_[_2]_": "Bạn vừa rút [_1] [_2].", "Select_your_trade_type": "Chọn loại giao dịch của bạn", "Portfolio": "Hồ sơ", "Upcoming_Events": "Sự kiện sắp diễn ra", "minimum_available_duration": "khoảng thời gian có sẵn tối thiểu", "Week_of": "Tuần của", "Last_digit_stats_for_the_latest_[_1]_ticks_on_[_2]": "Chữ số cuối cùng cho điểm [_1] gần nhất trên [_2]", "Sorry,_this_feature_is_not_available_": "Xin lỗi, đặc tính này không có.", "Self-employed": "Tự kinh doanh", "Password": "Mật khẩu", "Low_barrier": "Rào cản Thấp", "Permissions": "Quyền hạn", "minutes": "phút", "Global_Customer_Service_Representatives": "Đại Diện Dịch Vụ Chăm sóc Khách Hàng Toàn cầu", "Invalid_email_address": "Địa chỉ email không hợp lệ", "Please_follow_the_pattern_3_numbers,_a_dash,_followed_by_4_numbers_": "Vui lòng tuân theo cấu trúc 3 số, dấu gạch ngang, tiếp theo là 4 số.", "Mrs": "Bà", "Your_cashier_is_locked_as_per_your_request_-_to_unlock_it,_please_click_[_1]here": "Tiền đã bị khóa theo yêu cầu của bạn - để mở khóa, vui lòng nhấn [_1]tại đây", "numbers": "các số", "month": "tháng", "Password_must_contains_at_least_1_digit,_1_uppercase_letter_and_1_lowercase_letter_": "Mật khẩu phải chứa ít nhất 1 chữ số, 1 chữ cái viết hoa và 1 chữ cái viết thường.", "Investment_Account": "Tài khoản Đầu tư", "Saturday": "Thứ Bảy", "period": "giai đoạn", "Select_your_underlying_asset": "Chọn tài sản cơ sở của bạn", "This_contract_can_not_be_traded_in_the_final_2_minutes_before_settlement": "Hợp đồng này không thể được giao dịch trong vòng 2 phút cuối cùng trước khi thanh toán", "New_password_is_same_as_old_password_": "Mật khẩu mới giống mật khẩu cũ.", "Internal_Auditor": "Kiểm Toán viên Nội bộ", "Potential_Profit": "Lợi nhuận Tiềm năng", "Your_account_is_fully_authenticated_and_your_withdrawal_limits_have_been_lifted_": "Tài khoản của bạn được xác thực đầy đủ và mức giới hạn rút tiền của bạn đã được nâng lên.", "Save_as_PNG": "Lưu theo định dạng PNG", "Start_time": "Thời gian bắt đầu", "Open": "Mở", "Prices": "Giá", "Finance": "Tài chính", "Matches/Differs": "Phù hợp/Khác", "Please_enter_an_integer_value": "Vui lòng nhập giá trị số nguyên", "Self-Employed": "Tự kinh doanh", "Ends_In/Out": "Kết thúc Trong/Ngoài", "Status": "Tình trạng", "Your_request_to_withdraw_[_1]_[_2]_from_your_account_[_3]_to_Payment_Agent_[_4]_account_has_been_successfully_processed_": "Yêu cầu rút tiền [_1] [_2] từ tài khoản [_3] của bạn và chuyển tới tài khoản Đại lý Thanh toán [_4] đã được xử lý thành công.", "You_have_not_granted_access_to_any_applications_": "Bạn không được phép truy cập bất kỳ một ứng dụng nào.", "Forex_trading_frequency": "Tần suất giao dịch Thị trường ngoại hối", "Invalid_amount,_maximum_is": "Số tiền không hợp lệ, tối đa là", "Administrative_Executive": "Chuyên Viên Hành Chính", "Never_Used": "Chưa bao giờ Sử dụng", "You_should_enter_between_[_1]_characters_": "Bạn nên nhập vào trong khoảng [_1] ký tự.", "This_contract_was_affected_by_a_Corporate_Action_event_": "Hợp đồng này đã bị ảnh hưởng bởi một sự kiện hoạt động của công ty.", "Stocks_trading_frequency": "Tần suất giao dịch Chứng khoán", "March": "Tháng Ba", "Authenticate": "Xác thực", "Date": "Ngày", "min": "tối thiểu", "Japan": "Nhật Bản", "This_contract_has_LOST": "Hợp đồng này bị THUA LỖ", "{JAPAN_ONLY}This_knowledge_test_is_required_by_law__As_we_provide_the_test,_we_know_customers_better_whether_the_customers_are_suitable_investors_to_be_carried_out_the_binary_options_trading,_and_customers_can_start_trading_with_us_": "{JAPAN ONLY} This knowledge test is required by law. As we provide the test, we know customers better whether the customers are suitable investors to be carried out the binary options trading, and customers can start trading with us.", "Please_wait_<br_/>Your_request_is_being_processed_": "Vui lòng chờ. <br />Yêu cầu của bạn đang được xử lý.", "Human_Resources": "Nhân Sự", "not_available": "không có sẵn", "Rise/Fall": "Tăng/Giảm", "My_Account": "Tài khoản của tôi", "Previous": "Trước", "Please_fill_in_the_Login_ID_and_Amount_you_wish_to_transfer_to_your_Client_in_the_form_below:": "Vui lòng điền tên Đăng nhập vá Số tiền bạn muốn chuyển cho Khách hàng của mình trong bản mẫu dưới đây:", "Even/Odd": "Hòa vốn/ Số dư", "details": "chi tiết", "hyphen": "dấu nối", "Total_Cost": "Tổng Chi phí", "Withdraw": "Rút tiền", "Profit": "Lợi nhuận", "Stake": "Đơn vị vốn, cổ phiếu", "Opens": "Mở", "June": "Tháng Sáu", "Oct": "Tháng Mười", "You_have_already_withdrawn_the_equivalent_of_[_1]_[_2]_": "Bạn đã rút số tiền tương đương [_1] [_2].", "Try_adding_more_numbers_": "Hãy thử nhập thêm số.", "Barrier": "Rào cản", "Higher/Lower": "Cao hơn/Thấp hơn", "Spot": "Giao ngay", "Login_ID": "ID Đăng nhập", "Password_is_very_strong": "Mật khẩu rất mạnh", "Sorry,_you_have_entered_an_incorrect_cashier_password": "Xin lỗi, bạn đã nhập sai mật khẩu thu ngân", "[_1]_has_updated_its_[_2]__By_clicking_OK,_you_confirm_that_you_have_read_and_accepted_the_updated_[_2]_": "[_1] vừa cập nhật [_2]. Bằng cách nhấn vào OK, bạn xác nhận rằng bạn đã đọc và chấp nhận bản cập nhật [_2].", "Please_submit_a_valid_[_1]_": "Vui lòng nhập một tài khoản [_1] hợp lệ.", "day": "ngày", "Next_Day": "Ngày tiếp theo", "Settles": "Quyết toán", "Over/Under": "Trên/Dưới", "There_was_some_invalid_character_in_an_input_field_": "Có một vài ký tự không hợp lệ với dữ liệu nhập vào.", "Please_enter_a_number_between_0_and_[_1]": "Vui lòng nhập một số giữa 0 và [_1]", "Commodities_trading_frequency": "Tần suất giao dịch Hàng hóa", "Senior_Perl_Developer": "Chuyên Viên Phát Triển Perl", "Number_of_ticks": "Số điểm", "Information_Technology": "Công nghệ Thông tin", "Points": "Điểm", "Are_you_sure_that_you_want_to_permanently_delete_token": "Bạn có chắc chắn muốn xóa vĩnh viễn token", "Please_log_in_": "Vui lòng đăng nhập.", "Trading_Times": "Thời gian Giao dịch", "Update": "Cập nhật", "Transfer_to_Login_ID": "Chuyển tới ID đăng nhập", "Jun": "Tháng Sáu", "Transaction_performed_by_[_1]_(App_ID:_[_2])": "Giao dịch thực hiện bởi [_1] (ID ứng dụng: [_2])", "Save_as_SVG": "Lưu theo định dạng SVG", "In/Out": "Trong/Ngoài", "Education": "Giáo dục", "September": "Tháng Chín", "Original_High_Barrier": "Giới hạn Cao Ban đầu", "Please_complete_the_following_financial_assessment_form_before_continuing_": "Vui lòng hoàn tất mẫu đánh giá tài chính dưới đây trước khi tiếp tục.", "months": "tháng", "Forex_trading_experience": "Kinh nghiệm giao dịch Thị trường Ngoại hối", "Resale_not_offered": "Bán lại không được cho phép", "{JAPAN_ONLY}Please_complete_the_following_questions_": "{CHỈ DÀNH CHO THỊ TRƯỜNG NHẬT BẢN}Vui lòng hoàn thành những câu hỏi sau đây.", "Last_Digit_Stats": "Dữ liệu Chữ số Cuối cùng", "Tuesday": "Thứ Ba", "Please_input_a_valid_date": "Vui lòng nhập ngày hợp lệ", "Failed_to_reset_password__[_1],_please_retry_": "Thiết lập lại mật khẩu thất bại. [_1], vui lòng thử lại.", "Anti-Fraud_Officer": "Chống Gian Lận", "6-10_transactions_in_the_past_12_months": "6-10 giao dịch trong 12 tháng trước", "Contract_ID": "Mã Hợp đồng", "Over_$500,001": "Trên $500,001", "Loss": "Thất thoát", "Action": "Hành động", "Zoom": "Phóng", "Sunday": "Chủ nhật", "Jul": "Tháng Bảy", "The_Payment_Agent_facility_is_currently_not_available_in_your_country_": "Các cơ sở đại lý thanh toán hiện không có trong đất nước của bạn.", "You_must_accept_the_terms_and_conditions_to_open_an_account_": "Bạn phải chấp nhận các điều khoản và điều kiện để mở tài khoản.", "Password_is_strong": "Mật khẩu đủ mạnh", "Corporate_Action": "Hoạt động của công ty", "Buy": "Mua", "Compliance": "Pháp Chế", "Amount": "Số tiền", "Quality_Assurance_Engineer": "Kỹ sư Đảm bảo Chất lượng", "Over_$1,000,000": "Trên $1,000,000", "Statement": "Tuyên bố", "February": "Tháng Hai", "Graphic_Designers": "Thiết Kế Đồ Họa", "Less_than_$100,000": "Ít hơn $100,000", "December": "Tháng 12", "Ms": "Cô", "The_two_passwords_that_you_entered_do_not_match_": "Hai mật khẩu bạn vừa nhập không khớp với nhau.", "Sorry,_an_error_occurred_while_processing_your_account_": "Xin lỗi, Lỗi xảy ra trong khi đang xử lý tài khoản của bạn.", "Try_adding_more_letters_or_numbers_": "Hãy thử nhập thêm các chữ cái hoặc số.", "Low_barrier_offset": "Tấm chắn hàng rào thấp", "Password_should_have_lower_and_uppercase_letters_with_numbers_": "Mật khẩu nên bao gồm cả chữ hoa, chữ thường và con số.", "Applications": "Các ứng dụng", "This_contract_has_WON": "Hợp đồng này THẮNG", "We_are_not_accepting_accounts_from_residents_of_this_country_at_the_present_time_": "Hiện tại, chúng tôi không nhận tài khoản của người dân tại quốc gia này.", "Stocks_trading_experience": "Kinh nghiệm giao dịch Chứng khoán", "Old_password_is_wrong_": "Mật khẩu cũ không đúng.", "November": "Tháng Mười một", "October": "Tháng Mười", "Country_Manager": "Giám Đốc Khu Vực", "second": "giây", "Last_Used": "Lần sử dụng cuối cùng", "An_additional_password_can_be_used_to_restrict_access_to_the_cashier_": "Mật khẩu phụ có thể dùng để hạn chế truy cập vào khu thu ngân.", "Human_Resource_Executive": "Chuyên Viên Nhân Sự", "Contract_Expiry": "Hợp đồng đã hết hạn", "Adjusted_Barrier": "Rào cản đã được điều chỉnh", "July": "Tháng Bảy", "{JAPAN_ONLY}Knowledge_Test_Result": "{CHỈ DÀNH CHO THỊ TRƯỜNG NHẬT BẢN}Kết quả Bài Kiểm tra Kiến thức", "Format:_yyyy-mm-dd_(not_required_for_virtual-money_accounts)": "Định dạng: yyyy-mm-dd (không yêu cầu đối với các tài khoản tiền ảo)", "verification_token": "chuỗi số xác minh", "0-5_transactions_in_the_past_12_months": "0-5 giao dịch trong 12 tháng trước", "Target": "Mục tiêu", "Password_does_not_match_": "Mật khẩu không đúng.", "Spot_Time": "Thời điểm làm giá", "Wednesday": "Thứ Tư", "Questions": "Câu hỏi", "Major_Pairs": "Cặp tiền tệ chính", "Ref_": "Tham khảo.", "Proofreader": "Kiểm tra và sửa nội dung", "Your_password_has_been_successfully_reset__Please_log_into_your_account_using_your_new_password_": "Mật khẩu của bạn đã được thiết lập lại thành công. Vui lòng dùng mật khẩu mới đăng nhập vào tài khoản của bạn.", "Your_withdrawal_limit_is_[_1]_[_2]_": "Giới hạn rút tiền của bạn là [_1] [_2].", "View": "Xem", "January": "Tháng Một", "Copywriter": "Biên Soạn Quảng Cáo", "Entry_spot": "Giá khởi điểm", "Stop_Profit_Level": "Mức Lợi nhuận Tới hạn", "Successful": "Thành công", "Select_your_market": "Chọn thị trường của bạn", "Date_and_Time": "Ngày và Thời gian", "days": "ngày", "Net_Annual_Income": "Lợi nhuận Thuần Hàng năm", "Please_select_a_payment_agent": "Vui lòng chọn một đại lý thanh toán", "Exclude_time_cannot_be_for_more_than_5_years_": "Thời gian loại trừ không thể nhiều hơn 5 năm.", "Deposit": "Gửi tiền", "Token": "Mã Token", "Miss": "Cô", "Salaried_Employee": "Nhân viên Hưởng lương", "[_1]_[_2]_has_been_credited_to_your_Virtual_money_account_[_3]": "[_1] [_2] vừa được cộng thêm vào tài khoản tiền Ảo [_3] của bạn", "Password_is_weak": "Mật khẩu yếu", "For_added_security,_please_check_your_email_to_retrieve_the_verification_token_": "Để tăng cường độ bảo mật. vui lòng kiểm tra hòm thư của bạn để nhận cuỗi xác nhận.", "Sorry,_account_opening_is_unavailable_": "Xin lỗi, việc mở tài khoản hiện đang không phục vụ.", "Invalid_date_of_birth_": "Ngày sinh không hợp lệ.", "Our_site_does_not_charge_any_transfer_fees_": "Trang web của chúng tôi không tính bất kì phí chuyển tiền nào.", "Price": "Giá", "Level_of_Education": "Trình độ Học vấn", "Password_is_not_strong_enough_": "Mật khẩu không đủ mạnh.", "Session_duration_limit_cannot_be_more_than_6_weeks_": "Giới hạn thời hạn phiên không thể nhiều hơn 6 tuần.", "Real_Account": "Tài khoản Thực", "Your_transaction_reference_is": "Tham chiếu giao dịch của bạn là", "Gaming_Account": "Tài khoản Cá cược", "Profit/Loss_(points)": "Lợi nhuận/Thua lỗ (điểm)", "Health": "Sức khỏe", "Failed": "Thất bại", "Please_enter_a_valid_amount_": "Vui lòng nhập số tiền hợp lệ.", "Binary_options_or_other_financial_derivatives_trading_experience": "Kinh nghiệm giao dịch quyền chọn Nhị phân hoặc phái sinh tài chính khác", "High_barrier_offset": "Bù đắp rào cản cao", "There_was_a_problem_accessing_the_server_": "Có lỗi khi truy cập máy chủ.", "Translator": "Phiên Dịch", "Contract": "Hợp đồng", "Indices_trading_frequency": "Tần suất giao dịch Chỉ số", "Only_[_1]_are_allowed_": "Chỉ có [_1] được cho phép.", "Potential_Payout": "Tiền thưởng Tiềm năng", "Sorry,_this_feature_is_available_to_virtual_accounts_only_": "Rất tiếc, tính năng này chỉ khả dụng với tài khoản tiền ảo.", "Verification_code_format_incorrect_": "Định dạng của mã xác thực không chính xác.", "Name": "Tên", "Senior_Front-End_Developer": "Lập Trình Viên Front-End có kinh nghiệm", "Start_Time": "Thời gian bắt đầu", "{JAPAN_ONLY}To_invest_a_binary_options_investment_accurately,_the_customer_are_required_knowledge_and_experience_related_to_derivative_transactions_": "{JAPAN ONLY} To invest a binary options investment accurately, the customer are required knowledge and experience related to derivative transactions.", "Affiliate": "Liên kết", "Unlock_Cashier": "Mở khóa Thu ngân", "Revoke_access": "Hủy bỏ truy cập", "login": "đăng nhập", "Predict_the_direction<br_/>and_purchase": "Dự đoán khuynh hướng<br />và trả giá", "Print_chart": "In biểu đồ", "Your_trading_statistics_since_[_1]_": "Số liệu thống kê giao dịch của bạn kể từ [_1].", "Low_Barrier": "Rào cản Thấp", "Explanation": "Giải thích", "Login_History": "Lịch sử Đăng nhập", "Your_cashier_is_locked_as_per_your_request_-_to_unlock_it,_please_enter_the_password_": "Quỹ đã được khóa theo yêu cầu của bạn - để mở khóa, vui lòng điền mật khẩu.", "Feb": "Tháng Hai", "Sep": "Tháng Chín", "Jan": "Tháng Một", "Amount_per_point": "Số tiền trên mỗi điểm", "If_you_need_assistance_feel_free_to_contact_our_[_1]Customer_Support": "Nếu bạn cần trợ giúp, vui lòng liên hệ với đội ngũ hỗ trợ khách hàng [_1] của chúng tôi", "Duration": "Khoảng thời gian", "Indices_trading_experience": "Kinh nghiệm Giao dịch Chỉ số", "Sale_Price": "Giá Bán hàng", "Internal_Audit": "Kiểm toán Nội bộ", "Therefore_your_current_immediate_maximum_withdrawal_(subject_to_your_account_having_sufficient_funds)_is_[_1]_[_2]_(or_equivalent_in_other_currency)_": "Vì vậy khoản tiền rút tối đa hiện giờ của bạn (tài khoản đang có tiền được rút) là [_1] [_2] (hoặc đồng tiền khác có giá trị tương đương).", "letters": "các ký tự", "This_contract_won": "Hợp đồng này đã thắng", "Other": "Khác", "Credit/Debit": "Tín dụng/Ghi nợ", "Now": "Bây giờ", "email_address": "địa chỉ hòm thư", "Step": "Bước", "Please_enter_a_date_that_is_at_least_6_months_from_now_": "Vui lòng nhập ngày ít nhất là 6 tháng kể từ bây giờ.", "Stop-loss": "Thua lỗ -Tới hạn", "Contract_Information": "Thông tin của Hợp đồng", "Your_[_1]_day_withdrawal_limit_is_currently_[_2]_[_3]_(or_equivalent_in_other_currency)_": "Hạn mức rút tiền ngày [_1] của bạn hiện là [_2] [_3] (hoặc tương đương với đồng tiền khác).", "Reset_Password": "Thiết lập lại Mật khẩu", "Contract_is_not_started_yet": "Hợp đồng chưa được bắt đầu", "Forex": "Thị trường ngoại hối", "comma": "dấu phẩy", "Investments_&_Dividends": "Đầu tư và Cổ tức", "hour": "giờ", "Profit_Table": "Bảng Lợi nhuận", "Browser": "Duyệt tìm", "Nov": "Tháng Mười một", "Thursday": "Thứ Năm", "Estimated_Net_Worth": "Giá trị Thực dự kiến", "Password_score_is:_[_1]__Passing_score_is:_20_": "Độ mạnh của mật khẩu là: [_1]. Điểm vượt qua: 20.", "All_markets_are_closed_now__Please_try_again_later_": "Tất cả các thị trường đều đã đóng cửa. Vui lòng thử lại sau.", "Your_settings_have_been_updated_successfully_": "Thiết lập của bạn đã được cập nhật thành công.", "points": "điểm", "Previous_Day": "Ngày trước", "1-2_years": "1-2 năm", "Quantitative_Developer": "Lập Trình viên Định lượng", "Next": "Tiếp theo", "Friday": "Thứ Sáu", "You_have_already_withdrawn_the_equivalent_of_[_1]_[_2]_in_aggregate_over_the_last_[_3]_days_": "Bạn đã rút số tiền tương đương với [_1] [_2] trong tổng số hơn [_3] ngày qua.", "apostrophe": "dấu móc lửng (')", "[_1]_Please_click_the_link_below_to_restart_the_password_recovery_process__If_you_require_further_assistance,_please_contact_our_Customer_Support_": "[_1] Vui lòng nhấn vào đường dẫn dưới đây để bắt đầu lại quá trình khôi phục mật khẩu. Nếu bạn cần thêm trợ giúp, vui lòng liên hệ với Trung tâm hỗ trợ khách hàng của chúng tôi.", "Other_financial_instruments_trading_frequency": "Tần suất giao dịch các công cụ tài chính khác", "Invalid_amount,_minimum_is": "Số tiền không hợp lệ, tối thiểu là", "Barrier_Change": "Giới hạn Thay đổi", "Confirm": "Xác nhận", "ticks": "giây", "April": "Tháng 4", "An_error_occured_": "Đã có lỗi xảy ra.", "Compliance_Executive": "Chuyên Viên Pháp Chế", "Your_changes_have_been_updated_": "Những thay đổi của bạn đã được cập nhật.", "There_was_an_error": "Đã có lỗi xảy ra", "This_contract_lost": "Hợp đồng này đã bị lỗ", "True": "Đúng", "Details": "Chi tiết", "Reference_ID": "Tài khoản tham khảo", "DevOps_Manager": "Quản lý/ Trưởng phòng DevOps", "Ok": "OK", "minute": "phút", "Save_as_PDF": "Lưu theo định dạng PDF", "Current_Time": "Thời gian hiện tại", "Tick": "Giây", "Closes": "Kết thúc", "Accounts_And_Payments_Executive": "Chuyên Viên Kế Toán", "Total_Profit/Loss": "Tổng Lợi nhuận/Thua lỗ", "This_feature_is_not_relevant_to_virtual-money_accounts_": "Đặc điểm này không liên quan tới tài khoản tiền ảo.", "Apr": "Tháng 4", "Pension": "Tiền phụ cấp", "Industry_of_Employment": "Ngành công nghiệp Tuyển dụng", "Mar": "Tháng Ba", "Deposit_of": "Tiền gửi của", "Date_of_Birth": "Ngày sinh", "Secondary": "Thứ cấp", "space": "khoảng cách", "Monday": "Thứ Hai", "Stays_In/Goes_Out": "Vẫn ở trong /Đi ra Ngoài", "Mr": "Ngài", "Waiting_for_entry_tick_": "Vui lòng đợi cho đến phiên gia nhập.", "Entry_Level": "Mức ban đầu", "Last_Digit_Prediction": "Dự đoán Chữ số Cuối cùng", "Net_profit": "Lợi nhuận thuần", "Construction": "Xây dựng", "Select_market": "Chọn thị trường", "Marketing": "Tiếp Thị", "Income_Source": "Nguồn Thu nhập", "Purchase_Time": "Thời gian Mua", "Enter_the_barrier_in_terms_of_the_difference_from_the_spot_price__If_you_enter_+0_005,_then_you_will_be_purchasing_a_contract_with_a_barrier_0_005_higher_than_the_entry_spot__The_entry_spot_will_be_the_next_tick_after_your_order_has_been_received": "Nhập giá giới hạn khác với giá giao ngay. Nếu bạn nhập +0.005, bạn sẽ có thể mua được một hợp đồng với giá giới hạn cao hơn 0.005 so với giá giao ngay được nhập. GIá giao ngay được nhập sẽ là giá tiếp theo sau khi lệnh của bạn được nhận", "Please_enter_a_number_between_[_1]_": "Vui lòng nhập một số giữa [_1].", "Barrier_offset": "Bù đắp Rào cản", "Exit_Spot_Time": "Giá Giao ngay Thoát ra", "Accounting": "Kế toán", "When_you_click_'Ok'_you_will_be_excluded_from_trading_on_the_site_until_the_selected_date_": "Khi bạn nhấp vào \"OK\" bạn sẽ bị loại bỏ khỏi giao dịch trên trang web tới ngày được chọn.", "Please_confirm_the_transaction_details_in_order_to_complete_the_transfer:": "Xin vui lòng xác nhận chi tiết giao dịch để hoàn thành việc chuyển tiền:", "Start_Trading": "Bắt đầu Giao dịch", "Tertiary": "Bên thứ ba", "False": "Sai", "Current_Level": "Mức Hiện tại", "Save_as_CSV": "Lưu dưới dạng CSV", "Exercise_period": "Thời hạn thực tập", "Resources": "Nguồn", "View_your_statement": "Xem báo cáo của bạn", "1-3_million_JPY": "1-3 triệu Yên Nhật", "Are_you_sure_that_you_want_to_permanently_revoke_access_to_application": "Bạn có chắc chắn muốn thu hồi quyền truy cập vào ứng dụng vĩnh viễn", "max:_100,000": "tối đa: 100.000", "Asset": "Tài sản", "Please_select_a_valid_date": "Vui lòng chọn một ngày hợp lệ", "Adjust_trade_parameters": "Điều giới hạn giao dịch", "Touch/No_Touch": "Chạm/Không Chạm", "There_was_a_problem_accessing_the_server_during_purchase_": "Có lỗi trung cập vào máy chủ khi mua.", "Withdrawal_for_your_account_is_not_allowed_at_this_moment__Please_contact_[_1]_to_unlock_it_": "Rút tiền tại tài khoản của bạn không được phép tại thời điểm này. Xin vui lòng liên hệ với [_1] để mở khóa.", "Please_try_again_": "Vui lòng thử lại.", "Your_account_has_no_trading_activity_": "Không có hoạt động giao dịch nào trên tài khoản của bạn.", "Your_request_to_transfer_[_1]_[_2]_from_[_3]_to_[_4]_has_been_successfully_processed_": "Yêu cầu chuyển [_1] [_2] từ [_3] sang [_4] đã được xử lý thành công.", "Therefore_your_current_immediate_maximum_withdrawal_(subject_to_your_account_having_sufficient_funds)_is_[_1]_[_2]_": "Vì vậy khoản tiền rút tối đa hiện giờ của bạn (nói tới tài khoản đang có tiền được rút) là [_1] [_2].", "Contract_will_be_sold_at_the_prevailing_market_price_when_the_request_is_received_by_our_servers__This_price_may_differ_from_the_indicated_price_": "Hợp đồng sẽ được bán ở giá thị trường hiện hành khi máy chủ nhận được yêu cầu. Giá này có thể khác với giá đã được chỉ định.", "years": "năm", "Sorry,_an_error_occurred_while_processing_your_request_": "Rất tiếc, đã xảy ra lỗi khi đang xử lý yêu cầu của bạn.", "A_scanned_copy_of_your_passport,_driving_licence_(provisional_or_full)_or_identity_card,_showing_your_name_and_date_of_birth__Your_document_must_be_valid_for_at_least_6_months_after_this_date_": "Một bản scan hộ chiếu, bằng lái xe (tạm thời hoặc chính thức), hoặc chứng minh nhân dân thể hiện tên và ngày sinh của bạn. Giấy tờ của bạn phải còn giá trị sử dụng ít nhất 6 tháng từ sau ngày này.", "Fr": "Thứ 6", "Never": "Chưa bao giờ", "Refresh_page": "Làm mới trang", "Tourism": "Ghé thăm", "We": "Chúng tôi", "Quantitative_Analyst": "Phân Tích Định Lượng", "Adjusted_High_Barrier": "Giới hạn cao đã được điều chỉnh", "seconds": "giây", "Short": "Ngắn", "New_Password": "Mật khẩu mới", "Random": "Ngẫu nhiên", "Please_select": "Vui lòng chọn", "You_did_not_change_anything_": "Bạn chưa thay đổi bất cứ nội dung nào.", "Closed": "Đã đóng", "Your_details_have_been_updated_": "Thông tin chi tiết của bạn đã được cập nhật.", "Period": "Giai đoạn", "Primary": "Sơ cấp", "Other_financial_instruments_trading_experience": "Kinh nghiệm giao dịch các công cụ tài chính khác", "Your_session_duration_limit_will_end_in_[_1]_seconds_": "Giới hạn phiên giao dịch của bạn sẽ kết thúc trong [_1] giây nữa.", "Marketing_Project_Manager": "Trưởng Phòng Dự Án Marketing", "Payout": "Tiền thưởng", "Purchase": "Mua", "Dec": "Tháng 12", "Commodities_trading_experience": "Kinh nghiệm giao dịch Hàng hóa", "High_barrier": "Rào cản cao", "Deposits_and_withdrawal_for_your_account_is_not_allowed_at_this_moment__Please_contact_[_1]_to_unlock_it_": "Chức năng gửi tiền và rút tiền tại tài khoản của bạn không được phép tại thời điểm này. Xin vui lòng liên hệ với [_1] để mở khóa.", "Jump_To": "Nhảy đến", "Please_[_1]_to_view_this_page": "VII lòng [_1] để xem trang này", "Your_account_is_currently_suspended__Only_withdrawals_are_now_permitted__For_further_information,_please_contact_[_1]_": "Tài khoản của bạn hiện đang bị khóa. Chỉ tính năng rút tiền được cho phép. Để biết thêm chi tiết, xin vui lòng liên hệ với [_1].", "High_Barrier": "Rào cản Cao", "Settings": "Cài đặt", "Less_than_$25,000": "Ít hơn $25,000", "Back": "Quay lại", "Fridays": "Thứ Sáu", "Sale_Date": "Ngày Bán hàng", "Shop": "Cửa hàng", "Financial_Assessment": "Đánh giá Tài chính", "Year": "Năm", "Finish": "Kết thúc", "hours": "giờ", "Sorry,_your_account_is_not_authorised_for_any_further_contract_purchases_": "Xin lỗi, tài khoản của bạn không có quyền mua thêm hợp đồng.", "No_Live_price_update": "Không cập nhật giá trực tiếp", "Stop-type": "Loại - Tới hạn", "Keep_track_of_your_authorised_applications_": "Theo dõi liên tục các ứng dụng được cho phép của bạn.", "There_was_a_problem_validating_your_personal_details__Please_fix_the_fields_[_1]here": "Xảy ra lỗi phê chuẩn thông tin cá nhân chi tiết của bạn. Vui lòng sửa trường [_1]tại đây", "Delete": "Xóa", "This_is_a_staging_server_-_For_testing_purposes_only": "Đây là một máy chủ dàn dựng - chỉ cho mục đích chỉ thử nghiệm", "40_transactions_or_more_in_the_past_12_months": "40 giao dịch hoặc nhiều hơn nữa trong 12 tháng trước", "Weekday": "Ngày trong tuần", "Minimum_of_[_1]_characters_required_": "Tối thiểu [_1] các kí tự cần thiết.", "Please_check_your_email_to_retrieve_the_token_needed_to_reset_your_password_": "Vui lòng kiểm tra email của bạn để tìm lại token được yêu cầu để thiết lập lại mật khẩu của bạn.", "Your_current_balance_is": "Số dư hiện tại của bạn là", "Only_2_decimal_points_are_allowed_": "Chỉ cho phép 2 số thập phân sau dấu phẩy.", "Remaining_Time": "Thời gian còn lại", "Verification_Token": "Mã Token Xác thực", "Binary_options_or_other_financial_derivatives_trading_frequency": "Mức độ thường xuyên của giao dịch quyền chọn Nhị phân hoặc các phái sinh tài chính khác", "When_you_click_\"Ok\"_you_will_be_excluded_from_trading_on_the_site_until_the_selected_date_": "Khi bạn nhấp vào \"OK\" bạn sẽ bị loại bỏ khỏi giao dịch trên trang web tới ngày được chọn.", "Exit_Spot": "Giá Giao ngay thoát ra", "Contract_purchased_with_app_ID": "Hợp đồng đã thanh toán với app ID", "0-1_year": "0-1 năm", "password": "mật khẩu", "To": "Để", "Date_(GMT)": "Ngày (GMT)", "Balance": "Số dư tài khoản", "Return": "Lợi nhuận", "Terms_&_Conditions": "Điều khoản & Điều kiện", "Original_Barrier": "Giới hạn Ban đầu", "is_required__Current_spread": "là bắt buộc. Giá chênh lệch hiện tại", "End_Time": "Thời gian Kết thúc", "Once_you_click_the_'Submit'_button,_the_funds_will_be_withdrawn_from_your_account_and_transferred_to_your_Client's_account_": "Một khi bạn nhấp chuột vào nút \"Gửi yêu cầu\", tiền sẽ được rút khỏi tài khoản của bạn và được chuyển tới tài khoản của khách hàng của bạn.", "Long": "Dài", "Over_3_years": "Trên 3 năm", "Sell": "Bán", "Exit_spot": "Giá giao ngay thoát ra", "Your_account_has_no_Login/Logout_activity_": "Không có hoạt động Đăng nhập/Đăng xuất nào trên tài khoản của bạn.", "Exclude_time_must_be_after_today_": "Thời gian loại trừ cần phải sau ngày hôm nay.", "New_token_created_": "Token mới đã được tạo.", "Entry_Spot": "Giá khởi điểm", "You_need_to_finish_all_20_questions_": "Bạn phải hoàn thành toàn bộ 20 câu hỏi.", "August": "Tháng 8", "Score": "Điểm số", "Open_a_Financial_Account": "Mở một Tài khoản Tài chính", "Virtual_Account": "Tài khoản Ảo", "Failed_to_update_trade_description_": "Không thể cập nhật mô tả giao dịch.", "[ctx,minimum_duration,_for_example_minimum_15_seconds]min": "tối thiểu", "Aug": "Tháng 8", "Exit_Level": "Mức giá Thoát ra", "{JAPAN_ONLY}This_test_is_for_the_purpose_of_confirming_if_the_customers_have_basic_knowledge_related_to_options_trading__": "{JAPAN ONLY} This test is for the purpose of confirming if the customers have basic knowledge related to options trading .", "From": "Từ", "Password_is_moderate": "Mật khẩu trung bình", "Contract_Confirmation": "Xác nhận Hợp đồng", "Stop_Loss_Level": "Mức Thua lỗ Tới hạn", "(Bejing/CST_-8_hours)": "(Bắc Kinh/CST -8 tiếng)", "Day": "Ngày", "Contract_Sold": "Hợp đồng đã được bán", "We_are_not_able_to_stream_live_prices_at_the_moment__To_enjoy_live_streaming_of_prices_try_refreshing_the_page,_if_you_get_this_issue_after_repeated_attempts_try_a_different_browser": "Chúng tôi không thể dò giá trực tiếp tại thời điểm này. Để thấy được dòng giá tại thời điểm nay, vui lòng thử thử làm mới lại trang web, nếu bạn vẫn tiếp tục gặp vấn đề này, vui lòng thử một trình duyệt khác", "May": "Tháng Năm", "Transfer_to": "Chuyển tới", "Save_as_JPEG": "Lưu dưới định dạng JPEG", "Social_Media_Executive": "Chuyên Viên Truyền Thông Xã Hội", "Please_confirm_the_trade_on_your_statement_before_proceeding_": "Xin vui lòng xác nhận nội dung giao dịch của bạn trước khi xử lý.", "Upgrade_to_a_Real_Account": "Nâng cấp lên Tài khoản Thực", "Confirm_New_Password": "Xác nhận Mật khẩu mới", "Current": "Tiền tệ", "Note": "Chú ý", "Please_choose_which_currency_you_would_like_to_transact_in_": "Xin vui lòng chọn đồng tiền mà bạn muốn giao dịch.", "The_financial_trading_services_contained_within_this_site_are_only_suitable_for_customers_who_are_able_to_bear_the_loss_of_all_the_money_they_invest_and_who_understand_and_have_experience_of_the_risk_involved_in_the_acquistion_of_financial_contracts__Transactions_in_financial_contracts_carry_a_high_degree_of_risk__If_purchased_contracts_expire_worthless,_you_will_suffer_a_total_loss_of_your_investment,_which_consists_of_the_contract_premium_": "Các dịch vụ kinh doanh tài chính có trên trang web này chỉ thích hợp cho những khách hàng có khả năng chịu mất tất cả số tiền họ đầu tư và những người hiểu và có kinh nghiệm về các rủi ro liên quan trong việc mua lại các hợp đồng tài chính. Các giao dịch hợp đồng tài chính mang một mức độ rủi ro cao. Nếu hợp đồng được mua hết hạn trở nên vô giá trị, bạn sẽ bị mất tổng đầu tư của bạn, bao gồm phí bảo hiểm hợp đồng.", "Profit/Loss": "Lợi nhuận/Thua lỗ", "Description": "Mô tả", "year": "năm", "Your_provided_email_address_is_already_in_use_by_another_Login_ID__According_to_our_terms_and_conditions,_you_may_only_register_once_through_our_site__If_you_have_forgotten_the_password_of_your_existing_account,_please_<a_href=\"[_1]\">try_our_password_recovery_tool</a>_or_contact_customer_service_": "Địa chỉ email bạn cung cấp đã được sử dụng bởi Tên Đăng nhập khác. Theo điều kiện và điều khoản của chúng tôi, bạn chỉ có thể đăng ký một lần trên trang của chúng tôi. Nếu bạn quên mật khẩu của tài khoản đã có, vui lòng <a href=\"\">thử công cụ phục hồi mật khẩu của chúng tôi</a> hoặc liên hệ với đội ngũ chăm sóc khách hàng.", "Upgrade_to_a_Financial_Account": "Nâng cấp lên Tài khoản Tài chính", "Asset_Index": "Chỉ số tài sản", "Chart": "Biểu đồ", "Charting_for_this_underlying_is_delayed": "Biểu đồ cho tài sản cơ sở này bị hoãn", "Please_deposit_before_transfer_to_client_": "Vui lòng nạp tiền vào trước khi chuyển tới khách hàng.", "Administrator": "Hành Chính", "Your_withdrawal_limit_is_[_1]_[_2]_(or_equivalent_in_other_currency)_": "Giới hạn rút tiền của bạn là [_1] [_2] (hoặc tương đương với đồng tiền khác)." };
	texts_json['JA'] = { "Tuesday": "火", "Please_input_a_valid_date": "有効な日にちを入力して下さい。", "3-5_million_JPY": "300〜500万円", "Failed_to_reset_password__[_1],_please_retry_": "パスワードの再設定に失敗しました。[_1]、再度お試しください。", "Less_than_1_million_JPY": "100万円未満", "{JAPAN_ONLY}Please_complete_the_following_questions_": "知識確認テスト用ディスクレーマー", "Last_Digit_Stats": "下一桁ステータス", "Resale_not_offered": "満期までの2分は売却取引不可", "Contract_ID": "トレード ID", "Anti-Fraud_Officer": "不正対策局", "6-10_transactions_in_the_past_12_months": "過去12ヶ月で6~10のお取引", "{JAPAN_ONLY}Trading_Period": "取引期間", "Action": "売買", "Loss": "損益", "Over_$500,001": "$500,001以上", "Time_is_in_the_wrong_format_": "開始時間に間違った値になっております", "Jul": "7", "Zoom": "ズーム", "10-30_million_JPY": "1,000〜3,000万円", "Sunday": "日", "Points": "ポイント", "{JAPAN_ONLY}Stays_Between": "STAY-IN", "Information_Technology": "情報技術", "Number_of_ticks": "Tickの総数", "Senior_Perl_Developer": "シニアPerl開発者", "Your_Application_is_Being_Processed_": "お客さまの口座開設申込書類の処理中です。", "Trading_Times": "トレード対応時間", "Are_you_sure_that_you_want_to_permanently_delete_token": "トークンを完全に削除してもよろしいですか？", "Please_log_in_": "ログインをしてください。", "Jun": "6", "Update": "更新", "September": "９月", "Please_complete_the_following_financial_assessment_form_before_continuing_": "続行される前に下記財務評価書にご記入をお願いします。", "Original_High_Barrier": "オリジナル高バリア", "In/Out": "レンジ", "Save_as_SVG": "SVGで保存", "Transaction_performed_by_[_1]_(App_ID:_[_2])": "[_1](App ID:[_2])によって取引が実行されました", "Education": "お役立ち情報", "Targeting_medium-term_/_long-term_profits": "中期保有/長期保有が目的", "Margin_FX": "外国為替証拠金取引", "Connection_error:_Please_check_your_internet_connection_": "接続エラー：インターネット接続状況をご確認ください。", "months": "ヶ月", "Forex_trading_experience": "外国為替取引のご経験", "November": "１１月", "Old_password_is_wrong_": "旧パスワードの値が不正です。", "This_contract_has_WON": "このトレードは勝ち判定です", "We_are_not_accepting_accounts_from_residents_of_this_country_at_the_present_time_": "現在当社ではこの国の居住者からの口座開設を承ることができません。", "Stocks_trading_experience": "株式取引のご経験", "Country_Manager": "カントリーマネージャー", "second": "秒", "Today": "本日", "October": "１０月", "{JAPAN_ONLY}[_1]_[_2]_payout_if_[_3]_stays_between_low_and_high_values_of_Exercise_price_through_close_on_[_4]_": "[_3]のSTAY-INは取引期間中([_4])に上限バリア未満かつ下限バリア超過を維持すると予測<br>09:00«の判定時刻は08:59:59となります", "Housewife_/_Househusband": "主婦/主夫", "Human_Resource_Executive": "人材管理", "An_additional_password_can_be_used_to_restrict_access_to_the_cashier_": "入出金へのアクセスを制限するために、追加パスワードを使用することができます。", "{JAPAN_ONLY}[_1]_[_2]_payout_if_[_3]_is_strictly_higher_or_equal_than_Exercise_price_at_close__on_[_4]_": "[_3]のラダーHIGHは、判定時刻([_4])の時点でバリア価格以上を予測<br>09:00«の判定時刻は08:59:59となります", "Last_Used": "最後に使用したもの", "Contract_Expiry": "取引終了", "High_Barrier_([_1])": "上限バリア", "Password_is_strong": "パスワード強度は強です", "Compliance": "コンプライアンス", "Corporate_Action": "企業活動", "Buy": "購入", "The_Payment_Agent_facility_is_currently_not_available_in_your_country_": "その決済サービスは、お客さまのお住まいの国では現在ご利用いただけません。", "You_must_accept_the_terms_and_conditions_to_open_an_account_": "ご口座を開設されるにあたりご利用規約に承諾しなければなりません。", "{JAPAN_ONLY}Section_2:_Method": "第2章：方法", "Less_than_$100,000": "$100,000未満", "Graphic_Designers": "グラフィックデデザイナー", "December": "１２月", "February": "２月", "Over_$1,000,000": "$1,000,000以上", "Statement": "口座残高", "Quality_Assurance_Engineer": "品質保証(QA)エンジニア", "Amount": "金額", "Try_adding_more_letters_or_numbers_": "さらに文字と数字を追加してみてください。", "Office_worker": "会社員", "week": "週間", "Sorry,_an_error_occurred_while_processing_your_account_": "通信エラーが発生しましたので、再度ページの読み込みをしてください", "The_two_passwords_that_you_entered_do_not_match_": "入力頂いたパスワードと一致しません。", "Market_is_closed__Please_try_again_later_": "営業時間外のためご利用になれません。", "Applications": "アプリケーション", "Password_should_have_lower_and_uppercase_letters_with_numbers_": "大文字と小文字を含む英字と数字を組み合わせる必要があります", "Low_barrier_offset": "下限追加バリア値", "Questions": "問題", "Wednesday": "水", "Proofreader": "校正者", "{JAPAN_ONLY}Section_5:_Calculation": "第5章：算出", "Contract_/_Temporary_/_Part_Time": "契約/臨時/パートタイム", "Ref_": "約定番号", "weeks": "週間", "Major_Pairs": "主要通貨ペア", "Copywriter": "コピーライター", "Your_password_has_been_successfully_reset__Please_log_into_your_account_using_your_new_password_": "パスワードの再設定を完了しました。新しいパスワードでログインしてください。", "View": "表示", "January": "１月", "Minute": "分", "Your_withdrawal_limit_is_[_1]_[_2]_": "お客さまの出金限度額は[_1] [_2]です。限度額以上の出金額をご希望される場合は、本人確認が必要となりますので\nカスタマーサポートへご連絡ください。", "Successful": "成功しました", "days": "日", "Select_your_market": "取引市場を選択", "Date_and_Time": "日時", "Entry_spot": "取引時刻直後のティック", "3-5_years": "3〜5年", "f": "女性", "Stop_Profit_Level": "利益ストップレベル", "Adjusted_Barrier": "調整バリア", "July": "７月", "verification_token": "ワンタイムパスワード", "{JAPAN_ONLY}Knowledge_Test_Result": "知識確認テスト結果", "Format:_yyyy-mm-dd_(not_required_for_virtual-money_accounts)": "形式：年月日（デモ口座の方はご必要ありません）", "Waiting_for_exit_tick_": "イグジットTickを検出中です・・・", "0-5_transactions_in_the_past_12_months": "過去12ヶ月で0-5のお取引", "Target": "ターゲット", "Tu": "火", "Spot_Time": "スポットタイム", "Password_does_not_match_": "パスワードが一致しません。", "Real_Account": "リアル口座番号", "Equals": "等しい", "Session_duration_limit_cannot_be_more_than_6_weeks_": "セッション期間制限は7週間以上に設定できません。", "Gaming_Account": "ゲームアカウント", "Profit/Loss_(points)": "損益（ポイント）", "Your_transaction_reference_is": "トレード参照番号：", "AM": "午前", "Binary_options_or_other_financial_derivatives_trading_experience": "バイナリーオプションまたはその他金融デリバティブ取引のご経験", "High_barrier_offset": "上限追加バリア値", "Health": "健全性", "Please_enter_a_valid_amount_": "有効な値をご入力して下さい。", "Failed": "失敗しました", "Indices_trading_frequency": "インデックス取引の頻度", "Contract": "トレード", "There_was_a_problem_accessing_the_server_": "サーバーアクセスにエラーが発生しました。", "Translator": "翻訳者", "Mo": "月", "Deposit": "入金", "Exclude_time_cannot_be_for_more_than_5_years_": "6年以上の除外期間は設定することはできません。", "Unemployed": "無職", "Net_Annual_Income": "年間純収入", "Please_select_a_payment_agent": "決済サービスを選択してください。", "Salaried_Employee": "サラリーマン", "[_1]_[_2]_has_been_credited_to_your_Virtual_money_account_[_3]": "[_1] [_2]をデモ口座[_3]に付与されました", "Token": "トークン", "Invalid_date_of_birth_": "生年月日が無効です。", "Our_site_does_not_charge_any_transfer_fees_": "当サイトはご入金、及びご出金時に手数料を請求することはありません。", "Password_is_weak": "パスワード強度は弱です", "For_added_security,_please_check_your_email_to_retrieve_the_verification_token_": "セキュリティチェックのため、メールをご確認いただきワンタイムパスワードを取得してください。", "mins": "分", "Sorry,_account_opening_is_unavailable_": "申し訳ございませんが、口座開設をご利用いただけません。", "Sell_time": "売却時間", "Level_of_Education": "能力レベル", "Price": "売却/ペイアウト金額", "Password_is_not_strong_enough_": "パスワード強度が十分ではありません。", "Deposit_[_1]_[_2]_virtual_money_into_your_account_[_3]": "[_1] [_2]のバーチャルマネーをアカウント[_3]へ入金する", "Lock_Cashier": "入出金をロック", "Your_token_has_expired__Please_click_<a_class=\"pjaxload\"_href=\"[_1]\">here</a>_to_restart_the_verification_process_": "ワンタイムパスワードの有効期限が切れています。再度、<a class=\"pjaxload\" href=\"[_1]\">「最初からやり直し」</a> をクリックしてワンタイムパスワードを発行して下さい。", "Hedging": "ヘッジ", "The_server_<a_href=\"[_1]\">endpoint</a>_is:_[_2]": "サーバーの <a href=\"[_1]\">エンドポイント</a> : [_2]", "{JAPAN_ONLY}Section_4:_Risk": "第4章：リスク", "Authorise_your_account_": "アカウント認証", "Password_Reset": "パスワード再設定", "Walkthrough_Guide": "チュートリアルガイド", "Original_Low_Barrier": "オリジナル低バリア", "Both_the_above": "上記の両方", "Your_password_cannot_be_the_same_as_your_email": "パスワードはEメールと同じものにはできません。", "Cashier": "入出金", "No_experience": "経験なし", "Hour": "時間", "Exclude_time_cannot_be_less_than_6_months_": "5ヶ月以下の除外時間を設定することはできません。", "Sell_at_market": "売却", "Month": "月", "{JAPAN_ONLY}Sorry,_you_have_failed_the_test,_please_try_again_after_24_hours_": "残念ながら、合格点に達しませんでした。24時間以降（週末を除く）に再受験してください。", "min:_1,000": "ペイアウト: ¥1,000", "Try_adding_more_letters_": "文字をさらに追加してみてください。", "Your_Client_will_receive_an_email_notification_informing_him/her_that_the_transfer_has_been_processed_": "あなたのクライアントに送金が処理されたことをお知らせする通知メールが届きます。", "This_field_is_required_": "この項目は必須です。", "Please_select_a_value": "値を選択してください。", "Due_to_recent_changes_in_the_regulations,_we_are_required_to_ask_our_clients_to_complete_the_following_Financial_Assessment__Please_note_that_you_will_not_be_able_to_continue_trading_until_this_is_completed_": "規制変更により、下記財務評価にご記入頂く必要があります。こちらが完了しない限り、お取引を引き続きご利用いただけませんのでご注意ください。", "{JAPAN_ONLY}Congratulations,_you_have_pass_the_test,_our_Customer_Support_will_contact_you_shortly_": "おめでとうございます。テストに合格されましたので、カスタマーサポートよりメールにて口座開設の次のステップについてご連絡させていただきます。", "You_have_sold_this_contract_at_[_1]_[_2]": "[_1] [_2]でこのトレードを売却しました", "IP_Address": "IPアドレス", "The_maximum_number_of_tokens_([_1])_has_been_reached_": "トークンの最大数([_1]) に達しました。", "Purchase_Price": "購入金額", "Withdrawal": "出金", "minutes": "分", "Permissions": "アクセス許可", "Low_barrier": "下限バリア", "Password": "パスワード", "Please_follow_the_pattern_3_numbers,_a_dash,_followed_by_4_numbers_": "ハイフンを入れて半角で入力してください", "{JAPAN_ONLY}[_1]_[_2]_payout_if_[_3]_does_not_touch_Exercise_price_through_close_on_[_4]_": "[_3]のNO-TOUCHは、取引期間([_4])が終了するまでにバリア価格にタッチしないを予測<br>09:00«の判定時刻は08:59:59となります", "Your_cashier_is_locked_as_per_your_request_-_to_unlock_it,_please_click_[_1]here": "お客さまの入出金はリクエストによりロックされました。 - 解除するには[_1]こちらをクリックしてください。", "Invalid_email_address": "無効なEメールアドレス", "Barrier_([_1])": "バリア価格", "Global_Customer_Service_Representatives": "グローバル・カスタマーサポート担当", "This_symbol_is_not_active__Please_try_another_symbol_": "このシンボルは現在ご利用いただけません。他のシンボルでお試しください。", "{JAPAN_ONLY}It_is_determined_the_customers_have_basic_knowledge_of_option_trading_by_the_results_of_the_knowledge_test__If_the_customers_start_trading,_the_customers_need_to_agree_not_have_lawsuit_despite_the_customer_are_shortage_of_knowledge_related_to_options_trading,_and_it_cause_damages,_we_admit_to_open_the_trading_account_": "本テストの結果により適正と判断し、取引を開始する場合は、その後当社との間に取引上のトラブルが生じたとしても、オプション取引に関わる知識が不足していたにも関わらず当社が取引を認めたことを訴因とはしないことに同意いただくものとします。", "Investment_Account": "投資口座", "Saturday": "土", "period": "期間", "{JAPAN_ONLY}Touches": "TOUCH", "numbers": "数字", "Password_must_contains_at_least_1_digit,_1_uppercase_letter_and_1_lowercase_letter_": "数字、大文字、小文字を各1字以上含めるようにしてください。", "month": "ヶ月", "New_password_is_same_as_old_password_": "新しいパスワードが旧パスワードと同じです。", "Select_your_underlying_asset": "原資産を選択して下さい", "This_contract_can_not_be_traded_in_the_final_2_minutes_before_settlement": "判定時刻の2分前から判定時刻までは、新規購入注文＆売却取引を行えません", "Marketing_Executives": "マーケティング担当役員", "Indicative": "参考売却金額", "Quantitative_Analysis": "計量分析", "Adjusted_Low_Barrier": "調整低バリア", "Please_check_your_email_for_the_value_of_this_token": "Eメールアドレスをご確認ください", "Your_transaction_reference_number_is_[_1]": "決済の参照番号は[_1]です", "Please_enter_a_number_greater_or_equal_to_[_1]_": "[_1]以上の数字を入力してください。", "Quality_Assurance": "品質保証", "Up/Down": "ラダー", "loading___": "読み込み中", "End_time_must_be_after_start_time_": "取引終了時間は明日以降として設定して下さい。", "Portfolio": "ポジション一覧", "You_have_already_withdrawn_[_1]_[_2]_": "現在までの出金額は[_1] [_2]です。", "{JAPAN_ONLY}[_1]_[_2]_payout_if_[_3]_ends_outside_low_and_high_values_of_Exercise_price_at_close_on_[_4]_": "[_3]のEND-OUTは、判定時刻([_4])の時点で上限バリア以上もしくは下限バリア未満を予測<br>09:00«の判定時刻は08:59:59となります", "Select_your_trade_type": "取引タイプを選択して下さい", "minimum_available_duration": "最短取引期間", "Week_of": "週", "Last_digit_stats_for_the_latest_[_1]_ticks_on_[_2]": "[_2]の最新[_1] tickの下一桁統計", "Upcoming_Events": "取引時間短縮日及び祝日", "Self-employed": "自営業", "Sorry,_this_feature_is_not_available_": "申し訳ございませんが、この機能はご利用いただけません。", "Stocks_trading_frequency": "株式取引の頻度", "Authenticate": "口座アップグレード", "Date": "日付", "March": "３月", "Japan": "日本", "min": "最小値", "Please_wait_<br_/>Your_request_is_being_processed_": "少々お待ち下さい。<br />リクエストを処理中です。", "This_contract_has_LOST": "このトレードは負け判定です", "{JAPAN_ONLY}This_knowledge_test_is_required_by_law__As_we_provide_the_test,_we_know_customers_better_whether_the_customers_are_suitable_investors_to_be_carried_out_the_binary_options_trading,_and_customers_can_start_trading_with_us_": "この知識確認テストは、法令で義務付けられており、当社がお客様の事を知り、お客様がバイナリーオプション取引を行うことに適した投資者がどうかを判断したうえで、お客様との取引を開始するためのものです。", "Start_time": "開始時間", "Potential_Profit": "期待利益", "Internal_Auditor": "内部監査", "Remaining_time": "残り時間", "Your_account_is_fully_authenticated_and_your_withdrawal_limits_have_been_lifted_": "お客さまのご口座はアップグレード済みですので、ご出金制限が引き上げられました。", "Save_as_PNG": "PNGで保存", "{JAPAN_ONLY}Ends_Between": "END-IN", "Please_enter_an_integer_value": "半角で数値をご入力して下さい", "Prices": "価格", "Matches/Differs": "MATCH/DIFFER", "Finance": "金融", "Invalid_amount,_maximum_is": "無効な値です。最大はXXXです。", "Forex_trading_frequency": "外国為替取引の頻度", "Self-Employed": "自営業", "You_have_not_granted_access_to_any_applications_": "アプリケーションへのアクセス権限がありません。", "Your_request_to_withdraw_[_1]_[_2]_from_your_account_[_3]_to_Payment_Agent_[_4]_account_has_been_successfully_processed_": "お客さまのご口座[_3]から決済サービス[_4]口座へ[_1] [_2]の出金リクエストが正常に処理されました。", "Ends_In/Out": "END-IN/END-OUT", "Status": "金融資産", "{JAPAN_ONLY}Payout_Amount": "取引数量(ロットx¥1,000)", "This_contract_was_affected_by_a_Corporate_Action_event_": "この契約は、コーポレートアクションの影響を受けていました。", "{JAPAN_ONLY}FX_Rate": "通貨ペア", "Administrative_Executive": "部門管理者", "Never_Used": "使用されることはありません。", "You_should_enter_between_[_1]_characters_": "[_1]文字以内でご入力ください", "End_time": "終了時間", "Barrier": "バリア価格", "Spot": "スポットレート", "Higher/Lower": "ラダーHIGH/ラダーLOW", "Try_adding_more_numbers_": "さらに数字を追加してみてください。", "Sorry,_you_have_entered_an_incorrect_cashier_password": "申し訳ございませんが、ご入力頂いた入出金パスワードに誤りがあります", "Password_is_very_strong": "パスワード強度は最強です", "Login_ID": "ログインID", "Settles": "決済時間", "Next_Day": "翌日", "Over/Under": "以上/以下", "day": "日", "Please_submit_a_valid_[_1]_": "Eメールアドレスを入力ください", "[_1]_has_updated_its_[_2]__By_clicking_OK,_you_confirm_that_you_have_read_and_accepted_the_updated_[_2]_": "[_1]が[_2]を改定いたします。当社でお取引なさっているお客さまにおいて、改定後の[_2]の内容を必ずご確認いただく必要がございます。原則、改定後の書面の内容をご確認いただきOKボタンを押して頂くまで、お取引できなくなりますので、お取引の際ご注意ください。", "Commodities_trading_frequency": "コモデティ取引頻度", "Please_enter_a_number_between_0_and_[_1]": "0から[_1]の数字を入力してください", "There_was_some_invalid_character_in_an_input_field_": "入力された文字に使用できない文字が含まれています。", "Previous": "戻る", "My_Account": "口座情報", "Please_fill_in_the_Login_ID_and_Amount_you_wish_to_transfer_to_your_Client_in_the_form_below:": "下記フォームにログインIDとご希望の送金額をご入力ださい。", "Human_Resources": "人事", "Rise/Fall": "アップ/ダウン", "not_available": "利用不可", "Withdraw": "出金", "Even/Odd": "偶数/奇数", "Total_Cost": "合計投資額", "details": "詳細", "hyphen": "ハイフン", "Opens": "取引開始時間", "Closes_early_(at_21:00)": "判定時刻:21:00", "Sorry,_account_signup_is_not_available_in_your_country__Please_contact_<a_href=\"[_1]\">customer_support</a>_for_more_information_": "申し訳ございませんが、お客様の国では口座の開設ができません。詳細については<a href=\"[_1]\">カスタマーサポート</a>までお問い合わせください。", "Stake": "購入価格", "Profit": "利益", "Oct": "10", "You_have_already_withdrawn_the_equivalent_of_[_1]_[_2]_": "[_1] [_2] と同等の金額を既に出金されています。", "June": "６月", "Other_financial_instruments_trading_experience": "その他金融商品取引のご経験", "Purchase": "購入", "Marketing_Project_Manager": "マーケティングプロジェクトマネージャー", "Your_session_duration_limit_will_end_in_[_1]_seconds_": "お客様の取引継続時間制限は[_1]秒後に終了します。", "Payout": "ペイアウト", "PM": "午後", "Period": "期間", "Primary": "主要", "Commodities_trading_experience": "コモディティ取引のご経験", "{JAPAN_ONLY}Knowledge_Test": "知識確認テスト", "{JAPAN_ONLY}[_1]_[_2]_payout_if_[_3]_ends_on_or_between_low_and_high_values_of_Exercise_price_at_close_on_[_4]_": "[_3]のEND-INは、判定時刻([_4])の時点で上限バリア未満かつ下限バリア以上を予測<br>09:00«の判定時刻は08:59:59となります", "Deposits_and_withdrawal_for_your_account_is_not_allowed_at_this_moment__Please_contact_[_1]_to_unlock_it_": "お客様の口座への入出金手続きは、現在許可されていません。解除するには[_1]までご連絡ください。", "High_barrier": "上限バリア", "Dec": "12", "High_Barrier": "上限バリア", "5-10_million_JPY": "500〜1,000万円", "Not": "ない", "Settings": "各種設定", "{JAPAN_ONLY}It_prohibits_the_copying_of_the_questions___In_addition_,_You_agree_that_you_will_not_leak_to_third_party": "問題の複写を禁止します。また、第三者に漏えいしないことに同意いただくものとします。", "Please_[_1]_to_view_this_page": "現在、ログアウトの状態です。ご利用頂くためには再度[_1]が必要です。", "Jump_To": "Xへ移動する", "Th": "木", "Your_account_is_currently_suspended__Only_withdrawals_are_now_permitted__For_further_information,_please_contact_[_1]_": "現在お客様の口座は、一時的にご利用いただけません。詳細は、[_1]までご連絡ください。", "{JAPAN_ONLY}Lower": "LOW", "Back": "戻る", "{JAPAN_ONLY}TOUCH_/NO-TOUCH": "TOUCH/NO-TOUCH", "Less_than_$25,000": "$25,000未満", "Adjusted_High_Barrier": "調整高バリア", "Student": "学生", "Quantitative_Analyst": "計量分析者", "Short": "ショート", "New_Password": "新しいパスワード", "Random": "ランダム", "seconds": "秒", "Closed": "終了", "You_did_not_change_anything_": "変更はありません。", "Please_select": "選択して下さい", "Su": "日", "Your_details_have_been_updated_": "お客さまの詳細が更新されました。", "Director": "取締役", "Minimum_of_[_1]_characters_required_": "[_1]文字以上でご入力ください。", "Please_check_your_email_to_retrieve_the_token_needed_to_reset_your_password_": "パスワードの再設定にはワンタイムパスワードが必要となりますので、メールをご確認ください。", "Weekday": "平日", "Your_current_balance_is": "お客さまの現在の残高はxxxです。", "This_is_a_staging_server_-_For_testing_purposes_only": "これはテストを目的としたステージングサーバーです", "40_transactions_or_more_in_the_past_12_months": "過去12ヶ月で40以上のお取引", "Delete": "消去", "Remaining_Time": "残り時間", "h": "時間", "Verification_Token": "ワンタイムパスワード", "Targeting_short-term_profits": "短期保有が目的", "Only_2_decimal_points_are_allowed_": "小数点以下2桁のみご利用いただけます。", "Exit_Spot": "判定レート", "Contract_purchased_with_app_ID": "アプリケーションIDで購入されたトレード", "When_you_click_\"Ok\"_you_will_be_excluded_from_trading_on_the_site_until_the_selected_date_": "\"Ok\"をクリックすると、選択した日付までこのサイトでのトレードができなくなります。", "Binary_options_or_other_financial_derivatives_trading_frequency": "バイナリーオプションまたはその他金融デリバティブ取引の頻度", "Closes_early_(at_18:00)": "判定時刻:18:00", "{JAPAN_ONLY},000": "ロット", "{JAPAN_ONLY}Higher": "HIGH", "Balance": "口座残高", "To": "終了", "0-1_year": "0~1年", "password": "パスワード", "30-50_million_JPY": "3,000〜5,000万円", "Date_(GMT)": "日付 (GMT)", "Sale_Date": "売却/判定時刻", "Fridays": "金曜日", "{JAPAN_ONLY}END-IN/END-OUT": "END-IN/END-OUT", "Financial_Assessment": "財務評価", "Finish": "完了", "hours": "時間", "Year": "年", "Shop": "ショップ", "No_Live_price_update": "最新価格の更新がありません", "Keep_track_of_your_authorised_applications_": "認証済みアプリケーションを引き続き追跡してください。", "Stop-type": "ストップタイプ", "Sorry,_your_account_is_not_authorised_for_any_further_contract_purchases_": "申し訳ございませんが、これ以上のトレードの購入を可能にする権限がお客さまのご口座に存在しておりません。", "There_was_a_problem_validating_your_personal_details__Please_fix_the_fields_[_1]here": "個人情報の確認において問題が発生しました。[_1]こちらから項目を修正してください。", "Failed_to_update_trade_description_": "トレード内容の更新ができませんでした。", "Christmas_Day": "クリスマス", "Virtual_Account": "デモ口座番号", "Score": "スコア", "Open_a_Financial_Account": "金融口座の開設", "August": "８月", "[ctx,minimum_duration,_for_example_minimum_15_seconds]min": "%ctx(最短期間, 例： 最短 15 秒）分", "1-3_years": "1〜3年", "Aug": "8", "{JAPAN_ONLY}This_test_is_for_the_purpose_of_confirming_if_the_customers_have_basic_knowledge_related_to_options_trading__": "本テストはオプション取引に関わる基礎的な知識の有無を確認する目的で行われます。", "Others": "その他", "Exit_Level": "判定レベル", "From": "開始", "Day": "日", "(Bejing/CST_-8_hours)": "(北京/CST -8時間)", "Stop_Loss_Level": "損切りレベル", "Contract_Confirmation": "トレード確定", "Password_is_moderate": "パスワード強度は中です", "Return": "リターン率", "Original_Barrier": "オリジナルバリア", "Terms_&_Conditions": "取引約款＆契約締結前交付書面", "today,_Fridays": "本日：金曜日", "Once_you_click_the_'Submit'_button,_the_funds_will_be_withdrawn_from_your_account_and_transferred_to_your_Client's_account_": "一旦「送信」ボタンをクリックされますと、資金はお客さまの口座から出金され、お客さまの顧客の口座に送金されます。", "End_Time": "判定時刻", "Long": "ロング", "Sell": "売却", "Over_3_years": "3年以上", "is_required__Current_spread": "のご入金が必要です。現在のスプレッド", "{JAPAN_ONLY}Goes_Outside": "BREAK-OUT", "New_token_created_": "新しいトークンが作成されました。", "{JAPAN_ONLY}Option_Type": "オプションタイプ", "Exit_spot": "判定レート", "Exclude_time_must_be_after_today_": "制限時間は明日以降として設定して下さい。", "Your_account_has_no_Login/Logout_activity_": "お客さまのご口座はログイン/ログアウトのアクティビティはございません。", "You_need_to_finish_all_20_questions_": "まだ、無解答の問題があります。", "Entry_Spot": "取引開始時刻直後のティック", "Profit/Loss": "損益", "Description": "取引内容", "The_financial_trading_services_contained_within_this_site_are_only_suitable_for_customers_who_are_able_to_bear_the_loss_of_all_the_money_they_invest_and_who_understand_and_have_experience_of_the_risk_involved_in_the_acquistion_of_financial_contracts__Transactions_in_financial_contracts_carry_a_high_degree_of_risk__If_purchased_contracts_expire_worthless,_you_will_suffer_a_total_loss_of_your_investment,_which_consists_of_the_contract_premium_": "当社における金融トレードは、投資された資金が全て失われる可能性があることをご理解出来る方、及び金融トレードにおけるあらゆるリスクを熟知されご経験されている方に対してのみ適切なサービスになります。金融トレードの売買は高いリスクを伴います。もし購入したトレードが負け判定となった場合は、購入価格も含め投資された資金が全て失われる可能性があります。", "Your_provided_email_address_is_already_in_use_by_another_Login_ID__According_to_our_terms_and_conditions,_you_may_only_register_once_through_our_site__If_you_have_forgotten_the_password_of_your_existing_account,_please_<a_href=\"[_1]\">try_our_password_recovery_tool</a>_or_contact_customer_service_": "ご入力いただいたメールアドレスは既に他のログインIDで使用されています。弊社の利用規約に基づき、複数のアカウント保持は禁止されております。パスワードをお忘れの場合は、<a href=\"[_1]\">こちら</a>からパスワードを再発行して頂くか、カスタマーサポートまでご連絡下さい。", "{JAPAN_ONLY}Section_3:_Outline": "第3章：概要", "year": "年", "{JAPAN_ONLY}[_1]_[_2]_payout_if_[_3]_touches_Exercise_price_through_close_on_[_4]_": "[_3]のTOUCHは、取引期間([_4])が終了するまでバリア価格にタッチを予測<br>09:00«の判定時刻は08:59:59となります", "Chart": "チャート", "Upgrade_to_a_Financial_Account": "金融口座へアップグレード", "Asset_Index": "取引期間データ", "Your_withdrawal_limit_is_[_1]_[_2]_(or_equivalent_in_other_currency)_": "お客さまの出金限度額は ¥ [_2] です。限度額以上の出金額をご希望される場合は、本人確認が必要となりますのでカスタマーサポートへご連絡ください。", "Administrator": "管理者", "{JAPAN_ONLY}The_test_is_unavailable_now,_test_can_only_be_taken_again_on_next_business_day_with_respect_of_most_recent_test_": "現在テストを受験いただけません。前回のテストの翌営業日に再度受験いただけます。", "Please_deposit_before_transfer_to_client_": "お客さまへ送金される前にご入金をしてください。", "Charting_for_this_underlying_is_delayed": "この対象のチャート表示は不可能です", "today": "本日", "Please_select_at_least_one_scope": "範囲を1つ以上選択してください", "Contract_Sold": "売却", "We_are_not_able_to_stream_live_prices_at_the_moment__To_enjoy_live_streaming_of_prices_try_refreshing_the_page,_if_you_get_this_issue_after_repeated_attempts_try_a_different_browser": "現在、価格情報を更新することはできません。価格情報を更新したい場合は、このページを更新して下さい。状況が改善されない場合は、他のブラウザをお試しください。", "May": "5", "Social_Media_Executive": "ソーシャルメディア管理者", "Save_as_JPEG": "JPEGで保存", "Upgrade_to_a_Real_Account": "リアル口座へアップグレード", "Please_confirm_the_trade_on_your_statement_before_proceeding_": "続行する前に、お客さまの取引明細書をご確認ください。", "{JAPAN_ONLY}Section_1:_Structure": "第1章：構成", "Please_choose_which_currency_you_would_like_to_transact_in_": "日本円にてお手続きできます", "Note": "注意", "Current": "現在", "Confirm_New_Password": "新しいパスワード（確認用）", "{JAPAN_ONLY}Dear_customer,_you've_already_completed_the_knowledge_test,_please_proceed_to_next_step_": "お客さまへ\n\n既に知識確認テストは完了しています。送信済みのメールを確認の上、口座開設の手続きを進めてください。", "Login_History": "ログイン履歴", "Jan": "1", "Over_100_million_JPY": "1億円を超える", "Sep": "9", "Feb": "2", "Your_cashier_is_locked_as_per_your_request_-_to_unlock_it,_please_enter_the_password_": "お客様のキャッシャーはリクエストにより、ロックされました。 - 解除するにはパスワードをご入力ください。", "Explanation": "取引概要", "If_you_need_assistance_feel_free_to_contact_our_[_1]Customer_Support": "ご不明な点がございましたら、[_1]当社カスタマーサポートチームまでお気軽にお問い合わせ下さい。", "Indices_trading_experience": "インデックス取引のご経験", "Duration": "取引期間", "Sale_Price": "売却 / ペイアウト金額", "Your_account_is_not_fully_authenticated_": "お客様の口座認証はまだ完了していません。", "Amount_per_point": "ポイントごとの金額", "email_address": "メールアドレス", "{JAPAN_ONLY}[_1]_[_2]_payout_if_[_3]_goes_outside_of_low_and_high_values_of_Exercise_price_through_close_on_[_4]_": "[_3]のBREAK-OUTは、取引期間中([_4])に上限バリア以上もしくは下限バリア以下になったと予測<br>09:00«の判定時刻は08:59:59となります", "Credit/Debit": "支払/受取", "Internal_Audit": "内部監査", "Therefore_your_current_immediate_maximum_withdrawal_(subject_to_your_account_having_sufficient_funds)_is_[_1]_[_2]_(or_equivalent_in_other_currency)_": "そのため、現在即座にご出金いただける限度金額（ただし、ご口座残高が不足していない場合）は[_1] [_2]までです。", "Other": "その他", "This_contract_won": "このトレードは勝ち判定", "letters": "文字", "Stop-loss": "損切り", "{JAPAN_ONLY}Take_knowledge_test": "知識確認テストを受ける", "Your_[_1]_day_withdrawal_limit_is_currently_[_2]_[_3]_(or_equivalent_in_other_currency)_": "お客さまの[_1]日の出金限度額は現在[_2] [_3]です。限度額以上の出金額をご希望される場合、本人確認が必要となります。", "Contract_Information": "約定済み通知", "Step": "ステップ", "Please_enter_a_date_that_is_at_least_6_months_from_now_": "現在から最低６ヶ月先の日付を入力して下さい。", "Verification_code_format_incorrect_": "ワンタイムパスワードの形式が不適切です。", "Only_[_1]_are_allowed_": "[_1]のみご利用いただけます。", "Sorry,_this_feature_is_available_to_virtual_accounts_only_": "申し訳ございません。この機能はデモ口座のみでご利用頂けます。", "Potential_Payout": "ペイアウト", "Affiliate": "アフィリエイト", "Unlock_Cashier": "入出金ロック解除", "Senior_Front-End_Developer": "シニアフロントエンド開発者", "Name": "お名前", "{JAPAN_ONLY}To_invest_a_binary_options_investment_accurately,_the_customer_are_required_knowledge_and_experience_related_to_derivative_transactions_": "バイナリーオプション投資を的確に行うにはオプション取引などデリバティブ取引に関わる知識や経験が必要です。", "Low_Barrier_([_1])": "下限バリア", "Start_Time": "取引開始時刻", "Revoke_access": "アクセス権の取消", "New_Year's_Day": "元旦", "Sa": "土", "Your_trading_statistics_since_[_1]_": "[_1]からのお取引統計情報", "Low_Barrier": "下限バリア", "6_months_to_1_year": "6ヶ月から1年", "Print_chart": "チャートを印刷", "login": "ログイン", "Predict_the_direction<br_/>and_purchase": "方向性<br />を予測して購入", "apostrophe": "アポストロフィ", "Other_financial_instruments_trading_frequency": "その他金融商品取引の頻度", "Invalid_amount,_minimum_is": "無効な値です。最小", "Barrier_Change": "バリア値の変更", "[_1]_Please_click_the_link_below_to_restart_the_password_recovery_process__If_you_require_further_assistance,_please_contact_our_Customer_Support_": "[_1]下記リンクをクリックしてパスワードの再設定を再度お試しください。サポートが必要な場合は、 カスタマーサポートまでご連絡ください。", "Quantitative_Developer": "計量開発者", "Friday": "金曜日", "Next": "次", "You_have_already_withdrawn_the_equivalent_of_[_1]_[_2]_in_aggregate_over_the_last_[_3]_days_": "直近[_3]日間に累計[_1] [_2] と同等の金額を既に出金されています。", "Confirm": "決定", "ticks": "Tick", "m": "男性", "April": "４月", "50-100_million_JPY": "5,000万円〜1億円", "An_error_occured_": "エラーが発生しました", "Foreign_currency_deposit": "外貨預金", "Compliance_Executive": "コンプライアンス・エグゼクティブ", "{JAPAN_ONLY}Ends_Outside": "END-OUT", "Reset_Password": "パスワード再設定", "hour": "時間", "Investments_&_Dividends": "投資と配当", "Nov": "11", "Browser": "ブラウザ", "Profit_Table": "取引明細", "comma": "読点", "Forex": "外国為替", "Contract_is_not_started_yet": "トレードはまだ開始していません", "Estimated_Net_Worth": "推定純資産", "Password_score_is:_[_1]__Passing_score_is:_20_": "パスワードスコア：[_1]　合格スコア：20", "All_markets_are_closed_now__Please_try_again_later_": "営業時間外のためご利用になれません。", "Thursday": "木", "1-2_years": "1-2年", "Previous_Day": "前日", "Your_settings_have_been_updated_successfully_": "設定が正しく更新されました。", "points": "ポイント", "Monday": "月", "Date_of_Birth": "生年月日", "Secondary": "第二", "space": "スペース", "Deposit_of": "Xのご入金", "Insufficient_balance_": "口座残高が不足しています", "Waiting_for_entry_tick_": "エントリーTickを検出中です・・・", "Please_check_the_above_form_for_pending_errors_": "未入力の項目がありますのでご確認ください", "Stays_In/Goes_Out": "STAY-IN/BREAK-OUT", "Marketing": "マーケティング", "Select_market": "取引市場を選択", "{JAPAN_ONLY}HIGH/LOW": "ラダーHIGH/ラダーLOW", "Net_profit": "純利益", "Last_Digit_Prediction": "下一桁の数字を予測", "Entry_Level": "エントリーレベル", "Construction": "設営", "Purchase_Time": "購入時間", "Please_enter_a_number_between_[_1]_": "[_1]の間の数字を入力してください。", "Enter_the_barrier_in_terms_of_the_difference_from_the_spot_price__If_you_enter_+0_005,_then_you_will_be_purchasing_a_contract_with_a_barrier_0_005_higher_than_the_entry_spot__The_entry_spot_will_be_the_next_tick_after_your_order_has_been_received": "スポット価格に差異を付加する目的でバリア値を設定しましょう。もしバリア値として+0.005を設定した場合はスポット価格より0.005高値のバリアが設定されたトレードを購入することになります。尚、スポット価格は注文を受けた次のTickが採用されます。", "Income_Source": "収入源", "Details": "お客さま基本情報", "DevOps_Manager": "DevOps マネージャー", "Reference_ID": "約定番号", "This_contract_lost": "このトレードは負け判定", "True": "正", "Your_changes_have_been_updated_": "変更が更新されました。", "There_was_an_error": "エラーが発生しました", "Save_as_PDF": "PDFで保存", "minute": "分", "Accounts_And_Payments_Executive": "顧客・支払担当者", "Total_Profit/Loss": "合計　損益", "Closes": "取引終了時間", "Current_Time": "現在時刻：", "Pension": "年金", "Industry_of_Employment": "雇用産業", "Mar": "3", "Over_5_years": "6年以上", "This_feature_is_not_relevant_to_virtual-money_accounts_": "この機能は、デモ口座ではご利用頂けません。", "Apr": "4", "Asset": "取引対象", "Adjust_trade_parameters": "取引期間を選択して頂き購入希望ロット数を入力して下さい。", "Please_select_a_valid_date": "有効な日付を選択してください", "Public_worker": "公務員", "max:_100,000": "上限ロット: x100", "Withdrawal_for_your_account_is_not_allowed_at_this_moment__Please_contact_[_1]_to_unlock_it_": "お客様の口座の出金手続きは現在許可されていません。解除するには[_1]までご連絡ください。", "Please_try_again_": "再びお試し下さい。", "{JAPAN_ONLY}[_1]_[_2]_payout_if_[_3]_is_strictly_lower_than_Exercise_price_at_close_on_[_4]_": "[_3]のラダーLOWは、判定時刻([_4])の時点でバリア価格未満を予測<br>09:00«の判定時刻は08:59:59となります", "There_was_a_problem_accessing_the_server_during_purchase_": "購入時にサーバーアクセスのエラーが発生がしました。", "Touch/No_Touch": "TOUCH/NO-TOUCH", "Your_request_to_transfer_[_1]_[_2]_from_[_3]_to_[_4]_has_been_successfully_processed_": "[_3]から[_4]へのご送金[_1] [_2]リクエストが正常に処理されました。", "Less_than_6_months": "6ヶ月未満", "years": "年", "Contract_will_be_sold_at_the_prevailing_market_price_when_the_request_is_received_by_our_servers__This_price_may_differ_from_the_indicated_price_": "当社のサーバがリクエストを受理した時点での市場価格で売却取引が成立します。実際の約定価格と注文時の表示価格と異なる場合があります。", "Therefore_your_current_immediate_maximum_withdrawal_(subject_to_your_account_having_sufficient_funds)_is_[_1]_[_2]_": "現在、出金可能な限度額（口座残高が不足していない場合）は¥ [_2]となります。", "Your_account_has_no_trading_activity_": "取引履歴はありません", "Tourism": "ご利用方法", "Refresh_page": "更新ボタン", "We": "水", "{JAPAN_ONLY}Does_Not_Touch": "NO-TOUCH", "Never": "決してありません", "Fr": "金", "Sorry,_an_error_occurred_while_processing_your_request_": "通信エラーが発生しましたので、再度ページの読み込みをしてください", "A_scanned_copy_of_your_passport,_driving_licence_(provisional_or_full)_or_identity_card,_showing_your_name_and_date_of_birth__Your_document_must_be_valid_for_at_least_6_months_after_this_date_": "場合によっては、ご本人確認書類を再度提出していただく場合ございます", "{JAPAN_ONLY}Dear_customer,_you_are_not_allowed_to_take_knowledge_test_until_[_1]__Last_test_taken_at_[_2]_": "お客さまへ\n\n現在、知識確認テストの受験を行うことができません。[_1]以降に再受験してください。前回受験日[_2]", "Tertiary": "第三の", "Processing_your_request___": "ただいま処理中です。しばらくお待ち下さい。", "{JAPAN_ONLY}STAY-IN/BREAK-OUT": "STAY-IN/BREAK-OUT", "Start_Trading": "トレード開始", "False": "誤", "Please_confirm_the_transaction_details_in_order_to_complete_the_transfer:": "送金を完了するために、取引明細をご確認ください。", "Accounting": "会計", "Exit_Spot_Time": "売却/判定時刻", "Barrier_offset": "追加バリア値", "When_you_click_'Ok'_you_will_be_excluded_from_trading_on_the_site_until_the_selected_date_": "'Ok'をクリックすると、選択した日付までこのサイトでのトレードができなくなります。", "All_barriers_in_this_trading_window_are_expired": "すべてのバリア価格は権利行使済みです", "Save_as_CSV": "CSVへ保存", "Exercise_period": "権利行使期間", "Current_Level": "現在のレベル", "Resources": "取引参考情報", "Are_you_sure_that_you_want_to_permanently_revoke_access_to_application": "アプリケーションへのアクセスを完全に削除してもよろしいですか？", "1-3_million_JPY": "100〜300万円", "View_your_statement": "取引残高を表示" };
	texts_json['ZH_CN'] = { "December": "十二月", "Less_than_$100,000": "少于$100,000", "Graphic_Designers": "平面设计师", "Ms": "女士", "February": "二月", "Over_$1,000,000": "大于$1,000,000", "Statement": "账单", "Amount": "金额", "Quality_Assurance_Engineer": "质量保证工程师", "Compliance": "法规遵从性", "Corporate_Action": "共同行为", "Buy": "买入", "Password_is_strong": "密码安全级别高", "You_must_accept_the_terms_and_conditions_to_open_an_account_": "您必须接受条款和条件才能开户。", "The_Payment_Agent_facility_is_currently_not_available_in_your_country_": "您的国家无可用支付代理设施。", "Applications": "应用程序", "Password_should_have_lower_and_uppercase_letters_with_numbers_": "密码须包含大小写字母与数字。", "Low_barrier_offset": "低障碍位移", "Try_adding_more_letters_or_numbers_": "请试添加字母或数字。", "Market_is_closed__Please_try_again_later_": "市场已关闭。请稍后重试。", "week": "周", "Sorry,_an_error_occurred_while_processing_your_account_": "对不起，您的账户处理发生错误。", "The_two_passwords_that_you_entered_do_not_match_": "两次输入的密码不一致。", "second": "秒", "Today": "今天", "Country_Manager": "区域经理", "October": "十月", "November": "十一月", "Old_password_is_wrong_": "旧密码不正确。", "We_are_not_accepting_accounts_from_residents_of_this_country_at_the_present_time_": "目前不接受来自该国居民的账户。", "Stocks_trading_experience": "股票交易经验", "This_contract_has_WON": "此合约赢了", "Contract_Expiry": "合约到期日", "High_Barrier_([_1])": "高障碍([_1])", "Human_Resource_Executive": "人力资源执行", "An_additional_password_can_be_used_to_restrict_access_to_the_cashier_": "可使用额外密码来限制对收银台的访问。", "Last_Used": "上一次使用", "Your_Application_is_Being_Processed_": "您的申请已经处理完成。", "Transfer_to_Login_ID": "转给登录 ID", "Jun": "六月", "Update": "更新", "Are_you_sure_that_you_want_to_permanently_delete_token": "确定要永久删除令牌吗", "Trading_Times": "交易时间", "Please_log_in_": "请登录。", "Points": "点", "Number_of_ticks": "跳动点数目", "Information_Technology": "信息技术", "Senior_Perl_Developer": "高级 (Perl) 程序员", "Connection_error:_Please_check_your_internet_connection_": "连接错误：请检查您网络连接。", "Forex_trading_experience": "外汇交易经验", "months": "月份", "Please_complete_the_following_financial_assessment_form_before_continuing_": "继续操作前请填写以下财务评估表格。", "Original_High_Barrier": "原高障碍", "September": "九月", "Education": "教育", "In/Out": "“范围之内/之外”", "Save_as_SVG": "另存为SVG", "Transaction_performed_by_[_1]_(App_ID:_[_2])": "交易执行者为[_1] (应用程序 ID: [_2])", "Contract_ID": "合约编号", "Anti-Fraud_Officer": "反欺诈主任", "6-10_transactions_in_the_past_12_months": "过去12个月内6-10次交易", "Failed_to_reset_password__[_1],_please_retry_": "无法重设密码。[_1]，请重试。", "Please_input_a_valid_date": "请输入有效日期", "Tuesday": "星期二", "Last_Digit_Stats": "最后数字的统计数据", "Resale_not_offered": "不提供转售", "Time_is_in_the_wrong_format_": "时间格式错误。", "Jul": "七月", "Sunday": "周日", "Zoom": "缩放", "Action": "操作", "Loss": "亏损", "Over_$500,001": "大于$500,001", "[_1]_[_2]_has_been_credited_to_your_Virtual_money_account_[_3]": "[_1] [_2] 已记入您的虚拟资金账户[_3]", "Salaried_Employee": "受薪雇员", "Miss": "遗漏", "Token": "令牌", "Exclude_time_cannot_be_for_more_than_5_years_": "禁止时间不能超过5年。", "Deposit": "存款", "Please_select_a_payment_agent": "请选择支付代理", "Net_Annual_Income": "年净收入", "Password_is_not_strong_enough_": "密码安全度不够。", "Sell_time": "卖出时间", "Level_of_Education": "教育水平", "Price": "价格", "Our_site_does_not_charge_any_transfer_fees_": "我们网站不收取任何转账费用。", "Invalid_date_of_birth_": "出生日期无效。", "Sorry,_account_opening_is_unavailable_": "对不起，不可开立账户。", "mins": "分钟", "Password_is_weak": "密码安全级别弱", "For_added_security,_please_check_your_email_to_retrieve_the_verification_token_": "为提高安全保障，请查看邮件并提取验证令牌。", "Gaming_Account": "博彩账户", "Profit/Loss_(points)": "利润/亏损（点）", "Your_transaction_reference_is": "您的交易参考号是", "AM": "上午", "Real_Account": "真实账户", "Equals": "相等于", "Session_duration_limit_cannot_be_more_than_6_weeks_": "交易期持续时间限制不能大于 6周。", "Contract": "合约", "Indices_trading_frequency": "指数交易频率", "Translator": "翻译", "There_was_a_problem_accessing_the_server_": "服务器访问发生问题。", "Mo": "星期一", "High_barrier_offset": "高障碍位移", "Binary_options_or_other_financial_derivatives_trading_experience": "二元期权或其他金融衍生品交易经验", "Failed": "失败", "Please_enter_a_valid_amount_": "请输入有效金额。", "Health": "健康", "verification_token": "验证令牌", "Waiting_for_exit_tick_": "正在等待退场跳动点。", "Format:_yyyy-mm-dd_(not_required_for_virtual-money_accounts)": "格式：年-月-日（虚拟资金账户不需要）", "July": "七月", "Adjusted_Barrier": "经调整障碍", "Spot_Time": "现货时间", "Tu": "星期二", "Password_does_not_match_": "密码不相符。", "Target": "目标", "0-5_transactions_in_the_past_12_months": "过去12个月内0-5次交易", "Proofreader": "校对员", "Ref_": "参考", "weeks": "周", "Major_Pairs": "主要货币对", "Questions": "问题", "Wednesday": "星期三", "days": "天", "Select_your_market": "选择市场", "Date_and_Time": "日期和时间", "Successful": "成功", "Stop_Profit_Level": "止盈价位", "Entry_spot": "入市现价", "Copywriter": "文案", "View": "查看", "January": "一月", "Minute": "分钟", "Your_withdrawal_limit_is_[_1]_[_2]_": "您的取款限额是 [_1] [_2]。", "Your_password_has_been_successfully_reset__Please_log_into_your_account_using_your_new_password_": "您的密码已成功重置。请用新密码登录您的账户。", "Portfolio": "投资组合", "Select_your_trade_type": "选择交易类型", "You_have_already_withdrawn_[_1]_[_2]_": "您已提取[_1] [_2]。", "Indicative": "指示性", "Quantitative_Analysis": "量化分析", "Adjusted_Low_Barrier": "经调整低障碍", "Please_check_your_email_for_the_value_of_this_token": "请检查您的电邮领取此令牌号", "Marketing_Executives": "市场执行", "End_time_must_be_after_start_time_": "结束时间必须在开始时间之后。", "loading___": "加载中……", "Please_enter_a_number_greater_or_equal_to_[_1]_": "请输入大于或等于[_1]的数字。", "Your_transaction_reference_number_is_[_1]": "您的交易参考号是 [_1]", "Quality_Assurance": "质量保证", "Up/Down": "涨/跌", "Sorry,_this_feature_is_not_available_": "对不起，此功能不可用。", "Last_digit_stats_for_the_latest_[_1]_ticks_on_[_2]": "显示 [_2] 最新 [_1] 跳点的最后统计数字", "Week_of": "周", "minimum_available_duration": "最短可用期限", "Upcoming_Events": "未来事件", "Your_cashier_is_locked_as_per_your_request_-_to_unlock_it,_please_click_[_1]here": "根据您的请求，您的收银台已被锁定 - 如需解除锁定，请点击此处", "Mrs": "女士", "Please_follow_the_pattern_3_numbers,_a_dash,_followed_by_4_numbers_": "请按照以下格式填写：3个数字，1个短划线，加上4个数字。", "This_symbol_is_not_active__Please_try_another_symbol_": "这是个非活跃符号。请试另一符号。", "Barrier_([_1])": "障碍([_1])", "Invalid_email_address": "无效的电子邮件地址", "Global_Customer_Service_Representatives": "客服代表", "minutes": "分钟", "Permissions": "权限", "Low_barrier": "低障碍", "Password": "密码", "New_password_is_same_as_old_password_": "新密码与旧密码相同。", "This_contract_can_not_be_traded_in_the_final_2_minutes_before_settlement": "此合约不能在结算前最后2分钟内交易", "Select_your_underlying_asset": "选择基础资产", "Saturday": "周六", "period": "周期", "Investment_Account": "投资账户", "Password_must_contains_at_least_1_digit,_1_uppercase_letter_and_1_lowercase_letter_": "密码必须包含至少1 数字、1大写字母和1小写字母。", "month": "月份", "numbers": "号码", "Sell_at_market": "按市价卖出", "Exclude_time_cannot_be_less_than_6_months_": "禁止时间不能少于6个月。", "Your_password_cannot_be_the_same_as_your_email": "您的密码不可与电子邮件相同", "Cashier": "收银台", "Hour": "小时", "Month": "月份", "Purchase_Price": "买入价格", "You_have_sold_this_contract_at_[_1]_[_2]": "您已经以 [_1] [_2] 卖出此合约", "IP_Address": "IP 地址", "The_maximum_number_of_tokens_([_1])_has_been_reached_": "已达令牌 ([_1]) 最大限数。", "Withdrawal": "提款", "Try_adding_more_letters_": "试添加更多字母。", "min:_1,000": "最小: 1,000", "Your_Client_will_receive_an_email_notification_informing_him/her_that_the_transfer_has_been_processed_": "您的客户将收到电子邮件通知，告知其转账交易已处理。", "Due_to_recent_changes_in_the_regulations,_we_are_required_to_ask_our_clients_to_complete_the_following_Financial_Assessment__Please_note_that_you_will_not_be_able_to_continue_trading_until_this_is_completed_": "由于最近的法规变更，客户必须填写以下金融评估。您须填写完成才能继续交易。", "Please_select_a_value": "请选择一个数值", "This_field_is_required_": "此字段为必填项。", "Your_token_has_expired__Please_click_<a_class=\"pjaxload\"_href=\"[_1]\">here</a>_to_restart_the_verification_process_": "您的令牌已过期。请点击<a class=\"pjaxload\" href=\"[_1]\">此处</a>重启验证程序。", "Deposit_[_1]_[_2]_virtual_money_into_your_account_[_3]": "将[_1] [_2]虚拟资金存入您的账户[_3]", "Lock_Cashier": "锁定收银台", "Original_Low_Barrier": "原低障碍", "Authorise_your_account_": "授权您的账户。", "Password_Reset": "重设密码", "The_server_<a_href=\"[_1]\">endpoint</a>_is:_[_2]": "服务器<a href=\"[_1]\">终端</a>是: [_2]", "Walkthrough_Guide": "攻略指南", "Withdraw": "取款", "Total_Cost": "成本总计", "details": "详情", "hyphen": "连字符", "Even/Odd": "偶/奇", "Please_fill_in_the_Login_ID_and_Amount_you_wish_to_transfer_to_your_Client_in_the_form_below:": "请在下表中填写登录 ID 以及要转给客户的金额：", "Previous": "之前", "My_Account": "我的账户", "not_available": "不可使用", "Rise/Fall": "上涨/下跌", "Human_Resources": "人力资源", "You_have_already_withdrawn_the_equivalent_of_[_1]_[_2]_": "您已提取 [_1] [_2] 的等值。", "Oct": "十月", "June": "六月", "Opens": "开盘", "Stake": "投注资金", "Profit": "利润", "Sorry,_account_signup_is_not_available_in_your_country__Please_contact_<a_href=\"[_1]\">customer_support</a>_for_more_information_": "对不起，您的国家不可注册账户。欲知详情，请联系<a href=\"[_1]\">客服部</a>。", "Closes_early_(at_21:00)": "收盘提前（至21:00）", "Password_is_very_strong": "密码安全级别非常高", "Sorry,_you_have_entered_an_incorrect_cashier_password": "对不起，您输入的收银台密码不正确", "Login_ID": "登录 ID", "Higher/Lower": "“高于/低于”", "Spot": "现价", "Barrier": "障碍", "Try_adding_more_numbers_": "试添加更多数字。", "Commodities_trading_frequency": "大宗商品交易频率", "Please_enter_a_number_between_0_and_[_1]": "请输入0和[_1]之间的数字", "There_was_some_invalid_character_in_an_input_field_": "某字段的输入字符无效。", "Over/Under": "大于/小于", "Settles": "结算", "Next_Day": "第二天", "day": "天", "[_1]_has_updated_its_[_2]__By_clicking_OK,_you_confirm_that_you_have_read_and_accepted_the_updated_[_2]_": "[_1]已经更新了[_2]。通过点击OK键，您确认已经阅读并接受更新的[_2]条款和条件。", "Please_submit_a_valid_[_1]_": "请提交有效的 [_1]。", "Please_enter_an_integer_value": "请输入整数", "Matches/Differs": "符合/相差", "Finance": "金融", "Prices": "价格", "Open": "开盘", "Start_time": "开始时间", "Your_account_is_fully_authenticated_and_your_withdrawal_limits_have_been_lifted_": "您的账户已经得到完全验证，且您的取款限额已经取消。", "Save_as_PNG": "另存为PNG", "Potential_Profit": "潜在利润", "Remaining_time": "剩余时间", "Internal_Auditor": "内部审计员", "This_contract_was_affected_by_a_Corporate_Action_event_": "该合约已受共同行为事件影响。", "Never_Used": "从未使用过", "Administrative_Executive": "行政管理执行员", "You_should_enter_between_[_1]_characters_": "您最多只能输入 [_1]  个字符。", "End_time": "结束时间", "Forex_trading_frequency": "外汇交易频率", "Invalid_amount,_maximum_is": "无效金额，最大金额是", "Your_request_to_withdraw_[_1]_[_2]_from_your_account_[_3]_to_Payment_Agent_[_4]_account_has_been_successfully_processed_": "您从 [_3] 账户提取 [_1] [_2] 到支付代理 [_4]账户的请求已成功处理。", "You_have_not_granted_access_to_any_applications_": "您没有访问任何应用程序的权限。", "Status": "统计", "Ends_In/Out": "“范围之内/之外”收盘", "Self-Employed": "个体经营", "Date": "日期", "Authenticate": "验证", "March": "三月", "Stocks_trading_frequency": "股票交易频率", "Please_wait_<br_/>Your_request_is_being_processed_": "请稍候。<br />您的请求正在处理中。", "This_contract_has_LOST": "此合约输了", "Japan": "日本", "min": "最小", "Financial_Assessment": "金融评估", "hours": "小时", "Finish": "完成", "Year": "年", "Shop": "商店", "Sale_Date": "卖出日期", "Fridays": "星期五", "There_was_a_problem_validating_your_personal_details__Please_fix_the_fields_[_1]here": "您的个人资料验证出了问题。请在此更正 [_1] 字段", "Keep_track_of_your_authorised_applications_": "跟踪您的授权应用程序。", "Stop-type": "停止类型", "No_Live_price_update": "无实时价格更新", "Sorry,_your_account_is_not_authorised_for_any_further_contract_purchases_": "对不起，您的账户无权进一步买入任何合约。", "Verification_Token": "验证令牌", "h": "小时", "Remaining_Time": "剩余时间", "Only_2_decimal_points_are_allowed_": "只允许 2 个小数位。", "Your_current_balance_is": "您当前的余额为", "Minimum_of_[_1]_characters_required_": "需至少[_1] 个字符。", "Please_check_your_email_to_retrieve_the_token_needed_to_reset_your_password_": "请检查您的电邮领取重设密码所须的令牌号。", "Weekday": "交易日", "40_transactions_or_more_in_the_past_12_months": "过去12个月内40次交易或以上", "This_is_a_staging_server_-_For_testing_purposes_only": "这是分期服务器 -仅用于测试目的", "Delete": "删除", "Balance": "余额", "Closes_early_(at_18:00)": "收盘提前（至18:00）", "Date_(GMT)": "日期 （格林尼治标准时间）", "0-1_year": "0-1 年", "password": "密码", "To": "到", "Contract_purchased_with_app_ID": "使用应用程序ID买入合约", "Exit_Spot": "退市现价", "When_you_click_\"Ok\"_you_will_be_excluded_from_trading_on_the_site_until_the_selected_date_": "当您点选“Ok”后，您将被禁止在此网站交易，直到选定期限结束为止。", "Binary_options_or_other_financial_derivatives_trading_frequency": "二元期权或其他金融衍生品交易频率", "Random": "随机", "New_Password": "新密码", "Short": "短仓", "seconds": "秒", "Adjusted_High_Barrier": "经调整高障碍", "Quantitative_Analyst": "量化分析员", "Su": "星期日", "Your_details_have_been_updated_": "您的个人信息已成功更新。", "Closed": "收盘", "Please_select": "请选择", "You_did_not_change_anything_": "您没作任何更改。", "Deposits_and_withdrawal_for_your_account_is_not_allowed_at_this_moment__Please_contact_[_1]_to_unlock_it_": "您的账户现时无法存取款。请联系[_1]进行解锁。", "High_barrier": "高障碍", "Commodities_trading_experience": "大宗商品交易经验", "Dec": "十二月", "Marketing_Project_Manager": "营销项目经理", "Your_session_duration_limit_will_end_in_[_1]_seconds_": "交易期持续时间限制将于[_1]秒内结束。", "Payout": "赔付", "Purchase": "买入", "PM": "下午", "Other_financial_instruments_trading_experience": "其他金融工具交易体验", "Primary": "主要", "Period": "周期", "Back": "返回", "Less_than_$25,000": "少于$25,000", "Settings": "设置", "Not": "不", "High_Barrier": "高障碍", "Th": "星期四", "Your_account_is_currently_suspended__Only_withdrawals_are_now_permitted__For_further_information,_please_contact_[_1]_": "您的账户已被暂时禁用，现仅允许取款。欲知详情，请联系 [_1]。", "Please_[_1]_to_view_this_page": "要查看此页面请[_1]", "Jump_To": "跳至", "Social_Media_Executive": "社交媒体执行", "Save_as_JPEG": "另存为JPEG", "Transfer_to": "转给", "today": "今天", "Please_select_at_least_one_scope": "请选择至少一个范围", "May": "五月", "We_are_not_able_to_stream_live_prices_at_the_moment__To_enjoy_live_streaming_of_prices_try_refreshing_the_page,_if_you_get_this_issue_after_repeated_attempts_try_a_different_browser": "目前，我们不能够串流实时价格。要获得价格的实时串流，请尝试刷新页面，如果多次尝试后此问题依然存在，请换一个浏览器", "Contract_Sold": "售出合约", "Note": "附注", "Please_choose_which_currency_you_would_like_to_transact_in_": "请选择您想要交易的货币。", "Current": "当前", "Confirm_New_Password": "确认新密码", "Upgrade_to_a_Real_Account": "升级到真实账户", "Please_confirm_the_trade_on_your_statement_before_proceeding_": "继续执行之前，请在您的声明上确认此项交易。", "Your_provided_email_address_is_already_in_use_by_another_Login_ID__According_to_our_terms_and_conditions,_you_may_only_register_once_through_our_site__If_you_have_forgotten_the_password_of_your_existing_account,_please_<a_href=\"[_1]\">try_our_password_recovery_tool</a>_or_contact_customer_service_": "您的电邮地址已被注册。根据我们的使用条款和条件，您只能在本网站注册一次。如果您忘记了现有账户的密码，请 <a href=\"[_1]\">尝试密码恢复工具</a>或联系客服人员。", "year": "年", "Profit/Loss": "利润/亏损", "Description": "说明", "The_financial_trading_services_contained_within_this_site_are_only_suitable_for_customers_who_are_able_to_bear_the_loss_of_all_the_money_they_invest_and_who_understand_and_have_experience_of_the_risk_involved_in_the_acquistion_of_financial_contracts__Transactions_in_financial_contracts_carry_a_high_degree_of_risk__If_purchased_contracts_expire_worthless,_you_will_suffer_a_total_loss_of_your_investment,_which_consists_of_the_contract_premium_": "本网站包含的金融交易服务仅适合这样的客户：能够承受全部投入资金亏损的风险，了解购买金融合约的风险并具有相关经验。金融合约交易有很高的风险。如果购买的合约到期时一文不值，您将损失全部投资，包括合约费用。", "Administrator": "管理员", "Your_withdrawal_limit_is_[_1]_[_2]_(or_equivalent_in_other_currency)_": "您的取款限额为 [_1] [_2] (或其他货币的等值 ）。", "Please_deposit_before_transfer_to_client_": "给客户转账前请先存款。", "Charting_for_this_underlying_is_delayed": "此标的资产的图表数据存在延迟", "Chart": "图表", "Asset_Index": "资产指数", "Upgrade_to_a_Financial_Account": "升级到金融账户", "Sell": "卖出", "Over_3_years": "3年以上", "Long": "长仓", "Once_you_click_the_'Submit'_button,_the_funds_will_be_withdrawn_from_your_account_and_transferred_to_your_Client's_account_": "一旦您点击“提交”按钮，资金将从您的账户转至客户的账户。", "End_Time": "结束时间", "is_required__Current_spread": "必须。当前价差", "today,_Fridays": "今天、周五", "Original_Barrier": "原障碍", "Terms_&_Conditions": "条款和条件", "Return": "回报", "You_need_to_finish_all_20_questions_": "必须答复全部20个问题。", "Entry_Spot": "入市现价", "New_token_created_": "已创建新口令牌。", "Your_account_has_no_Login/Logout_activity_": "您的账户无交易活动。", "Exclude_time_must_be_after_today_": "禁止时间必须在今日之后。", "Exit_spot": "退市现价", "Exit_Level": "退出价位", "[ctx,minimum_duration,_for_example_minimum_15_seconds]min": "分钟", "Aug": "八月", "Failed_to_update_trade_description_": "无法更新交易描述。", "Christmas_Day": "圣诞节", "Virtual_Account": "虚拟账户", "Open_a_Financial_Account": "开设金融账户", "August": "八月", "Day": "天", "(Bejing/CST_-8_hours)": "（北京/CST -8 小时）", "Stop_Loss_Level": "止损价位", "Password_is_moderate": "密码安全级别中等", "Contract_Confirmation": "合约确认", "From": "来自", "Nov": "十一月", "Browser": "浏览器", "Profit_Table": "利润表", "hour": "小时", "Investments_&_Dividends": "投资与分红", "comma": "逗号", "Forex": "外汇", "Contract_is_not_started_yet": "合约还未开始", "Reset_Password": "重置密码", "1-2_years": "1-2 年", "Previous_Day": "前一天", "points": "点", "Your_settings_have_been_updated_successfully_": "您的设置已成功更新。", "All_markets_are_closed_now__Please_try_again_later_": "所有市场现已关闭。请稍后重试。", "Estimated_Net_Worth": "估计净值", "Password_score_is:_[_1]__Passing_score_is:_20_": "密码积分是： [_1]。通过积分是: 20。", "Thursday": "星期四", "ticks": "跳动点", "Confirm": "确认", "m": "月", "Other_financial_instruments_trading_frequency": "其他金融工具交易频率", "Barrier_Change": "障碍变更", "Invalid_amount,_minimum_is": "无效金额，最小金额是", "[_1]_Please_click_the_link_below_to_restart_the_password_recovery_process__If_you_require_further_assistance,_please_contact_our_Customer_Support_": "[_1] 请点击以下链接重启密码恢复过程。如果需要帮助，请联系客服部。", "apostrophe": "撇号", "You_have_already_withdrawn_the_equivalent_of_[_1]_[_2]_in_aggregate_over_the_last_[_3]_days_": "过去 [_3] 天里您已累计提取 [_1] [_2] 的等值。", "Next": "下一页", "Quantitative_Developer": "量化开发员", "Friday": "星期五", "Compliance_Executive": "法律执行员", "An_error_occured_": "发生错误。", "April": "四月", "Unlock_Cashier": "解锁收银台", "Affiliate": "联盟", "Low_Barrier_([_1])": "低障碍([_1])", "Start_Time": "开始时间", "Senior_Front-End_Developer": "高级前端程序员", "Name": "姓名", "Verification_code_format_incorrect_": "验证码格式不正确。", "Sorry,_this_feature_is_available_to_virtual_accounts_only_": "对不起，此功能仅适用虚拟账户。", "Potential_Payout": "可能的赔付额", "Only_[_1]_are_allowed_": "只允许 [_1] 。", "Low_Barrier": "低障碍", "Your_trading_statistics_since_[_1]_": "您自 [_1] 至今的交易统计。", "Print_chart": "打印图表", "Predict_the_direction<br_/>and_purchase": "预测价格走向<br />并购入", "login": "登录", "Revoke_access": "撤销访问权限", "Sa": "星期六", "New_Year's_Day": "元旦", "Indices_trading_experience": "指数交易经验", "Sale_Price": "卖出价格", "Duration": "期限", "If_you_need_assistance_feel_free_to_contact_our_[_1]Customer_Support": "如果您需要帮助，请联系我们的 [_1]客服部", "Amount_per_point": "每点之金额", "Your_account_is_not_fully_authenticated_": "您的账户未完成身份验证。", "Sep": "九月", "Feb": "二月", "Jan": "一月", "Your_cashier_is_locked_as_per_your_request_-_to_unlock_it,_please_enter_the_password_": "根据您的请求，您的收银台已被锁定 - 如需解除锁定，请输入密码。", "Login_History": "登录历史", "Explanation": "说明", "Your_[_1]_day_withdrawal_limit_is_currently_[_2]_[_3]_(or_equivalent_in_other_currency)_": "您的 [_1] 天取款限额目前为 [_2] [_3] （或其他货币的等值）。", "Contract_Information": "合约信息", "Stop-loss": "止损", "Please_enter_a_date_that_is_at_least_6_months_from_now_": "请输入至少6个月后的日期。", "Step": "步骤", "email_address": "电子邮件地址", "Credit/Debit": "借方/贷方", "Now": "现在", "Other": "其它", "This_contract_won": "此合约获利", "letters": "信件", "Internal_Audit": "内部审计", "Therefore_your_current_immediate_maximum_withdrawal_(subject_to_your_account_having_sufficient_funds)_is_[_1]_[_2]_(or_equivalent_in_other_currency)_": "因此您当前的即时最高取款额（要求您的账户有充足资金）为[_1] [_2]（或其他等值货币）。", "Exercise_period": "练习期间", "Save_as_CSV": "另存为CSV", "Current_Level": "当前价位", "Processing_your_request___": "您的请求在处理中...", "Tertiary": "三级", "Start_Trading": "开始交易", "All_barriers_in_this_trading_window_are_expired": "此交易窗口的所有障碍已过期", "Please_confirm_the_transaction_details_in_order_to_complete_the_transfer:": "请确认交易详情以完成转账：", "Accounting": "会计", "Exit_Spot_Time": "退市现价时间", "Barrier_offset": "障碍位移", "When_you_click_'Ok'_you_will_be_excluded_from_trading_on_the_site_until_the_selected_date_": "当您点选“Ok”后，您将被禁止在此网站交易，直到选定期限结束为止。", "Are_you_sure_that_you_want_to_permanently_revoke_access_to_application": "确定要永久废除应用程序访问权限吗", "View_your_statement": "查看您的账单", "Resources": "资源", "Please_try_again_": "请重试。", "Withdrawal_for_your_account_is_not_allowed_at_this_moment__Please_contact_[_1]_to_unlock_it_": "您的账户现时无法取款。请联系[_1]进行解锁。", "There_was_a_problem_accessing_the_server_during_purchase_": "买入时服务器访问发生问题。", "Touch/No_Touch": "触及/未触及", "Adjust_trade_parameters": "调整交易参数", "Please_select_a_valid_date": "请选择ั有效日期", "Asset": "资产", "max:_100,000": "最大: 100,000", "We": "星期三", "Tourism": "旅游", "Refresh_page": "更新页面", "Never": "从未", "Fr": "星期五", "A_scanned_copy_of_your_passport,_driving_licence_(provisional_or_full)_or_identity_card,_showing_your_name_and_date_of_birth__Your_document_must_be_valid_for_at_least_6_months_after_this_date_": "显示您名字和出生日期的护照、驾照（临时或永久）或身份证的扫描件。文件须至少6个月有效期（从今天算起）。", "Sorry,_an_error_occurred_while_processing_your_request_": "对不起，您的请求处理发生错误。", "Contract_will_be_sold_at_the_prevailing_market_price_when_the_request_is_received_by_our_servers__This_price_may_differ_from_the_indicated_price_": "合约将在我们服务器收到请求时，以当时的市场价格卖出。此价格可能与报价有差异。", "years": "年", "Therefore_your_current_immediate_maximum_withdrawal_(subject_to_your_account_having_sufficient_funds)_is_[_1]_[_2]_": "因此，您当前可即时提取的最大金额（要求您的帐户有足够资金）为 [_1] [_2]。", "Your_request_to_transfer_[_1]_[_2]_from_[_3]_to_[_4]_has_been_successfully_processed_": "您从 [_3] 转账 [_1][_2] 到 [_4] 的请求已成功处理。", "Your_account_has_no_trading_activity_": "您的账户无交易活动。", "Save_as_PDF": "另存为PDF", "minute": "分钟", "Reference_ID": "参考编号", "Details": "详情", "DevOps_Manager": "DevOps 经理 / 团队领导", "Ok": "确定", "This_contract_lost": "此合约亏损", "There_was_an_error": "出现错误", "Your_changes_have_been_updated_": "您的更改已成功更新。", "Mar": "三月", "Industry_of_Employment": "职业领域", "Pension": "养老金", "Apr": "四月", "This_feature_is_not_relevant_to_virtual-money_accounts_": "此功能不适用于虚拟资金账户。", "Total_Profit/Loss": "利润/亏损合计", "Accounts_And_Payments_Executive": "账户与支付执行员", "Tick": "跳动点", "Closes": "收盘", "Current_Time": "当前时间", "Waiting_for_entry_tick_": "正在等待进场跳动点。", "Insufficient_balance_": "余额不足。", "Mr": "先生", "Stays_In/Goes_Out": "“保持在范围之内/超出范围之外”", "Please_check_the_above_form_for_pending_errors_": "请检查以上表格是否有待定错误。", "Monday": "星期一", "Date_of_Birth": "出生日期", "space": "空间", "Secondary": "次要", "Deposit_of": "存款", "Please_enter_a_number_between_[_1]_": "请输入[_1]之间的数字。", "Enter_the_barrier_in_terms_of_the_difference_from_the_spot_price__If_you_enter_+0_005,_then_you_will_be_purchasing_a_contract_with_a_barrier_0_005_higher_than_the_entry_spot__The_entry_spot_will_be_the_next_tick_after_your_order_has_been_received": "请按与现货价格差额的形式输入障碍水平。如果您输入 +0.005 ，那么您将买入障碍水平比入市现价高 0.005 的合约。入市现价为收到您订单之后的下一个价格", "Purchase_Time": "买入时间", "Income_Source": "收入来源", "Select_market": "选择市场", "Marketing": "市场营销", "Construction": "建筑", "Net_profit": "净收益", "Last_Digit_Prediction": "最后数字的预测", "Entry_Level": "进场价位" };
	texts_json['ZH_TW'] = { "Previous_Day": "前一天", "1-2_years": "1-2 年", "points": "點", "Your_settings_have_been_updated_successfully_": "您的設定已成功更新。", "All_markets_are_closed_now__Please_try_again_later_": "所有市場現已關閉。請稍後重試。", "Password_score_is:_[_1]__Passing_score_is:_20_": "密碼積分是: [_1]。通過積分是: 20。", "Estimated_Net_Worth": "估計淨值", "Thursday": "星期四", "Profit_Table": "利潤表", "Browser": "瀏覽", "Nov": "十一月", "hour": "小時", "Investments_&_Dividends": "投資與分紅", "Forex": "外匯", "Contract_is_not_started_yet": "合約尚未開始", "comma": "逗號", "Reset_Password": "重設密碼", "Compliance_Executive": "法務專員", "An_error_occured_": "發生錯誤。", "April": "四月", "ticks": "跳動點", "Confirm": "確認", "m": "月", "[_1]_Please_click_the_link_below_to_restart_the_password_recovery_process__If_you_require_further_assistance,_please_contact_our_Customer_Support_": "[_1] 請點選以下連結重啟密碼恢復過程。如需要幫助，請聯繫我們的客服部。", "Other_financial_instruments_trading_frequency": "其他金融工具交易頻率", "Invalid_amount,_minimum_is": "無效金額，最小是", "Barrier_Change": "障礙變更", "apostrophe": "單引號", "You_have_already_withdrawn_the_equivalent_of_[_1]_[_2]_in_aggregate_over_the_last_[_3]_days_": "過去 [_3] 天裡您已累計提取 [_1] [_2] 的等值。", "Next": "下一頁", "Quantitative_Developer": "量化開發員", "Friday": "星期五", "Low_Barrier": "低障礙", "Your_trading_statistics_since_[_1]_": "您自 [_1] 至今的交易統計。", "login": "登入", "Predict_the_direction<br_/>and_purchase": "預測價格走向<br />並購入", "Print_chart": "列印圖表", "Revoke_access": "撤銷存取權限", "Sa": "星期六", "New_Year's_Day": "新年", "Unlock_Cashier": "解鎖收銀台", "Affiliate": "聯盟", "Start_Time": "開始時間", "Low_Barrier_([_1])": "低障礙 ([_1])", "Name": "姓名", "Senior_Front-End_Developer": "高級前端開發人員", "Verification_code_format_incorrect_": "驗證碼格式不正確。", "Potential_Payout": "可能的賠付額", "Sorry,_this_feature_is_available_to_virtual_accounts_only_": "對不起，此功能僅適用虛擬帳戶。", "Only_[_1]_are_allowed_": "只允許 [_1] 。", "Your_[_1]_day_withdrawal_limit_is_currently_[_2]_[_3]_(or_equivalent_in_other_currency)_": "您的 [_1] 天取款限額目前為 [_2] [_3]（或其他貨幣的等值）。", "Contract_Information": "合約確認", "Stop-loss": "止損", "Please_enter_a_date_that_is_at_least_6_months_from_now_": "請輸入至少6個月後的日期。", "Step": "步驟", "Credit/Debit": "借記/貸記", "Now": "現在", "email_address": "電子郵件地址", "letters": "字母", "This_contract_won": "此合約獲利", "Other": "其它", "Therefore_your_current_immediate_maximum_withdrawal_(subject_to_your_account_having_sufficient_funds)_is_[_1]_[_2]_(or_equivalent_in_other_currency)_": "因此您目前的即時最高取款額（要求您的帳戶有充足資金）為 [_1] [_2]（或其他等值貨幣)。", "Internal_Audit": "內部審計", "Indices_trading_experience": "指數交易經驗", "Duration": "期限", "Sale_Price": "賣出價格", "If_you_need_assistance_feel_free_to_contact_our_[_1]Customer_Support": "如果您需要幫助，請聯繫我們的 [_1]客服部", "Amount_per_point": "每點之金額", "Your_account_is_not_fully_authenticated_": "您的帳戶未完成身份驗證。", "Your_cashier_is_locked_as_per_your_request_-_to_unlock_it,_please_enter_the_password_": "根據您的請求，您的收銀台已被鎖定- 如需解除鎖定，請輸入密碼。", "Sep": "九月", "Jan": "一月", "Feb": "二月", "Login_History": "登入歷史", "Explanation": "說明", "Are_you_sure_that_you_want_to_permanently_revoke_access_to_application": "確定要永久廢除應用程式存取權限嗎", "View_your_statement": "檢視您的帳單", "Resources": "資源", "Exercise_period": "練習期間", "Save_as_CSV": "以CSV格式儲存", "Current_Level": "目前價位", "Start_Trading": "開始交易", "Processing_your_request___": "您的要求在處理中...", "Tertiary": "三級", "All_barriers_in_this_trading_window_are_expired": "此交易窗口的所有障礙已過期", "Exit_Spot_Time": "退市現價時間", "Accounting": "會計", "When_you_click_'Ok'_you_will_be_excluded_from_trading_on_the_site_until_the_selected_date_": "當您點選「Ok」後，您將被禁止在此網站交易，直到選定期限結束為止。", "Barrier_offset": "障礙位移", "Please_confirm_the_transaction_details_in_order_to_complete_the_transfer:": "請確認交易詳細資料以完成轉帳：", "We": "星期三", "Refresh_page": "更新頁面", "Tourism": "旅遊", "A_scanned_copy_of_your_passport,_driving_licence_(provisional_or_full)_or_identity_card,_showing_your_name_and_date_of_birth__Your_document_must_be_valid_for_at_least_6_months_after_this_date_": "顯示您名字和出生日期的護照、駕照（臨時或永久）或身份證的掃描件。文件須至少6個月有效期(從今天算起)。", "Sorry,_an_error_occurred_while_processing_your_request_": "對不起，在處理您的請求時發生錯誤。", "Fr": "星期五", "Never": "從未", "Therefore_your_current_immediate_maximum_withdrawal_(subject_to_your_account_having_sufficient_funds)_is_[_1]_[_2]_": "因此您目前的即時最高取款額（要求您的帳戶有充足資金）為[_1] [_2]。", "years": "年", "Contract_will_be_sold_at_the_prevailing_market_price_when_the_request_is_received_by_our_servers__This_price_may_differ_from_the_indicated_price_": "合約將在我們伺服器收到要求時以當時的市場價格賣出。此價格可能會與報價有差異。", "Your_request_to_transfer_[_1]_[_2]_from_[_3]_to_[_4]_has_been_successfully_processed_": "您從[_3] 轉帳[_1][_2] 到[_4] 的要求已成功處理。", "Your_account_has_no_trading_activity_": "您的帳號沒有交易活動。", "Please_try_again_": "請重試。", "Withdrawal_for_your_account_is_not_allowed_at_this_moment__Please_contact_[_1]_to_unlock_it_": "您的帳戶現時無法取款。請聯繫 [_1]進行解鎖。", "Touch/No_Touch": "觸及/未觸及", "There_was_a_problem_accessing_the_server_during_purchase_": "買入時伺服器存取出了問題。", "Adjust_trade_parameters": "調整交易參數", "Please_select_a_valid_date": "請選擇有效日期", "Asset": "資產", "max:_100,000": "最大: 100,000", "Mar": "三月", "Pension": "退休金", "Industry_of_Employment": "職業領域", "Apr": "四月", "This_feature_is_not_relevant_to_virtual-money_accounts_": "此功能不適用於虛擬資金帳戶。", "Total_Profit/Loss": "利潤/虧損合計", "Accounts_And_Payments_Executive": "帳戶和付款執行員", "Current_Time": "目前時間", "Tick": "跳動點", "Closes": "收盤", "Save_as_PDF": "以PDF格式儲存", "minute": "分鐘", "This_contract_lost": "此合約虧損", "Reference_ID": "身份參考號", "Details": "詳細資料", "DevOps_Manager": "DevOps 經理", "Ok": "確定", "There_was_an_error": "出現錯誤", "Your_changes_have_been_updated_": "您的更改已成功更新。", "Enter_the_barrier_in_terms_of_the_difference_from_the_spot_price__If_you_enter_+0_005,_then_you_will_be_purchasing_a_contract_with_a_barrier_0_005_higher_than_the_entry_spot__The_entry_spot_will_be_the_next_tick_after_your_order_has_been_received": "請按與現貨價格差額的形式輸入障礙水平。如果您輸入+0.005 ，那麼您將買入障礙水平比入市現價高0.005 的合約。入市現價為收到您訂單之後的下一個價格", "Please_enter_a_number_between_[_1]_": "請輸入[_1]之間的數字。", "Purchase_Time": "買入時間", "Income_Source": "收入來源", "Select_market": "選擇市場", "Marketing": "市場行銷", "Construction": "建構", "Entry_Level": "進場價位", "Last_Digit_Prediction": "最後數字的預測", "Net_profit": "淨收益", "Waiting_for_entry_tick_": "等待買入價跳動。", "Mr": "先生", "Insufficient_balance_": "餘額不足。", "Please_check_the_above_form_for_pending_errors_": "請檢查以上表格是否有待定錯誤。", "Stays_In/Goes_Out": "「保持在範圍之內/超出範圍之外」", "Monday": "星期一", "Deposit_of": "存款", "space": "空間", "Date_of_Birth": "出生日期", "Secondary": "次要", "There_was_a_problem_validating_your_personal_details__Please_fix_the_fields_[_1]here": "您的個人資料驗證出了問題。請在此更正 [_1]欄位", "Stop-type": "停止類型", "Keep_track_of_your_authorised_applications_": "跟蹤您的授權應用程式。", "No_Live_price_update": "無即時價格更新", "Sorry,_your_account_is_not_authorised_for_any_further_contract_purchases_": "對不起，您的帳戶沒有進一步買入任何合約的權限。", "Shop": "商店", "Financial_Assessment": "金融評估", "hours": "小時", "Finish": "完成", "Year": "年", "Fridays": "星期五", "Sale_Date": "賣出日期", "Balance": "餘額", "Closes_early_(at_18:00)": "收盤提前（至18:00）", "Date_(GMT)": "日期（格林尼治標準時間）", "To": "到", "0-1_year": "0-1 年", "password": "密碼", "Contract_purchased_with_app_ID": "以應用程式ID買入合約", "Exit_Spot": "退市現價", "Binary_options_or_other_financial_derivatives_trading_frequency": "二元期權或其它金融衍生品交易頻率", "When_you_click_\"Ok\"_you_will_be_excluded_from_trading_on_the_site_until_the_selected_date_": "當您點選「Ok」後，您將被禁止在此網站交易，直到選定期限結束為止。", "Verification_Token": "驗證權杖", "Remaining_Time": "剩餘時間", "h": "小時", "Only_2_decimal_points_are_allowed_": "只允許小數點后兩位。", "Your_current_balance_is": "您目前餘額有", "Weekday": "交易日", "Minimum_of_[_1]_characters_required_": "需至少[_1] 個字元。", "Please_check_your_email_to_retrieve_the_token_needed_to_reset_your_password_": "請檢查您的電郵領取重設密碼所需的權杖編號。", "Delete": "刪除", "40_transactions_or_more_in_the_past_12_months": "過去12個月內40次交易或以上", "This_is_a_staging_server_-_For_testing_purposes_only": "這是分期伺服器，僅用於測試目的", "Su": "星期日", "Your_details_have_been_updated_": "您的個人資訊已成功更新。", "Closed": "已收盤", "Please_select": "請選擇", "You_did_not_change_anything_": "您沒做任何更改。", "Random": "隨機", "Short": "短倉", "New_Password": "新密碼", "seconds": "秒", "Adjusted_High_Barrier": "經調整高障礙", "Quantitative_Analyst": "量化分析員", "Back": "返回", "Less_than_$25,000": "少於$25,000", "Settings": "設定", "Not": "不", "High_Barrier": "高障礙", "Your_account_is_currently_suspended__Only_withdrawals_are_now_permitted__For_further_information,_please_contact_[_1]_": "您的帳戶已被暫時禁用。現僅允許取款。欲知詳情，請聯繫[_1]。", "Th": "星期四", "Jump_To": "跳至", "Please_[_1]_to_view_this_page": "要查看此頁面，請 [_1] t", "High_barrier": "高障礙", "Deposits_and_withdrawal_for_your_account_is_not_allowed_at_this_moment__Please_contact_[_1]_to_unlock_it_": "您的帳戶現時無法存取款。請聯繫 [_1]進行解鎖。", "Commodities_trading_experience": "商品交易經驗", "Dec": "十二月", "PM": "下午", "Payout": "賠付", "Marketing_Project_Manager": "市場行銷項目經理", "Your_session_duration_limit_will_end_in_[_1]_seconds_": "交易期持續時間限制將於[_1]秒內結束。", "Purchase": "買入", "Other_financial_instruments_trading_experience": "其它金融工具交易經驗", "Primary": "主要", "Period": "週期", "Note": "備註", "Please_choose_which_currency_you_would_like_to_transact_in_": "請選擇您想要交易的外匯。", "Confirm_New_Password": "確認新密碼", "Current": "目前", "Please_confirm_the_trade_on_your_statement_before_proceeding_": "繼續操作前，請在您的聲明上確認此項交易。", "Upgrade_to_a_Real_Account": "升級到真實帳戶", "Social_Media_Executive": "社交媒體專員", "Save_as_JPEG": "以JPEG格式儲存", "Transfer_to": "轉給", "Please_select_at_least_one_scope": "請選擇至少一個範圍", "today": "今天", "May": "五月", "We_are_not_able_to_stream_live_prices_at_the_moment__To_enjoy_live_streaming_of_prices_try_refreshing_the_page,_if_you_get_this_issue_after_repeated_attempts_try_a_different_browser": "目前我們不能夠串流即時價格。要獲得價格的即時串流請試重新整理頁面，如果經過反复嘗試還是存在此問題，請換一個瀏覽器", "Contract_Sold": "售出合約", "Your_withdrawal_limit_is_[_1]_[_2]_(or_equivalent_in_other_currency)_": "您的取款限額為 [_1] [_2]（或其他貨幣的等值）。", "Administrator": "管理員", "Charting_for_this_underlying_is_delayed": "此標的資產的圖表資料已延遲", "Please_deposit_before_transfer_to_client_": "給客戶轉帳前請先存款。", "Chart": "圖表", "Asset_Index": "資產指數", "Upgrade_to_a_Financial_Account": "升級到金融帳戶", "Your_provided_email_address_is_already_in_use_by_another_Login_ID__According_to_our_terms_and_conditions,_you_may_only_register_once_through_our_site__If_you_have_forgotten_the_password_of_your_existing_account,_please_<a_href=\"[_1]\">try_our_password_recovery_tool</a>_or_contact_customer_service_": "您所輸入的電郵地址已經被另外的登入ID使用。根據我們的使用條款和條件，您只能在我們的網站註冊一次。如果您忘記了目前帳戶的密碼，請<a href=\"[_1]\">嘗試我們的密碼復原工具</a>或聯繫我們的客服人員。", "year": "年", "Description": "描述", "Profit/Loss": "利潤/虧損", "The_financial_trading_services_contained_within_this_site_are_only_suitable_for_customers_who_are_able_to_bear_the_loss_of_all_the_money_they_invest_and_who_understand_and_have_experience_of_the_risk_involved_in_the_acquistion_of_financial_contracts__Transactions_in_financial_contracts_carry_a_high_degree_of_risk__If_purchased_contracts_expire_worthless,_you_will_suffer_a_total_loss_of_your_investment,_which_consists_of_the_contract_premium_": "本網站所涵蓋的金融交易服務僅適合這樣的客戶：能夠承受全部投入資金虧損的風險，了解購買金融合約所蘊含的風險並擁有相關的風險經歷。金融合約交易涉及很大的風險。如果所購買的合約到期時一文不值，您的投資將完全損失，其中還包括合約費用。", "You_need_to_finish_all_20_questions_": "必須答覆全部20個問題。", "Entry_Spot": "入市現價", "New_token_created_": "已建立新權杖。", "Exclude_time_must_be_after_today_": "禁止時間必須在今日之後。", "Your_account_has_no_Login/Logout_activity_": "您的帳戶沒有登入/登出活動。", "Exit_spot": "退市現價", "Over_3_years": "3年以上", "Sell": "賣出", "Long": "長倉", "Once_you_click_the_'Submit'_button,_the_funds_will_be_withdrawn_from_your_account_and_transferred_to_your_Client's_account_": "一旦您點擊「送出」按鈕，資金將從您的帳戶取出並轉至您客戶的帳戶。", "End_Time": "結束時間", "is_required__Current_spread": "為必要。目前價差", "Terms_&_Conditions": "條款和條件", "Original_Barrier": "原障礙", "today,_Fridays": "今天、週五", "Return": "回報", "(Bejing/CST_-8_hours)": "（北京/CST -8 小時）", "Day": "天", "Password_is_moderate": "密碼安全級適中", "Contract_Confirmation": "合約確認", "Stop_Loss_Level": "止損價位", "From": "來自", "Exit_Level": "退出價位", "Aug": "八月", "[ctx,minimum_duration,_for_example_minimum_15_seconds]min": "分鐘", "Christmas_Day": "聖誕節", "Failed_to_update_trade_description_": "無法更新交易描述。", "August": "八月", "Virtual_Account": "虛擬帳戶", "Open_a_Financial_Account": "開設金融帳戶", "Sorry,_this_feature_is_not_available_": "對不起，此功能不可用。", "Last_digit_stats_for_the_latest_[_1]_ticks_on_[_2]": "顯示 [_2] 最新 [_1] 跳點之最後統計數字", "minimum_available_duration": "最短可用期限", "Week_of": "週", "Upcoming_Events": "未來事件", "Portfolio": "投資組合", "Select_your_trade_type": "選取交易類型", "You_have_already_withdrawn_[_1]_[_2]_": "您已提取 [_1] [_2]。", "Please_check_your_email_for_the_value_of_this_token": "請檢查您的電郵領取此權杖編號", "Adjusted_Low_Barrier": "經調整低障礙", "Quantitative_Analysis": "量化分析", "Indicative": "指示性", "Marketing_Executives": "市場行銷專員", "loading___": "載入中……", "End_time_must_be_after_start_time_": "結束時間必須開始時間之後。", "Up/Down": "漲/跌", "Quality_Assurance": "品質保證", "Please_enter_a_number_greater_or_equal_to_[_1]_": "請輸入大於或相等於[_1]之數字。", "Your_transaction_reference_number_is_[_1]": "您的交易號是 [_1]", "New_password_is_same_as_old_password_": "新密碼與舊密碼相同。", "This_contract_can_not_be_traded_in_the_final_2_minutes_before_settlement": "此合約不能在結算前最後2分鐘內交易", "Select_your_underlying_asset": "選擇標的資產", "period": "週期", "Saturday": "星期六", "Investment_Account": "投資帳戶", "month": "月份", "Password_must_contains_at_least_1_digit,_1_uppercase_letter_and_1_lowercase_letter_": "密碼必須包含至少1數字、1大寫字母和1小寫字母。", "numbers": "號碼", "Your_cashier_is_locked_as_per_your_request_-_to_unlock_it,_please_click_[_1]here": "根據您的要求，您的收銀台已被鎖定- 如需解除鎖定，請點選此處", "Please_follow_the_pattern_3_numbers,_a_dash,_followed_by_4_numbers_": "請依照此模式:3個數字，一破折號，接着是4個數字。", "Mrs": "夫人", "This_symbol_is_not_active__Please_try_another_symbol_": "這是個非活躍符號。請試用另一符號。", "Global_Customer_Service_Representatives": "全球客戶服務代表", "Barrier_([_1])": "障礙 ([_1])", "Invalid_email_address": "無效的電子郵件地址", "Low_barrier": "低障礙", "Permissions": "權限", "minutes": "分鐘", "Password": "密碼", "Purchase_Price": "買入價格", "You_have_sold_this_contract_at_[_1]_[_2]": "您已經以 [_1] [_2] 賣出此合約", "The_maximum_number_of_tokens_([_1])_has_been_reached_": "已達權杖 ([_1]) 最大限數。", "IP_Address": "IP地址", "Withdrawal": "提款", "Your_Client_will_receive_an_email_notification_informing_him/her_that_the_transfer_has_been_processed_": "您的客戶將收到電子郵件通知，告知其轉帳交易已處理。", "min:_1,000": "最小: 1,000", "Try_adding_more_letters_": "試新增更多字母。", "Please_select_a_value": "請選擇一個數值", "Due_to_recent_changes_in_the_regulations,_we_are_required_to_ask_our_clients_to_complete_the_following_Financial_Assessment__Please_note_that_you_will_not_be_able_to_continue_trading_until_this_is_completed_": "由於最近的法規變更，客戶必須填寫以下金融評估。您須填寫完成才能繼續交易。", "This_field_is_required_": "此為必填欄位。", "Sell_at_market": "按市價賣出", "Exclude_time_cannot_be_less_than_6_months_": "禁止時間不能少於6個月。", "Hour": "小時", "Your_password_cannot_be_the_same_as_your_email": "您的密碼不可與電子郵件相同", "Cashier": "收銀台", "Month": "月份", "Original_Low_Barrier": "原低障礙", "Password_Reset": "重設密碼", "Authorise_your_account_": "入您的帳戶。", "The_server_<a_href=\"[_1]\">endpoint</a>_is:_[_2]": "伺服器<a href=\"[_1]\">終端</a>是: [_2]", "Walkthrough_Guide": "攻略指南", "Your_token_has_expired__Please_click_<a_class=\"pjaxload\"_href=\"[_1]\">here</a>_to_restart_the_verification_process_": "您的權杖已過期。請點選<a class=\"pjaxload\" href=\"[_1]\">此處</a>重啟驗證程序。", "Deposit_[_1]_[_2]_virtual_money_into_your_account_[_3]": "將 [_1] [_2] 虛擬資金存入您的帳戶[_3]", "Lock_Cashier": "鎖定收銀台", "You_have_already_withdrawn_the_equivalent_of_[_1]_[_2]_": "您已提取 [_1] [_2] 的等值。", "Oct": "十月", "June": "六月", "Opens": "開盤", "Profit": "利潤", "Stake": "投注資金", "Sorry,_account_signup_is_not_available_in_your_country__Please_contact_<a_href=\"[_1]\">customer_support</a>_for_more_information_": "對不起，您的國家不能註冊帳戶。欲知詳細資訊，請聯繫<a href=\"[_1]\">客服部</a>。", "Closes_early_(at_21:00)": "收盤提前（至21:00）", "Withdraw": "取款", "details": "詳細資料", "hyphen": "連字號", "Total_Cost": "成本總計", "Even/Odd": "偶/奇", "Please_fill_in_the_Login_ID_and_Amount_you_wish_to_transfer_to_your_Client_in_the_form_below:": "請在下表中填寫登入ID 以及您希望轉給客戶的金額：", "Previous": "之前", "My_Account": "我的帳戶", "Rise/Fall": "「上漲/下跌」合約", "not_available": "不可使用", "Human_Resources": "人力資源", "Please_enter_a_number_between_0_and_[_1]": "請輸入0和[_1]之間的數字", "Commodities_trading_frequency": "商品交易頻率", "There_was_some_invalid_character_in_an_input_field_": "某字欄的輸入字元無效。", "Over/Under": "大於/小於", "Next_Day": "第二天", "Settles": "結算", "Please_submit_a_valid_[_1]_": "請提交有效的 [_1]。", "[_1]_has_updated_its_[_2]__By_clicking_OK,_you_confirm_that_you_have_read_and_accepted_the_updated_[_2]_": "[_1]已經更新了其[_2]條款和條件。通過點選OK按鈕，您確定已經閱讀和接受此更新[_2]條款和條件。", "day": "天", "Password_is_very_strong": "密碼安全度很高", "Sorry,_you_have_entered_an_incorrect_cashier_password": "對不起，您輸入的收銀台密碼不正確", "Login_ID": "登入 ID", "Spot": "現價", "Higher/Lower": "「高於/低於」", "Barrier": "障礙", "Try_adding_more_numbers_": "試新增更多數字。", "This_contract_was_affected_by_a_Corporate_Action_event_": "該合約已受共同決議事件影響。", "Never_Used": "從未使用過", "Administrative_Executive": "行政專員", "You_should_enter_between_[_1]_characters_": "您最多只能輸入 [_1] 個字元。", "End_time": "結束時間", "Invalid_amount,_maximum_is": "無效金額，最大是", "Forex_trading_frequency": "外匯交易頻率", "Ends_In/Out": "收盤價在「範圍之內/之外」", "Status": "狀況", "Your_request_to_withdraw_[_1]_[_2]_from_your_account_[_3]_to_Payment_Agent_[_4]_account_has_been_successfully_processed_": "您從 [_3] 帳戶提取[_1] [_2] 到付款代理 [_4] 帳戶的要求已成功處理。", "You_have_not_granted_access_to_any_applications_": "您未獲權限存取任何應用程式。", "Self-Employed": "自雇者", "Please_enter_an_integer_value": "請輸入整數", "Finance": "金融", "Matches/Differs": "相符/差異", "Prices": "價格", "Open": "開盤", "Start_time": "開始時間", "Your_account_is_fully_authenticated_and_your_withdrawal_limits_have_been_lifted_": "您的帳戶已經得到完全驗證，且您的取款限額已經取消。", "Save_as_PNG": "以PNG格式儲存", "Remaining_time": "剩餘時間", "Internal_Auditor": "內部審計員", "Potential_Profit": "潛在利潤", "Please_wait_<br_/>Your_request_is_being_processed_": "請稍候。 <br />您的要求正在處理中。", "This_contract_has_LOST": "此合約輸了", "min": "最小", "Japan": "日本", "Date": "日期", "Authenticate": "驗證", "March": "三月", "Stocks_trading_frequency": "股票交易頻率", "Applications": "應用程式", "Low_barrier_offset": "低障礙位移", "Password_should_have_lower_and_uppercase_letters_with_numbers_": "密碼須包含大小寫字母與數字。", "Try_adding_more_letters_or_numbers_": "請試新增字母或數字。", "Market_is_closed__Please_try_again_later_": "市場已關閉。請稍後重試。", "The_two_passwords_that_you_entered_do_not_match_": "兩次輸入的密碼不相符。", "Sorry,_an_error_occurred_while_processing_your_account_": "對不起，在處理您的帳戶時出錯。", "week": "週", "February": "二月", "Less_than_$100,000": "少於$100,000", "Graphic_Designers": "平面設計師", "Ms": "女士", "December": "十二月", "Amount": "金額", "Quality_Assurance_Engineer": "品質保證工程師", "Statement": "帳單", "Over_$1,000,000": "大於$1,000,000", "Corporate_Action": "共同決議", "Buy": "買入", "Compliance": "法律事務", "Password_is_strong": "密碼安全度高", "You_must_accept_the_terms_and_conditions_to_open_an_account_": "您必須接受條款和條件才能開戶。", "The_Payment_Agent_facility_is_currently_not_available_in_your_country_": "目前您的國家無可用付款代理設施。", "Contract_Expiry": "合約已到期", "High_Barrier_([_1])": "高障礙([_1])", "Human_Resource_Executive": "人力資源專員", "Last_Used": "最近一次使用", "An_additional_password_can_be_used_to_restrict_access_to_the_cashier_": "可使用額外密碼來限制對收銀台的存取。", "Today": "今天", "second": "秒", "Country_Manager": "區域經理", "October": "十月", "Old_password_is_wrong_": "舊密碼不正確。", "November": "十一月", "Stocks_trading_experience": "股票交易經驗", "We_are_not_accepting_accounts_from_residents_of_this_country_at_the_present_time_": "目前不接受來自該國居民的帳戶。", "This_contract_has_WON": "此合約贏了", "Connection_error:_Please_check_your_internet_connection_": "連接錯誤:請檢查您的網絡連接。", "Forex_trading_experience": "外匯交易經驗", "months": "月份", "Original_High_Barrier": "原高障礙", "Please_complete_the_following_financial_assessment_form_before_continuing_": "繼續操作前請填寫以下財務評估表格。", "September": "九月", "Education": "教育", "Transaction_performed_by_[_1]_(App_ID:_[_2])": "交易執行者為[_1] (應用程式 ID: [_2])", "Save_as_SVG": "以SVG格式儲存", "In/Out": "「範圍之內/之外」", "Your_Application_is_Being_Processed_": "您的申請已經處理完成。", "Update": "更新", "Jun": "六月", "Transfer_to_Login_ID": "轉給登入 ID", "Are_you_sure_that_you_want_to_permanently_delete_token": "確定要永久刪除權杖嗎", "Trading_Times": "交易時間", "Please_log_in_": "請登入。", "Points": "點", "Senior_Perl_Developer": "高級 Perl 開發人員", "Number_of_ticks": "跳動點數目", "Information_Technology": "資訊技術", "Jul": "七月", "Time_is_in_the_wrong_format_": "時間格式錯誤。", "Sunday": "星期日", "Zoom": "縮放", "Action": "動作", "{JAPAN_ONLY}Trading_Period": "{JAPAN ONLY}Trading Guide", "Over_$500,001": "大於$500,001", "Loss": "虧損", "Contract_ID": "合約編號", "6-10_transactions_in_the_past_12_months": "過去12個月內6-10次交易", "Anti-Fraud_Officer": "反欺詐專員", "Failed_to_reset_password__[_1],_please_retry_": "無法重設密碼。[_1]，請重試。", "Please_input_a_valid_date": "請輸入有效日期", "Tuesday": "星期二", "Resale_not_offered": "不提供轉售", "Last_Digit_Stats": "最後數字的統計資料", "Password_is_not_strong_enough_": "密碼安全度不夠。", "Price": "價格", "Level_of_Education": "教育水平", "Sell_time": "賣出時間", "Invalid_date_of_birth_": "出生日期無效。", "Our_site_does_not_charge_any_transfer_fees_": "我們網站不收取任何轉帳費用。", "mins": "分鐘", "Sorry,_account_opening_is_unavailable_": "對不起，不可開立帳號。", "Password_is_weak": "密碼安全度低", "For_added_security,_please_check_your_email_to_retrieve_the_verification_token_": "為提高安全保障，請檢視郵件並提取驗證權杖。", "[_1]_[_2]_has_been_credited_to_your_Virtual_money_account_[_3]": " [_1] [_2]已記入您的虛擬資金帳戶 [_3]", "Salaried_Employee": "支薪員工", "Token": "權杖", "Miss": "遺漏", "Exclude_time_cannot_be_for_more_than_5_years_": "禁止時間不能超過5年。", "Deposit": "存款", "Please_select_a_payment_agent": "請選擇付款代理", "Net_Annual_Income": "年淨收入", "Translator": "翻譯員", "There_was_a_problem_accessing_the_server_": "伺服器存取出了問題。", "Indices_trading_frequency": "指數交易頻率", "Contract": "合約", "Mo": "星期一", "High_barrier_offset": "高障礙位移", "Binary_options_or_other_financial_derivatives_trading_experience": "二元期權或其他金融衍生品交易經驗", "Failed": "失敗", "Please_enter_a_valid_amount_": "請輸入有效金額。", "Health": "健康", "Gaming_Account": "博彩帳戶", "Profit/Loss_(points)": "利潤/虧損(點)", "AM": "上午", "Your_transaction_reference_is": "您的交易參考號是", "Real_Account": "真實帳戶", "Session_duration_limit_cannot_be_more_than_6_weeks_": "交易期持續時間限制不能大於6週。", "Equals": "等於", "Spot_Time": "現貨時間", "Tu": "星期二", "Password_does_not_match_": "密碼不相符。", "Target": "目標", "0-5_transactions_in_the_past_12_months": "過去12個月內0-5次交易", "verification_token": "驗證權杖", "Waiting_for_exit_tick_": "等待賣出價跳動。", "Format:_yyyy-mm-dd_(not_required_for_virtual-money_accounts)": "格式:年-月-日(虛擬資金帳戶不需要)", "Adjusted_Barrier": "經調整障礙", "July": "七月", "Date_and_Time": "日期和時間", "Select_your_market": "選擇您的市場", "days": "天", "Successful": "成功", "Stop_Profit_Level": "止盈價位", "Entry_spot": "入市現價", "Copywriter": "文案", "Your_withdrawal_limit_is_[_1]_[_2]_": "您的取款限額是[_1] [_2]。", "Minute": "分鐘", "View": "檢視", "January": "一月", "Your_password_has_been_successfully_reset__Please_log_into_your_account_using_your_new_password_": "您的密碼已成功重設。請用新密碼登入您的帳戶。", "Proofreader": "校對員", "Major_Pairs": "主要貨幣對", "Ref_": "參考", "weeks": "週", "Questions": "問題", "Wednesday": "星期三" };

	module.exports = {
	    texts_json: texts_json
	};

/***/ },
/* 425 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Content = __webpack_require__(426).Content;
	var localize = __webpack_require__(423).localize;
	var elementTextContent = __webpack_require__(420).elementTextContent;
	var elementInnerHtml = __webpack_require__(420).elementInnerHtml;

	var Validate = function () {
	    var errorCounter = 0;

	    // give DOM element of error to display
	    var displayErrorMessage = function displayErrorMessage(error) {
	        error.setAttribute('style', 'display:block');
	    };

	    // give DOM element or error to hide
	    var hideErrorMessage = function hideErrorMessage(error) {
	        error.setAttribute('style', 'display:none');
	        var errorMessage = $('.error-message-password');
	        if (errorMessage) {
	            errorMessage.remove();
	        }
	    };

	    var handleError = function handleError(error, message) {
	        var par = document.createElement('p'),
	            re = new RegExp(message);
	        var allText = '';
	        par.className = 'error-message-password';
	        var parClass = $('.' + par.className);
	        if (parClass.length > 1) {
	            for (var i = 0; i < parClass.length; i++) {
	                allText += parClass[i].textContent;
	            }
	            if (!re.test(allText)) {
	                elementInnerHtml(par, par.innerHTML + ' ' + message);
	            }
	        } else {
	            elementInnerHtml(par, message);
	        }
	        error.appendChild(par);
	        displayErrorMessage(error);
	    };

	    // check validity of token
	    var validateToken = function validateToken(token) {
	        return token.length === 48;
	    };

	    // give error message for invalid email, needs DOM element of error and value of email
	    var errorMessageEmail = function errorMessageEmail(email, error) {
	        if (email === '') {
	            elementTextContent(error, Content.errorMessage('req'));
	            displayErrorMessage(error);
	            return true;
	        } else if (!validateEmail(email)) {
	            elementTextContent(error, Content.errorMessage('valid', localize('email address')));
	            displayErrorMessage(error);
	            return true;
	        }
	        hideErrorMessage(error);
	        return false;
	    };

	    // give error message for invalid verification token, needs DOM element of error and value of verification token
	    var errorMessageToken = function errorMessageToken(token, error) {
	        if (token === '') {
	            elementTextContent(error, Content.errorMessage('req'));
	            displayErrorMessage(error);
	            return true;
	        } else if (!validateToken(token)) {
	            elementTextContent(error, Content.errorMessage('valid', localize('verification token')));
	            displayErrorMessage(error);
	            return true;
	        }
	        hideErrorMessage(error);
	        return false;
	    };

	    var passwordNotEmpty = function passwordNotEmpty(password, error) {
	        if (!/^.+$/.test(password)) {
	            handleError(error, Content.errorMessage('req'));
	            return errorCounter++;
	        }
	        return true;
	    };

	    var fieldNotEmpty = function fieldNotEmpty(field, error) {
	        if (!/^.+$/.test(field)) {
	            elementTextContent(error, Content.errorMessage('req'));
	            displayErrorMessage(error);
	            return errorCounter++;
	        }
	        return true;
	    };

	    var passwordMatching = function passwordMatching(password, rPassword, rError) {
	        if (password !== rPassword) {
	            elementTextContent(rError, Content.localize().textPasswordsNotMatching);
	            displayErrorMessage(rError);
	            return errorCounter++;
	        }
	        return true;
	    };

	    var passwordLength = function passwordLength(password, error) {
	        if (password.length < 6 || password.length > 25) {
	            handleError(error, Content.errorMessage('range', '6-25'));
	            return errorCounter++;
	        }
	        return true;
	    };

	    var passwordChars = function passwordChars(password, error) {
	        if (/[0-9]+/.test(password) && /[A-Z]+/.test(password) && /[a-z]+/.test(password)) {
	            return true;
	        }
	        handleError(error, localize('Password should have lower and uppercase letters with numbers.'));
	        return errorCounter++;
	    };

	    var isPasswordValid = function isPasswordValid(password, error) {
	        if (!/^[!-~]+$/.test(password)) {
	            handleError(error, Content.errorMessage('valid', Content.localize().textPassword));
	            return errorCounter++;
	        }
	        return true;
	    };

	    // give error message for invalid password, needs value of password, repeat of password, and DOM element of error
	    /**
	     *
	     * @param password      password
	     * @param rPassword     confirm password
	     * @param error         dom to show error for password (not jquery!)
	     * @param rError        dom to show error for confirm password (not jquery!)
	     * @returns {boolean}
	       */
	    var errorMessagePassword = function errorMessagePassword(password, rPassword, error, rError) {
	        hideErrorMessage(error);
	        hideErrorMessage(rError);
	        errorCounter = 0;

	        if (passwordNotEmpty(password, error) === true) {
	            passwordLength(password, error);
	            passwordChars(password, error);
	            isPasswordValid(password, error);
	            if (fieldNotEmpty(rPassword, rError) === true) {
	                passwordMatching(password, rPassword, rError);
	            }
	        } else {
	            fieldNotEmpty(rPassword, rError);
	        }
	        return errorCounter === 0;
	    };

	    var errorMessageResidence = function errorMessageResidence(residence, error) {
	        hideErrorMessage(error);
	        if (residence === '') {
	            elementTextContent(error, Content.errorMessage('req'));
	            displayErrorMessage(error);
	            return true;
	        }
	        return false;
	    };

	    return {
	        displayErrorMessage: displayErrorMessage,
	        hideErrorMessage: hideErrorMessage,
	        errorMessageEmail: errorMessageEmail,
	        errorMessagePassword: errorMessagePassword,
	        fieldNotEmpty: fieldNotEmpty,
	        errorMessageResidence: errorMessageResidence,
	        errorMessageToken: errorMessageToken
	    };
	}();

	function validateEmail(mail) {
	    return (/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,63}$/.test(mail)
	    );
	}

	function passwordValid(password) {
	    if (password.length > 25) {
	        return false;
	    }

	    var r = /^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{6,25}$/;
	    return r.test(password);
	}

	/**
	 * Use this if you want to separate validation logic with UI
	 * Use Validate.errorMessagePassword if you want to handle UI with validation together
	 * @param password      password
	 * @returns {Array}     array of error message, can be empty
	 */
	function showPasswordError(password) {
	    var errMsgs = [];
	    if (password.length < 6 || password.length > 25) {
	        errMsgs.push(Content.errorMessage('range', '6-25'));
	    }

	    var hasUpperLowerDigitRegex = /(?=.*\d)(?=.*[a-z])(?=.*[A-Z])/;
	    if (!hasUpperLowerDigitRegex.test(password)) {
	        errMsgs.push(localize('Password should have lower and uppercase letters with numbers.'));
	    }

	    return errMsgs;
	}

	module.exports = {
	    Validate: Validate,
	    validateEmail: validateEmail,
	    passwordValid: passwordValid,
	    showPasswordError: showPasswordError
	};

/***/ },
/* 426 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var template = __webpack_require__(419).template;
	var localize = __webpack_require__(423).localize;
	var selectorExists = __webpack_require__(420).selectorExists;

	var Content = function () {
	    'use strict';

	    var localized = {};

	    var populate = function populate() {
	        localized = {
	            textStartTime: 'Start time',
	            textSpot: 'Spot',
	            textBarrier: 'Barrier',
	            textBarrierOffset: 'Barrier offset',
	            textHighBarrier: 'High barrier',
	            textHighBarrierOffset: 'High barrier offset',
	            textLowBarrier: 'Low barrier',
	            textLowBarrierOffset: 'Low barrier offset',
	            textPayout: 'Payout',
	            textStake: 'Stake',
	            textPurchase: 'Purchase',
	            textDuration: 'Duration',
	            textEndTime: 'End Time',
	            textDurationSeconds: 'seconds',
	            textDurationMinutes: 'minutes',
	            textDurationHours: 'hours',
	            textDurationDays: 'days',
	            textDurationTicks: 'ticks',
	            textMinDuration: 'min',
	            textMinDurationTooltip: 'minimum available duration',
	            textBarrierOffsetTooltip: 'Enter the barrier in terms of the difference from the spot price. If you enter +0.005, then you will be purchasing a contract with a barrier 0.005 higher than the entry spot. The entry spot will be the next tick after your order has been received',
	            textIndicativeBarrierTooltip: 'This is an indicative barrier. Actual barrier will be the entry spot plus the barrier offset.',
	            textContractConfirmationHeading: 'Contract Confirmation',
	            textContractConfirmationReference: 'Your transaction reference is',
	            textContractConfirmationBalance: 'Account balance:',
	            textContractConfirmationButton: 'View',
	            textContractConfirmationPayout: 'Potential Payout',
	            textContractConfirmationCost: 'Total Cost',
	            textContractConfirmationProfit: 'Potential Profit',
	            textFormRiseFall: 'Rise/Fall',
	            textFormHigherLower: 'Higher/Lower',
	            textFormUpDown: 'Up/Down',
	            textFormInOut: 'In/Out',
	            textFormMatchesDiffers: 'Matches/Differs',
	            textFormEvenOdd: 'Even/Odd',
	            textFormOverUnder: 'Over/Under',
	            textContractPeriod: 'Period',
	            textPredictionLabel: 'Last Digit Prediction',
	            textTickResultLabel: 'Tick',
	            textAmountPerPoint: 'Amount per point',
	            textStopLoss: 'Stop-loss',
	            textStopProfit: 'Stop-profit',
	            textStopType: 'Stop-type',
	            textStopTypePoints: 'Points',
	            textSpreadTypeLong: 'Long',
	            textSpreadTypeShort: 'Short',
	            textSpreadDepositComment: 'Deposit of',
	            textSpreadRequiredComment: 'is required. Current spread',
	            textSpreadPointsComment: 'points',
	            textContractStatusWon: 'This contract won',
	            textContractStatusLost: 'This contract lost',
	            textNow: 'Now',
	            textDate: 'Date',
	            textPurchaseDate: 'Date (GMT)',
	            textPurchasePrice: 'Purchase Price',
	            textStatement: 'Statement',
	            textProfitTable: 'Profit Table',
	            textRef: 'Ref.',
	            textAction: 'Action',
	            textDescription: 'Description',
	            textCreditDebit: 'Credit/Debit',
	            textBalance: 'Balance',
	            textDetails: 'Details',
	            textContract: 'Contract',
	            textSaleDate: 'Sale Date',
	            textSalePrice: 'Sale Price',
	            textBuyPrice: 'Buy price',
	            textFinalPrice: 'Final price',
	            textLoss: 'Loss',
	            textReturn: 'Return',
	            textNetProfit: 'Net profit',
	            textProfit: 'Profit',
	            textProfitLoss: 'Profit/Loss',
	            textTotalProfitLoss: 'Total Profit/Loss',
	            textUpcomingEvents: 'Upcoming Events',
	            textAsset: 'Asset',
	            textOpens: 'Opens',
	            textCloses: 'Closes',
	            textSettles: 'Settles',
	            textAuthenticatedWithdrawal: 'Your account is fully authenticated and your withdrawal limits have been lifted.',
	            textWithdrawalLimits: 'Your withdrawal limit is [_1] [_2].',
	            textWithdrawalLimitsEquivalant: 'Your withdrawal limit is [_1] [_2] (or equivalent in other currency).',
	            textWithrawalAmount: 'You have already withdrawn [_1] [_2].',
	            textWithrawalAmountEquivalant: 'You have already withdrawn the equivalent of [_1] [_2].',
	            textCurrentMaxWithdrawal: 'Therefore your current immediate maximum withdrawal (subject to your account having sufficient funds) is [_1] [_2].',
	            textCurrentMaxWithdrawalEquivalant: 'Therefore your current immediate maximum withdrawal (subject to your account having sufficient funds) is [_1] [_2] (or equivalent in other currency).',
	            textWithdrawalLimitsEquivalantDay: 'Your [_1] day withdrawal limit is currently [_2] [_3] (or equivalent in other currency).',
	            textWithrawalAmountEquivalantDay: 'You have already withdrawn the equivalent of [_1] [_2] in aggregate over the last [_3] days.',
	            textMessageRequired: 'This field is required.',
	            textMessageCountLimit: 'You should enter between [_1] characters.', // [_1] should be replaced by a range. sample: (6-20)
	            textMessageJustAllowed: 'Only [_1] are allowed.', // [_1] should be replaced by values including: letters, numbers, space, period, ...
	            textMessageValid: 'Please submit a valid [_1].', // [_1] should be replaced by values such as email address
	            textLetters: 'letters',
	            textNumbers: 'numbers',
	            textSpace: 'space',
	            textPeriod: 'period',
	            textComma: 'comma',
	            textHyphen: 'hyphen',
	            textApost: 'apostrophe',
	            textPassword: 'password',
	            textMr: 'Mr',
	            textMrs: 'Mrs',
	            textMs: 'Ms',
	            textMiss: 'Miss',
	            textPasswordsNotMatching: 'The two passwords that you entered do not match.',
	            textClickHereToRestart: 'Your token has expired. Please click <a class="pjaxload" href="[_1]">here</a> to restart the verification process.',
	            textDuplicatedEmail: 'Your provided email address is already in use by another Login ID. According to our terms and conditions, you may only register once through our site. If you have forgotten the password of your existing account, please <a href="[_1]">try our password recovery tool</a> or contact customer service.',
	            textErrorBirthdate: 'Please input a valid date',
	            textSelect: 'Please select',
	            textUnavailableReal: 'Sorry, account opening is unavailable.',
	            textMessageMinRequired: 'Minimum of [_1] characters required.',
	            textFeatureUnavailable: 'Sorry, this feature is not available.',
	            textMessagePasswordScore: 'Password score is: [_1]. Passing score is: 20.',
	            textShouldNotLessThan: 'Please enter a number greater or equal to [_1].',
	            textNumberLimit: 'Please enter a number between [_1].', // [_1] should be a range
	            featureNotRelevantToVirtual: 'This feature is not relevant to virtual-money accounts.'
	        };

	        Object.keys(localized).forEach(function (key) {
	            localized[key] = localize(localized[key]);
	        });

	        var starTime = document.getElementById('start_time_label');
	        if (selectorExists(starTime)) {
	            starTime.textContent = localized.textStartTime;
	        }

	        var minDurationTooltip = document.getElementById('duration_tooltip');
	        if (selectorExists(minDurationTooltip)) {
	            minDurationTooltip.textContent = localized.textMinDuration;
	            minDurationTooltip.setAttribute('data-balloon', localized.textMinDurationTooltip);
	        }

	        var spotLabel = document.getElementById('spot_label');
	        if (selectorExists(spotLabel)) {
	            spotLabel.textContent = localized.textSpot;
	        }

	        var barrierTooltip = document.getElementById('barrier_tooltip');
	        if (selectorExists(barrierTooltip)) {
	            barrierTooltip.textContent = localized.textBarrierOffset;
	            barrierTooltip.setAttribute('data-balloon', localized.textBarrierOffsetTooltip);
	        }

	        var barrierSpan = document.getElementById('barrier_span');
	        if (selectorExists(barrierSpan)) {
	            barrierSpan.textContent = localized.textBarrier;
	        }

	        var barrierHighTooltip = document.getElementById('barrier_high_tooltip');
	        if (selectorExists(barrierHighTooltip)) {
	            barrierHighTooltip.textContent = localized.textHighBarrierOffset;
	            barrierHighTooltip.setAttribute('data-balloon', localized.textBarrierOffsetTooltip);
	        }
	        var barrierHighSpan = document.getElementById('barrier_high_span');
	        if (selectorExists(barrierHighSpan)) {
	            barrierHighSpan.textContent = localized.textHighBarrier;
	        }

	        var barrierLowTooltip = document.getElementById('barrier_low_tooltip');
	        if (selectorExists(barrierLowTooltip)) {
	            barrierLowTooltip.textContent = localized.textLowBarrierOffset;
	            barrierLowTooltip.setAttribute('data-balloon', localized.textBarrierOffsetTooltip);
	        }
	        var barrierLowSpan = document.getElementById('barrier_low_span');
	        if (selectorExists(barrierLowSpan)) {
	            barrierLowSpan.textContent = localized.textLowBarrier;
	        }

	        var predictionLabel = document.getElementById('prediction_label');
	        if (selectorExists(predictionLabel)) {
	            predictionLabel.textContent = localized.textPredictionLabel;
	        }

	        var payoutOption = document.getElementById('payout_option');
	        if (selectorExists(payoutOption)) {
	            payoutOption.textContent = localized.textPayout;
	        }

	        var stakeOption = document.getElementById('stake_option');
	        if (selectorExists(stakeOption)) {
	            stakeOption.textContent = localized.textStake;
	        }

	        var purchaseButtonTop = document.getElementById('purchase_button_top');
	        if (selectorExists(purchaseButtonTop)) {
	            purchaseButtonTop.textContent = localized.textPurchase;
	        }

	        var purchaseButtonBottom = document.getElementById('purchase_button_bottom');
	        if (selectorExists(purchaseButtonBottom)) {
	            purchaseButtonBottom.textContent = localized.textPurchase;
	        }

	        var period_label = document.getElementById('period_label');
	        if (selectorExists(period_label)) {
	            period_label.textContent = localized.textContractPeriod;
	        }

	        var amount_per_point_label = document.getElementById('amount_per_point_label');
	        if (selectorExists(amount_per_point_label)) {
	            amount_per_point_label.textContent = localized.textAmountPerPoint;
	        }

	        var stop_loss_label = document.getElementById('stop_loss_label');
	        if (selectorExists(stop_loss_label)) {
	            stop_loss_label.textContent = localized.textStopLoss;
	        }

	        var stop_profit_label = document.getElementById('stop_profit_label');
	        if (selectorExists(stop_profit_label)) {
	            stop_profit_label.textContent = localized.textStopProfit;
	        }

	        var stop_type_label = document.getElementById('stop_type_label');
	        if (selectorExists(stop_type_label)) {
	            stop_type_label.textContent = localized.textStopType;
	        }

	        var stop_type_points = document.getElementById('stop_type_points_label');
	        if (selectorExists(stop_type_points)) {
	            stop_type_points.textContent = localized.textStopTypePoints;
	        }

	        var indicative_barrier_tooltip = document.getElementById('indicative_barrier_tooltip');
	        if (selectorExists(indicative_barrier_tooltip)) {
	            indicative_barrier_tooltip.setAttribute('data-balloon', localized.textIndicativeBarrierTooltip);
	        }

	        var indicative_high_barrier_tooltip = document.getElementById('indicative_high_barrier_tooltip');
	        if (selectorExists(indicative_high_barrier_tooltip)) {
	            indicative_high_barrier_tooltip.setAttribute('data-balloon', localized.textIndicativeBarrierTooltip);
	        }

	        var indicative_low_barrier_tooltip = document.getElementById('indicative_low_barrier_tooltip');
	        if (selectorExists(indicative_low_barrier_tooltip)) {
	            indicative_low_barrier_tooltip.setAttribute('data-balloon', localized.textIndicativeBarrierTooltip);
	        }
	    };

	    var errorMessage = function errorMessage(messageType, param) {
	        var msg = '';
	        var separator = ', ';
	        switch (messageType) {
	            case 'req':
	                msg = localized.textMessageRequired;
	                break;
	            case 'reg':
	                if (param) {
	                    msg = template(localized.textMessageJustAllowed, [param.join(separator)]);
	                }
	                break;
	            case 'range':
	                if (param) {
	                    msg = template(localized.textMessageCountLimit, [param]);
	                }
	                break;
	            case 'valid':
	                if (param) {
	                    msg = template(localized.textMessageValid, [param]);
	                }
	                break;
	            case 'min':
	                if (param) {
	                    msg = template(localized.textMessageMinRequired, [param]);
	                }
	                break;
	            case 'pass':
	                if (param) {
	                    msg = template(localized.textMessagePasswordScore, [param]);
	                }
	                break;
	            case 'number_not_less_than':
	                msg = template(localized.textShouldNotLessThan, [param]);
	                break;
	            case 'number_should_between':
	                msg = template(localized.textNumberLimit, [param]);
	                break;
	            default:
	                break;
	        }
	        return msg;
	    };

	    return {
	        localize: function localize() {
	            return localized;
	        },
	        populate: populate,
	        errorMessage: errorMessage
	    };
	}();

	module.exports = {
	    Content: Content
	};

/***/ },
/* 427 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var moment = __webpack_require__(308);
	var localize = __webpack_require__(423).localize;
	var Client = __webpack_require__(305).Client;

	var SessionDurationLimit = function () {
	    'use strict';

	    var warning = void 0;

	    var init = function init() {
	        clearTimeout(window.TimeOut_SessionLimitWarningBefore);
	        clearTimeout(window.TimeOut_SessionLimitWarning);
	        clearTimeout(window.TimeOut_SessionLimitLogout);
	        $('#session_limit').remove();

	        warning = 10 * 1000; // milliseconds before limit to display the warning message

	        var limit = Client.get_value('session_duration_limit') * 1,
	            now = moment().unix(),
	            start = Client.get_value('session_start') * 1,
	            mathLimit = Math.pow(2, 31) - 1;
	        var remained = (limit + start - now) * 1000;
	        if (remained < 0) remained = warning;

	        var setTimeOut = function setTimeOut() {
	            window.TimeOut_SessionLimitWarning = setTimeout(displayWarning, remained - warning);
	            window.TimeOut_SessionLimitLogout = setTimeout(Client.send_logout_request, remained);
	        };

	        // limit of setTimeout is this number
	        if (remained > mathLimit) {
	            remained %= mathLimit;
	            window.TimeOut_SessionLimitWarningBefore = setTimeout(init, remained);
	        } else {
	            setTimeOut();
	        }
	    };

	    var exclusionResponseHandler = function exclusionResponseHandler(response) {
	        if (response.hasOwnProperty('error') || !response.hasOwnProperty('get_self_exclusion')) {
	            return;
	        }

	        var limit = response.get_self_exclusion.session_duration_limit * 60;
	        if (isNaN(limit) || limit <= 0) return;

	        Client.set_value('session_duration_limit', limit);
	        window.addEventListener('storage', init, false);

	        init();
	    };

	    /* const realityStorageEventHandler = function(e) {
	     if (e.key === 'client.session_start' || e.key === 'client.session_duration_limit') {
	     init();
	     }
	     };*/

	    var displayWarning = function displayWarning() {
	        $('body').append($("<div id='session_limit' class='lightbox'><div><div><div class='limit_message'>" + localize('Your session duration limit will end in [_1] seconds.', [warning / 1000]) + '</div></div></div></div>'));
	        $('#session_limit').click(function () {
	            $(this).remove();
	        });
	    };

	    return {
	        exclusionResponseHandler: exclusionResponseHandler
	    };
	}();

	module.exports = {
	    SessionDurationLimit: SessionDurationLimit
	};

/***/ },
/* 428 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var japanese_client = __webpack_require__(307).japanese_client;
	var Client = __webpack_require__(305).Client;
	var Header = __webpack_require__(429).Header;
	var url_for = __webpack_require__(306).url_for;

	var Cashier = function () {
	    'use strict';

	    var withdrawal_locked = void 0;

	    var lock_unlock_cashier = function lock_unlock_cashier(action, lock_type) {
	        var toggle = action === 'lock' ? 'disable' : 'enable';
	        if (/withdraw/.test(lock_type) && withdrawal_locked) {
	            return;
	        }
	        $.each($('.' + lock_type), function () {
	            replace_button(toggle, $(this).parent());
	        });
	    };

	    var check_locked = function check_locked() {
	        if (Client.get_boolean('is_virtual')) return;
	        if (Client.status_detected('cashier_locked')) {
	            lock_unlock_cashier('lock', 'deposit, .withdraw');
	            withdrawal_locked = true;
	        } else if (Client.status_detected('withdrawal_locked')) {
	            lock_unlock_cashier('lock', 'withdraw');
	            withdrawal_locked = true;
	        } else if (Client.status_detected('unwelcome')) {
	            lock_unlock_cashier('lock', 'deposit');
	        } else if (sessionStorage.getItem('client_status') === null) {
	            BinarySocket.send({ get_account_status: '1', passthrough: { dispatch_to: 'Cashier' } });
	        }
	    };

	    var check_top_up_withdraw = function check_top_up_withdraw() {
	        if (is_cashier_page() && Client.get_boolean('values_set')) {
	            var currency = Client.get_value('currency'),
	                balance = Client.get_value('balance');
	            if (Client.get_boolean('is_virtual')) {
	                if (currency !== 'JPY' && balance > 1000 || currency === 'JPY' && balance > 100000) {
	                    replace_button('disable', '#VRT_topup_link');
	                }
	            } else if (!currency || +balance === 0) {
	                lock_unlock_cashier('lock', 'withdraw');
	            } else {
	                lock_unlock_cashier('unlock', 'withdraw');
	            }
	        }
	    };

	    var replace_button = function replace_button(action, elementToReplace) {
	        var $a = $(elementToReplace);
	        if ($a.length === 0) return;
	        var replace = ['button-disabled', 'pjaxload'];
	        var disable = action === 'disable';
	        var id = $a.attr('id');
	        var href = $a.attr('href');
	        var data_href = $a.attr('data-href');

	        // use replaceWith, to disable previously caught pjax event
	        var new_element = {
	            class: $a.attr('class').replace(replace[+disable], replace[+!disable]),
	            id: id,
	            html: $a.html(),
	            href: href || data_href,
	            'data-href': href
	        };

	        if (disable) {
	            delete new_element.href;
	        } else {
	            delete new_element['data-href'];
	        }
	        if (!id) {
	            delete new_element.id;
	        }

	        $a.replaceWith($('<a/>', new_element));
	    };

	    var onLoad = function onLoad() {
	        if (is_cashier_page() && Client.get_boolean('is_logged_in')) {
	            withdrawal_locked = false;
	            Cashier.check_locked();
	            Cashier.check_top_up_withdraw();
	            Header.topbar_message_visibility(Client.landing_company());
	        }
	    };

	    var is_cashier_page = function is_cashier_page() {
	        return (/cashier[\/\w]*\.html/.test(window.location.pathname)
	        );
	    };

	    var onLoadPaymentMethods = function onLoadPaymentMethods() {
	        if (japanese_client()) {
	            window.location.href = url_for('/');
	        }
	        if (Client.get_boolean('is_logged_in') && !Client.get_boolean('is_virtual')) {
	            Cashier.check_locked();
	        }
	    };

	    return {
	        check_locked: check_locked,
	        check_top_up_withdraw: check_top_up_withdraw,
	        onLoad: onLoad,
	        onLoadPaymentMethods: onLoadPaymentMethods
	    };
	}();

	module.exports = {
	    Cashier: Cashier
	};

/***/ },
/* 429 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var Client = __webpack_require__(305).Client;
	var Login = __webpack_require__(302).Login;
	var url_for = __webpack_require__(306).url_for;
	var GTM = __webpack_require__(430).GTM;
	var localize = __webpack_require__(423).localize;
	var checkClientsCountry = __webpack_require__(307).checkClientsCountry;
	var check_risk_classification = __webpack_require__(431).check_risk_classification;

	var Header = function () {
	    var on_load = function on_load() {
	        show_or_hide_login_form();
	        show_or_hide_language();
	        logout_handler();
	        check_risk_classification();
	        if (!$('body').hasClass('BlueTopBack') && !Login.is_login_pages()) {
	            checkClientsCountry();
	        }
	        if (Client.get_boolean('is_logged_in')) {
	            $('ul#menu-top').addClass('smaller-font');
	        }
	    };

	    var logout_handler = function logout_handler() {
	        $('a.logout').unbind('click').click(function () {
	            Client.send_logout_request();
	        });
	    };

	    var animate_disappear = function animate_disappear(element) {
	        element.animate({ opacity: 0 }, 100, function () {
	            element.css({ visibility: 'hidden', display: 'none' });
	        });
	    };

	    var animate_appear = function animate_appear(element) {
	        element.css({ visibility: 'visible', display: 'block' }).animate({ opacity: 1 }, 100);
	    };

	    var show_or_hide_language = function show_or_hide_language() {
	        var $el = $('#select_language'),
	            $all_accounts = $('#all-accounts');
	        $('.languages').off('click').on('click', function (event) {
	            event.stopPropagation();
	            animate_disappear($all_accounts);
	            if (+$el.css('opacity') === 1) {
	                animate_disappear($el);
	            } else {
	                animate_appear($el);
	            }
	        });
	        $(document).unbind('click').on('click', function () {
	            animate_disappear($all_accounts);
	            animate_disappear($el);
	        });
	    };

	    var show_or_hide_login_form = function show_or_hide_login_form() {
	        if (!Client.get_boolean('is_logged_in')) return;
	        var all_accounts = $('#all-accounts'),
	            language = $('#select_language');
	        $('.nav-menu').unbind('click').on('click', function (event) {
	            event.stopPropagation();
	            animate_disappear(language);
	            if (+all_accounts.css('opacity') === 1) {
	                animate_disappear(all_accounts);
	            } else {
	                animate_appear(all_accounts);
	            }
	        });
	        var loginid_select = '';
	        var loginid_array = Client.get_value('loginid_array');
	        for (var i = 0; i < loginid_array.length; i++) {
	            var login = loginid_array[i];
	            if (!login.disabled) {
	                var curr_id = login.id;
	                var type = 'Virtual';
	                if (login.real) {
	                    if (login.financial) type = 'Investment';else if (login.non_financial) type = 'Gaming';else type = 'Real';
	                }
	                type += ' Account';

	                // default account
	                if (curr_id === Client.get_value('loginid')) {
	                    $('.account-type').html(localize(type));
	                    $('.account-id').html(curr_id);
	                } else {
	                    loginid_select += '<a href="javascript:;" value="' + curr_id + '"><li>' + localize(type) + '<div>' + curr_id + '</div>' + '</li></a><div class="separator-line-thin-gray"></div>';
	                }
	            }
	        }
	        $('.login-id-list').html(loginid_select);
	        $('.login-id-list a').off('click').on('click', function (e) {
	            e.preventDefault();
	            $(this).attr('disabled', 'disabled');
	            switch_loginid($(this).attr('value'));
	        });
	    };

	    var switch_loginid = function switch_loginid(loginid) {
	        if (!loginid || loginid.length === 0) {
	            return;
	        }
	        var token = Client.get_token(loginid);
	        if (!token || token.length === 0) {
	            Client.send_logout_request(true);
	            return;
	        }

	        // cleaning the previous values
	        Client.clear_storage_values();
	        sessionStorage.setItem('active_tab', '1');
	        sessionStorage.removeItem('client_status');
	        // set cookies: loginid, login
	        Client.set_cookie('loginid', loginid);
	        Client.set_cookie('login', token);
	        // set local storage
	        GTM.set_login_flag();
	        localStorage.setItem('active_loginid', loginid);
	        $('.login-id-list a').removeAttr('disabled');
	        window.location.reload();
	    };

	    var topbar_message_visibility = function topbar_message_visibility(c_config) {
	        if (Client.get_boolean('is_logged_in')) {
	            var _ret = function () {
	                if (!Client.get_boolean('values_set') || !c_config) {
	                    return {
	                        v: void 0
	                    };
	                }
	                var loginid_array = Client.get_value('loginid_array');

	                var $upgrade_msg = $('.upgrademessage'),
	                    hiddenClass = 'invisible';
	                var hide_upgrade = function hide_upgrade() {
	                    $upgrade_msg.addClass(hiddenClass);
	                };
	                var show_upgrade = function show_upgrade(url, msg) {
	                    $upgrade_msg.removeClass(hiddenClass).find('a').removeClass(hiddenClass).attr('href', url_for(url)).html($('<span/>', { text: localize(msg) }));
	                };

	                if (Client.get_boolean('is_virtual')) {
	                    var show_upgrade_msg = true;
	                    for (var i = 0; i < loginid_array.length; i++) {
	                        if (loginid_array[i].real) {
	                            hide_upgrade();
	                            show_upgrade_msg = false;
	                            break;
	                        }
	                    }
	                    $upgrade_msg.removeClass(hiddenClass).find('> span').removeClass(hiddenClass).end().find('a').addClass(hiddenClass);
	                    var jp_account_status = Client.get_value('jp_status');
	                    if (jp_account_status && show_upgrade_msg) {
	                        if (/jp_knowledge_test_(pending|fail)/.test(jp_account_status)) {
	                            // do not show upgrade for user that filled up form
	                            show_upgrade('/new_account/knowledge_testws', '{JAPAN ONLY}Take knowledge test');
	                        } else {
	                            $upgrade_msg.removeClass(hiddenClass);
	                            if (jp_account_status === 'jp_activation_pending') {
	                                if ($('.activation-message').length === 0) {
	                                    $('#virtual-text').append(' <div class="activation-message">' + localize('Your Application is Being Processed.') + '</div>');
	                                }
	                            } else if (jp_account_status === 'activated') {
	                                if ($('.activated-message').length === 0) {
	                                    $('#virtual-text').append(' <div class="activated-message">' + localize('{JAPAN ONLY}Your Application has Been Processed. Please Re-Login to Access Your Real-Money Account.') + '</div>');
	                                }
	                            }
	                        }
	                        return {
	                            v: void 0
	                        };
	                    }
	                    if (show_upgrade_msg) {
	                        $upgrade_msg.find('> span').removeClass(hiddenClass);
	                        if (Client.can_upgrade_virtual_to_financial(c_config)) {
	                            show_upgrade('new_account/maltainvestws', 'Upgrade to a Financial Account');
	                        } else if (Client.can_upgrade_virtual_to_japan(c_config)) {
	                            show_upgrade('new_account/japanws', 'Upgrade to a Real Account');
	                        } else {
	                            show_upgrade('new_account/realws', 'Upgrade to a Real Account');
	                        }
	                    }
	                } else {
	                    var show_financial = false;
	                    // also allow UK MLT client to open MF account
	                    if (Client.can_upgrade_gaming_to_financial(c_config) || Client.get_value('residence') === 'gb' && /^MLT/.test(Client.get_value('loginid'))) {
	                        show_financial = true;
	                        for (var j = 0; j < loginid_array.length; j++) {
	                            if (loginid_array[j].financial) {
	                                show_financial = false;
	                                break;
	                            }
	                        }
	                    }
	                    if (show_financial) {
	                        $('#virtual-text').parent().addClass('invisible');
	                        show_upgrade('new_account/maltainvestws', 'Open a Financial Account');
	                    } else {
	                        hide_upgrade();
	                    }
	                }
	            }();

	            if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
	        }
	    };

	    return {
	        on_load: on_load,

	        topbar_message_visibility: topbar_message_visibility
	    };
	}();

	module.exports = {
	    Header: Header
	};

/***/ },
/* 430 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var getAppId = __webpack_require__(300).getAppId;
	var isVisible = __webpack_require__(420).isVisible;
	var getLanguage = __webpack_require__(303).getLanguage;
	var Client = __webpack_require__(305).Client;
	var State = __webpack_require__(304).State;
	var Cookies = __webpack_require__(301);
	var moment = __webpack_require__(308);

	var GTM = function () {
	    'use strict';

	    var gtm_applicable = function gtm_applicable() {
	        return (/^(1|1098)$/.test(getAppId())
	        );
	    };

	    var gtm_data_layer_info = function gtm_data_layer_info(data) {
	        var data_layer_info = {
	            language: getLanguage(),
	            pageTitle: page_title(),
	            pjax: State.get('is_loaded_by_pjax'),
	            url: document.URL,
	            event: 'page_load'
	        };
	        if (Client.get_boolean('is_logged_in')) {
	            data_layer_info.visitorId = Client.get_value('loginid');
	        }

	        $.extend(true, data_layer_info, data);

	        var event = data_layer_info.event;
	        delete data_layer_info.event;

	        return {
	            data: data_layer_info,
	            event: event
	        };
	    };

	    var push_data_layer = function push_data_layer(data) {
	        if (!gtm_applicable()) return;
	        if (!/logged_inws/i.test(window.location.pathname)) {
	            var info = gtm_data_layer_info(data && (typeof data === 'undefined' ? 'undefined' : _typeof(data)) === 'object' ? data : null);
	            dataLayer[0] = info.data;
	            dataLayer.push(info.data);
	            dataLayer.push({ event: info.event });
	        }
	    };

	    var page_title = function page_title() {
	        var t = /^.+[:-]\s*(.+)$/.exec(document.title);
	        return t && t[1] ? t[1] : document.title;
	    };

	    var event_handler = function event_handler(get_settings) {
	        if (!gtm_applicable()) return;
	        var is_login = localStorage.getItem('GTM_login') === '1',
	            is_newaccount = localStorage.getItem('GTM_newaccount') === '1';
	        if (!is_login && !is_newaccount) {
	            return;
	        }

	        localStorage.removeItem('GTM_login');
	        localStorage.removeItem('GTM_newaccount');

	        var affiliateToken = Cookies.getJSON('affiliate_tracking');
	        if (affiliateToken) {
	            GTM.push_data_layer({ bom_affiliate_token: affiliateToken.t });
	        }

	        var data = {
	            visitorId: Client.get_value('loginid'),
	            bom_country: get_settings.country,
	            bom_email: get_settings.email,
	            url: window.location.href,
	            bom_today: Math.floor(Date.now() / 1000),
	            event: is_newaccount ? 'new_account' : 'log_in'
	        };
	        if (is_newaccount) {
	            data.bom_date_joined = data.bom_today;
	        }
	        if (!Client.get_boolean('is_virtual')) {
	            data.bom_age = parseInt((moment().unix() - get_settings.date_of_birth) / 31557600);
	            data.bom_firstname = get_settings.first_name;
	            data.bom_lastname = get_settings.last_name;
	            data.bom_phone = get_settings.phone;
	        }
	        GTM.push_data_layer(data);
	    };

	    var push_purchase_data = function push_purchase_data(response) {
	        if (!gtm_applicable() || Client.get_boolean('is_virtual')) return;
	        var req = response.echo_req.passthrough,
	            buy = response.buy;
	        if (!buy) return;
	        var data = {
	            event: 'buy_contract',
	            visitorId: Client.get_value('loginid'),
	            bom_symbol: req.symbol,
	            bom_market: document.getElementById('contract_markets').value,
	            bom_currency: req.currency,
	            bom_contract_type: req.contract_type,
	            bom_contract_id: buy.contract_id,
	            bom_transaction_id: buy.transaction_id,
	            bom_buy_price: buy.buy_price,
	            bom_payout: buy.payout
	        };
	        // Spread contracts
	        if (/spread/i.test(req.contract_type)) {
	            $.extend(data, {
	                bom_stop_type: req.stop_type,
	                bom_amount_per_point: buy.amount_per_point,
	                bom_stop_loss_level: buy.stop_loss_level,
	                bom_stop_profit_level: buy.stop_profit_level
	            });
	        } else {
	            $.extend(data, {
	                bom_amount: req.amount,
	                bom_basis: req.basis,
	                bom_expiry_type: document.getElementById('expiry_type').value
	            });
	            if (data.bom_expiry_type === 'duration') {
	                $.extend(data, {
	                    bom_duration: req.duration,
	                    bom_duration_unit: req.duration_unit
	                });
	            }
	            if (isVisible(document.getElementById('barrier'))) {
	                data.bom_barrier = req.barrier;
	            } else if (isVisible(document.getElementById('barrier_high'))) {
	                data.bom_barrier_high = req.barrier;
	                data.bom_barrier_low = req.barrier2;
	            }
	            if (isVisible(document.getElementById('prediction'))) {
	                data.bom_prediction = req.barrier;
	            }
	        }

	        GTM.push_data_layer(data);
	    };

	    var set_login_flag = function set_login_flag() {
	        if (!gtm_applicable()) return;
	        localStorage.setItem('GTM_login', '1');
	    };

	    return {
	        push_data_layer: push_data_layer,
	        event_handler: event_handler,
	        push_purchase_data: push_purchase_data,
	        set_login_flag: set_login_flag
	    };
	}();

	module.exports = {
	    GTM: GTM
	};

/***/ },
/* 431 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var RiskClassification = __webpack_require__(432).RiskClassification;
	var FinancialAssessmentws = __webpack_require__(433).FinancialAssessmentws;
	var Client = __webpack_require__(305).Client;
	var url_for = __webpack_require__(306).url_for;

	function check_risk_classification() {
	    if (localStorage.getItem('risk_classification.response') === 'high' && localStorage.getItem('risk_classification') === 'high' && qualify_for_risk_classification()) {
	        renderRiskClassificationPopUp();
	    }
	}

	function renderRiskClassificationPopUp() {
	    if (window.location.pathname === '/user/settings/assessmentws') {
	        window.location.href = url_for('user/settingsws');
	        return;
	    }
	    $.ajax({
	        url: url_for('user/settings/assessmentws'),
	        dataType: 'html',
	        method: 'GET',
	        success: function success(riskClassificationText) {
	            if (riskClassificationText.includes('assessment_form')) {
	                var payload = $(riskClassificationText);
	                RiskClassification.showRiskClassificationPopUp(payload.find('#assessment_form'));
	                FinancialAssessmentws.LocalizeText();
	                var $risk_classification = $('#risk_classification');
	                $risk_classification.find('#assessment_form').removeClass('invisible').attr('style', 'text-align: left;');
	                $risk_classification.find('#high_risk_classification').removeClass('invisible');
	                $risk_classification.find('#heading_risk').removeClass('invisible');
	                $risk_classification.find('#assessment_form').on('submit', function (event) {
	                    event.preventDefault();
	                    FinancialAssessmentws.submitForm();
	                    return false;
	                });
	            }
	        },
	        error: function error() {
	            return false;
	        }
	    });
	    $('#risk_classification').find('#assessment_form').on('submit', function (event) {
	        event.preventDefault();
	        FinancialAssessmentws.submitForm();
	        return false;
	    });
	}

	function qualify_for_risk_classification() {
	    return Client.get_boolean('is_logged_in') && !Client.get_boolean('is_virtual') && Client.get_value('residence') !== 'jp' && !$('body').hasClass('BlueTopBack') && $('#assessment_form').length === 0 && (localStorage.getItem('reality_check.ack') === '1' || !localStorage.getItem('reality_check.interval'));
	}

	module.exports = {
	    check_risk_classification: check_risk_classification,
	    qualify_for_risk_classification: qualify_for_risk_classification
	};

/***/ },
/* 432 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Client = __webpack_require__(305).Client;

	var RiskClassification = function () {
	    'use strict';

	    var showRiskClassificationPopUp = function showRiskClassificationPopUp(content) {
	        if ($('#risk_classification').length > 0) {
	            return;
	        }
	        var lightboxDiv = $("<div id='risk_classification' class='lightbox'></div>");

	        var wrapper = $('<div></div>');
	        wrapper = wrapper.append(content);
	        wrapper = $('<div></div>').append(wrapper);
	        wrapper.appendTo(lightboxDiv);
	        lightboxDiv.appendTo('body');
	    };

	    var cleanup = function cleanup() {
	        localStorage.removeItem('risk_classification');
	        localStorage.removeItem('risk_classification.response');
	        $('#risk_classification').remove();
	        Client.check_tnc();
	    };

	    return {
	        showRiskClassificationPopUp: showRiskClassificationPopUp,
	        cleanup: cleanup
	    };
	}();

	module.exports = {
	    RiskClassification: RiskClassification
	};

/***/ },
/* 433 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var RiskClassification = __webpack_require__(432).RiskClassification;
	var japanese_client = __webpack_require__(307).japanese_client;
	var showLoadingImage = __webpack_require__(419).showLoadingImage;
	var localize = __webpack_require__(423).localize;
	var Client = __webpack_require__(305).Client;
	var url_for = __webpack_require__(306).url_for;
	var Content = __webpack_require__(426).Content;
	var selectorExists = __webpack_require__(420).selectorExists;

	var FinancialAssessmentws = function () {
	    'use strict';

	    var financial_assessment = {};

	    var init = function init() {
	        Content.populate();
	        if (checkIsVirtual()) return;
	        LocalizeText();
	        $('#assessment_form').on('submit', function (event) {
	            event.preventDefault();
	            submitForm();
	            return false;
	        });
	        BinarySocket.send({ get_financial_assessment: 1 });
	    };

	    // For translating strings
	    var LocalizeText = function LocalizeText() {
	        var $heading = $('#heading'),
	            $heading_risk = $('#heading_risk'),
	            $high_risk = $('#high_risk_classification'),
	            $assessment_form = $('#assessment_form'),
	            $warning = $('#warning'),
	            $submit = $('#submit');
	        $heading.text(localize($heading.text()));
	        $heading_risk.text(localize($heading_risk.text()));
	        $high_risk.text(localize($high_risk.text()));
	        var legend_0 = document.getElementsByTagName('legend')[0];
	        var legend_1 = document.getElementsByTagName('legend')[1];
	        if (selectorExists(legend_0)) {
	            legend_0.innerHTML = localize(legend_0.innerHTML);
	        }
	        if (selectorExists(legend_1)) {
	            legend_1.innerHTML = localize(legend_1.innerHTML);
	        }
	        $assessment_form.find('label').each(function () {
	            var ele = $(this);
	            ele.text(localize(ele.text()));
	        });
	        $assessment_form.find('option').each(function () {
	            var ele = $(this);
	            ele.text(localize(ele.text()));
	        });
	        $warning.text(localize($warning.text()));
	        $submit.text(localize($submit.text()));
	    };

	    var submitForm = function submitForm() {
	        $('#submit').attr('disabled', 'disabled');

	        if (!validateForm()) {
	            setTimeout(function () {
	                $('#submit').removeAttr('disabled');
	            }, 1000);
	            return;
	        }

	        var hasChanged = false;
	        Object.keys(financial_assessment).forEach(function (key) {
	            var $key = $('#' + key);
	            if ($key.length && $key.val() !== financial_assessment[key]) {
	                hasChanged = true;
	            }
	        });
	        if (Object.keys(financial_assessment).length === 0) hasChanged = true;
	        if (!hasChanged) {
	            showFormMessage('You did not change anything.', false);
	            setTimeout(function () {
	                $('#submit').removeAttr('disabled');
	            }, 1000);
	            return;
	        }

	        var data = { set_financial_assessment: 1 };
	        showLoadingImage($('#form_message'));
	        $('#assessment_form').find('select').each(function () {
	            financial_assessment[$(this).attr('id')] = data[$(this).attr('id')] = $(this).val();
	        });
	        BinarySocket.send(data);
	        RiskClassification.cleanup();
	    };

	    var validateForm = function validateForm() {
	        var isValid = true;
	        var errors = {};
	        clearErrors();
	        $('#assessment_form').find('select').each(function () {
	            if (!$(this).val()) {
	                isValid = false;
	                errors[$(this).attr('id')] = localize('Please select a value');
	            }
	        });
	        if (!isValid) {
	            displayErrors(errors);
	        }

	        return isValid;
	    };

	    var hideLoadingImg = function hideLoadingImg(show_form) {
	        $('#loading').remove();
	        if (typeof show_form === 'undefined') {
	            show_form = true;
	        }
	        if (show_form) {
	            $('#assessment_form').removeClass('invisible');
	        }
	    };

	    var responseGetAssessment = function responseGetAssessment(response) {
	        hideLoadingImg();
	        financial_assessment = response.get_financial_assessment;
	        Object.keys(response.get_financial_assessment).forEach(function (key) {
	            var val = response.get_financial_assessment[key];
	            $('#' + key).val(val);
	        });
	    };

	    var clearErrors = function clearErrors() {
	        $('.errorfield').each(function () {
	            $(this).text('');
	        });
	    };

	    var displayErrors = function displayErrors(errors) {
	        var id = '';
	        clearErrors();
	        Object.keys(errors).forEach(function (key) {
	            var error = errors[key];
	            $('#error' + key).text(localize(error));
	            if (!id) id = key;
	        });
	        hideLoadingImg();
	        $.scrollTo($('#' + id), 500);
	    };

	    var apiResponse = function apiResponse(response) {
	        if (checkIsVirtual()) return;
	        if (response.msg_type === 'get_financial_assessment') {
	            responseGetAssessment(response);
	        } else if (response.msg_type === 'set_financial_assessment') {
	            $('#submit').removeAttr('disabled');
	            if ('error' in response) {
	                showFormMessage('Sorry, an error occurred while processing your request.', false);
	                displayErrors(response.error.details);
	            } else {
	                showFormMessage('Your settings have been updated successfully.', true);
	            }
	        }
	    };

	    var checkIsVirtual = function checkIsVirtual() {
	        if (Client.get_boolean('is_virtual')) {
	            $('#assessment_form').addClass('invisible');
	            $('#response_on_success').addClass('notice-msg center-text').removeClass('invisible').text(Content.localize().featureNotRelevantToVirtual);
	            hideLoadingImg(false);
	            return true;
	        }
	        return false;
	    };

	    var showFormMessage = function showFormMessage(msg, isSuccess) {
	        $('#form_message').attr('class', isSuccess ? 'success-msg' : 'errorfield').html(isSuccess ? '<ul class="checked" style="display: inline-block;"><li>' + localize(msg) + '</li></ul>' : localize(msg)).css('display', 'block').delay(5000).fadeOut(1000);
	    };

	    var onLoad = function onLoad() {
	        if (japanese_client()) {
	            window.location.href = url_for('user/settingsws');
	        }
	        BinarySocket.init({
	            onmessage: function onmessage(msg) {
	                var response = JSON.parse(msg.data);
	                if (response) {
	                    FinancialAssessmentws.apiResponse(response);
	                }
	            }
	        });
	        showLoadingImage($('<div/>', { id: 'loading', class: 'center-text' }).insertAfter('#heading'));
	        FinancialAssessmentws.init();
	    };

	    return {
	        init: init,
	        apiResponse: apiResponse,
	        submitForm: submitForm,
	        LocalizeText: LocalizeText,
	        onLoad: onLoad
	    };
	}();

	module.exports = {
	    FinancialAssessmentws: FinancialAssessmentws
	};

/***/ },
/* 434 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Content = __webpack_require__(426).Content;
	var localize = __webpack_require__(423).localize;
	var Client = __webpack_require__(305).Client;

	var CashierJP = function () {
	    function init(action) {
	        Content.populate();
	        if (Client.get_boolean('values_set')) {
	            var $container = $('#japan_cashier_container');
	            if (Client.get_boolean('is_virtual')) {
	                $container.addClass('center-text notice-msg').removeClass('invisible').text(Content.localize().featureNotRelevantToVirtual);
	                return;
	            }
	            $container.removeClass('invisible');
	            if (action === 'deposit') {
	                set_name_id();
	            } else if (action === 'withdraw') {
	                set_email_id();
	                Content.populate();
	            }
	        } else {
	            BinarySocket.init({
	                onmessage: function onmessage(msg) {
	                    var response = JSON.parse(msg.data);
	                    if (response && response.msg_type === 'authorize') {
	                        CashierJP.init(action);
	                    }
	                }
	            });
	        }
	    }
	    function set_name_id() {
	        if (/deposit-jp/.test(window.location.pathname)) {
	            $('#name_id').text((Client.get_value('loginid') || 'JP12345') + ' ' + (Client.get_value('first_name') || 'Joe Bloggs'));
	        }
	    }
	    function set_email_id() {
	        if (/withdraw-jp/.test(window.location.pathname)) {
	            $('#id123-control22598118').val(Client.get_value('loginid'));
	            $('#id123-control22598060').val(Client.get_value('email'));
	        }
	    }
	    function error_handler() {
	        $('.error-msg').remove();
	        var $id = $('#id123-control22598145');
	        var withdrawal_amount = $id.val();
	        if (!/^([1-9][0-9]{0,5}|1000000)$/.test(withdrawal_amount)) {
	            $id.parent().append('<p class="error-msg">' + Content.errorMessage('number_should_between', '¥1 - ¥1,000,000') + '</p>');
	            return false;
	        } else if (parseInt(Client.get_value('balance')) < withdrawal_amount) {
	            $id.parent().append('<p class="error-msg">' + localize('Insufficient balance.') + '</p>');
	            return false;
	        }
	        return true;
	    }
	    return {
	        init: init,
	        set_name_id: set_name_id,
	        set_email_id: set_email_id,
	        error_handler: error_handler
	    };
	}();

	module.exports = {
	    CashierJP: CashierJP
	};

/***/ },
/* 435 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var template = __webpack_require__(419).template;
	var Cookies = __webpack_require__(301);
	var Content = __webpack_require__(426).Content;
	var localize = __webpack_require__(423).localize;
	var Client = __webpack_require__(305).Client;
	var url_for = __webpack_require__(306).url_for;

	var PaymentAgentWithdrawWS = function () {
	    'use strict';

	    var containerID = void 0,
	        viewIDs = void 0,
	        fieldIDs = void 0,
	        errorClass = void 0,
	        hiddenClass = void 0,
	        $views = void 0,
	        formData = void 0,
	        isValid = void 0,
	        withdrawCurrency = void 0,
	        minAmount = void 0,
	        maxAmount = void 0;

	    var init = function init() {
	        containerID = '#paymentagent_withdrawal';
	        $views = $(containerID + ' .viewItem');
	        errorClass = 'errorfield';
	        hiddenClass = 'hidden';
	        viewIDs = {
	            error: '#viewError',
	            success: '#viewSuccess',
	            confirm: '#viewConfirm',
	            form: '#viewForm'
	        };
	        fieldIDs = {
	            verificationCode: '#verification-code',
	            ddlAgents: '#ddlAgents',
	            txtAmount: '#txtAmount',
	            txtDesc: '#txtDescription'
	        };
	        withdrawCurrency = 'USD';
	        minAmount = 10;
	        maxAmount = 2000;

	        $views.addClass(hiddenClass);

	        if (Client.get_boolean('is_virtual')) {
	            // Virtual Account
	            Content.populate();
	            var errorMessage = document.getElementById('custom-error');
	            $(errorMessage).addClass('notice-msg center-text');
	            showPageError(localize('This feature is not relevant to virtual-money accounts.'));
	            return;
	        }

	        var residence = Cookies.get('residence');

	        if (Client.status_detected('withdrawal_locked, cashier_locked', 'any')) {
	            lock_withdrawal('locked');
	        } else {
	            BinarySocket.send({ paymentagent_list: residence });
	        }

	        $(viewIDs.form + ' button').click(function (e) {
	            e.preventDefault();
	            e.stopPropagation();
	            formData = formValidate();
	            if (formData) {
	                withdrawRequest(true);
	            }
	        });
	    };

	    // -----------------------
	    // ----- Agents List -----
	    // -----------------------
	    var populateAgentsList = function populateAgentsList(response) {
	        var $ddlAgents = $(fieldIDs.ddlAgents);
	        $ddlAgents.empty();
	        var paList = response.paymentagent_list.list;
	        if (paList.length > 0) {
	            BinarySocket.send({ verify_email: Client.get_value('email'), type: 'paymentagent_withdraw' });
	            insertListOption($ddlAgents, localize('Please select a payment agent'), '');
	            for (var i = 0; i < paList.length; i++) {
	                insertListOption($ddlAgents, paList[i].name, paList[i].paymentagent_loginid);
	            }
	            setActiveView(viewIDs.form);
	        } else {
	            showPageError(localize('The Payment Agent facility is currently not available in your country.'));
	        }
	    };

	    var insertListOption = function insertListOption($ddlObject, itemText, itemValue) {
	        $ddlObject.append($('<option/>', { value: itemValue, text: itemText }));
	    };

	    // ----------------------------
	    // ----- Form Validations -----
	    // ----------------------------
	    var formValidate = function formValidate() {
	        clearError();
	        isValid = true;

	        var agent = $(fieldIDs.ddlAgents).val(),
	            amount = $(fieldIDs.txtAmount).val().trim(),
	            desc = $(fieldIDs.txtDesc).val().trim(),
	            token = $(fieldIDs.verificationCode).val().trim();

	        var letters = Content.localize().textLetters,
	            numbers = Content.localize().textNumbers,
	            space = Content.localize().textSpace,
	            period = Content.localize().textPeriod,
	            comma = Content.localize().textComma;

	        // Payment Agent
	        isRequiredError(fieldIDs.ddlAgents);

	        // verification token
	        if (!isRequiredError(fieldIDs.verificationCode)) {
	            if (token.length !== 48) {
	                showError(fieldIDs.verificationCode, Content.errorMessage('valid', localize('verification token')));
	            }
	        }

	        // Amount
	        if (!isRequiredError(fieldIDs.txtAmount)) {
	            if (!/^\d+(\.\d+)?$/.test(amount) || !$.isNumeric(amount)) {
	                showError(fieldIDs.txtAmount, Content.errorMessage('reg', [numbers]));
	            } else if (!/^\d+(\.\d{1,2})?$/.test(amount)) {
	                showError(fieldIDs.txtAmount, localize('Only 2 decimal points are allowed.'));
	            } else if (amount < minAmount) {
	                showError(fieldIDs.txtAmount, localize('Invalid amount, minimum is') + ' ' + withdrawCurrency + ' ' + minAmount);
	            } else if (amount > maxAmount) {
	                showError(fieldIDs.txtAmount, localize('Invalid amount, maximum is') + ' ' + withdrawCurrency + ' ' + maxAmount);
	            }
	        }

	        // Description
	        if (!/^[a-zA-Z0-9\s\.\,\-']*$/.test(desc)) {
	            showError(fieldIDs.txtDesc, Content.errorMessage('reg', [letters, numbers, space, period, comma, '- \'']));
	        }

	        if (!isValid) {
	            return false;
	        }
	        return {
	            agent: agent,
	            agentname: $(fieldIDs.ddlAgents + ' option:selected').text(),
	            currency: withdrawCurrency,
	            amount: amount,
	            desc: desc,
	            verificationCode: token
	        };
	    };

	    var isRequiredError = function isRequiredError(fieldID) {
	        if (!$(fieldID).val() || !/.+/.test($(fieldID).val().trim())) {
	            showError(fieldID, Content.errorMessage('req'));
	            return true;
	        }
	        return false;
	    };

	    /* const isCountError = function(fieldID, min, max) {
	        const fieldValue = $(fieldID).val().trim();
	        if((fieldValue.length > 0 && fieldValue.length < min) || fieldValue.length > max) {
	            showError(fieldID, Content.errorMessage('range', '(' + min + '-' + max + ')'));
	            return true;
	        } else {
	            return false;
	        }
	    };*/

	    // ----------------------------
	    // ----- Withdraw Process -----
	    // ----------------------------
	    var withdrawRequest = function withdrawRequest(isDryRun) {
	        var dry_run = isDryRun ? 1 : 0;
	        BinarySocket.send({
	            paymentagent_withdraw: 1,
	            paymentagent_loginid: formData.agent,
	            currency: formData.currency,
	            amount: formData.amount,
	            description: formData.desc,
	            dry_run: dry_run,
	            verification_code: formData.verificationCode
	        });
	    };

	    var withdrawResponse = function withdrawResponse(response) {
	        var responseCode = response.paymentagent_withdraw;
	        switch (responseCode) {
	            case 2:
	                // dry_run success: showing the confirmation page
	                setActiveView(viewIDs.confirm);

	                $('#lblAgentName').text(formData.agentname);
	                $('#lblCurrency').text(formData.currency);
	                $('#lblAmount').text(formData.amount);

	                $(viewIDs.confirm + ' #btnConfirm').click(function () {
	                    withdrawRequest(false);
	                });
	                $(viewIDs.confirm + ' #btnBack').click(function () {
	                    setActiveView(viewIDs.form);
	                });
	                break;

	            case 1:
	                // withdrawal success
	                setActiveView(viewIDs.success);
	                $('#successMessage').css('display', '').attr('class', 'success-msg').html('<ul class="checked"><li>' + localize('Your request to withdraw [_1] [_2] from your account [_3] to Payment Agent [_4] account has been successfully processed.', [formData.currency, formData.amount, Cookies.get('loginid'), formData.agentname]) + '</li></ul>');
	                break;

	            default:
	                // error
	                if (response.echo_req.dry_run === 1) {
	                    setActiveView(viewIDs.form);
	                    $('#formMessage').css('display', '').attr('class', errorClass).html(response.error.message);
	                } else if (response.error.code === 'InvalidToken') {
	                    showPageError(template(Content.localize().textClickHereToRestart, [url_for('paymentagent/withdrawws')]));
	                } else {
	                    showPageError(response.error.message);
	                }
	                break;
	        }
	    };

	    // -----------------------------
	    // ----- Message Functions -----
	    // -----------------------------
	    var showPageError = function showPageError(errMsg, id) {
	        $(viewIDs.error + ' > p').addClass(hiddenClass);
	        if (id) {
	            $(viewIDs.error + ' #' + id).removeClass(hiddenClass);
	        } else {
	            $(viewIDs.error + ' #custom-error').html(errMsg).removeClass(hiddenClass);
	        }
	        setActiveView(viewIDs.error);
	    };

	    var showError = function showError(fieldID, errMsg) {
	        $(fieldID).parent().append($('<p/>', { class: errorClass, text: errMsg }));
	        isValid = false;
	    };

	    var clearError = function clearError(fieldID) {
	        $(fieldID || viewIDs.form + ' .' + errorClass).remove();
	    };

	    // ----- View Control -----
	    var setActiveView = function setActiveView(viewID) {
	        $views.addClass(hiddenClass);
	        $(viewID).removeClass(hiddenClass);
	    };

	    var lock_withdrawal = function lock_withdrawal(withdrawal_locked) {
	        if (withdrawal_locked === 'locked') {
	            showPageError('', 'withdrawal-locked-error');
	        } else if (!Client.get_boolean('is_virtual')) {
	            BinarySocket.send({ paymentagent_list: Cookies.get('residence') });
	        }
	    };

	    var checkOnLoad = function checkOnLoad() {
	        BinarySocket.init({
	            onmessage: function onmessage(msg) {
	                var response = JSON.parse(msg.data);
	                if (response) {
	                    var type = response.msg_type;
	                    switch (type) {
	                        case 'authorize':
	                            PaymentAgentWithdrawWS.init();
	                            break;
	                        case 'paymentagent_list':
	                            PaymentAgentWithdrawWS.populateAgentsList(response);
	                            break;
	                        case 'paymentagent_withdraw':
	                            PaymentAgentWithdrawWS.withdrawResponse(response);
	                            break;
	                        default:
	                            break;
	                    }
	                }
	            }
	        });

	        Content.populate();
	        if (Client.get_boolean('values_set') || Client.status_detected('withdrawal_locked, cashier_locked', 'any')) {
	            PaymentAgentWithdrawWS.init();
	        } else if (sessionStorage.getItem('client_status') === null) {
	            BinarySocket.send({ get_account_status: '1', passthrough: { dispatch_to: 'PaymentAgentWithdrawWS' } });
	        }
	    };

	    return {
	        init: init,
	        populateAgentsList: populateAgentsList,
	        withdrawResponse: withdrawResponse,
	        lock_withdrawal: lock_withdrawal,
	        checkOnLoad: checkOnLoad
	    };
	}();

	module.exports = {
	    PaymentAgentWithdrawWS: PaymentAgentWithdrawWS
	};

/***/ },
/* 436 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var getLanguage = __webpack_require__(303).getLanguage;
	var getAllLanguages = __webpack_require__(303).getAllLanguages;
	var onChangeLanguage = __webpack_require__(303).onChangeLanguage;

	var $languages = void 0,
	    languageCode = void 0,
	    languageText = void 0;

	function create_language_drop_down(languages) {
	    $languages = $('.languages');
	    var selectLanguage = 'ul#select_language',
	        $selectLanguage = $languages.find(selectLanguage);
	    if ($languages.length === 0 || $selectLanguage.find('li span.language').text() !== '') return;
	    languages.sort(function (a, b) {
	        return a === 'EN' || a < b ? -1 : 1;
	    });
	    var displayLanguage = 'ul#display_language';
	    languageCode = getLanguage();
	    languageText = map_code_to_language(languageCode);
	    add_display_language(displayLanguage);
	    add_display_language(selectLanguage);
	    for (var i = 0; i < languages.length; i++) {
	        $selectLanguage.append('<li class="' + languages[i] + '">' + map_code_to_language(languages[i]) + '</li>');
	    }
	    $selectLanguage.find('li.' + languageCode + ':eq(1)').addClass('invisible');
	    onChangeLanguage();
	    $languages.removeClass('invisible');
	}

	function add_display_language(id) {
	    $languages.find(id + ' li').addClass(languageCode).find('span.language').text(languageText);
	}

	function map_code_to_language(code) {
	    var map = getAllLanguages();
	    return map[code];
	}

	module.exports = {
	    create_language_drop_down: create_language_drop_down
	};

/***/ },
/* 437 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var showLoadingImage = __webpack_require__(419).showLoadingImage;
	var template = __webpack_require__(419).template;
	var localize = __webpack_require__(423).localize;
	var Client = __webpack_require__(305).Client;
	var url_for_static = __webpack_require__(306).url_for_static;
	var url_for = __webpack_require__(306).url_for;
	var default_redirect_url = __webpack_require__(306).default_redirect_url;
	var Content = __webpack_require__(426).Content;

	var TNCApproval = function () {
	    'use strict';

	    var terms_conditions_version = void 0,
	        client_tnc_status = void 0,
	        hiddenClass = void 0,
	        redirectUrl = void 0,
	        isReal = void 0;

	    var init = function init() {
	        hiddenClass = 'invisible';
	        showLoadingImage($('#tnc-loading'));

	        redirectUrl = sessionStorage.getItem('tnc_redirect');
	        sessionStorage.removeItem('tnc_redirect');

	        BinarySocket.send({ get_settings: '1' });
	        BinarySocket.send({ website_status: '1' });

	        $('#btn-accept').click(function (e) {
	            e.preventDefault();
	            e.stopPropagation();
	            BinarySocket.send({ tnc_approval: '1' });
	        });
	    };

	    var showTNC = function showTNC() {
	        if (!terms_conditions_version || !client_tnc_status || !Client.get_value('landing_company_fullname')) {
	            return;
	        }

	        if (terms_conditions_version === client_tnc_status) {
	            redirectBack();
	            return;
	        }

	        $('#tnc-loading').addClass(hiddenClass);
	        $('#tnc_image').attr('src', url_for_static('images/pages/cashier/protection-icon.svg'));
	        $('#tnc_approval').removeClass(hiddenClass);
	        var $tnc_msg = $('#tnc-message');
	        var tnc_message = template($tnc_msg.html(), [Client.get_value('landing_company_fullname'), Client.get_value('residence') === 'jp' ? url_for('terms-and-conditions-jp') : url_for('terms-and-conditions')]);
	        $tnc_msg.html(tnc_message).removeClass(hiddenClass);
	        $('#btn-accept').text(localize('OK'));
	    };

	    var responseTNCApproval = function responseTNCApproval(response) {
	        if (!response.hasOwnProperty('error')) {
	            sessionStorage.setItem('check_tnc', 'checked');
	            redirectBack();
	        } else {
	            $('#err_message').html(response.error.message).removeClass(hiddenClass);
	        }
	    };

	    var redirectBack = function redirectBack() {
	        window.location.href = redirectUrl || default_redirect_url();
	    };

	    var apiResponse = function apiResponse(response) {
	        isReal = !Client.get_boolean('is_virtual');
	        if (!isReal) {
	            redirectBack();
	        }

	        switch (response.msg_type) {
	            case 'website_status':
	                terms_conditions_version = response.website_status.terms_conditions_version;
	                showTNC();
	                break;
	            case 'get_settings':
	                client_tnc_status = response.get_settings.client_tnc_status || '-';
	                showTNC();
	                break;
	            case 'tnc_approval':
	                responseTNCApproval(response);
	                break;
	            default:
	                break;
	        }
	    };

	    var onLoad = function onLoad() {
	        BinarySocket.init({
	            onmessage: function onmessage(msg) {
	                var response = JSON.parse(msg.data);
	                if (response) {
	                    TNCApproval.apiResponse(response);
	                }
	            }
	        });

	        Content.populate();
	        TNCApproval.init();
	    };

	    return {
	        init: init,
	        apiResponse: apiResponse,
	        showTNC: showTNC,
	        onLoad: onLoad
	    };
	}();

	module.exports = {
	    TNCApproval: TNCApproval
	};

/***/ },
/* 438 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var showLocalTimeOnHover = __webpack_require__(439).Clock.showLocalTimeOnHover;
	var toJapanTimeIfNeeded = __webpack_require__(439).Clock.toJapanTimeIfNeeded;
	var objectNotEmpty = __webpack_require__(419).objectNotEmpty;
	var format_money = __webpack_require__(440).format_money;
	// const japanese_client      = require('../../../common_functions/country_base').japanese_client;
	var MBPrice = __webpack_require__(442).MBPrice;
	var ViewPopupUI = __webpack_require__(448).ViewPopupUI;
	var moment = __webpack_require__(308);
	var State = __webpack_require__(304).State;
	var Highchart = __webpack_require__(449).Highchart;
	var WSTickDisplay = __webpack_require__(453).WSTickDisplay;
	var localize = __webpack_require__(423).localize;

	var ViewPopupWS = function () {
	    'use strict';

	    var contractID = void 0,
	        contractType = void 0,
	        contract = void 0,
	        isSold = void 0,
	        isSellClicked = void 0,
	        chartStarted = void 0,
	        tickForgotten = void 0,
	        candleForgotten = void 0,
	        corporateActionEvent = void 0,
	        corporateActionSent = void 0,
	        chartUpdated = void 0;
	    var $Container = void 0,
	        $loading = void 0,
	        btnView = void 0,
	        popupboxID = void 0,
	        wrapperID = void 0,
	        winStatusID = void 0,
	        hiddenClass = void 0;

	    var init = function init(button) {
	        btnView = button;
	        contractID = $(btnView).attr('contract_id');
	        contractType = '';
	        contract = {};
	        isSold = false;
	        isSellClicked = false;
	        chartStarted = false;
	        tickForgotten = false;
	        candleForgotten = false;
	        chartUpdated = false;
	        corporateActionEvent = false;
	        corporateActionSent = false;
	        $Container = '';
	        popupboxID = 'inpage_popup_content_box';
	        wrapperID = 'sell_content_wrapper';
	        winStatusID = 'contract_win_status';
	        hiddenClass = 'hidden';

	        if (btnView) {
	            ViewPopupUI.disable_button($(btnView));
	            ViewPopupUI.cleanup(true);
	        }

	        getContract();

	        setLoadingState(true);
	    };

	    var responseContract = function responseContract(response) {
	        if (!response.proposal_open_contract || !objectNotEmpty(response.proposal_open_contract)) {
	            showErrorPopup(response);
	            return;
	        }
	        // In case of error such as legacy shortcode, this call is returning the error message
	        // but no error field. To specify those cases, we check for other fields existence
	        if (!response.proposal_open_contract.hasOwnProperty('shortcode')) {
	            showErrorPopup(response, response.proposal_open_contract.validation_error);
	            return;
	        }

	        $.extend(contract, response.proposal_open_contract);

	        if (contract && contractType) {
	            if (!document.getElementById(wrapperID)) return;
	            ViewPopupWS[contractType + 'Update']();
	            return;
	        }

	        // ----- Corporate Action -----
	        if (contract.has_corporate_actions && !corporateActionSent) {
	            corporateActionSent = true;
	            getCorporateActions();
	        }

	        // ----- Spread -----
	        if (contract.shortcode.toUpperCase().indexOf('SPREAD') === 0) {
	            contractType = 'spread';
	            spreadShowContract();
	        } else {
	            // ----- Normal -----
	            contractType = 'normal';
	            normalShowContract();
	        }
	    };

	    // ===== Contract: Spread =====
	    var spreadShowContract = function spreadShowContract() {
	        setLoadingState(false);

	        spreadSetValues();

	        if (!$Container) {
	            $Container = spreadMakeTemplate();
	        }

	        $Container.find('#entry_level').text(contract.entry_level);
	        $Container.find('#per_point').text(contract.amount_per_point);

	        spreadUpdate();
	    };

	    var spreadSetValues = function spreadSetValues() {
	        contract.is_ended = contract.is_settleable || contract.is_sold;
	        contract.status = localize(contract.is_ended ? 'Closed' : 'Open');
	    };

	    var spreadUpdate = function spreadUpdate() {
	        spreadSetValues();

	        containerSetText('status', contract.status, { class: contract.is_ended ? 'loss' : 'profit' });
	        containerSetText('stop_loss_level', contract.stop_loss_level);
	        containerSetText('stop_profit_level', contract.stop_profit_level);
	        containerSetText('pl_value', parseFloat(contract.current_value_in_dollar).toFixed(2), { class: contract.current_value_in_dollar * 1 >= 0 ? 'profit' : 'loss' });
	        containerSetText('pl_point', parseFloat(contract.current_value_in_point).toFixed(2));

	        if (!contract.is_ended) {
	            containerSetText('sell_level', contract.current_level);
	        } else {
	            spreadContractEnded(contract.current_value_in_dollar * 1 >= 0);
	        }

	        sellSetVisibility(!isSellClicked && !contract.is_ended);
	    };

	    // const spreadContractEnded = function(is_win) {
	    var spreadContractEnded = function spreadContractEnded() {
	        $Container.find('#sell_level').parent('tr').addClass(hiddenClass);
	        $Container.find('#exit_level').text(contract.exit_level).parent('tr').removeClass(hiddenClass);
	        sellSetVisibility(false);
	        // showWinLossStatus(is_win);
	    };

	    var spreadMakeTemplate = function spreadMakeTemplate() {
	        $Container = $('<div/>');
	        $Container.prepend($('<div/>', { id: 'sell_bet_desc', class: 'popup_bet_desc drag-handle', text: localize('Contract Information') }));

	        var $table = $('<table><tbody></tbody></table>');
	        var tbody = spreadRow('Status', 'status', contract.is_ended ? 'loss' : 'profit') + spreadRow('Entry Level', 'entry_level') + spreadRow('Exit Level', 'exit_level', '', '', !contract.is_ended) + spreadRow('Stop Loss Level', 'stop_loss_level') + spreadRow('Stop Profit Level', 'stop_profit_level') + spreadRow('Current Level', 'sell_level', '', '', contract.is_ended) + spreadRow('Amount Per Point', 'per_point') + spreadRow('Profit/Loss', 'pl_value', contract.profit >= 0 ? 'profit' : 'loss', ' (' + contract.currency + ')') + spreadRow('Profit/Loss (points)', 'pl_point');

	        $table.find('tbody').append(tbody);
	        $Container.append($('<div/>', { id: wrapperID }).append($('<div/>', { id: 'spread_table' }).append($table)).append($('<div/>', { id: 'errMsg', class: 'notice-msg ' + hiddenClass })).append($('<div/>', { id: winStatusID, class: hiddenClass })).append($('<div/>', { id: 'contract_sell_wrapper', class: hiddenClass })));

	        ViewPopupUI.show_inpage_popup('<div class="' + popupboxID + '">' + $Container.html() + '</div>', 'spread_popup', '#sell_bet_desc, #sell_content_wrapper');

	        return $('#' + wrapperID);
	    };

	    var spreadRow = function spreadRow(label, id, classname, label_no_localize, isHidden) {
	        return '<tr' + (isHidden ? ' class="' + hiddenClass + '"' : '') + '><td>' + localize(label) + (label_no_localize || '') + '</td><td' + (id ? ' id="' + id + '"' : '') + (classname ? ' class="' + classname + '"' : '') + '></td></tr>';
	    };

	    // ===== Contract: Normal =====
	    var normalShowContract = function normalShowContract() {
	        setLoadingState(false);

	        if (!$Container) {
	            $Container = normalMakeTemplate();
	        }

	        containerSetText('trade_details_contract_id', contract.contract_id);

	        containerSetText('trade_details_start_date', toJapanTimeIfNeeded(epochToDateTime(contract.date_start)));
	        if (document.getElementById('trade_details_end_date')) containerSetText('trade_details_end_date', toJapanTimeIfNeeded(epochToDateTime(contract.date_expiry)));
	        containerSetText('trade_details_payout', format_money(contract.currency, contract.payout));
	        containerSetText('trade_details_purchase_price', format_money(contract.currency, contract.buy_price));

	        normalUpdateTimers();
	        normalUpdate();
	        ViewPopupUI.reposition_confirmation();
	        if (State.get('is_mb_trading')) MBPrice.hidePriceOverlay();
	    };

	    var normalUpdate = function normalUpdate() {
	        var finalPrice = contract.sell_price || contract.bid_price,
	            is_started = !contract.is_forward_starting || contract.current_spot_time > contract.date_start,
	            user_sold = contract.sell_time && contract.sell_time < contract.date_expiry,
	            is_ended = contract.is_settleable || contract.is_sold || user_sold,
	            indicative_price = finalPrice && is_ended ? contract.sell_price || contract.bid_price : contract.bid_price ? contract.bid_price : null;

	        if (contract.barrier_count > 1) {
	            containerSetText('trade_details_barrier', contract.high_barrier, '', true);
	            containerSetText('trade_details_barrier_low', contract.low_barrier, '', true);
	        } else if (contract.barrier) {
	            containerSetText('trade_details_barrier', contract.entry_tick_time ? contract.contract_type === 'DIGITMATCH' ? localize('Equals') + ' ' + contract.barrier : contract.contract_type === 'DIGITDIFF' ? localize('Not') + ' ' + contract.barrier : contract.barrier : '-', '', true);
	        }

	        var currentSpot = !is_ended ? contract.current_spot : user_sold ? '' : contract.exit_tick;
	        var currentSpotTime = !is_ended ? contract.current_spot_time : user_sold ? '' : contract.exit_tick_time;

	        if (currentSpot) {
	            containerSetText('trade_details_current_spot', currentSpot);
	        } else {
	            $('#trade_details_current_spot').parent().addClass(hiddenClass);
	        }

	        if (currentSpotTime) {
	            containerSetText('trade_details_current_date', toJapanTimeIfNeeded(epochToDateTime(currentSpotTime)));
	        } else {
	            $('#trade_details_current_date').parent().addClass(hiddenClass);
	        }

	        containerSetText('trade_details_ref_id', contract.transaction_ids.buy + (contract.transaction_ids.sell ? ' - ' + contract.transaction_ids.sell : ''));
	        containerSetText('trade_details_indicative_price', indicative_price ? format_money(contract.currency, indicative_price) : '-');

	        var profit_loss = void 0,
	            percentage = void 0;
	        // const jp_client;

	        if (finalPrice) {
	            profit_loss = finalPrice - contract.buy_price;
	            percentage = (profit_loss * 100 / contract.buy_price).toFixed(2);
	            // jp_client = japanese_client();
	            containerSetText('trade_details_profit_loss', format_money(contract.currency, profit_loss) + '<span>(' + (percentage > 0 ? '+' : '') + percentage + '%)</span>', { class: profit_loss >= 0 ? 'profit' : 'loss' });
	        } else {
	            containerSetText('trade_details_profit_loss', '-', { class: 'loss' });
	        }

	        if (!is_started) {
	            containerSetText('trade_details_entry_spot', '-');
	            containerSetText('trade_details_message', localize('Contract is not started yet'));
	        } else {
	            if (contract.entry_spot > 0) {
	                containerSetText('trade_details_entry_spot', contract.entry_spot);
	            }
	            containerSetText('trade_details_message', contract.validation_error ? contract.validation_error : corporateActionEvent ? '* ' + localize('This contract was affected by a Corporate Action event.') : '&nbsp;');
	        }

	        if (!chartStarted && !contract.tick_count) {
	            if (!tickForgotten) {
	                tickForgotten = true;
	                socketSend({ forget_all: 'ticks' });
	            }
	            if (!candleForgotten) {
	                candleForgotten = true;
	                socketSend({ forget_all: 'candles' });
	                Highchart.show_chart(contract);
	            }
	            if (candleForgotten && tickForgotten) {
	                Highchart.show_chart(contract, 'update');
	                if (contract.entry_tick_time) {
	                    chartStarted = true;
	                }
	            }
	        } else if (contract.tick_count && !chartUpdated) {
	            WSTickDisplay.updateChart('', contract);
	            chartUpdated = true;
	        }

	        if (!isSold && user_sold) {
	            isSold = true;
	            if (!contract.tick_count) Highchart.show_chart(contract, 'update');
	        }
	        if (is_ended) {
	            normalContractEnded(parseFloat(profit_loss) >= 0);
	            if (contract.is_valid_to_sell && contract.is_settleable && !contract.is_sold && !isSellClicked) {
	                ViewPopupUI.forget_streams();
	                sellExpired();
	            }
	            if (!contract.tick_count) Highchart.show_chart(contract, 'update');
	        }

	        if (!contract.is_valid_to_sell) {
	            $Container.find('#errMsg').addClass(hiddenClass);
	        }

	        sellSetVisibility(!isSellClicked && !isSold && !is_ended && +contract.is_valid_to_sell === 1);
	        contract.chart_validation_error = contract.validation_error;
	        contract.validation_error = '';
	    };

	    var normalUpdateTimers = function normalUpdateTimers() {
	        var update_time = function update_time() {
	            var now = Math.max(Math.ceil((window.time || 0) / 1000), contract.current_spot_time || 0);
	            containerSetText('trade_details_live_date', toJapanTimeIfNeeded(epochToDateTime(now)));
	            showLocalTimeOnHover('#trade_details_live_date');

	            var is_started = !contract.is_forward_starting || contract.current_spot_time > contract.date_start,
	                is_ended = contract.is_settleable || contract.is_sold;
	            if ((!is_started || is_ended || now >= contract.date_expiry) && document.getElementById('trade_details_live_remaining')) {
	                containerSetText('trade_details_live_remaining', '-');
	            } else {
	                var remained = contract.date_expiry - now,
	                    days = 0;
	                var day_seconds = 24 * 60 * 60;
	                if (remained > day_seconds) {
	                    days = Math.floor(remained / day_seconds);
	                    remained %= day_seconds;
	                }
	                if (document.getElementById('trade_details_live_remaining')) {
	                    containerSetText('trade_details_live_remaining', (days > 0 ? days + ' ' + localize(days > 1 ? 'days' : 'day') + ', ' : '') + moment(remained * 1000).utc().format('HH:mm:ss'));
	                }
	            }
	        };
	        update_time();

	        clearInterval(window.ViewPopupTimerInterval);
	        window.ViewPopupTimerInterval = setInterval(update_time, 500);
	    };

	    // const normalContractEnded = function(is_win) {
	    var normalContractEnded = function normalContractEnded() {
	        containerSetText('trade_details_current_title', localize(contract.sell_spot_time < contract.date_expiry ? 'Contract Sold' : 'Contract Expiry'));
	        containerSetText('trade_details_spot_label', localize('Exit Spot'));
	        containerSetText('trade_details_spottime_label', localize('Exit Spot Time'));
	        containerSetText('trade_details_indicative_label', localize('Price'));
	        // show validation error if contract is not settled yet
	        if (!(contract.is_settleable && !contract.is_sold)) {
	            containerSetText('trade_details_message', '&nbsp;');
	        }
	        $Container.find('#errMsg').addClass(hiddenClass);
	        sellSetVisibility(false);
	        // showWinLossStatus(is_win);
	    };

	    var addColorAndClass = function addColorAndClass($tabToShow, $tabToHide, $contentToShow, $contentToHide) {
	        $tabToShow.attr('style', 'background: #f2f2f2;');
	        $tabToHide.attr('style', 'background: #c2c2c2;');
	        $contentToHide.addClass('invisible');
	        $contentToShow.removeClass('invisible');
	    };

	    var showCorporateAction = function showCorporateAction() {
	        var $contractInformationTab = $('#contract_information_tab'),
	            $contractInformationContent = $('#contract_information_content');

	        $contractInformationTab.removeAttr('colspan');
	        $('#contract_tabs').append('<th id="corporate_action_tab">' + localize('Corporate Action') + '</th>');

	        var $corporateActionTab = $('#corporate_action_tab'),
	            $corporateActionContent = $('#corporate_action_content');
	        var $barrierChange = $('#barrier_change'),
	            $barrierChangeContent = $('#barrier_change_content');

	        $corporateActionTab.attr('style', 'background: #c2c2c2;');
	        $('#sell_details_table').draggable({ disabled: true });

	        $corporateActionTab.on('click', function () {
	            addColorAndClass($corporateActionTab, $contractInformationTab, $corporateActionContent, $contractInformationContent);
	            $barrierChange.removeClass('invisible');
	            $barrierChangeContent.removeClass('invisible');
	        });
	        $contractInformationTab.on('click', function () {
	            $barrierChange.addClass('invisible');
	            $barrierChangeContent.addClass('invisible');
	            addColorAndClass($contractInformationTab, $corporateActionTab, $contractInformationContent, $corporateActionContent);
	        });
	    };

	    var populateCorporateAction = function populateCorporateAction(corporateAction) {
	        for (var i = 0; i < corporateAction.get_corporate_actions.actions.length; i++) {
	            $('#corporate_action_content').append(normalRow(corporateAction.get_corporate_actions.actions[i].display_date, '', '', '', corporateAction.get_corporate_actions.actions[i].type + ' (' + corporateAction.get_corporate_actions.actions[i].value + '-' + localize('for') + '-1)'));
	        }
	        var originalBarriers = void 0,
	            adjustedBarriers = void 0;

	        if (contract.original_barrier) {
	            originalBarriers = normalRow(localize('Original Barrier'), '', '', '', contract.original_barrier);
	        } else if (contract.original_high_barrier) {
	            originalBarriers = normalRow(localize('Original High Barrier'), '', '', '', contract.original_high_barrier) + normalRow(localize('Original Low Barrier'), '', '', '', contract.original_low_barrier);
	        }
	        if (contract.barrier) {
	            adjustedBarriers = normalRow(localize('Adjusted Barrier'), '', '', '', contract.barrier);
	        } else if (contract.high_barrier) {
	            adjustedBarriers = normalRow(localize('Adjusted High Barrier'), '', '', '', contract.high_barrier) + normalRow(localize('Adjusted Low Barrier'), '', '', '', contract.low_barrier);
	        }
	        $('#barrier_change_content').append(originalBarriers + adjustedBarriers);
	    };

	    var normalMakeTemplate = function normalMakeTemplate() {
	        $Container = $('<div/>').append($('<div/>', { id: wrapperID }));

	        var longcode = contract.longcode;

	        $Container.prepend($('<div/>', { id: 'sell_bet_desc', class: 'popup_bet_desc drag-handle', text: longcode }));
	        var $sections = $('<div/>').append($('<div class="gr-row container"><div id="sell_details_chart_wrapper" class="gr-8 gr-12-m"></div><div id="sell_details_table" class="gr-4 gr-12-m"></div></div>'));

	        $sections.find('#sell_details_table').append($('<table>' + '<tr id="contract_tabs"><th colspan="2" id="contract_information_tab">' + localize('Contract Information') + '</th></tr><tbody id="contract_information_content">' + normalRow('Contract ID', '', 'trade_details_contract_id') + normalRow('Reference ID', '', 'trade_details_ref_id') + normalRow('Start Time', '', 'trade_details_start_date') + (!contract.tick_count ? normalRow('End Time', '', 'trade_details_end_date') + normalRow('Remaining Time', '', 'trade_details_live_remaining') : '') + normalRow('Entry Spot', '', 'trade_details_entry_spot') + normalRow(contract.barrier_count > 1 ? 'High Barrier' : /^DIGIT(MATCH|DIFF)$/.test(contract.contract_type) ? 'Target' : 'Barrier', '', 'trade_details_barrier', true) + (contract.barrier_count > 1 ? normalRow('Low Barrier', '', 'trade_details_barrier_low', true) : '') + normalRow('Potential Payout', '', 'trade_details_payout') + normalRow('Purchase Price', '', 'trade_details_purchase_price') + '</tbody><tbody id="corporate_action_content" class="invisible"></tbody>' + '<th colspan="2" id="barrier_change" class="invisible">' + localize('Barrier Change') + '</th>' + '<tbody id="barrier_change_content" class="invisible"></tbody>' + '<tr><th colspan="2" id="trade_details_current_title">' + localize('Current') + '</th></tr>' + normalRow('Spot', 'trade_details_spot_label', 'trade_details_current_spot') + normalRow('Spot Time', 'trade_details_spottime_label', 'trade_details_current_date') + normalRow('Current Time', '', 'trade_details_live_date') + normalRow('Indicative', 'trade_details_indicative_label', 'trade_details_indicative_price') + normalRow('Profit/Loss', '', 'trade_details_profit_loss') + '<tr><td colspan="2" class="last_cell" id="trade_details_message">&nbsp;</td></tr>' + '</table>' + '<div id="errMsg" class="notice-msg hidden"></div>' + '<div id="trade_details_bottom"><div id="contract_sell_wrapper" class="' + hiddenClass + '"></div><div id="contract_sell_message"></div><div id="contract_win_status" class="' + hiddenClass + '"></div></div>'));

	        $sections.find('#sell_details_chart_wrapper').html('<div id="live_chart_form_wrapper" class="gr-12"></div>' + '<div class="chart-notice"><div class="notice" id="delayed_feed_notice" style="display: none;">Charting for this underlying is delayed</div><div class="notice" id="not_available_notice" style="display: none;">Charting is not available for this underlying</div></div>' + '<div id="' + (contract.tick_count ? 'tick_chart' : 'analysis_live_chart') + '" class="live_chart_wrapper gr-12"></div>');

	        $Container.find('#' + wrapperID).append($sections.html()).append($('<div/>', { id: 'errMsg', class: 'notice-msg ' + hiddenClass }));

	        ViewPopupUI.show_inpage_popup('<div class="' + popupboxID + '">' + $Container.html() + '</div>', '', '#sell_bet_desc');
	        return $('#' + wrapperID);
	    };

	    var normalRow = function normalRow(label, label_id, value_id, isHidden, value) {
	        return '<tr' + (isHidden ? ' class="' + hiddenClass + '"' : '') + '><td' + (label_id ? ' id="' + label_id + '"' : '') + '>' + localize(label) + '</td><td' + (value_id ? ' id="' + value_id + '"' : '') + '>' + (value || '') + '</td></tr>';
	    };

	    var epochToDateTime = function epochToDateTime(epoch) {
	        return moment.utc(epoch * 1000).format('YYYY-MM-DD HH:mm:ss');
	    };

	    // ===== Tools =====
	    var containerSetText = function containerSetText(id, string, attributes, isVisible) {
	        if (!$Container || $Container.length === 0) {
	            $Container = $('#' + wrapperID);
	        }

	        var $target = $Container.find('#' + id);
	        if ($target && $target.length > 0) {
	            $target.html(string);
	            if (attributes) $target.attr(attributes);
	            if (isVisible) $target.parent('tr').removeClass(hiddenClass);
	        }
	    };

	    /* const showWinLossStatus = function(isWin) {
	        containerSetText(
	            winStatusID,
	            localize('This contract has ' + (isWin ? 'WON' : 'LOST')),
	            {class: isWin ? 'won' : 'lost'}
	        );
	    };*/

	    var setLoadingState = function setLoadingState(showLoading) {
	        if (showLoading) {
	            $loading = $('#trading_init_progress');
	            if ($loading.length) {
	                $loading.show();
	            }
	        } else {
	            if ($loading.length) {
	                $loading.hide();
	            }
	            if (btnView) {
	                ViewPopupUI.enable_button($(btnView));
	            }
	        }
	    };

	    var showMessagePopup = function showMessagePopup(message, title, msgClass) {
	        setLoadingState(false);
	        var $con = $('<div/>');
	        $con.prepend($('<div/>', { id: 'sell_bet_desc', class: 'popup_bet_desc drag-handle', text: localize(title) }));
	        $con.append($('<div/>', { id: wrapperID }).append($('<div/>', { class: msgClass, html: localize(message) })));
	        ViewPopupUI.show_inpage_popup('<div class="' + popupboxID + '">' + $con.html() + '</div>', 'message_popup', '#sell_bet_desc');
	    };

	    var showErrorPopup = function showErrorPopup(response, message) {
	        message = message || 'Sorry, an error occurred while processing your request.';
	        showMessagePopup(localize(message), 'There was an error', 'notice-msg');
	        console.log(response);
	    };

	    var sellSetVisibility = function sellSetVisibility(show) {
	        var sellWrapperID = 'sell_at_market_wrapper',
	            sellButtonID = 'sell_at_market';
	        var isExist = $Container.find('#' + sellWrapperID).length > 0;
	        if (show) {
	            if (isExist) return;
	            if (contractType === 'spread') {
	                $Container.find('#contract_sell_wrapper').removeClass(hiddenClass).append($('<p/>', { id: sellWrapperID, class: 'button' }).append($('<button/>', { id: sellButtonID, class: 'button', text: localize('Sell') })));
	            } else {
	                $Container.find('#contract_sell_wrapper').removeClass(hiddenClass).append($('<div id="' + sellWrapperID + '"><span class="button"><button id="' + sellButtonID + '" class="button">' + localize('Sell at market') + '</button></span>' + '<div class="note"><strong>' + localize('Note') + ':</strong> ' + localize('Contract will be sold at the prevailing market price when the request is received by our servers. This price may differ from the indicated price.') + '</div>'));
	            }
	            $Container.find('#' + sellButtonID).unbind('click').click(function (e) {
	                e.preventDefault();
	                e.stopPropagation();
	                isSellClicked = true;
	                sellSetVisibility(false);
	                sellContract();
	            });
	        } else {
	            if (!isExist) return;
	            $Container.find('#' + sellButtonID).unbind('click');
	            $Container.find('#' + sellWrapperID).remove();
	        }
	    };

	    // ===== Requests & Responses =====
	    // ----- Get Contract -----
	    var getContract = function getContract(option) {
	        if (contractID) {
	            ViewPopupUI.forget_streams();
	            var req = {
	                proposal_open_contract: 1,
	                contract_id: contractID,
	                subscribe: 1
	            };
	            if (option === 'no-subscribe') delete req.subscribe;
	            socketSend(req);
	        }
	    };

	    // ----- Corporate Action -----
	    var getCorporateActions = function getCorporateActions() {
	        var epoch = window.time.unix();
	        var end_time = epoch < contract.date_expiry ? epoch.toFixed(0) : contract.date_expiry;
	        socketSend({
	            get_corporate_actions: '1',
	            symbol: contract.underlying,
	            start: contract.date_start,
	            end: end_time
	        });
	    };

	    // ----- Sell Expired -----
	    var sellExpired = function sellExpired() {
	        socketSend({ sell_expired: 1, passthrough: {} });
	    };

	    var responseSellExpired = function responseSellExpired() {
	        getContract();
	    };

	    // ----- Sell Contract -----
	    var sellContract = function sellContract() {
	        socketSend({ sell: contractID, price: contract.bid_price, passthrough: {} });
	    };

	    var responseSell = function responseSell(response) {
	        if (response.hasOwnProperty('error')) {
	            if (response.error.code === 'NoOpenPosition') {
	                getContract();
	            } else {
	                $Container.find('#errMsg').text(response.error.message).removeClass(hiddenClass);
	            }
	            sellSetVisibility(true);
	            isSellClicked = false;
	            return;
	        }
	        ViewPopupUI.forget_streams();
	        $Container.find('#errMsg').addClass(hiddenClass);
	        sellSetVisibility(false);
	        if (contractType === 'spread') {
	            getContract();
	        } else if (contractType === 'normal') {
	            if (isSellClicked) {
	                containerSetText('contract_sell_message', localize('You have sold this contract at [_1] [_2]', [contract.currency, response.sell.sold_for]) + '<br />' + localize('Your transaction reference number is [_1]', [response.sell.transaction_id]));
	            }
	            getContract('no-subscribe');
	        }
	    };

	    var socketSend = function socketSend(req) {
	        if (!req.hasOwnProperty('passthrough')) {
	            req.passthrough = {};
	        }
	        req.passthrough.dispatch_to = 'ViewPopupWS';
	        BinarySocket.send(req);
	    };

	    var dispatch = function dispatch(response) {
	        switch (response.msg_type) {
	            case 'proposal_open_contract':
	                if (response.proposal_open_contract) {
	                    if (response.proposal_open_contract.contract_id === contractID) {
	                        ViewPopupUI.storeSubscriptionID(response.proposal_open_contract.id);
	                        responseContract(response);
	                    } else {
	                        BinarySocket.send({ forget: response.proposal_open_contract.id });
	                    }
	                } else if (response.echo_req.contract_id === contractID && response.error && response.error.code !== 'AlreadySubscribed') {
	                    showErrorPopup(response, response.error.message);
	                }
	                break;
	            case 'sell':
	                responseSell(response);
	                break;
	            case 'sell_expired':
	                responseSellExpired();
	                break;
	            case 'get_corporate_actions':
	                if (objectNotEmpty(response.get_corporate_actions)) {
	                    corporateActionEvent = true;
	                    containerSetText('trade_details_message', contract.validation_error ? contract.validation_error : corporateActionEvent ? '* ' + localize('This contract was affected by a Corporate Action event.') : '&nbsp;');
	                    populateCorporateAction(response);
	                    showCorporateAction();
	                }
	                break;
	            default:
	                break;
	        }
	        var dates = ['#trade_details_start_date', '#trade_details_end_date', '#trade_details_current_date', '#trade_details_live_date'];
	        for (var i = 0; i < dates.length; i++) {
	            showLocalTimeOnHover(dates[i]);
	            $(dates[i]).attr('data-balloon-pos', 'left');
	        }
	    };

	    return {
	        init: init,
	        dispatch: dispatch,
	        spreadUpdate: spreadUpdate,
	        normalUpdate: normalUpdate
	    };
	}();

	module.exports = {
	    ViewPopupWS: ViewPopupWS
	};

/***/ },
/* 439 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var moment = __webpack_require__(308);
	var japanese_client = __webpack_require__(307).japanese_client;

	var Clock = function () {
	    var clock_started = false;

	    var showLocalTimeOnHover = function showLocalTimeOnHover(s) {
	        if (japanese_client()) return;
	        $(s || '.date').each(function (idx, ele) {
	            var gmtTimeStr = ele.textContent.replace('\n', ' ');
	            var localTime = moment.utc(gmtTimeStr, 'YYYY-MM-DD HH:mm:ss').local();
	            if (!localTime.isValid()) {
	                return;
	            }

	            var localTimeStr = localTime.format('YYYY-MM-DD HH:mm:ss Z');
	            $(ele).attr('data-balloon', localTimeStr);
	        });
	    };

	    var toJapanTimeIfNeeded = function toJapanTimeIfNeeded(gmtTimeStr, showTimeZone, longcode, hideSeconds) {
	        var match = void 0;
	        if (longcode && longcode !== '') {
	            match = longcode.match(/((?:\d{4}-\d{2}-\d{2})\s?(\d{2}:\d{2}:\d{2})?(?:\sGMT)?)/);
	            if (!match) return longcode;
	        }

	        var jp_client = japanese_client();
	        var time = void 0;

	        if (typeof gmtTimeStr === 'number') {
	            time = moment.utc(gmtTimeStr * 1000);
	        } else if (gmtTimeStr) {
	            time = moment.utc(gmtTimeStr, 'YYYY-MM-DD HH:mm:ss');
	        } else {
	            time = moment.utc(match[0], 'YYYY-MM-DD HH:mm:ss');
	        }

	        if (!time.isValid()) {
	            return null;
	        }

	        var timeStr = time.utcOffset(jp_client ? '+09:00' : '+00:00').format((hideSeconds ? 'YYYY-MM-DD HH:mm' : 'YYYY-MM-DD HH:mm:ss') + (showTimeZone && showTimeZone !== '' ? jp_client ? ' zZ' : ' Z' : ''));

	        return longcode ? longcode.replace(match[0], timeStr) : timeStr;
	    };

	    var start_clock_ws = function start_clock_ws() {
	        var getTime = function getTime() {
	            clock_started = true;
	            BinarySocket.send({ time: 1, passthrough: { client_time: moment().valueOf() } });
	        };
	        setInterval(getTime, 30000);
	        getTime();
	    };

	    var time_counter = function time_counter(response) {
	        if (isNaN(response.echo_req.passthrough.client_time) || response.error) {
	            start_clock_ws();
	            return;
	        }
	        clearTimeout(window.HeaderTimeUpdateTimeOutRef);
	        var $clock = $('#gmt-clock'),
	            start_timestamp = response.time,
	            pass = response.echo_req.passthrough.client_time;

	        var client_time_at_response = moment().valueOf(),
	            server_time_at_response = start_timestamp * 1000 + (client_time_at_response - pass);
	        var update_time = function update_time() {
	            window.time = moment(server_time_at_response + moment().valueOf() - client_time_at_response).utc();
	            var timeStr = window.time.format('YYYY-MM-DD HH:mm') + ' GMT';
	            if (japanese_client()) {
	                $clock.html(toJapanTimeIfNeeded(timeStr, 1, '', 1));
	            } else {
	                $clock.html(timeStr);
	                showLocalTimeOnHover('#gmt-clock');
	            }
	            window.HeaderTimeUpdateTimeOutRef = setTimeout(update_time, 1000);
	        };
	        update_time();
	    };

	    return {
	        start_clock_ws: start_clock_ws,
	        time_counter: time_counter,
	        getClockStarted: function getClockStarted() {
	            return clock_started;
	        },

	        showLocalTimeOnHover: showLocalTimeOnHover,
	        toJapanTimeIfNeeded: toJapanTimeIfNeeded
	    };
	}();

	module.exports = {
	    Clock: Clock
	};

/***/ },
/* 440 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var japanese_client = __webpack_require__(307).japanese_client;
	var addComma = __webpack_require__(441).addComma;
	var getLanguage = __webpack_require__(303).getLanguage;

	function format_money(currencyValue, amount) {
	    var money = void 0;
	    if (amount) amount = String(amount).replace(/,/g, '');
	    if (typeof Intl !== 'undefined' && currencyValue && currencyValue !== '' && amount && amount !== '') {
	        var options = { style: 'currency', currency: currencyValue },
	            language = typeof window !== 'undefined' ? getLanguage().toLowerCase() : 'en';
	        money = new Intl.NumberFormat(language.replace('_', '-'), options).format(amount);
	    } else {
	        var updatedAmount = void 0,
	            sign = '';
	        if (japanese_client()) {
	            updatedAmount = parseInt(amount);
	            if (Number(updatedAmount) < 0) {
	                sign = '-';
	            }
	        } else {
	            updatedAmount = parseFloat(amount).toFixed(2);
	        }
	        updatedAmount = addComma(updatedAmount);
	        var symbol = format_money.map[currencyValue];
	        if (symbol === undefined) {
	            money = currencyValue + ' ' + updatedAmount;
	        } else {
	            money = sign + symbol + updatedAmount;
	        }
	    }
	    return money;
	}

	function format_currency(currency) {
	    return format_money.map[currency];
	}

	// Taken with modifications from:
	//    https://github.com/bengourley/currency-symbol-map/blob/master/map.js
	// When we need to handle more currencies please look there.
	format_money.map = {
	    USD: '$',
	    GBP: '£',
	    AUD: 'A$',
	    EUR: '€',
	    JPY: '¥'
	};

	module.exports = {
	    format_money: format_money,
	    format_currency: format_currency
	};

/***/ },
/* 441 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var checkInput = __webpack_require__(420).checkInput;

	var toTitleCase = function toTitleCase(str) {
	    return str.replace(/\w[^\s\/\\]*/g, function (txt) {
	        return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();
	    });
	};

	var addComma = function addComma(num, decimal_points) {
	    num = String(num || 0).replace(/,/g, '') * 1;
	    return num.toFixed(decimal_points || 2).toString().replace(/(^|[^\w.])(\d{4,})/g, function ($0, $1, $2) {
	        return $1 + $2.replace(/\d(?=(?:\d\d\d)+(?!\d))/g, '$&,');
	    });
	};

	var toISOFormat = function toISOFormat(date) {
	    return date.format('YYYY-MM-DD');
	};

	var toReadableFormat = function toReadableFormat(date) {
	    if ($(window).width() < 770 && checkInput('date', 'not-a-date')) {
	        return toISOFormat(date);
	    }
	    return date.format('DD MMM, YYYY');
	};

	module.exports = {
	    toISOFormat: toISOFormat,
	    toReadableFormat: toReadableFormat,
	    toTitleCase: toTitleCase,
	    addComma: addComma
	};

/***/ },
/* 442 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var MBContract = __webpack_require__(443).MBContract;
	var MBDefaults = __webpack_require__(444).MBDefaults;
	var MBNotifications = __webpack_require__(447).MBNotifications;
	var objectNotEmpty = __webpack_require__(419).objectNotEmpty;
	var localize = __webpack_require__(423).localize;
	var Client = __webpack_require__(305).Client;
	var japanese_client = __webpack_require__(307).japanese_client;
	var addComma = __webpack_require__(441).addComma;
	var elementInnerHtml = __webpack_require__(420).elementInnerHtml;

	/*
	 * Price object handles all the functions we need to display prices
	 *
	 * We create Price proposal that we need to send to server to get price,
	 * longcode and all other information that we need to get the price for
	 * current contract
	 *
	 */

	var MBPrice = function () {
	    'use strict';

	    var price_selector = '.prices-wrapper .price-rows';
	    var prices = {},
	        contract_types = {},
	        barriers = [],
	        req_id = 0,
	        res_count = 0,
	        is_displayed = false,
	        is_unwelcome = false,
	        $tables = void 0;

	    var addPriceObj = function addPriceObj(req) {
	        var barrier = makeBarrier(req);
	        if (!prices[barrier]) {
	            prices[barrier] = {};
	        }
	        prices[barrier][req.contract_type] = {};
	        if (!contract_types[req.contract_type]) {
	            contract_types[req.contract_type] = MBContract.getTemplate(req.contract_type);
	        }
	    };

	    var makeBarrier = function makeBarrier(req) {
	        return (req.barrier2 ? req.barrier2 + '_' : '') + req.barrier;
	    };

	    var display = function display(response) {
	        var barrier = makeBarrier(response.echo_req);
	        var contract_type = response.echo_req.contract_type;
	        var prev_proposal = $.extend({}, prices[barrier][contract_type]);

	        if (!objectNotEmpty(prev_proposal)) {
	            res_count++;
	        }

	        prices[barrier][contract_type] = response;
	        // update previous ask_price to use in price movement
	        if (objectNotEmpty(prev_proposal) && !prev_proposal.error) {
	            prices[barrier][contract_type].prev_price = prev_proposal.proposal.ask_price;
	        }

	        // populate table if all proposals received
	        if (!is_displayed && res_count === Object.keys(prices).length * 2) {
	            populateTable();
	        } else {
	            updatePrice(prices[barrier][contract_type]);
	        }
	    };

	    var populateTable = function populateTable() {
	        if (!$tables) {
	            $tables = $(price_selector);
	        }
	        if (!barriers.length) {
	            barriers = Object.keys(prices).sort(function (a, b) {
	                return +b.split('_')[0] - +a.split('_')[0];
	            });
	        }

	        is_unwelcome = Client.status_detected('unwelcome');
	        if (is_unwelcome) {
	            MBNotifications.show({
	                text: localize('Sorry, your account is not authorised for any further contract purchases.'),
	                uid: 'UNWELCOME',
	                dismissible: false
	            });
	        }

	        barriers.forEach(function (barrier) {
	            Object.keys(contract_types).forEach(function (contract_type) {
	                $($tables[+contract_types[contract_type].order]).append(makePriceRow(getValues(prices[barrier][contract_type])));
	            });
	        });

	        MBPrice.hidePriceOverlay();
	        MBNotifications.hideSpinnerShowTrading();
	        is_displayed = true;
	    };

	    var updatePrice = function updatePrice(proposal) {
	        var barrier = makeBarrier(proposal.echo_req);
	        var price_rows = document.querySelectorAll(price_selector + ' div[data-barrier="' + barrier + '"]');

	        if (!price_rows.length) return;

	        var contract_type = proposal.echo_req.contract_type;
	        var contract_info = contract_types[contract_type];
	        var contract_info_opp = contract_types[contract_info.opposite];
	        var values = getValues(proposal);
	        var values_opp = getValues(prices[barrier][contract_info.opposite]);

	        elementInnerHtml(price_rows[+contract_info.order], makePriceRow(values, true));
	        elementInnerHtml(price_rows[+contract_info_opp.order], makePriceRow(values_opp, true));
	    };

	    var getValues = function getValues(proposal) {
	        var barrier = makeBarrier(proposal.echo_req),
	            payout = proposal.echo_req.amount,
	            contract_type = proposal.echo_req.contract_type,
	            proposal_opp = prices[barrier][contract_types[contract_type].opposite];
	        return {
	            contract_type: contract_type,
	            barrier: barrier,
	            is_active: !proposal.error && proposal.proposal.ask_price && !is_unwelcome,
	            message: proposal.error && proposal.error.code !== 'RateLimit' ? proposal.error.message : '',
	            ask_price: getAskPrice(proposal),
	            sell_price: payout - getAskPrice(proposal_opp),
	            ask_price_movement: !proposal.error ? getMovementDirection(proposal.prev_price, proposal.proposal.ask_price) : '',
	            sell_price_movement: proposal_opp && !proposal_opp.error ? getMovementDirection(proposal_opp.proposal.ask_price, proposal_opp.prev_price) : ''
	        };
	    };

	    var getAskPrice = function getAskPrice(proposal) {
	        return proposal.error || +proposal.proposal.ask_price === 0 ? proposal.echo_req.amount : proposal.proposal.ask_price;
	    };

	    var getMovementDirection = function getMovementDirection(prev, current) {
	        return current > prev ? 'up' : current < prev ? 'down' : '';
	    };

	    var makePriceRow = function makePriceRow(values, is_update) {
	        var payout = MBDefaults.get('payout'),
	            is_japan = japanese_client();
	        return (is_update ? '' : '<div data-barrier="' + values.barrier + '" class="gr-row price-row">') + '<div class="gr-4 barrier">' + values.barrier.split('_').join(' ... ') + '</div>' + '<div class="gr-4 buy-price">' + '<button class="price-button' + (!values.is_active ? ' inactive' : '') + '"' + (values.is_active ? ' onclick="return HandleClick(\'MBPrice\', \'' + values.barrier + '\', \'' + values.contract_type + '\')"' : '') + (values.message ? ' data-balloon="' + values.message + '"' : '') + '>' + '<span class="value-wrapper">' + '<span class="dynamics ' + (values.ask_price_movement || '') + '"></span>' + formatPrice(values.ask_price) + '</span>' + (is_japan ? '<span class="base-value">(' + formatPrice(values.ask_price / payout) + ')</span>' : '') + '</button>' + '</div>' + '<div class="gr-4 sell-price">' + '<span class="price-wrapper' + (!values.sell_price ? ' inactive' : '') + '">' + '<span class="dynamics ' + (values.sell_price_movement || '') + '"></span>' + formatPrice(values.sell_price) + (is_japan ? '<span class="base-value">(' + formatPrice(values.sell_price / payout) + ')</span>' : '') + '</span>' + '</div>' + (is_update ? '' : '</div>');
	    };

	    var processBuy = function processBuy(barrier, contract_type) {
	        if (!barrier || !contract_type) return;
	        if (!Client.get_boolean('is_logged_in')) {
	            MBNotifications.show({ text: localize('Please log in.'), uid: 'LOGIN_ERROR', dismissible: true });
	            return;
	        }
	        MBPrice.showPriceOverlay();
	        MBPrice.sendBuyRequest(barrier, contract_type);
	    };

	    var formatPrice = function formatPrice(price) {
	        return addComma(price, japanese_client() ? '0' : 2);
	    };

	    var cleanup = function cleanup() {
	        prices = {};
	        contract_types = {};
	        barriers = [];
	        res_count = 0;
	        is_displayed = false;
	        // display loading
	        if ($(price_selector).html()) {
	            $('#loading-overlay').height($(price_selector).height()).removeClass('invisible');
	        }
	        $(price_selector).html('');
	    };

	    var sendBuyRequest = function sendBuyRequest(barrier, contract_type) {
	        var proposal = prices[barrier][contract_type];
	        if (!proposal || proposal.error) return;

	        var req = {
	            buy: 1,
	            price: proposal.proposal.ask_price,
	            parameters: {
	                amount: proposal.echo_req.amount,
	                barrier: proposal.echo_req.barrier,
	                basis: 'payout',
	                contract_type: proposal.echo_req.contract_type,
	                currency: MBContract.getCurrency(),
	                symbol: proposal.echo_req.symbol,
	                date_expiry: proposal.echo_req.date_expiry,
	                trading_period_start: proposal.echo_req.trading_period_start,
	                app_markup_percentage: '0'
	            }
	        };

	        if (proposal.echo_req.barrier2) {
	            req.parameters.barrier2 = proposal.echo_req.barrier2;
	        }

	        BinarySocket.send(req);
	    };

	    var showPriceOverlay = function showPriceOverlay() {
	        $('#disable-overlay').removeClass('invisible');
	    };

	    var hidePriceOverlay = function hidePriceOverlay() {
	        $('#disable-overlay, #loading-overlay').addClass('invisible');
	    };

	    return {
	        display: display,
	        addPriceObj: addPriceObj,
	        processBuy: processBuy,
	        cleanup: cleanup,
	        sendBuyRequest: sendBuyRequest,
	        showPriceOverlay: showPriceOverlay,
	        hidePriceOverlay: hidePriceOverlay,
	        getReqId: function getReqId() {
	            return req_id;
	        },
	        increaseReqId: function increaseReqId() {
	            req_id++;cleanup();
	        },
	        getPrices: function getPrices() {
	            return prices;
	        },
	        onUnload: function onUnload() {
	            cleanup();req_id = 0;$tables = undefined;
	        }
	    };
	}();

	module.exports = {
	    MBPrice: MBPrice
	};

/***/ },
/* 443 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var objectNotEmpty = __webpack_require__(419).objectNotEmpty;
	var localize = __webpack_require__(423).localize;
	var getLanguage = __webpack_require__(303).getLanguage;
	var Client = __webpack_require__(305).Client;
	var format_currency = __webpack_require__(440).format_currency;
	var japanese_client = __webpack_require__(307).japanese_client;
	var MBDefaults = __webpack_require__(444).MBDefaults;
	var MBSymbols = __webpack_require__(445).MBSymbols;
	var moment = __webpack_require__(308);
	var elementInnerHtml = __webpack_require__(420).elementInnerHtml;

	/*
	 * Contract object mocks the trading form we have on our website
	 * It parses the contracts json we get from socket.send({contracts_for: 'R_50'})
	 */
	var MBContract = function () {
	    'use strict';

	    var contracts_for_response = void 0,
	        contract_timeout = void 0;

	    var getContracts = function getContracts(underlying) {
	        var req = {
	            contracts_for: underlying || MBDefaults.get('underlying'),
	            currency: getCurrency(),
	            region: 'japan'
	        };
	        if (!underlying) {
	            req.passthrough = { action: 'no-proposal' };
	        }
	        BinarySocket.send(req);
	        if (contract_timeout) clearContractTimeout(contract_timeout);
	        contract_timeout = setTimeout(getContracts, 15000);
	    };

	    var clearContractTimeout = function clearContractTimeout(timoutID) {
	        if (timoutID) {
	            clearTimeout(timoutID);
	        } else {
	            clearTimeout(contract_timeout);
	            clearTimeout(remainingTimeout);
	        }
	    };

	    var durationText = function durationText(dur) {
	        var durationMap = {
	            m: 'min',
	            h: 'h',
	            d: 'day',
	            W: 'week',
	            M: 'month',
	            Y: 'year'
	        };
	        Object.keys(durationMap).forEach(function (key) {
	            dur = dur.replace(key, localize(durationMap[key] + (+dur[0] === 1 || /h/.test(key) ? '' : 's')));
	        });
	        return dur;
	    };

	    var PeriodText = function PeriodText(trading_period) {
	        var date_expiry = void 0,
	            duration = void 0;
	        if ((typeof trading_period === 'undefined' ? 'undefined' : _typeof(trading_period)) === 'object') {
	            date_expiry = trading_period.date_expiry.epoch;
	            duration = trading_period.duration;
	        } else {
	            date_expiry = trading_period.split('_')[1];
	            duration = trading_period.split('_')[2];
	        }
	        var text_value = moment.utc(date_expiry * 1000).utcOffset(japanese_client() ? '+09:00' : '+00:00').locale(getLanguage().toLowerCase()).format('MMM Do, HH:mm').replace(/08:59/, '09:00«') + ' (' + durationText(duration.replace('0d', '1d')) + ')';
	        return text_value.toString();
	    };

	    // use function to generate elements and append them
	    // e.g. element is select and element to append is option
	    var appendTextValueChild = function appendTextValueChild(element, string, value, isSelected) {
	        if (element && !element.nodeName) {
	            if (typeof element === 'string') {
	                element = document.getElementById(element);
	            } else {
	                element = undefined;
	            }
	        }
	        if (!element) return;
	        var option = document.createElement('option');
	        option.text = string;
	        option.value = value;
	        if (isSelected) {
	            option.setAttribute('selected', 'selected');
	        }
	        element.appendChild(option);
	    };

	    var populatePeriods = function populatePeriods(rebuild) {
	        if (!contracts_for_response || !objectNotEmpty(contracts_for_response)) return;
	        var trading_period = void 0,
	            start_end = void 0;
	        var trading_period_array = [],
	            available_contracts = contracts_for_response.contracts_for.available,
	            selected_option = MBDefaults.get('category'),
	            $periodElement = $('#period');
	        if (!selected_option || !available_contracts) return;
	        for (var i = 0; i < available_contracts.length; i++) {
	            if (available_contracts[i].contract_category === selected_option) {
	                trading_period = available_contracts[i].trading_period;
	                if (!trading_period) return;
	                start_end = trading_period.date_start.epoch + '_' + trading_period.date_expiry.epoch + '_' + trading_period.duration;
	                if (trading_period_array.indexOf(start_end) < 0) {
	                    trading_period_array.push(start_end);
	                }
	            }
	        }
	        trading_period_array.sort(sortByExpiryTime);
	        if (rebuild) {
	            $periodElement.empty();
	        }
	        if ($periodElement.children().length === 0) {
	            // populate for the first time
	            var default_value = MBDefaults.get('period');
	            for (var j = 0; j < trading_period_array.length; j++) {
	                appendTextValueChild('period', PeriodText(trading_period_array[j]), trading_period_array[j], trading_period_array[j] === default_value);
	            }
	            MBDefaults.set('period', $periodElement.val());
	            MBContract.displayDescriptions();
	            MBContract.displayRemainingTime(true);
	        } else {
	            (function () {
	                // update options
	                var existing_array = [];
	                var missing_array = [];
	                $periodElement.find('option').each(function () {
	                    existing_array.push($(this).val());
	                });

	                // add new periods to dropdown
	                for (var l = 0; l < trading_period_array.length; l++) {
	                    if (existing_array.indexOf(trading_period_array[l]) < 0) {
	                        missing_array.push(trading_period_array[l]);
	                    }
	                }
	                if (missing_array.length > 0) {
	                    var newOption = void 0;
	                    existing_array = existing_array.concat(missing_array).sort(sortByExpiryTime);
	                    for (var m = 0; m < existing_array.length; m++) {
	                        if ($periodElement.find('option[value="' + existing_array[m] + '"]').length < 1) {
	                            newOption = '<option value="' + existing_array[m] + '">' + PeriodText(existing_array[m]) + '</option>';
	                            if (m < 1) {
	                                $(newOption).insertBefore($periodElement.children().eq(m));
	                            } else {
	                                $(newOption).insertAfter($periodElement.children().eq(m - 1));
	                            }
	                        }
	                    }
	                }

	                // remove periods that no longer exist
	                existing_array.forEach(function (period) {
	                    if (trading_period_array.indexOf(period) < 0) {
	                        $periodElement.find('option[value="' + period + '"]').remove();
	                    }
	                });
	            })();
	        }
	    };

	    var periodValue = void 0,
	        $countDownTimer = void 0,
	        remainingTimeElement = void 0,
	        remainingTimeout = void 0;
	    var displayRemainingTime = function displayRemainingTime(recalculate) {
	        if (typeof periodValue === 'undefined' || recalculate) {
	            periodValue = document.getElementById('period').value;
	            $countDownTimer = $('.countdown-timer');
	            remainingTimeElement = document.getElementById('remaining-time');
	        }
	        if (!periodValue) return;
	        var timeLeft = parseInt(periodValue.split('_')[1]) - window.time.unix();
	        if (timeLeft <= 0) {
	            location.reload();
	        } else if (timeLeft < 120) {
	            $countDownTimer.addClass('alert');
	        }
	        var remainingTimeString = [],
	            duration = moment.duration(timeLeft * 1000);
	        var all_durations = {
	            month: duration.months(),
	            day: duration.days(),
	            hour: duration.hours(),
	            minute: duration.minutes(),
	            second: duration.seconds()
	        };
	        Object.keys(all_durations).forEach(function (key) {
	            if (all_durations[key]) {
	                remainingTimeString.push(all_durations[key] + localize(key + (+all_durations[key] === 1 ? '' : 's')));
	            }
	        });
	        elementInnerHtml(remainingTimeElement, remainingTimeString.join(' '));
	        if (remainingTimeout) clearContractTimeout(remainingTimeout);
	        remainingTimeout = setTimeout(displayRemainingTime, 1000);
	    };

	    var sortByExpiryTime = function sortByExpiryTime(first, second) {
	        var a = first.split('_'),
	            b = second.split('_'),
	            duration1 = a[1] - a[0],
	            duration2 = b[1] - b[0];
	        return a[1] === b[1] ? duration1 - duration2 : a[1] - b[1];
	    };

	    var populateOptions = function populateOptions(rebuild) {
	        if (!contracts_for_response || !objectNotEmpty(contracts_for_response)) return;
	        var category = void 0;
	        var contracts_array = [],
	            available_contracts = contracts_for_response.contracts_for.available,
	            $categoryElement = $('#category');
	        var categoryNames = {
	            callput: localize('Higher/Lower'),
	            touchnotouch: localize('Touch/No Touch'),
	            endsinout: localize('Ends In/Out'),
	            staysinout: localize('Stays In/Goes Out')
	        };
	        var categoryOrder = {
	            callput: 1,
	            touchnotouch: 2,
	            endsinout: 3,
	            staysinout: 4
	        };
	        for (var i = 0; i < available_contracts.length; i++) {
	            category = contracts_for_response.contracts_for.available[i].contract_category;
	            if (contracts_array.indexOf(category) < 0) {
	                contracts_array.push(category);
	            }
	        }
	        contracts_array.sort(function (a, b) {
	            return categoryOrder[a] - categoryOrder[b];
	        });
	        if (rebuild) {
	            $categoryElement.empty();
	        }
	        if ($categoryElement.children().length === 0) {
	            var default_value = MBDefaults.get('category');
	            for (var j = 0; j < contracts_array.length; j++) {
	                appendTextValueChild('category', categoryNames[contracts_array[j]], contracts_array[j], contracts_array[j] === default_value);
	            }
	            MBDefaults.set('category', $categoryElement.val());
	        }
	        populatePeriods(rebuild);
	    };

	    var getCurrentContracts = function getCurrentContracts() {
	        if (!contracts_for_response || !objectNotEmpty(contracts_for_response)) return [];
	        var contracts = [],
	            category = MBDefaults.get('category'),
	            periods = MBDefaults.get('period').split('_');
	        contracts_for_response.contracts_for.available.forEach(function (c) {
	            if (c.contract_category === category && c.trading_period && +c.trading_period.date_start.epoch === +periods[0] && +c.trading_period.date_expiry.epoch === +periods[1]) {
	                contracts.push(c);
	            }
	        });
	        return contracts;
	    };

	    var getTemplate = function getTemplate(contract_type) {
	        var templates = {
	            CALLE: {
	                opposite: 'PUT',
	                order: 0,
	                name: 'Higher',
	                description: '[_1] [_2] payout if [_3] is strictly higher or equal than Exercise price at close  on [_4].'
	            },
	            PUT: {
	                opposite: 'CALLE',
	                order: 1,
	                name: 'Lower',
	                description: '[_1] [_2] payout if [_3] is strictly lower than Exercise price at close on [_4].'
	            },
	            ONETOUCH: {
	                opposite: 'NOTOUCH',
	                order: 0,
	                name: 'Touches',
	                description: '[_1] [_2] payout if [_3] touches Exercise price through close on [_4].'
	            },
	            NOTOUCH: {
	                opposite: 'ONETOUCH',
	                order: 1,
	                name: 'Does Not Touch',
	                description: '[_1] [_2] payout if [_3] does not touch Exercise price through close on [_4].'
	            },
	            EXPIRYRANGEE: {
	                opposite: 'EXPIRYMISS',
	                order: 0,
	                name: 'Ends Between',
	                description: '[_1] [_2] payout if [_3] ends on or between low and high values of Exercise price at close on [_4].'
	            },
	            EXPIRYMISS: {
	                opposite: 'EXPIRYRANGEE',
	                order: 1,
	                name: 'Ends Outside',
	                description: '[_1] [_2] payout if [_3] ends outside low and high values of Exercise price at close on [_4].'
	            },
	            RANGE: {
	                opposite: 'UPORDOWN',
	                order: 0,
	                name: 'Stays Between',
	                description: '[_1] [_2] payout if [_3] stays between low and high values of Exercise price through close on [_4].'
	            },
	            UPORDOWN: {
	                opposite: 'RANGE',
	                order: 1,
	                name: 'Goes Outside',
	                description: '[_1] [_2] payout if [_3] goes outside of low and high values of Exercise price through close on [_4].'
	            }
	        };
	        return contract_type ? templates[contract_type] : templates;
	    };

	    var displayDescriptions = function displayDescriptions() {
	        var contracts = getCurrentContracts(),
	            $desc_wrappers = $('.prices-wrapper'),
	            currency = format_currency(Client.get_value('currency')) || format_currency(document.getElementById('currency').value) || '¥',
	            payout = Number(MBDefaults.get('payout') * (japanese_client() ? 1000 : 1)).toLocaleString(),
	            display_name = MBSymbols.getName(MBDefaults.get('underlying')),
	            date_expiry = PeriodText(contracts[0].trading_period).replace(/\s\(.*\)/, ''),
	            preposition = getLanguage() === 'JA' ? '{JAPAN ONLY}' : '';
	        contracts.forEach(function (c) {
	            var contract_type = c.contract_type,
	                template = getTemplate(contract_type),
	                $wrapper = $($desc_wrappers[template.order]);
	            $wrapper.find('.details-heading').attr('class', 'details-heading ' + contract_type).text(localize(preposition + template.name));
	            $wrapper.find('.descr').text(localize(preposition + template.description, [currency, payout, display_name, date_expiry]));
	        });
	    };

	    var getCurrency = function getCurrency() {
	        return Client.get_value('currency') || document.getElementById('currency').value || 'JPY';
	    };

	    return {
	        getContracts: getContracts,
	        populatePeriods: populatePeriods,
	        populateOptions: populateOptions,
	        displayRemainingTime: displayRemainingTime,
	        getCurrentContracts: getCurrentContracts,
	        getTemplate: getTemplate,
	        displayDescriptions: displayDescriptions,
	        getCurrency: getCurrency,
	        getContractsResponse: function getContractsResponse() {
	            return contracts_for_response;
	        },
	        setContractsResponse: function setContractsResponse(contracts_for) {
	            contracts_for_response = contracts_for;
	        },
	        onUnload: function onUnload() {
	            clearContractTimeout();contracts_for_response = {};periodValue = undefined;
	        }
	    };
	}();

	module.exports = {
	    MBContract: MBContract
	};

/***/ },
/* 444 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var objectNotEmpty = __webpack_require__(419).objectNotEmpty;

	/*
	 * Handles trading page default values
	 *
	 * Priorities:
	 * 1. Client's input: on each change to form, it will reflect to both query string & session storage
	 * 2. Local storage values: if none of the above, it will be the source
	 *
	 */

	var MBDefaults = function () {
	    'use strict';

	    var params = {};
	    var getDefault = function getDefault(key) {
	        loadParams();
	        return params[key];
	    };

	    var loadParams = function loadParams() {
	        if (!objectNotEmpty(params)) params = JSON.parse(localStorage.getItem('mb_trading')) || {};
	    };

	    var saveParams = function saveParams() {
	        localStorage.setItem('mb_trading', JSON.stringify(params));
	    };

	    var setDefault = function setDefault(key, value) {
	        if (!key) return;
	        value = value || '';
	        loadParams();
	        if (params[key] !== value) {
	            params[key] = value;
	            saveParams();
	        }
	    };

	    var removeDefault = function removeDefault() {
	        loadParams();
	        var isUpdated = false;
	        for (var i = 0; i < arguments.length; i++) {
	            if (params.hasOwnProperty(arguments[i])) {
	                delete params[arguments[i]];
	                isUpdated = true;
	            }
	        }
	        if (isUpdated) {
	            saveParams();
	        }
	    };

	    return {
	        get: getDefault,
	        set: setDefault,
	        remove: removeDefault,
	        clear: function clear() {
	            params = {};
	        }
	    };
	}();

	module.exports = {
	    MBDefaults: MBDefaults
	};

/***/ },
/* 445 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var ActiveSymbols = __webpack_require__(446).ActiveSymbols;

	/*
	 * MBSymbols object parses the active_symbols json that we get from socket.send({active_symbols: 'brief'}
	 * and outputs in usable form, it gives markets, underlyings
	 *
	 *
	 * Usage:
	 *
	 * use `MBSymbols.details` to populate this object first
	 *
	 * then use
	 *
	 * `MBSymbols.markets` to get markets like Forex
	 * `MBSymbols.underlyings` to get underlyings
	 *
	 */

	var MBSymbols = function () {
	    'use strict';

	    var tradeMarkets = {},
	        tradeMarketsList = {},
	        tradeUnderlyings = {},
	        _need_page_update = 1,
	        names = {};

	    var details = function details(data) {
	        ActiveSymbols.clearData();
	        var allSymbols = data.active_symbols;
	        tradeMarkets = ActiveSymbols.getMarkets(allSymbols);
	        tradeMarketsList = ActiveSymbols.getMarketsList(allSymbols);
	        tradeUnderlyings = ActiveSymbols.getTradeUnderlyings(allSymbols);
	        names = ActiveSymbols.getSymbolNames(allSymbols);
	    };

	    var getSymbols = function getSymbols(update) {
	        BinarySocket.send({
	            active_symbols: 'brief',
	            landing_company: 'japan'
	        });
	        _need_page_update = update;
	    };

	    return {
	        details: details,
	        getSymbols: getSymbols,
	        markets: function markets(list) {
	            return list ? tradeMarketsList : tradeMarkets;
	        },
	        underlyings: function underlyings() {
	            return tradeUnderlyings;
	        },
	        getName: function getName(symbol) {
	            return names[symbol];
	        },
	        need_page_update: function need_page_update() {
	            return _need_page_update;
	        },
	        getAllSymbols: function getAllSymbols() {
	            return names;
	        },
	        clearData: function clearData() {
	            ActiveSymbols.clearData();
	        }
	    };
	}();

	module.exports = {
	    MBSymbols: MBSymbols
	};

/***/ },
/* 446 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var objectNotEmpty = __webpack_require__(419).objectNotEmpty;

	var ActiveSymbols = function () {
	    'use strict';

	    var groupBy = function groupBy(xs, key) {
	        return xs.reduce(function (rv, x) {
	            (rv[x[key]] = rv[x[key]] || []).push(x);
	            return rv;
	        }, {});
	    };

	    var extend = function extend(a, b) {
	        if (!a || !b) return null;
	        Object.keys(b).forEach(function (key) {
	            a[key] = b[key];
	        });
	        return a;
	    };

	    var clone = function clone(obj) {
	        return extend({}, obj);
	    };

	    return {
	        markets: {},
	        submarkets: {},
	        symbols: {},
	        getMarkets: function getMarkets(symbols) {
	            if (objectNotEmpty(this.markets)) {
	                return clone(this.markets);
	            }

	            var that = this;
	            var markets = groupBy(symbols, 'market');
	            Object.keys(markets).forEach(function (key) {
	                var marketName = key;
	                var marketSymbols = markets[key];
	                var symbol = marketSymbols[0];
	                that.markets[marketName] = {
	                    name: symbol.market_display_name,
	                    is_active: !symbol.is_trading_suspended && symbol.exchange_is_open
	                };
	                that.getSubmarketsForMarket(marketSymbols, that.markets[marketName]);
	            });
	            return clone(this.markets);
	        },
	        clearData: function clearData() {
	            this.markets = {};
	            this.symbols = {};
	            this.submarkets = {};
	        },
	        getSubmarketsForMarket: function getSubmarketsForMarket(symbols, market) {
	            if (objectNotEmpty(market.submarkets)) {
	                return clone(market.submarkets);
	            }
	            market.submarkets = {};
	            var that = this;
	            var submarkets = groupBy(symbols, 'submarket');
	            Object.keys(submarkets).forEach(function (key) {
	                var submarketName = key;
	                var submarketSymbols = submarkets[key];
	                var symbol = submarketSymbols[0];
	                market.submarkets[submarketName] = {
	                    name: symbol.submarket_display_name,
	                    is_active: !symbol.is_trading_suspended && symbol.exchange_is_open
	                };
	                that.getSymbolsForSubmarket(submarketSymbols, market.submarkets[submarketName]);
	            });
	            return clone(market.submarkets);
	        },
	        getSymbolsForSubmarket: function getSymbolsForSubmarket(symbols, submarket) {
	            if (!objectNotEmpty(submarket.symbols)) {
	                submarket.symbols = {};
	                symbols.forEach(function (symbol) {
	                    submarket.symbols[symbol.symbol] = {
	                        display: symbol.display_name,
	                        symbol_type: symbol.symbol_type,
	                        is_active: !symbol.is_trading_suspended && symbol.exchange_is_open,
	                        pip: symbol.pip,
	                        market: symbol.market,
	                        submarket: symbol.submarket
	                    };
	                });
	            }
	            return clone(submarket.symbols);
	        },
	        getSubmarkets: function getSubmarkets(active_symbols) {
	            var _this = this;

	            if (!objectNotEmpty(this.submarkets)) {
	                (function () {
	                    var markets = _this.getMarkets(active_symbols);
	                    var that = _this;
	                    Object.keys(markets).forEach(function (key) {
	                        var market = markets[key];
	                        var submarkets = that.getSubmarketsForMarket(active_symbols, market);
	                        extend(that.submarkets, submarkets);
	                    });
	                })();
	            }
	            return clone(this.submarkets);
	        },
	        getSymbols: function getSymbols(active_symbols) {
	            var _this2 = this;

	            if (!objectNotEmpty(this.symbols)) {
	                (function () {
	                    var submarkets = _this2.getSubmarkets(active_symbols);
	                    var that = _this2;
	                    Object.keys(submarkets).forEach(function (key) {
	                        var submarket = submarkets[key];
	                        var symbols = that.getSymbolsForSubmarket(active_symbols, submarket);
	                        extend(that.symbols, symbols);
	                    });
	                })();
	            }
	            return clone(this.symbols);
	        },
	        getMarketsList: function getMarketsList(active_symbols) {
	            var tradeMarketsList = {};
	            extend(tradeMarketsList, this.getMarkets(active_symbols));
	            extend(tradeMarketsList, this.getSubmarkets(active_symbols));
	            return tradeMarketsList;
	        },
	        getTradeUnderlyings: function getTradeUnderlyings(active_symbols) {
	            var tradeUnderlyings = {};
	            var symbols = this.getSymbols(active_symbols);
	            Object.keys(symbols).forEach(function (key) {
	                var symbol = symbols[key];
	                if (!tradeUnderlyings[symbol.market]) {
	                    tradeUnderlyings[symbol.market] = {};
	                }
	                if (!tradeUnderlyings[symbol.submarket]) {
	                    tradeUnderlyings[symbol.submarket] = {};
	                }
	                tradeUnderlyings[symbol.market][key] = symbol;
	                tradeUnderlyings[symbol.submarket][key] = symbol;
	            });
	            return tradeUnderlyings;
	        },
	        getSymbolNames: function getSymbolNames(active_symbols) {
	            var symbols = clone(this.getSymbols(active_symbols));
	            Object.keys(symbols).forEach(function (key) {
	                symbols[key] = symbols[key].display;
	            });
	            return symbols;
	        }
	    };
	}();

	module.exports = {
	    ActiveSymbols: ActiveSymbols
	};

/***/ },
/* 447 */
/***/ function(module, exports) {

	'use strict';

	/*
	 * Notifications manages various notification messages
	 *
	 */

	var MBNotifications = function () {
	    'use strict';

	    /*
	     * options: Object {
	     *     text       : {string}  message text to display
	     *     uid        : {string}  unique id to prevent duplicating the same message and also used to hide the message
	     *     dismissible: {boolean} dismissible messages can be hidden by client
	     * }
	     */

	    var showErrorMessage = function showErrorMessage(options) {
	        var $note_wrapper = getContainer(),
	            $this_uid = $note_wrapper.find('#' + options.uid);

	        if (!options.uid || $this_uid.length === 0) {
	            $note_wrapper.prepend(generateMessage(options));
	        } else if ($this_uid.html() !== options.text) {
	            $this_uid.replaceWith(generateMessage(options));
	        }

	        $.scrollTo($note_wrapper, 500, { offset: -5 });
	        hideSpinnerShowTrading();
	    };

	    var generateMessage = function generateMessage(options) {
	        var $message = $('<div class="notice-msg center-text' + (options.dismissible ? ' dismissible' : '') + '"' + (options.uid ? ' id="' + options.uid + '"' : '') + '>' + options.text + (options.dismissible ? '<div class="notification-dismiss">x</div>' : '') + '</div>');

	        if (options.dismissible) {
	            $message.click(function () {
	                dismissMessage(this);
	            });
	        }

	        return $message;
	    };

	    var hideErrorMessage = function hideErrorMessage(uid) {
	        if (uid) {
	            getContainer().find('#' + uid).remove();
	        }
	    };

	    var dismissMessage = function dismissMessage(obj) {
	        $(obj).remove();
	    };

	    var getContainer = function getContainer() {
	        return $('#notifications_wrapper');
	    };

	    var hideSpinnerShowTrading = function hideSpinnerShowTrading() {
	        $('.barspinner').addClass('invisible');
	        $('.mb-trading-wrapper').removeClass('invisible');
	    };

	    return {
	        show: showErrorMessage,
	        hide: hideErrorMessage,

	        hideSpinnerShowTrading: hideSpinnerShowTrading
	    };
	}();

	module.exports = {
	    MBNotifications: MBNotifications
	};

/***/ },
/* 448 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var get_highest_zindex = __webpack_require__(419).get_highest_zindex;

	var ViewPopupUI = function () {
	    return {
	        _init: function _init() {
	            this._container = null;
	        },
	        container: function container(refresh) {
	            var _this = this;

	            if (refresh) {
	                if (this._container) {
	                    this._container.remove();
	                }
	                this._container = null;
	            }
	            if (!this._container) {
	                (function () {
	                    var that = _this;
	                    var con = $('<div class="inpage_popup_container inpage_popup_container_ws" id="sell_popup_container"><a class="close"></a><div class="inpage_popup_content"></div></div>');
	                    con.hide();
	                    var _on_close = function _on_close() {
	                        that.cleanup(true);
	                        if (/trading/.test(window.location.pathname)) {
	                            // Re-subscribe the trading page's tick stream which was unsubscribed by popup's chart
	                            BinarySocket.send({ ticks_history: $('#underlying').val(), style: 'ticks', end: 'latest', count: 20, subscribe: 1 });
	                        }
	                    };
	                    con.find('a.close').on('click', function () {
	                        _on_close();
	                    });
	                    $(document).on('keydown', function (e) {
	                        if (e.which === 27) _on_close();
	                    });
	                    _this._container = con;
	                })();
	            }
	            return this._container;
	        },
	        cleanup: function cleanup() {
	            this.forget_streams();
	            this.forget_chart_streams();
	            this.clear_timer();
	            this.close_container();
	            this._init();
	            $(window).off('resize', function () {
	                ViewPopupUI.reposition_confirmation();
	            });
	        },
	        forget_streams: function forget_streams() {
	            while (window.stream_ids && window.stream_ids.length > 0) {
	                var id = window.stream_ids.pop();
	                if (id && id.length > 0) {
	                    BinarySocket.send({ forget: id });
	                }
	            }
	        },
	        forget_chart_streams: function forget_chart_streams() {
	            while (window.chart_stream_ids && window.chart_stream_ids.length > 0) {
	                var id = window.chart_stream_ids.pop();
	                if (id && id.length > 0) {
	                    BinarySocket.send({ forget: id });
	                }
	            }
	        },
	        clear_timer: function clear_timer() {
	            if (window.ViewPopupTimerInterval) {
	                clearInterval(window.ViewPopupTimerInterval);
	                window.ViewPopupTimerInterval = undefined;
	            }
	        },
	        close_container: function close_container() {
	            if (this._container) {
	                this._container.hide().remove();
	                $('.popup_page_overlay').hide().remove();
	                this._container = null;
	            }
	            $('html').removeClass('no-scroll');
	        },
	        disable_button: function disable_button(button) {
	            $('.open_contract_detailsws[disabled]').each(function () {
	                ViewPopupUI.enable_button($(this));
	            });
	            button.attr('disabled', 'disabled');
	            button.fadeTo(0, 0.5);
	        },
	        enable_button: function enable_button(button) {
	            button.removeAttr('disabled');
	            button.fadeTo(0, 1);
	        },
	        show_inpage_popup: function show_inpage_popup(data, containerClass, dragHandle) {
	            var that = this;
	            var con = this.container(true);
	            if (containerClass) {
	                con.addClass(containerClass);
	            }
	            if (data) {
	                $('.inpage_popup_content', con).html(data);
	            }
	            var body = $(document.body);
	            con.css('position', 'fixed').css('z-index', get_highest_zindex() + 100);
	            body.append(con);
	            con.show();
	            // $('html').addClass('no-scroll');
	            $(document.body).append($('<div/>', { class: 'popup_page_overlay' }));
	            $('.popup_page_overlay').click(function () {
	                ViewPopupUI.container().find('a.close').click();
	            });
	            con.draggable({
	                stop: function stop() {
	                    that.reposition_confirmation_ondrag();
	                },
	                handle: dragHandle,
	                scroll: false
	            });
	            $(dragHandle).disableSelection();
	            this.reposition_confirmation();
	            $(window).resize(function () {
	                ViewPopupUI.reposition_confirmation();
	            });
	            return con;
	        },
	        reposition_confirmation_ondrag: function reposition_confirmation_ondrag() {
	            var con = this.container();
	            var offset = con.offset();
	            var win_ = $(window);
	            // top
	            if (offset.top < win_.scrollTop()) {
	                con.offset({ top: win_.scrollTop() });
	            }
	            // left
	            if (offset.left < 0) {
	                con.offset({ left: 0 });
	            }
	            // right
	            if (offset.left > win_.width() - con.width()) {
	                con.offset({ left: win_.width() - con.width() });
	            }
	        },
	        reposition_confirmation: function reposition_confirmation(x, y) {
	            var con = this.container(),
	                win_ = $(window);
	            var x_min = 0,
	                y_min = 500;
	            if (win_.width() < 767) {
	                // To be responsive, on mobiles and phablets we show popup as full screen.
	                x_min = 0;
	                y_min = 0;
	            }
	            if (x === undefined) {
	                x = Math.max(Math.floor((win_.width() - win_.scrollLeft() - con.width()) / 2), x_min) + win_.scrollLeft();
	            }
	            if (y === undefined) {
	                y = Math.min(Math.floor((win_.height() - con.height()) / 2), y_min) + win_.scrollTop();
	                if (y < win_.scrollTop()) {
	                    y = win_.scrollTop();
	                }
	            }
	            con.offset({ left: x, top: y });
	            ViewPopupUI.reposition_confirmation_ondrag();
	        },
	        // ===== Dispatch =====
	        storeSubscriptionID: function storeSubscriptionID(id, option) {
	            if (!window.stream_ids && !option) {
	                window.stream_ids = [];
	            }
	            if (!window.chart_stream_ids && option) {
	                window.chart_stream_ids = [];
	            }
	            if (!option && id && id.length > 0 && $.inArray(id, window.stream_ids) < 0) {
	                window.stream_ids.push(id);
	            } else if (option && id && id.length > 0 && $.inArray(id, window.chart_stream_ids) < 0) {
	                window.chart_stream_ids.push(id);
	            }
	        }
	    };
	}();

	module.exports = {
	    ViewPopupUI: ViewPopupUI
	};

/***/ },
/* 449 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var japanese_client = __webpack_require__(307).japanese_client;
	var MBContract = __webpack_require__(443).MBContract;
	var ViewPopupUI = __webpack_require__(448).ViewPopupUI;
	var State = __webpack_require__(304).State;
	var localize = __webpack_require__(423).localize;
	var template = __webpack_require__(419).template;
	var HighchartUI = __webpack_require__(450).HighchartUI;
	var Highcharts = __webpack_require__(451);
	__webpack_require__(452)(Highcharts);

	var Highchart = function () {
	    var chart = void 0,
	        options = void 0,
	        responseID = void 0,
	        contract = void 0,
	        request = void 0,
	        min_point = void 0,
	        max_point = void 0;

	    var start_time = void 0,
	        purchase_time = void 0,
	        now_time = void 0,
	        end_time = void 0,
	        entry_tick_time = void 0,
	        is_sold = void 0,
	        sell_time = void 0,
	        sell_spot_time = void 0,
	        is_settleable = void 0,
	        exit_tick_time = void 0,
	        exit_time = void 0,
	        underlying = void 0;

	    var is_initialized = void 0,
	        is_chart_delayed = void 0,
	        is_chart_subscribed = void 0,
	        is_chart_forget = void 0,
	        is_contract_ended = void 0,
	        is_contracts_for_send = void 0,
	        is_history_send = void 0;

	    var init_once = function init_once() {
	        chart = options = responseID = contract = request = min_point = max_point = '';

	        is_initialized = is_chart_delayed = is_chart_subscribed = is_chart_forget = is_contract_ended = is_contracts_for_send = is_history_send = false;
	    };

	    // since these values are used in almost every function, make them easy to call
	    var initialize_values = function initialize_values() {
	        start_time = parseInt(contract.date_start);
	        purchase_time = parseInt(contract.purchase_time);
	        now_time = parseInt(contract.current_spot_time);
	        end_time = parseInt(contract.date_expiry);
	        entry_tick_time = parseInt(contract.entry_tick_time);
	        is_sold = contract.is_sold;
	        sell_time = parseInt(contract.sell_time);
	        sell_spot_time = parseInt(contract.sell_spot_time);
	        is_settleable = contract.is_settleable;
	        exit_tick_time = parseInt(contract.exit_tick_time);
	        exit_time = parseInt(is_sold && sell_time < end_time ? sell_spot_time : exit_tick_time || end_time);
	        underlying = contract.underlying;
	    };

	    // initialize the chart only once with ticks or candles data
	    var init_chart = function init_chart(init_options) {
	        var data = [],
	            type = '',
	            i = void 0;

	        var push_ticks = function push_ticks(time, price) {
	            // we need to add the marker as we are pushing the data points
	            // since for large arrays, data doesn't get pushed to series[0].data
	            // and we can't update markers if data is empty
	            time = parseInt(time);
	            var is_match_entry = time === entry_tick_time,
	                is_match_exit = time === exit_tick_time,
	                tick_type = is_match_entry ? 'entry' : 'exit';
	            data.push({
	                x: time * 1000,
	                y: price * 1,
	                marker: is_match_entry || is_match_exit ? HighchartUI.get_marker_object(tick_type) : ''
	            });
	        };

	        var history = '',
	            candles = '';
	        if (init_options.history) {
	            // indicates line chart
	            type = 'line';
	            history = init_options.history;
	            var times = history.times;
	            var prices = history.prices;
	            if (is_chart_delayed) {
	                for (i = 0; i < times.length; ++i) {
	                    push_ticks(times[i], prices[i]);
	                }
	            } else if (min_point && max_point) {
	                var current_time = void 0;
	                for (i = 0; i < times.length; ++i) {
	                    current_time = parseInt(times[i]);
	                    // only display the first tick before entry spot and one tick after exit spot
	                    // as well as the set of ticks between them
	                    if (current_time >= min_point && current_time <= max_point) {
	                        push_ticks(current_time, prices[i]);
	                    }
	                }
	            }
	        } else if (init_options.candles) {
	            // indicates candle chart
	            candles = init_options.candles;
	            type = 'candlestick';
	            data = candles.map(function (c) {
	                return [c.epoch * 1000, c.open * 1, c.high * 1, c.low * 1, c.close * 1];
	            });
	        }

	        // element where chart is to be displayed
	        var el = document.getElementById('analysis_live_chart');
	        if (!el) return null;

	        var JPClient = japanese_client();
	        HighchartUI.set_labels(is_chart_delayed);
	        HighchartUI.set_chart_options({
	            height: el.parentElement.offsetHeight,
	            title: localize(init_options.title),
	            JPClient: JPClient,
	            decimals: history ? history.prices[0] : candles[0].open,
	            type: type,
	            data: data,
	            entry_time: entry_tick_time ? entry_tick_time * 1000 : start_time * 1000,
	            exit_time: exit_time ? exit_time * 1000 : null,
	            user_sold: user_sold()
	        });
	        Highcharts.setOptions(HighchartUI.get_highchart_options(JPClient));

	        if (!el) return null;
	        var new_chart = Highcharts.StockChart(el, HighchartUI.get_chart_options());
	        is_initialized = true;
	        return new_chart;
	    };

	    // type 'x' is used to draw lines such as start and end times
	    // type 'y' is used to draw lines such as barrier
	    var addPlotLine = function addPlotLine(params, type) {
	        chart[type + 'Axis'][0].addPlotLine(HighchartUI.get_plotline_options(params, type));
	        if (user_sold()) {
	            HighchartUI.replace_exit_label_with_sell(chart.subtitle.element);
	        }
	    };

	    // use this instead of BinarySocket.send to avoid overriding the on-message function of trading page
	    var socketSend = function socketSend(req) {
	        if (!req) return;
	        if (!req.hasOwnProperty('passthrough')) {
	            req.passthrough = {};
	        }
	        // send dispatch_to to help socket.js forward the correct response back to here
	        req.passthrough.dispatch_to = 'ViewChartWS';
	        BinarySocket.send(req);
	    };

	    var dispatch = function dispatch(response) {
	        var type = response.msg_type,
	            error = response.error;
	        if (type === 'contracts_for' && (!error || error.code && error.code === 'InvalidSymbol')) {
	            delayed_chart(response);
	        } else if (/(history|candles|tick|ohlc)/.test(type) && !error) {
	            responseID = response[type].id;
	            // send view popup the response ID so view popup can forget the calls if it's closed before contract ends
	            if (responseID) ViewPopupUI.storeSubscriptionID(responseID, 'chart');
	            options = { title: contract.display_name };
	            options[type] = response[type];
	            var history = response.history,
	                candles = response.candles,
	                tick = response.tick,
	                ohlc = response.ohlc;
	            if (history || candles) {
	                var length = (history ? history.times : candles).length;
	                if (length === 0) {
	                    HighchartUI.show_error('missing');
	                    return;
	                }
	                if (history) {
	                    var history_times = history.times;
	                    get_min_history(history_times);
	                    get_max_history(history_times);
	                } else if (candles) {
	                    get_min_candle(candles);
	                    get_max_candle(candles);
	                }
	                // only initialize chart if it hasn't already been initialized
	                if (!chart && !is_initialized) {
	                    chart = init_chart(options);
	                    if (!chart) return;

	                    if (purchase_time !== start_time) draw_line_x(purchase_time, localize('Purchase Time'), '', '', '#7cb5ec');

	                    // second condition is used to make sure contracts that have purchase time
	                    // but are sold before the start time don't show start time
	                    if (!is_sold || is_sold && sell_time && sell_time > start_time) {
	                        draw_line_x(start_time);
	                    }
	                }
	                if (is_sold || is_settleable) {
	                    update_zone('exit');
	                    end_contract();
	                }
	            } else if ((tick || ohlc) && !is_chart_forget) {
	                if (chart && chart.series) {
	                    update_chart(options);
	                }
	            }
	            if (entry_tick_time) {
	                select_entry_tick_barrier();
	            }
	            forget_streams();
	        } else if (type === 'ticks_history' && error) {
	            HighchartUI.show_error('', error.message);
	        }
	    };

	    var show_chart = function show_chart(proposal_contract, update) {
	        contract = proposal_contract;
	        initialize_values();
	        if (!update) {
	            init_once();
	        }
	        if (!chart && !is_history_send) {
	            request_data(update || '');
	        } else if (chart && entry_tick_time) {
	            select_entry_tick_barrier();
	        }
	        if (chart && (is_sold || is_settleable)) {
	            update_zone('exit');
	            end_contract();
	        }
	        forget_streams();
	    };

	    var request_data = function request_data(update) {
	        var calculateGranularity = calculate_granularity();
	        var granularity = calculateGranularity[0],
	            duration = calculateGranularity[1],
	            margin = granularity === 0 ? Math.max(300, 30 * duration / (60 * 60) || 0) : 3 * granularity;

	        request = {
	            ticks_history: underlying,
	            start: ((purchase_time || start_time) - margin).toFixed(0), /* load more ticks first */
	            end: end_time ? (end_time + margin).toFixed(0) : 'latest',
	            style: granularity === 0 ? 'ticks' : 'candles',
	            count: 4999, /* maximum number of ticks possible */
	            adjust_start_time: 1
	        };

	        if (is_sold && sell_time < end_time) {
	            request.end = sell_spot_time ? (parseInt(sell_spot_time) + margin).toFixed(0) : 'latest';
	        }

	        if (granularity !== 0) {
	            request.granularity = granularity;
	        }

	        if (!is_settleable && !sell_spot_time && window.time.valueOf() / 1000 < end_time && !is_chart_subscribed) {
	            request.subscribe = 1;
	        }

	        var contracts_response = State.get('is_mb_trading') ? MBContract.getContractsResponse() : window.contracts_for,
	            stored_delay = sessionStorage.getItem('license.' + underlying);

	        if (contracts_response && contracts_response.echo_req.contracts_for === underlying) {
	            delayed_chart(contracts_response);
	        } else if (stored_delay) {
	            handle_delay(stored_delay);
	            show_entry_error();
	        } else if (!is_contracts_for_send && update === '') {
	            socketSend({ contracts_for: underlying });
	            is_contracts_for_send = true;
	        }
	    };

	    var delayed_chart = function delayed_chart(contracts_response) {
	        if (contracts_response.contracts_for && contracts_response.contracts_for.feed_license) {
	            var license = contracts_response.contracts_for.feed_license;
	            handle_delay(license);
	            save_feed_license(contracts_response.echo_req.contracts_for, license);
	        }
	        show_entry_error();
	    };

	    var show_entry_error = function show_entry_error() {
	        if (!entry_tick_time && !is_chart_delayed && start_time && window.time.unix() >= parseInt(start_time)) {
	            HighchartUI.show_error('', localize('Waiting for entry tick.'));
	        } else if (!is_history_send) {
	            is_history_send = true;
	            if (request.subscribe) is_chart_subscribed = true;
	            socketSend(request);
	        }
	    };

	    var handle_delay = function handle_delay(feed_license) {
	        if (feed_license !== 'realtime') {
	            if (!is_settleable) {
	                request.end = 'latest';
	            }
	            delete request.subscribe;
	            is_chart_delayed = true;
	        }
	    };

	    // update the color zones with the correct entry_tick_time and draw barrier
	    var select_entry_tick_barrier = function select_entry_tick_barrier() {
	        if (chart && entry_tick_time) {
	            draw_barrier();
	            update_zone('entry');
	            select_tick(entry_tick_time, 'entry');
	        }
	    };

	    var update_zone = function update_zone(type) {
	        if (chart && type && !user_sold()) {
	            var value = type === 'entry' ? entry_tick_time : exit_time;
	            chart.series[0].zones[type === 'entry' ? 0 : 1].value = value * 1000;
	        }
	    };

	    var draw_barrier = function draw_barrier() {
	        if (chart.yAxis[0].plotLinesAndBands.length === 0) {
	            var barrier = contract.barrier,
	                high_barrier = contract.high_barrier,
	                low_barrier = contract.low_barrier;
	            if (barrier) {
	                addPlotLine({ id: 'barrier', value: barrier * 1, label: template(localize('Barrier ([_1])'), [barrier]), dashStyle: 'Dot' }, 'y');
	            } else if (high_barrier && low_barrier) {
	                addPlotLine({ id: 'high_barrier', value: high_barrier * 1, label: template(localize('High Barrier ([_1])'), [high_barrier]), dashStyle: 'Dot' }, 'y');
	                addPlotLine({ id: 'low_barrier', value: low_barrier * 1, label: template(localize('Low Barrier ([_1])'), [low_barrier]), dashStyle: 'Dot' }, 'y');
	            }
	        }
	    };

	    // set an orange circle on the entry/exit tick
	    var select_tick = function select_tick(value, tick_type) {
	        if (chart && value && tick_type && (options.tick || options.history) && chart.series[0].data.length !== 0 && !is_contract_ended) {
	            var data = chart.series[0].data;
	            if (!data || data.length === 0) return;
	            var current_data = void 0;
	            for (var i = data.length - 1; i >= 0; i--) {
	                current_data = data[i];
	                if (current_data && current_data.x && value * 1000 === current_data.x) {
	                    current_data.update({ marker: HighchartUI.get_marker_object(tick_type) });
	                }
	            }
	        }
	    };

	    // calculate where to display the minimum value of the x-axis of the chart for line chart
	    var get_min_history = function get_min_history(history_times) {
	        var history_times_length = history_times.length;
	        var history_times_int = void 0;
	        for (var i = 0; i < history_times_length; i++) {
	            history_times_int = parseInt(history_times[i]);
	            if (entry_tick_time && history_times_int === entry_tick_time || purchase_time && start_time > purchase_time && history_times_int === purchase_time || history_times_int < purchase_time && parseInt(history_times[i === history_times_length - 1 ? i : i + 1]) > purchase_time) {
	                // set the chart to display from the tick before entry_tick_time or purchase_time
	                min_point = parseInt(history_times[i === 0 ? i : i - 1]);
	                break;
	            }
	        }
	        if (!min_point) min_point = parseInt(history_times[0]);
	    };

	    // calculate where to display the maximum value of the x-axis of the chart for line chart
	    var get_max_history = function get_max_history(history_times) {
	        var end = end_time;
	        if (sell_spot_time && sell_time < end_time) {
	            end = sell_spot_time;
	        } else if (exit_tick_time) {
	            end = exit_tick_time;
	        }

	        var history_times_length = history_times.length;
	        if (is_settleable || is_sold) {
	            for (var i = history_times_length - 1; i >= 0; i--) {
	                if (parseInt(history_times[i]) === end) {
	                    max_point = parseInt(history_times[i === history_times_length - 1 ? i : i + 1]);
	                    break;
	                }
	            }
	        }
	        set_max_for_delayed_chart(history_times, history_times_length);
	    };

	    // calculate where to display the minimum value of the x-axis of the chart for candle
	    var get_min_candle = function get_min_candle(candles) {
	        var candle_before_time = function candle_before_time(value) {
	            return value && current_candle && parseInt(current_candle.epoch) <= value && candles[i === candles_length - 1 ? i : i + 1].epoch > value;
	        };
	        var i = void 0,
	            current_candle = void 0;
	        var candles_length = candles.length;
	        for (i = 1; i < candles_length; i++) {
	            current_candle = candles[i];
	            if (candle_before_time(entry_tick_time) || candle_before_time(purchase_time)) {
	                // set the chart to display from the candle before entry_tick_time or purchase_time
	                min_point = parseInt(candles[i - 1].epoch);
	                break;
	            }
	        }
	    };

	    // calculate where to display the maximum value of the x-axis of the chart for candle
	    var get_max_candle = function get_max_candle(candles) {
	        var end = sell_spot_time && sell_time < end_time ? sell_spot_time : end_time,
	            candle_length = candles.length;
	        var current_candle = void 0,
	            next_candle = void 0;
	        if (is_settleable || is_sold) {
	            for (var i = candle_length - 2; i >= 0; i--) {
	                current_candle = candles[i];
	                next_candle = candles[i + 1];
	                if (!current_candle) return;
	                if (parseInt(next_candle.epoch) < end) {
	                    max_point = end_time;
	                    break;
	                }
	                if (parseInt(current_candle.epoch) <= end && parseInt(next_candle.epoch) > end) {
	                    max_point = parseInt(next_candle.epoch);
	                    break;
	                }
	            }
	        }
	        set_max_for_delayed_chart(candles, candle_length);
	    };

	    var set_max_for_delayed_chart = function set_max_for_delayed_chart(array, array_length) {
	        if (is_chart_delayed) {
	            var last_epoch = parseInt(array[array_length - 1].epoch);
	            if (last_epoch > start_time) {
	                max_point = last_epoch;
	            } else {
	                max_point = start_time;
	            }
	        }
	        if (!max_point) max_point = end_time;
	    };

	    var draw_line_x = function draw_line_x(valueTime, labelName, textLeft, dash, color) {
	        if (chart) {
	            addPlotLine({
	                value: valueTime * 1000,
	                label: labelName || '',
	                textLeft: textLeft === 'textLeft',
	                dashStyle: dash || '',
	                color: color || ''
	            }, 'x');
	        }
	    };

	    // draw the last line, mark the exit tick, and forget the streams
	    var end_contract = function end_contract() {
	        if (chart) {
	            draw_line_x(user_sold() ? sell_time : end_time, '', 'textLeft', 'Dash');
	            if (exit_tick_time) {
	                select_tick(exit_tick_time, 'exit');
	            }
	            if (!contract.sell_spot && !contract.exit_tick) {
	                if ($('#waiting_exit_tick').length === 0) {
	                    $('#trade_details_message').append('<div id="waiting_exit_tick">' + localize('Waiting for exit tick.') + '</div>');
	                }
	            } else {
	                $('#waiting_exit_tick').remove();
	            }
	        }
	        if (!is_contract_ended) {
	            forget_streams();
	            is_contract_ended = true;
	        }
	    };

	    var forget_streams = function forget_streams() {
	        if (chart && !is_chart_forget && (is_sold || is_settleable) && responseID && chart.series && chart.series[0].data.length >= 1) {
	            var data = chart.series[0].data;
	            var last = parseInt(data[data.length - 1].x);
	            if (last > end_time * 1000 || last > sell_time * 1000) {
	                socketSend({ forget: responseID });
	                is_chart_forget = true;
	            }
	        }
	    };

	    var calculate_granularity = function calculate_granularity() {
	        var duration = Math.min(exit_time, now_time) - (purchase_time || start_time);
	        var granularity = void 0;
	        // days * hours * minutes * seconds
	        if (duration <= 60 * 60) granularity = 0; // less than 1 hour
	        else if (duration <= 2 * 60 * 60) granularity = 120; // 2 hours
	            else if (duration <= 6 * 60 * 60) granularity = 600; // 6 hours
	                else if (duration <= 24 * 60 * 60) granularity = 900; // 1 day
	                    else if (duration <= 5 * 24 * 60 * 60) granularity = 3600; // 5 days
	                        else if (duration <= 30 * 24 * 60 * 60) granularity = 14400; // 30 days
	                            else granularity = 86400; // more than 30 days

	        return [granularity, duration];
	    };

	    // add new data points to the chart
	    var update_chart = function update_chart(update_options) {
	        var granularity = calculate_granularity()[0];
	        var series = chart.series[0];
	        if (granularity === 0) {
	            var data = update_options.tick;
	            chart.series[0].addPoint({ x: data.epoch * 1000, y: data.quote * 1 });
	        } else {
	            var c = update_options.ohlc;
	            var last = series.data[series.data.length - 1];
	            if (!c || !last) return;
	            var ohlc = [c.open_time * 1000, c.open * 1, c.high * 1, c.low * 1, c.close * 1];

	            if (last.x !== ohlc[0]) {
	                series.addPoint(ohlc, true, true);
	            } else {
	                last.update(ohlc, true);
	            }
	        }
	    };

	    var save_feed_license = function save_feed_license(save_contract, license) {
	        var regex = new RegExp('license.' + contract);
	        var match_found = false;

	        for (var i = 0; i < sessionStorage.length; i++) {
	            if (regex.test(sessionStorage.key(i))) {
	                match_found = true;
	                break;
	            }
	        }

	        if (!match_found) {
	            sessionStorage.setItem('license.' + save_contract, license);
	        }
	    };

	    var user_sold = function user_sold() {
	        return sell_time && sell_time < end_time;
	    };

	    return {
	        show_chart: show_chart,
	        dispatch: dispatch
	    };
	}();

	module.exports = {
	    Highchart: Highchart
	};

/***/ },
/* 450 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var localize = __webpack_require__(423).localize;

	var HighchartUI = function () {
	    var common_time_style = void 0,
	        common_spot_style = void 0,
	        txt = void 0,
	        chartOptions = void 0;

	    var init_labels = function init_labels() {
	        common_time_style = 'margin-bottom: 3px; margin-left: 10px; height: 0; width: 20px; border: 0; border-bottom: 2px; border-color: #e98024; display: inline-block;';
	        common_spot_style = 'margin-left: 10px; display: inline-block; border-radius: 6px;';
	    };

	    var get_labels = function get_labels(option) {
	        if (!common_time_style || !common_spot_style) {
	            init_labels();
	        }
	        switch (option) {
	            case 'start_time':
	                return '<div style="' + common_time_style + 'border-style: solid;"></div> ' + localize('Start time') + ' ';
	            case 'entry_spot':
	                return '<div style="' + common_spot_style + 'border: 3px solid orange; width: 4px; height: 4px;"></div> ' + localize('Entry spot') + ' ';
	            case 'exit_spot':
	                return '<div style="' + common_spot_style + 'background-color: orange; width:10px; height: 10px;"></div> ' + localize('Exit spot') + ' ';
	            case 'end_time':
	                return '<div style="' + common_time_style + 'border-style: dashed;"></div> ' + localize('End time') + ' ';
	            case 'delay':
	                return '<span class="chart-delay"> ' + localize('Charting for this underlying is delayed') + ' </span>';
	            default:
	                return null;
	        }
	    };

	    var set_labels = function set_labels(chart_delayed) {
	        // display a guide for clients to know how we are marking entry and exit spots
	        txt = (chart_delayed ? get_labels('delay') : '') + get_labels('start_time') + (history ? get_labels('entry_spot') + get_labels('exit_spot') : '') + get_labels('end_time');
	    };

	    var set_chart_options = function set_chart_options(params) {
	        chartOptions = {
	            chart: {
	                backgroundColor: null, /* make background transparent */
	                height: Math.max(params.height, 450),
	                renderTo: params.el,
	                animation: false
	            },
	            title: {
	                text: params.title,
	                style: { fontSize: '16px' }
	            },
	            credits: { enabled: false },
	            tooltip: {
	                xDateFormat: params.JPClient ? '%Y/%m/%d, %H:%M:%S' : '%A, %b %e, %H:%M:%S GMT',
	                valueDecimals: params.decimals.split('.')[1].length || 3
	            },
	            subtitle: {
	                text: txt,
	                useHTML: true
	            },
	            xAxis: {
	                labels: { overflow: 'justify', format: '{value:%H:%M:%S}' }
	            },
	            yAxis: {
	                labels: { align: 'left' }
	            },
	            series: [{
	                type: params.type,
	                name: params.title,
	                data: params.data,
	                // zones are used to display color of the line
	                zones: [{
	                    // make the line grey until it reaches entry time or start time if entry spot time is not yet known
	                    value: params.entry_time,
	                    color: '#ccc'
	                }, {
	                    // make the line default color until exit time is reached
	                    value: params.exit_time,
	                    color: ''
	                }, {
	                    // make the line grey again after trade ended
	                    color: '#ccc'
	                }],
	                zoneAxis: 'x',
	                cropThreshold: Infinity,
	                softThreshold: false,
	                turboThreshold: Infinity
	            }],
	            exporting: { enabled: false },
	            plotOptions: {
	                line: {
	                    marker: { radius: 2, enabled: true }
	                },
	                candlestick: {
	                    lineColor: 'black',
	                    color: 'red',
	                    upColor: 'green',
	                    upLineColor: 'black',
	                    shadow: true
	                }
	            },
	            rangeSelector: { enabled: false }
	        };
	        if (params.user_sold) {
	            chartOptions.series[0].zones.pop();
	        }
	    };

	    var get_highchart_options = function get_highchart_options(JPClient) {
	        return {
	            // use comma as separator instead of space
	            lang: { thousandsSep: ',' },
	            global: {
	                timezoneOffset: JPClient ? -9 * 60 : 0 }
	        };
	    };

	    var replace_exit_label_with_sell = function replace_exit_label_with_sell(subtitle) {
	        var subtitle_length = subtitle.childNodes.length,
	            textnode = document.createTextNode(' ' + localize('Sell time') + ' ');
	        for (var i = 0; i < subtitle_length; i++) {
	            var item = subtitle.childNodes[i];
	            if (/End time/.test(item.nodeValue)) {
	                subtitle.replaceChild(textnode, item);
	            }
	        }
	    };

	    var get_plotline_options = function get_plotline_options(params, type) {
	        var is_plotx = type === 'x';
	        var options = {
	            value: params.value,
	            id: params.id || (is_plotx ? params.value : params.label),
	            label: { text: params.label || '' },
	            color: params.color || (is_plotx ? '#e98024' : 'green'),
	            zIndex: is_plotx ? 2 : 1,
	            width: params.width || 2,
	            dashStyle: params.dashStyle || 'Solid'
	        };

	        if (is_plotx) {
	            options.label.x = params.textLeft ? -15 : 5;
	        } else {
	            options.label.align = 'center';
	        }

	        return options;
	    };

	    var show_error = function show_error(type, message) {
	        var el = document.getElementById('analysis_live_chart');
	        if (!el) return;
	        el.innerHTML = '<p class="error-msg">' + (type === 'missing' ? localize('Ticks history returned an empty array.') : message) + '</p>';
	    };

	    var get_marker_object = function get_marker_object(type) {
	        var color = type === 'entry' ? 'white' : 'orange';
	        return { fillColor: color, lineColor: 'orange', lineWidth: 3, radius: 4, states: { hover: { fillColor: color, lineColor: 'orange', lineWidth: 3, radius: 4 } } };
	    };

	    return {
	        set_labels: set_labels,
	        get_labels: get_labels,
	        set_chart_options: set_chart_options,
	        get_chart_options: function get_chart_options() {
	            return chartOptions;
	        },
	        get_highchart_options: get_highchart_options,
	        replace_exit_label_with_sell: replace_exit_label_with_sell,
	        get_plotline_options: get_plotline_options,
	        show_error: show_error,
	        get_marker_object: get_marker_object
	    };
	}();

	module.exports = {
	    HighchartUI: HighchartUI
	};

/***/ },
/* 451 */
/***/ function(module, exports) {

	/*
	 Highstock JS v5.0.7 (2017-01-17)

	 (c) 2009-2016 Torstein Honsi

	 License: www.highcharts.com/license
	*/
	(function(K,a){"object"===typeof module&&module.exports?module.exports=K.document?a(K):a:K.Highcharts=a(K)})("undefined"!==typeof window?window:this,function(K){K=function(){var a=window,E=a.document,D=a.navigator&&a.navigator.userAgent||"",H=E&&E.createElementNS&&!!E.createElementNS("http://www.w3.org/2000/svg","svg").createSVGRect,I=/(edge|msie|trident)/i.test(D)&&!window.opera,v=!H,n=/Firefox/.test(D),m=n&&4>parseInt(D.split("Firefox/")[1],10);return a.Highcharts?a.Highcharts.error(16,!0):{product:"Highstock",
	version:"5.0.7",deg2rad:2*Math.PI/360,doc:E,hasBidiBug:m,hasTouch:E&&void 0!==E.documentElement.ontouchstart,isMS:I,isWebKit:/AppleWebKit/.test(D),isFirefox:n,isTouchDevice:/(Mobile|Android|Windows Phone)/.test(D),SVG_NS:"http://www.w3.org/2000/svg",chartCount:0,seriesTypes:{},symbolSizes:{},svg:H,vml:v,win:a,charts:[],marginNames:["plotTop","marginRight","marginBottom","plotLeft"],noop:function(){}}}();(function(a){var E=[],D=a.charts,H=a.doc,I=a.win;a.error=function(v,n){v=a.isNumber(v)?"Highcharts error #"+
	v+": www.highcharts.com/errors/"+v:v;if(n)throw Error(v);I.console&&console.log(v)};a.Fx=function(a,n,m){this.options=n;this.elem=a;this.prop=m};a.Fx.prototype={dSetter:function(){var a=this.paths[0],n=this.paths[1],m=[],z=this.now,t=a.length,q;if(1===z)m=this.toD;else if(t===n.length&&1>z)for(;t--;)q=parseFloat(a[t]),m[t]=isNaN(q)?a[t]:z*parseFloat(n[t]-q)+q;else m=n;this.elem.attr("d",m,null,!0)},update:function(){var a=this.elem,n=this.prop,m=this.now,z=this.options.step;if(this[n+"Setter"])this[n+
	"Setter"]();else a.attr?a.element&&a.attr(n,m,null,!0):a.style[n]=m+this.unit;z&&z.call(a,m,this)},run:function(a,n,m){var v=this,t=function(a){return t.stopped?!1:v.step(a)},q;this.startTime=+new Date;this.start=a;this.end=n;this.unit=m;this.now=this.start;this.pos=0;t.elem=this.elem;t.prop=this.prop;t()&&1===E.push(t)&&(t.timerId=setInterval(function(){for(q=0;q<E.length;q++)E[q]()||E.splice(q--,1);E.length||clearInterval(t.timerId)},13))},step:function(a){var n=+new Date,m,v=this.options;m=this.elem;
	var t=v.complete,q=v.duration,e=v.curAnim,b;if(m.attr&&!m.element)m=!1;else if(a||n>=q+this.startTime){this.now=this.end;this.pos=1;this.update();a=e[this.prop]=!0;for(b in e)!0!==e[b]&&(a=!1);a&&t&&t.call(m);m=!1}else this.pos=v.easing((n-this.startTime)/q),this.now=this.start+(this.end-this.start)*this.pos,this.update(),m=!0;return m},initPath:function(v,n,m){function z(a){var d,f;for(F=a.length;F--;)d="M"===a[F]||"L"===a[F],f=/[a-zA-Z]/.test(a[F+3]),d&&f&&a.splice(F+1,0,a[F+1],a[F+2],a[F+1],a[F+
	2])}function t(a,d){for(;a.length<l;){a[0]=d[l-a.length];var f=a.slice(0,k);[].splice.apply(a,[0,0].concat(f));r&&(f=a.slice(a.length-k),[].splice.apply(a,[a.length,0].concat(f)),F--)}a[0]="M"}function q(a,d){for(var f=(l-a.length)/k;0<f&&f--;)g=a.slice().splice(a.length/u-k,k*u),g[0]=d[l-k-f*k],w&&(g[k-6]=g[k-2],g[k-5]=g[k-1]),[].splice.apply(a,[a.length/u,0].concat(g)),r&&f--}n=n||"";var e,b=v.startX,p=v.endX,w=-1<n.indexOf("C"),k=w?7:3,l,g,F;n=n.split(" ");m=m.slice();var r=v.isArea,u=r?2:1,f;
	w&&(z(n),z(m));if(b&&p){for(F=0;F<b.length;F++)if(b[F]===p[0]){e=F;break}else if(b[0]===p[p.length-b.length+F]){e=F;f=!0;break}void 0===e&&(n=[])}n.length&&a.isNumber(e)&&(l=m.length+e*u*k,f?(t(n,m),q(m,n)):(t(m,n),q(n,m)));return[n,m]}};a.extend=function(a,n){var m;a||(a={});for(m in n)a[m]=n[m];return a};a.merge=function(){var v,n=arguments,m,z={},t=function(q,e){var b,p;"object"!==typeof q&&(q={});for(p in e)e.hasOwnProperty(p)&&(b=e[p],a.isObject(b,!0)&&"renderTo"!==p&&"number"!==typeof b.nodeType?
	q[p]=t(q[p]||{},b):q[p]=e[p]);return q};!0===n[0]&&(z=n[1],n=Array.prototype.slice.call(n,2));m=n.length;for(v=0;v<m;v++)z=t(z,n[v]);return z};a.pInt=function(a,n){return parseInt(a,n||10)};a.isString=function(a){return"string"===typeof a};a.isArray=function(a){a=Object.prototype.toString.call(a);return"[object Array]"===a||"[object Array Iterator]"===a};a.isObject=function(v,n){return v&&"object"===typeof v&&(!n||!a.isArray(v))};a.isNumber=function(a){return"number"===typeof a&&!isNaN(a)};a.erase=
	function(a,n){for(var m=a.length;m--;)if(a[m]===n){a.splice(m,1);break}};a.defined=function(a){return void 0!==a&&null!==a};a.attr=function(v,n,m){var z,t;if(a.isString(n))a.defined(m)?v.setAttribute(n,m):v&&v.getAttribute&&(t=v.getAttribute(n));else if(a.defined(n)&&a.isObject(n))for(z in n)v.setAttribute(z,n[z]);return t};a.splat=function(v){return a.isArray(v)?v:[v]};a.syncTimeout=function(a,n,m){if(n)return setTimeout(a,n,m);a.call(0,m)};a.pick=function(){var a=arguments,n,m,z=a.length;for(n=
	0;n<z;n++)if(m=a[n],void 0!==m&&null!==m)return m};a.css=function(v,n){a.isMS&&!a.svg&&n&&void 0!==n.opacity&&(n.filter="alpha(opacity\x3d"+100*n.opacity+")");a.extend(v.style,n)};a.createElement=function(v,n,m,z,t){v=H.createElement(v);var q=a.css;n&&a.extend(v,n);t&&q(v,{padding:0,border:"none",margin:0});m&&q(v,m);z&&z.appendChild(v);return v};a.extendClass=function(v,n){var m=function(){};m.prototype=new v;a.extend(m.prototype,n);return m};a.pad=function(a,n,m){return Array((n||2)+1-String(a).length).join(m||
	0)+a};a.relativeLength=function(a,n){return/%$/.test(a)?n*parseFloat(a)/100:parseFloat(a)};a.wrap=function(a,n,m){var v=a[n];a[n]=function(){var a=Array.prototype.slice.call(arguments),q=arguments,e=this;e.proceed=function(){v.apply(e,arguments.length?arguments:q)};a.unshift(v);a=m.apply(this,a);e.proceed=null;return a}};a.getTZOffset=function(v){var n=a.Date;return 6E4*(n.hcGetTimezoneOffset&&n.hcGetTimezoneOffset(v)||n.hcTimezoneOffset||0)};a.dateFormat=function(v,n,m){if(!a.defined(n)||isNaN(n))return a.defaultOptions.lang.invalidDate||
	"";v=a.pick(v,"%Y-%m-%d %H:%M:%S");var z=a.Date,t=new z(n-a.getTZOffset(n)),q,e=t[z.hcGetHours](),b=t[z.hcGetDay](),p=t[z.hcGetDate](),w=t[z.hcGetMonth](),k=t[z.hcGetFullYear](),l=a.defaultOptions.lang,g=l.weekdays,F=l.shortWeekdays,r=a.pad,z=a.extend({a:F?F[b]:g[b].substr(0,3),A:g[b],d:r(p),e:r(p,2," "),w:b,b:l.shortMonths[w],B:l.months[w],m:r(w+1),y:k.toString().substr(2,2),Y:k,H:r(e),k:e,I:r(e%12||12),l:e%12||12,M:r(t[z.hcGetMinutes]()),p:12>e?"AM":"PM",P:12>e?"am":"pm",S:r(t.getSeconds()),L:r(Math.round(n%
	1E3),3)},a.dateFormats);for(q in z)for(;-1!==v.indexOf("%"+q);)v=v.replace("%"+q,"function"===typeof z[q]?z[q](n):z[q]);return m?v.substr(0,1).toUpperCase()+v.substr(1):v};a.formatSingle=function(v,n){var m=/\.([0-9])/,z=a.defaultOptions.lang;/f$/.test(v)?(m=(m=v.match(m))?m[1]:-1,null!==n&&(n=a.numberFormat(n,m,z.decimalPoint,-1<v.indexOf(",")?z.thousandsSep:""))):n=a.dateFormat(v,n);return n};a.format=function(v,n){for(var m="{",z=!1,t,q,e,b,p=[],w;v;){m=v.indexOf(m);if(-1===m)break;t=v.slice(0,
	m);if(z){t=t.split(":");q=t.shift().split(".");b=q.length;w=n;for(e=0;e<b;e++)w=w[q[e]];t.length&&(w=a.formatSingle(t.join(":"),w));p.push(w)}else p.push(t);v=v.slice(m+1);m=(z=!z)?"}":"{"}p.push(v);return p.join("")};a.getMagnitude=function(a){return Math.pow(10,Math.floor(Math.log(a)/Math.LN10))};a.normalizeTickInterval=function(v,n,m,z,t){var q,e=v;m=a.pick(m,1);q=v/m;n||(n=t?[1,1.2,1.5,2,2.5,3,4,5,6,8,10]:[1,2,2.5,5,10],!1===z&&(1===m?n=a.grep(n,function(a){return 0===a%1}):.1>=m&&(n=[1/m])));
	for(z=0;z<n.length&&!(e=n[z],t&&e*m>=v||!t&&q<=(n[z]+(n[z+1]||n[z]))/2);z++);return e=a.correctFloat(e*m,-Math.round(Math.log(.001)/Math.LN10))};a.stableSort=function(a,n){var m=a.length,v,t;for(t=0;t<m;t++)a[t].safeI=t;a.sort(function(a,e){v=n(a,e);return 0===v?a.safeI-e.safeI:v});for(t=0;t<m;t++)delete a[t].safeI};a.arrayMin=function(a){for(var n=a.length,m=a[0];n--;)a[n]<m&&(m=a[n]);return m};a.arrayMax=function(a){for(var n=a.length,m=a[0];n--;)a[n]>m&&(m=a[n]);return m};a.destroyObjectProperties=
	function(a,n){for(var m in a)a[m]&&a[m]!==n&&a[m].destroy&&a[m].destroy(),delete a[m]};a.discardElement=function(v){var n=a.garbageBin;n||(n=a.createElement("div"));v&&n.appendChild(v);n.innerHTML=""};a.correctFloat=function(a,n){return parseFloat(a.toPrecision(n||14))};a.setAnimation=function(v,n){n.renderer.globalAnimation=a.pick(v,n.options.chart.animation,!0)};a.animObject=function(v){return a.isObject(v)?a.merge(v):{duration:v?500:0}};a.timeUnits={millisecond:1,second:1E3,minute:6E4,hour:36E5,
	day:864E5,week:6048E5,month:24192E5,year:314496E5};a.numberFormat=function(v,n,m,z){v=+v||0;n=+n;var t=a.defaultOptions.lang,q=(v.toString().split(".")[1]||"").length,e,b;-1===n?n=Math.min(q,20):a.isNumber(n)||(n=2);b=(Math.abs(v)+Math.pow(10,-Math.max(n,q)-1)).toFixed(n);q=String(a.pInt(b));e=3<q.length?q.length%3:0;m=a.pick(m,t.decimalPoint);z=a.pick(z,t.thousandsSep);v=(0>v?"-":"")+(e?q.substr(0,e)+z:"");v+=q.substr(e).replace(/(\d{3})(?=\d)/g,"$1"+z);n&&(v+=m+b.slice(-n));return v};Math.easeInOutSine=
	function(a){return-.5*(Math.cos(Math.PI*a)-1)};a.getStyle=function(v,n){return"width"===n?Math.min(v.offsetWidth,v.scrollWidth)-a.getStyle(v,"padding-left")-a.getStyle(v,"padding-right"):"height"===n?Math.min(v.offsetHeight,v.scrollHeight)-a.getStyle(v,"padding-top")-a.getStyle(v,"padding-bottom"):(v=I.getComputedStyle(v,void 0))&&a.pInt(v.getPropertyValue(n))};a.inArray=function(a,n){return n.indexOf?n.indexOf(a):[].indexOf.call(n,a)};a.grep=function(a,n){return[].filter.call(a,n)};a.find=function(a,
	n){return[].find.call(a,n)};a.map=function(a,n){for(var m=[],z=0,t=a.length;z<t;z++)m[z]=n.call(a[z],a[z],z,a);return m};a.offset=function(a){var n=H.documentElement;a=a.getBoundingClientRect();return{top:a.top+(I.pageYOffset||n.scrollTop)-(n.clientTop||0),left:a.left+(I.pageXOffset||n.scrollLeft)-(n.clientLeft||0)}};a.stop=function(a,n){for(var m=E.length;m--;)E[m].elem!==a||n&&n!==E[m].prop||(E[m].stopped=!0)};a.each=function(a,n,m){return Array.prototype.forEach.call(a,n,m)};a.addEvent=function(v,
	n,m){function z(a){a.target=a.srcElement||I;m.call(v,a)}var t=v.hcEvents=v.hcEvents||{};v.addEventListener?v.addEventListener(n,m,!1):v.attachEvent&&(v.hcEventsIE||(v.hcEventsIE={}),v.hcEventsIE[m.toString()]=z,v.attachEvent("on"+n,z));t[n]||(t[n]=[]);t[n].push(m);return function(){a.removeEvent(v,n,m)}};a.removeEvent=function(v,n,m){function z(a,b){v.removeEventListener?v.removeEventListener(a,b,!1):v.attachEvent&&(b=v.hcEventsIE[b.toString()],v.detachEvent("on"+a,b))}function t(){var a,b;if(v.nodeName)for(b in n?
	(a={},a[n]=!0):a=e,a)if(e[b])for(a=e[b].length;a--;)z(b,e[b][a])}var q,e=v.hcEvents,b;e&&(n?(q=e[n]||[],m?(b=a.inArray(m,q),-1<b&&(q.splice(b,1),e[n]=q),z(n,m)):(t(),e[n]=[])):(t(),v.hcEvents={}))};a.fireEvent=function(v,n,m,z){var t;t=v.hcEvents;var q,e;m=m||{};if(H.createEvent&&(v.dispatchEvent||v.fireEvent))t=H.createEvent("Events"),t.initEvent(n,!0,!0),a.extend(t,m),v.dispatchEvent?v.dispatchEvent(t):v.fireEvent(n,t);else if(t)for(t=t[n]||[],q=t.length,m.target||a.extend(m,{preventDefault:function(){m.defaultPrevented=
	!0},target:v,type:n}),n=0;n<q;n++)(e=t[n])&&!1===e.call(v,m)&&m.preventDefault();z&&!m.defaultPrevented&&z(m)};a.animate=function(v,n,m){var z,t="",q,e,b;a.isObject(m)||(z=arguments,m={duration:z[2],easing:z[3],complete:z[4]});a.isNumber(m.duration)||(m.duration=400);m.easing="function"===typeof m.easing?m.easing:Math[m.easing]||Math.easeInOutSine;m.curAnim=a.merge(n);for(b in n)a.stop(v,b),e=new a.Fx(v,m,b),q=null,"d"===b?(e.paths=e.initPath(v,v.d,n.d),e.toD=n.d,z=0,q=1):v.attr?z=v.attr(b):(z=parseFloat(a.getStyle(v,
	b))||0,"opacity"!==b&&(t="px")),q||(q=n[b]),q.match&&q.match("px")&&(q=q.replace(/px/g,"")),e.run(z,q,t)};a.seriesType=function(v,n,m,z,t){var q=a.getOptions(),e=a.seriesTypes;q.plotOptions[v]=a.merge(q.plotOptions[n],m);e[v]=a.extendClass(e[n]||function(){},z);e[v].prototype.type=v;t&&(e[v].prototype.pointClass=a.extendClass(a.Point,t));return e[v]};a.uniqueKey=function(){var a=Math.random().toString(36).substring(2,9),n=0;return function(){return"highcharts-"+a+"-"+n++}}();I.jQuery&&(I.jQuery.fn.highcharts=
	function(){var v=[].slice.call(arguments);if(this[0])return v[0]?(new (a[a.isString(v[0])?v.shift():"Chart"])(this[0],v[0],v[1]),this):D[a.attr(this[0],"data-highcharts-chart")]});H&&!H.defaultView&&(a.getStyle=function(v,n){var m={width:"clientWidth",height:"clientHeight"}[n];if(v.style[n])return a.pInt(v.style[n]);"opacity"===n&&(n="filter");if(m)return v.style.zoom=1,Math.max(v[m]-2*a.getStyle(v,"padding"),0);v=v.currentStyle[n.replace(/\-(\w)/g,function(a,t){return t.toUpperCase()})];"filter"===
	n&&(v=v.replace(/alpha\(opacity=([0-9]+)\)/,function(a,t){return t/100}));return""===v?1:a.pInt(v)});Array.prototype.forEach||(a.each=function(a,n,m){for(var z=0,t=a.length;z<t;z++)if(!1===n.call(m,a[z],z,a))return z});Array.prototype.indexOf||(a.inArray=function(a,n){var m,z=0;if(n)for(m=n.length;z<m;z++)if(n[z]===a)return z;return-1});Array.prototype.filter||(a.grep=function(a,n){for(var m=[],z=0,t=a.length;z<t;z++)n(a[z],z)&&m.push(a[z]);return m});Array.prototype.find||(a.find=function(a,n){var m,
	z=a.length;for(m=0;m<z;m++)if(n(a[m],m))return a[m]})})(K);(function(a){var E=a.each,D=a.isNumber,H=a.map,I=a.merge,v=a.pInt;a.Color=function(n){if(!(this instanceof a.Color))return new a.Color(n);this.init(n)};a.Color.prototype={parsers:[{regex:/rgba\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]?(?:\.[0-9]+)?)\s*\)/,parse:function(a){return[v(a[1]),v(a[2]),v(a[3]),parseFloat(a[4],10)]}},{regex:/#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/,parse:function(a){return[v(a[1],
	16),v(a[2],16),v(a[3],16),1]}},{regex:/rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/,parse:function(a){return[v(a[1]),v(a[2]),v(a[3]),1]}}],names:{white:"#ffffff",black:"#000000"},init:function(n){var m,z,t,q;if((this.input=n=this.names[n]||n)&&n.stops)this.stops=H(n.stops,function(e){return new a.Color(e[1])});else for(t=this.parsers.length;t--&&!z;)q=this.parsers[t],(m=q.regex.exec(n))&&(z=q.parse(m));this.rgba=z||[]},get:function(a){var m=this.input,n=this.rgba,t;this.stops?
	(t=I(m),t.stops=[].concat(t.stops),E(this.stops,function(q,e){t.stops[e]=[t.stops[e][0],q.get(a)]})):t=n&&D(n[0])?"rgb"===a||!a&&1===n[3]?"rgb("+n[0]+","+n[1]+","+n[2]+")":"a"===a?n[3]:"rgba("+n.join(",")+")":m;return t},brighten:function(a){var m,n=this.rgba;if(this.stops)E(this.stops,function(t){t.brighten(a)});else if(D(a)&&0!==a)for(m=0;3>m;m++)n[m]+=v(255*a),0>n[m]&&(n[m]=0),255<n[m]&&(n[m]=255);return this},setOpacity:function(a){this.rgba[3]=a;return this}};a.color=function(n){return new a.Color(n)}})(K);
	(function(a){var E,D,H=a.addEvent,I=a.animate,v=a.attr,n=a.charts,m=a.color,z=a.css,t=a.createElement,q=a.defined,e=a.deg2rad,b=a.destroyObjectProperties,p=a.doc,w=a.each,k=a.extend,l=a.erase,g=a.grep,F=a.hasTouch,r=a.inArray,u=a.isArray,f=a.isFirefox,B=a.isMS,d=a.isObject,x=a.isString,c=a.isWebKit,y=a.merge,L=a.noop,A=a.pick,J=a.pInt,h=a.removeEvent,G=a.stop,Q=a.svg,P=a.SVG_NS,N=a.symbolSizes,S=a.win;E=a.SVGElement=function(){return this};E.prototype={opacity:1,SVG_NS:P,textProps:"direction fontSize fontWeight fontFamily fontStyle color lineHeight width textDecoration textOverflow textOutline".split(" "),
	init:function(a,h){this.element="span"===h?t(h):p.createElementNS(this.SVG_NS,h);this.renderer=a},animate:function(C,h,d){h=a.animObject(A(h,this.renderer.globalAnimation,!0));0!==h.duration?(d&&(h.complete=d),I(this,C,h)):this.attr(C,null,d);return this},colorGradient:function(C,h,d){var c=this.renderer,f,G,b,A,g,B,x,M,l,r,k,J=[],e;C.linearGradient?G="linearGradient":C.radialGradient&&(G="radialGradient");if(G){b=C[G];g=c.gradients;x=C.stops;r=d.radialReference;u(b)&&(C[G]=b={x1:b[0],y1:b[1],x2:b[2],
	y2:b[3],gradientUnits:"userSpaceOnUse"});"radialGradient"===G&&r&&!q(b.gradientUnits)&&(A=b,b=y(b,c.getRadialAttr(r,A),{gradientUnits:"userSpaceOnUse"}));for(k in b)"id"!==k&&J.push(k,b[k]);for(k in x)J.push(x[k]);J=J.join(",");g[J]?r=g[J].attr("id"):(b.id=r=a.uniqueKey(),g[J]=B=c.createElement(G).attr(b).add(c.defs),B.radAttr=A,B.stops=[],w(x,function(C){0===C[1].indexOf("rgba")?(f=a.color(C[1]),M=f.get("rgb"),l=f.get("a")):(M=C[1],l=1);C=c.createElement("stop").attr({offset:C[0],"stop-color":M,
	"stop-opacity":l}).add(B);B.stops.push(C)}));e="url("+c.url+"#"+r+")";d.setAttribute(h,e);d.gradient=J;C.toString=function(){return e}}},applyTextOutline:function(a){var C=this.element,h,d,c,f;-1!==a.indexOf("contrast")&&(a=a.replace(/contrast/g,this.renderer.getContrast(C.style.fill)));this.fakeTS=!0;this.ySetter=this.xSetter;h=[].slice.call(C.getElementsByTagName("tspan"));a=a.split(" ");d=a[a.length-1];(c=a[0])&&"none"!==c&&(c=c.replace(/(^[\d\.]+)(.*?)$/g,function(a,C,h){return 2*C+h}),w(h,function(a){"highcharts-text-outline"===
	a.getAttribute("class")&&l(h,C.removeChild(a))}),f=C.firstChild,w(h,function(a,h){0===h&&(a.setAttribute("x",C.getAttribute("x")),h=C.getAttribute("y"),a.setAttribute("y",h||0),null===h&&C.setAttribute("y",0));a=a.cloneNode(1);v(a,{"class":"highcharts-text-outline",fill:d,stroke:d,"stroke-width":c,"stroke-linejoin":"round"});C.insertBefore(a,f)}))},attr:function(a,h,d,c){var C,f=this.element,b,y=this,A;"string"===typeof a&&void 0!==h&&(C=a,a={},a[C]=h);if("string"===typeof a)y=(this[a+"Getter"]||
	this._defaultGetter).call(this,a,f);else{for(C in a)h=a[C],A=!1,c||G(this,C),this.symbolName&&/^(x|y|width|height|r|start|end|innerR|anchorX|anchorY)/.test(C)&&(b||(this.symbolAttr(a),b=!0),A=!0),!this.rotation||"x"!==C&&"y"!==C||(this.doTransform=!0),A||(A=this[C+"Setter"]||this._defaultSetter,A.call(this,h,C,f),this.shadows&&/^(width|height|visibility|x|y|d|transform|cx|cy|r)$/.test(C)&&this.updateShadows(C,h,A));this.doTransform&&(this.updateTransform(),this.doTransform=!1)}d&&d();return y},updateShadows:function(a,
	h,d){for(var C=this.shadows,c=C.length;c--;)d.call(C[c],"height"===a?Math.max(h-(C[c].cutHeight||0),0):"d"===a?this.d:h,a,C[c])},addClass:function(a,h){var C=this.attr("class")||"";-1===C.indexOf(a)&&(h||(a=(C+(C?" ":"")+a).replace("  "," ")),this.attr("class",a));return this},hasClass:function(a){return-1!==v(this.element,"class").indexOf(a)},removeClass:function(a){v(this.element,"class",(v(this.element,"class")||"").replace(a,""));return this},symbolAttr:function(a){var C=this;w("x y r start end width height innerR anchorX anchorY".split(" "),
	function(h){C[h]=A(a[h],C[h])});C.attr({d:C.renderer.symbols[C.symbolName](C.x,C.y,C.width,C.height,C)})},clip:function(a){return this.attr("clip-path",a?"url("+this.renderer.url+"#"+a.id+")":"none")},crisp:function(a,h){var C,d={},c;h=h||a.strokeWidth||0;c=Math.round(h)%2/2;a.x=Math.floor(a.x||this.x||0)+c;a.y=Math.floor(a.y||this.y||0)+c;a.width=Math.floor((a.width||this.width||0)-2*c);a.height=Math.floor((a.height||this.height||0)-2*c);q(a.strokeWidth)&&(a.strokeWidth=h);for(C in a)this[C]!==a[C]&&
	(this[C]=d[C]=a[C]);return d},css:function(a){var C=this.styles,h={},d=this.element,c,f,G="";c=!C;var b=["textOverflow","width"];a&&a.color&&(a.fill=a.color);if(C)for(f in a)a[f]!==C[f]&&(h[f]=a[f],c=!0);if(c){c=this.textWidth=a&&a.width&&"text"===d.nodeName.toLowerCase()&&J(a.width)||this.textWidth;C&&(a=k(C,h));this.styles=a;c&&!Q&&this.renderer.forExport&&delete a.width;if(B&&!Q)z(this.element,a);else{C=function(a,C){return"-"+C.toLowerCase()};for(f in a)-1===r(f,b)&&(G+=f.replace(/([A-Z])/g,C)+
	":"+a[f]+";");G&&v(d,"style",G)}this.added&&(c&&this.renderer.buildText(this),a&&a.textOutline&&this.applyTextOutline(a.textOutline))}return this},strokeWidth:function(){return this["stroke-width"]||0},on:function(a,h){var C=this,d=C.element;F&&"click"===a?(d.ontouchstart=function(a){C.touchEventFired=Date.now();a.preventDefault();h.call(d,a)},d.onclick=function(a){(-1===S.navigator.userAgent.indexOf("Android")||1100<Date.now()-(C.touchEventFired||0))&&h.call(d,a)}):d["on"+a]=h;return this},setRadialReference:function(a){var C=
	this.renderer.gradients[this.element.gradient];this.element.radialReference=a;C&&C.radAttr&&C.animate(this.renderer.getRadialAttr(a,C.radAttr));return this},translate:function(a,h){return this.attr({translateX:a,translateY:h})},invert:function(a){this.inverted=a;this.updateTransform();return this},updateTransform:function(){var a=this.translateX||0,h=this.translateY||0,d=this.scaleX,c=this.scaleY,f=this.inverted,G=this.rotation,b=this.element;f&&(a+=this.width,h+=this.height);a=["translate("+a+","+
	h+")"];f?a.push("rotate(90) scale(-1,1)"):G&&a.push("rotate("+G+" "+(b.getAttribute("x")||0)+" "+(b.getAttribute("y")||0)+")");(q(d)||q(c))&&a.push("scale("+A(d,1)+" "+A(c,1)+")");a.length&&b.setAttribute("transform",a.join(" "))},toFront:function(){var a=this.element;a.parentNode.appendChild(a);return this},align:function(a,h,d){var C,c,f,G,b={};c=this.renderer;f=c.alignedObjects;var y,g;if(a){if(this.alignOptions=a,this.alignByTranslate=h,!d||x(d))this.alignTo=C=d||"renderer",l(f,this),f.push(this),
	d=null}else a=this.alignOptions,h=this.alignByTranslate,C=this.alignTo;d=A(d,c[C],c);C=a.align;c=a.verticalAlign;f=(d.x||0)+(a.x||0);G=(d.y||0)+(a.y||0);"right"===C?y=1:"center"===C&&(y=2);y&&(f+=(d.width-(a.width||0))/y);b[h?"translateX":"x"]=Math.round(f);"bottom"===c?g=1:"middle"===c&&(g=2);g&&(G+=(d.height-(a.height||0))/g);b[h?"translateY":"y"]=Math.round(G);this[this.placed?"animate":"attr"](b);this.placed=!0;this.alignAttr=b;return this},getBBox:function(a,h){var C,d=this.renderer,c,f=this.element,
	G=this.styles,b,y=this.textStr,g,B=d.cache,x=d.cacheKeys,r;h=A(h,this.rotation);c=h*e;b=G&&G.fontSize;void 0!==y&&(r=y.toString(),-1===r.indexOf("\x3c")&&(r=r.replace(/[0-9]/g,"0")),r+=["",h||0,b,G&&G.width,G&&G.textOverflow].join());r&&!a&&(C=B[r]);if(!C){if(f.namespaceURI===this.SVG_NS||d.forExport){try{(g=this.fakeTS&&function(a){w(f.querySelectorAll(".highcharts-text-outline"),function(C){C.style.display=a})})&&g("none"),C=f.getBBox?k({},f.getBBox()):{width:f.offsetWidth,height:f.offsetHeight},
	g&&g("")}catch(U){}if(!C||0>C.width)C={width:0,height:0}}else C=this.htmlGetBBox();d.isSVG&&(a=C.width,d=C.height,G&&"11px"===G.fontSize&&17===Math.round(d)&&(C.height=d=14),h&&(C.width=Math.abs(d*Math.sin(c))+Math.abs(a*Math.cos(c)),C.height=Math.abs(d*Math.cos(c))+Math.abs(a*Math.sin(c))));if(r&&0<C.height){for(;250<x.length;)delete B[x.shift()];B[r]||x.push(r);B[r]=C}}return C},show:function(a){return this.attr({visibility:a?"inherit":"visible"})},hide:function(){return this.attr({visibility:"hidden"})},
	fadeOut:function(a){var C=this;C.animate({opacity:0},{duration:a||150,complete:function(){C.attr({y:-9999})}})},add:function(a){var C=this.renderer,h=this.element,d;a&&(this.parentGroup=a);this.parentInverted=a&&a.inverted;void 0!==this.textStr&&C.buildText(this);this.added=!0;if(!a||a.handleZ||this.zIndex)d=this.zIndexSetter();d||(a?a.element:C.box).appendChild(h);if(this.onAdd)this.onAdd();return this},safeRemoveChild:function(a){var h=a.parentNode;h&&h.removeChild(a)},destroy:function(){var a=
	this.element||{},h=this.renderer.isSVG&&"SPAN"===a.nodeName&&this.parentGroup,d,c;a.onclick=a.onmouseout=a.onmouseover=a.onmousemove=a.point=null;G(this);this.clipPath&&(this.clipPath=this.clipPath.destroy());if(this.stops){for(c=0;c<this.stops.length;c++)this.stops[c]=this.stops[c].destroy();this.stops=null}this.safeRemoveChild(a);for(this.destroyShadows();h&&h.div&&0===h.div.childNodes.length;)a=h.parentGroup,this.safeRemoveChild(h.div),delete h.div,h=a;this.alignTo&&l(this.renderer.alignedObjects,
	this);for(d in this)delete this[d];return null},shadow:function(a,h,d){var C=[],c,f,G=this.element,b,y,g,B;if(!a)this.destroyShadows();else if(!this.shadows){y=A(a.width,3);g=(a.opacity||.15)/y;B=this.parentInverted?"(-1,-1)":"("+A(a.offsetX,1)+", "+A(a.offsetY,1)+")";for(c=1;c<=y;c++)f=G.cloneNode(0),b=2*y+1-2*c,v(f,{isShadow:"true",stroke:a.color||"#000000","stroke-opacity":g*c,"stroke-width":b,transform:"translate"+B,fill:"none"}),d&&(v(f,"height",Math.max(v(f,"height")-b,0)),f.cutHeight=b),h?
	h.element.appendChild(f):G.parentNode.insertBefore(f,G),C.push(f);this.shadows=C}return this},destroyShadows:function(){w(this.shadows||[],function(a){this.safeRemoveChild(a)},this);this.shadows=void 0},xGetter:function(a){"circle"===this.element.nodeName&&("x"===a?a="cx":"y"===a&&(a="cy"));return this._defaultGetter(a)},_defaultGetter:function(a){a=A(this[a],this.element?this.element.getAttribute(a):null,0);/^[\-0-9\.]+$/.test(a)&&(a=parseFloat(a));return a},dSetter:function(a,h,d){a&&a.join&&(a=
	a.join(" "));/(NaN| {2}|^$)/.test(a)&&(a="M 0 0");d.setAttribute(h,a);this[h]=a},dashstyleSetter:function(a){var h,C=this["stroke-width"];"inherit"===C&&(C=1);if(a=a&&a.toLowerCase()){a=a.replace("shortdashdotdot","3,1,1,1,1,1,").replace("shortdashdot","3,1,1,1").replace("shortdot","1,1,").replace("shortdash","3,1,").replace("longdash","8,3,").replace(/dot/g,"1,3,").replace("dash","4,3,").replace(/,$/,"").split(",");for(h=a.length;h--;)a[h]=J(a[h])*C;a=a.join(",").replace(/NaN/g,"none");this.element.setAttribute("stroke-dasharray",
	a)}},alignSetter:function(a){this.element.setAttribute("text-anchor",{left:"start",center:"middle",right:"end"}[a])},opacitySetter:function(a,h,d){this[h]=a;d.setAttribute(h,a)},titleSetter:function(a){var h=this.element.getElementsByTagName("title")[0];h||(h=p.createElementNS(this.SVG_NS,"title"),this.element.appendChild(h));h.firstChild&&h.removeChild(h.firstChild);h.appendChild(p.createTextNode(String(A(a),"").replace(/<[^>]*>/g,"")))},textSetter:function(a){a!==this.textStr&&(delete this.bBox,
	this.textStr=a,this.added&&this.renderer.buildText(this))},fillSetter:function(a,h,d){"string"===typeof a?d.setAttribute(h,a):a&&this.colorGradient(a,h,d)},visibilitySetter:function(a,h,d){"inherit"===a?d.removeAttribute(h):d.setAttribute(h,a)},zIndexSetter:function(a,h){var C=this.renderer,d=this.parentGroup,c=(d||C).element||C.box,f,G=this.element,b;f=this.added;var y;q(a)&&(G.zIndex=a,a=+a,this[h]===a&&(f=!1),this[h]=a);if(f){(a=this.zIndex)&&d&&(d.handleZ=!0);h=c.childNodes;for(y=0;y<h.length&&
	!b;y++)d=h[y],f=d.zIndex,d!==G&&(J(f)>a||!q(a)&&q(f)||0>a&&!q(f)&&c!==C.box)&&(c.insertBefore(G,d),b=!0);b||c.appendChild(G)}return b},_defaultSetter:function(a,h,d){d.setAttribute(h,a)}};E.prototype.yGetter=E.prototype.xGetter;E.prototype.translateXSetter=E.prototype.translateYSetter=E.prototype.rotationSetter=E.prototype.verticalAlignSetter=E.prototype.scaleXSetter=E.prototype.scaleYSetter=function(a,h){this[h]=a;this.doTransform=!0};E.prototype["stroke-widthSetter"]=E.prototype.strokeSetter=function(a,
	h,d){this[h]=a;this.stroke&&this["stroke-width"]?(E.prototype.fillSetter.call(this,this.stroke,"stroke",d),d.setAttribute("stroke-width",this["stroke-width"]),this.hasStroke=!0):"stroke-width"===h&&0===a&&this.hasStroke&&(d.removeAttribute("stroke"),this.hasStroke=!1)};D=a.SVGRenderer=function(){this.init.apply(this,arguments)};D.prototype={Element:E,SVG_NS:P,init:function(a,h,d,G,b,y){var C;G=this.createElement("svg").attr({version:"1.1","class":"highcharts-root"}).css(this.getStyle(G));C=G.element;
	a.appendChild(C);-1===a.innerHTML.indexOf("xmlns")&&v(C,"xmlns",this.SVG_NS);this.isSVG=!0;this.box=C;this.boxWrapper=G;this.alignedObjects=[];this.url=(f||c)&&p.getElementsByTagName("base").length?S.location.href.replace(/#.*?$/,"").replace(/<[^>]*>/g,"").replace(/([\('\)])/g,"\\$1").replace(/ /g,"%20"):"";this.createElement("desc").add().element.appendChild(p.createTextNode("Created with Highstock 5.0.7"));this.defs=this.createElement("defs").add();this.allowHTML=y;this.forExport=b;this.gradients=
	{};this.cache={};this.cacheKeys=[];this.imgCount=0;this.setSize(h,d,!1);var A;f&&a.getBoundingClientRect&&(h=function(){z(a,{left:0,top:0});A=a.getBoundingClientRect();z(a,{left:Math.ceil(A.left)-A.left+"px",top:Math.ceil(A.top)-A.top+"px"})},h(),this.unSubPixelFix=H(S,"resize",h))},getStyle:function(a){return this.style=k({fontFamily:'"Lucida Grande", "Lucida Sans Unicode", Arial, Helvetica, sans-serif',fontSize:"12px"},a)},setStyle:function(a){this.boxWrapper.css(this.getStyle(a))},isHidden:function(){return!this.boxWrapper.getBBox().width},
	destroy:function(){var a=this.defs;this.box=null;this.boxWrapper=this.boxWrapper.destroy();b(this.gradients||{});this.gradients=null;a&&(this.defs=a.destroy());this.unSubPixelFix&&this.unSubPixelFix();return this.alignedObjects=null},createElement:function(a){var h=new this.Element;h.init(this,a);return h},draw:L,getRadialAttr:function(a,h){return{cx:a[0]-a[2]/2+h.cx*a[2],cy:a[1]-a[2]/2+h.cy*a[2],r:h.r*a[2]}},buildText:function(a){var h=a.element,d=this,c=d.forExport,f=A(a.textStr,"").toString(),
	C=-1!==f.indexOf("\x3c"),G=h.childNodes,b,y,B,r,x=v(h,"x"),l=a.styles,u=a.textWidth,k=l&&l.lineHeight,e=l&&l.textOutline,F=l&&"ellipsis"===l.textOverflow,L=l&&"nowrap"===l.whiteSpace,t=l&&l.fontSize,q,m=G.length,l=u&&!a.added&&this.box,n=function(a){var c;c=/(px|em)$/.test(a&&a.style.fontSize)?a.style.fontSize:t||d.style.fontSize||12;return k?J(k):d.fontMetrics(c,a.getAttribute("style")?a:h).h};q=[f,F,L,k,e,t,u].join();if(q!==a.textCache){for(a.textCache=q;m--;)h.removeChild(G[m]);C||e||F||u||-1!==
	f.indexOf(" ")?(b=/<.*class="([^"]+)".*>/,y=/<.*style="([^"]+)".*>/,B=/<.*href="(http[^"]+)".*>/,l&&l.appendChild(h),f=C?f.replace(/<(b|strong)>/g,'\x3cspan style\x3d"font-weight:bold"\x3e').replace(/<(i|em)>/g,'\x3cspan style\x3d"font-style:italic"\x3e').replace(/<a/g,"\x3cspan").replace(/<\/(b|strong|i|em|a)>/g,"\x3c/span\x3e").split(/<br.*?>/g):[f],f=g(f,function(a){return""!==a}),w(f,function(f,C){var G,A=0;f=f.replace(/^\s+|\s+$/g,"").replace(/<span/g,"|||\x3cspan").replace(/<\/span>/g,"\x3c/span\x3e|||");
	G=f.split("|||");w(G,function(f){if(""!==f||1===G.length){var g={},l=p.createElementNS(d.SVG_NS,"tspan"),k,J;b.test(f)&&(k=f.match(b)[1],v(l,"class",k));y.test(f)&&(J=f.match(y)[1].replace(/(;| |^)color([ :])/,"$1fill$2"),v(l,"style",J));B.test(f)&&!c&&(v(l,"onclick",'location.href\x3d"'+f.match(B)[1]+'"'),z(l,{cursor:"pointer"}));f=(f.replace(/<(.|\n)*?>/g,"")||" ").replace(/&lt;/g,"\x3c").replace(/&gt;/g,"\x3e");if(" "!==f){l.appendChild(p.createTextNode(f));A?g.dx=0:C&&null!==x&&(g.x=x);v(l,g);
	h.appendChild(l);!A&&C&&(!Q&&c&&z(l,{display:"block"}),v(l,"dy",n(l)));if(u){g=f.replace(/([^\^])-/g,"$1- ").split(" ");k=1<G.length||C||1<g.length&&!L;for(var e,w,M=[],t=n(l),q=a.rotation,m=f,N=m.length;(k||F)&&(g.length||M.length);)a.rotation=0,e=a.getBBox(!0),w=e.width,!Q&&d.forExport&&(w=d.measureSpanWidth(l.firstChild.data,a.styles)),e=w>u,void 0===r&&(r=e),F&&r?(N/=2,""===m||!e&&.5>N?g=[]:(m=f.substring(0,m.length+(e?-1:1)*Math.ceil(N)),g=[m+(3<u?"\u2026":"")],l.removeChild(l.firstChild))):
	e&&1!==g.length?(l.removeChild(l.firstChild),M.unshift(g.pop())):(g=M,M=[],g.length&&!L&&(l=p.createElementNS(P,"tspan"),v(l,{dy:t,x:x}),J&&v(l,"style",J),h.appendChild(l)),w>u&&(u=w)),g.length&&l.appendChild(p.createTextNode(g.join(" ").replace(/- /g,"-")));a.rotation=q}A++}}})}),r&&a.attr("title",a.textStr),l&&l.removeChild(h),e&&a.applyTextOutline&&a.applyTextOutline(e)):h.appendChild(p.createTextNode(f.replace(/&lt;/g,"\x3c").replace(/&gt;/g,"\x3e")))}},getContrast:function(a){a=m(a).rgba;return 510<
	a[0]+a[1]+a[2]?"#000000":"#FFFFFF"},button:function(a,h,d,f,c,G,b,g,A){var C=this.label(a,h,d,A,null,null,null,null,"button"),l=0;C.attr(y({padding:8,r:2},c));var r,x,u,J;c=y({fill:"#f7f7f7",stroke:"#cccccc","stroke-width":1,style:{color:"#333333",cursor:"pointer",fontWeight:"normal"}},c);r=c.style;delete c.style;G=y(c,{fill:"#e6e6e6"},G);x=G.style;delete G.style;b=y(c,{fill:"#e6ebf5",style:{color:"#000000",fontWeight:"bold"}},b);u=b.style;delete b.style;g=y(c,{style:{color:"#cccccc"}},g);J=g.style;
	delete g.style;H(C.element,B?"mouseover":"mouseenter",function(){3!==l&&C.setState(1)});H(C.element,B?"mouseout":"mouseleave",function(){3!==l&&C.setState(l)});C.setState=function(a){1!==a&&(C.state=l=a);C.removeClass(/highcharts-button-(normal|hover|pressed|disabled)/).addClass("highcharts-button-"+["normal","hover","pressed","disabled"][a||0]);C.attr([c,G,b,g][a||0]).css([r,x,u,J][a||0])};C.attr(c).css(k({cursor:"default"},r));return C.on("click",function(a){3!==l&&f.call(C,a)})},crispLine:function(a,
	h){a[1]===a[4]&&(a[1]=a[4]=Math.round(a[1])-h%2/2);a[2]===a[5]&&(a[2]=a[5]=Math.round(a[2])+h%2/2);return a},path:function(a){var h={fill:"none"};u(a)?h.d=a:d(a)&&k(h,a);return this.createElement("path").attr(h)},circle:function(a,h,c){a=d(a)?a:{x:a,y:h,r:c};h=this.createElement("circle");h.xSetter=h.ySetter=function(a,h,d){d.setAttribute("c"+h,a)};return h.attr(a)},arc:function(a,h,c,f,G,b){d(a)&&(h=a.y,c=a.r,f=a.innerR,G=a.start,b=a.end,a=a.x);a=this.symbol("arc",a||0,h||0,c||0,c||0,{innerR:f||
	0,start:G||0,end:b||0});a.r=c;return a},rect:function(a,h,c,f,G,b){G=d(a)?a.r:G;var C=this.createElement("rect");a=d(a)?a:void 0===a?{}:{x:a,y:h,width:Math.max(c,0),height:Math.max(f,0)};void 0!==b&&(a.strokeWidth=b,a=C.crisp(a));a.fill="none";G&&(a.r=G);C.rSetter=function(a,h,d){v(d,{rx:a,ry:a})};return C.attr(a)},setSize:function(a,h,d){var c=this.alignedObjects,f=c.length;this.width=a;this.height=h;for(this.boxWrapper.animate({width:a,height:h},{step:function(){this.attr({viewBox:"0 0 "+this.attr("width")+
	" "+this.attr("height")})},duration:A(d,!0)?void 0:0});f--;)c[f].align()},g:function(a){var h=this.createElement("g");return a?h.attr({"class":"highcharts-"+a}):h},image:function(a,h,d,c,f){var G={preserveAspectRatio:"none"};1<arguments.length&&k(G,{x:h,y:d,width:c,height:f});G=this.createElement("image").attr(G);G.element.setAttributeNS?G.element.setAttributeNS("http://www.w3.org/1999/xlink","href",a):G.element.setAttribute("hc-svg-href",a);return G},symbol:function(a,h,d,c,f,G){var b=this,C,y=this.symbols[a],
	g=q(h)&&y&&this.symbols[a](Math.round(h),Math.round(d),c,f,G),l=/^url\((.*?)\)$/,B,r;y?(C=this.path(g),C.attr("fill","none"),k(C,{symbolName:a,x:h,y:d,width:c,height:f}),G&&k(C,G)):l.test(a)&&(B=a.match(l)[1],C=this.image(B),C.imgwidth=A(N[B]&&N[B].width,G&&G.width),C.imgheight=A(N[B]&&N[B].height,G&&G.height),r=function(){C.attr({width:C.width,height:C.height})},w(["width","height"],function(a){C[a+"Setter"]=function(a,h){var d={},c=this["img"+h],f="width"===h?"translateX":"translateY";this[h]=a;
	q(c)&&(this.element&&this.element.setAttribute(h,c),this.alignByTranslate||(d[f]=((this[h]||0)-c)/2,this.attr(d)))}}),q(h)&&C.attr({x:h,y:d}),C.isImg=!0,q(C.imgwidth)&&q(C.imgheight)?r():(C.attr({width:0,height:0}),t("img",{onload:function(){var a=n[b.chartIndex];0===this.width&&(z(this,{position:"absolute",top:"-999em"}),p.body.appendChild(this));N[B]={width:this.width,height:this.height};C.imgwidth=this.width;C.imgheight=this.height;C.element&&r();this.parentNode&&this.parentNode.removeChild(this);
	b.imgCount--;if(!b.imgCount&&a&&a.onload)a.onload()},src:B}),this.imgCount++));return C},symbols:{circle:function(a,h,d,c){return this.arc(a+d/2,h+c/2,d/2,c/2,{start:0,end:2*Math.PI,open:!1})},square:function(a,h,d,c){return["M",a,h,"L",a+d,h,a+d,h+c,a,h+c,"Z"]},triangle:function(a,h,d,c){return["M",a+d/2,h,"L",a+d,h+c,a,h+c,"Z"]},"triangle-down":function(a,h,d,c){return["M",a,h,"L",a+d,h,a+d/2,h+c,"Z"]},diamond:function(a,h,d,c){return["M",a+d/2,h,"L",a+d,h+c/2,a+d/2,h+c,a,h+c/2,"Z"]},arc:function(a,
	h,d,c,f){var G=f.start,b=f.r||d,C=f.r||c||d,y=f.end-.001;d=f.innerR;c=f.open;var g=Math.cos(G),A=Math.sin(G),l=Math.cos(y),y=Math.sin(y);f=f.end-G<Math.PI?0:1;b=["M",a+b*g,h+C*A,"A",b,C,0,f,1,a+b*l,h+C*y];q(d)&&b.push(c?"M":"L",a+d*l,h+d*y,"A",d,d,0,f,0,a+d*g,h+d*A);b.push(c?"":"Z");return b},callout:function(a,h,d,c,f){var G=Math.min(f&&f.r||0,d,c),b=G+6,y=f&&f.anchorX;f=f&&f.anchorY;var g;g=["M",a+G,h,"L",a+d-G,h,"C",a+d,h,a+d,h,a+d,h+G,"L",a+d,h+c-G,"C",a+d,h+c,a+d,h+c,a+d-G,h+c,"L",a+G,h+c,"C",
	a,h+c,a,h+c,a,h+c-G,"L",a,h+G,"C",a,h,a,h,a+G,h];y&&y>d?f>h+b&&f<h+c-b?g.splice(13,3,"L",a+d,f-6,a+d+6,f,a+d,f+6,a+d,h+c-G):g.splice(13,3,"L",a+d,c/2,y,f,a+d,c/2,a+d,h+c-G):y&&0>y?f>h+b&&f<h+c-b?g.splice(33,3,"L",a,f+6,a-6,f,a,f-6,a,h+G):g.splice(33,3,"L",a,c/2,y,f,a,c/2,a,h+G):f&&f>c&&y>a+b&&y<a+d-b?g.splice(23,3,"L",y+6,h+c,y,h+c+6,y-6,h+c,a+G,h+c):f&&0>f&&y>a+b&&y<a+d-b&&g.splice(3,3,"L",y-6,h,y,h-6,y+6,h,d-G,h);return g}},clipRect:function(h,d,c,f){var G=a.uniqueKey(),b=this.createElement("clipPath").attr({id:G}).add(this.defs);
	h=this.rect(h,d,c,f,0).add(b);h.id=G;h.clipPath=b;h.count=0;return h},text:function(a,h,d,c){var f=!Q&&this.forExport,G={};if(c&&(this.allowHTML||!this.forExport))return this.html(a,h,d);G.x=Math.round(h||0);d&&(G.y=Math.round(d));if(a||0===a)G.text=a;a=this.createElement("text").attr(G);f&&a.css({position:"absolute"});c||(a.xSetter=function(a,h,d){var c=d.getElementsByTagName("tspan"),f,G=d.getAttribute(h),b;for(b=0;b<c.length;b++)f=c[b],f.getAttribute(h)===G&&f.setAttribute(h,a);d.setAttribute(h,
	a)});return a},fontMetrics:function(a,h){a=a||h&&h.style&&h.style.fontSize||this.style&&this.style.fontSize;a=/px/.test(a)?J(a):/em/.test(a)?parseFloat(a)*(h?this.fontMetrics(null,h.parentNode).f:16):12;h=24>a?a+3:Math.round(1.2*a);return{h:h,b:Math.round(.8*h),f:a}},rotCorr:function(a,h,d){var c=a;h&&d&&(c=Math.max(c*Math.cos(h*e),4));return{x:-a/3*Math.sin(h*e),y:c}},label:function(a,d,c,f,G,b,g,A,l){var C=this,B=C.g("button"!==l&&"label"),r=B.text=C.text("",0,0,g).attr({zIndex:1}),x,u,J=0,e=3,
	p=0,F,L,Q,P,t,m={},n,N,z=/^url\((.*?)\)$/.test(f),M=z,v,S,R,O;l&&B.addClass("highcharts-"+l);M=z;v=function(){return(n||0)%2/2};S=function(){var a=r.element.style,h={};u=(void 0===F||void 0===L||t)&&q(r.textStr)&&r.getBBox();B.width=(F||u.width||0)+2*e+p;B.height=(L||u.height||0)+2*e;N=e+C.fontMetrics(a&&a.fontSize,r).b;M&&(x||(B.box=x=C.symbols[f]||z?C.symbol(f):C.rect(),x.addClass(("button"===l?"":"highcharts-label-box")+(l?" highcharts-"+l+"-box":"")),x.add(B),a=v(),h.x=a,h.y=(A?-N:0)+a),h.width=
	Math.round(B.width),h.height=Math.round(B.height),x.attr(k(h,m)),m={})};R=function(){var a=p+e,h;h=A?0:N;q(F)&&u&&("center"===t||"right"===t)&&(a+={center:.5,right:1}[t]*(F-u.width));if(a!==r.x||h!==r.y)r.attr("x",a),void 0!==h&&r.attr("y",h);r.x=a;r.y=h};O=function(a,h){x?x.attr(a,h):m[a]=h};B.onAdd=function(){r.add(B);B.attr({text:a||0===a?a:"",x:d,y:c});x&&q(G)&&B.attr({anchorX:G,anchorY:b})};B.widthSetter=function(a){F=a};B.heightSetter=function(a){L=a};B["text-alignSetter"]=function(a){t=a};
	B.paddingSetter=function(a){q(a)&&a!==e&&(e=B.padding=a,R())};B.paddingLeftSetter=function(a){q(a)&&a!==p&&(p=a,R())};B.alignSetter=function(a){a={left:0,center:.5,right:1}[a];a!==J&&(J=a,u&&B.attr({x:Q}))};B.textSetter=function(a){void 0!==a&&r.textSetter(a);S();R()};B["stroke-widthSetter"]=function(a,h){a&&(M=!0);n=this["stroke-width"]=a;O(h,a)};B.strokeSetter=B.fillSetter=B.rSetter=function(a,h){"fill"===h&&a&&(M=!0);O(h,a)};B.anchorXSetter=function(a,h){G=a;O(h,Math.round(a)-v()-Q)};B.anchorYSetter=
	function(a,h){b=a;O(h,a-P)};B.xSetter=function(a){B.x=a;J&&(a-=J*((F||u.width)+2*e));Q=Math.round(a);B.attr("translateX",Q)};B.ySetter=function(a){P=B.y=Math.round(a);B.attr("translateY",P)};var T=B.css;return k(B,{css:function(a){if(a){var h={};a=y(a);w(B.textProps,function(d){void 0!==a[d]&&(h[d]=a[d],delete a[d])});r.css(h)}return T.call(B,a)},getBBox:function(){return{width:u.width+2*e,height:u.height+2*e,x:u.x-e,y:u.y-e}},shadow:function(a){a&&(S(),x&&x.shadow(a));return B},destroy:function(){h(B.element,
	"mouseenter");h(B.element,"mouseleave");r&&(r=r.destroy());x&&(x=x.destroy());E.prototype.destroy.call(B);B=C=S=R=O=null}})}};a.Renderer=D})(K);(function(a){var E=a.attr,D=a.createElement,H=a.css,I=a.defined,v=a.each,n=a.extend,m=a.isFirefox,z=a.isMS,t=a.isWebKit,q=a.pInt,e=a.SVGRenderer,b=a.win,p=a.wrap;n(a.SVGElement.prototype,{htmlCss:function(a){var b=this.element;if(b=a&&"SPAN"===b.tagName&&a.width)delete a.width,this.textWidth=b,this.updateTransform();a&&"ellipsis"===a.textOverflow&&(a.whiteSpace=
	"nowrap",a.overflow="hidden");this.styles=n(this.styles,a);H(this.element,a);return this},htmlGetBBox:function(){var a=this.element;"text"===a.nodeName&&(a.style.position="absolute");return{x:a.offsetLeft,y:a.offsetTop,width:a.offsetWidth,height:a.offsetHeight}},htmlUpdateTransform:function(){if(this.added){var a=this.renderer,b=this.element,l=this.translateX||0,g=this.translateY||0,e=this.x||0,r=this.y||0,u=this.textAlign||"left",f={left:0,center:.5,right:1}[u],B=this.styles;H(b,{marginLeft:l,marginTop:g});
	this.shadows&&v(this.shadows,function(a){H(a,{marginLeft:l+1,marginTop:g+1})});this.inverted&&v(b.childNodes,function(d){a.invertChild(d,b)});if("SPAN"===b.tagName){var d=this.rotation,x=q(this.textWidth),c=B&&B.whiteSpace,y=[d,u,b.innerHTML,this.textWidth,this.textAlign].join();y!==this.cTT&&(B=a.fontMetrics(b.style.fontSize).b,I(d)&&this.setSpanRotation(d,f,B),H(b,{width:"",whiteSpace:c||"nowrap"}),b.offsetWidth>x&&/[ \-]/.test(b.textContent||b.innerText)&&H(b,{width:x+"px",display:"block",whiteSpace:c||
	"normal"}),this.getSpanCorrection(b.offsetWidth,B,f,d,u));H(b,{left:e+(this.xCorr||0)+"px",top:r+(this.yCorr||0)+"px"});t&&(B=b.offsetHeight);this.cTT=y}}else this.alignOnAdd=!0},setSpanRotation:function(a,k,l){var g={},e=z?"-ms-transform":t?"-webkit-transform":m?"MozTransform":b.opera?"-o-transform":"";g[e]=g.transform="rotate("+a+"deg)";g[e+(m?"Origin":"-origin")]=g.transformOrigin=100*k+"% "+l+"px";H(this.element,g)},getSpanCorrection:function(a,b,l){this.xCorr=-a*l;this.yCorr=-b}});n(e.prototype,
	{html:function(a,b,l){var g=this.createElement("span"),k=g.element,r=g.renderer,u=r.isSVG,f=function(a,d){v(["opacity","visibility"],function(f){p(a,f+"Setter",function(a,f,b,g){a.call(this,f,b,g);d[b]=f})})};g.textSetter=function(a){a!==k.innerHTML&&delete this.bBox;k.innerHTML=this.textStr=a;g.htmlUpdateTransform()};u&&f(g,g.element.style);g.xSetter=g.ySetter=g.alignSetter=g.rotationSetter=function(a,d){"align"===d&&(d="textAlign");g[d]=a;g.htmlUpdateTransform()};g.attr({text:a,x:Math.round(b),
	y:Math.round(l)}).css({fontFamily:this.style.fontFamily,fontSize:this.style.fontSize,position:"absolute"});k.style.whiteSpace="nowrap";g.css=g.htmlCss;u&&(g.add=function(a){var d,b=r.box.parentNode,c=[];if(this.parentGroup=a){if(d=a.div,!d){for(;a;)c.push(a),a=a.parentGroup;v(c.reverse(),function(a){var y,A=E(a.element,"class");A&&(A={className:A});d=a.div=a.div||D("div",A,{position:"absolute",left:(a.translateX||0)+"px",top:(a.translateY||0)+"px",display:a.display,opacity:a.opacity,pointerEvents:a.styles&&
	a.styles.pointerEvents},d||b);y=d.style;n(a,{on:function(){g.on.apply({element:c[0].div},arguments);return a},translateXSetter:function(d,h){y.left=d+"px";a[h]=d;a.doTransform=!0},translateYSetter:function(d,h){y.top=d+"px";a[h]=d;a.doTransform=!0}});f(a,y)})}}else d=b;d.appendChild(k);g.added=!0;g.alignOnAdd&&g.htmlUpdateTransform();return g});return g}})})(K);(function(a){var E,D,H=a.createElement,I=a.css,v=a.defined,n=a.deg2rad,m=a.discardElement,z=a.doc,t=a.each,q=a.erase,e=a.extend;E=a.extendClass;
	var b=a.isArray,p=a.isNumber,w=a.isObject,k=a.merge;D=a.noop;var l=a.pick,g=a.pInt,F=a.SVGElement,r=a.SVGRenderer,u=a.win;a.svg||(D={docMode8:z&&8===z.documentMode,init:function(a,b){var d=["\x3c",b,' filled\x3d"f" stroked\x3d"f"'],f=["position: ","absolute",";"],c="div"===b;("shape"===b||c)&&f.push("left:0;top:0;width:1px;height:1px;");f.push("visibility: ",c?"hidden":"visible");d.push(' style\x3d"',f.join(""),'"/\x3e');b&&(d=c||"span"===b||"img"===b?d.join(""):a.prepVML(d),this.element=H(d));this.renderer=
	a},add:function(a){var f=this.renderer,d=this.element,b=f.box,c=a&&a.inverted,b=a?a.element||a:b;a&&(this.parentGroup=a);c&&f.invertChild(d,b);b.appendChild(d);this.added=!0;this.alignOnAdd&&!this.deferUpdateTransform&&this.updateTransform();if(this.onAdd)this.onAdd();this.className&&this.attr("class",this.className);return this},updateTransform:F.prototype.htmlUpdateTransform,setSpanRotation:function(){var a=this.rotation,b=Math.cos(a*n),d=Math.sin(a*n);I(this.element,{filter:a?["progid:DXImageTransform.Microsoft.Matrix(M11\x3d",
	b,", M12\x3d",-d,", M21\x3d",d,", M22\x3d",b,", sizingMethod\x3d'auto expand')"].join(""):"none"})},getSpanCorrection:function(a,b,d,g,c){var f=g?Math.cos(g*n):1,B=g?Math.sin(g*n):0,A=l(this.elemHeight,this.element.offsetHeight),r;this.xCorr=0>f&&-a;this.yCorr=0>B&&-A;r=0>f*B;this.xCorr+=B*b*(r?1-d:d);this.yCorr-=f*b*(g?r?d:1-d:1);c&&"left"!==c&&(this.xCorr-=a*d*(0>f?-1:1),g&&(this.yCorr-=A*d*(0>B?-1:1)),I(this.element,{textAlign:c}))},pathToVML:function(a){for(var f=a.length,d=[];f--;)p(a[f])?d[f]=
	Math.round(10*a[f])-5:"Z"===a[f]?d[f]="x":(d[f]=a[f],!a.isArc||"wa"!==a[f]&&"at"!==a[f]||(d[f+5]===d[f+7]&&(d[f+7]+=a[f+7]>a[f+5]?1:-1),d[f+6]===d[f+8]&&(d[f+8]+=a[f+8]>a[f+6]?1:-1)));return d.join(" ")||"x"},clip:function(a){var f=this,d;a?(d=a.members,q(d,f),d.push(f),f.destroyClip=function(){q(d,f)},a=a.getCSS(f)):(f.destroyClip&&f.destroyClip(),a={clip:f.docMode8?"inherit":"rect(auto)"});return f.css(a)},css:F.prototype.htmlCss,safeRemoveChild:function(a){a.parentNode&&m(a)},destroy:function(){this.destroyClip&&
	this.destroyClip();return F.prototype.destroy.apply(this)},on:function(a,b){this.element["on"+a]=function(){var a=u.event;a.target=a.srcElement;b(a)};return this},cutOffPath:function(a,b){var d;a=a.split(/[ ,]/);d=a.length;if(9===d||11===d)a[d-4]=a[d-2]=g(a[d-2])-10*b;return a.join(" ")},shadow:function(a,b,d){var f=[],c,y=this.element,r=this.renderer,A,B=y.style,h,G=y.path,u,k,e,p;G&&"string"!==typeof G.value&&(G="x");k=G;if(a){e=l(a.width,3);p=(a.opacity||.15)/e;for(c=1;3>=c;c++)u=2*e+1-2*c,d&&
	(k=this.cutOffPath(G.value,u+.5)),h=['\x3cshape isShadow\x3d"true" strokeweight\x3d"',u,'" filled\x3d"false" path\x3d"',k,'" coordsize\x3d"10 10" style\x3d"',y.style.cssText,'" /\x3e'],A=H(r.prepVML(h),null,{left:g(B.left)+l(a.offsetX,1),top:g(B.top)+l(a.offsetY,1)}),d&&(A.cutOff=u+1),h=['\x3cstroke color\x3d"',a.color||"#000000",'" opacity\x3d"',p*c,'"/\x3e'],H(r.prepVML(h),null,null,A),b?b.element.appendChild(A):y.parentNode.insertBefore(A,y),f.push(A);this.shadows=f}return this},updateShadows:D,
	setAttr:function(a,b){this.docMode8?this.element[a]=b:this.element.setAttribute(a,b)},classSetter:function(a){(this.added?this.element:this).className=a},dashstyleSetter:function(a,b,d){(d.getElementsByTagName("stroke")[0]||H(this.renderer.prepVML(["\x3cstroke/\x3e"]),null,null,d))[b]=a||"solid";this[b]=a},dSetter:function(a,b,d){var f=this.shadows;a=a||[];this.d=a.join&&a.join(" ");d.path=a=this.pathToVML(a);if(f)for(d=f.length;d--;)f[d].path=f[d].cutOff?this.cutOffPath(a,f[d].cutOff):a;this.setAttr(b,
	a)},fillSetter:function(a,b,d){var f=d.nodeName;"SPAN"===f?d.style.color=a:"IMG"!==f&&(d.filled="none"!==a,this.setAttr("fillcolor",this.renderer.color(a,d,b,this)))},"fill-opacitySetter":function(a,b,d){H(this.renderer.prepVML(["\x3c",b.split("-")[0],' opacity\x3d"',a,'"/\x3e']),null,null,d)},opacitySetter:D,rotationSetter:function(a,b,d){d=d.style;this[b]=d[b]=a;d.left=-Math.round(Math.sin(a*n)+1)+"px";d.top=Math.round(Math.cos(a*n))+"px"},strokeSetter:function(a,b,d){this.setAttr("strokecolor",
	this.renderer.color(a,d,b,this))},"stroke-widthSetter":function(a,b,d){d.stroked=!!a;this[b]=a;p(a)&&(a+="px");this.setAttr("strokeweight",a)},titleSetter:function(a,b){this.setAttr(b,a)},visibilitySetter:function(a,b,d){"inherit"===a&&(a="visible");this.shadows&&t(this.shadows,function(d){d.style[b]=a});"DIV"===d.nodeName&&(a="hidden"===a?"-999em":0,this.docMode8||(d.style[b]=a?"visible":"hidden"),b="top");d.style[b]=a},xSetter:function(a,b,d){this[b]=a;"x"===b?b="left":"y"===b&&(b="top");this.updateClipping?
	(this[b]=a,this.updateClipping()):d.style[b]=a},zIndexSetter:function(a,b,d){d.style[b]=a}},D["stroke-opacitySetter"]=D["fill-opacitySetter"],a.VMLElement=D=E(F,D),D.prototype.ySetter=D.prototype.widthSetter=D.prototype.heightSetter=D.prototype.xSetter,D={Element:D,isIE8:-1<u.navigator.userAgent.indexOf("MSIE 8.0"),init:function(a,b,d){var f,c;this.alignedObjects=[];f=this.createElement("div").css({position:"relative"});c=f.element;a.appendChild(f.element);this.isVML=!0;this.box=c;this.boxWrapper=
	f;this.gradients={};this.cache={};this.cacheKeys=[];this.imgCount=0;this.setSize(b,d,!1);if(!z.namespaces.hcv){z.namespaces.add("hcv","urn:schemas-microsoft-com:vml");try{z.createStyleSheet().cssText="hcv\\:fill, hcv\\:path, hcv\\:shape, hcv\\:stroke{ behavior:url(#default#VML); display: inline-block; } "}catch(y){z.styleSheets[0].cssText+="hcv\\:fill, hcv\\:path, hcv\\:shape, hcv\\:stroke{ behavior:url(#default#VML); display: inline-block; } "}}},isHidden:function(){return!this.box.offsetWidth},
	clipRect:function(a,b,d,g){var c=this.createElement(),f=w(a);return e(c,{members:[],count:0,left:(f?a.x:a)+1,top:(f?a.y:b)+1,width:(f?a.width:d)-1,height:(f?a.height:g)-1,getCSS:function(a){var d=a.element,c=d.nodeName,h=a.inverted,b=this.top-("shape"===c?d.offsetTop:0),f=this.left,d=f+this.width,g=b+this.height,b={clip:"rect("+Math.round(h?f:b)+"px,"+Math.round(h?g:d)+"px,"+Math.round(h?d:g)+"px,"+Math.round(h?b:f)+"px)"};!h&&a.docMode8&&"DIV"===c&&e(b,{width:d+"px",height:g+"px"});return b},updateClipping:function(){t(c.members,
	function(a){a.element&&a.css(c.getCSS(a))})}})},color:function(b,g,d,l){var c=this,f,r=/^rgba/,A,u,h="none";b&&b.linearGradient?u="gradient":b&&b.radialGradient&&(u="pattern");if(u){var G,x,k=b.linearGradient||b.radialGradient,e,B,C,p,F,w="";b=b.stops;var q,m=[],n=function(){A=['\x3cfill colors\x3d"'+m.join(",")+'" opacity\x3d"',C,'" o:opacity2\x3d"',B,'" type\x3d"',u,'" ',w,'focus\x3d"100%" method\x3d"any" /\x3e'];H(c.prepVML(A),null,null,g)};e=b[0];q=b[b.length-1];0<e[0]&&b.unshift([0,e[1]]);1>
	q[0]&&b.push([1,q[1]]);t(b,function(h,d){r.test(h[1])?(f=a.color(h[1]),G=f.get("rgb"),x=f.get("a")):(G=h[1],x=1);m.push(100*h[0]+"% "+G);d?(C=x,p=G):(B=x,F=G)});if("fill"===d)if("gradient"===u)d=k.x1||k[0]||0,b=k.y1||k[1]||0,e=k.x2||k[2]||0,k=k.y2||k[3]||0,w='angle\x3d"'+(90-180*Math.atan((k-b)/(e-d))/Math.PI)+'"',n();else{var h=k.r,z=2*h,v=2*h,D=k.cx,E=k.cy,I=g.radialReference,K,h=function(){I&&(K=l.getBBox(),D+=(I[0]-K.x)/K.width-.5,E+=(I[1]-K.y)/K.height-.5,z*=I[2]/K.width,v*=I[2]/K.height);w=
	'src\x3d"'+a.getOptions().global.VMLRadialGradientURL+'" size\x3d"'+z+","+v+'" origin\x3d"0.5,0.5" position\x3d"'+D+","+E+'" color2\x3d"'+F+'" ';n()};l.added?h():l.onAdd=h;h=p}else h=G}else r.test(b)&&"IMG"!==g.tagName?(f=a.color(b),l[d+"-opacitySetter"](f.get("a"),d,g),h=f.get("rgb")):(h=g.getElementsByTagName(d),h.length&&(h[0].opacity=1,h[0].type="solid"),h=b);return h},prepVML:function(a){var b=this.isIE8;a=a.join("");b?(a=a.replace("/\x3e",' xmlns\x3d"urn:schemas-microsoft-com:vml" /\x3e'),a=
	-1===a.indexOf('style\x3d"')?a.replace("/\x3e",' style\x3d"display:inline-block;behavior:url(#default#VML);" /\x3e'):a.replace('style\x3d"','style\x3d"display:inline-block;behavior:url(#default#VML);')):a=a.replace("\x3c","\x3chcv:");return a},text:r.prototype.html,path:function(a){var f={coordsize:"10 10"};b(a)?f.d=a:w(a)&&e(f,a);return this.createElement("shape").attr(f)},circle:function(a,b,d){var f=this.symbol("circle");w(a)&&(d=a.r,b=a.y,a=a.x);f.isCircle=!0;f.r=d;return f.attr({x:a,y:b})},g:function(a){var b;
	a&&(b={className:"highcharts-"+a,"class":"highcharts-"+a});return this.createElement("div").attr(b)},image:function(a,b,d,g,c){var f=this.createElement("img").attr({src:a});1<arguments.length&&f.attr({x:b,y:d,width:g,height:c});return f},createElement:function(a){return"rect"===a?this.symbol(a):r.prototype.createElement.call(this,a)},invertChild:function(a,b){var d=this;b=b.style;var f="IMG"===a.tagName&&a.style;I(a,{flip:"x",left:g(b.width)-(f?g(f.top):1),top:g(b.height)-(f?g(f.left):1),rotation:-90});
	t(a.childNodes,function(b){d.invertChild(b,a)})},symbols:{arc:function(a,b,d,g,c){var f=c.start,l=c.end,A=c.r||d||g;d=c.innerR;g=Math.cos(f);var r=Math.sin(f),h=Math.cos(l),G=Math.sin(l);if(0===l-f)return["x"];f=["wa",a-A,b-A,a+A,b+A,a+A*g,b+A*r,a+A*h,b+A*G];c.open&&!d&&f.push("e","M",a,b);f.push("at",a-d,b-d,a+d,b+d,a+d*h,b+d*G,a+d*g,b+d*r,"x","e");f.isArc=!0;return f},circle:function(a,b,d,g,c){c&&v(c.r)&&(d=g=2*c.r);c&&c.isCircle&&(a-=d/2,b-=g/2);return["wa",a,b,a+d,b+g,a+d,b+g/2,a+d,b+g/2,"e"]},
	rect:function(a,b,d,g,c){return r.prototype.symbols[v(c)&&c.r?"callout":"square"].call(0,a,b,d,g,c)}}},a.VMLRenderer=E=function(){this.init.apply(this,arguments)},E.prototype=k(r.prototype,D),a.Renderer=E);r.prototype.measureSpanWidth=function(a,b){var d=z.createElement("span");a=z.createTextNode(a);d.appendChild(a);I(d,b);this.box.appendChild(d);b=d.offsetWidth;m(d);return b}})(K);(function(a){function E(){var t=a.defaultOptions.global,q=z.moment;if(t.timezone){if(q)return function(a){return-q.tz(a,
	t.timezone).utcOffset()};a.error(25)}return t.useUTC&&t.getTimezoneOffset}function D(){var t=a.defaultOptions.global,q,e=t.useUTC,b=e?"getUTC":"get",p=e?"setUTC":"set";a.Date=q=t.Date||z.Date;q.hcTimezoneOffset=e&&t.timezoneOffset;q.hcGetTimezoneOffset=E();q.hcMakeTime=function(a,b,l,g,p,r){var u;e?(u=q.UTC.apply(0,arguments),u+=v(u)):u=(new q(a,b,m(l,1),m(g,0),m(p,0),m(r,0))).getTime();return u};I("Minutes Hours Day Date Month FullYear".split(" "),function(a){q["hcGet"+a]=b+a});I("Milliseconds Seconds Minutes Hours Date Month FullYear".split(" "),
	function(a){q["hcSet"+a]=p+a})}var H=a.color,I=a.each,v=a.getTZOffset,n=a.merge,m=a.pick,z=a.win;a.defaultOptions={colors:"#7cb5ec #434348 #90ed7d #f7a35c #8085e9 #f15c80 #e4d354 #2b908f #f45b5b #91e8e1".split(" "),symbols:["circle","diamond","square","triangle","triangle-down"],lang:{loading:"Loading...",months:"January February March April May June July August September October November December".split(" "),shortMonths:"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "),weekdays:"Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),
	decimalPoint:".",numericSymbols:"kMGTPE".split(""),resetZoom:"Reset zoom",resetZoomTitle:"Reset zoom level 1:1",thousandsSep:" "},global:{useUTC:!0,VMLRadialGradientURL:"http://code.highcharts.com/5.0.7/gfx/vml-radial-gradient.png"},chart:{borderRadius:0,defaultSeriesType:"line",ignoreHiddenSeries:!0,spacing:[10,10,15,10],resetZoomButton:{theme:{zIndex:20},position:{align:"right",x:-10,y:10}},width:null,height:null,borderColor:"#335cad",backgroundColor:"#ffffff",plotBorderColor:"#cccccc"},title:{text:"Chart title",
	align:"center",margin:15,widthAdjust:-44},subtitle:{text:"",align:"center",widthAdjust:-44},plotOptions:{},labels:{style:{position:"absolute",color:"#333333"}},legend:{enabled:!0,align:"center",layout:"horizontal",labelFormatter:function(){return this.name},borderColor:"#999999",borderRadius:0,navigation:{activeColor:"#003399",inactiveColor:"#cccccc"},itemStyle:{color:"#333333",fontSize:"12px",fontWeight:"bold"},itemHoverStyle:{color:"#000000"},itemHiddenStyle:{color:"#cccccc"},shadow:!1,itemCheckboxStyle:{position:"absolute",
	width:"13px",height:"13px"},squareSymbol:!0,symbolPadding:5,verticalAlign:"bottom",x:0,y:0,title:{style:{fontWeight:"bold"}}},loading:{labelStyle:{fontWeight:"bold",position:"relative",top:"45%"},style:{position:"absolute",backgroundColor:"#ffffff",opacity:.5,textAlign:"center"}},tooltip:{enabled:!0,animation:a.svg,borderRadius:3,dateTimeLabelFormats:{millisecond:"%A, %b %e, %H:%M:%S.%L",second:"%A, %b %e, %H:%M:%S",minute:"%A, %b %e, %H:%M",hour:"%A, %b %e, %H:%M",day:"%A, %b %e, %Y",week:"Week from %A, %b %e, %Y",
	month:"%B %Y",year:"%Y"},footerFormat:"",padding:8,snap:a.isTouchDevice?25:10,backgroundColor:H("#f7f7f7").setOpacity(.85).get(),borderWidth:1,headerFormat:'\x3cspan style\x3d"font-size: 10px"\x3e{point.key}\x3c/span\x3e\x3cbr/\x3e',pointFormat:'\x3cspan style\x3d"color:{point.color}"\x3e\u25cf\x3c/span\x3e {series.name}: \x3cb\x3e{point.y}\x3c/b\x3e\x3cbr/\x3e',shadow:!0,style:{color:"#333333",cursor:"default",fontSize:"12px",pointerEvents:"none",whiteSpace:"nowrap"}},credits:{enabled:!0,href:"http://www.highcharts.com",
	position:{align:"right",x:-10,verticalAlign:"bottom",y:-5},style:{cursor:"pointer",color:"#999999",fontSize:"9px"},text:"Highcharts.com"}};a.setOptions=function(t){a.defaultOptions=n(!0,a.defaultOptions,t);D();return a.defaultOptions};a.getOptions=function(){return a.defaultOptions};a.defaultPlotOptions=a.defaultOptions.plotOptions;D()})(K);(function(a){var E=a.arrayMax,D=a.arrayMin,H=a.defined,I=a.destroyObjectProperties,v=a.each,n=a.erase,m=a.merge,z=a.pick;a.PlotLineOrBand=function(a,q){this.axis=
	a;q&&(this.options=q,this.id=q.id)};a.PlotLineOrBand.prototype={render:function(){var a=this,q=a.axis,e=q.horiz,b=a.options,p=b.label,w=a.label,k=b.to,l=b.from,g=b.value,F=H(l)&&H(k),r=H(g),u=a.svgElem,f=!u,B=[],d,x=b.color,c=z(b.zIndex,0),y=b.events,B={"class":"highcharts-plot-"+(F?"band ":"line ")+(b.className||"")},L={},A=q.chart.renderer,J=F?"bands":"lines",h=q.log2lin;q.isLog&&(l=h(l),k=h(k),g=h(g));r?(B={stroke:x,"stroke-width":b.width},b.dashStyle&&(B.dashstyle=b.dashStyle)):F&&(x&&(B.fill=
	x),b.borderWidth&&(B.stroke=b.borderColor,B["stroke-width"]=b.borderWidth));L.zIndex=c;J+="-"+c;(x=q[J])||(q[J]=x=A.g("plot-"+J).attr(L).add());f&&(a.svgElem=u=A.path().attr(B).add(x));if(r)B=q.getPlotLinePath(g,u.strokeWidth());else if(F)B=q.getPlotBandPath(l,k,b);else return;if(f&&B&&B.length){if(u.attr({d:B}),y)for(d in b=function(h){u.on(h,function(b){y[h].apply(a,[b])})},y)b(d)}else u&&(B?(u.show(),u.animate({d:B})):(u.hide(),w&&(a.label=w=w.destroy())));p&&H(p.text)&&B&&B.length&&0<q.width&&
	0<q.height&&!B.flat?(p=m({align:e&&F&&"center",x:e?!F&&4:10,verticalAlign:!e&&F&&"middle",y:e?F?16:10:F?6:-4,rotation:e&&!F&&90},p),this.renderLabel(p,B,F,c)):w&&w.hide();return a},renderLabel:function(a,q,e,b){var p=this.label,w=this.axis.chart.renderer;p||(p={align:a.textAlign||a.align,rotation:a.rotation,"class":"highcharts-plot-"+(e?"band":"line")+"-label "+(a.className||"")},p.zIndex=b,this.label=p=w.text(a.text,0,0,a.useHTML).attr(p).add(),p.css(a.style));b=[q[1],q[4],e?q[6]:q[1]];q=[q[2],q[5],
	e?q[7]:q[2]];e=D(b);w=D(q);p.align(a,!1,{x:e,y:w,width:E(b)-e,height:E(q)-w});p.show()},destroy:function(){n(this.axis.plotLinesAndBands,this);delete this.axis;I(this)}};a.AxisPlotLineOrBandExtension={getPlotBandPath:function(a,q){q=this.getPlotLinePath(q,null,null,!0);(a=this.getPlotLinePath(a,null,null,!0))&&q?(a.flat=a.toString()===q.toString(),a.push(q[4],q[5],q[1],q[2],"z")):a=null;return a},addPlotBand:function(a){return this.addPlotBandOrLine(a,"plotBands")},addPlotLine:function(a){return this.addPlotBandOrLine(a,
	"plotLines")},addPlotBandOrLine:function(m,q){var e=(new a.PlotLineOrBand(this,m)).render(),b=this.userOptions;e&&(q&&(b[q]=b[q]||[],b[q].push(m)),this.plotLinesAndBands.push(e));return e},removePlotBandOrLine:function(a){for(var q=this.plotLinesAndBands,e=this.options,b=this.userOptions,p=q.length;p--;)q[p].id===a&&q[p].destroy();v([e.plotLines||[],b.plotLines||[],e.plotBands||[],b.plotBands||[]],function(b){for(p=b.length;p--;)b[p].id===a&&n(b,b[p])})}}})(K);(function(a){var E=a.correctFloat,D=
	a.defined,H=a.destroyObjectProperties,I=a.isNumber,v=a.merge,n=a.pick,m=a.deg2rad;a.Tick=function(a,m,q,e){this.axis=a;this.pos=m;this.type=q||"";this.isNew=!0;q||e||this.addLabel()};a.Tick.prototype={addLabel:function(){var a=this.axis,m=a.options,q=a.chart,e=a.categories,b=a.names,p=this.pos,w=m.labels,k=a.tickPositions,l=p===k[0],g=p===k[k.length-1],b=e?n(e[p],b[p],p):p,e=this.label,k=k.info,F;a.isDatetimeAxis&&k&&(F=m.dateTimeLabelFormats[k.higherRanks[p]||k.unitName]);this.isFirst=l;this.isLast=
	g;m=a.labelFormatter.call({axis:a,chart:q,isFirst:l,isLast:g,dateTimeLabelFormat:F,value:a.isLog?E(a.lin2log(b)):b});D(e)?e&&e.attr({text:m}):(this.labelLength=(this.label=e=D(m)&&w.enabled?q.renderer.text(m,0,0,w.useHTML).css(v(w.style)).add(a.labelGroup):null)&&e.getBBox().width,this.rotation=0)},getLabelSize:function(){return this.label?this.label.getBBox()[this.axis.horiz?"height":"width"]:0},handleOverflow:function(a){var t=this.axis,q=a.x,e=t.chart.chartWidth,b=t.chart.spacing,p=n(t.labelLeft,
	Math.min(t.pos,b[3])),b=n(t.labelRight,Math.max(t.pos+t.len,e-b[1])),w=this.label,k=this.rotation,l={left:0,center:.5,right:1}[t.labelAlign],g=w.getBBox().width,F=t.getSlotWidth(),r=F,u=1,f,B={};if(k)0>k&&q-l*g<p?f=Math.round(q/Math.cos(k*m)-p):0<k&&q+l*g>b&&(f=Math.round((e-q)/Math.cos(k*m)));else if(e=q+(1-l)*g,q-l*g<p?r=a.x+r*(1-l)-p:e>b&&(r=b-a.x+r*l,u=-1),r=Math.min(F,r),r<F&&"center"===t.labelAlign&&(a.x+=u*(F-r-l*(F-Math.min(g,r)))),g>r||t.autoRotation&&(w.styles||{}).width)f=r;f&&(B.width=
	f,(t.options.labels.style||{}).textOverflow||(B.textOverflow="ellipsis"),w.css(B))},getPosition:function(a,m,q,e){var b=this.axis,p=b.chart,w=e&&p.oldChartHeight||p.chartHeight;return{x:a?b.translate(m+q,null,null,e)+b.transB:b.left+b.offset+(b.opposite?(e&&p.oldChartWidth||p.chartWidth)-b.right-b.left:0),y:a?w-b.bottom+b.offset-(b.opposite?b.height:0):w-b.translate(m+q,null,null,e)-b.transB}},getLabelPosition:function(a,n,q,e,b,p,w,k){var l=this.axis,g=l.transA,F=l.reversed,r=l.staggerLines,u=l.tickRotCorr||
	{x:0,y:0},f=b.y;D(f)||(f=0===l.side?q.rotation?-8:-q.getBBox().height:2===l.side?u.y+8:Math.cos(q.rotation*m)*(u.y-q.getBBox(!1,0).height/2));a=a+b.x+u.x-(p&&e?p*g*(F?-1:1):0);n=n+f-(p&&!e?p*g*(F?1:-1):0);r&&(q=w/(k||1)%r,l.opposite&&(q=r-q-1),n+=l.labelOffset/r*q);return{x:a,y:Math.round(n)}},getMarkPath:function(a,m,q,e,b,p){return p.crispLine(["M",a,m,"L",a+(b?0:-q),m+(b?q:0)],e)},render:function(a,m,q){var e=this.axis,b=e.options,p=e.chart.renderer,w=e.horiz,k=this.type,l=this.label,g=this.pos,
	F=b.labels,r=this.gridLine,u=k?k+"Tick":"tick",f=e.tickSize(u),B=this.mark,d=!B,x=F.step,c={},y=!0,L=e.tickmarkOffset,A=this.getPosition(w,g,L,m),J=A.x,A=A.y,h=w&&J===e.pos+e.len||!w&&A===e.pos?-1:1,G=k?k+"Grid":"grid",Q=b[G+"LineWidth"],P=b[G+"LineColor"],t=b[G+"LineDashStyle"],G=n(b[u+"Width"],!k&&e.isXAxis?1:0),u=b[u+"Color"];q=n(q,1);this.isActive=!0;r||(c.stroke=P,c["stroke-width"]=Q,t&&(c.dashstyle=t),k||(c.zIndex=1),m&&(c.opacity=0),this.gridLine=r=p.path().attr(c).addClass("highcharts-"+(k?
	k+"-":"")+"grid-line").add(e.gridGroup));if(!m&&r&&(g=e.getPlotLinePath(g+L,r.strokeWidth()*h,m,!0)))r[this.isNew?"attr":"animate"]({d:g,opacity:q});f&&(e.opposite&&(f[0]=-f[0]),d&&(this.mark=B=p.path().addClass("highcharts-"+(k?k+"-":"")+"tick").add(e.axisGroup),B.attr({stroke:u,"stroke-width":G})),B[d?"attr":"animate"]({d:this.getMarkPath(J,A,f[0],B.strokeWidth()*h,w,p),opacity:q}));l&&I(J)&&(l.xy=A=this.getLabelPosition(J,A,l,w,F,L,a,x),this.isFirst&&!this.isLast&&!n(b.showFirstLabel,1)||this.isLast&&
	!this.isFirst&&!n(b.showLastLabel,1)?y=!1:!w||e.isRadial||F.step||F.rotation||m||0===q||this.handleOverflow(A),x&&a%x&&(y=!1),y&&I(A.y)?(A.opacity=q,l[this.isNew?"attr":"animate"](A)):l.attr("y",-9999),this.isNew=!1)},destroy:function(){H(this,this.axis)}}})(K);(function(a){var E=a.addEvent,D=a.animObject,H=a.arrayMax,I=a.arrayMin,v=a.AxisPlotLineOrBandExtension,n=a.color,m=a.correctFloat,z=a.defaultOptions,t=a.defined,q=a.deg2rad,e=a.destroyObjectProperties,b=a.each,p=a.extend,w=a.fireEvent,k=a.format,
	l=a.getMagnitude,g=a.grep,F=a.inArray,r=a.isArray,u=a.isNumber,f=a.isString,B=a.merge,d=a.normalizeTickInterval,x=a.pick,c=a.PlotLineOrBand,y=a.removeEvent,L=a.splat,A=a.syncTimeout,J=a.Tick;a.Axis=function(){this.init.apply(this,arguments)};a.Axis.prototype={defaultOptions:{dateTimeLabelFormats:{millisecond:"%H:%M:%S.%L",second:"%H:%M:%S",minute:"%H:%M",hour:"%H:%M",day:"%e. %b",week:"%e. %b",month:"%b '%y",year:"%Y"},endOnTick:!1,labels:{enabled:!0,style:{color:"#666666",cursor:"default",fontSize:"11px"},
	x:0},minPadding:.01,maxPadding:.01,minorTickLength:2,minorTickPosition:"outside",startOfWeek:1,startOnTick:!1,tickLength:10,tickmarkPlacement:"between",tickPixelInterval:100,tickPosition:"outside",title:{align:"middle",style:{color:"#666666"}},type:"linear",minorGridLineColor:"#f2f2f2",minorGridLineWidth:1,minorTickColor:"#999999",lineColor:"#ccd6eb",lineWidth:1,gridLineColor:"#e6e6e6",tickColor:"#ccd6eb"},defaultYAxisOptions:{endOnTick:!0,tickPixelInterval:72,showLastLabel:!0,labels:{x:-8},maxPadding:.05,
	minPadding:.05,startOnTick:!0,title:{rotation:270,text:"Values"},stackLabels:{enabled:!1,formatter:function(){return a.numberFormat(this.total,-1)},style:{fontSize:"11px",fontWeight:"bold",color:"#000000",textOutline:"1px contrast"}},gridLineWidth:1,lineWidth:0},defaultLeftAxisOptions:{labels:{x:-15},title:{rotation:270}},defaultRightAxisOptions:{labels:{x:15},title:{rotation:90}},defaultBottomAxisOptions:{labels:{autoRotation:[-45],x:0},title:{rotation:0}},defaultTopAxisOptions:{labels:{autoRotation:[-45],
	x:0},title:{rotation:0}},init:function(a,b){var h=b.isX;this.chart=a;this.horiz=a.inverted?!h:h;this.isXAxis=h;this.coll=this.coll||(h?"xAxis":"yAxis");this.opposite=b.opposite;this.side=b.side||(this.horiz?this.opposite?0:2:this.opposite?1:3);this.setOptions(b);var d=this.options,c=d.type;this.labelFormatter=d.labels.formatter||this.defaultLabelFormatter;this.userOptions=b;this.minPixelPadding=0;this.reversed=d.reversed;this.visible=!1!==d.visible;this.zoomEnabled=!1!==d.zoomEnabled;this.hasNames=
	"category"===c||!0===d.categories;this.categories=d.categories||this.hasNames;this.names=this.names||[];this.isLog="logarithmic"===c;this.isDatetimeAxis="datetime"===c;this.isLinked=t(d.linkedTo);this.ticks={};this.labelEdge=[];this.minorTicks={};this.plotLinesAndBands=[];this.alternateBands={};this.len=0;this.minRange=this.userMinRange=d.minRange||d.maxZoom;this.range=d.range;this.offset=d.offset||0;this.stacks={};this.oldStacks={};this.stacksTouched=0;this.min=this.max=null;this.crosshair=x(d.crosshair,
	L(a.options.tooltip.crosshairs)[h?0:1],!1);var G;b=this.options.events;-1===F(this,a.axes)&&(h?a.axes.splice(a.xAxis.length,0,this):a.axes.push(this),a[this.coll].push(this));this.series=this.series||[];a.inverted&&h&&void 0===this.reversed&&(this.reversed=!0);this.removePlotLine=this.removePlotBand=this.removePlotBandOrLine;for(G in b)E(this,G,b[G]);this.isLog&&(this.val2lin=this.log2lin,this.lin2val=this.lin2log)},setOptions:function(a){this.options=B(this.defaultOptions,"yAxis"===this.coll&&this.defaultYAxisOptions,
	[this.defaultTopAxisOptions,this.defaultRightAxisOptions,this.defaultBottomAxisOptions,this.defaultLeftAxisOptions][this.side],B(z[this.coll],a))},defaultLabelFormatter:function(){var h=this.axis,b=this.value,d=h.categories,c=this.dateTimeLabelFormat,f=z.lang,g=f.numericSymbols,f=f.numericSymbolMagnitude||1E3,y=g&&g.length,l,A=h.options.labels.format,h=h.isLog?b:h.tickInterval;if(A)l=k(A,this);else if(d)l=b;else if(c)l=a.dateFormat(c,b);else if(y&&1E3<=h)for(;y--&&void 0===l;)d=Math.pow(f,y+1),h>=
	d&&0===10*b%d&&null!==g[y]&&0!==b&&(l=a.numberFormat(b/d,-1)+g[y]);void 0===l&&(l=1E4<=Math.abs(b)?a.numberFormat(b,-1):a.numberFormat(b,-1,void 0,""));return l},getSeriesExtremes:function(){var a=this,d=a.chart;a.hasVisibleSeries=!1;a.dataMin=a.dataMax=a.threshold=null;a.softThreshold=!a.isXAxis;a.buildStacks&&a.buildStacks();b(a.series,function(h){if(h.visible||!d.options.chart.ignoreHiddenSeries){var b=h.options,c=b.threshold,G;a.hasVisibleSeries=!0;a.isLog&&0>=c&&(c=null);if(a.isXAxis)b=h.xData,
	b.length&&(h=I(b),u(h)||h instanceof Date||(b=g(b,function(a){return u(a)}),h=I(b)),a.dataMin=Math.min(x(a.dataMin,b[0]),h),a.dataMax=Math.max(x(a.dataMax,b[0]),H(b)));else if(h.getExtremes(),G=h.dataMax,h=h.dataMin,t(h)&&t(G)&&(a.dataMin=Math.min(x(a.dataMin,h),h),a.dataMax=Math.max(x(a.dataMax,G),G)),t(c)&&(a.threshold=c),!b.softThreshold||a.isLog)a.softThreshold=!1}})},translate:function(a,b,d,c,f,g){var h=this.linkedParent||this,G=1,y=0,l=c?h.oldTransA:h.transA;c=c?h.oldMin:h.min;var A=h.minPixelPadding;
	f=(h.isOrdinal||h.isBroken||h.isLog&&f)&&h.lin2val;l||(l=h.transA);d&&(G*=-1,y=h.len);h.reversed&&(G*=-1,y-=G*(h.sector||h.len));b?(a=(a*G+y-A)/l+c,f&&(a=h.lin2val(a))):(f&&(a=h.val2lin(a)),a=G*(a-c)*l+y+G*A+(u(g)?l*g:0));return a},toPixels:function(a,b){return this.translate(a,!1,!this.horiz,null,!0)+(b?0:this.pos)},toValue:function(a,b){return this.translate(a-(b?0:this.pos),!0,!this.horiz,null,!0)},getPlotLinePath:function(a,b,d,c,f){var h=this.chart,G=this.left,g=this.top,y,l,A=d&&h.oldChartHeight||
	h.chartHeight,r=d&&h.oldChartWidth||h.chartWidth,k;y=this.transB;var e=function(a,h,b){if(a<h||a>b)c?a=Math.min(Math.max(h,a),b):k=!0;return a};f=x(f,this.translate(a,null,null,d));a=d=Math.round(f+y);y=l=Math.round(A-f-y);u(f)?this.horiz?(y=g,l=A-this.bottom,a=d=e(a,G,G+this.width)):(a=G,d=r-this.right,y=l=e(y,g,g+this.height)):k=!0;return k&&!c?null:h.renderer.crispLine(["M",a,y,"L",d,l],b||1)},getLinearTickPositions:function(a,b,d){var h,c=m(Math.floor(b/a)*a),f=m(Math.ceil(d/a)*a),G=[];if(b===
	d&&u(b))return[b];for(b=c;b<=f;){G.push(b);b=m(b+a);if(b===h)break;h=b}return G},getMinorTickPositions:function(){var a=this.options,b=this.tickPositions,d=this.minorTickInterval,c=[],f,g=this.pointRangePadding||0;f=this.min-g;var g=this.max+g,y=g-f;if(y&&y/d<this.len/3)if(this.isLog)for(g=b.length,f=1;f<g;f++)c=c.concat(this.getLogTickPositions(d,b[f-1],b[f],!0));else if(this.isDatetimeAxis&&"auto"===a.minorTickInterval)c=c.concat(this.getTimeTicks(this.normalizeTimeTickInterval(d),f,g,a.startOfWeek));
	else for(b=f+(b[0]-f)%d;b<=g&&b!==c[0];b+=d)c.push(b);0!==c.length&&this.trimTicks(c,a.startOnTick,a.endOnTick);return c},adjustForMinRange:function(){var a=this.options,d=this.min,c=this.max,f,g=this.dataMax-this.dataMin>=this.minRange,y,l,A,r,u,k;this.isXAxis&&void 0===this.minRange&&!this.isLog&&(t(a.min)||t(a.max)?this.minRange=null:(b(this.series,function(a){r=a.xData;for(l=u=a.xIncrement?1:r.length-1;0<l;l--)if(A=r[l]-r[l-1],void 0===y||A<y)y=A}),this.minRange=Math.min(5*y,this.dataMax-this.dataMin)));
	c-d<this.minRange&&(k=this.minRange,f=(k-c+d)/2,f=[d-f,x(a.min,d-f)],g&&(f[2]=this.isLog?this.log2lin(this.dataMin):this.dataMin),d=H(f),c=[d+k,x(a.max,d+k)],g&&(c[2]=this.isLog?this.log2lin(this.dataMax):this.dataMax),c=I(c),c-d<k&&(f[0]=c-k,f[1]=x(a.min,c-k),d=H(f)));this.min=d;this.max=c},getClosest:function(){var a;this.categories?a=1:b(this.series,function(h){var b=h.closestPointRange,d=h.visible||!h.chart.options.chart.ignoreHiddenSeries;!h.noSharedTooltip&&t(b)&&d&&(a=t(a)?Math.min(a,b):b)});
	return a},nameToX:function(a){var h=r(this.categories),b=h?this.categories:this.names,d=a.options.x,c;a.series.requireSorting=!1;t(d)||(d=!1===this.options.uniqueNames?a.series.autoIncrement():F(a.name,b));-1===d?h||(c=b.length):c=d;this.names[c]=a.name;return c},updateNames:function(){var a=this;0<this.names.length&&(this.names.length=0,this.minRange=void 0,b(this.series||[],function(h){h.xIncrement=null;if(!h.points||h.isDirtyData)h.processData(),h.generatePoints();b(h.points,function(b,d){var c;
	b.options&&(c=a.nameToX(b),c!==b.x&&(b.x=c,h.xData[d]=c))})}))},setAxisTranslation:function(a){var h=this,d=h.max-h.min,c=h.axisPointRange||0,g,y=0,l=0,A=h.linkedParent,r=!!h.categories,u=h.transA,k=h.isXAxis;if(k||r||c)g=h.getClosest(),A?(y=A.minPointOffset,l=A.pointRangePadding):b(h.series,function(a){var b=r?1:k?x(a.options.pointRange,g,0):h.axisPointRange||0;a=a.options.pointPlacement;c=Math.max(c,b);h.single||(y=Math.max(y,f(a)?0:b/2),l=Math.max(l,"on"===a?0:b))}),A=h.ordinalSlope&&g?h.ordinalSlope/
	g:1,h.minPointOffset=y*=A,h.pointRangePadding=l*=A,h.pointRange=Math.min(c,d),k&&(h.closestPointRange=g);a&&(h.oldTransA=u);h.translationSlope=h.transA=u=h.len/(d+l||1);h.transB=h.horiz?h.left:h.bottom;h.minPixelPadding=u*y},minFromRange:function(){return this.max-this.range},setTickInterval:function(h){var c=this,f=c.chart,g=c.options,y=c.isLog,A=c.log2lin,r=c.isDatetimeAxis,k=c.isXAxis,e=c.isLinked,J=g.maxPadding,p=g.minPadding,B=g.tickInterval,F=g.tickPixelInterval,L=c.categories,q=c.threshold,
	n=c.softThreshold,v,z,D,E;r||L||e||this.getTickAmount();D=x(c.userMin,g.min);E=x(c.userMax,g.max);e?(c.linkedParent=f[c.coll][g.linkedTo],f=c.linkedParent.getExtremes(),c.min=x(f.min,f.dataMin),c.max=x(f.max,f.dataMax),g.type!==c.linkedParent.options.type&&a.error(11,1)):(!n&&t(q)&&(c.dataMin>=q?(v=q,p=0):c.dataMax<=q&&(z=q,J=0)),c.min=x(D,v,c.dataMin),c.max=x(E,z,c.dataMax));y&&(!h&&0>=Math.min(c.min,x(c.dataMin,c.min))&&a.error(10,1),c.min=m(A(c.min),15),c.max=m(A(c.max),15));c.range&&t(c.max)&&
	(c.userMin=c.min=D=Math.max(c.min,c.minFromRange()),c.userMax=E=c.max,c.range=null);w(c,"foundExtremes");c.beforePadding&&c.beforePadding();c.adjustForMinRange();!(L||c.axisPointRange||c.usePercentage||e)&&t(c.min)&&t(c.max)&&(A=c.max-c.min)&&(!t(D)&&p&&(c.min-=A*p),!t(E)&&J&&(c.max+=A*J));u(g.floor)?c.min=Math.max(c.min,g.floor):u(g.softMin)&&(c.min=Math.min(c.min,g.softMin));u(g.ceiling)?c.max=Math.min(c.max,g.ceiling):u(g.softMax)&&(c.max=Math.max(c.max,g.softMax));n&&t(c.dataMin)&&(q=q||0,!t(D)&&
	c.min<q&&c.dataMin>=q?c.min=q:!t(E)&&c.max>q&&c.dataMax<=q&&(c.max=q));c.tickInterval=c.min===c.max||void 0===c.min||void 0===c.max?1:e&&!B&&F===c.linkedParent.options.tickPixelInterval?B=c.linkedParent.tickInterval:x(B,this.tickAmount?(c.max-c.min)/Math.max(this.tickAmount-1,1):void 0,L?1:(c.max-c.min)*F/Math.max(c.len,F));k&&!h&&b(c.series,function(a){a.processData(c.min!==c.oldMin||c.max!==c.oldMax)});c.setAxisTranslation(!0);c.beforeSetTickPositions&&c.beforeSetTickPositions();c.postProcessTickInterval&&
	(c.tickInterval=c.postProcessTickInterval(c.tickInterval));c.pointRange&&!B&&(c.tickInterval=Math.max(c.pointRange,c.tickInterval));h=x(g.minTickInterval,c.isDatetimeAxis&&c.closestPointRange);!B&&c.tickInterval<h&&(c.tickInterval=h);r||y||B||(c.tickInterval=d(c.tickInterval,null,l(c.tickInterval),x(g.allowDecimals,!(.5<c.tickInterval&&5>c.tickInterval&&1E3<c.max&&9999>c.max)),!!this.tickAmount));this.tickAmount||(c.tickInterval=c.unsquish());this.setTickPositions()},setTickPositions:function(){var a=
	this.options,c,b=a.tickPositions,d=a.tickPositioner,f=a.startOnTick,g=a.endOnTick,y;this.tickmarkOffset=this.categories&&"between"===a.tickmarkPlacement&&1===this.tickInterval?.5:0;this.minorTickInterval="auto"===a.minorTickInterval&&this.tickInterval?this.tickInterval/5:a.minorTickInterval;this.tickPositions=c=b&&b.slice();!c&&(c=this.isDatetimeAxis?this.getTimeTicks(this.normalizeTimeTickInterval(this.tickInterval,a.units),this.min,this.max,a.startOfWeek,this.ordinalPositions,this.closestPointRange,
	!0):this.isLog?this.getLogTickPositions(this.tickInterval,this.min,this.max):this.getLinearTickPositions(this.tickInterval,this.min,this.max),c.length>this.len&&(c=[c[0],c.pop()]),this.tickPositions=c,d&&(d=d.apply(this,[this.min,this.max])))&&(this.tickPositions=c=d);this.trimTicks(c,f,g);this.isLinked||(this.min===this.max&&t(this.min)&&!this.tickAmount&&(y=!0,this.min-=.5,this.max+=.5),this.single=y,b||d||this.adjustTickAmount())},trimTicks:function(a,c,b){var h=a[0],d=a[a.length-1],f=this.minPointOffset||
	0;if(!this.isLinked){if(c)this.min=h;else for(;this.min-f>a[0];)a.shift();if(b)this.max=d;else for(;this.max+f<a[a.length-1];)a.pop();0===a.length&&t(h)&&a.push((d+h)/2)}},alignToOthers:function(){var a={},c,d=this.options;!1===this.chart.options.chart.alignTicks||!1===d.alignTicks||this.isLog||b(this.chart[this.coll],function(h){var b=h.options,b=[h.horiz?b.left:b.top,b.width,b.height,b.pane].join();h.series.length&&(a[b]?c=!0:a[b]=1)});return c},getTickAmount:function(){var a=this.options,c=a.tickAmount,
	b=a.tickPixelInterval;!t(a.tickInterval)&&this.len<b&&!this.isRadial&&!this.isLog&&a.startOnTick&&a.endOnTick&&(c=2);!c&&this.alignToOthers()&&(c=Math.ceil(this.len/b)+1);4>c&&(this.finalTickAmt=c,c=5);this.tickAmount=c},adjustTickAmount:function(){var a=this.tickInterval,c=this.tickPositions,b=this.tickAmount,d=this.finalTickAmt,f=c&&c.length;if(f<b){for(;c.length<b;)c.push(m(c[c.length-1]+a));this.transA*=(f-1)/(b-1);this.max=c[c.length-1]}else f>b&&(this.tickInterval*=2,this.setTickPositions());
	if(t(d)){for(a=b=c.length;a--;)(3===d&&1===a%2||2>=d&&0<a&&a<b-1)&&c.splice(a,1);this.finalTickAmt=void 0}},setScale:function(){var a,c;this.oldMin=this.min;this.oldMax=this.max;this.oldAxisLength=this.len;this.setAxisSize();c=this.len!==this.oldAxisLength;b(this.series,function(h){if(h.isDirtyData||h.isDirty||h.xAxis.isDirty)a=!0});c||a||this.isLinked||this.forceRedraw||this.userMin!==this.oldUserMin||this.userMax!==this.oldUserMax||this.alignToOthers()?(this.resetStacks&&this.resetStacks(),this.forceRedraw=
	!1,this.getSeriesExtremes(),this.setTickInterval(),this.oldUserMin=this.userMin,this.oldUserMax=this.userMax,this.isDirty||(this.isDirty=c||this.min!==this.oldMin||this.max!==this.oldMax)):this.cleanStacks&&this.cleanStacks()},setExtremes:function(a,c,d,f,g){var h=this,y=h.chart;d=x(d,!0);b(h.series,function(a){delete a.kdTree});g=p(g,{min:a,max:c});w(h,"setExtremes",g,function(){h.userMin=a;h.userMax=c;h.eventArgs=g;d&&y.redraw(f)})},zoom:function(a,c){var h=this.dataMin,b=this.dataMax,d=this.options,
	f=Math.min(h,x(d.min,h)),d=Math.max(b,x(d.max,b));if(a!==this.min||c!==this.max)this.allowZoomOutside||(t(h)&&(a<f&&(a=f),a>d&&(a=d)),t(b)&&(c<f&&(c=f),c>d&&(c=d))),this.displayBtn=void 0!==a||void 0!==c,this.setExtremes(a,c,!1,void 0,{trigger:"zoom"});return!0},setAxisSize:function(){var a=this.chart,c=this.options,b=c.offsets||[0,0,0,0],d=this.horiz,f=x(c.width,a.plotWidth-b[3]+b[1]),g=x(c.height,a.plotHeight-b[0]+b[2]),y=x(c.top,a.plotTop+b[0]),c=x(c.left,a.plotLeft+b[3]),b=/%$/;b.test(g)&&(g=
	Math.round(parseFloat(g)/100*a.plotHeight));b.test(y)&&(y=Math.round(parseFloat(y)/100*a.plotHeight+a.plotTop));this.left=c;this.top=y;this.width=f;this.height=g;this.bottom=a.chartHeight-g-y;this.right=a.chartWidth-f-c;this.len=Math.max(d?f:g,0);this.pos=d?c:y},getExtremes:function(){var a=this.isLog,c=this.lin2log;return{min:a?m(c(this.min)):this.min,max:a?m(c(this.max)):this.max,dataMin:this.dataMin,dataMax:this.dataMax,userMin:this.userMin,userMax:this.userMax}},getThreshold:function(a){var c=
	this.isLog,h=this.lin2log,b=c?h(this.min):this.min,c=c?h(this.max):this.max;null===a?a=b:b>a?a=b:c<a&&(a=c);return this.translate(a,0,1,0,1)},autoLabelAlign:function(a){a=(x(a,0)-90*this.side+720)%360;return 15<a&&165>a?"right":195<a&&345>a?"left":"center"},tickSize:function(a){var c=this.options,h=c[a+"Length"],b=x(c[a+"Width"],"tick"===a&&this.isXAxis?1:0);if(b&&h)return"inside"===c[a+"Position"]&&(h=-h),[h,b]},labelMetrics:function(){return this.chart.renderer.fontMetrics(this.options.labels.style&&
	this.options.labels.style.fontSize,this.ticks[0]&&this.ticks[0].label)},unsquish:function(){var a=this.options.labels,c=this.horiz,d=this.tickInterval,f=d,g=this.len/(((this.categories?1:0)+this.max-this.min)/d),y,l=a.rotation,A=this.labelMetrics(),r,u=Number.MAX_VALUE,k,e=function(a){a/=g||1;a=1<a?Math.ceil(a):1;return a*d};c?(k=!a.staggerLines&&!a.step&&(t(l)?[l]:g<x(a.autoRotationLimit,80)&&a.autoRotation))&&b(k,function(a){var c;if(a===l||a&&-90<=a&&90>=a)r=e(Math.abs(A.h/Math.sin(q*a))),c=r+
	Math.abs(a/360),c<u&&(u=c,y=a,f=r)}):a.step||(f=e(A.h));this.autoRotation=k;this.labelRotation=x(y,l);return f},getSlotWidth:function(){var a=this.chart,c=this.horiz,b=this.options.labels,d=Math.max(this.tickPositions.length-(this.categories?0:1),1),f=a.margin[3];return c&&2>(b.step||0)&&!b.rotation&&(this.staggerLines||1)*this.len/d||!c&&(f&&f-a.spacing[3]||.33*a.chartWidth)},renderUnsquish:function(){var a=this.chart,c=a.renderer,d=this.tickPositions,g=this.ticks,y=this.options.labels,l=this.horiz,
	A=this.getSlotWidth(),r=Math.max(1,Math.round(A-2*(y.padding||5))),u={},k=this.labelMetrics(),e=y.style&&y.style.textOverflow,x,J=0,p,F;f(y.rotation)||(u.rotation=y.rotation||0);b(d,function(a){(a=g[a])&&a.labelLength>J&&(J=a.labelLength)});this.maxLabelLength=J;if(this.autoRotation)J>r&&J>k.h?u.rotation=this.labelRotation:this.labelRotation=0;else if(A&&(x={width:r+"px"},!e))for(x.textOverflow="clip",p=d.length;!l&&p--;)if(F=d[p],r=g[F].label)r.styles&&"ellipsis"===r.styles.textOverflow?r.css({textOverflow:"clip"}):
	g[F].labelLength>A&&r.css({width:A+"px"}),r.getBBox().height>this.len/d.length-(k.h-k.f)&&(r.specCss={textOverflow:"ellipsis"});u.rotation&&(x={width:(J>.5*a.chartHeight?.33*a.chartHeight:a.chartHeight)+"px"},e||(x.textOverflow="ellipsis"));if(this.labelAlign=y.align||this.autoLabelAlign(this.labelRotation))u.align=this.labelAlign;b(d,function(a){var c=(a=g[a])&&a.label;c&&(c.attr(u),x&&c.css(B(x,c.specCss)),delete c.specCss,a.rotation=u.rotation)});this.tickRotCorr=c.rotCorr(k.b,this.labelRotation||
	0,0!==this.side)},hasData:function(){return this.hasVisibleSeries||t(this.min)&&t(this.max)&&!!this.tickPositions},addTitle:function(a){var c=this.chart.renderer,b=this.horiz,h=this.opposite,d=this.options.title,f;this.axisTitle||((f=d.textAlign)||(f=(b?{low:"left",middle:"center",high:"right"}:{low:h?"right":"left",middle:"center",high:h?"left":"right"})[d.align]),this.axisTitle=c.text(d.text,0,0,d.useHTML).attr({zIndex:7,rotation:d.rotation||0,align:f}).addClass("highcharts-axis-title").css(d.style).add(this.axisGroup),
	this.axisTitle.isNew=!0);this.axisTitle[a?"show":"hide"](!0)},generateTick:function(a){var c=this.ticks;c[a]?c[a].addLabel():c[a]=new J(this,a)},getOffset:function(){var a=this,c=a.chart,d=c.renderer,f=a.options,g=a.tickPositions,y=a.ticks,l=a.horiz,A=a.side,r=c.inverted?[1,0,3,2][A]:A,u,k,e=0,J,p=0,B=f.title,F=f.labels,w=0,L=c.axisOffset,c=c.clipOffset,m=[-1,1,1,-1][A],q,n=f.className,v=a.axisParent,z=this.tickSize("tick");u=a.hasData();a.showAxis=k=u||x(f.showEmpty,!0);a.staggerLines=a.horiz&&F.staggerLines;
	a.axisGroup||(a.gridGroup=d.g("grid").attr({zIndex:f.gridZIndex||1}).addClass("highcharts-"+this.coll.toLowerCase()+"-grid "+(n||"")).add(v),a.axisGroup=d.g("axis").attr({zIndex:f.zIndex||2}).addClass("highcharts-"+this.coll.toLowerCase()+" "+(n||"")).add(v),a.labelGroup=d.g("axis-labels").attr({zIndex:F.zIndex||7}).addClass("highcharts-"+a.coll.toLowerCase()+"-labels "+(n||"")).add(v));if(u||a.isLinked)b(g,function(c,b){a.generateTick(c,b)}),a.renderUnsquish(),!1===F.reserveSpace||0!==A&&2!==A&&
	{1:"left",3:"right"}[A]!==a.labelAlign&&"center"!==a.labelAlign||b(g,function(a){w=Math.max(y[a].getLabelSize(),w)}),a.staggerLines&&(w*=a.staggerLines,a.labelOffset=w*(a.opposite?-1:1));else for(q in y)y[q].destroy(),delete y[q];B&&B.text&&!1!==B.enabled&&(a.addTitle(k),k&&(e=a.axisTitle.getBBox()[l?"height":"width"],J=B.offset,p=t(J)?0:x(B.margin,l?5:10)));a.renderLine();a.offset=m*x(f.offset,L[A]);a.tickRotCorr=a.tickRotCorr||{x:0,y:0};d=0===A?-a.labelMetrics().h:2===A?a.tickRotCorr.y:0;p=Math.abs(w)+
	p;w&&(p=p-d+m*(l?x(F.y,a.tickRotCorr.y+8*m):F.x));a.axisTitleMargin=x(J,p);L[A]=Math.max(L[A],a.axisTitleMargin+e+m*a.offset,p,u&&g.length&&z?z[0]:0);f=f.offset?0:2*Math.floor(a.axisLine.strokeWidth()/2);c[r]=Math.max(c[r],f)},getLinePath:function(a){var c=this.chart,b=this.opposite,d=this.offset,h=this.horiz,f=this.left+(b?this.width:0)+d,d=c.chartHeight-this.bottom-(b?this.height:0)+d;b&&(a*=-1);return c.renderer.crispLine(["M",h?this.left:f,h?d:this.top,"L",h?c.chartWidth-this.right:f,h?d:c.chartHeight-
	this.bottom],a)},renderLine:function(){this.axisLine||(this.axisLine=this.chart.renderer.path().addClass("highcharts-axis-line").add(this.axisGroup),this.axisLine.attr({stroke:this.options.lineColor,"stroke-width":this.options.lineWidth,zIndex:7}))},getTitlePosition:function(){var a=this.horiz,c=this.left,b=this.top,d=this.len,f=this.options.title,g=a?c:b,y=this.opposite,A=this.offset,l=f.x||0,r=f.y||0,u=this.chart.renderer.fontMetrics(f.style&&f.style.fontSize,this.axisTitle).f,d={low:g+(a?0:d),
	middle:g+d/2,high:g+(a?d:0)}[f.align],c=(a?b+this.height:c)+(a?1:-1)*(y?-1:1)*this.axisTitleMargin+(2===this.side?u:0);return{x:a?d+l:c+(y?this.width:0)+A+l,y:a?c+r-(y?this.height:0)+A:d+r}},renderMinorTick:function(a){var c=this.chart.hasRendered&&u(this.oldMin),b=this.minorTicks;b[a]||(b[a]=new J(this,a,"minor"));c&&b[a].isNew&&b[a].render(null,!0);b[a].render(null,!1,1)},renderTick:function(a,c){var b=this.isLinked,d=this.ticks,h=this.chart.hasRendered&&u(this.oldMin);if(!b||a>=this.min&&a<=this.max)d[a]||
	(d[a]=new J(this,a)),h&&d[a].isNew&&d[a].render(c,!0,.1),d[a].render(c)},render:function(){var a=this,d=a.chart,f=a.options,g=a.isLog,y=a.lin2log,l=a.isLinked,r=a.tickPositions,u=a.axisTitle,k=a.ticks,e=a.minorTicks,x=a.alternateBands,p=f.stackLabels,B=f.alternateGridColor,F=a.tickmarkOffset,w=a.axisLine,L=a.showAxis,m=D(d.renderer.globalAnimation),q,n;a.labelEdge.length=0;a.overlap=!1;b([k,e,x],function(a){for(var c in a)a[c].isActive=!1});if(a.hasData()||l)a.minorTickInterval&&!a.categories&&b(a.getMinorTickPositions(),
	function(c){a.renderMinorTick(c)}),r.length&&(b(r,function(c,b){a.renderTick(c,b)}),F&&(0===a.min||a.single)&&(k[-1]||(k[-1]=new J(a,-1,null,!0)),k[-1].render(-1))),B&&b(r,function(b,h){n=void 0!==r[h+1]?r[h+1]+F:a.max-F;0===h%2&&b<a.max&&n<=a.max+(d.polar?-F:F)&&(x[b]||(x[b]=new c(a)),q=b+F,x[b].options={from:g?y(q):q,to:g?y(n):n,color:B},x[b].render(),x[b].isActive=!0)}),a._addedPlotLB||(b((f.plotLines||[]).concat(f.plotBands||[]),function(c){a.addPlotBandOrLine(c)}),a._addedPlotLB=!0);b([k,e,x],
	function(a){var c,b,h=[],f=m.duration;for(c in a)a[c].isActive||(a[c].render(c,!1,0),a[c].isActive=!1,h.push(c));A(function(){for(b=h.length;b--;)a[h[b]]&&!a[h[b]].isActive&&(a[h[b]].destroy(),delete a[h[b]])},a!==x&&d.hasRendered&&f?f:0)});w&&(w[w.isPlaced?"animate":"attr"]({d:this.getLinePath(w.strokeWidth())}),w.isPlaced=!0,w[L?"show":"hide"](!0));u&&L&&(u[u.isNew?"attr":"animate"](a.getTitlePosition()),u.isNew=!1);p&&p.enabled&&a.renderStackTotals();a.isDirty=!1},redraw:function(){this.visible&&
	(this.render(),b(this.plotLinesAndBands,function(a){a.render()}));b(this.series,function(a){a.isDirty=!0})},keepProps:"extKey hcEvents names series userMax userMin".split(" "),destroy:function(a){var c=this,d=c.stacks,h,f=c.plotLinesAndBands,g;a||y(c);for(h in d)e(d[h]),d[h]=null;b([c.ticks,c.minorTicks,c.alternateBands],function(a){e(a)});if(f)for(a=f.length;a--;)f[a].destroy();b("stackTotalGroup axisLine axisTitle axisGroup gridGroup labelGroup cross".split(" "),function(a){c[a]&&(c[a]=c[a].destroy())});
	for(g in c)c.hasOwnProperty(g)&&-1===F(g,c.keepProps)&&delete c[g]},drawCrosshair:function(a,c){var b,d=this.crosshair,h=x(d.snap,!0),f,g=this.cross;a||(a=this.cross&&this.cross.e);this.crosshair&&!1!==(t(c)||!h)?(h?t(c)&&(f=this.isXAxis?c.plotX:this.len-c.plotY):f=a&&(this.horiz?a.chartX-this.pos:this.len-a.chartY+this.pos),t(f)&&(b=this.getPlotLinePath(c&&(this.isXAxis?c.x:x(c.stackY,c.y)),null,null,null,f)||null),t(b)?(c=this.categories&&!this.isRadial,g||(this.cross=g=this.chart.renderer.path().addClass("highcharts-crosshair highcharts-crosshair-"+
	(c?"category ":"thin ")+d.className).attr({zIndex:x(d.zIndex,2)}).add(),g.attr({stroke:d.color||(c?n("#ccd6eb").setOpacity(.25).get():"#cccccc"),"stroke-width":x(d.width,1)}),d.dashStyle&&g.attr({dashstyle:d.dashStyle})),g.show().attr({d:b}),c&&!d.width&&g.attr({"stroke-width":this.transA}),this.cross.e=a):this.hideCrosshair()):this.hideCrosshair()},hideCrosshair:function(){this.cross&&this.cross.hide()}};p(a.Axis.prototype,v)})(K);(function(a){var E=a.Axis,D=a.Date,H=a.dateFormat,I=a.defaultOptions,
	v=a.defined,n=a.each,m=a.extend,z=a.getMagnitude,t=a.getTZOffset,q=a.normalizeTickInterval,e=a.pick,b=a.timeUnits;E.prototype.getTimeTicks=function(a,w,k,l){var g=[],p={},r=I.global.useUTC,u,f=new D(w-t(w)),B=D.hcMakeTime,d=a.unitRange,x=a.count,c;if(v(w)){f[D.hcSetMilliseconds](d>=b.second?0:x*Math.floor(f.getMilliseconds()/x));if(d>=b.second)f[D.hcSetSeconds](d>=b.minute?0:x*Math.floor(f.getSeconds()/x));if(d>=b.minute)f[D.hcSetMinutes](d>=b.hour?0:x*Math.floor(f[D.hcGetMinutes]()/x));if(d>=b.hour)f[D.hcSetHours](d>=
	b.day?0:x*Math.floor(f[D.hcGetHours]()/x));if(d>=b.day)f[D.hcSetDate](d>=b.month?1:x*Math.floor(f[D.hcGetDate]()/x));d>=b.month&&(f[D.hcSetMonth](d>=b.year?0:x*Math.floor(f[D.hcGetMonth]()/x)),u=f[D.hcGetFullYear]());if(d>=b.year)f[D.hcSetFullYear](u-u%x);if(d===b.week)f[D.hcSetDate](f[D.hcGetDate]()-f[D.hcGetDay]()+e(l,1));u=f[D.hcGetFullYear]();l=f[D.hcGetMonth]();var y=f[D.hcGetDate](),L=f[D.hcGetHours]();if(D.hcTimezoneOffset||D.hcGetTimezoneOffset)c=(!r||!!D.hcGetTimezoneOffset)&&(k-w>4*b.month||
	t(w)!==t(k)),f=f.getTime(),f=new D(f+t(f));r=f.getTime();for(w=1;r<k;)g.push(r),r=d===b.year?B(u+w*x,0):d===b.month?B(u,l+w*x):!c||d!==b.day&&d!==b.week?c&&d===b.hour?B(u,l,y,L+w*x):r+d*x:B(u,l,y+w*x*(d===b.day?1:7)),w++;g.push(r);d<=b.hour&&1E4>g.length&&n(g,function(a){0===a%18E5&&"000000000"===H("%H%M%S%L",a)&&(p[a]="day")})}g.info=m(a,{higherRanks:p,totalRange:d*x});return g};E.prototype.normalizeTimeTickInterval=function(a,e){var k=e||[["millisecond",[1,2,5,10,20,25,50,100,200,500]],["second",
	[1,2,5,10,15,30]],["minute",[1,2,5,10,15,30]],["hour",[1,2,3,4,6,8,12]],["day",[1,2]],["week",[1,2]],["month",[1,2,3,4,6]],["year",null]];e=k[k.length-1];var l=b[e[0]],g=e[1],p;for(p=0;p<k.length&&!(e=k[p],l=b[e[0]],g=e[1],k[p+1]&&a<=(l*g[g.length-1]+b[k[p+1][0]])/2);p++);l===b.year&&a<5*l&&(g=[1,2,5]);a=q(a/l,g,"year"===e[0]?Math.max(z(a/l),1):1);return{unitRange:l,count:a,unitName:e[0]}}})(K);(function(a){var E=a.Axis,D=a.getMagnitude,H=a.map,I=a.normalizeTickInterval,v=a.pick;E.prototype.getLogTickPositions=
	function(a,m,z,t){var q=this.options,e=this.len,b=this.lin2log,p=this.log2lin,w=[];t||(this._minorAutoInterval=null);if(.5<=a)a=Math.round(a),w=this.getLinearTickPositions(a,m,z);else if(.08<=a)for(var e=Math.floor(m),k,l,g,F,r,q=.3<a?[1,2,4]:.15<a?[1,2,4,6,8]:[1,2,3,4,5,6,7,8,9];e<z+1&&!r;e++)for(l=q.length,k=0;k<l&&!r;k++)g=p(b(e)*q[k]),g>m&&(!t||F<=z)&&void 0!==F&&w.push(F),F>z&&(r=!0),F=g;else m=b(m),z=b(z),a=q[t?"minorTickInterval":"tickInterval"],a=v("auto"===a?null:a,this._minorAutoInterval,
	q.tickPixelInterval/(t?5:1)*(z-m)/((t?e/this.tickPositions.length:e)||1)),a=I(a,null,D(a)),w=H(this.getLinearTickPositions(a,m,z),p),t||(this._minorAutoInterval=a/5);t||(this.tickInterval=a);return w};E.prototype.log2lin=function(a){return Math.log(a)/Math.LN10};E.prototype.lin2log=function(a){return Math.pow(10,a)}})(K);(function(a){var E=a.dateFormat,D=a.each,H=a.extend,I=a.format,v=a.isNumber,n=a.map,m=a.merge,z=a.pick,t=a.splat,q=a.syncTimeout,e=a.timeUnits;a.Tooltip=function(){this.init.apply(this,
	arguments)};a.Tooltip.prototype={init:function(a,e){this.chart=a;this.options=e;this.crosshairs=[];this.now={x:0,y:0};this.isHidden=!0;this.split=e.split&&!a.inverted;this.shared=e.shared||this.split},cleanSplit:function(a){D(this.chart.series,function(b){var e=b&&b.tt;e&&(!e.isActive||a?b.tt=e.destroy():e.isActive=!1)})},getLabel:function(){var a=this.chart.renderer,e=this.options;this.label||(this.split?this.label=a.g("tooltip"):(this.label=a.label("",0,0,e.shape||"callout",null,null,e.useHTML,
	null,"tooltip").attr({padding:e.padding,r:e.borderRadius}),this.label.attr({fill:e.backgroundColor,"stroke-width":e.borderWidth}).css(e.style).shadow(e.shadow)),this.label.attr({zIndex:8}).add());return this.label},update:function(a){this.destroy();this.init(this.chart,m(!0,this.options,a))},destroy:function(){this.label&&(this.label=this.label.destroy());this.split&&this.tt&&(this.cleanSplit(this.chart,!0),this.tt=this.tt.destroy());clearTimeout(this.hideTimer);clearTimeout(this.tooltipTimeout)},
	move:function(a,e,w,k){var b=this,g=b.now,p=!1!==b.options.animation&&!b.isHidden&&(1<Math.abs(a-g.x)||1<Math.abs(e-g.y)),r=b.followPointer||1<b.len;H(g,{x:p?(2*g.x+a)/3:a,y:p?(g.y+e)/2:e,anchorX:r?void 0:p?(2*g.anchorX+w)/3:w,anchorY:r?void 0:p?(g.anchorY+k)/2:k});b.getLabel().attr(g);p&&(clearTimeout(this.tooltipTimeout),this.tooltipTimeout=setTimeout(function(){b&&b.move(a,e,w,k)},32))},hide:function(a){var b=this;clearTimeout(this.hideTimer);a=z(a,this.options.hideDelay,500);this.isHidden||(this.hideTimer=
	q(function(){b.getLabel()[a?"fadeOut":"hide"]();b.isHidden=!0},a))},getAnchor:function(a,e){var b,k=this.chart,l=k.inverted,g=k.plotTop,p=k.plotLeft,r=0,u=0,f,B;a=t(a);b=a[0].tooltipPos;this.followPointer&&e&&(void 0===e.chartX&&(e=k.pointer.normalize(e)),b=[e.chartX-k.plotLeft,e.chartY-g]);b||(D(a,function(a){f=a.series.yAxis;B=a.series.xAxis;r+=a.plotX+(!l&&B?B.left-p:0);u+=(a.plotLow?(a.plotLow+a.plotHigh)/2:a.plotY)+(!l&&f?f.top-g:0)}),r/=a.length,u/=a.length,b=[l?k.plotWidth-u:r,this.shared&&
	!l&&1<a.length&&e?e.chartY-g:l?k.plotHeight-r:u]);return n(b,Math.round)},getPosition:function(a,e,w){var b=this.chart,l=this.distance,g={},p=w.h||0,r,u=["y",b.chartHeight,e,w.plotY+b.plotTop,b.plotTop,b.plotTop+b.plotHeight],f=["x",b.chartWidth,a,w.plotX+b.plotLeft,b.plotLeft,b.plotLeft+b.plotWidth],B=!this.followPointer&&z(w.ttBelow,!b.inverted===!!w.negative),d=function(a,c,b,d,f,y){var h=b<d-l,A=d+l+b<c,r=d-l-b;d+=l;if(B&&A)g[a]=d;else if(!B&&h)g[a]=r;else if(h)g[a]=Math.min(y-b,0>r-p?r:r-p);
	else if(A)g[a]=Math.max(f,d+p+b>c?d:d+p);else return!1},x=function(a,c,b,d){var h;d<l||d>c-l?h=!1:g[a]=d<b/2?1:d>c-b/2?c-b-2:d-b/2;return h},c=function(a){var c=u;u=f;f=c;r=a},y=function(){!1!==d.apply(0,u)?!1!==x.apply(0,f)||r||(c(!0),y()):r?g.x=g.y=0:(c(!0),y())};(b.inverted||1<this.len)&&c();y();return g},defaultFormatter:function(a){var b=this.points||t(this),e;e=[a.tooltipFooterHeaderFormatter(b[0])];e=e.concat(a.bodyFormatter(b));e.push(a.tooltipFooterHeaderFormatter(b[0],!0));return e},refresh:function(a,
	e){var b=this.chart,k,l=this.options,g,p,r={},u=[];k=l.formatter||this.defaultFormatter;var r=b.hoverPoints,f=this.shared;clearTimeout(this.hideTimer);this.followPointer=t(a)[0].series.tooltipOptions.followPointer;p=this.getAnchor(a,e);e=p[0];g=p[1];!f||a.series&&a.series.noSharedTooltip?r=a.getLabelConfig():(b.hoverPoints=a,r&&D(r,function(a){a.setState()}),D(a,function(a){a.setState("hover");u.push(a.getLabelConfig())}),r={x:a[0].category,y:a[0].y},r.points=u,a=a[0]);this.len=u.length;r=k.call(r,
	this);f=a.series;this.distance=z(f.tooltipOptions.distance,16);!1===r?this.hide():(k=this.getLabel(),this.isHidden&&k.attr({opacity:1}).show(),this.split?this.renderSplit(r,b.hoverPoints):(k.attr({text:r&&r.join?r.join(""):r}),k.removeClass(/highcharts-color-[\d]+/g).addClass("highcharts-color-"+z(a.colorIndex,f.colorIndex)),k.attr({stroke:l.borderColor||a.color||f.color||"#666666"}),this.updatePosition({plotX:e,plotY:g,negative:a.negative,ttBelow:a.ttBelow,h:p[2]||0})),this.isHidden=!1)},renderSplit:function(b,
	e){var p=this,k=[],l=this.chart,g=l.renderer,F=!0,r=this.options,u,f=this.getLabel();D(b.slice(0,e.length+1),function(a,b){b=e[b-1]||{isHeader:!0,plotX:e[0].plotX};var d=b.series||p,c=d.tt,y=b.series||{},B="highcharts-color-"+z(b.colorIndex,y.colorIndex,"none");c||(d.tt=c=g.label(null,null,null,"callout").addClass("highcharts-tooltip-box "+B).attr({padding:r.padding,r:r.borderRadius,fill:r.backgroundColor,stroke:b.color||y.color||"#333333","stroke-width":r.borderWidth}).add(f));c.isActive=!0;c.attr({text:a});
	c.css(r.style);a=c.getBBox();y=a.width+c.strokeWidth();b.isHeader?(u=a.height,y=Math.max(0,Math.min(b.plotX+l.plotLeft-y/2,l.chartWidth-y))):y=b.plotX+l.plotLeft-z(r.distance,16)-y;0>y&&(F=!1);a=(b.series&&b.series.yAxis&&b.series.yAxis.pos)+(b.plotY||0);a-=l.plotTop;k.push({target:b.isHeader?l.plotHeight+u:a,rank:b.isHeader?1:0,size:d.tt.getBBox().height+1,point:b,x:y,tt:c})});this.cleanSplit();a.distribute(k,l.plotHeight+u);D(k,function(a){var b=a.point,f=b.series;a.tt.attr({visibility:void 0===
	a.pos?"hidden":"inherit",x:F||b.isHeader?a.x:b.plotX+l.plotLeft+z(r.distance,16),y:a.pos+l.plotTop,anchorX:b.isHeader?b.plotX+l.plotLeft:b.plotX+f.xAxis.pos,anchorY:b.isHeader?a.pos+l.plotTop-15:b.plotY+f.yAxis.pos})})},updatePosition:function(a){var b=this.chart,e=this.getLabel(),e=(this.options.positioner||this.getPosition).call(this,e.width,e.height,a);this.move(Math.round(e.x),Math.round(e.y||0),a.plotX+b.plotLeft,a.plotY+b.plotTop)},getDateFormat:function(a,p,w,k){var b=E("%m-%d %H:%M:%S.%L",
	p),g,F,r={millisecond:15,second:12,minute:9,hour:6,day:3},u="millisecond";for(F in e){if(a===e.week&&+E("%w",p)===w&&"00:00:00.000"===b.substr(6)){F="week";break}if(e[F]>a){F=u;break}if(r[F]&&b.substr(r[F])!=="01-01 00:00:00.000".substr(r[F]))break;"week"!==F&&(u=F)}F&&(g=k[F]);return g},getXDateFormat:function(a,e,w){e=e.dateTimeLabelFormats;var b=w&&w.closestPointRange;return(b?this.getDateFormat(b,a.x,w.options.startOfWeek,e):e.day)||e.year},tooltipFooterHeaderFormatter:function(a,e){var b=e?"footer":
	"header";e=a.series;var k=e.tooltipOptions,l=k.xDateFormat,g=e.xAxis,F=g&&"datetime"===g.options.type&&v(a.key),b=k[b+"Format"];F&&!l&&(l=this.getXDateFormat(a,k,g));F&&l&&(b=b.replace("{point.key}","{point.key:"+l+"}"));return I(b,{point:a,series:e})},bodyFormatter:function(a){return n(a,function(a){var b=a.series.tooltipOptions;return(b.pointFormatter||a.point.tooltipFormatter).call(a.point,b.pointFormat)})}}})(K);(function(a){var E=a.addEvent,D=a.attr,H=a.charts,I=a.color,v=a.css,n=a.defined,m=
	a.doc,z=a.each,t=a.extend,q=a.fireEvent,e=a.offset,b=a.pick,p=a.removeEvent,w=a.splat,k=a.Tooltip,l=a.win;a.Pointer=function(a,b){this.init(a,b)};a.Pointer.prototype={init:function(a,l){this.options=l;this.chart=a;this.runChartClick=l.chart.events&&!!l.chart.events.click;this.pinchDown=[];this.lastValidTouch={};k&&l.tooltip.enabled&&(a.tooltip=new k(a,l.tooltip),this.followTouchMove=b(l.tooltip.followTouchMove,!0));this.setDOMEvents()},zoomOption:function(a){var g=this.chart,l=g.options.chart,e=l.zoomType||
	"",g=g.inverted;/touch/.test(a.type)&&(e=b(l.pinchType,e));this.zoomX=a=/x/.test(e);this.zoomY=e=/y/.test(e);this.zoomHor=a&&!g||e&&g;this.zoomVert=e&&!g||a&&g;this.hasZoom=a||e},normalize:function(a,b){var g,u;a=a||l.event;a.target||(a.target=a.srcElement);u=a.touches?a.touches.length?a.touches.item(0):a.changedTouches[0]:a;b||(this.chartPosition=b=e(this.chart.container));void 0===u.pageX?(g=Math.max(a.x,a.clientX-b.left),b=a.y):(g=u.pageX-b.left,b=u.pageY-b.top);return t(a,{chartX:Math.round(g),
	chartY:Math.round(b)})},getCoordinates:function(a){var b={xAxis:[],yAxis:[]};z(this.chart.axes,function(g){b[g.isXAxis?"xAxis":"yAxis"].push({axis:g,value:g.toValue(a[g.horiz?"chartX":"chartY"])})});return b},runPointActions:function(g){var l=this.chart,r=l.series,e=l.tooltip,f=e?e.shared:!1,k=!0,d=l.hoverPoint,x=l.hoverSeries,c,y,p,A=[],J;if(!f&&!x)for(c=0;c<r.length;c++)if(r[c].directTouch||!r[c].options.stickyTracking)r=[];x&&(f?x.noSharedTooltip:x.directTouch)&&d?A=[d]:(f||!x||x.options.stickyTracking||
	(r=[x]),z(r,function(a){y=a.noSharedTooltip&&f;p=!f&&a.directTouch;a.visible&&!y&&!p&&b(a.options.enableMouseTracking,!0)&&(J=a.searchPoint(g,!y&&1===a.kdDimensions))&&J.series&&A.push(J)}),A.sort(function(a,c){var b=a.distX-c.distX,d=a.dist-c.dist,h=(c.series.group&&c.series.group.zIndex)-(a.series.group&&a.series.group.zIndex);return 0!==b&&f?b:0!==d?d:0!==h?h:a.series.index>c.series.index?-1:1}));if(f)for(c=A.length;c--;)(A[c].x!==A[0].x||A[c].series.noSharedTooltip)&&A.splice(c,1);if(A[0]&&(A[0]!==
	this.prevKDPoint||e&&e.isHidden)){if(f&&!A[0].series.noSharedTooltip){for(c=0;c<A.length;c++)A[c].onMouseOver(g,A[c]!==(x&&x.directTouch&&d||A[0]));A.length&&e&&e.refresh(A.sort(function(a,c){return a.series.index-c.series.index}),g)}else if(e&&e.refresh(A[0],g),!x||!x.directTouch)A[0].onMouseOver(g);this.prevKDPoint=A[0];k=!1}k&&(r=x&&x.tooltipOptions.followPointer,e&&r&&!e.isHidden&&(r=e.getAnchor([{}],g),e.updatePosition({plotX:r[0],plotY:r[1]})));this.unDocMouseMove||(this.unDocMouseMove=E(m,
	"mousemove",function(c){if(H[a.hoverChartIndex])H[a.hoverChartIndex].pointer.onDocumentMouseMove(c)}));z(f?A:[b(d,A[0])],function(a){z(l.axes,function(c){(!a||a.series&&a.series[c.coll]===c)&&c.drawCrosshair(g,a)})})},reset:function(a,b){var g=this.chart,l=g.hoverSeries,f=g.hoverPoint,e=g.hoverPoints,d=g.tooltip,k=d&&d.shared?e:f;a&&k&&z(w(k),function(c){c.series.isCartesian&&void 0===c.plotX&&(a=!1)});if(a)d&&k&&(d.refresh(k),f&&(f.setState(f.state,!0),z(g.axes,function(a){a.crosshair&&a.drawCrosshair(null,
	f)})));else{if(f)f.onMouseOut();e&&z(e,function(a){a.setState()});if(l)l.onMouseOut();d&&d.hide(b);this.unDocMouseMove&&(this.unDocMouseMove=this.unDocMouseMove());z(g.axes,function(a){a.hideCrosshair()});this.hoverX=this.prevKDPoint=g.hoverPoints=g.hoverPoint=null}},scaleGroups:function(a,b){var g=this.chart,l;z(g.series,function(f){l=a||f.getPlotBox();f.xAxis&&f.xAxis.zoomEnabled&&f.group&&(f.group.attr(l),f.markerGroup&&(f.markerGroup.attr(l),f.markerGroup.clip(b?g.clipRect:null)),f.dataLabelsGroup&&
	f.dataLabelsGroup.attr(l))});g.clipRect.attr(b||g.clipBox)},dragStart:function(a){var b=this.chart;b.mouseIsDown=a.type;b.cancelClick=!1;b.mouseDownX=this.mouseDownX=a.chartX;b.mouseDownY=this.mouseDownY=a.chartY},drag:function(a){var b=this.chart,g=b.options.chart,l=a.chartX,f=a.chartY,e=this.zoomHor,d=this.zoomVert,k=b.plotLeft,c=b.plotTop,y=b.plotWidth,p=b.plotHeight,A,J=this.selectionMarker,h=this.mouseDownX,q=this.mouseDownY,w=g.panKey&&a[g.panKey+"Key"];J&&J.touch||(l<k?l=k:l>k+y&&(l=k+y),f<
	c?f=c:f>c+p&&(f=c+p),this.hasDragged=Math.sqrt(Math.pow(h-l,2)+Math.pow(q-f,2)),10<this.hasDragged&&(A=b.isInsidePlot(h-k,q-c),b.hasCartesianSeries&&(this.zoomX||this.zoomY)&&A&&!w&&!J&&(this.selectionMarker=J=b.renderer.rect(k,c,e?1:y,d?1:p,0).attr({fill:g.selectionMarkerFill||I("#335cad").setOpacity(.25).get(),"class":"highcharts-selection-marker",zIndex:7}).add()),J&&e&&(l-=h,J.attr({width:Math.abs(l),x:(0<l?0:l)+h})),J&&d&&(l=f-q,J.attr({height:Math.abs(l),y:(0<l?0:l)+q})),A&&!J&&g.panning&&b.pan(a,
	g.panning)))},drop:function(a){var b=this,g=this.chart,l=this.hasPinched;if(this.selectionMarker){var f={originalEvent:a,xAxis:[],yAxis:[]},e=this.selectionMarker,d=e.attr?e.attr("x"):e.x,k=e.attr?e.attr("y"):e.y,c=e.attr?e.attr("width"):e.width,y=e.attr?e.attr("height"):e.height,p;if(this.hasDragged||l)z(g.axes,function(g){if(g.zoomEnabled&&n(g.min)&&(l||b[{xAxis:"zoomX",yAxis:"zoomY"}[g.coll]])){var e=g.horiz,h="touchend"===a.type?g.minPixelPadding:0,A=g.toValue((e?d:k)+h),e=g.toValue((e?d+c:k+
	y)-h);f[g.coll].push({axis:g,min:Math.min(A,e),max:Math.max(A,e)});p=!0}}),p&&q(g,"selection",f,function(a){g.zoom(t(a,l?{animation:!1}:null))});this.selectionMarker=this.selectionMarker.destroy();l&&this.scaleGroups()}g&&(v(g.container,{cursor:g._cursor}),g.cancelClick=10<this.hasDragged,g.mouseIsDown=this.hasDragged=this.hasPinched=!1,this.pinchDown=[])},onContainerMouseDown:function(a){a=this.normalize(a);this.zoomOption(a);a.preventDefault&&a.preventDefault();this.dragStart(a)},onDocumentMouseUp:function(b){H[a.hoverChartIndex]&&
	H[a.hoverChartIndex].pointer.drop(b)},onDocumentMouseMove:function(a){var b=this.chart,g=this.chartPosition;a=this.normalize(a,g);!g||this.inClass(a.target,"highcharts-tracker")||b.isInsidePlot(a.chartX-b.plotLeft,a.chartY-b.plotTop)||this.reset()},onContainerMouseLeave:function(b){var g=H[a.hoverChartIndex];g&&(b.relatedTarget||b.toElement)&&(g.pointer.reset(),g.pointer.chartPosition=null)},onContainerMouseMove:function(b){var g=this.chart;n(a.hoverChartIndex)&&H[a.hoverChartIndex]&&H[a.hoverChartIndex].mouseIsDown||
	(a.hoverChartIndex=g.index);b=this.normalize(b);b.returnValue=!1;"mousedown"===g.mouseIsDown&&this.drag(b);!this.inClass(b.target,"highcharts-tracker")&&!g.isInsidePlot(b.chartX-g.plotLeft,b.chartY-g.plotTop)||g.openMenu||this.runPointActions(b)},inClass:function(a,b){for(var g;a;){if(g=D(a,"class")){if(-1!==g.indexOf(b))return!0;if(-1!==g.indexOf("highcharts-container"))return!1}a=a.parentNode}},onTrackerMouseOut:function(a){var b=this.chart.hoverSeries;a=a.relatedTarget||a.toElement;if(!(!b||!a||
	b.options.stickyTracking||this.inClass(a,"highcharts-tooltip")||this.inClass(a,"highcharts-series-"+b.index)&&this.inClass(a,"highcharts-tracker")))b.onMouseOut()},onContainerClick:function(a){var b=this.chart,g=b.hoverPoint,l=b.plotLeft,f=b.plotTop;a=this.normalize(a);b.cancelClick||(g&&this.inClass(a.target,"highcharts-tracker")?(q(g.series,"click",t(a,{point:g})),b.hoverPoint&&g.firePointEvent("click",a)):(t(a,this.getCoordinates(a)),b.isInsidePlot(a.chartX-l,a.chartY-f)&&q(b,"click",a)))},setDOMEvents:function(){var b=
	this,l=b.chart.container;l.onmousedown=function(a){b.onContainerMouseDown(a)};l.onmousemove=function(a){b.onContainerMouseMove(a)};l.onclick=function(a){b.onContainerClick(a)};E(l,"mouseleave",b.onContainerMouseLeave);1===a.chartCount&&E(m,"mouseup",b.onDocumentMouseUp);a.hasTouch&&(l.ontouchstart=function(a){b.onContainerTouchStart(a)},l.ontouchmove=function(a){b.onContainerTouchMove(a)},1===a.chartCount&&E(m,"touchend",b.onDocumentTouchEnd))},destroy:function(){var b;p(this.chart.container,"mouseleave",
	this.onContainerMouseLeave);a.chartCount||(p(m,"mouseup",this.onDocumentMouseUp),p(m,"touchend",this.onDocumentTouchEnd));clearInterval(this.tooltipTimeout);for(b in this)this[b]=null}}})(K);(function(a){var E=a.charts,D=a.each,H=a.extend,I=a.map,v=a.noop,n=a.pick;H(a.Pointer.prototype,{pinchTranslate:function(a,n,t,q,e,b){this.zoomHor&&this.pinchTranslateDirection(!0,a,n,t,q,e,b);this.zoomVert&&this.pinchTranslateDirection(!1,a,n,t,q,e,b)},pinchTranslateDirection:function(a,n,t,q,e,b,p,w){var k=
	this.chart,l=a?"x":"y",g=a?"X":"Y",m="chart"+g,r=a?"width":"height",u=k["plot"+(a?"Left":"Top")],f,B,d=w||1,x=k.inverted,c=k.bounds[a?"h":"v"],y=1===n.length,L=n[0][m],A=t[0][m],J=!y&&n[1][m],h=!y&&t[1][m],G;t=function(){!y&&20<Math.abs(L-J)&&(d=w||Math.abs(A-h)/Math.abs(L-J));B=(u-A)/d+L;f=k["plot"+(a?"Width":"Height")]/d};t();n=B;n<c.min?(n=c.min,G=!0):n+f>c.max&&(n=c.max-f,G=!0);G?(A-=.8*(A-p[l][0]),y||(h-=.8*(h-p[l][1])),t()):p[l]=[A,h];x||(b[l]=B-u,b[r]=f);b=x?1/d:d;e[r]=f;e[l]=n;q[x?a?"scaleY":
	"scaleX":"scale"+g]=d;q["translate"+g]=b*u+(A-b*L)},pinch:function(a){var m=this,t=m.chart,q=m.pinchDown,e=a.touches,b=e.length,p=m.lastValidTouch,w=m.hasZoom,k=m.selectionMarker,l={},g=1===b&&(m.inClass(a.target,"highcharts-tracker")&&t.runTrackerClick||m.runChartClick),F={};1<b&&(m.initiated=!0);w&&m.initiated&&!g&&a.preventDefault();I(e,function(a){return m.normalize(a)});"touchstart"===a.type?(D(e,function(a,b){q[b]={chartX:a.chartX,chartY:a.chartY}}),p.x=[q[0].chartX,q[1]&&q[1].chartX],p.y=[q[0].chartY,
	q[1]&&q[1].chartY],D(t.axes,function(a){if(a.zoomEnabled){var b=t.bounds[a.horiz?"h":"v"],f=a.minPixelPadding,g=a.toPixels(n(a.options.min,a.dataMin)),d=a.toPixels(n(a.options.max,a.dataMax)),l=Math.max(g,d);b.min=Math.min(a.pos,Math.min(g,d)-f);b.max=Math.max(a.pos+a.len,l+f)}}),m.res=!0):m.followTouchMove&&1===b?this.runPointActions(m.normalize(a)):q.length&&(k||(m.selectionMarker=k=H({destroy:v,touch:!0},t.plotBox)),m.pinchTranslate(q,e,l,k,F,p),m.hasPinched=w,m.scaleGroups(l,F),m.res&&(m.res=
	!1,this.reset(!1,0)))},touch:function(m,v){var t=this.chart,q,e;if(t.index!==a.hoverChartIndex)this.onContainerMouseLeave({relatedTarget:!0});a.hoverChartIndex=t.index;1===m.touches.length?(m=this.normalize(m),(e=t.isInsidePlot(m.chartX-t.plotLeft,m.chartY-t.plotTop))&&!t.openMenu?(v&&this.runPointActions(m),"touchmove"===m.type&&(v=this.pinchDown,q=v[0]?4<=Math.sqrt(Math.pow(v[0].chartX-m.chartX,2)+Math.pow(v[0].chartY-m.chartY,2)):!1),n(q,!0)&&this.pinch(m)):v&&this.reset()):2===m.touches.length&&
	this.pinch(m)},onContainerTouchStart:function(a){this.zoomOption(a);this.touch(a,!0)},onContainerTouchMove:function(a){this.touch(a)},onDocumentTouchEnd:function(m){E[a.hoverChartIndex]&&E[a.hoverChartIndex].pointer.drop(m)}})})(K);(function(a){var E=a.addEvent,D=a.charts,H=a.css,I=a.doc,v=a.extend,n=a.noop,m=a.Pointer,z=a.removeEvent,t=a.win,q=a.wrap;if(t.PointerEvent||t.MSPointerEvent){var e={},b=!!t.PointerEvent,p=function(){var a,b=[];b.item=function(a){return this[a]};for(a in e)e.hasOwnProperty(a)&&
	b.push({pageX:e[a].pageX,pageY:e[a].pageY,target:e[a].target});return b},w=function(b,l,g,e){"touch"!==b.pointerType&&b.pointerType!==b.MSPOINTER_TYPE_TOUCH||!D[a.hoverChartIndex]||(e(b),e=D[a.hoverChartIndex].pointer,e[l]({type:g,target:b.currentTarget,preventDefault:n,touches:p()}))};v(m.prototype,{onContainerPointerDown:function(a){w(a,"onContainerTouchStart","touchstart",function(a){e[a.pointerId]={pageX:a.pageX,pageY:a.pageY,target:a.currentTarget}})},onContainerPointerMove:function(a){w(a,"onContainerTouchMove",
	"touchmove",function(a){e[a.pointerId]={pageX:a.pageX,pageY:a.pageY};e[a.pointerId].target||(e[a.pointerId].target=a.currentTarget)})},onDocumentPointerUp:function(a){w(a,"onDocumentTouchEnd","touchend",function(a){delete e[a.pointerId]})},batchMSEvents:function(a){a(this.chart.container,b?"pointerdown":"MSPointerDown",this.onContainerPointerDown);a(this.chart.container,b?"pointermove":"MSPointerMove",this.onContainerPointerMove);a(I,b?"pointerup":"MSPointerUp",this.onDocumentPointerUp)}});q(m.prototype,
	"init",function(a,b,g){a.call(this,b,g);this.hasZoom&&H(b.container,{"-ms-touch-action":"none","touch-action":"none"})});q(m.prototype,"setDOMEvents",function(a){a.apply(this);(this.hasZoom||this.followTouchMove)&&this.batchMSEvents(E)});q(m.prototype,"destroy",function(a){this.batchMSEvents(z);a.call(this)})}})(K);(function(a){var E,D=a.addEvent,H=a.css,I=a.discardElement,v=a.defined,n=a.each,m=a.extend,z=a.isFirefox,t=a.marginNames,q=a.merge,e=a.pick,b=a.setAnimation,p=a.stableSort,w=a.win,k=a.wrap;
	E=a.Legend=function(a,b){this.init(a,b)};E.prototype={init:function(a,b){this.chart=a;this.setOptions(b);b.enabled&&(this.render(),D(this.chart,"endResize",function(){this.legend.positionCheckboxes()}))},setOptions:function(a){var b=e(a.padding,8);this.options=a;this.itemStyle=a.itemStyle;this.itemHiddenStyle=q(this.itemStyle,a.itemHiddenStyle);this.itemMarginTop=a.itemMarginTop||0;this.initialItemX=this.padding=b;this.initialItemY=b-5;this.itemHeight=this.maxItemWidth=0;this.symbolWidth=e(a.symbolWidth,
	16);this.pages=[]},update:function(a,b){var g=this.chart;this.setOptions(q(!0,this.options,a));this.destroy();g.isDirtyLegend=g.isDirtyBox=!0;e(b,!0)&&g.redraw()},colorizeItem:function(a,b){a.legendGroup[b?"removeClass":"addClass"]("highcharts-legend-item-hidden");var g=this.options,e=a.legendItem,l=a.legendLine,f=a.legendSymbol,k=this.itemHiddenStyle.color,g=b?g.itemStyle.color:k,d=b?a.color||k:k,x=a.options&&a.options.marker,c={fill:d},y;e&&e.css({fill:g,color:g});l&&l.attr({stroke:d});if(f){if(x&&
	f.isMarker&&(c=a.pointAttribs(),!b))for(y in c)c[y]=k;f.attr(c)}},positionItem:function(a){var b=this.options,e=b.symbolPadding,b=!b.rtl,l=a._legendItemPos,k=l[0],l=l[1],f=a.checkbox;(a=a.legendGroup)&&a.element&&a.translate(b?k:this.legendWidth-k-2*e-4,l);f&&(f.x=k,f.y=l)},destroyItem:function(a){var b=a.checkbox;n(["legendItem","legendLine","legendSymbol","legendGroup"],function(b){a[b]&&(a[b]=a[b].destroy())});b&&I(a.checkbox)},destroy:function(){function a(a){this[a]&&(this[a]=this[a].destroy())}
	n(this.getAllItems(),function(b){n(["legendItem","legendGroup"],a,b)});n(["box","title","group"],a,this);this.display=null},positionCheckboxes:function(a){var b=this.group&&this.group.alignAttr,e,l=this.clipHeight||this.legendHeight,k=this.titleHeight;b&&(e=b.translateY,n(this.allItems,function(f){var g=f.checkbox,d;g&&(d=e+k+g.y+(a||0)+3,H(g,{left:b.translateX+f.checkboxOffset+g.x-20+"px",top:d+"px",display:d>e-6&&d<e+l-6?"":"none"}))}))},renderTitle:function(){var a=this.padding,b=this.options.title,
	e=0;b.text&&(this.title||(this.title=this.chart.renderer.label(b.text,a-3,a-4,null,null,null,null,null,"legend-title").attr({zIndex:1}).css(b.style).add(this.group)),a=this.title.getBBox(),e=a.height,this.offsetWidth=a.width,this.contentGroup.attr({translateY:e}));this.titleHeight=e},setText:function(b){var g=this.options;b.legendItem.attr({text:g.labelFormat?a.format(g.labelFormat,b):g.labelFormatter.call(b)})},renderItem:function(a){var b=this.chart,l=b.renderer,k=this.options,u="horizontal"===
	k.layout,f=this.symbolWidth,p=k.symbolPadding,d=this.itemStyle,x=this.itemHiddenStyle,c=this.padding,y=u?e(k.itemDistance,20):0,m=!k.rtl,A=k.width,J=k.itemMarginBottom||0,h=this.itemMarginTop,w=this.initialItemX,n=a.legendItem,t=!a.series,v=!t&&a.series.drawLegendSymbol?a.series:a,z=v.options,z=this.createCheckboxForItem&&z&&z.showCheckbox,C=k.useHTML;n||(a.legendGroup=l.g("legend-item").addClass("highcharts-"+v.type+"-series highcharts-color-"+a.colorIndex+(a.options.className?" "+a.options.className:
	"")+(t?" highcharts-series-"+a.index:"")).attr({zIndex:1}).add(this.scrollGroup),a.legendItem=n=l.text("",m?f+p:-p,this.baseline||0,C).css(q(a.visible?d:x)).attr({align:m?"left":"right",zIndex:2}).add(a.legendGroup),this.baseline||(d=d.fontSize,this.fontMetrics=l.fontMetrics(d,n),this.baseline=this.fontMetrics.f+3+h,n.attr("y",this.baseline)),this.symbolHeight=k.symbolHeight||this.fontMetrics.f,v.drawLegendSymbol(this,a),this.setItemEvents&&this.setItemEvents(a,n,C),z&&this.createCheckboxForItem(a));
	this.colorizeItem(a,a.visible);this.setText(a);l=n.getBBox();f=a.checkboxOffset=k.itemWidth||a.legendItemWidth||f+p+l.width+y+(z?20:0);this.itemHeight=p=Math.round(a.legendItemHeight||l.height);u&&this.itemX-w+f>(A||b.chartWidth-2*c-w-k.x)&&(this.itemX=w,this.itemY+=h+this.lastLineHeight+J,this.lastLineHeight=0);this.maxItemWidth=Math.max(this.maxItemWidth,f);this.lastItemY=h+this.itemY+J;this.lastLineHeight=Math.max(p,this.lastLineHeight);a._legendItemPos=[this.itemX,this.itemY];u?this.itemX+=f:
	(this.itemY+=h+p+J,this.lastLineHeight=p);this.offsetWidth=A||Math.max((u?this.itemX-w-y:f)+c,this.offsetWidth)},getAllItems:function(){var a=[];n(this.chart.series,function(b){var g=b&&b.options;b&&e(g.showInLegend,v(g.linkedTo)?!1:void 0,!0)&&(a=a.concat(b.legendItems||("point"===g.legendType?b.data:b)))});return a},adjustMargins:function(a,b){var g=this.chart,l=this.options,k=l.align.charAt(0)+l.verticalAlign.charAt(0)+l.layout.charAt(0);l.floating||n([/(lth|ct|rth)/,/(rtv|rm|rbv)/,/(rbh|cb|lbh)/,
	/(lbv|lm|ltv)/],function(f,r){f.test(k)&&!v(a[r])&&(g[t[r]]=Math.max(g[t[r]],g.legend[(r+1)%2?"legendHeight":"legendWidth"]+[1,-1,-1,1][r]*l[r%2?"x":"y"]+e(l.margin,12)+b[r]))})},render:function(){var a=this,b=a.chart,e=b.renderer,k=a.group,u,f,B,d,x=a.box,c=a.options,y=a.padding;a.itemX=a.initialItemX;a.itemY=a.initialItemY;a.offsetWidth=0;a.lastItemY=0;k||(a.group=k=e.g("legend").attr({zIndex:7}).add(),a.contentGroup=e.g().attr({zIndex:1}).add(k),a.scrollGroup=e.g().add(a.contentGroup));a.renderTitle();
	u=a.getAllItems();p(u,function(a,b){return(a.options&&a.options.legendIndex||0)-(b.options&&b.options.legendIndex||0)});c.reversed&&u.reverse();a.allItems=u;a.display=f=!!u.length;a.lastLineHeight=0;n(u,function(b){a.renderItem(b)});B=(c.width||a.offsetWidth)+y;d=a.lastItemY+a.lastLineHeight+a.titleHeight;d=a.handleOverflow(d);d+=y;x||(a.box=x=e.rect().addClass("highcharts-legend-box").attr({r:c.borderRadius}).add(k),x.isNew=!0);x.attr({stroke:c.borderColor,"stroke-width":c.borderWidth||0,fill:c.backgroundColor||
	"none"}).shadow(c.shadow);0<B&&0<d&&(x[x.isNew?"attr":"animate"](x.crisp({x:0,y:0,width:B,height:d},x.strokeWidth())),x.isNew=!1);x[f?"show":"hide"]();a.legendWidth=B;a.legendHeight=d;n(u,function(b){a.positionItem(b)});f&&k.align(m({width:B,height:d},c),!0,"spacingBox");b.isResizing||this.positionCheckboxes()},handleOverflow:function(a){var b=this,l=this.chart,k=l.renderer,u=this.options,f=u.y,l=l.spacingBox.height+("top"===u.verticalAlign?-f:f)-this.padding,f=u.maxHeight,p,d=this.clipRect,x=u.navigation,
	c=e(x.animation,!0),y=x.arrowSize||12,w=this.nav,A=this.pages,J=this.padding,h,m=this.allItems,q=function(a){a?d.attr({height:a}):d&&(b.clipRect=d.destroy(),b.contentGroup.clip());b.contentGroup.div&&(b.contentGroup.div.style.clip=a?"rect("+J+"px,9999px,"+(J+a)+"px,0)":"auto")};"horizontal"!==u.layout||"middle"===u.verticalAlign||u.floating||(l/=2);f&&(l=Math.min(l,f));A.length=0;a>l&&!1!==x.enabled?(this.clipHeight=p=Math.max(l-20-this.titleHeight-J,0),this.currentPage=e(this.currentPage,1),this.fullHeight=
	a,n(m,function(a,b){var c=a._legendItemPos[1];a=Math.round(a.legendItem.getBBox().height);var d=A.length;if(!d||c-A[d-1]>p&&(h||c)!==A[d-1])A.push(h||c),d++;b===m.length-1&&c+a-A[d-1]>p&&A.push(c);c!==h&&(h=c)}),d||(d=b.clipRect=k.clipRect(0,J,9999,0),b.contentGroup.clip(d)),q(p),w||(this.nav=w=k.g().attr({zIndex:1}).add(this.group),this.up=k.symbol("triangle",0,0,y,y).on("click",function(){b.scroll(-1,c)}).add(w),this.pager=k.text("",15,10).addClass("highcharts-legend-navigation").css(x.style).add(w),
	this.down=k.symbol("triangle-down",0,0,y,y).on("click",function(){b.scroll(1,c)}).add(w)),b.scroll(0),a=l):w&&(q(),w.hide(),this.scrollGroup.attr({translateY:1}),this.clipHeight=0);return a},scroll:function(a,g){var e=this.pages,k=e.length;a=this.currentPage+a;var l=this.clipHeight,f=this.options.navigation,p=this.pager,d=this.padding;a>k&&(a=k);0<a&&(void 0!==g&&b(g,this.chart),this.nav.attr({translateX:d,translateY:l+this.padding+7+this.titleHeight,visibility:"visible"}),this.up.attr({"class":1===
	a?"highcharts-legend-nav-inactive":"highcharts-legend-nav-active"}),p.attr({text:a+"/"+k}),this.down.attr({x:18+this.pager.getBBox().width,"class":a===k?"highcharts-legend-nav-inactive":"highcharts-legend-nav-active"}),this.up.attr({fill:1===a?f.inactiveColor:f.activeColor}).css({cursor:1===a?"default":"pointer"}),this.down.attr({fill:a===k?f.inactiveColor:f.activeColor}).css({cursor:a===k?"default":"pointer"}),g=-e[a-1]+this.initialItemY,this.scrollGroup.animate({translateY:g}),this.currentPage=
	a,this.positionCheckboxes(g))}};a.LegendSymbolMixin={drawRectangle:function(a,b){var g=a.symbolHeight,k=a.options.squareSymbol;b.legendSymbol=this.chart.renderer.rect(k?(a.symbolWidth-g)/2:0,a.baseline-g+1,k?g:a.symbolWidth,g,e(a.options.symbolRadius,g/2)).addClass("highcharts-point").attr({zIndex:3}).add(b.legendGroup)},drawLineMarker:function(a){var b=this.options,k=b.marker,l=a.symbolWidth,u=a.symbolHeight,f=u/2,p=this.chart.renderer,d=this.legendGroup;a=a.baseline-Math.round(.3*a.fontMetrics.b);
	var x;x={"stroke-width":b.lineWidth||0};b.dashStyle&&(x.dashstyle=b.dashStyle);this.legendLine=p.path(["M",0,a,"L",l,a]).addClass("highcharts-graph").attr(x).add(d);k&&!1!==k.enabled&&(b=Math.min(e(k.radius,f),f),0===this.symbol.indexOf("url")&&(k=q(k,{width:u,height:u}),b=0),this.legendSymbol=k=p.symbol(this.symbol,l/2-b,a-b,2*b,2*b,k).addClass("highcharts-point").add(d),k.isMarker=!0)}};(/Trident\/7\.0/.test(w.navigator.userAgent)||z)&&k(E.prototype,"positionItem",function(a,b){var e=this,g=function(){b._legendItemPos&&
	a.call(e,b)};g();setTimeout(g)})})(K);(function(a){var E=a.addEvent,D=a.animate,H=a.animObject,I=a.attr,v=a.doc,n=a.Axis,m=a.createElement,z=a.defaultOptions,t=a.discardElement,q=a.charts,e=a.css,b=a.defined,p=a.each,w=a.extend,k=a.find,l=a.fireEvent,g=a.getStyle,F=a.grep,r=a.isNumber,u=a.isObject,f=a.isString,B=a.Legend,d=a.marginNames,x=a.merge,c=a.Pointer,y=a.pick,L=a.pInt,A=a.removeEvent,J=a.seriesTypes,h=a.splat,G=a.svg,Q=a.syncTimeout,P=a.win,N=a.Renderer,S=a.Chart=function(){this.getArgs.apply(this,
	arguments)};a.chart=function(a,b,c){return new S(a,b,c)};S.prototype={callbacks:[],getArgs:function(){var a=[].slice.call(arguments);if(f(a[0])||a[0].nodeName)this.renderTo=a.shift();this.init(a[0],a[1])},init:function(b,c){var d,h=b.series;b.series=null;d=x(z,b);d.series=b.series=h;this.userOptions=b;this.respRules=[];b=d.chart;h=b.events;this.margin=[];this.spacing=[];this.bounds={h:{},v:{}};this.callback=c;this.isResizing=0;this.options=d;this.axes=[];this.series=[];this.hasCartesianSeries=b.showAxes;
	var f;this.index=q.length;q.push(this);a.chartCount++;if(h)for(f in h)E(this,f,h[f]);this.xAxis=[];this.yAxis=[];this.pointCount=this.colorCounter=this.symbolCounter=0;this.firstRender()},initSeries:function(b){var c=this.options.chart;(c=J[b.type||c.type||c.defaultSeriesType])||a.error(17,!0);c=new c;c.init(this,b);return c},orderSeries:function(a){var b=this.series;for(a=a||0;a<b.length;a++)b[a]&&(b[a].index=a,b[a].name=b[a].name||"Series "+(b[a].index+1))},isInsidePlot:function(a,b,c){var d=c?
	b:a;a=c?a:b;return 0<=d&&d<=this.plotWidth&&0<=a&&a<=this.plotHeight},redraw:function(b){var c=this.axes,d=this.series,h=this.pointer,f=this.legend,e=this.isDirtyLegend,y,g,A=this.hasCartesianSeries,k=this.isDirtyBox,u=d.length,r=u,x=this.renderer,J=x.isHidden(),C=[];this.setResponsive&&this.setResponsive(!1);a.setAnimation(b,this);J&&this.cloneRenderTo();for(this.layOutTitles();r--;)if(b=d[r],b.options.stacking&&(y=!0,b.isDirty)){g=!0;break}if(g)for(r=u;r--;)b=d[r],b.options.stacking&&(b.isDirty=
	!0);p(d,function(a){a.isDirty&&"point"===a.options.legendType&&(a.updateTotals&&a.updateTotals(),e=!0);a.isDirtyData&&l(a,"updatedData")});e&&f.options.enabled&&(f.render(),this.isDirtyLegend=!1);y&&this.getStacks();A&&p(c,function(a){a.updateNames();a.setScale()});this.getMargins();A&&(p(c,function(a){a.isDirty&&(k=!0)}),p(c,function(a){var b=a.min+","+a.max;a.extKey!==b&&(a.extKey=b,C.push(function(){l(a,"afterSetExtremes",w(a.eventArgs,a.getExtremes()));delete a.eventArgs}));(k||y)&&a.redraw()}));
	k&&this.drawChartBox();l(this,"predraw");p(d,function(a){(k||a.isDirty)&&a.visible&&a.redraw();a.isDirtyData=!1});h&&h.reset(!0);x.draw();l(this,"redraw");l(this,"render");J&&this.cloneRenderTo(!0);p(C,function(a){a.call()})},get:function(a){function b(b){return b.id===a||b.options&&b.options.id===a}var c,d=this.series,h;c=k(this.axes,b)||k(this.series,b);for(h=0;!c&&h<d.length;h++)c=k(d[h].points||[],b);return c},getAxes:function(){var a=this,b=this.options,c=b.xAxis=h(b.xAxis||{}),b=b.yAxis=h(b.yAxis||
	{});p(c,function(a,b){a.index=b;a.isX=!0});p(b,function(a,b){a.index=b});c=c.concat(b);p(c,function(b){new n(a,b)})},getSelectedPoints:function(){var a=[];p(this.series,function(b){a=a.concat(F(b.points||[],function(a){return a.selected}))});return a},getSelectedSeries:function(){return F(this.series,function(a){return a.selected})},setTitle:function(a,b,c){var d=this,h=d.options,f;f=h.title=x({style:{color:"#333333",fontSize:h.isStock?"16px":"18px"}},h.title,a);h=h.subtitle=x({style:{color:"#666666"}},
	h.subtitle,b);p([["title",a,f],["subtitle",b,h]],function(a,b){var c=a[0],h=d[c],f=a[1];a=a[2];h&&f&&(d[c]=h=h.destroy());a&&a.text&&!h&&(d[c]=d.renderer.text(a.text,0,0,a.useHTML).attr({align:a.align,"class":"highcharts-"+c,zIndex:a.zIndex||4}).add(),d[c].update=function(a){d.setTitle(!b&&a,b&&a)},d[c].css(a.style))});d.layOutTitles(c)},layOutTitles:function(a){var b=0,c,d=this.renderer,h=this.spacingBox;p(["title","subtitle"],function(a){var c=this[a],f=this.options[a],e;c&&(e=f.style.fontSize,
	e=d.fontMetrics(e,c).b,c.css({width:(f.width||h.width+f.widthAdjust)+"px"}).align(w({y:b+e+("title"===a?-3:2)},f),!1,"spacingBox"),f.floating||f.verticalAlign||(b=Math.ceil(b+c.getBBox().height)))},this);c=this.titleOffset!==b;this.titleOffset=b;!this.isDirtyBox&&c&&(this.isDirtyBox=c,this.hasRendered&&y(a,!0)&&this.isDirtyBox&&this.redraw())},getChartSize:function(){var a=this.options.chart,c=a.width,a=a.height,d=this.renderToClone||this.renderTo;b(c)||(this.containerWidth=g(d,"width"));b(a)||(this.containerHeight=
	g(d,"height"));this.chartWidth=Math.max(0,c||this.containerWidth||600);this.chartHeight=Math.max(0,a||this.containerHeight||400)},cloneRenderTo:function(a){var b=this.renderToClone,c=this.container;if(a){if(b){for(;b.childNodes.length;)this.renderTo.appendChild(b.firstChild);t(b);delete this.renderToClone}}else c&&c.parentNode===this.renderTo&&this.renderTo.removeChild(c),this.renderToClone=b=this.renderTo.cloneNode(0),e(b,{position:"absolute",top:"-9999px",display:"block"}),b.style.setProperty&&
	b.style.setProperty("display","block","important"),v.body.appendChild(b),c&&b.appendChild(c)},setClassName:function(a){this.container.className="highcharts-container "+(a||"")},getContainer:function(){var b,c=this.options,d=c.chart,h,e;b=this.renderTo;var y=a.uniqueKey(),g;b||(this.renderTo=b=d.renderTo);f(b)&&(this.renderTo=b=v.getElementById(b));b||a.error(13,!0);h=L(I(b,"data-highcharts-chart"));r(h)&&q[h]&&q[h].hasRendered&&q[h].destroy();I(b,"data-highcharts-chart",this.index);b.innerHTML="";
	d.skipClone||b.offsetWidth||this.cloneRenderTo();this.getChartSize();h=this.chartWidth;e=this.chartHeight;g=w({position:"relative",overflow:"hidden",width:h+"px",height:e+"px",textAlign:"left",lineHeight:"normal",zIndex:0,"-webkit-tap-highlight-color":"rgba(0,0,0,0)"},d.style);this.container=b=m("div",{id:y},g,this.renderToClone||b);this._cursor=b.style.cursor;this.renderer=new (a[d.renderer]||N)(b,h,e,null,d.forExport,c.exporting&&c.exporting.allowHTML);this.setClassName(d.className);this.renderer.setStyle(d.style);
	this.renderer.chartIndex=this.index},getMargins:function(a){var c=this.spacing,d=this.margin,h=this.titleOffset;this.resetMargins();h&&!b(d[0])&&(this.plotTop=Math.max(this.plotTop,h+this.options.title.margin+c[0]));this.legend.display&&this.legend.adjustMargins(d,c);this.extraMargin&&(this[this.extraMargin.type]=(this[this.extraMargin.type]||0)+this.extraMargin.value);this.extraTopMargin&&(this.plotTop+=this.extraTopMargin);a||this.getAxisMargins()},getAxisMargins:function(){var a=this,c=a.axisOffset=
	[0,0,0,0],h=a.margin;a.hasCartesianSeries&&p(a.axes,function(a){a.visible&&a.getOffset()});p(d,function(d,f){b(h[f])||(a[d]+=c[f])});a.setChartSize()},reflow:function(a){var c=this,d=c.options.chart,h=c.renderTo,f=b(d.width),e=d.width||g(h,"width"),d=d.height||g(h,"height"),h=a?a.target:P;if(!f&&!c.isPrinting&&e&&d&&(h===P||h===v)){if(e!==c.containerWidth||d!==c.containerHeight)clearTimeout(c.reflowTimeout),c.reflowTimeout=Q(function(){c.container&&c.setSize(void 0,void 0,!1)},a?100:0);c.containerWidth=
	e;c.containerHeight=d}},initReflow:function(){var a=this,b;b=E(P,"resize",function(b){a.reflow(b)});E(a,"destroy",b)},setSize:function(b,c,d){var h=this,f=h.renderer;h.isResizing+=1;a.setAnimation(d,h);h.oldChartHeight=h.chartHeight;h.oldChartWidth=h.chartWidth;void 0!==b&&(h.options.chart.width=b);void 0!==c&&(h.options.chart.height=c);h.getChartSize();b=f.globalAnimation;(b?D:e)(h.container,{width:h.chartWidth+"px",height:h.chartHeight+"px"},b);h.setChartSize(!0);f.setSize(h.chartWidth,h.chartHeight,
	d);p(h.axes,function(a){a.isDirty=!0;a.setScale()});h.isDirtyLegend=!0;h.isDirtyBox=!0;h.layOutTitles();h.getMargins();h.redraw(d);h.oldChartHeight=null;l(h,"resize");Q(function(){h&&l(h,"endResize",null,function(){--h.isResizing})},H(b).duration)},setChartSize:function(a){var b=this.inverted,c=this.renderer,d=this.chartWidth,h=this.chartHeight,f=this.options.chart,e=this.spacing,y=this.clipOffset,g,A,k,l;this.plotLeft=g=Math.round(this.plotLeft);this.plotTop=A=Math.round(this.plotTop);this.plotWidth=
	k=Math.max(0,Math.round(d-g-this.marginRight));this.plotHeight=l=Math.max(0,Math.round(h-A-this.marginBottom));this.plotSizeX=b?l:k;this.plotSizeY=b?k:l;this.plotBorderWidth=f.plotBorderWidth||0;this.spacingBox=c.spacingBox={x:e[3],y:e[0],width:d-e[3]-e[1],height:h-e[0]-e[2]};this.plotBox=c.plotBox={x:g,y:A,width:k,height:l};d=2*Math.floor(this.plotBorderWidth/2);b=Math.ceil(Math.max(d,y[3])/2);c=Math.ceil(Math.max(d,y[0])/2);this.clipBox={x:b,y:c,width:Math.floor(this.plotSizeX-Math.max(d,y[1])/
	2-b),height:Math.max(0,Math.floor(this.plotSizeY-Math.max(d,y[2])/2-c))};a||p(this.axes,function(a){a.setAxisSize();a.setAxisTranslation()})},resetMargins:function(){var a=this,b=a.options.chart;p(["margin","spacing"],function(c){var d=b[c],h=u(d)?d:[d,d,d,d];p(["Top","Right","Bottom","Left"],function(d,f){a[c][f]=y(b[c+d],h[f])})});p(d,function(b,c){a[b]=y(a.margin[c],a.spacing[c])});a.axisOffset=[0,0,0,0];a.clipOffset=[0,0,0,0]},drawChartBox:function(){var a=this.options.chart,b=this.renderer,c=
	this.chartWidth,d=this.chartHeight,h=this.chartBackground,f=this.plotBackground,e=this.plotBorder,y,g=this.plotBGImage,A=a.backgroundColor,k=a.plotBackgroundColor,l=a.plotBackgroundImage,u,r=this.plotLeft,x=this.plotTop,J=this.plotWidth,p=this.plotHeight,w=this.plotBox,m=this.clipRect,q=this.clipBox,B="animate";h||(this.chartBackground=h=b.rect().addClass("highcharts-background").add(),B="attr");y=a.borderWidth||0;u=y+(a.shadow?8:0);A={fill:A||"none"};if(y||h["stroke-width"])A.stroke=a.borderColor,
	A["stroke-width"]=y;h.attr(A).shadow(a.shadow);h[B]({x:u/2,y:u/2,width:c-u-y%2,height:d-u-y%2,r:a.borderRadius});B="animate";f||(B="attr",this.plotBackground=f=b.rect().addClass("highcharts-plot-background").add());f[B](w);f.attr({fill:k||"none"}).shadow(a.plotShadow);l&&(g?g.animate(w):this.plotBGImage=b.image(l,r,x,J,p).add());m?m.animate({width:q.width,height:q.height}):this.clipRect=b.clipRect(q);B="animate";e||(B="attr",this.plotBorder=e=b.rect().addClass("highcharts-plot-border").attr({zIndex:1}).add());
	e.attr({stroke:a.plotBorderColor,"stroke-width":a.plotBorderWidth||0,fill:"none"});e[B](e.crisp({x:r,y:x,width:J,height:p},-e.strokeWidth()));this.isDirtyBox=!1},propFromSeries:function(){var a=this,b=a.options.chart,c,d=a.options.series,h,f;p(["inverted","angular","polar"],function(e){c=J[b.type||b.defaultSeriesType];f=b[e]||c&&c.prototype[e];for(h=d&&d.length;!f&&h--;)(c=J[d[h].type])&&c.prototype[e]&&(f=!0);a[e]=f})},linkSeries:function(){var a=this,b=a.series;p(b,function(a){a.linkedSeries.length=
	0});p(b,function(b){var c=b.options.linkedTo;f(c)&&(c=":previous"===c?a.series[b.index-1]:a.get(c))&&c.linkedParent!==b&&(c.linkedSeries.push(b),b.linkedParent=c,b.visible=y(b.options.visible,c.options.visible,b.visible))})},renderSeries:function(){p(this.series,function(a){a.translate();a.render()})},renderLabels:function(){var a=this,b=a.options.labels;b.items&&p(b.items,function(c){var d=w(b.style,c.style),h=L(d.left)+a.plotLeft,f=L(d.top)+a.plotTop+12;delete d.left;delete d.top;a.renderer.text(c.html,
	h,f).attr({zIndex:2}).css(d).add()})},render:function(){var a=this.axes,b=this.renderer,c=this.options,d,h,f;this.setTitle();this.legend=new B(this,c.legend);this.getStacks&&this.getStacks();this.getMargins(!0);this.setChartSize();c=this.plotWidth;d=this.plotHeight-=21;p(a,function(a){a.setScale()});this.getAxisMargins();h=1.1<c/this.plotWidth;f=1.05<d/this.plotHeight;if(h||f)p(a,function(a){(a.horiz&&h||!a.horiz&&f)&&a.setTickInterval(!0)}),this.getMargins();this.drawChartBox();this.hasCartesianSeries&&
	p(a,function(a){a.visible&&a.render()});this.seriesGroup||(this.seriesGroup=b.g("series-group").attr({zIndex:3}).add());this.renderSeries();this.renderLabels();this.addCredits();this.setResponsive&&this.setResponsive();this.hasRendered=!0},addCredits:function(a){var b=this;a=x(!0,this.options.credits,a);a.enabled&&!this.credits&&(this.credits=this.renderer.text(a.text+(this.mapCredits||""),0,0).addClass("highcharts-credits").on("click",function(){a.href&&(P.location.href=a.href)}).attr({align:a.position.align,
	zIndex:8}).css(a.style).add().align(a.position),this.credits.update=function(a){b.credits=b.credits.destroy();b.addCredits(a)})},destroy:function(){var b=this,c=b.axes,d=b.series,h=b.container,f,e=h&&h.parentNode;l(b,"destroy");q[b.index]=void 0;a.chartCount--;b.renderTo.removeAttribute("data-highcharts-chart");A(b);for(f=c.length;f--;)c[f]=c[f].destroy();this.scroller&&this.scroller.destroy&&this.scroller.destroy();for(f=d.length;f--;)d[f]=d[f].destroy();p("title subtitle chartBackground plotBackground plotBGImage plotBorder seriesGroup clipRect credits pointer rangeSelector legend resetZoomButton tooltip renderer".split(" "),
	function(a){var c=b[a];c&&c.destroy&&(b[a]=c.destroy())});h&&(h.innerHTML="",A(h),e&&t(h));for(f in b)delete b[f]},isReadyToRender:function(){var a=this;return G||P!=P.top||"complete"===v.readyState?!0:(v.attachEvent("onreadystatechange",function(){v.detachEvent("onreadystatechange",a.firstRender);"complete"===v.readyState&&a.firstRender()}),!1)},firstRender:function(){var a=this,b=a.options;if(a.isReadyToRender()){a.getContainer();l(a,"init");a.resetMargins();a.setChartSize();a.propFromSeries();
	a.getAxes();p(b.series||[],function(b){a.initSeries(b)});a.linkSeries();l(a,"beforeRender");c&&(a.pointer=new c(a,b));a.render();if(!a.renderer.imgCount&&a.onload)a.onload();a.cloneRenderTo(!0)}},onload:function(){p([this.callback].concat(this.callbacks),function(a){a&&void 0!==this.index&&a.apply(this,[this])},this);l(this,"load");l(this,"render");b(this.index)&&!1!==this.options.chart.reflow&&this.initReflow();this.onload=null}}})(K);(function(a){var E,D=a.each,H=a.extend,I=a.erase,v=a.fireEvent,
	n=a.format,m=a.isArray,z=a.isNumber,t=a.pick,q=a.removeEvent;E=a.Point=function(){};E.prototype={init:function(a,b,p){this.series=a;this.color=a.color;this.applyOptions(b,p);a.options.colorByPoint?(b=a.options.colors||a.chart.options.colors,this.color=this.color||b[a.colorCounter],b=b.length,p=a.colorCounter,a.colorCounter++,a.colorCounter===b&&(a.colorCounter=0)):p=a.colorIndex;this.colorIndex=t(this.colorIndex,p);a.chart.pointCount++;return this},applyOptions:function(a,b){var e=this.series,w=e.options.pointValKey||
	e.pointValKey;a=E.prototype.optionsToObject.call(this,a);H(this,a);this.options=this.options?H(this.options,a):a;a.group&&delete this.group;w&&(this.y=this[w]);this.isNull=t(this.isValid&&!this.isValid(),null===this.x||!z(this.y,!0));this.selected&&(this.state="select");"name"in this&&void 0===b&&e.xAxis&&e.xAxis.hasNames&&(this.x=e.xAxis.nameToX(this));void 0===this.x&&e&&(this.x=void 0===b?e.autoIncrement(this):b);return this},optionsToObject:function(a){var b={},e=this.series,w=e.options.keys,
	k=w||e.pointArrayMap||["y"],l=k.length,g=0,q=0;if(z(a)||null===a)b[k[0]]=a;else if(m(a))for(!w&&a.length>l&&(e=typeof a[0],"string"===e?b.name=a[0]:"number"===e&&(b.x=a[0]),g++);q<l;)w&&void 0===a[g]||(b[k[q]]=a[g]),g++,q++;else"object"===typeof a&&(b=a,a.dataLabels&&(e._hasPointLabels=!0),a.marker&&(e._hasPointMarkers=!0));return b},getClassName:function(){return"highcharts-point"+(this.selected?" highcharts-point-select":"")+(this.negative?" highcharts-negative":"")+(this.isNull?" highcharts-null-point":
	"")+(void 0!==this.colorIndex?" highcharts-color-"+this.colorIndex:"")+(this.options.className?" "+this.options.className:"")+(this.zone&&this.zone.className?" "+this.zone.className.replace("highcharts-negative",""):"")},getZone:function(){var a=this.series,b=a.zones,a=a.zoneAxis||"y",p=0,w;for(w=b[p];this[a]>=w.value;)w=b[++p];w&&w.color&&!this.options.color&&(this.color=w.color);return w},destroy:function(){var a=this.series.chart,b=a.hoverPoints,p;a.pointCount--;b&&(this.setState(),I(b,this),b.length||
	(a.hoverPoints=null));if(this===a.hoverPoint)this.onMouseOut();if(this.graphic||this.dataLabel)q(this),this.destroyElements();this.legendItem&&a.legend.destroyItem(this);for(p in this)this[p]=null},destroyElements:function(){for(var a=["graphic","dataLabel","dataLabelUpper","connector","shadowGroup"],b,p=6;p--;)b=a[p],this[b]&&(this[b]=this[b].destroy())},getLabelConfig:function(){return{x:this.category,y:this.y,color:this.color,colorIndex:this.colorIndex,key:this.name||this.category,series:this.series,
	point:this,percentage:this.percentage,total:this.total||this.stackTotal}},tooltipFormatter:function(a){var b=this.series,e=b.tooltipOptions,w=t(e.valueDecimals,""),k=e.valuePrefix||"",l=e.valueSuffix||"";D(b.pointArrayMap||["y"],function(b){b="{point."+b;if(k||l)a=a.replace(b+"}",k+b+"}"+l);a=a.replace(b+"}",b+":,."+w+"f}")});return n(a,{point:this,series:this.series})},firePointEvent:function(a,b,p){var e=this,k=this.series.options;(k.point.events[a]||e.options&&e.options.events&&e.options.events[a])&&
	this.importEvents();"click"===a&&k.allowPointSelect&&(p=function(a){e.select&&e.select(null,a.ctrlKey||a.metaKey||a.shiftKey)});v(this,a,b,p)},visible:!0}})(K);(function(a){var E=a.addEvent,D=a.animObject,H=a.arrayMax,I=a.arrayMin,v=a.correctFloat,n=a.Date,m=a.defaultOptions,z=a.defaultPlotOptions,t=a.defined,q=a.each,e=a.erase,b=a.extend,p=a.fireEvent,w=a.grep,k=a.isArray,l=a.isNumber,g=a.isString,F=a.merge,r=a.pick,u=a.removeEvent,f=a.splat,B=a.SVGElement,d=a.syncTimeout,x=a.win;a.Series=a.seriesType("line",
	null,{lineWidth:2,allowPointSelect:!1,showCheckbox:!1,animation:{duration:1E3},events:{},marker:{lineWidth:0,lineColor:"#ffffff",radius:4,states:{hover:{animation:{duration:50},enabled:!0,radiusPlus:2,lineWidthPlus:1},select:{fillColor:"#cccccc",lineColor:"#000000",lineWidth:2}}},point:{events:{}},dataLabels:{align:"center",formatter:function(){return null===this.y?"":a.numberFormat(this.y,-1)},style:{fontSize:"11px",fontWeight:"bold",color:"contrast",textOutline:"1px contrast"},verticalAlign:"bottom",
	x:0,y:0,padding:5},cropThreshold:300,pointRange:0,softThreshold:!0,states:{hover:{lineWidthPlus:1,marker:{},halo:{size:10,opacity:.25}},select:{marker:{}}},stickyTracking:!0,turboThreshold:1E3},{isCartesian:!0,pointClass:a.Point,sorted:!0,requireSorting:!0,directTouch:!1,axisTypes:["xAxis","yAxis"],colorCounter:0,parallelArrays:["x","y"],coll:"series",init:function(a,d){var c=this,f,e,h=a.series,y;c.chart=a;c.options=d=c.setOptions(d);c.linkedSeries=[];c.bindAxes();b(c,{name:d.name,state:"",visible:!1!==
	d.visible,selected:!0===d.selected});e=d.events;for(f in e)E(c,f,e[f]);if(e&&e.click||d.point&&d.point.events&&d.point.events.click||d.allowPointSelect)a.runTrackerClick=!0;c.getColor();c.getSymbol();q(c.parallelArrays,function(a){c[a+"Data"]=[]});c.setData(d.data,!1);c.isCartesian&&(a.hasCartesianSeries=!0);h.length&&(y=h[h.length-1]);c._i=r(y&&y._i,-1)+1;a.orderSeries(this.insert(h))},insert:function(a){var b=this.options.index,c;if(l(b)){for(c=a.length;c--;)if(b>=r(a[c].options.index,a[c]._i)){a.splice(c+
	1,0,this);break}-1===c&&a.unshift(this);c+=1}else a.push(this);return r(c,a.length-1)},bindAxes:function(){var b=this,d=b.options,f=b.chart,e;q(b.axisTypes||[],function(c){q(f[c],function(a){e=a.options;if(d[c]===e.index||void 0!==d[c]&&d[c]===e.id||void 0===d[c]&&0===e.index)b.insert(a.series),b[c]=a,a.isDirty=!0});b[c]||b.optionalAxis===c||a.error(18,!0)})},updateParallelArrays:function(a,b){var c=a.series,d=arguments,f=l(b)?function(d){var h="y"===d&&c.toYData?c.toYData(a):a[d];c[d+"Data"][b]=
	h}:function(a){Array.prototype[b].apply(c[a+"Data"],Array.prototype.slice.call(d,2))};q(c.parallelArrays,f)},autoIncrement:function(){var a=this.options,b=this.xIncrement,d,f=a.pointIntervalUnit,b=r(b,a.pointStart,0);this.pointInterval=d=r(this.pointInterval,a.pointInterval,1);f&&(a=new n(b),"day"===f?a=+a[n.hcSetDate](a[n.hcGetDate]()+d):"month"===f?a=+a[n.hcSetMonth](a[n.hcGetMonth]()+d):"year"===f&&(a=+a[n.hcSetFullYear](a[n.hcGetFullYear]()+d)),d=a-b);this.xIncrement=b+d;return b},setOptions:function(a){var b=
	this.chart,c=b.options.plotOptions,b=b.userOptions||{},d=b.plotOptions||{},f=c[this.type];this.userOptions=a;c=F(f,c.series,a);this.tooltipOptions=F(m.tooltip,m.plotOptions[this.type].tooltip,b.tooltip,d.series&&d.series.tooltip,d[this.type]&&d[this.type].tooltip,a.tooltip);null===f.marker&&delete c.marker;this.zoneAxis=c.zoneAxis;a=this.zones=(c.zones||[]).slice();!c.negativeColor&&!c.negativeFillColor||c.zones||a.push({value:c[this.zoneAxis+"Threshold"]||c.threshold||0,className:"highcharts-negative",
	color:c.negativeColor,fillColor:c.negativeFillColor});a.length&&t(a[a.length-1].value)&&a.push({color:this.color,fillColor:this.fillColor});return c},getCyclic:function(a,b,d){var c,f=this.chart,h=this.userOptions,e=a+"Index",g=a+"Counter",y=d?d.length:r(f.options.chart[a+"Count"],f[a+"Count"]);b||(c=r(h[e],h["_"+e]),t(c)||(f.series.length||(f[g]=0),h["_"+e]=c=f[g]%y,f[g]+=1),d&&(b=d[c]));void 0!==c&&(this[e]=c);this[a]=b},getColor:function(){this.options.colorByPoint?this.options.color=null:this.getCyclic("color",
	this.options.color||z[this.type].color,this.chart.options.colors)},getSymbol:function(){this.getCyclic("symbol",this.options.marker.symbol,this.chart.options.symbols)},drawLegendSymbol:a.LegendSymbolMixin.drawLineMarker,setData:function(b,d,f,e){var c=this,h=c.points,y=h&&h.length||0,A,u=c.options,x=c.chart,p=null,w=c.xAxis,m=u.turboThreshold,B=this.xData,n=this.yData,t=(A=c.pointArrayMap)&&A.length;b=b||[];A=b.length;d=r(d,!0);if(!1!==e&&A&&y===A&&!c.cropped&&!c.hasGroupedData&&c.visible)q(b,function(a,
	b){h[b].update&&a!==u.data[b]&&h[b].update(a,!1,null,!1)});else{c.xIncrement=null;c.colorCounter=0;q(this.parallelArrays,function(a){c[a+"Data"].length=0});if(m&&A>m){for(f=0;null===p&&f<A;)p=b[f],f++;if(l(p))for(f=0;f<A;f++)B[f]=this.autoIncrement(),n[f]=b[f];else if(k(p))if(t)for(f=0;f<A;f++)p=b[f],B[f]=p[0],n[f]=p.slice(1,t+1);else for(f=0;f<A;f++)p=b[f],B[f]=p[0],n[f]=p[1];else a.error(12)}else for(f=0;f<A;f++)void 0!==b[f]&&(p={series:c},c.pointClass.prototype.applyOptions.apply(p,[b[f]]),c.updateParallelArrays(p,
	f));g(n[0])&&a.error(14,!0);c.data=[];c.options.data=c.userOptions.data=b;for(f=y;f--;)h[f]&&h[f].destroy&&h[f].destroy();w&&(w.minRange=w.userMinRange);c.isDirty=x.isDirtyBox=!0;c.isDirtyData=!!h;f=!1}"point"===u.legendType&&(this.processData(),this.generatePoints());d&&x.redraw(f)},processData:function(b){var c=this.xData,d=this.yData,f=c.length,e;e=0;var h,g,k=this.xAxis,l,u=this.options;l=u.cropThreshold;var r=this.getExtremesFromAll||u.getExtremesFromAll,x=this.isCartesian,u=k&&k.val2lin,p=k&&
	k.isLog,q,w;if(x&&!this.isDirty&&!k.isDirty&&!this.yAxis.isDirty&&!b)return!1;k&&(b=k.getExtremes(),q=b.min,w=b.max);if(x&&this.sorted&&!r&&(!l||f>l||this.forceCrop))if(c[f-1]<q||c[0]>w)c=[],d=[];else if(c[0]<q||c[f-1]>w)e=this.cropData(this.xData,this.yData,q,w),c=e.xData,d=e.yData,e=e.start,h=!0;for(l=c.length||1;--l;)f=p?u(c[l])-u(c[l-1]):c[l]-c[l-1],0<f&&(void 0===g||f<g)?g=f:0>f&&this.requireSorting&&a.error(15);this.cropped=h;this.cropStart=e;this.processedXData=c;this.processedYData=d;this.closestPointRange=
	g},cropData:function(a,b,d,f){var c=a.length,h=0,e=c,g=r(this.cropShoulder,1),y;for(y=0;y<c;y++)if(a[y]>=d){h=Math.max(0,y-g);break}for(d=y;d<c;d++)if(a[d]>f){e=d+g;break}return{xData:a.slice(h,e),yData:b.slice(h,e),start:h,end:e}},generatePoints:function(){var a=this.options.data,b=this.data,d,e=this.processedXData,g=this.processedYData,h=this.pointClass,k=e.length,l=this.cropStart||0,u,r=this.hasGroupedData,x,p=[],q;b||r||(b=[],b.length=a.length,b=this.data=b);for(q=0;q<k;q++)u=l+q,r?(x=(new h).init(this,
	[e[q]].concat(f(g[q]))),x.dataGroup=this.groupMap[q]):(x=b[u])||void 0===a[u]||(b[u]=x=(new h).init(this,a[u],e[q])),x.index=u,p[q]=x;if(b&&(k!==(d=b.length)||r))for(q=0;q<d;q++)q!==l||r||(q+=k),b[q]&&(b[q].destroyElements(),b[q].plotX=void 0);this.data=b;this.points=p},getExtremes:function(a){var b=this.yAxis,c=this.processedXData,d,f=[],h=0;d=this.xAxis.getExtremes();var e=d.min,g=d.max,u,r,x,p;a=a||this.stackedYData||this.processedYData||[];d=a.length;for(p=0;p<d;p++)if(r=c[p],x=a[p],u=(l(x,!0)||
	k(x))&&(!b.isLog||x.length||0<x),r=this.getExtremesFromAll||this.options.getExtremesFromAll||this.cropped||(c[p+1]||r)>=e&&(c[p-1]||r)<=g,u&&r)if(u=x.length)for(;u--;)null!==x[u]&&(f[h++]=x[u]);else f[h++]=x;this.dataMin=I(f);this.dataMax=H(f)},translate:function(){this.processedXData||this.processData();this.generatePoints();var a=this.options,b=a.stacking,d=this.xAxis,f=d.categories,e=this.yAxis,h=this.points,g=h.length,k=!!this.modifyValue,u=a.pointPlacement,x="between"===u||l(u),p=a.threshold,
	q=a.startFromThreshold?p:0,w,m,B,n,F=Number.MAX_VALUE;"between"===u&&(u=.5);l(u)&&(u*=r(a.pointRange||d.pointRange));for(a=0;a<g;a++){var z=h[a],D=z.x,E=z.y;m=z.low;var I=b&&e.stacks[(this.negStacks&&E<(q?0:p)?"-":"")+this.stackKey],H;e.isLog&&null!==E&&0>=E&&(z.isNull=!0);z.plotX=w=v(Math.min(Math.max(-1E5,d.translate(D,0,0,0,1,u,"flags"===this.type)),1E5));b&&this.visible&&!z.isNull&&I&&I[D]&&(n=this.getStackIndicator(n,D,this.index),H=I[D],E=H.points[n.key],m=E[0],E=E[1],m===q&&n.key===I[D].base&&
	(m=r(p,e.min)),e.isLog&&0>=m&&(m=null),z.total=z.stackTotal=H.total,z.percentage=H.total&&z.y/H.total*100,z.stackY=E,H.setOffset(this.pointXOffset||0,this.barW||0));z.yBottom=t(m)?e.translate(m,0,1,0,1):null;k&&(E=this.modifyValue(E,z));z.plotY=m="number"===typeof E&&Infinity!==E?Math.min(Math.max(-1E5,e.translate(E,0,1,0,1)),1E5):void 0;z.isInside=void 0!==m&&0<=m&&m<=e.len&&0<=w&&w<=d.len;z.clientX=x?v(d.translate(D,0,0,0,1,u)):w;z.negative=z.y<(p||0);z.category=f&&void 0!==f[z.x]?f[z.x]:z.x;z.isNull||
	(void 0!==B&&(F=Math.min(F,Math.abs(w-B))),B=w);z.zone=this.zones.length&&z.getZone()}this.closestPointRangePx=F},getValidPoints:function(a,b){var c=this.chart;return w(a||this.points||[],function(a){return b&&!c.isInsidePlot(a.plotX,a.plotY,c.inverted)?!1:!a.isNull})},setClip:function(a){var b=this.chart,c=this.options,d=b.renderer,f=b.inverted,h=this.clipBox,e=h||b.clipBox,g=this.sharedClipKey||["_sharedClip",a&&a.duration,a&&a.easing,e.height,c.xAxis,c.yAxis].join(),k=b[g],l=b[g+"m"];k||(a&&(e.width=
	0,b[g+"m"]=l=d.clipRect(-99,f?-b.plotLeft:-b.plotTop,99,f?b.chartWidth:b.chartHeight)),b[g]=k=d.clipRect(e),k.count={length:0});a&&!k.count[this.index]&&(k.count[this.index]=!0,k.count.length+=1);!1!==c.clip&&(this.group.clip(a||h?k:b.clipRect),this.markerGroup.clip(l),this.sharedClipKey=g);a||(k.count[this.index]&&(delete k.count[this.index],--k.count.length),0===k.count.length&&g&&b[g]&&(h||(b[g]=b[g].destroy()),b[g+"m"]&&(this.markerGroup.clip(),b[g+"m"]=b[g+"m"].destroy())))},animate:function(a){var b=
	this.chart,c=D(this.options.animation),d;a?this.setClip(c):(d=this.sharedClipKey,(a=b[d])&&a.animate({width:b.plotSizeX},c),b[d+"m"]&&b[d+"m"].animate({width:b.plotSizeX+99},c),this.animate=null)},afterAnimate:function(){this.setClip();p(this,"afterAnimate")},drawPoints:function(){var a=this.points,b=this.chart,d,f,e,h,g=this.options.marker,k,u,x,p,q=this.markerGroup,w=r(g.enabled,this.xAxis.isRadial?!0:null,this.closestPointRangePx>2*g.radius);if(!1!==g.enabled||this._hasPointMarkers)for(f=0;f<a.length;f++)e=
	a[f],d=e.plotY,h=e.graphic,k=e.marker||{},u=!!e.marker,x=w&&void 0===k.enabled||k.enabled,p=e.isInside,x&&l(d)&&null!==e.y?(d=r(k.symbol,this.symbol),e.hasImage=0===d.indexOf("url"),x=this.markerAttribs(e,e.selected&&"select"),h?h[p?"show":"hide"](!0).animate(x):p&&(0<x.width||e.hasImage)&&(e.graphic=h=b.renderer.symbol(d,x.x,x.y,x.width,x.height,u?k:g).add(q)),h&&h.attr(this.pointAttribs(e,e.selected&&"select")),h&&h.addClass(e.getClassName(),!0)):h&&(e.graphic=h.destroy())},markerAttribs:function(a,
	b){var c=this.options.marker,d=a.marker||{},f=r(d.radius,c.radius);b&&(c=c.states[b],b=d.states&&d.states[b],f=r(b&&b.radius,c&&c.radius,f+(c&&c.radiusPlus||0)));a.hasImage&&(f=0);a={x:Math.floor(a.plotX)-f,y:a.plotY-f};f&&(a.width=a.height=2*f);return a},pointAttribs:function(a,b){var c=this.options.marker,d=a&&a.options,f=d&&d.marker||{},h=this.color,e=d&&d.color,g=a&&a.color,d=r(f.lineWidth,c.lineWidth);a=a&&a.zone&&a.zone.color;h=e||a||g||h;a=f.fillColor||c.fillColor||h;h=f.lineColor||c.lineColor||
	h;b&&(c=c.states[b],b=f.states&&f.states[b]||{},d=r(b.lineWidth,c.lineWidth,d+r(b.lineWidthPlus,c.lineWidthPlus,0)),a=b.fillColor||c.fillColor||a,h=b.lineColor||c.lineColor||h);return{stroke:h,"stroke-width":d,fill:a}},destroy:function(){var a=this,b=a.chart,d=/AppleWebKit\/533/.test(x.navigator.userAgent),f,g=a.data||[],h,k,l;p(a,"destroy");u(a);q(a.axisTypes||[],function(b){(l=a[b])&&l.series&&(e(l.series,a),l.isDirty=l.forceRedraw=!0)});a.legendItem&&a.chart.legend.destroyItem(a);for(f=g.length;f--;)(h=
	g[f])&&h.destroy&&h.destroy();a.points=null;clearTimeout(a.animationTimeout);for(k in a)a[k]instanceof B&&!a[k].survive&&(f=d&&"group"===k?"hide":"destroy",a[k][f]());b.hoverSeries===a&&(b.hoverSeries=null);e(b.series,a);b.orderSeries();for(k in a)delete a[k]},getGraphPath:function(a,b,d){var c=this,f=c.options,h=f.step,e,g=[],k=[],l;a=a||c.points;(e=a.reversed)&&a.reverse();(h={right:1,center:2}[h]||h&&3)&&e&&(h=4-h);!f.connectNulls||b||d||(a=this.getValidPoints(a));q(a,function(e,y){var u=e.plotX,
	A=e.plotY,x=a[y-1];(e.leftCliff||x&&x.rightCliff)&&!d&&(l=!0);e.isNull&&!t(b)&&0<y?l=!f.connectNulls:e.isNull&&!b?l=!0:(0===y||l?y=["M",e.plotX,e.plotY]:c.getPointSpline?y=c.getPointSpline(a,e,y):h?(y=1===h?["L",x.plotX,A]:2===h?["L",(x.plotX+u)/2,x.plotY,"L",(x.plotX+u)/2,A]:["L",u,x.plotY],y.push("L",u,A)):y=["L",u,A],k.push(e.x),h&&k.push(e.x),g.push.apply(g,y),l=!1)});g.xMap=k;return c.graphPath=g},drawGraph:function(){var a=this,b=this.options,d=(this.gappedPath||this.getGraphPath).call(this),
	f=[["graph","highcharts-graph",b.lineColor||this.color,b.dashStyle]];q(this.zones,function(c,d){f.push(["zone-graph-"+d,"highcharts-graph highcharts-zone-graph-"+d+" "+(c.className||""),c.color||a.color,c.dashStyle||b.dashStyle])});q(f,function(c,f){var h=c[0],e=a[h];e?(e.endX=d.xMap,e.animate({d:d})):d.length&&(a[h]=a.chart.renderer.path(d).addClass(c[1]).attr({zIndex:1}).add(a.group),e={stroke:c[2],"stroke-width":b.lineWidth,fill:a.fillGraph&&a.color||"none"},c[3]?e.dashstyle=c[3]:"square"!==b.linecap&&
	(e["stroke-linecap"]=e["stroke-linejoin"]="round"),e=a[h].attr(e).shadow(2>f&&b.shadow));e&&(e.startX=d.xMap,e.isArea=d.isArea)})},applyZones:function(){var a=this,b=this.chart,d=b.renderer,f=this.zones,e,h,g=this.clips||[],k,l=this.graph,u=this.area,x=Math.max(b.chartWidth,b.chartHeight),p=this[(this.zoneAxis||"y")+"Axis"],w,m,B=b.inverted,n,t,v,F,z=!1;f.length&&(l||u)&&p&&void 0!==p.min&&(m=p.reversed,n=p.horiz,l&&l.hide(),u&&u.hide(),w=p.getExtremes(),q(f,function(c,f){e=m?n?b.plotWidth:0:n?0:
	p.toPixels(w.min);e=Math.min(Math.max(r(h,e),0),x);h=Math.min(Math.max(Math.round(p.toPixels(r(c.value,w.max),!0)),0),x);z&&(e=h=p.toPixels(w.max));t=Math.abs(e-h);v=Math.min(e,h);F=Math.max(e,h);p.isXAxis?(k={x:B?F:v,y:0,width:t,height:x},n||(k.x=b.plotHeight-k.x)):(k={x:0,y:B?F:v,width:x,height:t},n&&(k.y=b.plotWidth-k.y));B&&d.isVML&&(k=p.isXAxis?{x:0,y:m?v:F,height:k.width,width:b.chartWidth}:{x:k.y-b.plotLeft-b.spacingBox.x,y:0,width:k.height,height:b.chartHeight});g[f]?g[f].animate(k):(g[f]=
	d.clipRect(k),l&&a["zone-graph-"+f].clip(g[f]),u&&a["zone-area-"+f].clip(g[f]));z=c.value>w.max}),this.clips=g)},invertGroups:function(a){function b(){q(["group","markerGroup"],function(b){c[b]&&(c[b].width=c.yAxis.len,c[b].height=c.xAxis.len,c[b].invert(a))})}var c=this,d;c.xAxis&&(d=E(c.chart,"resize",b),E(c,"destroy",d),b(a),c.invertGroups=b)},plotGroup:function(a,b,d,f,e){var c=this[a],g=!c;g&&(this[a]=c=this.chart.renderer.g(b).attr({zIndex:f||.1}).add(e),c.addClass("highcharts-series-"+this.index+
	" highcharts-"+this.type+"-series highcharts-color-"+this.colorIndex+" "+(this.options.className||"")));c.attr({visibility:d})[g?"attr":"animate"](this.getPlotBox());return c},getPlotBox:function(){var a=this.chart,b=this.xAxis,d=this.yAxis;a.inverted&&(b=d,d=this.xAxis);return{translateX:b?b.left:a.plotLeft,translateY:d?d.top:a.plotTop,scaleX:1,scaleY:1}},render:function(){var a=this,b=a.chart,f,e=a.options,g=!!a.animate&&b.renderer.isSVG&&D(e.animation).duration,h=a.visible?"inherit":"hidden",k=
	e.zIndex,l=a.hasRendered,u=b.seriesGroup,x=b.inverted;f=a.plotGroup("group","series",h,k,u);a.markerGroup=a.plotGroup("markerGroup","markers",h,k,u);g&&a.animate(!0);f.inverted=a.isCartesian?x:!1;a.drawGraph&&(a.drawGraph(),a.applyZones());a.drawDataLabels&&a.drawDataLabels();a.visible&&a.drawPoints();a.drawTracker&&!1!==a.options.enableMouseTracking&&a.drawTracker();a.invertGroups(x);!1===e.clip||a.sharedClipKey||l||f.clip(b.clipRect);g&&a.animate();l||(a.animationTimeout=d(function(){a.afterAnimate()},
	g));a.isDirty=!1;a.hasRendered=!0},redraw:function(){var a=this.chart,b=this.isDirty||this.isDirtyData,d=this.group,f=this.xAxis,e=this.yAxis;d&&(a.inverted&&d.attr({width:a.plotWidth,height:a.plotHeight}),d.animate({translateX:r(f&&f.left,a.plotLeft),translateY:r(e&&e.top,a.plotTop)}));this.translate();this.render();b&&delete this.kdTree},kdDimensions:1,kdAxisArray:["clientX","plotY"],searchPoint:function(a,b){var c=this.xAxis,d=this.yAxis,f=this.chart.inverted;return this.searchKDTree({clientX:f?
	c.len-a.chartY+c.pos:a.chartX-c.pos,plotY:f?d.len-a.chartX+d.pos:a.chartY-d.pos},b)},buildKDTree:function(){function a(d,c,f){var h,e;if(e=d&&d.length)return h=b.kdAxisArray[c%f],d.sort(function(a,b){return a[h]-b[h]}),e=Math.floor(e/2),{point:d[e],left:a(d.slice(0,e),c+1,f),right:a(d.slice(e+1),c+1,f)}}this.buildingKdTree=!0;var b=this,f=b.kdDimensions;delete b.kdTree;d(function(){b.kdTree=a(b.getValidPoints(null,!b.directTouch),f,f);b.buildingKdTree=!1},b.options.kdNow?0:1)},searchKDTree:function(a,
	b){function d(a,b,g,k){var l=b.point,u=c.kdAxisArray[g%k],x,y,A=l;y=t(a[f])&&t(l[f])?Math.pow(a[f]-l[f],2):null;x=t(a[h])&&t(l[h])?Math.pow(a[h]-l[h],2):null;x=(y||0)+(x||0);l.dist=t(x)?Math.sqrt(x):Number.MAX_VALUE;l.distX=t(y)?Math.sqrt(y):Number.MAX_VALUE;u=a[u]-l[u];x=0>u?"left":"right";y=0>u?"right":"left";b[x]&&(x=d(a,b[x],g+1,k),A=x[e]<A[e]?x:l);b[y]&&Math.sqrt(u*u)<A[e]&&(a=d(a,b[y],g+1,k),A=a[e]<A[e]?a:A);return A}var c=this,f=this.kdAxisArray[0],h=this.kdAxisArray[1],e=b?"distX":"dist";
	this.kdTree||this.buildingKdTree||this.buildKDTree();if(this.kdTree)return d(a,this.kdTree,this.kdDimensions,this.kdDimensions)}})})(K);(function(a){function E(a,e,b,p,w){var k=a.chart.inverted;this.axis=a;this.isNegative=b;this.options=e;this.x=p;this.total=null;this.points={};this.stack=w;this.rightCliff=this.leftCliff=0;this.alignOptions={align:e.align||(k?b?"left":"right":"center"),verticalAlign:e.verticalAlign||(k?"middle":b?"bottom":"top"),y:t(e.y,k?4:b?14:-6),x:t(e.x,k?b?-6:6:0)};this.textAlign=
	e.textAlign||(k?b?"right":"left":"center")}var D=a.Axis,H=a.Chart,I=a.correctFloat,v=a.defined,n=a.destroyObjectProperties,m=a.each,z=a.format,t=a.pick;a=a.Series;E.prototype={destroy:function(){n(this,this.axis)},render:function(a){var e=this.options,b=e.format,b=b?z(b,this):e.formatter.call(this);this.label?this.label.attr({text:b,visibility:"hidden"}):this.label=this.axis.chart.renderer.text(b,null,null,e.useHTML).css(e.style).attr({align:this.textAlign,rotation:e.rotation,visibility:"hidden"}).add(a)},
	setOffset:function(a,e){var b=this.axis,p=b.chart,w=p.inverted,k=b.reversed,k=this.isNegative&&!k||!this.isNegative&&k,l=b.translate(b.usePercentage?100:this.total,0,0,0,1),b=b.translate(0),b=Math.abs(l-b);a=p.xAxis[0].translate(this.x)+a;var g=p.plotHeight,w={x:w?k?l:l-b:a,y:w?g-a-e:k?g-l-b:g-l,width:w?b:e,height:w?e:b};if(e=this.label)e.align(this.alignOptions,null,w),w=e.alignAttr,e[!1===this.options.crop||p.isInsidePlot(w.x,w.y)?"show":"hide"](!0)}};H.prototype.getStacks=function(){var a=this;
	m(a.yAxis,function(a){a.stacks&&a.hasVisibleSeries&&(a.oldStacks=a.stacks)});m(a.series,function(e){!e.options.stacking||!0!==e.visible&&!1!==a.options.chart.ignoreHiddenSeries||(e.stackKey=e.type+t(e.options.stack,""))})};D.prototype.buildStacks=function(){var a=this.series,e,b=t(this.options.reversedStacks,!0),p=a.length,w;if(!this.isXAxis){this.usePercentage=!1;for(w=p;w--;)a[b?w:p-w-1].setStackedPoints();for(w=p;w--;)e=a[b?w:p-w-1],e.setStackCliffs&&e.setStackCliffs();if(this.usePercentage)for(w=
	0;w<p;w++)a[w].setPercentStacks()}};D.prototype.renderStackTotals=function(){var a=this.chart,e=a.renderer,b=this.stacks,p,w,k=this.stackTotalGroup;k||(this.stackTotalGroup=k=e.g("stack-labels").attr({visibility:"visible",zIndex:6}).add());k.translate(a.plotLeft,a.plotTop);for(p in b)for(w in a=b[p],a)a[w].render(k)};D.prototype.resetStacks=function(){var a=this.stacks,e,b;if(!this.isXAxis)for(e in a)for(b in a[e])a[e][b].touched<this.stacksTouched?(a[e][b].destroy(),delete a[e][b]):(a[e][b].total=
	null,a[e][b].cum=null)};D.prototype.cleanStacks=function(){var a,e,b;if(!this.isXAxis)for(e in this.oldStacks&&(a=this.stacks=this.oldStacks),a)for(b in a[e])a[e][b].cum=a[e][b].total};a.prototype.setStackedPoints=function(){if(this.options.stacking&&(!0===this.visible||!1===this.chart.options.chart.ignoreHiddenSeries)){var a=this.processedXData,e=this.processedYData,b=[],p=e.length,w=this.options,k=w.threshold,l=w.startFromThreshold?k:0,g=w.stack,w=w.stacking,m=this.stackKey,r="-"+m,u=this.negStacks,
	f=this.yAxis,B=f.stacks,d=f.oldStacks,x,c,y,n,A,J,h;f.stacksTouched+=1;for(A=0;A<p;A++)J=a[A],h=e[A],x=this.getStackIndicator(x,J,this.index),n=x.key,y=(c=u&&h<(l?0:k))?r:m,B[y]||(B[y]={}),B[y][J]||(d[y]&&d[y][J]?(B[y][J]=d[y][J],B[y][J].total=null):B[y][J]=new E(f,f.options.stackLabels,c,J,g)),y=B[y][J],null!==h&&(y.points[n]=y.points[this.index]=[t(y.cum,l)],v(y.cum)||(y.base=n),y.touched=f.stacksTouched,0<x.index&&!1===this.singleStacks&&(y.points[n][0]=y.points[this.index+","+J+",0"][0])),"percent"===
	w?(c=c?m:r,u&&B[c]&&B[c][J]?(c=B[c][J],y.total=c.total=Math.max(c.total,y.total)+Math.abs(h)||0):y.total=I(y.total+(Math.abs(h)||0))):y.total=I(y.total+(h||0)),y.cum=t(y.cum,l)+(h||0),null!==h&&(y.points[n].push(y.cum),b[A]=y.cum);"percent"===w&&(f.usePercentage=!0);this.stackedYData=b;f.oldStacks={}}};a.prototype.setPercentStacks=function(){var a=this,e=a.stackKey,b=a.yAxis.stacks,p=a.processedXData,w;m([e,"-"+e],function(e){for(var k=p.length,g,m;k--;)if(g=p[k],w=a.getStackIndicator(w,g,a.index,
	e),g=(m=b[e]&&b[e][g])&&m.points[w.key])m=m.total?100/m.total:0,g[0]=I(g[0]*m),g[1]=I(g[1]*m),a.stackedYData[k]=g[1]})};a.prototype.getStackIndicator=function(a,e,b,p){!v(a)||a.x!==e||p&&a.key!==p?a={x:e,index:0,key:p}:a.index++;a.key=[b,e,a.index].join();return a}})(K);(function(a){var E=a.addEvent,D=a.animate,H=a.Axis,I=a.createElement,v=a.css,n=a.defined,m=a.each,z=a.erase,t=a.extend,q=a.fireEvent,e=a.inArray,b=a.isNumber,p=a.isObject,w=a.merge,k=a.pick,l=a.Point,g=a.Series,F=a.seriesTypes,r=a.setAnimation,
	u=a.splat;t(a.Chart.prototype,{addSeries:function(a,b,d){var f,c=this;a&&(b=k(b,!0),q(c,"addSeries",{options:a},function(){f=c.initSeries(a);c.isDirtyLegend=!0;c.linkSeries();b&&c.redraw(d)}));return f},addAxis:function(a,b,d,e){var c=b?"xAxis":"yAxis",f=this.options;a=w(a,{index:this[c].length,isX:b});new H(this,a);f[c]=u(f[c]||{});f[c].push(a);k(d,!0)&&this.redraw(e)},showLoading:function(a){var b=this,d=b.options,f=b.loadingDiv,c=d.loading,e=function(){f&&v(f,{left:b.plotLeft+"px",top:b.plotTop+
	"px",width:b.plotWidth+"px",height:b.plotHeight+"px"})};f||(b.loadingDiv=f=I("div",{className:"highcharts-loading highcharts-loading-hidden"},null,b.container),b.loadingSpan=I("span",{className:"highcharts-loading-inner"},null,f),E(b,"redraw",e));f.className="highcharts-loading";b.loadingSpan.innerHTML=a||d.lang.loading;v(f,t(c.style,{zIndex:10}));v(b.loadingSpan,c.labelStyle);b.loadingShown||(v(f,{opacity:0,display:""}),D(f,{opacity:c.style.opacity||.5},{duration:c.showDuration||0}));b.loadingShown=
	!0;e()},hideLoading:function(){var a=this.options,b=this.loadingDiv;b&&(b.className="highcharts-loading highcharts-loading-hidden",D(b,{opacity:0},{duration:a.loading.hideDuration||100,complete:function(){v(b,{display:"none"})}}));this.loadingShown=!1},propsRequireDirtyBox:"backgroundColor borderColor borderWidth margin marginTop marginRight marginBottom marginLeft spacing spacingTop spacingRight spacingBottom spacingLeft borderRadius plotBackgroundColor plotBackgroundImage plotBorderColor plotBorderWidth plotShadow shadow".split(" "),
	propsRequireUpdateSeries:"chart.inverted chart.polar chart.ignoreHiddenSeries chart.type colors plotOptions".split(" "),update:function(a,g){var d,f={credits:"addCredits",title:"setTitle",subtitle:"setSubtitle"},c=a.chart,l,r;if(c){w(!0,this.options.chart,c);"className"in c&&this.setClassName(c.className);if("inverted"in c||"polar"in c)this.propFromSeries(),l=!0;for(d in c)c.hasOwnProperty(d)&&(-1!==e("chart."+d,this.propsRequireUpdateSeries)&&(r=!0),-1!==e(d,this.propsRequireDirtyBox)&&(this.isDirtyBox=
	!0));"style"in c&&this.renderer.setStyle(c.style)}for(d in a){if(this[d]&&"function"===typeof this[d].update)this[d].update(a[d],!1);else if("function"===typeof this[f[d]])this[f[d]](a[d]);"chart"!==d&&-1!==e(d,this.propsRequireUpdateSeries)&&(r=!0)}a.colors&&(this.options.colors=a.colors);a.plotOptions&&w(!0,this.options.plotOptions,a.plotOptions);m(["xAxis","yAxis","series"],function(b){a[b]&&m(u(a[b]),function(a,d){(d=n(a.id)&&this.get(a.id)||this[b][d])&&d.coll===b&&d.update(a,!1)},this)},this);
	l&&m(this.axes,function(a){a.update({},!1)});r&&m(this.series,function(a){a.update({},!1)});a.loading&&w(!0,this.options.loading,a.loading);d=c&&c.width;c=c&&c.height;b(d)&&d!==this.chartWidth||b(c)&&c!==this.chartHeight?this.setSize(d,c):k(g,!0)&&this.redraw()},setSubtitle:function(a){this.setTitle(void 0,a)}});t(l.prototype,{update:function(a,b,d,e){function c(){f.applyOptions(a);null===f.y&&l&&(f.graphic=l.destroy());p(a,!0)&&(l&&l.element&&a&&a.marker&&a.marker.symbol&&(f.graphic=l.destroy()),
	a&&a.dataLabels&&f.dataLabel&&(f.dataLabel=f.dataLabel.destroy()));u=f.index;g.updateParallelArrays(f,u);x.data[u]=p(x.data[u],!0)?f.options:a;g.isDirty=g.isDirtyData=!0;!g.fixedBox&&g.hasCartesianSeries&&(h.isDirtyBox=!0);"point"===x.legendType&&(h.isDirtyLegend=!0);b&&h.redraw(d)}var f=this,g=f.series,l=f.graphic,u,h=g.chart,x=g.options;b=k(b,!0);!1===e?c():f.firePointEvent("update",{options:a},c)},remove:function(a,b){this.series.removePoint(e(this,this.series.data),a,b)}});t(g.prototype,{addPoint:function(a,
	b,d,e){var c=this.options,f=this.data,g=this.chart,l=this.xAxis,l=l&&l.hasNames&&l.names,u=c.data,h,x,r=this.xData,p,m;b=k(b,!0);h={series:this};this.pointClass.prototype.applyOptions.apply(h,[a]);m=h.x;p=r.length;if(this.requireSorting&&m<r[p-1])for(x=!0;p&&r[p-1]>m;)p--;this.updateParallelArrays(h,"splice",p,0,0);this.updateParallelArrays(h,p);l&&h.name&&(l[m]=h.name);u.splice(p,0,a);x&&(this.data.splice(p,0,null),this.processData());"point"===c.legendType&&this.generatePoints();d&&(f[0]&&f[0].remove?
	f[0].remove(!1):(f.shift(),this.updateParallelArrays(h,"shift"),u.shift()));this.isDirtyData=this.isDirty=!0;b&&g.redraw(e)},removePoint:function(a,b,d){var f=this,c=f.data,e=c[a],g=f.points,l=f.chart,u=function(){g&&g.length===c.length&&g.splice(a,1);c.splice(a,1);f.options.data.splice(a,1);f.updateParallelArrays(e||{series:f},"splice",a,1);e&&e.destroy();f.isDirty=!0;f.isDirtyData=!0;b&&l.redraw()};r(d,l);b=k(b,!0);e?e.firePointEvent("remove",null,u):u()},remove:function(a,b,d){function f(){c.destroy();
	e.isDirtyLegend=e.isDirtyBox=!0;e.linkSeries();k(a,!0)&&e.redraw(b)}var c=this,e=c.chart;!1!==d?q(c,"remove",null,f):f()},update:function(a,b){var d=this,f=this.chart,c=this.userOptions,e=this.type,g=a.type||c.type||f.options.chart.type,l=F[e].prototype,u=["group","markerGroup","dataLabelsGroup"],h;if(g&&g!==e||void 0!==a.zIndex)u.length=0;m(u,function(a){u[a]=d[a];delete d[a]});a=w(c,{animation:!1,index:this.index,pointStart:this.xData[0]},{data:this.options.data},a);this.remove(!1,null,!1);for(h in l)this[h]=
	void 0;t(this,F[g||e].prototype);m(u,function(a){d[a]=u[a]});this.init(f,a);f.linkSeries();k(b,!0)&&f.redraw(!1)}});t(H.prototype,{update:function(a,b){var d=this.chart;a=d.options[this.coll][this.options.index]=w(this.userOptions,a);this.destroy(!0);this.init(d,t(a,{events:void 0}));d.isDirtyBox=!0;k(b,!0)&&d.redraw()},remove:function(a){for(var b=this.chart,d=this.coll,f=this.series,c=f.length;c--;)f[c]&&f[c].remove(!1);z(b.axes,this);z(b[d],this);b.options[d].splice(this.options.index,1);m(b[d],
	function(a,b){a.options.index=b});this.destroy();b.isDirtyBox=!0;k(a,!0)&&b.redraw()},setTitle:function(a,b){this.update({title:a},b)},setCategories:function(a,b){this.update({categories:a},b)}})})(K);(function(a){var E=a.color,D=a.each,H=a.map,I=a.pick,v=a.Series,n=a.seriesType;n("area","line",{softThreshold:!1,threshold:0},{singleStacks:!1,getStackPoints:function(){var a=[],n=[],t=this.xAxis,q=this.yAxis,e=q.stacks[this.stackKey],b={},p=this.points,w=this.index,k=q.series,l=k.length,g,v=I(q.options.reversedStacks,
	!0)?1:-1,r,u;if(this.options.stacking){for(r=0;r<p.length;r++)b[p[r].x]=p[r];for(u in e)null!==e[u].total&&n.push(u);n.sort(function(a,b){return a-b});g=H(k,function(){return this.visible});D(n,function(f,k){var d=0,u,c;if(b[f]&&!b[f].isNull)a.push(b[f]),D([-1,1],function(a){var d=1===a?"rightNull":"leftNull",x=0,p=e[n[k+a]];if(p)for(r=w;0<=r&&r<l;)u=p.points[r],u||(r===w?b[f][d]=!0:g[r]&&(c=e[f].points[r])&&(x-=c[1]-c[0])),r+=v;b[f][1===a?"rightCliff":"leftCliff"]=x});else{for(r=w;0<=r&&r<l;){if(u=
	e[f].points[r]){d=u[1];break}r+=v}d=q.toPixels(d,!0);a.push({isNull:!0,plotX:t.toPixels(f,!0),plotY:d,yBottom:d})}})}return a},getGraphPath:function(a){var m=v.prototype.getGraphPath,n=this.options,q=n.stacking,e=this.yAxis,b,p,w=[],k=[],l=this.index,g,F=e.stacks[this.stackKey],r=n.threshold,u=e.getThreshold(n.threshold),f,n=n.connectNulls||"percent"===q,B=function(b,f,c){var d=a[b];b=q&&F[d.x].points[l];var p=d[c+"Null"]||0;c=d[c+"Cliff"]||0;var x,m,d=!0;c||p?(x=(p?b[0]:b[1])+c,m=b[0]+c,d=!!p):!q&&
	a[f]&&a[f].isNull&&(x=m=r);void 0!==x&&(k.push({plotX:g,plotY:null===x?u:e.getThreshold(x),isNull:d}),w.push({plotX:g,plotY:null===m?u:e.getThreshold(m),doCurve:!1}))};a=a||this.points;q&&(a=this.getStackPoints());for(b=0;b<a.length;b++)if(p=a[b].isNull,g=I(a[b].rectPlotX,a[b].plotX),f=I(a[b].yBottom,u),!p||n)n||B(b,b-1,"left"),p&&!q&&n||(k.push(a[b]),w.push({x:b,plotX:g,plotY:f})),n||B(b,b+1,"right");b=m.call(this,k,!0,!0);w.reversed=!0;p=m.call(this,w,!0,!0);p.length&&(p[0]="L");p=b.concat(p);m=
	m.call(this,k,!1,n);p.xMap=b.xMap;this.areaPath=p;return m},drawGraph:function(){this.areaPath=[];v.prototype.drawGraph.apply(this);var a=this,n=this.areaPath,t=this.options,q=[["area","highcharts-area",this.color,t.fillColor]];D(this.zones,function(e,b){q.push(["zone-area-"+b,"highcharts-area highcharts-zone-area-"+b+" "+e.className,e.color||a.color,e.fillColor||t.fillColor])});D(q,function(e){var b=e[0],p=a[b];p?(p.endX=n.xMap,p.animate({d:n})):(p=a[b]=a.chart.renderer.path(n).addClass(e[1]).attr({fill:I(e[3],
	E(e[2]).setOpacity(I(t.fillOpacity,.75)).get()),zIndex:0}).add(a.group),p.isArea=!0);p.startX=n.xMap;p.shiftUnit=t.step?2:1})},drawLegendSymbol:a.LegendSymbolMixin.drawRectangle})})(K);(function(a){var E=a.pick;a=a.seriesType;a("spline","line",{},{getPointSpline:function(a,H,I){var v=H.plotX,n=H.plotY,m=a[I-1];I=a[I+1];var z,t,q,e;if(m&&!m.isNull&&!1!==m.doCurve&&I&&!I.isNull&&!1!==I.doCurve){a=m.plotY;q=I.plotX;I=I.plotY;var b=0;z=(1.5*v+m.plotX)/2.5;t=(1.5*n+a)/2.5;q=(1.5*v+q)/2.5;e=(1.5*n+I)/2.5;
	q!==z&&(b=(e-t)*(q-v)/(q-z)+n-e);t+=b;e+=b;t>a&&t>n?(t=Math.max(a,n),e=2*n-t):t<a&&t<n&&(t=Math.min(a,n),e=2*n-t);e>I&&e>n?(e=Math.max(I,n),t=2*n-e):e<I&&e<n&&(e=Math.min(I,n),t=2*n-e);H.rightContX=q;H.rightContY=e}H=["C",E(m.rightContX,m.plotX),E(m.rightContY,m.plotY),E(z,v),E(t,n),v,n];m.rightContX=m.rightContY=null;return H}})})(K);(function(a){var E=a.seriesTypes.area.prototype,D=a.seriesType;D("areaspline","spline",a.defaultPlotOptions.area,{getStackPoints:E.getStackPoints,getGraphPath:E.getGraphPath,
	setStackCliffs:E.setStackCliffs,drawGraph:E.drawGraph,drawLegendSymbol:a.LegendSymbolMixin.drawRectangle})})(K);(function(a){var E=a.animObject,D=a.color,H=a.each,I=a.extend,v=a.isNumber,n=a.merge,m=a.pick,z=a.Series,t=a.seriesType,q=a.svg;t("column","line",{borderRadius:0,groupPadding:.2,marker:null,pointPadding:.1,minPointLength:0,cropThreshold:50,pointRange:null,states:{hover:{halo:!1,brightness:.1,shadow:!1},select:{color:"#cccccc",borderColor:"#000000",shadow:!1}},dataLabels:{align:null,verticalAlign:null,
	y:null},softThreshold:!1,startFromThreshold:!0,stickyTracking:!1,tooltip:{distance:6},threshold:0,borderColor:"#ffffff"},{cropShoulder:0,directTouch:!0,trackerGroups:["group","dataLabelsGroup"],negStacks:!0,init:function(){z.prototype.init.apply(this,arguments);var a=this,b=a.chart;b.hasRendered&&H(b.series,function(b){b.type===a.type&&(b.isDirty=!0)})},getColumnMetrics:function(){var a=this,b=a.options,p=a.xAxis,w=a.yAxis,k=p.reversed,l,g={},n=0;!1===b.grouping?n=1:H(a.chart.series,function(b){var d=
	b.options,f=b.yAxis,c;b.type===a.type&&b.visible&&w.len===f.len&&w.pos===f.pos&&(d.stacking?(l=b.stackKey,void 0===g[l]&&(g[l]=n++),c=g[l]):!1!==d.grouping&&(c=n++),b.columnIndex=c)});var r=Math.min(Math.abs(p.transA)*(p.ordinalSlope||b.pointRange||p.closestPointRange||p.tickInterval||1),p.len),u=r*b.groupPadding,f=(r-2*u)/(n||1),b=Math.min(b.maxPointWidth||p.len,m(b.pointWidth,f*(1-2*b.pointPadding)));a.columnMetrics={width:b,offset:(f-b)/2+(u+((a.columnIndex||0)+(k?1:0))*f-r/2)*(k?-1:1)};return a.columnMetrics},
	crispCol:function(a,b,p,m){var e=this.chart,l=this.borderWidth,g=-(l%2?.5:0),l=l%2?.5:1;e.inverted&&e.renderer.isVML&&(l+=1);p=Math.round(a+p)+g;a=Math.round(a)+g;m=Math.round(b+m)+l;g=.5>=Math.abs(b)&&.5<m;b=Math.round(b)+l;m-=b;g&&m&&(--b,m+=1);return{x:a,y:b,width:p-a,height:m}},translate:function(){var a=this,b=a.chart,p=a.options,w=a.dense=2>a.closestPointRange*a.xAxis.transA,w=a.borderWidth=m(p.borderWidth,w?0:1),k=a.yAxis,l=a.translatedThreshold=k.getThreshold(p.threshold),g=m(p.minPointLength,
	5),n=a.getColumnMetrics(),r=n.width,u=a.barW=Math.max(r,1+2*w),f=a.pointXOffset=n.offset;b.inverted&&(l-=.5);p.pointPadding&&(u=Math.ceil(u));z.prototype.translate.apply(a);H(a.points,function(e){var d=m(e.yBottom,l),x=999+Math.abs(d),x=Math.min(Math.max(-x,e.plotY),k.len+x),c=e.plotX+f,p=u,w=Math.min(x,d),A,n=Math.max(x,d)-w;Math.abs(n)<g&&g&&(n=g,A=!k.reversed&&!e.negative||k.reversed&&e.negative,w=Math.abs(w-l)>g?d-g:l-(A?g:0));e.barX=c;e.pointWidth=r;e.tooltipPos=b.inverted?[k.len+k.pos-b.plotLeft-
	x,a.xAxis.len-c-p/2,n]:[c+p/2,x+k.pos-b.plotTop,n];e.shapeType="rect";e.shapeArgs=a.crispCol.apply(a,e.isNull?[e.plotX,k.len/2,0,0]:[c,w,p,n])})},getSymbol:a.noop,drawLegendSymbol:a.LegendSymbolMixin.drawRectangle,drawGraph:function(){this.group[this.dense?"addClass":"removeClass"]("highcharts-dense-data")},pointAttribs:function(a,b){var e=this.options,m,k=this.pointAttrToOptions||{};m=k.stroke||"borderColor";var l=k["stroke-width"]||"borderWidth",g=a&&a.color||this.color,n=a[m]||e[m]||this.color||
	g,r=a[l]||e[l]||this[l]||0,k=e.dashStyle;a&&this.zones.length&&(g=(g=a.getZone())&&g.color||a.options.color||this.color);b&&(a=e.states[b],b=a.brightness,g=a.color||void 0!==b&&D(g).brighten(a.brightness).get()||g,n=a[m]||n,r=a[l]||r,k=a.dashStyle||k);m={fill:g,stroke:n,"stroke-width":r};e.borderRadius&&(m.r=e.borderRadius);k&&(m.dashstyle=k);return m},drawPoints:function(){var a=this,b=this.chart,p=a.options,m=b.renderer,k=p.animationLimit||250,l;H(a.points,function(e){var g=e.graphic;if(v(e.plotY)&&
	null!==e.y){l=e.shapeArgs;if(g)g[b.pointCount<k?"animate":"attr"](n(l));else e.graphic=g=m[e.shapeType](l).attr({"class":e.getClassName()}).add(e.group||a.group);g.attr(a.pointAttribs(e,e.selected&&"select")).shadow(p.shadow,null,p.stacking&&!p.borderRadius)}else g&&(e.graphic=g.destroy())})},animate:function(a){var b=this,e=this.yAxis,m=b.options,k=this.chart.inverted,l={};q&&(a?(l.scaleY=.001,a=Math.min(e.pos+e.len,Math.max(e.pos,e.toPixels(m.threshold))),k?l.translateX=a-e.len:l.translateY=a,b.group.attr(l)):
	(l[k?"translateX":"translateY"]=e.pos,b.group.animate(l,I(E(b.options.animation),{step:function(a,e){b.group.attr({scaleY:Math.max(.001,e.pos)})}})),b.animate=null))},remove:function(){var a=this,b=a.chart;b.hasRendered&&H(b.series,function(b){b.type===a.type&&(b.isDirty=!0)});z.prototype.remove.apply(a,arguments)}})})(K);(function(a){a=a.seriesType;a("bar","column",null,{inverted:!0})})(K);(function(a){var E=a.Series;a=a.seriesType;a("scatter","line",{lineWidth:0,marker:{enabled:!0},tooltip:{headerFormat:'\x3cspan style\x3d"color:{point.color}"\x3e\u25cf\x3c/span\x3e \x3cspan style\x3d"font-size: 0.85em"\x3e {series.name}\x3c/span\x3e\x3cbr/\x3e',
	pointFormat:"x: \x3cb\x3e{point.x}\x3c/b\x3e\x3cbr/\x3ey: \x3cb\x3e{point.y}\x3c/b\x3e\x3cbr/\x3e"}},{sorted:!1,requireSorting:!1,noSharedTooltip:!0,trackerGroups:["group","markerGroup","dataLabelsGroup"],takeOrdinalPosition:!1,kdDimensions:2,drawGraph:function(){this.options.lineWidth&&E.prototype.drawGraph.call(this)}})})(K);(function(a){var E=a.pick,D=a.relativeLength;a.CenteredSeriesMixin={getCenter:function(){var a=this.options,I=this.chart,v=2*(a.slicedOffset||0),n=I.plotWidth-2*v,I=I.plotHeight-
	2*v,m=a.center,m=[E(m[0],"50%"),E(m[1],"50%"),a.size||"100%",a.innerSize||0],z=Math.min(n,I),t,q;for(t=0;4>t;++t)q=m[t],a=2>t||2===t&&/%$/.test(q),m[t]=D(q,[n,I,z,m[2]][t])+(a?v:0);m[3]>m[2]&&(m[3]=m[2]);return m}}})(K);(function(a){var E=a.addEvent,D=a.defined,H=a.each,I=a.extend,v=a.inArray,n=a.noop,m=a.pick,z=a.Point,t=a.Series,q=a.seriesType,e=a.setAnimation;q("pie","line",{center:[null,null],clip:!1,colorByPoint:!0,dataLabels:{distance:30,enabled:!0,formatter:function(){return null===this.y?
	void 0:this.point.name},x:0},ignoreHiddenPoint:!0,legendType:"point",marker:null,size:null,showInLegend:!1,slicedOffset:10,stickyTracking:!1,tooltip:{followPointer:!0},borderColor:"#ffffff",borderWidth:1,states:{hover:{brightness:.1,shadow:!1}}},{isCartesian:!1,requireSorting:!1,directTouch:!0,noSharedTooltip:!0,trackerGroups:["group","dataLabelsGroup"],axisTypes:[],pointAttribs:a.seriesTypes.column.prototype.pointAttribs,animate:function(a){var b=this,e=b.points,k=b.startAngleRad;a||(H(e,function(a){var e=
	a.graphic,l=a.shapeArgs;e&&(e.attr({r:a.startR||b.center[3]/2,start:k,end:k}),e.animate({r:l.r,start:l.start,end:l.end},b.options.animation))}),b.animate=null)},updateTotals:function(){var a,e=0,m=this.points,k=m.length,l,g=this.options.ignoreHiddenPoint;for(a=0;a<k;a++)l=m[a],0>l.y&&(l.y=null),e+=g&&!l.visible?0:l.y;this.total=e;for(a=0;a<k;a++)l=m[a],l.percentage=0<e&&(l.visible||!g)?l.y/e*100:0,l.total=e},generatePoints:function(){t.prototype.generatePoints.call(this);this.updateTotals()},translate:function(a){this.generatePoints();
	var b=0,e=this.options,k=e.slicedOffset,l=k+(e.borderWidth||0),g,n,r,u=e.startAngle||0,f=this.startAngleRad=Math.PI/180*(u-90),u=(this.endAngleRad=Math.PI/180*(m(e.endAngle,u+360)-90))-f,q=this.points,d=e.dataLabels.distance,e=e.ignoreHiddenPoint,x,c=q.length,y;a||(this.center=a=this.getCenter());this.getX=function(b,c){r=Math.asin(Math.min((b-a[1])/(a[2]/2+d),1));return a[0]+(c?-1:1)*Math.cos(r)*(a[2]/2+d)};for(x=0;x<c;x++){y=q[x];g=f+b*u;if(!e||y.visible)b+=y.percentage/100;n=f+b*u;y.shapeType=
	"arc";y.shapeArgs={x:a[0],y:a[1],r:a[2]/2,innerR:a[3]/2,start:Math.round(1E3*g)/1E3,end:Math.round(1E3*n)/1E3};r=(n+g)/2;r>1.5*Math.PI?r-=2*Math.PI:r<-Math.PI/2&&(r+=2*Math.PI);y.slicedTranslation={translateX:Math.round(Math.cos(r)*k),translateY:Math.round(Math.sin(r)*k)};g=Math.cos(r)*a[2]/2;n=Math.sin(r)*a[2]/2;y.tooltipPos=[a[0]+.7*g,a[1]+.7*n];y.half=r<-Math.PI/2||r>Math.PI/2?1:0;y.angle=r;l=Math.min(l,d/5);y.labelPos=[a[0]+g+Math.cos(r)*d,a[1]+n+Math.sin(r)*d,a[0]+g+Math.cos(r)*l,a[1]+n+Math.sin(r)*
	l,a[0]+g,a[1]+n,0>d?"center":y.half?"right":"left",r]}},drawGraph:null,drawPoints:function(){var a=this,e=a.chart.renderer,m,k,l,g,n=a.options.shadow;n&&!a.shadowGroup&&(a.shadowGroup=e.g("shadow").add(a.group));H(a.points,function(b){if(null!==b.y){k=b.graphic;g=b.shapeArgs;m=b.sliced?b.slicedTranslation:{};var u=b.shadowGroup;n&&!u&&(u=b.shadowGroup=e.g("shadow").add(a.shadowGroup));u&&u.attr(m);l=a.pointAttribs(b,b.selected&&"select");k?k.setRadialReference(a.center).attr(l).animate(I(g,m)):(b.graphic=
	k=e[b.shapeType](g).addClass(b.getClassName()).setRadialReference(a.center).attr(m).add(a.group),b.visible||k.attr({visibility:"hidden"}),k.attr(l).attr({"stroke-linejoin":"round"}).shadow(n,u))}})},searchPoint:n,sortByAngle:function(a,e){a.sort(function(a,b){return void 0!==a.angle&&(b.angle-a.angle)*e})},drawLegendSymbol:a.LegendSymbolMixin.drawRectangle,getCenter:a.CenteredSeriesMixin.getCenter,getSymbol:n},{init:function(){z.prototype.init.apply(this,arguments);var a=this,e;a.name=m(a.name,"Slice");
	e=function(b){a.slice("select"===b.type)};E(a,"select",e);E(a,"unselect",e);return a},setVisible:function(a,e){var b=this,k=b.series,l=k.chart,g=k.options.ignoreHiddenPoint;e=m(e,g);a!==b.visible&&(b.visible=b.options.visible=a=void 0===a?!b.visible:a,k.options.data[v(b,k.data)]=b.options,H(["graphic","dataLabel","connector","shadowGroup"],function(e){if(b[e])b[e][a?"show":"hide"](!0)}),b.legendItem&&l.legend.colorizeItem(b,a),a||"hover"!==b.state||b.setState(""),g&&(k.isDirty=!0),e&&l.redraw())},
	slice:function(a,p,n){var b=this.series;e(n,b.chart);m(p,!0);this.sliced=this.options.sliced=a=D(a)?a:!this.sliced;b.options.data[v(this,b.data)]=this.options;a=a?this.slicedTranslation:{translateX:0,translateY:0};this.graphic.animate(a);this.shadowGroup&&this.shadowGroup.animate(a)},haloPath:function(a){var b=this.shapeArgs;return this.sliced||!this.visible?[]:this.series.chart.renderer.symbols.arc(b.x,b.y,b.r+a,b.r+a,{innerR:this.shapeArgs.r,start:b.start,end:b.end})}})})(K);(function(a){var E=
	a.addEvent,D=a.arrayMax,H=a.defined,I=a.each,v=a.extend,n=a.format,m=a.map,z=a.merge,t=a.noop,q=a.pick,e=a.relativeLength,b=a.Series,p=a.seriesTypes,w=a.stableSort;a.distribute=function(a,b){function e(a,b){return a.target-b.target}var k,l=!0,u=a,f=[],p;p=0;for(k=a.length;k--;)p+=a[k].size;if(p>b){w(a,function(a,b){return(b.rank||0)-(a.rank||0)});for(p=k=0;p<=b;)p+=a[k].size,k++;f=a.splice(k-1,a.length)}w(a,e);for(a=m(a,function(a){return{size:a.size,targets:[a.target]}});l;){for(k=a.length;k--;)l=
	a[k],p=(Math.min.apply(0,l.targets)+Math.max.apply(0,l.targets))/2,l.pos=Math.min(Math.max(0,p-l.size/2),b-l.size);k=a.length;for(l=!1;k--;)0<k&&a[k-1].pos+a[k-1].size>a[k].pos&&(a[k-1].size+=a[k].size,a[k-1].targets=a[k-1].targets.concat(a[k].targets),a[k-1].pos+a[k-1].size>b&&(a[k-1].pos=b-a[k-1].size),a.splice(k,1),l=!0)}k=0;I(a,function(a){var b=0;I(a.targets,function(){u[k].pos=a.pos+b;b+=u[k].size;k++})});u.push.apply(u,f);w(u,e)};b.prototype.drawDataLabels=function(){var a=this,b=a.options,
	e=b.dataLabels,p=a.points,r,u,f=a.hasRendered||0,m,d,x=q(e.defer,!0),c=a.chart.renderer;if(e.enabled||a._hasPointLabels)a.dlProcessOptions&&a.dlProcessOptions(e),d=a.plotGroup("dataLabelsGroup","data-labels",x&&!f?"hidden":"visible",e.zIndex||6),x&&(d.attr({opacity:+f}),f||E(a,"afterAnimate",function(){a.visible&&d.show(!0);d[b.animation?"animate":"attr"]({opacity:1},{duration:200})})),u=e,I(p,function(f){var g,k=f.dataLabel,l,h,x,p=f.connector,y=!k,w;r=f.dlOptions||f.options&&f.options.dataLabels;
	if(g=q(r&&r.enabled,u.enabled)&&null!==f.y)for(h in e=z(u,r),l=f.getLabelConfig(),m=e.format?n(e.format,l):e.formatter.call(l,e),w=e.style,x=e.rotation,w.color=q(e.color,w.color,a.color,"#000000"),"contrast"===w.color&&(w.color=e.inside||0>e.distance||b.stacking?c.getContrast(f.color||a.color):"#000000"),b.cursor&&(w.cursor=b.cursor),l={fill:e.backgroundColor,stroke:e.borderColor,"stroke-width":e.borderWidth,r:e.borderRadius||0,rotation:x,padding:e.padding,zIndex:1},l)void 0===l[h]&&delete l[h];!k||
	g&&H(m)?g&&H(m)&&(k?l.text=m:(k=f.dataLabel=c[x?"text":"label"](m,0,-9999,e.shape,null,null,e.useHTML,null,"data-label"),k.addClass("highcharts-data-label-color-"+f.colorIndex+" "+(e.className||"")+(e.useHTML?"highcharts-tracker":""))),k.attr(l),k.css(w).shadow(e.shadow),k.added||k.add(d),a.alignDataLabel(f,k,e,null,y)):(f.dataLabel=k.destroy(),p&&(f.connector=p.destroy()))})};b.prototype.alignDataLabel=function(a,b,e,p,r){var g=this.chart,f=g.inverted,k=q(a.plotX,-9999),d=q(a.plotY,-9999),l=b.getBBox(),
	c,y=e.rotation,m=e.align,A=this.visible&&(a.series.forceDL||g.isInsidePlot(k,Math.round(d),f)||p&&g.isInsidePlot(k,f?p.x+1:p.y+p.height-1,f)),n="justify"===q(e.overflow,"justify");A&&(c=e.style.fontSize,c=g.renderer.fontMetrics(c,b).b,p=v({x:f?g.plotWidth-d:k,y:Math.round(f?g.plotHeight-k:d),width:0,height:0},p),v(e,{width:l.width,height:l.height}),y?(n=!1,f=g.renderer.rotCorr(c,y),f={x:p.x+e.x+p.width/2+f.x,y:p.y+e.y+{top:0,middle:.5,bottom:1}[e.verticalAlign]*p.height},b[r?"attr":"animate"](f).attr({align:m}),
	k=(y+720)%360,k=180<k&&360>k,"left"===m?f.y-=k?l.height:0:"center"===m?(f.x-=l.width/2,f.y-=l.height/2):"right"===m&&(f.x-=l.width,f.y-=k?0:l.height)):(b.align(e,null,p),f=b.alignAttr),n?this.justifyDataLabel(b,e,f,l,p,r):q(e.crop,!0)&&(A=g.isInsidePlot(f.x,f.y)&&g.isInsidePlot(f.x+l.width,f.y+l.height)),e.shape&&!y&&b.attr({anchorX:a.plotX,anchorY:a.plotY}));A||(b.attr({y:-9999}),b.placed=!1)};b.prototype.justifyDataLabel=function(a,b,e,p,r,u){var f=this.chart,g=b.align,d=b.verticalAlign,k,c,l=a.box?
	0:a.padding||0;k=e.x+l;0>k&&("right"===g?b.align="left":b.x=-k,c=!0);k=e.x+p.width-l;k>f.plotWidth&&("left"===g?b.align="right":b.x=f.plotWidth-k,c=!0);k=e.y+l;0>k&&("bottom"===d?b.verticalAlign="top":b.y=-k,c=!0);k=e.y+p.height-l;k>f.plotHeight&&("top"===d?b.verticalAlign="bottom":b.y=f.plotHeight-k,c=!0);c&&(a.placed=!u,a.align(b,null,r))};p.pie&&(p.pie.prototype.drawDataLabels=function(){var e=this,l=e.data,g,p=e.chart,r=e.options.dataLabels,u=q(r.connectorPadding,10),f=q(r.connectorWidth,1),n=
	p.plotWidth,d=p.plotHeight,x,c=r.distance,y=e.center,w=y[2]/2,A=y[1],t=0<c,h,v,z,E,N=[[],[]],H,C,M,R,O=[0,0,0,0];e.visible&&(r.enabled||e._hasPointLabels)&&(b.prototype.drawDataLabels.apply(e),I(l,function(a){a.dataLabel&&a.visible&&(N[a.half].push(a),a.dataLabel._pos=null)}),I(N,function(b,f){var k,l,x=b.length,q,t,B;if(x)for(e.sortByAngle(b,f-.5),0<c&&(k=Math.max(0,A-w-c),l=Math.min(A+w+c,p.plotHeight),q=m(b,function(a){if(a.dataLabel)return B=a.dataLabel.getBBox().height||21,{target:a.labelPos[1]-
	k+B/2,size:B,rank:a.y}}),a.distribute(q,l+B-k)),R=0;R<x;R++)g=b[R],z=g.labelPos,h=g.dataLabel,M=!1===g.visible?"hidden":"inherit",t=z[1],q?void 0===q[R].pos?M="hidden":(E=q[R].size,C=k+q[R].pos):C=t,H=r.justify?y[0]+(f?-1:1)*(w+c):e.getX(C<k+2||C>l-2?t:C,f),h._attr={visibility:M,align:z[6]},h._pos={x:H+r.x+({left:u,right:-u}[z[6]]||0),y:C+r.y-10},z.x=H,z.y=C,null===e.options.size&&(v=h.width,H-v<u?O[3]=Math.max(Math.round(v-H+u),O[3]):H+v>n-u&&(O[1]=Math.max(Math.round(H+v-n+u),O[1])),0>C-E/2?O[0]=
	Math.max(Math.round(-C+E/2),O[0]):C+E/2>d&&(O[2]=Math.max(Math.round(C+E/2-d),O[2])))}),0===D(O)||this.verifyDataLabelOverflow(O))&&(this.placeDataLabels(),t&&f&&I(this.points,function(a){var b;x=a.connector;if((h=a.dataLabel)&&h._pos&&a.visible){M=h._attr.visibility;if(b=!x)a.connector=x=p.renderer.path().addClass("highcharts-data-label-connector highcharts-color-"+a.colorIndex).add(e.dataLabelsGroup),x.attr({"stroke-width":f,stroke:r.connectorColor||a.color||"#666666"});x[b?"attr":"animate"]({d:e.connectorPath(a.labelPos)});
	x.attr("visibility",M)}else x&&(a.connector=x.destroy())}))},p.pie.prototype.connectorPath=function(a){var b=a.x,e=a.y;return q(this.options.dataLabels.softConnector,!0)?["M",b+("left"===a[6]?5:-5),e,"C",b,e,2*a[2]-a[4],2*a[3]-a[5],a[2],a[3],"L",a[4],a[5]]:["M",b+("left"===a[6]?5:-5),e,"L",a[2],a[3],"L",a[4],a[5]]},p.pie.prototype.placeDataLabels=function(){I(this.points,function(a){var b=a.dataLabel;b&&a.visible&&((a=b._pos)?(b.attr(b._attr),b[b.moved?"animate":"attr"](a),b.moved=!0):b&&b.attr({y:-9999}))})},
	p.pie.prototype.alignDataLabel=t,p.pie.prototype.verifyDataLabelOverflow=function(a){var b=this.center,g=this.options,k=g.center,r=g.minSize||80,u,f;null!==k[0]?u=Math.max(b[2]-Math.max(a[1],a[3]),r):(u=Math.max(b[2]-a[1]-a[3],r),b[0]+=(a[3]-a[1])/2);null!==k[1]?u=Math.max(Math.min(u,b[2]-Math.max(a[0],a[2])),r):(u=Math.max(Math.min(u,b[2]-a[0]-a[2]),r),b[1]+=(a[0]-a[2])/2);u<b[2]?(b[2]=u,b[3]=Math.min(e(g.innerSize||0,u),u),this.translate(b),this.drawDataLabels&&this.drawDataLabels()):f=!0;return f});
	p.column&&(p.column.prototype.alignDataLabel=function(a,e,g,p,r){var k=this.chart.inverted,f=a.series,l=a.dlBox||a.shapeArgs,d=q(a.below,a.plotY>q(this.translatedThreshold,f.yAxis.len)),x=q(g.inside,!!this.options.stacking);l&&(p=z(l),0>p.y&&(p.height+=p.y,p.y=0),l=p.y+p.height-f.yAxis.len,0<l&&(p.height-=l),k&&(p={x:f.yAxis.len-p.y-p.height,y:f.xAxis.len-p.x-p.width,width:p.height,height:p.width}),x||(k?(p.x+=d?0:p.width,p.width=0):(p.y+=d?p.height:0,p.height=0)));g.align=q(g.align,!k||x?"center":
	d?"right":"left");g.verticalAlign=q(g.verticalAlign,k||x?"middle":d?"top":"bottom");b.prototype.alignDataLabel.call(this,a,e,g,p,r)})})(K);(function(a){var E=a.Chart,D=a.each,H=a.pick,I=a.addEvent;E.prototype.callbacks.push(function(a){function n(){var m=[];D(a.series,function(a){var n=a.options.dataLabels,q=a.dataLabelCollections||["dataLabel"];(n.enabled||a._hasPointLabels)&&!n.allowOverlap&&a.visible&&D(q,function(e){D(a.points,function(a){a[e]&&(a[e].labelrank=H(a.labelrank,a.shapeArgs&&a.shapeArgs.height),
	m.push(a[e]))})})});a.hideOverlappingLabels(m)}n();I(a,"redraw",n)});E.prototype.hideOverlappingLabels=function(a){var n=a.length,m,v,t,q,e,b,p,w,k,l=function(a,b,e,k,f,l,d,p){return!(f>a+e||f+d<a||l>b+k||l+p<b)};for(v=0;v<n;v++)if(m=a[v])m.oldOpacity=m.opacity,m.newOpacity=1;a.sort(function(a,b){return(b.labelrank||0)-(a.labelrank||0)});for(v=0;v<n;v++)for(t=a[v],m=v+1;m<n;++m)if(q=a[m],t&&q&&t.placed&&q.placed&&0!==t.newOpacity&&0!==q.newOpacity&&(e=t.alignAttr,b=q.alignAttr,p=t.parentGroup,w=q.parentGroup,
	k=2*(t.box?0:t.padding),e=l(e.x+p.translateX,e.y+p.translateY,t.width-k,t.height-k,b.x+w.translateX,b.y+w.translateY,q.width-k,q.height-k)))(t.labelrank<q.labelrank?t:q).newOpacity=0;D(a,function(a){var b,e;a&&(e=a.newOpacity,a.oldOpacity!==e&&a.placed&&(e?a.show(!0):b=function(){a.hide()},a.alignAttr.opacity=e,a[a.isOld?"animate":"attr"](a.alignAttr,null,b)),a.isOld=!0)})}})(K);(function(a){var E=a.addEvent,D=a.Chart,H=a.createElement,I=a.css,v=a.defaultOptions,n=a.defaultPlotOptions,m=a.each,z=
	a.extend,t=a.fireEvent,q=a.hasTouch,e=a.inArray,b=a.isObject,p=a.Legend,w=a.merge,k=a.pick,l=a.Point,g=a.Series,F=a.seriesTypes,r=a.svg;a=a.TrackerMixin={drawTrackerPoint:function(){var a=this,b=a.chart,e=b.pointer,d=function(a){for(var d=a.target,f;d&&!f;)f=d.point,d=d.parentNode;if(void 0!==f&&f!==b.hoverPoint)f.onMouseOver(a)};m(a.points,function(a){a.graphic&&(a.graphic.element.point=a);a.dataLabel&&(a.dataLabel.div?a.dataLabel.div.point=a:a.dataLabel.element.point=a)});a._hasTracking||(m(a.trackerGroups,
	function(b){if(a[b]){a[b].addClass("highcharts-tracker").on("mouseover",d).on("mouseout",function(a){e.onTrackerMouseOut(a)});if(q)a[b].on("touchstart",d);a.options.cursor&&a[b].css(I).css({cursor:a.options.cursor})}}),a._hasTracking=!0)},drawTrackerGraph:function(){var a=this,b=a.options,e=b.trackByArea,d=[].concat(e?a.areaPath:a.graphPath),g=d.length,c=a.chart,k=c.pointer,l=c.renderer,p=c.options.tooltip.snap,n=a.tracker,h,w=function(){if(c.hoverSeries!==a)a.onMouseOver()},t="rgba(192,192,192,"+
	(r?.0001:.002)+")";if(g&&!e)for(h=g+1;h--;)"M"===d[h]&&d.splice(h+1,0,d[h+1]-p,d[h+2],"L"),(h&&"M"===d[h]||h===g)&&d.splice(h,0,"L",d[h-2]+p,d[h-1]);n?n.attr({d:d}):a.graph&&(a.tracker=l.path(d).attr({"stroke-linejoin":"round",visibility:a.visible?"visible":"hidden",stroke:t,fill:e?t:"none","stroke-width":a.graph.strokeWidth()+(e?0:2*p),zIndex:2}).add(a.group),m([a.tracker,a.markerGroup],function(a){a.addClass("highcharts-tracker").on("mouseover",w).on("mouseout",function(a){k.onTrackerMouseOut(a)});
	b.cursor&&a.css({cursor:b.cursor});if(q)a.on("touchstart",w)}))}};F.column&&(F.column.prototype.drawTracker=a.drawTrackerPoint);F.pie&&(F.pie.prototype.drawTracker=a.drawTrackerPoint);F.scatter&&(F.scatter.prototype.drawTracker=a.drawTrackerPoint);z(p.prototype,{setItemEvents:function(a,b,e){var d=this,f=d.chart,c="highcharts-legend-"+(a.series?"point":"series")+"-active";(e?b:a.legendGroup).on("mouseover",function(){a.setState("hover");f.seriesGroup.addClass(c);b.css(d.options.itemHoverStyle)}).on("mouseout",
	function(){b.css(a.visible?d.itemStyle:d.itemHiddenStyle);f.seriesGroup.removeClass(c);a.setState()}).on("click",function(b){var d=function(){a.setVisible&&a.setVisible()};b={browserEvent:b};a.firePointEvent?a.firePointEvent("legendItemClick",b,d):t(a,"legendItemClick",b,d)})},createCheckboxForItem:function(a){a.checkbox=H("input",{type:"checkbox",checked:a.selected,defaultChecked:a.selected},this.options.itemCheckboxStyle,this.chart.container);E(a.checkbox,"click",function(b){t(a.series||a,"checkboxClick",
	{checked:b.target.checked,item:a},function(){a.select()})})}});v.legend.itemStyle.cursor="pointer";z(D.prototype,{showResetZoom:function(){var a=this,b=v.lang,e=a.options.chart.resetZoomButton,d=e.theme,g=d.states,c="chart"===e.relativeTo?null:"plotBox";this.resetZoomButton=a.renderer.button(b.resetZoom,null,null,function(){a.zoomOut()},d,g&&g.hover).attr({align:e.position.align,title:b.resetZoomTitle}).addClass("highcharts-reset-zoom").add().align(e.position,!1,c)},zoomOut:function(){var a=this;
	t(a,"selection",{resetSelection:!0},function(){a.zoom()})},zoom:function(a){var f,e=this.pointer,d=!1,g;!a||a.resetSelection?m(this.axes,function(a){f=a.zoom()}):m(a.xAxis.concat(a.yAxis),function(a){var b=a.axis;e[b.isXAxis?"zoomX":"zoomY"]&&(f=b.zoom(a.min,a.max),b.displayBtn&&(d=!0))});g=this.resetZoomButton;d&&!g?this.showResetZoom():!d&&b(g)&&(this.resetZoomButton=g.destroy());f&&this.redraw(k(this.options.chart.animation,a&&a.animation,100>this.pointCount))},pan:function(a,b){var f=this,d=f.hoverPoints,
	e;d&&m(d,function(a){a.setState()});m("xy"===b?[1,0]:[1],function(b){b=f[b?"xAxis":"yAxis"][0];var d=b.horiz,c=a[d?"chartX":"chartY"],d=d?"mouseDownX":"mouseDownY",g=f[d],k=(b.pointRange||0)/2,h=b.getExtremes(),l=b.toValue(g-c,!0)+k,k=b.toValue(g+b.len-c,!0)-k,p=k<l,g=p?k:l,l=p?l:k,k=Math.min(h.dataMin,h.min)-g,h=l-Math.max(h.dataMax,h.max);b.series.length&&0>k&&0>h&&(b.setExtremes(g,l,!1,!1,{trigger:"pan"}),e=!0);f[d]=c});e&&f.redraw(!1);I(f.container,{cursor:"move"})}});z(l.prototype,{select:function(a,
	b){var f=this,d=f.series,g=d.chart;a=k(a,!f.selected);f.firePointEvent(a?"select":"unselect",{accumulate:b},function(){f.selected=f.options.selected=a;d.options.data[e(f,d.data)]=f.options;f.setState(a&&"select");b||m(g.getSelectedPoints(),function(a){a.selected&&a!==f&&(a.selected=a.options.selected=!1,d.options.data[e(a,d.data)]=a.options,a.setState(""),a.firePointEvent("unselect"))})})},onMouseOver:function(a,b){var f=this.series,d=f.chart,e=d.tooltip,c=d.hoverPoint;if(this.series){if(!b){if(c&&
	c!==this)c.onMouseOut();if(d.hoverSeries!==f)f.onMouseOver();d.hoverPoint=this}!e||e.shared&&!f.noSharedTooltip?e||this.setState("hover"):(this.setState("hover"),e.refresh(this,a));this.firePointEvent("mouseOver")}},onMouseOut:function(){var a=this.series.chart,b=a.hoverPoints;this.firePointEvent("mouseOut");b&&-1!==e(this,b)||(this.setState(),a.hoverPoint=null)},importEvents:function(){if(!this.hasImportedEvents){var a=w(this.series.options.point,this.options).events,b;this.events=a;for(b in a)E(this,
	b,a[b]);this.hasImportedEvents=!0}},setState:function(a,b){var f=Math.floor(this.plotX),d=this.plotY,e=this.series,c=e.options.states[a]||{},g=n[e.type].marker&&e.options.marker,l=g&&!1===g.enabled,p=g&&g.states&&g.states[a]||{},r=!1===p.enabled,h=e.stateMarkerGraphic,u=this.marker||{},m=e.chart,q=e.halo,w,t=g&&e.markerAttribs;a=a||"";if(!(a===this.state&&!b||this.selected&&"select"!==a||!1===c.enabled||a&&(r||l&&!1===p.enabled)||a&&u.states&&u.states[a]&&!1===u.states[a].enabled)){t&&(w=e.markerAttribs(this,
	a));if(this.graphic)this.state&&this.graphic.removeClass("highcharts-point-"+this.state),a&&this.graphic.addClass("highcharts-point-"+a),this.graphic.attr(e.pointAttribs(this,a)),w&&this.graphic.animate(w,k(m.options.chart.animation,p.animation,g.animation)),h&&h.hide();else{if(a&&p){g=u.symbol||e.symbol;h&&h.currentSymbol!==g&&(h=h.destroy());if(h)h[b?"animate":"attr"]({x:w.x,y:w.y});else g&&(e.stateMarkerGraphic=h=m.renderer.symbol(g,w.x,w.y,w.width,w.height).add(e.markerGroup),h.currentSymbol=
	g);h&&h.attr(e.pointAttribs(this,a))}h&&(h[a&&m.isInsidePlot(f,d,m.inverted)?"show":"hide"](),h.element.point=this)}(f=c.halo)&&f.size?(q||(e.halo=q=m.renderer.path().add(t?e.markerGroup:e.group)),q[b?"animate":"attr"]({d:this.haloPath(f.size)}),q.attr({"class":"highcharts-halo highcharts-color-"+k(this.colorIndex,e.colorIndex)}),q.point=this,q.attr(z({fill:this.color||e.color,"fill-opacity":f.opacity,zIndex:-1},f.attributes))):q&&q.point&&q.point.haloPath&&q.animate({d:q.point.haloPath(0)});this.state=
	a}},haloPath:function(a){return this.series.chart.renderer.symbols.circle(Math.floor(this.plotX)-a,this.plotY-a,2*a,2*a)}});z(g.prototype,{onMouseOver:function(){var a=this.chart,b=a.hoverSeries;if(b&&b!==this)b.onMouseOut();this.options.events.mouseOver&&t(this,"mouseOver");this.setState("hover");a.hoverSeries=this},onMouseOut:function(){var a=this.options,b=this.chart,e=b.tooltip,d=b.hoverPoint;b.hoverSeries=null;if(d)d.onMouseOut();this&&a.events.mouseOut&&t(this,"mouseOut");!e||a.stickyTracking||
	e.shared&&!this.noSharedTooltip||e.hide();this.setState()},setState:function(a){var b=this,e=b.options,d=b.graph,g=e.states,c=e.lineWidth,e=0;a=a||"";if(b.state!==a&&(m([b.group,b.markerGroup],function(d){d&&(b.state&&d.removeClass("highcharts-series-"+b.state),a&&d.addClass("highcharts-series-"+a))}),b.state=a,!g[a]||!1!==g[a].enabled)&&(a&&(c=g[a].lineWidth||c+(g[a].lineWidthPlus||0)),d&&!d.dashstyle))for(g={"stroke-width":c},d.attr(g);b["zone-graph-"+e];)b["zone-graph-"+e].attr(g),e+=1},setVisible:function(a,
	b){var f=this,d=f.chart,e=f.legendItem,c,g=d.options.chart.ignoreHiddenSeries,k=f.visible;c=(f.visible=a=f.options.visible=f.userOptions.visible=void 0===a?!k:a)?"show":"hide";m(["group","dataLabelsGroup","markerGroup","tracker","tt"],function(a){if(f[a])f[a][c]()});if(d.hoverSeries===f||(d.hoverPoint&&d.hoverPoint.series)===f)f.onMouseOut();e&&d.legend.colorizeItem(f,a);f.isDirty=!0;f.options.stacking&&m(d.series,function(a){a.options.stacking&&a.visible&&(a.isDirty=!0)});m(f.linkedSeries,function(b){b.setVisible(a,
	!1)});g&&(d.isDirtyBox=!0);!1!==b&&d.redraw();t(f,c)},show:function(){this.setVisible(!0)},hide:function(){this.setVisible(!1)},select:function(a){this.selected=a=void 0===a?!this.selected:a;this.checkbox&&(this.checkbox.checked=a);t(this,a?"select":"unselect")},drawTracker:a.drawTrackerGraph})})(K);(function(a){var E=a.Chart,D=a.each,H=a.inArray,I=a.isObject,v=a.pick,n=a.splat;E.prototype.setResponsive=function(a){var m=this.options.responsive;m&&m.rules&&D(m.rules,function(m){this.matchResponsiveRule(m,
	a)},this)};E.prototype.matchResponsiveRule=function(m,n){var t=this.respRules,q=m.condition,e;e=q.callback||function(){return this.chartWidth<=v(q.maxWidth,Number.MAX_VALUE)&&this.chartHeight<=v(q.maxHeight,Number.MAX_VALUE)&&this.chartWidth>=v(q.minWidth,0)&&this.chartHeight>=v(q.minHeight,0)};void 0===m._id&&(m._id=a.uniqueKey());e=e.call(this);!t[m._id]&&e?m.chartOptions&&(t[m._id]=this.currentOptions(m.chartOptions),this.update(m.chartOptions,n)):t[m._id]&&!e&&(this.update(t[m._id],n),delete t[m._id])};
	E.prototype.currentOptions=function(a){function m(a,e,b,p){var w,k;for(w in a)if(!p&&-1<H(w,["series","xAxis","yAxis"]))for(a[w]=n(a[w]),b[w]=[],k=0;k<a[w].length;k++)b[w][k]={},m(a[w][k],e[w][k],b[w][k],p+1);else I(a[w])?(b[w]={},m(a[w],e[w]||{},b[w],p+1)):b[w]=e[w]||null}var t={};m(a,this.options,t,0);return t}})(K);(function(a){var E=a.addEvent,D=a.Axis,H=a.Chart,I=a.css,v=a.dateFormat,n=a.defined,m=a.each,z=a.extend,t=a.noop,q=a.Series,e=a.timeUnits;a=a.wrap;a(q.prototype,"init",function(a){var b;
	a.apply(this,Array.prototype.slice.call(arguments,1));(b=this.xAxis)&&b.options.ordinal&&E(this,"updatedData",function(){delete b.ordinalIndex})});a(D.prototype,"getTimeTicks",function(a,p,m,k,l,g,q,r){var b=0,f,w,d={},x,c,y,t=[],A=-Number.MAX_VALUE,J=this.options.tickPixelInterval;if(!this.options.ordinal&&!this.options.breaks||!g||3>g.length||void 0===m)return a.call(this,p,m,k,l);c=g.length;for(f=0;f<c;f++){y=f&&g[f-1]>k;g[f]<m&&(b=f);if(f===c-1||g[f+1]-g[f]>5*q||y){if(g[f]>A){for(w=a.call(this,
	p,g[b],g[f],l);w.length&&w[0]<=A;)w.shift();w.length&&(A=w[w.length-1]);t=t.concat(w)}b=f+1}if(y)break}a=w.info;if(r&&a.unitRange<=e.hour){f=t.length-1;for(b=1;b<f;b++)v("%d",t[b])!==v("%d",t[b-1])&&(d[t[b]]="day",x=!0);x&&(d[t[0]]="day");a.higherRanks=d}t.info=a;if(r&&n(J)){r=a=t.length;f=[];var h;for(x=[];r--;)b=this.translate(t[r]),h&&(x[r]=h-b),f[r]=h=b;x.sort();x=x[Math.floor(x.length/2)];x<.6*J&&(x=null);r=t[a-1]>k?a-1:a;for(h=void 0;r--;)b=f[r],k=Math.abs(h-b),h&&k<.8*J&&(null===x||k<.8*x)?
	(d[t[r]]&&!d[t[r+1]]?(k=r+1,h=b):k=r,t.splice(k,1)):h=b}return t});z(D.prototype,{beforeSetTickPositions:function(){var a,e=[],n=!1,k,l=this.getExtremes(),g=l.min,q=l.max,r,u=this.isXAxis&&!!this.options.breaks,l=this.options.ordinal,f=this.chart.options.chart.ignoreHiddenSeries;if(l||u){m(this.series,function(b,d){if(!(f&&!1===b.visible||!1===b.takeOrdinalPosition&&!u)&&(e=e.concat(b.processedXData),a=e.length,e.sort(function(a,b){return a-b}),a))for(d=a-1;d--;)e[d]===e[d+1]&&e.splice(d,1)});a=e.length;
	if(2<a){k=e[1]-e[0];for(r=a-1;r--&&!n;)e[r+1]-e[r]!==k&&(n=!0);!this.options.keepOrdinalPadding&&(e[0]-g>k||q-e[e.length-1]>k)&&(n=!0)}n?(this.ordinalPositions=e,k=this.ordinal2lin(Math.max(g,e[0]),!0),r=Math.max(this.ordinal2lin(Math.min(q,e[e.length-1]),!0),1),this.ordinalSlope=q=(q-g)/(r-k),this.ordinalOffset=g-k*q):this.ordinalPositions=this.ordinalSlope=this.ordinalOffset=void 0}this.isOrdinal=l&&n;this.groupIntervalFactor=null},val2lin:function(a,e){var b=this.ordinalPositions;if(b){var k=b.length,
	l,g;for(l=k;l--;)if(b[l]===a){g=l;break}for(l=k-1;l--;)if(a>b[l]||0===l){a=(a-b[l])/(b[l+1]-b[l]);g=l+a;break}e=e?g:this.ordinalSlope*(g||0)+this.ordinalOffset}else e=a;return e},lin2val:function(a,e){var b=this.ordinalPositions;if(b){var k=this.ordinalSlope,l=this.ordinalOffset,g=b.length-1,p;if(e)0>a?a=b[0]:a>g?a=b[g]:(g=Math.floor(a),p=a-g);else for(;g--;)if(e=k*g+l,a>=e){k=k*(g+1)+l;p=(a-e)/(k-e);break}return void 0!==p&&void 0!==b[g]?b[g]+(p?p*(b[g+1]-b[g]):0):a}return a},getExtendedPositions:function(){var a=
	this.chart,e=this.series[0].currentDataGrouping,n=this.ordinalIndex,k=e?e.count+e.unitName:"raw",l=this.getExtremes(),g,q;n||(n=this.ordinalIndex={});n[k]||(g={series:[],chart:a,getExtremes:function(){return{min:l.dataMin,max:l.dataMax}},options:{ordinal:!0},val2lin:D.prototype.val2lin},m(this.series,function(b){q={xAxis:g,xData:b.xData,chart:a,destroyGroupedData:t};q.options={dataGrouping:e?{enabled:!0,forced:!0,approximation:"open",units:[[e.unitName,[e.count]]]}:{enabled:!1}};b.processData.apply(q);
	g.series.push(q)}),this.beforeSetTickPositions.apply(g),n[k]=g.ordinalPositions);return n[k]},getGroupIntervalFactor:function(a,e,m){var b;m=m.processedXData;var l=m.length,g=[];b=this.groupIntervalFactor;if(!b){for(b=0;b<l-1;b++)g[b]=m[b+1]-m[b];g.sort(function(a,b){return a-b});g=g[Math.floor(l/2)];a=Math.max(a,m[0]);e=Math.min(e,m[l-1]);this.groupIntervalFactor=b=l*g/(e-a)}return b},postProcessTickInterval:function(a){var b=this.ordinalSlope;return b?this.options.breaks?this.closestPointRange:
	a/(b/this.closestPointRange):a}});D.prototype.ordinal2lin=D.prototype.val2lin;a(H.prototype,"pan",function(a,e){var b=this.xAxis[0],k=e.chartX,l=!1;if(b.options.ordinal&&b.series.length){var g=this.mouseDownX,p=b.getExtremes(),r=p.dataMax,n=p.min,f=p.max,q=this.hoverPoints,d=b.closestPointRange,g=(g-k)/(b.translationSlope*(b.ordinalSlope||d)),x={ordinalPositions:b.getExtendedPositions()},d=b.lin2val,c=b.val2lin,y;x.ordinalPositions?1<Math.abs(g)&&(q&&m(q,function(a){a.setState()}),0>g?(q=x,y=b.ordinalPositions?
	b:x):(q=b.ordinalPositions?b:x,y=x),x=y.ordinalPositions,r>x[x.length-1]&&x.push(r),this.fixedRange=f-n,g=b.toFixedRange(null,null,d.apply(q,[c.apply(q,[n,!0])+g,!0]),d.apply(y,[c.apply(y,[f,!0])+g,!0])),g.min>=Math.min(p.dataMin,n)&&g.max<=Math.max(r,f)&&b.setExtremes(g.min,g.max,!0,!1,{trigger:"pan"}),this.mouseDownX=k,I(this.container,{cursor:"move"})):l=!0}else l=!0;l&&a.apply(this,Array.prototype.slice.call(arguments,1))});q.prototype.gappedPath=function(){var a=this.options.gapSize,e=this.points.slice(),
	m=e.length-1;if(a&&0<m)for(;m--;)e[m+1].x-e[m].x>this.closestPointRange*a&&e.splice(m+1,0,{isNull:!0});return this.getGraphPath(e)}})(K);(function(a){function E(){return Array.prototype.slice.call(arguments,1)}function D(a){a.apply(this);this.drawBreaks(this.xAxis,["x"]);this.drawBreaks(this.yAxis,H(this.pointArrayMap,["y"]))}var H=a.pick,I=a.wrap,v=a.each,n=a.extend,m=a.isArray,z=a.fireEvent,t=a.Axis,q=a.Series;n(t.prototype,{isInBreak:function(a,b){var e=a.repeat||Infinity,m=a.from,k=a.to-a.from;
	b=b>=m?(b-m)%e:e-(m-b)%e;return a.inclusive?b<=k:b<k&&0!==b},isInAnyBreak:function(a,b){var e=this.options.breaks,m=e&&e.length,k,l,g;if(m){for(;m--;)this.isInBreak(e[m],a)&&(k=!0,l||(l=H(e[m].showPoints,this.isXAxis?!1:!0)));g=k&&b?k&&!l:k}return g}});I(t.prototype,"setTickPositions",function(a){a.apply(this,Array.prototype.slice.call(arguments,1));if(this.options.breaks){var b=this.tickPositions,e=this.tickPositions.info,m=[],k;for(k=0;k<b.length;k++)this.isInAnyBreak(b[k])||m.push(b[k]);this.tickPositions=
	m;this.tickPositions.info=e}});I(t.prototype,"init",function(a,b,p){var e=this;p.breaks&&p.breaks.length&&(p.ordinal=!1);a.call(this,b,p);a=this.options.breaks;e.isBroken=m(a)&&!!a.length;e.isBroken&&(e.val2lin=function(a){var b=a,g,k;for(k=0;k<e.breakArray.length;k++)if(g=e.breakArray[k],g.to<=a)b-=g.len;else if(g.from>=a)break;else if(e.isInBreak(g,a)){b-=a-g.from;break}return b},e.lin2val=function(a){var b,g;for(g=0;g<e.breakArray.length&&!(b=e.breakArray[g],b.from>=a);g++)b.to<a?a+=b.len:e.isInBreak(b,
	a)&&(a+=b.len);return a},e.setExtremes=function(a,b,e,m,r){for(;this.isInAnyBreak(a);)a-=this.closestPointRange;for(;this.isInAnyBreak(b);)b-=this.closestPointRange;t.prototype.setExtremes.call(this,a,b,e,m,r)},e.setAxisTranslation=function(a){t.prototype.setAxisTranslation.call(this,a);var b=e.options.breaks;a=[];var g=[],k=0,m,p,f=e.userMin||e.min,n=e.userMax||e.max,d,x;for(x in b)p=b[x],m=p.repeat||Infinity,e.isInBreak(p,f)&&(f+=p.to%m-f%m),e.isInBreak(p,n)&&(n-=n%m-p.from%m);for(x in b){p=b[x];
	d=p.from;for(m=p.repeat||Infinity;d-m>f;)d-=m;for(;d<f;)d+=m;for(;d<n;d+=m)a.push({value:d,move:"in"}),a.push({value:d+(p.to-p.from),move:"out",size:p.breakSize})}a.sort(function(a,b){return a.value===b.value?("in"===a.move?0:1)-("in"===b.move?0:1):a.value-b.value});b=0;d=f;for(x in a)p=a[x],b+="in"===p.move?1:-1,1===b&&"in"===p.move&&(d=p.value),0===b&&(g.push({from:d,to:p.value,len:p.value-d-(p.size||0)}),k+=p.value-d-(p.size||0));e.breakArray=g;z(e,"afterBreaks");e.transA*=(n-e.min)/(n-f-k);e.min=
	f;e.max=n})});I(q.prototype,"generatePoints",function(a){a.apply(this,E(arguments));var b=this.xAxis,e=this.yAxis,m=this.points,k,l=m.length,g=this.options.connectNulls,n;if(b&&e&&(b.options.breaks||e.options.breaks))for(;l--;)k=m[l],n=null===k.y&&!1===g,n||!b.isInAnyBreak(k.x,!0)&&!e.isInAnyBreak(k.y,!0)||(m.splice(l,1),this.data[l]&&this.data[l].destroyElements())});a.Series.prototype.drawBreaks=function(a,b){var e=this,m=e.points,k,l,g,n;a&&v(b,function(b){k=a.breakArray||[];l=a.isXAxis?a.min:
	H(e.options.threshold,a.min);v(m,function(e){n=H(e["stack"+b.toUpperCase()],e[b]);v(k,function(b){g=!1;if(l<b.from&&n>b.to||l>b.from&&n<b.from)g="pointBreak";else if(l<b.from&&n>b.from&&n<b.to||l>b.from&&n>b.to&&n<b.from)g="pointInBreak";g&&z(a,g,{point:e,brk:b})})})})};I(a.seriesTypes.column.prototype,"drawPoints",D);I(a.Series.prototype,"drawPoints",D)})(K);(function(a){var E=a.arrayMax,D=a.arrayMin,H=a.Axis,I=a.defaultPlotOptions,v=a.defined,n=a.each,m=a.extend,z=a.format,t=a.isNumber,q=a.merge,
	e=a.pick,b=a.Point,p=a.Tooltip,w=a.wrap,k=a.Series.prototype,l=k.processData,g=k.generatePoints,F=k.destroy,r={approximation:"average",groupPixelWidth:2,dateTimeLabelFormats:{millisecond:["%A, %b %e, %H:%M:%S.%L","%A, %b %e, %H:%M:%S.%L","-%H:%M:%S.%L"],second:["%A, %b %e, %H:%M:%S","%A, %b %e, %H:%M:%S","-%H:%M:%S"],minute:["%A, %b %e, %H:%M","%A, %b %e, %H:%M","-%H:%M"],hour:["%A, %b %e, %H:%M","%A, %b %e, %H:%M","-%H:%M"],day:["%A, %b %e, %Y","%A, %b %e","-%A, %b %e, %Y"],week:["Week from %A, %b %e, %Y",
	"%A, %b %e","-%A, %b %e, %Y"],month:["%B %Y","%B","-%B %Y"],year:["%Y","%Y","-%Y"]}},u={line:{},spline:{},area:{},areaspline:{},column:{approximation:"sum",groupPixelWidth:10},arearange:{approximation:"range"},areasplinerange:{approximation:"range"},columnrange:{approximation:"range",groupPixelWidth:10},candlestick:{approximation:"ohlc",groupPixelWidth:10},ohlc:{approximation:"ohlc",groupPixelWidth:5}},f=a.defaultDataGroupingUnits=[["millisecond",[1,2,5,10,20,25,50,100,200,500]],["second",[1,2,5,
	10,15,30]],["minute",[1,2,5,10,15,30]],["hour",[1,2,3,4,6,8,12]],["day",[1]],["week",[1]],["month",[1,3,6]],["year",null]],B={sum:function(a){var b=a.length,d;if(!b&&a.hasNulls)d=null;else if(b)for(d=0;b--;)d+=a[b];return d},average:function(a){var b=a.length;a=B.sum(a);t(a)&&b&&(a/=b);return a},open:function(a){return a.length?a[0]:a.hasNulls?null:void 0},high:function(a){return a.length?E(a):a.hasNulls?null:void 0},low:function(a){return a.length?D(a):a.hasNulls?null:void 0},close:function(a){return a.length?
	a[a.length-1]:a.hasNulls?null:void 0},ohlc:function(a,b,c,e){a=B.open(a);b=B.high(b);c=B.low(c);e=B.close(e);if(t(a)||t(b)||t(c)||t(e))return[a,b,c,e]},range:function(a,b){a=B.low(a);b=B.high(b);if(t(a)||t(b))return[a,b]}};k.groupData=function(a,b,c,e){var d=this.data,f=this.options.data,g=[],h=[],k=[],l=a.length,m,p,n=!!b,r=[[],[],[],[]];e="function"===typeof e?e:B[e];var q=this.pointArrayMap,y=q&&q.length,u,x=0;for(u=p=0;u<=l&&!(a[u]>=c[0]);u++);for(u;u<=l;u++){for(;(void 0!==c[x+1]&&a[u]>=c[x+
	1]||u===l)&&(m=c[x],this.dataGroupInfo={start:p,length:r[0].length},p=e.apply(this,r),void 0!==p&&(g.push(m),h.push(p),k.push(this.dataGroupInfo)),p=u,r[0]=[],r[1]=[],r[2]=[],r[3]=[],x+=1,u!==l););if(u===l)break;if(q){m=this.cropStart+u;m=d&&d[m]||this.pointClass.prototype.applyOptions.apply({series:this},[f[m]]);var w,v;for(w=0;w<y;w++)v=m[q[w]],t(v)?r[w].push(v):null===v&&(r[w].hasNulls=!0)}else m=n?b[u]:null,t(m)?r[0].push(m):null===m&&(r[0].hasNulls=!0)}return[g,h,k]};k.processData=function(){var a=
	this.chart,b=this.options.dataGrouping,c=!1!==this.allowDG&&b&&e(b.enabled,a.options.isStock),g=this.visible||!a.options.chart.ignoreHiddenSeries,m;this.forceCrop=c;this.groupPixelWidth=null;this.hasProcessed=!0;if(!1!==l.apply(this,arguments)&&c&&g){this.destroyGroupedData();var p=this.processedXData,r=this.processedYData,h=a.plotSizeX,a=this.xAxis,n=a.options.ordinal,u=this.groupPixelWidth=a.getGroupPixelWidth&&a.getGroupPixelWidth();if(u){this.isDirty=m=!0;g=a.getExtremes();c=g.min;g=g.max;n=n&&
	a.getGroupIntervalFactor(c,g,this)||1;h=u*(g-c)/h*n;u=a.getTimeTicks(a.normalizeTimeTickInterval(h,b.units||f),Math.min(c,p[0]),Math.max(g,p[p.length-1]),a.options.startOfWeek,p,this.closestPointRange);p=k.groupData.apply(this,[p,r,u,b.approximation]);r=p[0];n=p[1];if(b.smoothed){b=r.length-1;for(r[b]=Math.min(r[b],g);b--&&0<b;)r[b]+=h/2;r[0]=Math.max(r[0],c)}this.currentDataGrouping=u.info;this.closestPointRange=u.info.totalRange;this.groupMap=p[2];v(r[0])&&r[0]<a.dataMin&&(a.min===a.dataMin&&(a.min=
	r[0]),a.dataMin=r[0]);this.processedXData=r;this.processedYData=n}else this.currentDataGrouping=this.groupMap=null;this.hasGroupedData=m}};k.destroyGroupedData=function(){var a=this.groupedData;n(a||[],function(b,d){b&&(a[d]=b.destroy?b.destroy():null)});this.groupedData=null};k.generatePoints=function(){g.apply(this);this.destroyGroupedData();this.groupedData=this.hasGroupedData?this.points:null};w(b.prototype,"update",function(b){this.dataGroup?a.error(24):b.apply(this,[].slice.call(arguments,1))});
	w(p.prototype,"tooltipFooterHeaderFormatter",function(b,e,c){var d=e.series,f=d.tooltipOptions,g=d.options.dataGrouping,k=f.xDateFormat,h,l=d.xAxis,p=a.dateFormat;return l&&"datetime"===l.options.type&&g&&t(e.key)?(b=d.currentDataGrouping,g=g.dateTimeLabelFormats,b?(l=g[b.unitName],1===b.count?k=l[0]:(k=l[1],h=l[2])):!k&&g&&(k=this.getXDateFormat(e,f,l)),k=p(k,e.key),h&&(k+=p(h,e.key+b.totalRange-1)),z(f[(c?"footer":"header")+"Format"],{point:m(e.point,{key:k}),series:d})):b.call(this,e,c)});k.destroy=
	function(){for(var a=this.groupedData||[],b=a.length;b--;)a[b]&&a[b].destroy();F.apply(this)};w(k,"setOptions",function(a,b){a=a.call(this,b);var d=this.type,e=this.chart.options.plotOptions,f=I[d].dataGrouping;u[d]&&(f||(f=q(r,u[d])),a.dataGrouping=q(f,e.series&&e.series.dataGrouping,e[d].dataGrouping,b.dataGrouping));this.chart.options.isStock&&(this.requireSorting=!0);return a});w(H.prototype,"setScale",function(a){a.call(this);n(this.series,function(a){a.hasProcessed=!1})});H.prototype.getGroupPixelWidth=
	function(){var a=this.series,b=a.length,c,e=0,f=!1,g;for(c=b;c--;)(g=a[c].options.dataGrouping)&&(e=Math.max(e,g.groupPixelWidth));for(c=b;c--;)(g=a[c].options.dataGrouping)&&a[c].hasProcessed&&(b=(a[c].processedXData||a[c].data).length,a[c].groupPixelWidth||b>this.chart.plotSizeX/e||b&&g.forced)&&(f=!0);return f?e:0};H.prototype.setDataGrouping=function(a,b){var c;b=e(b,!0);a||(a={forced:!1,units:null});if(this instanceof H)for(c=this.series.length;c--;)this.series[c].update({dataGrouping:a},!1);
	else n(this.chart.options.series,function(b){b.dataGrouping=a},!1);b&&this.chart.redraw()}})(K);(function(a){var E=a.each,D=a.Point,H=a.seriesType,I=a.seriesTypes;H("ohlc","column",{lineWidth:1,tooltip:{pointFormat:'\x3cspan style\x3d"color:{point.color}"\x3e\u25cf\x3c/span\x3e \x3cb\x3e {series.name}\x3c/b\x3e\x3cbr/\x3eOpen: {point.open}\x3cbr/\x3eHigh: {point.high}\x3cbr/\x3eLow: {point.low}\x3cbr/\x3eClose: {point.close}\x3cbr/\x3e'},threshold:null,states:{hover:{lineWidth:3}}},{pointArrayMap:["open",
	"high","low","close"],toYData:function(a){return[a.open,a.high,a.low,a.close]},pointValKey:"high",pointAttrToOptions:{stroke:"color","stroke-width":"lineWidth"},pointAttribs:function(a,n){n=I.column.prototype.pointAttribs.call(this,a,n);var m=this.options;delete n.fill;!a.options.color&&m.upColor&&a.open<a.close&&(n.stroke=m.upColor);return n},translate:function(){var a=this,n=a.yAxis,m=!!a.modifyValue,z=["plotOpen","yBottom","plotClose"];I.column.prototype.translate.apply(a);E(a.points,function(t){E([t.open,
	t.low,t.close],function(q,e){null!==q&&(m&&(q=a.modifyValue(q)),t[z[e]]=n.toPixels(q,!0))})})},drawPoints:function(){var a=this,n=a.chart;E(a.points,function(m){var v,t,q,e,b=m.graphic,p,w=!b;void 0!==m.plotY&&(b||(m.graphic=b=n.renderer.path().add(a.group)),b.attr(a.pointAttribs(m,m.selected&&"select")),t=b.strokeWidth()%2/2,p=Math.round(m.plotX)-t,q=Math.round(m.shapeArgs.width/2),e=["M",p,Math.round(m.yBottom),"L",p,Math.round(m.plotY)],null!==m.open&&(v=Math.round(m.plotOpen)+t,e.push("M",p,v,
	"L",p-q,v)),null!==m.close&&(v=Math.round(m.plotClose)+t,e.push("M",p,v,"L",p+q,v)),b[w?"attr":"animate"]({d:e}).addClass(m.getClassName(),!0))})},animate:null},{getClassName:function(){return D.prototype.getClassName.call(this)+(this.open<this.close?" highcharts-point-up":" highcharts-point-down")}})})(K);(function(a){var E=a.defaultPlotOptions,D=a.each,H=a.merge,I=a.seriesType,v=a.seriesTypes;I("candlestick","ohlc",H(E.column,{states:{hover:{lineWidth:2}},tooltip:E.ohlc.tooltip,threshold:null,lineColor:"#000000",
	lineWidth:1,upColor:"#ffffff"}),{pointAttribs:function(a,m){var n=v.column.prototype.pointAttribs.call(this,a,m),t=this.options,q=a.open<a.close,e=t.lineColor||this.color;n["stroke-width"]=t.lineWidth;n.fill=a.options.color||(q?t.upColor||this.color:this.color);n.stroke=a.lineColor||(q?t.upLineColor||e:e);m&&(a=t.states[m],n.fill=a.color||n.fill,n.stroke=a.lineColor||n.stroke,n["stroke-width"]=a.lineWidth||n["stroke-width"]);return n},drawPoints:function(){var a=this,m=a.chart;D(a.points,function(n){var t=
	n.graphic,q,e,b,p,w,k,l,g=!t;void 0!==n.plotY&&(t||(n.graphic=t=m.renderer.path().add(a.group)),t.attr(a.pointAttribs(n,n.selected&&"select")).shadow(a.options.shadow),w=t.strokeWidth()%2/2,k=Math.round(n.plotX)-w,q=n.plotOpen,e=n.plotClose,b=Math.min(q,e),q=Math.max(q,e),l=Math.round(n.shapeArgs.width/2),e=Math.round(b)!==Math.round(n.plotY),p=q!==n.yBottom,b=Math.round(b)+w,q=Math.round(q)+w,w=[],w.push("M",k-l,q,"L",k-l,b,"L",k+l,b,"L",k+l,q,"Z","M",k,b,"L",k,e?Math.round(n.plotY):b,"M",k,q,"L",
	k,p?Math.round(n.yBottom):q),t[g?"attr":"animate"]({d:w}).addClass(n.getClassName(),!0))})}})})(K);(function(a){var E=a.addEvent,D=a.each,H=a.merge,I=a.noop,v=a.Renderer,n=a.seriesType,m=a.seriesTypes,z=a.TrackerMixin,t=a.VMLRenderer,q=a.SVGRenderer.prototype.symbols;n("flags","column",{pointRange:0,shape:"flag",stackDistance:12,textAlign:"center",tooltip:{pointFormat:"{point.text}\x3cbr/\x3e"},threshold:null,y:-30,fillColor:"#ffffff",lineWidth:1,states:{hover:{lineColor:"#000000",fillColor:"#ccd6eb"}},
	style:{fontSize:"11px",fontWeight:"bold"}},{sorted:!1,noSharedTooltip:!0,allowDG:!1,takeOrdinalPosition:!1,trackerGroups:["markerGroup"],forceCrop:!0,init:a.Series.prototype.init,pointAttribs:function(a,b){var e=this.options,m=a&&a.color||this.color,k=e.lineColor,l=a&&a.lineWidth;a=a&&a.fillColor||e.fillColor;b&&(a=e.states[b].fillColor,k=e.states[b].lineColor,l=e.states[b].lineWidth);return{fill:a||m,stroke:k||m,"stroke-width":l||e.lineWidth||0}},translate:function(){m.column.prototype.translate.apply(this);
	var a=this.options,b=this.chart,p=this.points,n=p.length-1,k,l,g=a.onSeries;k=g&&b.get(g);var a=a.onKey||"y",g=k&&k.options.step,q=k&&k.points,r=q&&q.length,u=this.xAxis,f=u.getExtremes(),t=0,d,x,c;if(k&&k.visible&&r)for(t=(k.pointXOffset||0)+(k.barW||0)/2,k=k.currentDataGrouping,x=q[r-1].x+(k?k.totalRange:0),p.sort(function(a,b){return a.x-b.x}),a="plot"+a[0].toUpperCase()+a.substr(1);r--&&p[n]&&!(k=p[n],d=q[r],d.x<=k.x&&void 0!==d[a]&&(k.x<=x&&(k.plotY=d[a],d.x<k.x&&!g&&(c=q[r+1])&&void 0!==c[a]&&
	(k.plotY+=(k.x-d.x)/(c.x-d.x)*(c[a]-d[a]))),n--,r++,0>n)););D(p,function(a,c){var d;void 0===a.plotY&&(a.x>=f.min&&a.x<=f.max?a.plotY=b.chartHeight-u.bottom-(u.opposite?u.height:0)+u.offset-b.plotTop:a.shapeArgs={});a.plotX+=t;(l=p[c-1])&&l.plotX===a.plotX&&(void 0===l.stackIndex&&(l.stackIndex=0),d=l.stackIndex+1);a.stackIndex=d})},drawPoints:function(){var a=this.points,b=this.chart,m=b.renderer,n,k,l=this.options,g=l.y,q,r,u,f,t,d,x,c=this.yAxis;for(r=a.length;r--;)u=a[r],x=u.plotX>this.xAxis.len,
	n=u.plotX,f=u.stackIndex,q=u.options.shape||l.shape,k=u.plotY,void 0!==k&&(k=u.plotY+g-(void 0!==f&&f*l.stackDistance)),t=f?void 0:u.plotX,d=f?void 0:u.plotY,f=u.graphic,void 0!==k&&0<=n&&!x?(f||(f=u.graphic=m.label("",null,null,q,null,null,l.useHTML).attr(this.pointAttribs(u)).css(H(l.style,u.style)).attr({align:"flag"===q?"left":"center",width:l.width,height:l.height,"text-align":l.textAlign}).addClass("highcharts-point").add(this.markerGroup),f.shadow(l.shadow)),0<n&&(n-=f.strokeWidth()%2),f.attr({text:u.options.title||
	l.title||"A",x:n,y:k,anchorX:t,anchorY:d}),u.tooltipPos=b.inverted?[c.len+c.pos-b.plotLeft-k,this.xAxis.len-n]:[n,k]):f&&(u.graphic=f.destroy())},drawTracker:function(){var a=this.points;z.drawTrackerPoint.apply(this);D(a,function(b){var e=b.graphic;e&&E(e.element,"mouseover",function(){0<b.stackIndex&&!b.raised&&(b._y=e.y,e.attr({y:b._y-8}),b.raised=!0);D(a,function(a){a!==b&&a.raised&&a.graphic&&(a.graphic.attr({y:a._y}),a.raised=!1)})})})},animate:I,buildKDTree:I,setClip:I});q.flag=function(a,
	b,m,n,k){return["M",k&&k.anchorX||a,k&&k.anchorY||b,"L",a,b+n,a,b,a+m,b,a+m,b+n,a,b+n,"Z"]};D(["circle","square"],function(a){q[a+"pin"]=function(b,e,m,k,l){var g=l&&l.anchorX;l=l&&l.anchorY;"circle"===a&&k>m&&(b-=Math.round((k-m)/2),m=k);b=q[a](b,e,m,k);g&&l&&b.push("M",g,e>l?e:e+k,"L",g,l);return b}});v===t&&D(["flag","circlepin","squarepin"],function(a){t.prototype.symbols[a]=q[a]})})(K);(function(a){function E(a,b,e){this.init(a,b,e)}var D=a.addEvent,H=a.Axis,I=a.correctFloat,v=a.defaultOptions,
	n=a.defined,m=a.destroyObjectProperties,z=a.doc,t=a.each,q=a.fireEvent,e=a.hasTouch,b=a.isTouchDevice,p=a.merge,w=a.pick,k=a.removeEvent,l=a.wrap,g,F={height:b?20:14,barBorderRadius:0,buttonBorderRadius:0,liveRedraw:a.svg&&!b,margin:10,minWidth:6,step:.2,zIndex:3,barBackgroundColor:"#cccccc",barBorderWidth:1,barBorderColor:"#cccccc",buttonArrowColor:"#333333",buttonBackgroundColor:"#e6e6e6",buttonBorderColor:"#cccccc",buttonBorderWidth:1,rifleColor:"#333333",trackBackgroundColor:"#f2f2f2",trackBorderColor:"#f2f2f2",
	trackBorderWidth:1};v.scrollbar=p(!0,F,v.scrollbar);a.swapXY=g=function(a,b){var e=a.length,g;if(b)for(b=0;b<e;b+=3)g=a[b+1],a[b+1]=a[b+2],a[b+2]=g;return a};E.prototype={init:function(a,b,e){this.scrollbarButtons=[];this.renderer=a;this.userOptions=b;this.options=p(F,b);this.chart=e;this.size=w(this.options.size,this.options.height);b.enabled&&(this.render(),this.initEvents(),this.addEvents())},render:function(){var a=this.renderer,b=this.options,e=this.size,k;this.group=k=a.g("scrollbar").attr({zIndex:b.zIndex,
	translateY:-99999}).add();this.track=a.rect().addClass("highcharts-scrollbar-track").attr({x:0,r:b.trackBorderRadius||0,height:e,width:e}).add(k);this.track.attr({fill:b.trackBackgroundColor,stroke:b.trackBorderColor,"stroke-width":b.trackBorderWidth});this.trackBorderWidth=this.track.strokeWidth();this.track.attr({y:-this.trackBorderWidth%2/2});this.scrollbarGroup=a.g().add(k);this.scrollbar=a.rect().addClass("highcharts-scrollbar-thumb").attr({height:e,width:e,r:b.barBorderRadius||0}).add(this.scrollbarGroup);
	this.scrollbarRifles=a.path(g(["M",-3,e/4,"L",-3,2*e/3,"M",0,e/4,"L",0,2*e/3,"M",3,e/4,"L",3,2*e/3],b.vertical)).addClass("highcharts-scrollbar-rifles").add(this.scrollbarGroup);this.scrollbar.attr({fill:b.barBackgroundColor,stroke:b.barBorderColor,"stroke-width":b.barBorderWidth});this.scrollbarRifles.attr({stroke:b.rifleColor,"stroke-width":1});this.scrollbarStrokeWidth=this.scrollbar.strokeWidth();this.scrollbarGroup.translate(-this.scrollbarStrokeWidth%2/2,-this.scrollbarStrokeWidth%2/2);this.drawScrollbarButton(0);
	this.drawScrollbarButton(1)},position:function(a,b,e,g){var d=this.options.vertical,f=0,c=this.rendered?"animate":"attr";this.x=a;this.y=b+this.trackBorderWidth;this.width=e;this.xOffset=this.height=g;this.yOffset=f;d?(this.width=this.yOffset=e=f=this.size,this.xOffset=b=0,this.barWidth=g-2*e,this.x=a+=this.options.margin):(this.height=this.xOffset=g=b=this.size,this.barWidth=e-2*g,this.y+=this.options.margin);this.group[c]({translateX:a,translateY:this.y});this.track[c]({width:e,height:g});this.scrollbarButtons[1][c]({translateX:d?
	0:e-b,translateY:d?g-f:0})},drawScrollbarButton:function(a){var b=this.renderer,e=this.scrollbarButtons,k=this.options,d=this.size,l;l=b.g().add(this.group);e.push(l);l=b.rect().addClass("highcharts-scrollbar-button").add(l);l.attr({stroke:k.buttonBorderColor,"stroke-width":k.buttonBorderWidth,fill:k.buttonBackgroundColor});l.attr(l.crisp({x:-.5,y:-.5,width:d+1,height:d+1,r:k.buttonBorderRadius},l.strokeWidth()));l=b.path(g(["M",d/2+(a?-1:1),d/2-3,"L",d/2+(a?-1:1),d/2+3,"L",d/2+(a?2:-2),d/2],k.vertical)).addClass("highcharts-scrollbar-arrow").add(e[a]);
	l.attr({fill:k.buttonArrowColor})},setRange:function(a,b){var e=this.options,g=e.vertical,d=e.minWidth,k=this.barWidth,c,l,m=this.rendered&&!this.hasDragged?"animate":"attr";n(k)&&(a=Math.max(a,0),c=k*a,this.calculatedWidth=l=I(k*Math.min(b,1)-c),l<d&&(c=(k-d+l)*a,l=d),d=Math.floor(c+this.xOffset+this.yOffset),k=l/2-.5,this.from=a,this.to=b,g?(this.scrollbarGroup[m]({translateY:d}),this.scrollbar[m]({height:l}),this.scrollbarRifles[m]({translateY:k}),this.scrollbarTop=d,this.scrollbarLeft=0):(this.scrollbarGroup[m]({translateX:d}),
	this.scrollbar[m]({width:l}),this.scrollbarRifles[m]({translateX:k}),this.scrollbarLeft=d,this.scrollbarTop=0),12>=l?this.scrollbarRifles.hide():this.scrollbarRifles.show(!0),!1===e.showFull&&(0>=a&&1<=b?this.group.hide():this.group.show()),this.rendered=!0)},initEvents:function(){var a=this;a.mouseMoveHandler=function(b){var e=a.chart.pointer.normalize(b),g=a.options.vertical?"chartY":"chartX",d=a.initPositions;!a.grabbedCenter||b.touches&&0===b.touches[0][g]||(e=a.cursorToScrollbarPosition(e)[g],
	g=a[g],g=e-g,a.hasDragged=!0,a.updatePosition(d[0]+g,d[1]+g),a.hasDragged&&q(a,"changed",{from:a.from,to:a.to,trigger:"scrollbar",DOMType:b.type,DOMEvent:b}))};a.mouseUpHandler=function(b){a.hasDragged&&q(a,"changed",{from:a.from,to:a.to,trigger:"scrollbar",DOMType:b.type,DOMEvent:b});a.grabbedCenter=a.hasDragged=a.chartX=a.chartY=null};a.mouseDownHandler=function(b){b=a.chart.pointer.normalize(b);b=a.cursorToScrollbarPosition(b);a.chartX=b.chartX;a.chartY=b.chartY;a.initPositions=[a.from,a.to];a.grabbedCenter=
	!0};a.buttonToMinClick=function(b){var e=I(a.to-a.from)*a.options.step;a.updatePosition(I(a.from-e),I(a.to-e));q(a,"changed",{from:a.from,to:a.to,trigger:"scrollbar",DOMEvent:b})};a.buttonToMaxClick=function(b){var e=(a.to-a.from)*a.options.step;a.updatePosition(a.from+e,a.to+e);q(a,"changed",{from:a.from,to:a.to,trigger:"scrollbar",DOMEvent:b})};a.trackClick=function(b){var e=a.chart.pointer.normalize(b),g=a.to-a.from,d=a.y+a.scrollbarTop,k=a.x+a.scrollbarLeft;a.options.vertical&&e.chartY>d||!a.options.vertical&&
	e.chartX>k?a.updatePosition(a.from+g,a.to+g):a.updatePosition(a.from-g,a.to-g);q(a,"changed",{from:a.from,to:a.to,trigger:"scrollbar",DOMEvent:b})}},cursorToScrollbarPosition:function(a){var b=this.options,b=b.minWidth>this.calculatedWidth?b.minWidth:0;return{chartX:(a.chartX-this.x-this.xOffset)/(this.barWidth-b),chartY:(a.chartY-this.y-this.yOffset)/(this.barWidth-b)}},updatePosition:function(a,b){1<b&&(a=I(1-I(b-a)),b=1);0>a&&(b=I(b-a),a=0);this.from=a;this.to=b},update:function(a){this.destroy();
	this.init(this.chart.renderer,p(!0,this.options,a),this.chart)},addEvents:function(){var a=this.options.inverted?[1,0]:[0,1],b=this.scrollbarButtons,f=this.scrollbarGroup.element,g=this.mouseDownHandler,d=this.mouseMoveHandler,k=this.mouseUpHandler,a=[[b[a[0]].element,"click",this.buttonToMinClick],[b[a[1]].element,"click",this.buttonToMaxClick],[this.track.element,"click",this.trackClick],[f,"mousedown",g],[z,"mousemove",d],[z,"mouseup",k]];e&&a.push([f,"touchstart",g],[z,"touchmove",d],[z,"touchend",
	k]);t(a,function(a){D.apply(null,a)});this._events=a},removeEvents:function(){t(this._events,function(a){k.apply(null,a)});this._events=void 0},destroy:function(){var a=this.chart.scroller;this.removeEvents();t(["track","scrollbarRifles","scrollbar","scrollbarGroup","group"],function(a){this[a]&&this[a].destroy&&(this[a]=this[a].destroy())},this);a&&(a.scrollbar=null,m(a.scrollbarButtons))}};l(H.prototype,"init",function(a){var b=this;a.apply(b,[].slice.call(arguments,1));b.options.scrollbar&&b.options.scrollbar.enabled&&
	(b.options.scrollbar.vertical=!b.horiz,b.options.startOnTick=b.options.endOnTick=!1,b.scrollbar=new E(b.chart.renderer,b.options.scrollbar,b.chart),D(b.scrollbar,"changed",function(a){var e=Math.min(w(b.options.min,b.min),b.min,b.dataMin),d=Math.max(w(b.options.max,b.max),b.max,b.dataMax)-e,f;b.horiz&&!b.reversed||!b.horiz&&b.reversed?(f=e+d*this.to,e+=d*this.from):(f=e+d*(1-this.from),e+=d*(1-this.to));b.setExtremes(e,f,!0,!1,a)}))});l(H.prototype,"render",function(a){var b=Math.min(w(this.options.min,
	this.min),this.min,this.dataMin),e=Math.max(w(this.options.max,this.max),this.max,this.dataMax),g=this.scrollbar,d;a.apply(this,[].slice.call(arguments,1));g&&(this.horiz?g.position(this.left,this.top+this.height+this.offset+2+(this.opposite?0:this.axisTitleMargin),this.width,this.height):g.position(this.left+this.width+2+this.offset+(this.opposite?this.axisTitleMargin:0),this.top,this.width,this.height),isNaN(b)||isNaN(e)||!n(this.min)||!n(this.max)?g.setRange(0,0):(d=(this.min-b)/(e-b),b=(this.max-
	b)/(e-b),this.horiz&&!this.reversed||!this.horiz&&this.reversed?g.setRange(d,b):g.setRange(1-b,1-d)))});l(H.prototype,"getOffset",function(a){var b=this.horiz?2:1,e=this.scrollbar;a.apply(this,[].slice.call(arguments,1));e&&(this.chart.axisOffset[b]+=e.size+e.options.margin)});l(H.prototype,"destroy",function(a){this.scrollbar&&(this.scrollbar=this.scrollbar.destroy());a.apply(this,[].slice.call(arguments,1))});a.Scrollbar=E})(K);(function(a){function E(a){this.init(a)}var D=a.addEvent,H=a.Axis,I=
	a.Chart,v=a.color,n=a.defaultOptions,m=a.defined,z=a.destroyObjectProperties,t=a.doc,q=a.each,e=a.erase,b=a.error,p=a.extend,w=a.grep,k=a.hasTouch,l=a.isNumber,g=a.isObject,F=a.merge,r=a.pick,u=a.removeEvent,f=a.Scrollbar,B=a.Series,d=a.seriesTypes,x=a.wrap,c=a.swapXY,y=[].concat(a.defaultDataGroupingUnits),L=function(a){var b=w(arguments,l);if(b.length)return Math[a].apply(0,b)};y[4]=["day",[1,2,3,4]];y[5]=["week",[1,2,3]];d=void 0===d.areaspline?"line":"areaspline";p(n,{navigator:{height:40,margin:25,
	maskInside:!0,handles:{backgroundColor:"#f2f2f2",borderColor:"#999999"},maskFill:v("#6685c2").setOpacity(.3).get(),outlineColor:"#cccccc",outlineWidth:1,series:{type:d,color:"#335cad",fillOpacity:.05,lineWidth:1,compare:null,dataGrouping:{approximation:"average",enabled:!0,groupPixelWidth:2,smoothed:!0,units:y},dataLabels:{enabled:!1,zIndex:2},id:"highcharts-navigator-series",className:"highcharts-navigator-series",lineColor:null,marker:{enabled:!1},pointRange:0,shadow:!1,threshold:null},xAxis:{className:"highcharts-navigator-xaxis",
	tickLength:0,lineWidth:0,gridLineColor:"#e6e6e6",gridLineWidth:1,tickPixelInterval:200,labels:{align:"left",style:{color:"#999999"},x:3,y:-4},crosshair:!1},yAxis:{className:"highcharts-navigator-yaxis",gridLineWidth:0,startOnTick:!1,endOnTick:!1,minPadding:.1,maxPadding:.1,labels:{enabled:!1},crosshair:!1,title:{text:null},tickLength:0,tickWidth:0}}});E.prototype={drawHandle:function(a,b,c,d){this.handles[b][d](c?{translateX:Math.round(this.left+this.height/2-8),translateY:Math.round(this.top+parseInt(a,
	10)+.5)}:{translateX:Math.round(this.left+parseInt(a,10)),translateY:Math.round(this.top+this.height/2-8)})},getHandlePath:function(a){return c(["M",-4.5,.5,"L",3.5,.5,"L",3.5,15.5,"L",-4.5,15.5,"L",-4.5,.5,"M",-1.5,4,"L",-1.5,12,"M",.5,4,"L",.5,12],a)},drawOutline:function(a,b,c,d){var e=this.navigatorOptions.maskInside,f=this.outline.strokeWidth()/2,h=this.outlineHeight,g=this.scrollbarHeight,k=this.size,l=this.left-g,m=this.top;c?(l-=f,c=m+b+f,b=m+a+f,a=["M",l+h,m-g-f,"L",l+h,c,"L",l,c,"L",l,b,
	"L",l+h,b,"L",l+h,m+k+g].concat(e?["M",l+h,c-f,"L",l+h,b+f]:[])):(a+=l+g-f,b+=l+g-f,m+=f,a=["M",l,m,"L",a,m,"L",a,m+h,"L",b,m+h,"L",b,m,"L",l+k+2*g,m].concat(e?["M",a-f,m,"L",b+f,m]:[]));this.outline[d]({d:a})},drawMasks:function(a,b,c,d){var e=this.left,f=this.top,h=this.height,g,k,l,m;c?(l=[e,e,e],m=[f,f+a,f+b],k=[h,h,h],g=[a,b-a,this.size-b]):(l=[e,e+a,e+b],m=[f,f,f],k=[a,b-a,this.size-b],g=[h,h,h]);q(this.shades,function(a,b){a[d]({x:l[b],y:m[b],width:k[b],height:g[b]})})},renderElements:function(){var a=
	this,b=a.navigatorOptions,c=b.maskInside,d=a.chart,e=d.inverted,f=d.renderer,g;a.navigatorGroup=g=f.g("navigator").attr({zIndex:8,visibility:"hidden"}).add();var k={cursor:e?"ns-resize":"ew-resize"};q([!c,c,!c],function(c,d){a.shades[d]=f.rect().addClass("highcharts-navigator-mask"+(1===d?"-inside":"-outside")).attr({fill:c?b.maskFill:"transparent"}).css(1===d&&k).add(g)});a.outline=f.path().addClass("highcharts-navigator-outline").attr({"stroke-width":b.outlineWidth,stroke:b.outlineColor}).add(g);
	q([0,1],function(c){a.handles[c]=f.path(a.getHandlePath(e)).attr({zIndex:7-c}).addClass("highcharts-navigator-handle highcharts-navigator-handle-"+["left","right"][c]).add(g);var d=b.handles;a.handles[c].attr({fill:d.backgroundColor,stroke:d.borderColor,"stroke-width":1}).css(k)})},update:function(a){this.destroy();F(!0,this.chart.options.navigator,this.options,a);this.init(this.chart)},render:function(a,b,c,d){var e=this.chart,f,h,g=this.scrollbarHeight,k,n=this.xAxis;f=this.navigatorEnabled;var p,
	q=this.rendered;h=e.inverted;var A=e.xAxis[0].minRange;if(!this.hasDragged||m(c)){if(!l(a)||!l(b))if(q)c=0,d=n.width;else return;this.left=r(n.left,e.plotLeft+g);h?(this.size=p=k=r(n.len,e.plotHeight-2*g),e=g):(this.size=p=k=r(n.len,e.plotWidth-2*g),e=k+2*g);c=r(c,n.toPixels(a,!0));d=r(d,n.toPixels(b,!0));l(c)&&Infinity!==Math.abs(c)||(c=0,d=e);a=n.toValue(c,!0);b=n.toValue(d,!0);if(Math.abs(b-a)<A)if(this.grabbedLeft)c=n.toPixels(b-A,!0);else if(this.grabbedRight)d=n.toPixels(a+A,!0);else return;
	this.zoomedMax=Math.min(Math.max(c,d,0),p);this.zoomedMin=Math.min(Math.max(this.fixedWidth?this.zoomedMax-this.fixedWidth:Math.min(c,d),0),p);this.range=this.zoomedMax-this.zoomedMin;p=Math.round(this.zoomedMax);c=Math.round(this.zoomedMin);f&&(this.navigatorGroup.attr({visibility:"visible"}),q=q&&!this.hasDragged?"animate":"attr",this.drawMasks(c,p,h,q),this.drawOutline(c,p,h,q),this.drawHandle(c,0,h,q),this.drawHandle(p,1,h,q));this.scrollbar&&(h?(h=this.top-g,f=this.left-g+(f?0:this.height),g=
	k+2*g):(h=this.top+(f?this.height:-g),f=this.left-g),this.scrollbar.position(f,h,e,g),this.scrollbar.setRange(c/k,p/k));this.rendered=!0}},addMouseEvents:function(){var a=this,b=a.chart,c=b.container,d=[],e,f;a.mouseMoveHandler=e=function(b){a.onMouseMove(b)};a.mouseUpHandler=f=function(b){a.onMouseUp(b)};d=a.getPartsEvents("mousedown");d.push(D(c,"mousemove",e),D(t,"mouseup",f));k&&(d.push(D(c,"touchmove",e),D(t,"touchend",f)),d.concat(a.getPartsEvents("touchstart")));a.eventsToUnbind=d;a.series&&
	a.series[0]&&d.push(D(a.series[0].xAxis,"foundExtremes",function(){b.navigator.modifyNavigatorAxisExtremes()}))},getPartsEvents:function(a){var b=this,c=[];q(["shades","handles"],function(d){q(b[d],function(e,f){c.push(D(e.element,a,function(a){b[d+"Mousedown"](a,f)}))})});return c},shadesMousedown:function(a,b){a=this.chart.pointer.normalize(a);var c=this.chart,d=this.xAxis,e=this.zoomedMin,f=this.left,g=this.size,k=this.range,l=a.chartX,m;c.inverted&&(l=a.chartY,f=this.top);1===b?(this.grabbedCenter=
	l,this.fixedWidth=k,this.dragOffset=l-e):(a=l-f-k/2,0===b?a=Math.max(0,a):2===b&&a+k>=g&&(a=g-k,m=this.getUnionExtremes().dataMax),a!==e&&(this.fixedWidth=k,b=d.toFixedRange(a,a+k,null,m),c.xAxis[0].setExtremes(Math.min(b.min,b.max),Math.max(b.min,b.max),!0,null,{trigger:"navigator"})))},handlesMousedown:function(a,b){this.chart.pointer.normalize(a);a=this.chart;var c=a.xAxis[0],d=a.inverted&&!c.reversed||!a.inverted&&c.reversed;0===b?(this.grabbedLeft=!0,this.otherHandlePos=this.zoomedMax,this.fixedExtreme=
	d?c.min:c.max):(this.grabbedRight=!0,this.otherHandlePos=this.zoomedMin,this.fixedExtreme=d?c.max:c.min);a.fixedRange=null},onMouseMove:function(a){var b=this,c=b.chart,d=b.left,e=b.navigatorSize,f=b.range,g=b.dragOffset,k=c.inverted;a.touches&&0===a.touches[0].pageX||(a=c.pointer.normalize(a),c=a.chartX,k&&(d=b.top,c=a.chartY),b.grabbedLeft?(b.hasDragged=!0,b.render(0,0,c-d,b.otherHandlePos)):b.grabbedRight?(b.hasDragged=!0,b.render(0,0,b.otherHandlePos,c-d)):b.grabbedCenter&&(b.hasDragged=!0,c<
	g?c=g:c>e+g-f&&(c=e+g-f),b.render(0,0,c-g,c-g+f)),b.hasDragged&&b.scrollbar&&b.scrollbar.options.liveRedraw&&(a.DOMType=a.type,setTimeout(function(){b.onMouseUp(a)},0)))},onMouseUp:function(a){var b=this.chart,c=this.xAxis,d,e,f=a.DOMEvent||a;if(this.hasDragged||"scrollbar"===a.trigger)this.zoomedMin===this.otherHandlePos?d=this.fixedExtreme:this.zoomedMax===this.otherHandlePos&&(e=this.fixedExtreme),this.zoomedMax===this.navigatorSize&&(e=this.getUnionExtremes().dataMax),c=c.toFixedRange(this.zoomedMin,
	this.zoomedMax,d,e),m(c.min)&&b.xAxis[0].setExtremes(Math.min(c.min,c.max),Math.max(c.min,c.max),!0,this.hasDragged?!1:null,{trigger:"navigator",triggerOp:"navigator-drag",DOMEvent:f});"mousemove"!==a.DOMType&&(this.grabbedLeft=this.grabbedRight=this.grabbedCenter=this.fixedWidth=this.fixedExtreme=this.otherHandlePos=this.hasDragged=this.dragOffset=null)},removeEvents:function(){this.eventsToUnbind&&(q(this.eventsToUnbind,function(a){a()}),this.eventsToUnbind=void 0);this.removeBaseSeriesEvents()},
	removeBaseSeriesEvents:function(){var a=this.baseSeries||[];this.navigatorEnabled&&a[0]&&!1!==this.navigatorOptions.adaptToUpdatedData&&(q(a,function(a){u(a,"updatedData",this.updatedDataHandler)},this),a[0].xAxis&&u(a[0].xAxis,"foundExtremes",this.modifyBaseAxisExtremes))},init:function(a){var b=a.options,c=b.navigator,d=c.enabled,e=b.scrollbar,g=e.enabled,b=d?c.height:0,k=g?e.height:0;this.handles=[];this.shades=[];this.chart=a;this.setBaseSeries();this.height=b;this.scrollbarHeight=k;this.scrollbarEnabled=
	g;this.navigatorEnabled=d;this.navigatorOptions=c;this.scrollbarOptions=e;this.outlineHeight=b+k;var l=this,d=l.baseSeries,e=a.xAxis.length,g=a.yAxis.length,m=d&&d[0]&&d[0].xAxis||a.xAxis[0];a.extraMargin={type:c.opposite?"plotTop":"marginBottom",value:l.outlineHeight+c.margin};a.inverted&&(a.extraMargin.type=c.opposite?"marginRight":"plotLeft");a.isDirtyBox=!0;l.navigatorEnabled?(l.xAxis=new H(a,F({breaks:m.options.breaks,ordinal:m.options.ordinal},c.xAxis,{id:"navigator-x-axis",yAxis:"navigator-y-axis",
	isX:!0,type:"datetime",index:e,offset:0,keepOrdinalPadding:!0,startOnTick:!1,endOnTick:!1,minPadding:0,maxPadding:0,zoomEnabled:!1},a.inverted?{offsets:[k,0,-k,0],width:b}:{offsets:[0,-k,0,k],height:b})),l.yAxis=new H(a,F(c.yAxis,{id:"navigator-y-axis",alignTicks:!1,offset:0,index:g,zoomEnabled:!1},a.inverted?{width:b}:{height:b})),d||c.series.data?l.addBaseSeries():0===a.series.length&&x(a,"redraw",function(b,c){0<a.series.length&&!l.series&&(l.setBaseSeries(),a.redraw=b);b.call(a,c)}),l.renderElements(),
	l.addMouseEvents()):l.xAxis={translate:function(b,c){var d=a.xAxis[0],e=d.getExtremes(),f=a.plotWidth-2*k,h=L("min",d.options.min,e.dataMin),d=L("max",d.options.max,e.dataMax)-h;return c?b*d/f+h:f*(b-h)/d},toPixels:function(a){return this.translate(a)},toValue:function(a){return this.translate(a,!0)},toFixedRange:H.prototype.toFixedRange,fake:!0};a.options.scrollbar.enabled&&(a.scrollbar=l.scrollbar=new f(a.renderer,F(a.options.scrollbar,{margin:l.navigatorEnabled?0:10,vertical:a.inverted}),a),D(l.scrollbar,
	"changed",function(b){var c=l.size,d=c*this.to,c=c*this.from;l.hasDragged=l.scrollbar.hasDragged;l.render(0,0,c,d);(a.options.scrollbar.liveRedraw||"mousemove"!==b.DOMType)&&setTimeout(function(){l.onMouseUp(b)})}));l.addBaseSeriesEvents();l.addChartEvents()},getUnionExtremes:function(a){var b=this.chart.xAxis[0],c=this.xAxis,d=c.options,e=b.options,f;a&&null===b.dataMin||(f={dataMin:r(d&&d.min,L("min",e.min,b.dataMin,c.dataMin,c.min)),dataMax:r(d&&d.max,L("max",e.max,b.dataMax,c.dataMax,c.max))});
	return f},setBaseSeries:function(a){var b=this.chart,c=this.baseSeries=[];a=a||b.options&&b.options.navigator.baseSeries||0;this.series&&(this.removeBaseSeriesEvents(),q(this.series,function(a){a.destroy()}));q(b.series||[],function(b,d){(b.options.showInNavigator||(d===a||b.options.id===a)&&!1!==b.options.showInNavigator)&&c.push(b)});this.xAxis&&!this.xAxis.fake&&this.addBaseSeries()},addBaseSeries:function(){var a=this,b=a.chart,c=a.series=[],d=a.baseSeries,e,f,g=a.navigatorOptions.series,k,l=
	{enableMouseTracking:!1,index:null,group:"nav",padXAxis:!1,xAxis:"navigator-x-axis",yAxis:"navigator-y-axis",showInLegend:!1,stacking:!1,isInternal:!0,visible:!0};d?q(d,function(d,h){l.name="Navigator "+(h+1);e=d.options||{};k=e.navigatorOptions||{};f=F(e,l,g,k);h=k.data||g.data;a.hasNavigatorData=a.hasNavigatorData||!!h;f.data=h||e.data&&e.data.slice(0);d.navigatorSeries=b.initSeries(f);c.push(d.navigatorSeries)}):(f=F(g,l),f.data=g.data,a.hasNavigatorData=!!f.data,c.push(b.initSeries(f)));this.addBaseSeriesEvents()},
	addBaseSeriesEvents:function(){var a=this,b=a.baseSeries||[];b[0]&&b[0].xAxis&&D(b[0].xAxis,"foundExtremes",this.modifyBaseAxisExtremes);!1!==this.navigatorOptions.adaptToUpdatedData&&q(b,function(b){b.xAxis&&(D(b,"updatedData",this.updatedDataHandler),b.userOptions.events=p(b.userOptions.event,{updatedData:this.updatedDataHandler}));D(b,"remove",function(){this.navigatorSeries&&(e(a.series,this.navigatorSeries),this.navigatorSeries.remove(),delete this.navigatorSeries)})},this)},modifyNavigatorAxisExtremes:function(){var a=
	this.xAxis,b;a.getExtremes&&(!(b=this.getUnionExtremes(!0))||b.dataMin===a.min&&b.dataMax===a.max||(a.min=b.dataMin,a.max=b.dataMax))},modifyBaseAxisExtremes:function(){var a=this.chart.navigator,b=this.getExtremes(),c=b.dataMin,d=b.dataMax,b=b.max-b.min,e=a.stickToMin,f=a.stickToMax,g,k,m=a.series&&a.series[0],n=!!this.setExtremes;this.eventArgs&&"rangeSelectorButton"===this.eventArgs.trigger||(e&&(k=c,g=k+b),f&&(g=d,e||(k=Math.max(g-b,m&&m.xData?m.xData[0]:-Number.MAX_VALUE))),n&&(e||f)&&l(k)&&
	(this.min=this.userMin=k,this.max=this.userMax=g));a.stickToMin=a.stickToMax=null},updatedDataHandler:function(){var a=this.chart.navigator,b=this.navigatorSeries;a.stickToMin=l(this.xAxis.min)&&this.xAxis.min<=this.xData[0];a.stickToMax=Math.round(a.zoomedMax)>=Math.round(a.size);b&&!a.hasNavigatorData&&(b.options.pointStart=this.xData[0],b.setData(this.options.data,!1,null,!1))},addChartEvents:function(){D(this.chart,"redraw",function(){var a=this.navigator,b=a&&(a.baseSeries&&a.baseSeries[0]&&
	a.baseSeries[0].xAxis||a.scrollbar&&this.xAxis[0]);b&&a.render(b.min,b.max)})},destroy:function(){this.removeEvents();this.xAxis&&(e(this.chart.xAxis,this.xAxis),e(this.chart.axes,this.xAxis));this.yAxis&&(e(this.chart.yAxis,this.yAxis),e(this.chart.axes,this.yAxis));q(this.series||[],function(a){a.destroy&&a.destroy()});q("series xAxis yAxis shades outline scrollbarTrack scrollbarRifles scrollbarGroup scrollbar navigatorGroup rendered".split(" "),function(a){this[a]&&this[a].destroy&&this[a].destroy();
	this[a]=null},this);q([this.handles],function(a){z(a)},this)}};a.Navigator=E;x(H.prototype,"zoom",function(a,b,c){var d=this.chart,e=d.options,f=e.chart.zoomType,h=e.navigator,e=e.rangeSelector,g;this.isXAxis&&(h&&h.enabled||e&&e.enabled)&&("x"===f?d.resetZoomButton="blocked":"y"===f?g=!1:"xy"===f&&(d=this.previousZoom,m(b)?this.previousZoom=[this.min,this.max]:d&&(b=d[0],c=d[1],delete this.previousZoom)));return void 0!==g?g:a.call(this,b,c)});x(I.prototype,"init",function(a,b,c){D(this,"beforeRender",
	function(){var a=this.options;if(a.navigator.enabled||a.scrollbar.enabled)this.scroller=this.navigator=new E(this)});a.call(this,b,c)});x(I.prototype,"setChartSize",function(a){var b=this.legend,c=this.navigator,d,e,f,g;a.apply(this,[].slice.call(arguments,1));c&&(e=b.options,f=c.xAxis,g=c.yAxis,d=c.scrollbarHeight,this.inverted?(c.left=c.navigatorOptions.opposite?this.chartWidth-d-c.height:this.spacing[3]+d,c.top=this.plotTop+d):(c.left=this.plotLeft+d,c.top=c.navigatorOptions.top||this.chartHeight-
	c.height-d-this.spacing[2]-("bottom"===e.verticalAlign&&e.enabled&&!e.floating?b.legendHeight+r(e.margin,10):0)),f&&g&&(this.inverted?f.options.left=g.options.left=c.left:f.options.top=g.options.top=c.top,f.setAxisSize(),g.setAxisSize()))});x(B.prototype,"addPoint",function(a,c,d,e,f){var h=this.options.turboThreshold;h&&this.xData.length>h&&g(c,!0)&&this.chart.navigator&&b(20,!0);a.call(this,c,d,e,f)});x(I.prototype,"addSeries",function(a,b,c,d){a=a.call(this,b,!1,d);this.navigator&&this.navigator.setBaseSeries();
	r(c,!0)&&this.redraw();return a});x(B.prototype,"update",function(a,b,c){a.call(this,b,!1);this.chart.navigator&&this.chart.navigator.setBaseSeries();r(c,!0)&&this.chart.redraw()});I.prototype.callbacks.push(function(a){var b=a.navigator;b&&(a=a.xAxis[0].getExtremes(),b.render(a.min,a.max))})})(K);(function(a){function E(a){this.init(a)}var D=a.addEvent,H=a.Axis,I=a.Chart,v=a.css,n=a.createElement,m=a.dateFormat,z=a.defaultOptions,t=z.global.useUTC,q=a.defined,e=a.destroyObjectProperties,b=a.discardElement,
	p=a.each,w=a.extend,k=a.fireEvent,l=a.Date,g=a.isNumber,F=a.merge,r=a.pick,u=a.pInt,f=a.splat,B=a.wrap;w(z,{rangeSelector:{buttonTheme:{"stroke-width":0,width:28,height:18,padding:2,zIndex:7},height:35,inputPosition:{align:"right"},labelStyle:{color:"#666666"}}});z.lang=F(z.lang,{rangeSelectorZoom:"Zoom",rangeSelectorFrom:"From",rangeSelectorTo:"To"});E.prototype={clickButton:function(a,b){var c=this,d=c.chart,e=c.buttonOptions[a],k=d.xAxis[0],l=d.scroller&&d.scroller.getUnionExtremes()||k||{},h=
	l.dataMin,m=l.dataMax,n,q=k&&Math.round(Math.min(k.max,r(m,k.max))),x=e.type,u,l=e._range,v,w,z,B=e.dataGrouping;if(null!==h&&null!==m){d.fixedRange=l;B&&(this.forcedDataGrouping=!0,H.prototype.setDataGrouping.call(k||{chart:this.chart},B,!1));if("month"===x||"year"===x)k?(x={range:e,max:q,dataMin:h,dataMax:m},n=k.minFromRange.call(x),g(x.newMax)&&(q=x.newMax)):l=e;else if(l)n=Math.max(q-l,h),q=Math.min(n+l,m);else if("ytd"===x)if(k)void 0===m&&(h=Number.MAX_VALUE,m=Number.MIN_VALUE,p(d.series,function(a){a=
	a.xData;h=Math.min(a[0],h);m=Math.max(a[a.length-1],m)}),b=!1),q=c.getYTDExtremes(m,h,t),n=v=q.min,q=q.max;else{D(d,"beforeRender",function(){c.clickButton(a)});return}else"all"===x&&k&&(n=h,q=m);c.setSelected(a);k?k.setExtremes(n,q,r(b,1),null,{trigger:"rangeSelectorButton",rangeSelectorButton:e}):(u=f(d.options.xAxis)[0],z=u.range,u.range=l,w=u.min,u.min=v,D(d,"load",function(){u.range=z;u.min=w}))}},setSelected:function(a){this.selected=this.options.selected=a},defaultButtons:[{type:"month",count:1,
	text:"1m"},{type:"month",count:3,text:"3m"},{type:"month",count:6,text:"6m"},{type:"ytd",text:"YTD"},{type:"year",count:1,text:"1y"},{type:"all",text:"All"}],init:function(a){var b=this,c=a.options.rangeSelector,d=c.buttons||[].concat(b.defaultButtons),e=c.selected,f=function(){var a=b.minInput,c=b.maxInput;a&&a.blur&&k(a,"blur");c&&c.blur&&k(c,"blur")};b.chart=a;b.options=c;b.buttons=[];a.extraTopMargin=c.height;b.buttonOptions=d;this.unMouseDown=D(a.container,"mousedown",f);this.unResize=D(a,"resize",
	f);p(d,b.computeButtonRange);void 0!==e&&d[e]&&this.clickButton(e,!1);D(a,"load",function(){D(a.xAxis[0],"setExtremes",function(c){this.max-this.min!==a.fixedRange&&"rangeSelectorButton"!==c.trigger&&"updatedData"!==c.trigger&&b.forcedDataGrouping&&this.setDataGrouping(!1,!1)})})},updateButtonStates:function(){var a=this.chart,b=a.xAxis[0],c=Math.round(b.max-b.min),e=!b.hasVisibleSeries,a=a.scroller&&a.scroller.getUnionExtremes()||b,f=a.dataMin,k=a.dataMax,a=this.getYTDExtremes(k,f,t),l=a.min,h=a.max,
	m=this.selected,n=g(m),q=this.options.allButtonsEnabled,r=this.buttons;p(this.buttonOptions,function(a,d){var g=a._range,p=a.type,t=a.count||1;a=r[d];var y=0;d=d===m;var u=g>k-f,x=g<b.minRange,v=!1,w=!1,g=g===c;("month"===p||"year"===p)&&c>=864E5*{month:28,year:365}[p]*t&&c<=864E5*{month:31,year:366}[p]*t?g=!0:"ytd"===p?(g=h-l===c,v=!d):"all"===p&&(g=b.max-b.min>=k-f,w=!d&&n&&g);p=!q&&(u||x||w||e);g=d&&g||g&&!n&&!v;p?y=3:g&&(n=!0,y=2);a.state!==y&&a.setState(y)})},computeButtonRange:function(a){var b=
	a.type,c=a.count||1,d={millisecond:1,second:1E3,minute:6E4,hour:36E5,day:864E5,week:6048E5};if(d[b])a._range=d[b]*c;else if("month"===b||"year"===b)a._range=864E5*{month:30,year:365}[b]*c},setInputValue:function(a,b){var c=this.chart.options.rangeSelector,d=this[a+"Input"];q(b)&&(d.previousValue=d.HCTime,d.HCTime=b);d.value=m(c.inputEditDateFormat||"%Y-%m-%d",d.HCTime);this[a+"DateBox"].attr({text:m(c.inputDateFormat||"%b %e, %Y",d.HCTime)})},showInput:function(a){var b=this.inputGroup,c=this[a+"DateBox"];
	v(this[a+"Input"],{left:b.translateX+c.x+"px",top:b.translateY+"px",width:c.width-2+"px",height:c.height-2+"px",border:"2px solid silver"})},hideInput:function(a){v(this[a+"Input"],{border:0,width:"1px",height:"1px"});this.setInputValue(a)},drawInput:function(a){function b(){var a=m.value,b=(k.inputDateParser||Date.parse)(a),e=d.xAxis[0],f=d.scroller&&d.scroller.xAxis?d.scroller.xAxis:e,h=f.dataMin,f=f.dataMax;b!==m.previousValue&&(m.previousValue=b,g(b)||(b=a.split("-"),b=Date.UTC(u(b[0]),u(b[1])-
	1,u(b[2]))),g(b)&&(t||(b+=6E4*(new Date).getTimezoneOffset()),l?b>c.maxInput.HCTime?b=void 0:b<h&&(b=h):b<c.minInput.HCTime?b=void 0:b>f&&(b=f),void 0!==b&&e.setExtremes(l?b:e.min,l?e.max:b,void 0,void 0,{trigger:"rangeSelectorInput"})))}var c=this,d=c.chart,e=d.renderer.style||{},f=d.renderer,k=d.options.rangeSelector,h=c.div,l="min"===a,m,p,q=this.inputGroup;this[a+"Label"]=p=f.label(z.lang[l?"rangeSelectorFrom":"rangeSelectorTo"],this.inputGroup.offset).addClass("highcharts-range-label").attr({padding:2}).add(q);
	q.offset+=p.width+5;this[a+"DateBox"]=f=f.label("",q.offset).addClass("highcharts-range-input").attr({padding:2,width:k.inputBoxWidth||90,height:k.inputBoxHeight||17,stroke:k.inputBoxBorderColor||"#cccccc","stroke-width":1,"text-align":"center"}).on("click",function(){c.showInput(a);c[a+"Input"].focus()}).add(q);q.offset+=f.width+(l?10:0);this[a+"Input"]=m=n("input",{name:a,className:"highcharts-range-selector",type:"text"},{top:d.plotTop+"px"},h);p.css(F(e,k.labelStyle));f.css(F({color:"#333333"},
	e,k.inputStyle));v(m,w({position:"absolute",border:0,width:"1px",height:"1px",padding:0,textAlign:"center",fontSize:e.fontSize,fontFamily:e.fontFamily,left:"-9em"},k.inputStyle));m.onfocus=function(){c.showInput(a)};m.onblur=function(){c.hideInput(a)};m.onchange=b;m.onkeypress=function(a){13===a.keyCode&&b()}},getPosition:function(){var a=this.chart,b=a.options.rangeSelector,a=r((b.buttonPosition||{}).y,a.plotTop-a.axisOffset[0]-b.height);return{buttonTop:a,inputTop:a-10}},getYTDExtremes:function(a,
	b,c){var d=new l(a),e=d[l.hcGetFullYear]();c=c?l.UTC(e,0,1):+new l(e,0,1);b=Math.max(b||0,c);d=d.getTime();return{max:Math.min(a||d,d),min:b}},render:function(a,b){var c=this,d=c.chart,e=d.renderer,f=d.container,g=d.options,h=g.exporting&&!1!==g.exporting.enabled&&g.navigation&&g.navigation.buttonOptions,k=g.rangeSelector,l=c.buttons,g=z.lang,m=c.div,m=c.inputGroup,t=k.buttonTheme,u=k.buttonPosition||{},x=k.inputEnabled,v=t&&t.states,B=d.plotLeft,D,E=this.getPosition(),F=c.group,H=c.rendered;!1!==
	k.enabled&&(H||(c.group=F=e.g("range-selector-buttons").add(),c.zoomText=e.text(g.rangeSelectorZoom,r(u.x,B),15).css(k.labelStyle).add(F),D=r(u.x,B)+c.zoomText.getBBox().width+5,p(c.buttonOptions,function(a,b){l[b]=e.button(a.text,D,0,function(){c.clickButton(b);c.isActive=!0},t,v&&v.hover,v&&v.select,v&&v.disabled).attr({"text-align":"center"}).add(F);D+=l[b].width+r(k.buttonSpacing,5)}),!1!==x&&(c.div=m=n("div",null,{position:"relative",height:0,zIndex:1}),f.parentNode.insertBefore(m,f),c.inputGroup=
	m=e.g("input-group").add(),m.offset=0,c.drawInput("min"),c.drawInput("max"))),c.updateButtonStates(),F[H?"animate":"attr"]({translateY:E.buttonTop}),!1!==x&&(m.align(w({y:E.inputTop,width:m.offset,x:h&&E.inputTop<(h.y||0)+h.height-d.spacing[0]?-40:0},k.inputPosition),!0,d.spacingBox),q(x)||(d=F.getBBox(),m[m.alignAttr.translateX<d.x+d.width+10?"hide":"show"]()),c.setInputValue("min",a),c.setInputValue("max",b)),c.rendered=!0)},update:function(a){var b=this.chart;F(!0,b.options.rangeSelector,a);this.destroy();
	this.init(b)},destroy:function(){var a=this.minInput,f=this.maxInput,c;this.unMouseDown();this.unResize();e(this.buttons);a&&(a.onfocus=a.onblur=a.onchange=null);f&&(f.onfocus=f.onblur=f.onchange=null);for(c in this)this[c]&&"chart"!==c&&(this[c].destroy?this[c].destroy():this[c].nodeType&&b(this[c])),this[c]!==E.prototype[c]&&(this[c]=null)}};H.prototype.toFixedRange=function(a,b,c,e){var d=this.chart&&this.chart.fixedRange;a=r(c,this.translate(a,!0,!this.horiz));b=r(e,this.translate(b,!0,!this.horiz));
	c=d&&(b-a)/d;.7<c&&1.3>c&&(e?a=b-d:b=a+d);g(a)||(a=b=void 0);return{min:a,max:b}};H.prototype.minFromRange=function(){var a=this.range,b={month:"Month",year:"FullYear"}[a.type],c,e=this.max,f,k,l=function(a,c){var d=new Date(a);d["set"+b](d["get"+b]()+c);return d.getTime()-a};g(a)?(c=e-a,k=a):(c=e+l(e,-a.count),this.chart&&(this.chart.fixedRange=e-c));f=r(this.dataMin,Number.MIN_VALUE);g(c)||(c=f);c<=f&&(c=f,void 0===k&&(k=l(c,a.count)),this.newMax=Math.min(c+k,this.dataMax));g(e)||(c=void 0);return c};
	B(I.prototype,"init",function(a,b,c){D(this,"init",function(){this.options.rangeSelector.enabled&&(this.rangeSelector=new E(this))});a.call(this,b,c)});I.prototype.callbacks.push(function(a){function b(){c=a.xAxis[0].getExtremes();g(c.min)&&d.render(c.min,c.max)}var c,d=a.rangeSelector,e,f;d&&(f=D(a.xAxis[0],"afterSetExtremes",function(a){d.render(a.min,a.max)}),e=D(a,"redraw",b),b());D(a,"destroy",function(){d&&(e(),f())})});a.RangeSelector=E})(K);(function(a){var E=a.arrayMax,D=a.arrayMin,H=a.Axis,
	I=a.Chart,v=a.defined,n=a.each,m=a.extend,z=a.format,t=a.inArray,q=a.isNumber,e=a.isString,b=a.map,p=a.merge,w=a.pick,k=a.Point,l=a.Renderer,g=a.Series,F=a.splat,r=a.SVGRenderer,u=a.VMLRenderer,f=a.wrap,B=g.prototype,d=B.init,x=B.processData,c=k.prototype.tooltipFormatter;a.StockChart=a.stockChart=function(c,d,f){var g=e(c)||c.nodeName,h=arguments[g?1:0],k=h.series,l=a.getOptions(),m,n=w(h.navigator&&h.navigator.enabled,l.navigator.enabled,!0),q=n?{startOnTick:!1,endOnTick:!1}:null,r={marker:{enabled:!1,
	radius:2}},t={shadow:!1,borderWidth:0};h.xAxis=b(F(h.xAxis||{}),function(a){return p({minPadding:0,maxPadding:0,ordinal:!0,title:{text:null},labels:{overflow:"justify"},showLastLabel:!0},l.xAxis,a,{type:"datetime",categories:null},q)});h.yAxis=b(F(h.yAxis||{}),function(a){m=w(a.opposite,!0);return p({labels:{y:-2},opposite:m,showLastLabel:!1,title:{text:null}},l.yAxis,a)});h.series=null;h=p({chart:{panning:!0,pinchType:"x"},navigator:{enabled:n},scrollbar:{enabled:w(l.scrollbar.enabled,!0)},rangeSelector:{enabled:w(l.rangeSelector.enabled,
	!0)},title:{text:null},tooltip:{shared:!0,crosshairs:!0},legend:{enabled:!1},plotOptions:{line:r,spline:r,area:r,areaspline:r,arearange:r,areasplinerange:r,column:t,columnrange:t,candlestick:t,ohlc:t}},h,{isStock:!0});h.series=k;return g?new I(c,h,f):new I(h,d)};f(H.prototype,"autoLabelAlign",function(a){var b=this.chart,c=this.options,b=b._labelPanes=b._labelPanes||{},d=this.options.labels;return this.chart.options.isStock&&"yAxis"===this.coll&&(c=c.top+","+c.height,!b[c]&&d.enabled)?(15===d.x&&
	(d.x=0),void 0===d.align&&(d.align="right"),b[c]=1,"right"):a.call(this,[].slice.call(arguments,1))});f(H.prototype,"getPlotLinePath",function(a,c,d,f,g,k){var h=this,l=this.isLinked&&!this.series?this.linkedParent.series:this.series,m=h.chart,p=m.renderer,r=h.left,u=h.top,y,x,z,A,B=[],D=[],E,G;if("colorAxis"===h.coll)return a.apply(this,[].slice.call(arguments,1));D=function(a){var c="xAxis"===a?"yAxis":"xAxis";a=h.options[c];return q(a)?[m[c][a]]:e(a)?[m.get(a)]:b(l,function(a){return a[c]})}(h.coll);
	n(h.isXAxis?m.yAxis:m.xAxis,function(a){if(v(a.options.id)?-1===a.options.id.indexOf("navigator"):1){var b=a.isXAxis?"yAxis":"xAxis",b=v(a.options[b])?m[b][a.options[b]]:m[b][0];h===b&&D.push(a)}});E=D.length?[]:[h.isXAxis?m.yAxis[0]:m.xAxis[0]];n(D,function(a){-1===t(a,E)&&E.push(a)});G=w(k,h.translate(c,null,null,f));q(G)&&(h.horiz?n(E,function(a){var b;x=a.pos;A=x+a.len;y=z=Math.round(G+h.transB);if(y<r||y>r+h.width)g?y=z=Math.min(Math.max(r,y),r+h.width):b=!0;b||B.push("M",y,x,"L",z,A)}):n(E,
	function(a){var b;y=a.pos;z=y+a.len;x=A=Math.round(u+h.height-G);if(x<u||x>u+h.height)g?x=A=Math.min(Math.max(u,x),h.top+h.height):b=!0;b||B.push("M",y,x,"L",z,A)}));return 0<B.length?p.crispPolyLine(B,d||1):null});H.prototype.getPlotBandPath=function(a,b){b=this.getPlotLinePath(b,null,null,!0);a=this.getPlotLinePath(a,null,null,!0);var c=[],d;if(a&&b)if(a.toString()===b.toString())c=a,c.flat=!0;else for(d=0;d<a.length;d+=6)c.push("M",a[d+1],a[d+2],"L",a[d+4],a[d+5],b[d+4],b[d+5],b[d+1],b[d+2],"z");
	else c=null;return c};r.prototype.crispPolyLine=function(a,b){var c;for(c=0;c<a.length;c+=6)a[c+1]===a[c+4]&&(a[c+1]=a[c+4]=Math.round(a[c+1])-b%2/2),a[c+2]===a[c+5]&&(a[c+2]=a[c+5]=Math.round(a[c+2])+b%2/2);return a};l===u&&(u.prototype.crispPolyLine=r.prototype.crispPolyLine);f(H.prototype,"hideCrosshair",function(a,b){a.call(this,b);this.crossLabel&&(this.crossLabel=this.crossLabel.hide())});f(H.prototype,"drawCrosshair",function(a,b,c){var d,e;a.call(this,b,c);if(v(this.crosshair.label)&&this.crosshair.label.enabled&&
	this.cross){a=this.chart;var f=this.options.crosshair.label,g=this.horiz;d=this.opposite;e=this.left;var k=this.top,l=this.crossLabel,n,p=f.format,q="",r="inside"===this.options.tickPosition,t=!1!==this.crosshair.snap,u=0;b||(b=this.cross&&this.cross.e);n=g?"center":d?"right"===this.labelAlign?"right":"left":"left"===this.labelAlign?"left":"center";l||(l=this.crossLabel=a.renderer.label(null,null,null,f.shape||"callout").addClass("highcharts-crosshair-label"+(this.series[0]&&" highcharts-color-"+
	this.series[0].colorIndex)).attr({align:f.align||n,padding:w(f.padding,8),r:w(f.borderRadius,3),zIndex:2}).add(this.labelGroup),l.attr({fill:f.backgroundColor||this.series[0]&&this.series[0].color||"#666666",stroke:f.borderColor||"","stroke-width":f.borderWidth||0}).css(m({color:"#ffffff",fontWeight:"normal",fontSize:"11px",textAlign:"center"},f.style)));g?(n=t?c.plotX+e:b.chartX,k+=d?0:this.height):(n=d?this.width+e:0,k=t?c.plotY+k:b.chartY);p||f.formatter||(this.isDatetimeAxis&&(q="%b %d, %Y"),
	p="{value"+(q?":"+q:"")+"}");b=t?c[this.isXAxis?"x":"y"]:this.toValue(g?b.chartX:b.chartY);l.attr({text:p?z(p,{value:b}):f.formatter.call(this,b),x:n,y:k,visibility:"visible"});b=l.getBBox();if(g){if(r&&!d||!r&&d)k=l.y-b.height}else k=l.y-b.height/2;g?(d=e-b.x,e=e+this.width-b.x):(d="left"===this.labelAlign?e:0,e="right"===this.labelAlign?e+this.width:a.chartWidth);l.translateX<d&&(u=d-l.translateX);l.translateX+b.width>=e&&(u=-(l.translateX+b.width-e));l.attr({x:n+u,y:k,anchorX:g?n:this.opposite?
	0:a.chartWidth,anchorY:g?this.opposite?a.chartHeight:0:k+b.height/2})}});B.init=function(){d.apply(this,arguments);this.setCompare(this.options.compare)};B.setCompare=function(a){this.modifyValue="value"===a||"percent"===a?function(b,c){var d=this.compareValue;if(void 0!==b&&void 0!==d)return b="value"===a?b-d:b/d*100-(100===this.options.compareBase?0:100),c&&(c.change=b),b}:null;this.userOptions.compare=a;this.chart.hasRendered&&(this.isDirty=!0)};B.processData=function(){var a,b=-1,c,d,e,f;x.apply(this,
	arguments);if(this.xAxis&&this.processedYData)for(c=this.processedXData,d=this.processedYData,e=d.length,this.pointArrayMap&&(b=t("close",this.pointArrayMap),-1===b&&(b=t(this.pointValKey||"y",this.pointArrayMap))),a=0;a<e-1;a++)if(f=-1<b?d[a][b]:d[a],q(f)&&c[a+1]>=this.xAxis.min&&0!==f){this.compareValue=f;break}};f(B,"getExtremes",function(a){var b;a.apply(this,[].slice.call(arguments,1));this.modifyValue&&(b=[this.modifyValue(this.dataMin),this.modifyValue(this.dataMax)],this.dataMin=D(b),this.dataMax=
	E(b))});H.prototype.setCompare=function(a,b){this.isXAxis||(n(this.series,function(b){b.setCompare(a)}),w(b,!0)&&this.chart.redraw())};k.prototype.tooltipFormatter=function(b){b=b.replace("{point.change}",(0<this.change?"+":"")+a.numberFormat(this.change,w(this.series.tooltipOptions.changeDecimals,2)));return c.apply(this,[b])};f(g.prototype,"render",function(a){this.chart.is3d&&this.chart.is3d()||this.chart.polar||!this.xAxis||this.xAxis.isRadial||(!this.clipBox&&this.animate?(this.clipBox=p(this.chart.clipBox),
	this.clipBox.width=this.xAxis.len,this.clipBox.height=this.yAxis.len):this.chart[this.sharedClipKey]?this.chart[this.sharedClipKey].attr({width:this.xAxis.len,height:this.yAxis.len}):this.clipBox&&(this.clipBox.width=this.xAxis.len,this.clipBox.height=this.yAxis.len));a.call(this)})})(K);return K});


/***/ },
/* 452 */
/***/ function(module, exports) {

	/*
	 Highcharts JS v5.0.7 (2017-01-17)
	 Exporting module

	 (c) 2010-2016 Torstein Honsi

	 License: www.highcharts.com/license
	*/
	(function(h){"object"===typeof module&&module.exports?module.exports=h:h(Highcharts)})(function(h){(function(f){var h=f.defaultOptions,n=f.doc,A=f.Chart,u=f.addEvent,F=f.removeEvent,D=f.fireEvent,q=f.createElement,B=f.discardElement,v=f.css,p=f.merge,C=f.pick,k=f.each,r=f.extend,G=f.isTouchDevice,E=f.win,H=f.Renderer.prototype.symbols;r(h.lang,{printChart:"Print chart",downloadPNG:"Download PNG image",downloadJPEG:"Download JPEG image",downloadPDF:"Download PDF document",downloadSVG:"Download SVG vector image",
	contextButtonTitle:"Chart context menu"});h.navigation={buttonOptions:{theme:{},symbolSize:14,symbolX:12.5,symbolY:10.5,align:"right",buttonSpacing:3,height:22,verticalAlign:"top",width:24}};p(!0,h.navigation,{menuStyle:{border:"1px solid #999999",background:"#ffffff",padding:"5px 0"},menuItemStyle:{padding:"0.5em 1em",background:"none",color:"#333333",fontSize:G?"14px":"11px",transition:"background 250ms, color 250ms"},menuItemHoverStyle:{background:"#335cad",color:"#ffffff"},buttonOptions:{symbolFill:"#666666",
	symbolStroke:"#666666",symbolStrokeWidth:3,theme:{fill:"#ffffff",stroke:"none",padding:5}}});h.exporting={type:"image/png",url:"https://export.highcharts.com/",printMaxWidth:780,scale:2,buttons:{contextButton:{className:"highcharts-contextbutton",menuClassName:"highcharts-contextmenu",symbol:"menu",_titleKey:"contextButtonTitle",menuItems:[{textKey:"printChart",onclick:function(){this.print()}},{separator:!0},{textKey:"downloadPNG",onclick:function(){this.exportChart()}},{textKey:"downloadJPEG",onclick:function(){this.exportChart({type:"image/jpeg"})}},
	{textKey:"downloadPDF",onclick:function(){this.exportChart({type:"application/pdf"})}},{textKey:"downloadSVG",onclick:function(){this.exportChart({type:"image/svg+xml"})}}]}}};f.post=function(a,c,e){var b;a=q("form",p({method:"post",action:a,enctype:"multipart/form-data"},e),{display:"none"},n.body);for(b in c)q("input",{type:"hidden",name:b,value:c[b]},null,a);a.submit();B(a)};r(A.prototype,{sanitizeSVG:function(a,c){if(c&&c.exporting&&c.exporting.allowHTML){var e=a.match(/<\/svg>(.*?$)/);e&&(e=
	'\x3cforeignObject x\x3d"0" y\x3d"0" width\x3d"'+c.chart.width+'" height\x3d"'+c.chart.height+'"\x3e\x3cbody xmlns\x3d"http://www.w3.org/1999/xhtml"\x3e'+e[1]+"\x3c/body\x3e\x3c/foreignObject\x3e",a=a.replace("\x3c/svg\x3e",e+"\x3c/svg\x3e"))}a=a.replace(/zIndex="[^"]+"/g,"").replace(/isShadow="[^"]+"/g,"").replace(/symbolName="[^"]+"/g,"").replace(/jQuery[0-9]+="[^"]+"/g,"").replace(/url\(("|&quot;)(\S+)("|&quot;)\)/g,"url($2)").replace(/url\([^#]+#/g,"url(#").replace(/<svg /,'\x3csvg xmlns:xlink\x3d"http://www.w3.org/1999/xlink" ').replace(/ (NS[0-9]+\:)?href=/g,
	" xlink:href\x3d").replace(/\n/," ").replace(/<\/svg>.*?$/,"\x3c/svg\x3e").replace(/(fill|stroke)="rgba\(([ 0-9]+,[ 0-9]+,[ 0-9]+),([ 0-9\.]+)\)"/g,'$1\x3d"rgb($2)" $1-opacity\x3d"$3"').replace(/&nbsp;/g,"\u00a0").replace(/&shy;/g,"\u00ad");return a=a.replace(/<IMG /g,"\x3cimage ").replace(/<(\/?)TITLE>/g,"\x3c$1title\x3e").replace(/height=([^" ]+)/g,'height\x3d"$1"').replace(/width=([^" ]+)/g,'width\x3d"$1"').replace(/hc-svg-href="([^"]+)">/g,'xlink:href\x3d"$1"/\x3e').replace(/ id=([^" >]+)/g,' id\x3d"$1"').replace(/class=([^" >]+)/g,
	'class\x3d"$1"').replace(/ transform /g," ").replace(/:(path|rect)/g,"$1").replace(/style="([^"]+)"/g,function(a){return a.toLowerCase()})},getChartHTML:function(){return this.container.innerHTML},getSVG:function(a){var c,e,b,w,m,g=p(this.options,a);n.createElementNS||(n.createElementNS=function(a,c){return n.createElement(c)});e=q("div",null,{position:"absolute",top:"-9999em",width:this.chartWidth+"px",height:this.chartHeight+"px"},n.body);b=this.renderTo.style.width;m=this.renderTo.style.height;
	b=g.exporting.sourceWidth||g.chart.width||/px$/.test(b)&&parseInt(b,10)||600;m=g.exporting.sourceHeight||g.chart.height||/px$/.test(m)&&parseInt(m,10)||400;r(g.chart,{animation:!1,renderTo:e,forExport:!0,renderer:"SVGRenderer",width:b,height:m});g.exporting.enabled=!1;delete g.data;g.series=[];k(this.series,function(a){w=p(a.userOptions,{animation:!1,enableMouseTracking:!1,showCheckbox:!1,visible:a.visible});w.isInternal||g.series.push(w)});k(this.axes,function(a){a.userOptions.internalKey=f.uniqueKey()});
	c=new f.Chart(g,this.callback);a&&k(["xAxis","yAxis","series"],function(b){var d={};a[b]&&(d[b]=a[b],c.update(d))});k(this.axes,function(a){var b=f.find(c.axes,function(b){return b.options.internalKey===a.userOptions.internalKey}),d=a.getExtremes(),e=d.userMin,d=d.userMax;!b||void 0===e&&void 0===d||b.setExtremes(e,d,!0,!1)});b=c.getChartHTML();b=this.sanitizeSVG(b,g);g=null;c.destroy();B(e);return b},getSVGForExport:function(a,c){var e=this.options.exporting;return this.getSVG(p({chart:{borderRadius:0}},
	e.chartOptions,c,{exporting:{sourceWidth:a&&a.sourceWidth||e.sourceWidth,sourceHeight:a&&a.sourceHeight||e.sourceHeight}}))},exportChart:function(a,c){c=this.getSVGForExport(a,c);a=p(this.options.exporting,a);f.post(a.url,{filename:a.filename||"chart",type:a.type,width:a.width||0,scale:a.scale,svg:c},a.formAttributes)},print:function(){var a=this,c=a.container,e=[],b=c.parentNode,f=n.body,m=f.childNodes,g=a.options.exporting.printMaxWidth,d,t;if(!a.isPrinting){a.isPrinting=!0;a.pointer.reset(null,
	0);D(a,"beforePrint");if(t=g&&a.chartWidth>g)d=[a.options.chart.width,void 0,!1],a.setSize(g,void 0,!1);k(m,function(a,b){1===a.nodeType&&(e[b]=a.style.display,a.style.display="none")});f.appendChild(c);E.focus();E.print();setTimeout(function(){b.appendChild(c);k(m,function(a,b){1===a.nodeType&&(a.style.display=e[b])});a.isPrinting=!1;t&&a.setSize.apply(a,d);D(a,"afterPrint")},1E3)}},contextMenu:function(a,c,e,b,f,m,g){var d=this,t=d.options.navigation,w=d.chartWidth,h=d.chartHeight,p="cache-"+a,
	l=d[p],x=Math.max(f,m),y,z;l||(d[p]=l=q("div",{className:a},{position:"absolute",zIndex:1E3,padding:x+"px"},d.container),y=q("div",{className:"highcharts-menu"},null,l),v(y,r({MozBoxShadow:"3px 3px 10px #888",WebkitBoxShadow:"3px 3px 10px #888",boxShadow:"3px 3px 10px #888"},t.menuStyle)),z=function(){v(l,{display:"none"});g&&g.setState(0);d.openMenu=!1},u(l,"mouseleave",function(){l.hideTimer=setTimeout(z,500)}),u(l,"mouseenter",function(){clearTimeout(l.hideTimer)}),p=u(n,"mouseup",function(b){d.pointer.inClass(b.target,
	a)||z()}),u(d,"destroy",p),k(c,function(a){if(a){var b;a.separator?b=q("hr",null,null,y):(b=q("div",{className:"highcharts-menu-item",onclick:function(b){b&&b.stopPropagation();z();a.onclick&&a.onclick.apply(d,arguments)},innerHTML:a.text||d.options.lang[a.textKey]},null,y),b.onmouseover=function(){v(this,t.menuItemHoverStyle)},b.onmouseout=function(){v(this,t.menuItemStyle)},v(b,r({cursor:"pointer"},t.menuItemStyle)));d.exportDivElements.push(b)}}),d.exportDivElements.push(y,l),d.exportMenuWidth=
	l.offsetWidth,d.exportMenuHeight=l.offsetHeight);c={display:"block"};e+d.exportMenuWidth>w?c.right=w-e-f-x+"px":c.left=e-x+"px";b+m+d.exportMenuHeight>h&&"top"!==g.alignOptions.verticalAlign?c.bottom=h-b-x+"px":c.top=b+m-x+"px";v(l,c);d.openMenu=!0},addButton:function(a){var c=this,e=c.renderer,b=p(c.options.navigation.buttonOptions,a),f=b.onclick,m=b.menuItems,g,d,h=b.symbolSize||12;c.btnCount||(c.btnCount=0);c.exportDivElements||(c.exportDivElements=[],c.exportSVGElements=[]);if(!1!==b.enabled){var k=
	b.theme,n=k.states,q=n&&n.hover,n=n&&n.select,l;delete k.states;f?l=function(a){a.stopPropagation();f.call(c,a)}:m&&(l=function(){c.contextMenu(d.menuClassName,m,d.translateX,d.translateY,d.width,d.height,d);d.setState(2)});b.text&&b.symbol?k.paddingLeft=C(k.paddingLeft,25):b.text||r(k,{width:b.width,height:b.height,padding:0});d=e.button(b.text,0,0,l,k,q,n).addClass(a.className).attr({"stroke-linecap":"round",title:c.options.lang[b._titleKey],zIndex:3});d.menuClassName=a.menuClassName||"highcharts-menu-"+
	c.btnCount++;b.symbol&&(g=e.symbol(b.symbol,b.symbolX-h/2,b.symbolY-h/2,h,h).addClass("highcharts-button-symbol").attr({zIndex:1}).add(d),g.attr({stroke:b.symbolStroke,fill:b.symbolFill,"stroke-width":b.symbolStrokeWidth||1}));d.add().align(r(b,{width:d.width,x:C(b.x,c.buttonOffset)}),!0,"spacingBox");c.buttonOffset+=(d.width+b.buttonSpacing)*("right"===b.align?-1:1);c.exportSVGElements.push(d,g)}},destroyExport:function(a){var c=a?a.target:this;a=c.exportSVGElements;var e=c.exportDivElements;a&&
	(k(a,function(a,e){a&&(a.onclick=a.ontouchstart=null,c.exportSVGElements[e]=a.destroy())}),a.length=0);e&&(k(e,function(a,e){clearTimeout(a.hideTimer);F(a,"mouseleave");c.exportDivElements[e]=a.onmouseout=a.onmouseover=a.ontouchstart=a.onclick=null;B(a)}),e.length=0)}});H.menu=function(a,c,e,b){return["M",a,c+2.5,"L",a+e,c+2.5,"M",a,c+b/2+.5,"L",a+e,c+b/2+.5,"M",a,c+b-1.5,"L",a+e,c+b-1.5]};A.prototype.renderExporting=function(){var a,c=this.options.exporting,e=c.buttons,b=this.isDirtyExporting||!this.exportSVGElements;
	this.buttonOffset=0;this.isDirtyExporting&&this.destroyExport();if(b&&!1!==c.enabled){for(a in e)this.addButton(e[a]);this.isDirtyExporting=!1}u(this,"destroy",this.destroyExport)};A.prototype.callbacks.push(function(a){a.renderExporting();u(a,"redraw",a.renderExporting);k(["exporting","navigation"],function(c){a[c]={update:function(e,b){a.isDirtyExporting=!0;p(!0,a.options[c],e);C(b,!0)&&a.redraw()}}})})})(h)});


/***/ },
/* 453 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Tick = __webpack_require__(454).Tick;
	var moment = __webpack_require__(308);
	var Content = __webpack_require__(426).Content;
	var ViewPopupUI = __webpack_require__(448).ViewPopupUI;
	var isVisible = __webpack_require__(420).isVisible;
	var updatePurchaseStatus = __webpack_require__(456).updatePurchaseStatus;
	var localize = __webpack_require__(423).localize;
	var Highcharts = __webpack_require__(460);
	__webpack_require__(452)(Highcharts);
	var elementInnerHtml = __webpack_require__(420).elementInnerHtml;

	var TickDisplay = function () {
	    return {
	        initialize: function initialize(data) {
	            var $self = this;

	            // setting up globals
	            $self.number_of_ticks = parseInt(data.number_of_ticks);
	            $self.symbol = data.symbol;
	            $self.display_symbol = data.display_symbol;
	            $self.contract_start_ms = parseInt(data.contract_start * 1000);
	            $self.contract_category = data.contract_category;
	            $self.set_barrier = !$self.contract_category.match('digits');
	            $self.barrier = data.barrier;
	            $self.abs_barrier = data.abs_barrier;
	            $self.display_decimals = data.display_decimals || 2;
	            $self.show_contract_result = data.show_contract_result;
	            var tick_frequency = 5;

	            if (data.show_contract_result) {
	                $self.contract_sentiment = data.contract_sentiment;
	                $self.price = parseFloat(data.price);
	                $self.payout = parseFloat(data.payout);
	            }

	            var minimize = data.show_contract_result,
	                end_time = parseInt(data.contract_start) + parseInt(($self.number_of_ticks + 2) * tick_frequency);

	            $self.set_x_indicators();
	            $self.initialize_chart({
	                plot_from: data.previous_tick_epoch * 1000,
	                plot_to: new Date(end_time * 1000).getTime(),
	                minimize: minimize,
	                width: data.width ? data.width : undefined
	            });
	        },
	        set_x_indicators: function set_x_indicators() {
	            var $self = this;

	            var exit_tick_index = $self.number_of_ticks - 1;
	            if ($self.contract_category.match('asian')) {
	                $self.ticks_needed = $self.number_of_ticks;
	                $self.x_indicators = {
	                    _0: { label: 'Entry Spot', id: 'start_tick' }
	                };
	                $self.x_indicators['_' + exit_tick_index] = {
	                    label: 'Exit Spot',
	                    id: 'exit_tick'
	                };
	            } else if ($self.contract_category.match('callput')) {
	                $self.ticks_needed = $self.number_of_ticks + 1;
	                $self.x_indicators = {
	                    _0: { label: 'Entry Spot', id: 'entry_tick' }
	                };
	                $self.x_indicators['_' + $self.number_of_ticks] = {
	                    label: 'Exit Spot',
	                    id: 'exit_tick'
	                };
	            } else if ($self.contract_category.match('digits')) {
	                $self.ticks_needed = $self.number_of_ticks;
	                $self.x_indicators = {
	                    _0: { label: 'Tick 1', id: 'start_tick' }
	                };
	                $self.x_indicators['_' + exit_tick_index] = {
	                    label: 'Tick ' + $self.number_of_ticks,
	                    id: 'last_tick'
	                };
	            } else {
	                $self.x_indicators = {};
	            }
	        },
	        initialize_chart: function initialize_chart(config) {
	            var $self = this;

	            $self.chart = new Highcharts.Chart({
	                chart: {
	                    type: 'line',
	                    renderTo: 'tick_chart',
	                    width: config.width ? config.width : config.minimize ? 394 : null,
	                    height: config.minimize ? 143 : null,
	                    backgroundColor: null,
	                    events: { load: $self.plot(config.plot_from, config.plot_to) },
	                    marginLeft: 50
	                },
	                credits: { enabled: false },
	                tooltip: {
	                    formatter: function formatter() {
	                        var that = this;
	                        var new_y = that.y.toFixed($self.display_decimals);
	                        var mom = moment.utc($self.applicable_ticks[that.x].epoch * 1000).format('dddd, MMM D, HH:mm:ss');
	                        return mom + '<br/>' + $self.display_symbol + ' ' + new_y;
	                    }
	                },
	                xAxis: {
	                    type: 'linear',
	                    min: 0,
	                    max: $self.number_of_ticks + 1,
	                    labels: { enabled: false }
	                },
	                yAxis: {
	                    opposite: false,
	                    labels: {
	                        align: 'left',
	                        x: 0
	                    },
	                    title: ''
	                },
	                series: [{
	                    data: []
	                }],
	                title: '',
	                exporting: { enabled: false, enableImages: false },
	                legend: { enabled: false }
	            });
	            Highcharts.setOptions({
	                lang: { thousandsSep: ',' }
	            });
	        },
	        apply_chart_background_color: function apply_chart_background_color(tick) {
	            var $self = this;
	            if (!$self.show_contract_result) {
	                return;
	            }
	            var chart_container = $('#tick_chart');
	            if ($self.contract_sentiment === 'up') {
	                if (tick.quote > $self.contract_barrier) {
	                    chart_container.css('background-color', 'rgba(46,136,54,0.198039)');
	                } else {
	                    chart_container.css('background-color', 'rgba(204,0,0,0.098039)');
	                }
	            } else if ($self.contract_sentiment === 'down') {
	                if (tick.quote < $self.contract_barrier) {
	                    chart_container.css('background-color', 'rgba(46,136,54,0.198039)');
	                } else {
	                    chart_container.css('background-color', 'rgba(204,0,0,0.098039)');
	                }
	            }
	        },
	        add_barrier: function add_barrier() {
	            var $self = this;

	            if (!$self.set_barrier) {
	                return;
	            }

	            var barrier_type = $self.contract_category.match('asian') ? 'asian' : 'static';

	            if (barrier_type === 'static') {
	                var barrier_tick = $self.applicable_ticks[0];

	                if ($self.barrier) {
	                    var final_barrier = barrier_tick.quote + parseFloat($self.barrier);
	                    // sometimes due to rounding issues, result is 1.009999 while it should
	                    // be 1.01
	                    final_barrier = Number(Math.round(final_barrier + 'e' + $self.display_decimals) + 'e-' + $self.display_decimals);

	                    barrier_tick.quote = final_barrier;
	                } else if ($self.abs_barrier) {
	                    barrier_tick.quote = parseFloat($self.abs_barrier);
	                }

	                $self.chart.yAxis[0].addPlotLine({
	                    id: 'tick-barrier',
	                    value: barrier_tick.quote,
	                    label: { text: 'Barrier (' + barrier_tick.quote + ')', align: 'center' },
	                    color: 'green',
	                    width: 2,
	                    zIndex: 2
	                });
	                $self.contract_barrier = barrier_tick.quote;
	                $self.set_barrier = false;
	            }

	            if (barrier_type === 'asian') {
	                var total = 0;
	                for (var i = 0; i < $self.applicable_ticks.length; i++) {
	                    total += parseFloat($self.applicable_ticks[i].quote);
	                }
	                var calc_barrier = total / $self.applicable_ticks.length;
	                calc_barrier = calc_barrier.toFixed(parseInt($self.display_decimals) + 1); // round calculated barrier

	                $self.chart.yAxis[0].removePlotLine('tick-barrier');
	                $self.chart.yAxis[0].addPlotLine({
	                    id: 'tick-barrier',
	                    value: calc_barrier,
	                    color: 'green',
	                    label: {
	                        text: 'Average (' + calc_barrier + ')',
	                        align: 'center'
	                    },
	                    width: 2,
	                    zIndex: 2
	                });
	                $self.contract_barrier = calc_barrier;
	            }
	            var barrier = document.getElementById('contract_purchase_barrier');
	            if ($self.contract_barrier && barrier) {
	                elementInnerHtml(barrier, Content.localize().textBarrier + ': ' + $self.contract_barrier);
	            }
	        },
	        add: function add(indicator) {
	            var $self = this;

	            $self.chart.xAxis[0].addPlotLine({
	                value: indicator.index,
	                id: indicator.id,
	                label: { text: indicator.label, x: /start_tick|entry_tick/.test(indicator.id) ? -15 : 5 },
	                color: '#e98024',
	                width: 2,
	                zIndex: 2
	            });
	        },
	        evaluate_contract_outcome: function evaluate_contract_outcome() {
	            var $self = this;

	            if (!$self.contract_barrier) {
	                return; // can't do anything without barrier
	            }

	            var exit_tick_index = $self.applicable_ticks.length - 1;
	            var exit_spot = $self.applicable_ticks[exit_tick_index].quote;

	            if ($self.contract_sentiment === 'up') {
	                if (exit_spot > $self.contract_barrier) {
	                    $self.win();
	                } else {
	                    $self.lose();
	                }
	            } else if ($self.contract_sentiment === 'down') {
	                if (exit_spot < $self.contract_barrier) {
	                    $self.win();
	                } else {
	                    $self.lose();
	                }
	            }
	        },
	        win: function win() {
	            var $self = this;

	            var profit = $self.payout - $self.price;
	            $self.update_ui($self.payout, profit, localize('This contract won'));
	        },
	        lose: function lose() {
	            var $self = this;
	            $self.update_ui(0, -$self.price, localize('This contract lost'));
	        },
	        to_monetary_format: function to_monetary_format(number) {
	            return number.toFixed(2);
	        }
	    };
	}();

	var WSTickDisplay = Object.create(TickDisplay);
	WSTickDisplay.plot = function () {
	    var $self = this;
	    $self.contract_start_moment = moment($self.contract_start_ms).utc();
	    $self.counter = 0;
	    $self.applicable_ticks = [];
	};
	WSTickDisplay.update_ui = function (final_price, pnl, contract_status) {
	    updatePurchaseStatus(final_price, final_price - pnl, contract_status);
	};
	WSTickDisplay.socketSend = function (req) {
	    if (!req.hasOwnProperty('passthrough')) {
	        req.passthrough = {};
	    }
	    req.passthrough.dispatch_to = 'ViewTickDisplayWS';
	    BinarySocket.send(req);
	};
	WSTickDisplay.dispatch = function (data) {
	    var $self = this;
	    var chart = document.getElementById('tick_chart');

	    if (!chart || !isVisible(chart) || !data || !data.tick && !data.history) {
	        return;
	    }

	    if (window.subscribe && data.tick && document.getElementById('sell_content_wrapper')) {
	        if (data.echo_req.hasOwnProperty('passthrough') && data.echo_req.passthrough.dispatch_to === 'ViewChartWS') return;
	        window.responseID = data.tick.id;
	        ViewPopupUI.storeSubscriptionID(window.responseID);
	    }

	    var epoches = void 0,
	        spots2 = void 0,
	        display_decimals = void 0;
	    if (document.getElementById('sell_content_wrapper')) {
	        if (data.tick && document.getElementById('sell_content_wrapper')) {
	            Tick.details(data);
	            if (!display_decimals) {
	                display_decimals = data.tick.quote.split('.')[1].length || 2;
	            }
	        } else if (data.history && document.getElementById('sell_content_wrapper')) {
	            if (!display_decimals) {
	                display_decimals = data.history.prices[0].split('.')[1].length || 2;
	            }
	        }
	        if (!window.tick_init || window.tick_init === '') {
	            WSTickDisplay.initialize({
	                symbol: window.tick_underlying,
	                number_of_ticks: window.tick_count,
	                contract_category: /asian/i.test(window.tick_shortcode) ? 'asian' : /digit/i.test(window.tick_shortcode) ? 'digits' : 'callput',
	                longcode: window.tick_longcode,
	                display_symbol: window.tick_display_name,
	                contract_start: window.tick_date_start,
	                abs_barrier: window.abs_barrier,
	                display_decimals: display_decimals,
	                show_contract_result: 0
	            });
	            WSTickDisplay.spots_list = {};
	            window.tick_init = 'initialized';
	        }
	    }
	    if (data.tick) {
	        spots2 = Tick.spots();
	        epoches = Object.keys(spots2).sort(function (a, b) {
	            return a - b;
	        });
	    } else if (data.history) {
	        epoches = data.history.times;
	    }

	    if ($self.applicable_ticks && $self.ticks_needed && $self.applicable_ticks.length >= $self.ticks_needed) {
	        $self.evaluate_contract_outcome();
	        if (window.responseID) {
	            BinarySocket.send({ forget: window.responseID });
	        }
	    } else {
	        for (var d = 0; d < epoches.length; d++) {
	            var tick = void 0;
	            if (data.tick) {
	                tick = {
	                    epoch: parseInt(epoches[d]),
	                    quote: parseFloat(spots2[epoches[d]])
	                };
	            } else if (data.history) {
	                tick = {
	                    epoch: parseInt(data.history.times[d]),
	                    quote: parseFloat(data.history.prices[d])
	                };
	            }

	            if (tick.epoch > $self.contract_start_moment.unix() && !$self.spots_list[tick.epoch]) {
	                if (!$self.chart) return;
	                if (!$self.chart.series) return;
	                $self.chart.series[0].addPoint([$self.counter, tick.quote], true, false);
	                $self.applicable_ticks.push(tick);
	                $self.spots_list[tick.epoch] = tick.quote;
	                var indicator_key = '_' + $self.counter;
	                if (typeof $self.x_indicators[indicator_key] !== 'undefined') {
	                    $self.x_indicators[indicator_key].index = $self.counter;
	                    $self.add($self.x_indicators[indicator_key]);
	                }

	                $self.add_barrier();
	                $self.apply_chart_background_color(tick);
	                $self.counter++;
	            }
	        }
	    }
	};
	WSTickDisplay.updateChart = function (data, contract) {
	    window.subscribe = 'false';
	    if (contract) {
	        window.tick_underlying = contract.underlying;
	        window.tick_count = contract.tick_count;
	        window.tick_longcode = contract.longcode;
	        window.tick_display_name = contract.display_name;
	        window.tick_date_start = contract.date_start;
	        window.abs_barrier = contract.barrier;
	        window.tick_shortcode = contract.shortcode;
	        window.tick_init = '';
	        var request = {
	            ticks_history: contract.underlying,
	            start: contract.date_start,
	            end: 'latest'
	        };
	        if (contract.current_spot_time < contract.date_expiry) {
	            request.subscribe = 1;
	            window.subscribe = 'true';
	        } else {
	            request.end = contract.date_expiry;
	        }
	        WSTickDisplay.socketSend(request);
	    } else {
	        WSTickDisplay.dispatch(data);
	    }
	};

	module.exports = {
	    WSTickDisplay: WSTickDisplay
	};

/***/ },
/* 454 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var displayPriceMovement = __webpack_require__(455).displayPriceMovement;
	var countDecimalPlaces = __webpack_require__(455).countDecimalPlaces;
	var isVisible = __webpack_require__(420).isVisible;
	var elementTextContent = __webpack_require__(420).elementTextContent;

	/*
	 * Tick object handles all the process/display related to tick streaming
	 *
	 * We request tick stream for particular underlying to update current spot
	 *
	 *
	 * Usage:
	 * use `Tick.detail` to populate this object
	 *
	 * then use
	 *
	 * `Tick.quote()` to get current spot quote
	 * `Tick.id()` to get the unique for current stream
	 * `Tick.epoch()` to get the tick epoch time
	 * 'Tick.display()` to display current spot
	 */
	var Tick = function () {
	    var _quote = '',
	        _id = '',
	        _epoch = '',
	        _spots = {},
	        _errorMessage = '';
	    var keep_number = 20;

	    var details = function details(data) {
	        _errorMessage = '';

	        if (data) {
	            if (data.error) {
	                _errorMessage = data.error.message;
	            } else {
	                var tick = data.tick;
	                _quote = tick.quote;
	                _id = tick.id;
	                _epoch = tick.epoch;

	                _spots[_epoch] = _quote;
	                var epoches = Object.keys(_spots).sort(function (a, b) {
	                    return a - b;
	                });
	                if (epoches.length > keep_number) {
	                    delete _spots[epoches[0]];
	                }
	            }
	        }
	    };

	    var display = function display() {
	        $('#spot').fadeIn(200);
	        var spotElement = document.getElementById('spot');
	        if (!spotElement) return;
	        var message = '';
	        if (_errorMessage) {
	            message = _errorMessage;
	        } else {
	            message = _quote;
	        }

	        if (parseFloat(message) !== +message) {
	            spotElement.className = 'error';
	        } else {
	            spotElement.classList.remove('error');
	            displayPriceMovement(spotElement, elementTextContent(spotElement), message);
	            displayIndicativeBarrier();
	        }

	        elementTextContent(spotElement, message);
	    };

	    /*
	     * function to display indicative barrier
	     */
	    var displayIndicativeBarrier = function displayIndicativeBarrier() {
	        'use strict';

	        var unit = document.getElementById('duration_units'),
	            currentTick = Tick.quote(),
	            indicativeBarrierTooltip = document.getElementById('indicative_barrier_tooltip'),
	            indicativeHighBarrierTooltip = document.getElementById('indicative_high_barrier_tooltip'),
	            indicativeLowBarrierTooltip = document.getElementById('indicative_low_barrier_tooltip'),
	            barrierElement = document.getElementById('barrier'),
	            highBarrierElement = document.getElementById('barrier_high'),
	            lowBarrierElement = document.getElementById('barrier_low');
	        var value = void 0;

	        if (unit && (!isVisible(unit) || unit.value !== 'd') && currentTick && !isNaN(currentTick)) {
	            var decimalPlaces = countDecimalPlaces(currentTick);
	            if (indicativeBarrierTooltip && isVisible(indicativeBarrierTooltip)) {
	                var barrierValue = isNaN(parseFloat(barrierElement.value)) ? 0 : parseFloat(barrierElement.value);
	                indicativeBarrierTooltip.textContent = (parseFloat(currentTick) + barrierValue).toFixed(decimalPlaces);
	            }

	            if (indicativeHighBarrierTooltip && isVisible(indicativeHighBarrierTooltip)) {
	                value = parseFloat(highBarrierElement.value);
	                value = isNaN(value) ? 0 : value;
	                indicativeHighBarrierTooltip.textContent = (parseFloat(currentTick) + value).toFixed(decimalPlaces);
	            }

	            if (indicativeLowBarrierTooltip && isVisible(indicativeLowBarrierTooltip)) {
	                value = parseFloat(lowBarrierElement.value);
	                value = isNaN(value) ? 0 : value;
	                indicativeLowBarrierTooltip.textContent = (parseFloat(currentTick) + value).toFixed(decimalPlaces);
	            }
	        } else {
	            elementTextContent(indicativeBarrierTooltip, '');
	            elementTextContent(indicativeHighBarrierTooltip, '');
	            elementTextContent(indicativeLowBarrierTooltip, '');
	        }
	    };

	    var request = function request(symbol) {
	        BinarySocket.send({
	            ticks_history: symbol,
	            style: 'ticks',
	            end: 'latest',
	            count: keep_number,
	            subscribe: 1
	        });
	    };

	    var processHistory = function processHistory(res) {
	        if (res.history && res.history.times && res.history.prices) {
	            for (var i = 0; i < res.history.times.length; i++) {
	                details({
	                    tick: {
	                        epoch: res.history.times[i],
	                        quote: res.history.prices[i]
	                    }
	                });
	            }
	        }
	    };

	    return {
	        details: details,
	        display: display,
	        quote: function quote() {
	            return _quote;
	        },
	        id: function id() {
	            return _id;
	        },
	        epoch: function epoch() {
	            return _epoch;
	        },
	        errorMessage: function errorMessage() {
	            return _errorMessage;
	        },
	        clean: function clean() {
	            _spots = {};
	            _quote = '';
	            $('#spot').fadeOut(200, function () {
	                // resets spot movement coloring, will continue on the next tick responses
	                $(this).removeClass('price_moved_down price_moved_up').text('');
	            });
	        },
	        spots: function spots() {
	            return _spots;
	        },
	        setQuote: function setQuote(q) {
	            _quote = q;
	        },
	        request: request,
	        processHistory: processHistory
	    };
	}();

	module.exports = {
	    Tick: Tick
	};

/***/ },
/* 455 */
/***/ function(module, exports) {

	'use strict';

	/*
	 * Display price/spot movement variation to depict price moved up or down
	 */
	function displayPriceMovement(element, oldValue, currentValue) {
	    'use strict';

	    element.classList.remove('price_moved_down');
	    element.classList.remove('price_moved_up');
	    if (parseFloat(currentValue) > parseFloat(oldValue)) {
	        element.classList.remove('price_moved_down');
	        element.classList.add('price_moved_up');
	    } else if (parseFloat(currentValue) < parseFloat(oldValue)) {
	        element.classList.remove('price_moved_up');
	        element.classList.add('price_moved_down');
	    }
	}

	/*
	 * count number of decimal places in spot so that we can make barrier to same decimal places
	 */
	function countDecimalPlaces(num) {
	    'use strict';

	    if (!isNaN(num)) {
	        var str = num.toString();
	        if (str.indexOf('.') !== -1) {
	            return str.split('.')[1].length;
	        }
	    }
	    return 0;
	}

	var trading_times = {};

	function processTradingTimesAnswer(response) {
	    if (!trading_times.hasOwnProperty(response.echo_req.trading_times) && response.hasOwnProperty('trading_times') && response.trading_times.hasOwnProperty('markets')) {
	        for (var i = 0; i < response.trading_times.markets.length; i++) {
	            var submarkets = response.trading_times.markets[i].submarkets;
	            if (submarkets) {
	                for (var j = 0; j < submarkets.length; j++) {
	                    var symbols = submarkets[j].symbols;
	                    if (symbols) {
	                        for (var k = 0; k < symbols.length; k++) {
	                            var symbol = symbols[k];
	                            if (!trading_times[response.echo_req.trading_times]) {
	                                trading_times[response.echo_req.trading_times] = {};
	                            }
	                            trading_times[response.echo_req.trading_times][symbol.symbol] = symbol.times.close;
	                        }
	                    }
	                }
	            }
	        }
	    }
	}

	function getElement() {
	    return document.getElementById('date_start');
	}

	module.exports = {
	    displayPriceMovement: displayPriceMovement,
	    countDecimalPlaces: countDecimalPlaces,
	    processTradingTimesAnswer: processTradingTimesAnswer,
	    getTradingTimes: function getTradingTimes() {
	        return trading_times;
	    },
	    getStartDateNode: getElement
	};

/***/ },
/* 456 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var Defaults = __webpack_require__(457).Defaults;
	var Notifications = __webpack_require__(458).Notifications;
	var Symbols = __webpack_require__(459).Symbols;
	var Tick = __webpack_require__(454).Tick;
	var objectNotEmpty = __webpack_require__(419).objectNotEmpty;
	var Content = __webpack_require__(426).Content;
	var format_money = __webpack_require__(440).format_money;
	var japanese_client = __webpack_require__(307).japanese_client;
	var addComma = __webpack_require__(441).addComma;
	var Moment = __webpack_require__(308);
	var toISOFormat = __webpack_require__(441).toISOFormat;
	var localize = __webpack_require__(423).localize;
	var getLanguage = __webpack_require__(303).getLanguage;
	var Client = __webpack_require__(305).Client;
	var url_for = __webpack_require__(306).url_for;
	var elementTextContent = __webpack_require__(420).elementTextContent;
	var elementInnerHtml = __webpack_require__(420).elementInnerHtml;

	/*
	 * This contains common functions we need for processing the response
	 */

	if (typeof window === 'undefined') {
	    // eslint-disable-next-line
	    Element = function Element() {}; // jshint ignore:line
	}

	Element.prototype.hide = function () {
	    this.style.display = 'none';
	};

	Element.prototype.show = function () {
	    this.style.display = '';
	};

	if (!('remove' in Element.prototype)) {
	    Element.prototype.remove = function () {
	        if (this.parentNode) {
	            this.parentNode.removeChild(this);
	        }
	    };
	}

	/*
	 * function to display contract form as element of ul
	 */
	function displayContractForms(id, elements, selected) {
	    'use strict';

	    if (!id || !elements || !selected) return;
	    var target = document.getElementById(id),
	        fragment = document.createDocumentFragment();

	    elementInnerHtml(target, '');

	    if (elements) {
	        var tree = getContractCategoryTree(elements);
	        for (var i = 0; i < tree.length; i++) {
	            var el1 = tree[i];
	            var li = document.createElement('li');

	            li.classList.add('tm-li');
	            if (i === 0) {
	                li.classList.add('first');
	            } else if (i === tree.length - 1) {
	                li.classList.add('last');
	            }

	            if ((typeof el1 === 'undefined' ? 'undefined' : _typeof(el1)) === 'object') {
	                var fragment2 = document.createDocumentFragment();
	                var flag = 0,
	                    first = '';
	                for (var j = 0; j < el1[1].length; j++) {
	                    var el2 = el1[1][j];
	                    var li2 = document.createElement('li'),
	                        a2 = document.createElement('a'),
	                        content2 = document.createTextNode(elements[el2]);
	                    li2.classList.add('tm-li-2');

	                    if (j === 0) {
	                        first = el2.toLowerCase();
	                        li2.classList.add('first');
	                    } else if (j === el1[1].length - 1) {
	                        li2.classList.add('last');
	                    }

	                    if (selected && selected === el2.toLowerCase()) {
	                        li2.classList.add('active');
	                        a2.classList.add('a-active');
	                        flag = 1;
	                    }

	                    a2.classList.add('tm-a-2');
	                    a2.appendChild(content2);
	                    a2.setAttribute('menuitem', el2.toLowerCase());
	                    a2.setAttribute('id', el2.toLowerCase());

	                    li2.appendChild(a2);

	                    fragment2.appendChild(li2);
	                }
	                if (fragment2.hasChildNodes()) {
	                    var ul = document.createElement('ul'),
	                        a = document.createElement('a'),
	                        content = document.createTextNode(elements[el1[0]]);

	                    a.appendChild(content);
	                    a.setAttribute('class', 'tm-a');
	                    a.setAttribute('menuitem', first);
	                    ul.appendChild(fragment2);
	                    ul.setAttribute('class', 'tm-ul-2');
	                    ul.setAttribute('id', el1[0] + '-submenu');

	                    if (flag) {
	                        li.classList.add('active');
	                    }

	                    li.appendChild(a);
	                    li.appendChild(ul);
	                }
	            } else {
	                var content3 = document.createTextNode(elements[el1]),
	                    a3 = document.createElement('a');

	                if (selected && selected === el1.toLowerCase()) {
	                    a3.classList.add('a-active');
	                    li.classList.add('active');
	                }
	                a3.appendChild(content3);
	                a3.classList.add('tm-a');
	                a3.setAttribute('menuitem', el1);
	                a3.setAttribute('id', el1.toLowerCase());
	                li.appendChild(a3);
	            }
	            fragment.appendChild(li);
	        }
	        if (target) {
	            target.appendChild(fragment);
	            var list = target.getElementsByClassName('tm-li');
	            for (var k = 0; k < list.length; k++) {
	                var li4 = list[k];
	                li4.addEventListener('mouseover', function () {
	                    this.classList.add('hover');
	                });
	                li4.addEventListener('mouseout', function () {
	                    this.classList.remove('hover');
	                });
	            }
	        }
	    }
	}

	function displayMarkets(id, elements, selected) {
	    'use strict';

	    var target = document.getElementById(id),
	        fragment = document.createDocumentFragment();

	    while (target && target.firstChild) {
	        target.removeChild(target.firstChild);
	    }

	    var keys1 = Object.keys(elements).sort(marketSort);
	    for (var i = 0; i < keys1.length; i++) {
	        var key = keys1[i],
	            content = document.createTextNode(elements[key].name);
	        var option = document.createElement('option');
	        option.setAttribute('value', key);
	        if (selected && selected === key) {
	            option.setAttribute('selected', 'selected');
	        }
	        option.appendChild(content);
	        fragment.appendChild(option);

	        if (elements[key].submarkets && objectNotEmpty(elements[key].submarkets)) {
	            var keys2 = Object.keys(elements[key].submarkets).sort(marketSort);
	            for (var j = 0; j < keys2.length; j++) {
	                var key2 = keys2[j];
	                option = document.createElement('option');
	                option.setAttribute('value', key2);
	                if (selected && selected === key2) {
	                    option.setAttribute('selected', 'selected');
	                }
	                elementTextContent(option, '\xA0\xA0\xA0\xA0' + elements[key].submarkets[key2].name);
	                fragment.appendChild(option);
	            }
	        }
	    }
	    if (target) {
	        target.appendChild(fragment);

	        if (target.selectedIndex < 0) {
	            target.selectedIndex = 0;
	        }
	        var current = target.options[target.selectedIndex];
	        if (selected !== current.value) {
	            Defaults.set('market', current.value);
	        }

	        if (current.disabled) {
	            // there is no open market
	            Notifications.show({ text: localize('All markets are closed now. Please try again later.'), uid: 'MARKETS_CLOSED' });
	            document.getElementById('trading_init_progress').style.display = 'none';
	        }
	    }
	}

	/*
	 * function to display underlyings
	 *
	 * we need separate function for this as sorting is different and later
	 * we may add submarket to it
	 */
	function displayUnderlyings(id, elements, selected) {
	    'use strict';

	    var target = document.getElementById(id),
	        fragment = document.createDocumentFragment();

	    while (target && target.firstChild) {
	        target.removeChild(target.firstChild);
	    }

	    if (elements) {
	        var keys = Object.keys(elements).sort(function (a, b) {
	            return elements[a].display.localeCompare(elements[b].display);
	        });
	        var submarkets = {};
	        for (var i = 0; i < keys.length; i++) {
	            if (!submarkets.hasOwnProperty(elements[keys[i]].submarket)) {
	                submarkets[elements[keys[i]].submarket] = [];
	            }
	            submarkets[elements[keys[i]].submarket].push(keys[i]);
	        }
	        var keys2 = Object.keys(submarkets).sort(marketSort);
	        for (var j = 0; j < keys2.length; j++) {
	            for (var k = 0; k < submarkets[keys2[j]].length; k++) {
	                var key = submarkets[keys2[j]][k];
	                var option = document.createElement('option'),
	                    content = document.createTextNode(localize(elements[key].display));
	                option.setAttribute('value', key);
	                if (selected && selected === key) {
	                    option.setAttribute('selected', 'selected');
	                }
	                option.appendChild(content);
	                fragment.appendChild(option);
	            }
	        }
	    }
	    if (target) {
	        target.appendChild(fragment);
	    }
	}

	/*
	 * This maps the form name and barrierCategory we display on
	 * trading form to the actual we send it to backend
	 * for e.g risefall is mapped to callput with barrierCategory euro_atm
	 */
	function getFormNameBarrierCategory(displayFormName) {
	    'use strict';

	    var obj = {};
	    if (displayFormName) {
	        if (displayFormName === 'risefall') {
	            obj.formName = 'callput';
	            obj.barrierCategory = 'euro_atm';
	        } else if (displayFormName === 'higherlower') {
	            obj.formName = 'callput';
	            obj.barrierCategory = 'euro_non_atm';
	        } else if (displayFormName === 'callput') {
	            obj.formName = displayFormName;
	            obj.barrierCategory = 'euro_atm';
	        } else if (displayFormName === 'overunder' || displayFormName === 'evenodd' || displayFormName === 'matchdiff') {
	            obj.formName = 'digits';
	            obj.barrierCategory = '';
	        } else {
	            obj.formName = displayFormName;
	            obj.barrierCategory = '';
	        }
	    } else {
	        obj.formName = 'callput';
	        obj.barrierCategory = 'euro_atm';
	    }
	    return obj;
	}

	/*
	 * This maps the contract type to where we display on trading form
	 * and as there is no mapping on server side so need to create it
	 * on front end
	 *
	 * for example we display CALL on top and PUT to bottom
	 */
	function contractTypeDisplayMapping(type) {
	    'use strict';

	    var obj = {
	        CALL: 'top',
	        PUT: 'bottom',
	        CALLE: 'top',
	        PUTE: 'bottom',
	        ASIANU: 'top',
	        ASIAND: 'bottom',
	        DIGITMATCH: 'top',
	        DIGITDIFF: 'bottom',
	        DIGITEVEN: 'top',
	        DIGITODD: 'bottom',
	        DIGITOVER: 'top',
	        DIGITUNDER: 'bottom',
	        EXPIRYRANGEE: 'top',
	        EXPIRYMISSE: 'bottom',
	        EXPIRYRANGE: 'top',
	        EXPIRYMISS: 'bottom',
	        RANGE: 'top',
	        UPORDOWN: 'bottom',
	        ONETOUCH: 'top',
	        NOTOUCH: 'bottom',
	        SPREADU: 'top',
	        SPREADD: 'bottom'
	    };

	    return type ? obj[type] : 'top';
	}

	function showPriceOverlay() {
	    'use strict';

	    var elm = document.getElementById('loading_container2');
	    if (elm) {
	        elm.style.display = 'block';
	    }
	}

	function hidePriceOverlay() {
	    'use strict';

	    var elm = document.getElementById('loading_container2');
	    if (elm) {
	        elm.style.display = 'none';
	    }
	}

	function hideFormOverlay() {
	    'use strict';

	    var elm = document.getElementById('loading_container3');
	    if (elm) {
	        elm.style.display = 'none';
	    }
	}

	function showFormOverlay() {
	    'use strict';

	    var elm = document.getElementById('loading_container3');
	    if (elm) {
	        elm.style.display = 'block';
	    }
	}

	/*
	 * function to hide contract confirmation overlay container
	 */
	function hideOverlayContainer() {
	    'use strict';

	    var elm = document.getElementById('contract_confirmation_container');
	    if (elm) {
	        elm.style.display = 'none';
	    }
	    var elm2 = document.getElementById('contracts_list');
	    if (elm2) {
	        elm2.style.display = 'flex';
	    }
	    $('.purchase_button').css('visibility', '');
	}

	function getContractCategoryTree(elements) {
	    'use strict';

	    var tree = [['updown', ['risefall', 'higherlower']], 'touchnotouch', ['inout', ['endsinout', 'staysinout']], 'asian', ['digits', ['matchdiff', 'evenodd', 'overunder']], 'spreads'];

	    if (elements) {
	        tree = tree.map(function (e) {
	            if ((typeof e === 'undefined' ? 'undefined' : _typeof(e)) === 'object') {
	                e[1] = e[1].filter(function (e1) {
	                    return elements[e1];
	                });
	                if (!e[1].length) {
	                    e = '';
	                }
	            } else if (!elements[e]) {
	                e = '';
	            }
	            return e;
	        });
	        tree = tree.filter(function (v) {
	            return v.length;
	        });
	    }
	    return tree;
	}

	/*
	 * resets price movement color changing, to prevent coloring on some changes
	 * coloring will continue on the next proposal responses
	 */
	function resetPriceMovement() {
	    var btns = document.getElementsByClassName('purchase_button');
	    for (var i = 0; i < btns.length; i++) {
	        btns[i].setAttribute('data-display_value', '');
	        btns[i].setAttribute('data-payout', '');
	    }
	}

	/*
	 * function to toggle active class of menu
	 */
	function toggleActiveNavMenuElement(nav, eventElement) {
	    'use strict';

	    var liElements = nav.getElementsByTagName('li');
	    var classes = eventElement.classList;

	    if (!classes.contains('active')) {
	        for (var i = 0, len = liElements.length; i < len; i++) {
	            liElements[i].classList.remove('active');
	        }
	        classes.add('active');
	    }
	}

	function toggleActiveCatMenuElement(nav, eventElementId) {
	    'use strict';

	    var eventElement = document.getElementById(eventElementId),
	        liElements = nav.querySelectorAll('.active, .a-active'),
	        classes = eventElement.classList;
	    var i = void 0,
	        len = void 0;

	    if (!classes.contains('active')) {
	        for (i = 0, len = liElements.length; i < len; i++) {
	            liElements[i].classList.remove('active');
	            liElements[i].classList.remove('a-active');
	        }
	        classes.add('a-active');

	        i = 0;
	        var parent = eventElement.parentElement;
	        while (parent && parent.id !== nav.id && i < 10) {
	            if (parent.tagName === 'LI') {
	                parent.classList.add('active');
	            }
	            parent = parent.parentElement;
	            i++;
	        }
	    }
	}

	/*
	 * function to display the profit and return of bet under each trade container except spreads
	 */
	function displayCommentPrice(node, currency, type, payout) {
	    'use strict';

	    if (node && type && payout) {
	        var profit = payout - type,
	            return_percent = profit / type * 100,
	            comment = Content.localize().textNetProfit + ': ' + format_money(currency, profit) + ' | ' + Content.localize().textReturn + ' ' + return_percent.toFixed(1) + '%';

	        if (isNaN(profit) || isNaN(return_percent)) {
	            node.hide();
	        } else {
	            node.show();
	            elementTextContent(node, comment);
	        }
	    }
	}

	/*
	 * function to display comment for spreads
	 */
	function displayCommentSpreads(node, currency, point) {
	    'use strict';

	    if (node && point) {
	        var amountPerPoint = document.getElementById('amount_per_point').value,
	            stopType = document.querySelector('input[name="stop_type"]:checked').value,
	            stopLoss = document.getElementById('stop_loss').value;
	        var displayAmount = 0;

	        if (isNaN(stopLoss) || isNaN(amountPerPoint)) {
	            node.hide();
	        } else {
	            if (stopType === 'point') {
	                displayAmount = parseFloat(parseFloat(amountPerPoint) * parseFloat(stopLoss));
	            } else {
	                displayAmount = parseFloat(stopLoss);
	            }
	            elementTextContent(node, Content.localize().textSpreadDepositComment + ' ' + format_money(currency, displayAmount) + ' ' + Content.localize().textSpreadRequiredComment + ': ' + point + ' ' + Content.localize().textSpreadPointsComment);
	        }
	    }
	}

	/*
	 * This function is used in case where we have input and we don't want to fire
	 * event on every change while user is typing for example in case of amount if
	 * we want to change 10 to 1000 i.e. two zeros so two input events will be fired
	 * normally, this function delay the event based on delay specified in milliseconds
	 *
	 * Reference
	 * http://davidwalsh.name/javascript-debounce-function
	 */
	function debounce(func, wait, immediate) {
	    'use strict';

	    var timeout = void 0;
	    var delay = wait || 500;
	    return function () {
	        var context = this,
	            args = arguments;
	        var later = function later() {
	            timeout = null;
	            if (!immediate) func.apply(context, args);
	        };
	        var callNow = immediate && !timeout;
	        clearTimeout(timeout);
	        timeout = setTimeout(later, delay);
	        if (callNow) func.apply(context, args);
	    };
	}

	/*
	 * function to check if selected market is allowed for current user
	 */
	function getDefaultMarket() {
	    'use strict';

	    var mkt = Defaults.get('market');
	    var markets = Symbols.markets(1);
	    if (!mkt || !markets[mkt]) {
	        var sorted_markets = Object.keys(Symbols.markets()).filter(function (v) {
	            return markets[v].is_active;
	        }).sort(function (a, b) {
	            return getMarketsOrder(a) - getMarketsOrder(b);
	        });
	        mkt = sorted_markets[0];
	    }
	    return mkt;
	}

	// Order
	function getMarketsOrder(market) {
	    var order = {
	        forex: 1,
	        volidx: 2,
	        indices: 3,
	        stocks: 4,
	        commodities: 5
	    };
	    return order[market] ? order[market] : 100;
	}

	/*
	 * this is invoked when submit button is clicked and prevents reloading of page
	 */
	function addEventListenerForm() {
	    'use strict';

	    document.getElementById('websocket_form').addEventListener('submit', function (evt) {
	        evt.currentTarget.classList.add('submitted');
	        evt.preventDefault();
	        return false;
	    }, false);
	}

	/*
	 * this creates a button, clicks it, and destroys it to invoke the listener
	 */
	function submitForm(form) {
	    'use strict';

	    var button = form.ownerDocument.createElement('input');
	    button.style.display = 'none';
	    button.type = 'submit';
	    form.appendChild(button).click();
	    form.removeChild(button);
	}

	/*
	 * function to sort the duration in ascending order
	 */
	function durationOrder(duration) {
	    'use strict';

	    var order = {
	        t: 1,
	        s: 2,
	        m: 3,
	        h: 4,
	        d: 5
	    };
	    return order[duration];
	}

	function marketOrder(market) {
	    'use strict';

	    var order = {
	        forex: 0,
	        major_pairs: 1,
	        minor_pairs: 2,
	        smart_fx: 3,
	        indices: 4,
	        asia_oceania: 5,
	        europe_africa: 6,
	        americas: 7,
	        otc_index: 8,
	        stocks: 9,
	        au_otc_stock: 10,
	        ge_otc_stock: 11,
	        india_otc_stock: 12,
	        uk_otc_stock: 13,
	        us_otc_stock: 14,
	        commodities: 15,
	        metals: 16,
	        energy: 17,
	        volidx: 18,
	        random_index: 19,
	        random_daily: 20,
	        random_nightly: 21
	    };
	    return order[market];
	}

	function marketSort(a, b) {
	    if (marketOrder(a) > marketOrder(b)) {
	        return 1;
	    } else if (marketOrder(a) < marketOrder(b)) {
	        return -1;
	    }

	    return 0;
	}

	function displayTooltip(market, symbol) {
	    'use strict';

	    var tip = document.getElementById('symbol_tip'),
	        guide = document.getElementById('guideBtn'),
	        app = document.getElementById('androidApp'),
	        appstore = document.getElementById('appstore'),
	        markets = document.getElementById('contract_markets').value;
	    if (!market || !symbol) return;
	    if (market.match(/^volidx/) || symbol.match(/^R/) || market.match(/^random_index/) || market.match(/^random_daily/)) {
	        if (guide) guide.hide();
	        tip.show();
	        tip.setAttribute('target', url_for('/get-started/volidx-markets'));
	        app.show();
	        appstore.show();
	    } else {
	        app.hide();
	        appstore.hide();
	        tip.hide();
	        if (guide) guide.show();
	    }
	    if (market.match(/^otc_index/) || symbol.match(/^OTC_/) || market.match(/stock/) || markets.match(/stocks/)) {
	        tip.show();
	        tip.setAttribute('target', url_for('/get-started/otc-indices-stocks'));
	    }
	    if (market.match(/^random_index/) || symbol.match(/^R_/)) {
	        tip.setAttribute('target', url_for('/get-started/volidx-markets', '#volidx-indices'));
	    }
	    if (market.match(/^random_daily/) || symbol.match(/^RDB/) || symbol.match(/^RDMO/) || symbol.match(/^RDS/)) {
	        tip.setAttribute('target', url_for('/get-started/volidx-markets', '#volidx-quotidians'));
	    }
	    if (market.match(/^smart_fx/) || symbol.match(/^WLD/)) {
	        tip.show();
	        tip.setAttribute('target', url_for('/get-started/smart-indices', '#world-fx-indices'));
	    }
	}

	function selectOption(option, select) {
	    var options = select.getElementsByTagName('option');
	    var contains = 0;
	    for (var i = 0; i < options.length; i++) {
	        if (options[i].value === option && !options[i].hasAttribute('disabled')) {
	            contains = 1;
	            break;
	        }
	    }
	    if (contains) {
	        select.value = option;
	        return true;
	    }

	    return false;
	}

	function updatePurchaseStatus(final_price, pnl, contract_status) {
	    $('#contract_purchase_heading').text(localize(contract_status));
	    var $payout = $('#contract_purchase_payout'),
	        $cost = $('#contract_purchase_cost'),
	        $profit = $('#contract_purchase_profit');

	    $payout.html(Content.localize().textBuyPrice + '<p>' + addComma(Math.abs(pnl)) + '</p>');
	    $cost.html(Content.localize().textFinalPrice + '<p>' + addComma(final_price) + '</p>');
	    if (!final_price) {
	        $profit.html(Content.localize().textLoss + '<p>' + addComma(pnl) + '</p>');
	    } else {
	        $profit.html(Content.localize().textProfit + '<p>' + addComma(Math.round((final_price - pnl) * 100) / 100) + '</p>');
	        updateContractBalance(Client.get_value('balance'));
	    }
	}

	function updateContractBalance(balance) {
	    $('#contract_purchase_balance').text(Content.localize().textContractConfirmationBalance + ' ' + format_money(Client.get_value('currency'), balance));
	}

	function updateWarmChart() {
	    var $chart = $('#trading_worm_chart');
	    var spots = Object.keys(Tick.spots()).sort(function (a, b) {
	        return a - b;
	    }).map(function (v) {
	        return Tick.spots()[v];
	    });
	    var chart_config = {
	        type: 'line',
	        lineColor: '#606060',
	        fillColor: false,
	        spotColor: '#00f000',
	        minSpotColor: '#f00000',
	        maxSpotColor: '#0000f0',
	        highlightSpotColor: '#ffff00',
	        highlightLineColor: '#000000',
	        spotRadius: 1.25
	    };
	    if ($chart && typeof $chart.sparkline === 'function') {
	        $chart.sparkline(spots, chart_config);
	        if (spots.length) {
	            $chart.show();
	        } else {
	            $chart.hide();
	        }
	    }
	}

	function reloadPage() {
	    Defaults.remove('market', 'underlying', 'formname', 'date_start', 'expiry_type', 'expiry_date', 'expirt_time', 'duration_units', 'diration_value', 'amount', 'amount_type', 'currency', 'stop_loss', 'stop_type', 'stop_profit', 'amount_per_point', 'prediction');
	    location.reload();
	}

	function showHighchart() {
	    Content.populate();

	    if (window.chartAllowed) {
	        chartFrameSource();
	    } else {
	        chartFrameCleanup();
	        $('#trade_live_chart').hide();
	        $('#chart-error').text(localize('Chart is not available for this underlying.')).show();
	    }
	}

	function chartFrameCleanup() {
	    /*
	     * Prevent IE memory leak (http://stackoverflow.com/questions/8407946).
	     */
	    var chart_frame = document.getElementById('chart_frame');
	    if (chart_frame) {
	        chart_frame.src = 'about:blank';
	    }
	}

	function chartFrameSource() {
	    if ($('#tab_graph').hasClass('active') && (sessionStorage.getItem('old_underlying') !== sessionStorage.getItem('underlying') || /^(|about:blank)$/.test($('#chart_frame').attr('src')))) {
	        chartFrameCleanup();
	        setChartSource();
	        sessionStorage.setItem('old_underlying', document.getElementById('underlying').value);
	    }
	    $('#chart-error').hide();
	    $('#trade_live_chart').show();
	}

	function setChartSource() {
	    var ja = japanese_client();
	    document.getElementById('chart_frame').src = 'https://webtrader.binary.com?affiliates=true&instrument=' + document.getElementById('underlying').value + '&timePeriod=1t&gtm=true&lang=' + getLanguage().toLowerCase() + '&hideOverlay=' + (ja ? 'true' : 'false') + '&hideShare=' + (ja ? 'true' : 'false') + '&timezone=GMT+' + (ja ? '9' : '0') + '&hideFooter=' + (ja ? 'true' : 'false');
	}

	// ============= Functions used in /trading_beta =============

	/*
	 * function to toggle active class of menu
	 */
	function toggleActiveNavMenuElement_Beta(nav, eventElement) {
	    'use strict';

	    var liElements = nav.getElementsByTagName('li');
	    var classes = eventElement.classList;

	    if (!classes.contains('active')) {
	        for (var i = 0, len = liElements.length; i < len; i++) {
	            liElements[i].classList.remove('active');
	        }
	        classes.add('active');
	        var parent = eventElement.parentElement.parentElement;
	        if (parent.tagName === 'LI' && !parent.classList.contains('active')) {
	            parent.classList.add('active');
	        }
	    }
	}

	function updatePurchaseStatus_Beta(final_price, pnl, contract_status) {
	    final_price = String(final_price).replace(/,/g, '') * 1;
	    pnl = String(pnl).replace(/,/g, '') * 1;
	    $('#contract_purchase_heading').text(localize(contract_status));
	    var payout = document.getElementById('contract_purchase_payout'),
	        cost = document.getElementById('contract_purchase_cost'),
	        profit = document.getElementById('contract_purchase_profit');

	    label_value(cost, Content.localize().textStake, addComma(Math.abs(pnl)));
	    label_value(payout, Content.localize().textPayout, addComma(final_price));

	    var isWin = final_price > 0;
	    $('#contract_purchase_profit_value').attr('class', isWin ? 'profit' : 'loss');
	    label_value(profit, isWin ? Content.localize().textProfit : Content.localize().textLoss, addComma(isWin ? Math.round((final_price - pnl) * 100) / 100 : -Math.abs(pnl)));
	}

	function displayTooltip_Beta(market, symbol) {
	    'use strict';

	    var tip = document.getElementById('symbol_tip'),
	        markets = document.getElementById('contract_markets').value;
	    if (!market || !symbol) return;
	    if (market.match(/^volidx/) || symbol.match(/^R/) || market.match(/^random_index/) || market.match(/^random_daily/)) {
	        tip.show();
	        tip.setAttribute('target', url_for('/get-started/volidx-markets'));
	    } else {
	        tip.hide();
	    }
	    if (market.match(/^otc_index/) || symbol.match(/^OTC_/) || market.match(/stock/) || markets.match(/stocks/)) {
	        tip.show();
	        tip.setAttribute('target', url_for('/get-started/otc-indices-stocks'));
	    }
	    if (market.match(/^random_index/) || symbol.match(/^R_/)) {
	        tip.setAttribute('target', url_for('/get-started/volidx-markets', '#volidx-indices'));
	    }
	    if (market.match(/^random_daily/) || symbol.match(/^RDB/) || symbol.match(/^RDMO/) || symbol.match(/^RDS/)) {
	        tip.setAttribute('target', url_for('/get-started/volidx-markets', '#volidx-quotidians'));
	    }
	    if (market.match(/^smart_fx/) || symbol.match(/^WLD/)) {
	        tip.show();
	        tip.setAttribute('target', url_for('/get-started/smart-indices', '#world-fx-indices'));
	    }
	}

	function label_value(label_elem, label, value, no_currency) {
	    var currency = Client.get_value('currency');
	    elementInnerHtml(label_elem, label);
	    var value_elem = document.getElementById(label_elem.id + '_value');
	    elementInnerHtml(value_elem, no_currency ? value : format_money(currency, value));
	    value_elem.setAttribute('value', String(value).replace(/,/g, ''));
	}

	function timeIsValid($element) {
	    var endDateValue = document.getElementById('expiry_date').getAttribute('data-value'),
	        startDateValue = document.getElementById('date_start').value,
	        endTimeValue = document.getElementById('expiry_time').value;
	    var $invalid_time = $('#invalid-time');

	    if ($element.attr('id') === $('#expiry_time') && endTimeValue && !/^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$/.test(endTimeValue)) {
	        $element.addClass('error-field');
	        if ($invalid_time.length === 0) {
	            $('#expiry_type_endtime').parent().append($('<p>', { class: 'error-msg', id: 'invalid-time', text: localize('Time is in the wrong format.') }));
	        }
	        return false;
	    }

	    $element.removeClass('error-field');
	    $invalid_time.remove();

	    endDateValue = endDateValue ? toISOFormat(Moment(endDateValue)) : toISOFormat(new Moment());
	    startDateValue = startDateValue === 'now' ? Math.floor(window.time._i / 1000) : startDateValue;
	    endTimeValue = endTimeValue || '23:59:59';

	    if (Moment.utc(endDateValue + ' ' + endTimeValue).unix() <= startDateValue) {
	        $element.addClass('error-field');
	        if (!document.getElementById('end_time_validation')) {
	            $('#expiry_type_endtime').append('<p class="error-msg" id="end_time_validation">' + localize('End time must be after start time.') + '</p>');
	        }
	        return false;
	    }

	    $element.removeClass('error-field');
	    $('#end_time_validation').remove();
	    return true;
	}

	module.exports = {
	    displayUnderlyings: displayUnderlyings,
	    getFormNameBarrierCategory: getFormNameBarrierCategory,
	    contractTypeDisplayMapping: contractTypeDisplayMapping,
	    showPriceOverlay: showPriceOverlay,
	    hidePriceOverlay: hidePriceOverlay,
	    hideFormOverlay: hideFormOverlay,
	    showFormOverlay: showFormOverlay,
	    hideOverlayContainer: hideOverlayContainer,
	    getContractCategoryTree: getContractCategoryTree,
	    resetPriceMovement: resetPriceMovement,
	    toggleActiveNavMenuElement: toggleActiveNavMenuElement,
	    toggleActiveCatMenuElement: toggleActiveCatMenuElement,
	    displayCommentPrice: displayCommentPrice,
	    displayCommentSpreads: displayCommentSpreads,
	    debounce: debounce,
	    getDefaultMarket: getDefaultMarket,
	    addEventListenerForm: addEventListenerForm,
	    submitForm: submitForm,
	    durationOrder: durationOrder,
	    displayTooltip: displayTooltip,
	    selectOption: selectOption,
	    updatePurchaseStatus: updatePurchaseStatus,
	    updateContractBalance: updateContractBalance,
	    updateWarmChart: updateWarmChart,
	    reloadPage: reloadPage,
	    showHighchart: showHighchart,
	    chartFrameCleanup: chartFrameCleanup,
	    chartFrameSource: chartFrameSource,
	    displayContractForms: displayContractForms,
	    displayMarkets: displayMarkets,
	    toggleActiveNavMenuElement_Beta: toggleActiveNavMenuElement_Beta,
	    updatePurchaseStatus_Beta: updatePurchaseStatus_Beta,
	    displayTooltip_Beta: displayTooltip_Beta,
	    label_value: label_value,
	    timeIsValid: timeIsValid
	};

/***/ },
/* 457 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var objectNotEmpty = __webpack_require__(419).objectNotEmpty;
	var isVisible = __webpack_require__(420).isVisible;
	var url = __webpack_require__(306).url;

	/*
	 * Handles trading page default values
	 *
	 * Priorities:
	 * 1. Client's input: on each change to form, it will reflect to both query string & session storage
	 * 2. Query string parameters: will change session storage values
	 * 3. Session storage values: if none of the above, it will be the source
	 *
	 */

	var Defaults = function () {
	    'use strict';

	    var params = {};
	    var getDefault = function getDefault(key) {
	        var pValue = params[key] || url.param(key),
	            sValue = sessionStorage.getItem(key);
	        if (pValue && (!sValue || pValue !== sValue)) {
	            sessionStorage.setItem(key, pValue);
	        }
	        if (!pValue && sValue) {
	            setDefault(key, sValue);
	        }
	        return pValue || sValue;
	    };

	    var setDefault = function setDefault(key, value) {
	        if (!key) return;
	        value = value || '';
	        if (!objectNotEmpty(params)) params = url.params_hash();
	        if (params[key] !== value) {
	            params[key] = value;
	            // to increase speed, do not set values when form is still loading
	            if (!isVisible(document.getElementById('trading_init_progress'))) {
	                sessionStorage.setItem(key, value);
	                updateURL();
	            }
	        }
	    };

	    var removeDefault = function removeDefault() {
	        if (!objectNotEmpty(params)) params = url.params_hash();
	        var isUpdated = false;
	        for (var i = 0; i < arguments.length; i++) {
	            if (params.hasOwnProperty(arguments[i])) {
	                sessionStorage.removeItem(arguments[i]);
	                delete params[arguments[i]];
	                isUpdated = true;
	            }
	        }
	        if (isUpdated) {
	            updateURL();
	        }
	    };

	    var updateAll = function updateAll() {
	        Object.keys(params).forEach(function (key) {
	            sessionStorage.setItem(key, params[key]);
	        });
	        updateURL();
	    };

	    var updateURL = function updateURL() {
	        var updated_url = window.location.pathname + '?' + url.params_hash_to_string(params);
	        window.history.replaceState({ url: updated_url }, null, updated_url);
	    };

	    return {
	        get: getDefault,
	        set: setDefault,
	        update: updateAll,
	        remove: removeDefault,
	        clear: function clear() {
	            params = {};
	        }
	    };
	}();

	module.exports = {
	    Defaults: Defaults
	};

/***/ },
/* 458 */
/***/ function(module, exports) {

	'use strict';

	/*
	 * Notifications manages various notification messages
	 *
	 */

	var Notifications = function () {
	    'use strict';

	    /*
	     * options: Object {
	     *     text       : {string}  message text to display
	     *     uid        : {string}  unique id to prevent duplicating the same message and also used to hide the message
	     *     dismissible: {boolean} dismissible messages can be hidden by client
	     * }
	     */

	    var showErrorMessage = function showErrorMessage(options) {
	        var $note_wrapper = getContainer(),
	            $this_uid = $note_wrapper.find('#' + options.uid);

	        if (!options.uid || $this_uid.length === 0) {
	            $note_wrapper.prepend(generateMessage(options));
	        } else if ($this_uid.html() !== options.text) {
	            $this_uid.replaceWith(generateMessage(options));
	        }

	        $.scrollTo($note_wrapper, 500, { offset: -5 });
	    };

	    var generateMessage = function generateMessage(options) {
	        var $message = $('<div class="notice-msg center-text' + (options.dismissible ? ' dismissible' : '') + '"' + (options.uid ? ' id="' + options.uid + '"' : '') + '>' + options.text + (options.dismissible ? '<div class="notification-dismiss">x</div>' : '') + '</div>');

	        if (options.dismissible) {
	            $message.click(function () {
	                dismissMessage(this);
	            });
	        }

	        return $message;
	    };

	    var hideErrorMessage = function hideErrorMessage(uid) {
	        if (uid) {
	            getContainer().find('#' + uid).remove();
	        }
	    };

	    var dismissMessage = function dismissMessage(obj) {
	        $(obj).remove();
	    };

	    var getContainer = function getContainer() {
	        return $('#notifications_wrapper');
	    };

	    return {
	        show: showErrorMessage,
	        hide: hideErrorMessage
	    };
	}();

	module.exports = {
	    Notifications: Notifications
	};

/***/ },
/* 459 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var ActiveSymbols = __webpack_require__(446).ActiveSymbols;

	/*
	 * Symbols object parses the active_symbols json that we get from socket.send({active_symbols: 'brief'}
	 * and outputs in usable form, it gives markets, underlyings
	 *
	 *
	 * Usage:
	 *
	 * use `Symbols.details` to populate this object first
	 *
	 * then use
	 *
	 * `Symbols.markets` to get markets like Forex, Random etc
	 * `Symbols.underlyings` to get underlyings
	 *
	 */

	var Symbols = function () {
	    'use strict';

	    var tradeMarkets = {},
	        tradeMarketsList = {},
	        tradeUnderlyings = {},
	        _need_page_update = 1,
	        names = {};

	    var details = function details(data) {
	        var allSymbols = data.active_symbols;
	        tradeMarkets = ActiveSymbols.getMarkets(allSymbols);
	        tradeMarketsList = ActiveSymbols.getMarketsList(allSymbols);
	        tradeUnderlyings = ActiveSymbols.getTradeUnderlyings(allSymbols);
	        names = ActiveSymbols.getSymbolNames(allSymbols);
	    };

	    var getSymbols = function getSymbols(update) {
	        var $args = {
	            active_symbols: 'brief'
	        };
	        BinarySocket.send($args);
	        _need_page_update = update;
	    };

	    return {
	        details: details,
	        getSymbols: getSymbols,
	        markets: function markets(list) {
	            return list ? tradeMarketsList : tradeMarkets;
	        },
	        underlyings: function underlyings() {
	            return tradeUnderlyings;
	        },
	        getName: function getName(symbol) {
	            return names[symbol];
	        },
	        need_page_update: function need_page_update() {
	            return _need_page_update;
	        },
	        getAllSymbols: function getAllSymbols() {
	            return names;
	        }
	    };
	}();

	module.exports = {
	    Symbols: Symbols
	};

/***/ },
/* 460 */
/***/ function(module, exports) {

	/*
	 Highcharts JS v5.0.7 (2017-01-17)

	 (c) 2009-2016 Torstein Honsi

	 License: www.highcharts.com/license
	*/
	(function(L,a){"object"===typeof module&&module.exports?module.exports=L.document?a(L):a:L.Highcharts=a(L)})("undefined"!==typeof window?window:this,function(L){L=function(){var a=window,B=a.document,A=a.navigator&&a.navigator.userAgent||"",H=B&&B.createElementNS&&!!B.createElementNS("http://www.w3.org/2000/svg","svg").createSVGRect,G=/(edge|msie|trident)/i.test(A)&&!window.opera,r=!H,g=/Firefox/.test(A),f=g&&4>parseInt(A.split("Firefox/")[1],10);return a.Highcharts?a.Highcharts.error(16,!0):{product:"Highcharts",
	version:"5.0.7",deg2rad:2*Math.PI/360,doc:B,hasBidiBug:f,hasTouch:B&&void 0!==B.documentElement.ontouchstart,isMS:G,isWebKit:/AppleWebKit/.test(A),isFirefox:g,isTouchDevice:/(Mobile|Android|Windows Phone)/.test(A),SVG_NS:"http://www.w3.org/2000/svg",chartCount:0,seriesTypes:{},symbolSizes:{},svg:H,vml:r,win:a,charts:[],marginNames:["plotTop","marginRight","marginBottom","plotLeft"],noop:function(){}}}();(function(a){var B=[],A=a.charts,H=a.doc,G=a.win;a.error=function(r,g){r=a.isNumber(r)?"Highcharts error #"+
	r+": www.highcharts.com/errors/"+r:r;if(g)throw Error(r);G.console&&console.log(r)};a.Fx=function(a,g,f){this.options=g;this.elem=a;this.prop=f};a.Fx.prototype={dSetter:function(){var a=this.paths[0],g=this.paths[1],f=[],u=this.now,l=a.length,q;if(1===u)f=this.toD;else if(l===g.length&&1>u)for(;l--;)q=parseFloat(a[l]),f[l]=isNaN(q)?a[l]:u*parseFloat(g[l]-q)+q;else f=g;this.elem.attr("d",f,null,!0)},update:function(){var a=this.elem,g=this.prop,f=this.now,u=this.options.step;if(this[g+"Setter"])this[g+
	"Setter"]();else a.attr?a.element&&a.attr(g,f,null,!0):a.style[g]=f+this.unit;u&&u.call(a,f,this)},run:function(a,g,f){var r=this,l=function(a){return l.stopped?!1:r.step(a)},q;this.startTime=+new Date;this.start=a;this.end=g;this.unit=f;this.now=this.start;this.pos=0;l.elem=this.elem;l.prop=this.prop;l()&&1===B.push(l)&&(l.timerId=setInterval(function(){for(q=0;q<B.length;q++)B[q]()||B.splice(q--,1);B.length||clearInterval(l.timerId)},13))},step:function(a){var r=+new Date,f,u=this.options;f=this.elem;
	var l=u.complete,q=u.duration,d=u.curAnim,b;if(f.attr&&!f.element)f=!1;else if(a||r>=q+this.startTime){this.now=this.end;this.pos=1;this.update();a=d[this.prop]=!0;for(b in d)!0!==d[b]&&(a=!1);a&&l&&l.call(f);f=!1}else this.pos=u.easing((r-this.startTime)/q),this.now=this.start+(this.end-this.start)*this.pos,this.update(),f=!0;return f},initPath:function(r,g,f){function u(a){var e,b;for(n=a.length;n--;)e="M"===a[n]||"L"===a[n],b=/[a-zA-Z]/.test(a[n+3]),e&&b&&a.splice(n+1,0,a[n+1],a[n+2],a[n+1],a[n+
	2])}function l(a,e){for(;a.length<m;){a[0]=e[m-a.length];var b=a.slice(0,t);[].splice.apply(a,[0,0].concat(b));E&&(b=a.slice(a.length-t),[].splice.apply(a,[a.length,0].concat(b)),n--)}a[0]="M"}function q(a,e){for(var b=(m-a.length)/t;0<b&&b--;)c=a.slice().splice(a.length/z-t,t*z),c[0]=e[m-t-b*t],C&&(c[t-6]=c[t-2],c[t-5]=c[t-1]),[].splice.apply(a,[a.length/z,0].concat(c)),E&&b--}g=g||"";var d,b=r.startX,p=r.endX,C=-1<g.indexOf("C"),t=C?7:3,m,c,n;g=g.split(" ");f=f.slice();var E=r.isArea,z=E?2:1,e;
	C&&(u(g),u(f));if(b&&p){for(n=0;n<b.length;n++)if(b[n]===p[0]){d=n;break}else if(b[0]===p[p.length-b.length+n]){d=n;e=!0;break}void 0===d&&(g=[])}g.length&&a.isNumber(d)&&(m=f.length+d*z*t,e?(l(g,f),q(f,g)):(l(f,g),q(g,f)));return[g,f]}};a.extend=function(a,g){var f;a||(a={});for(f in g)a[f]=g[f];return a};a.merge=function(){var r,g=arguments,f,u={},l=function(q,d){var b,p;"object"!==typeof q&&(q={});for(p in d)d.hasOwnProperty(p)&&(b=d[p],a.isObject(b,!0)&&"renderTo"!==p&&"number"!==typeof b.nodeType?
	q[p]=l(q[p]||{},b):q[p]=d[p]);return q};!0===g[0]&&(u=g[1],g=Array.prototype.slice.call(g,2));f=g.length;for(r=0;r<f;r++)u=l(u,g[r]);return u};a.pInt=function(a,g){return parseInt(a,g||10)};a.isString=function(a){return"string"===typeof a};a.isArray=function(a){a=Object.prototype.toString.call(a);return"[object Array]"===a||"[object Array Iterator]"===a};a.isObject=function(r,g){return r&&"object"===typeof r&&(!g||!a.isArray(r))};a.isNumber=function(a){return"number"===typeof a&&!isNaN(a)};a.erase=
	function(a,g){for(var f=a.length;f--;)if(a[f]===g){a.splice(f,1);break}};a.defined=function(a){return void 0!==a&&null!==a};a.attr=function(r,g,f){var u,l;if(a.isString(g))a.defined(f)?r.setAttribute(g,f):r&&r.getAttribute&&(l=r.getAttribute(g));else if(a.defined(g)&&a.isObject(g))for(u in g)r.setAttribute(u,g[u]);return l};a.splat=function(r){return a.isArray(r)?r:[r]};a.syncTimeout=function(a,g,f){if(g)return setTimeout(a,g,f);a.call(0,f)};a.pick=function(){var a=arguments,g,f,u=a.length;for(g=
	0;g<u;g++)if(f=a[g],void 0!==f&&null!==f)return f};a.css=function(r,g){a.isMS&&!a.svg&&g&&void 0!==g.opacity&&(g.filter="alpha(opacity\x3d"+100*g.opacity+")");a.extend(r.style,g)};a.createElement=function(r,g,f,u,l){r=H.createElement(r);var q=a.css;g&&a.extend(r,g);l&&q(r,{padding:0,border:"none",margin:0});f&&q(r,f);u&&u.appendChild(r);return r};a.extendClass=function(r,g){var f=function(){};f.prototype=new r;a.extend(f.prototype,g);return f};a.pad=function(a,g,f){return Array((g||2)+1-String(a).length).join(f||
	0)+a};a.relativeLength=function(a,g){return/%$/.test(a)?g*parseFloat(a)/100:parseFloat(a)};a.wrap=function(a,g,f){var r=a[g];a[g]=function(){var a=Array.prototype.slice.call(arguments),q=arguments,d=this;d.proceed=function(){r.apply(d,arguments.length?arguments:q)};a.unshift(r);a=f.apply(this,a);d.proceed=null;return a}};a.getTZOffset=function(r){var g=a.Date;return 6E4*(g.hcGetTimezoneOffset&&g.hcGetTimezoneOffset(r)||g.hcTimezoneOffset||0)};a.dateFormat=function(r,g,f){if(!a.defined(g)||isNaN(g))return a.defaultOptions.lang.invalidDate||
	"";r=a.pick(r,"%Y-%m-%d %H:%M:%S");var u=a.Date,l=new u(g-a.getTZOffset(g)),q,d=l[u.hcGetHours](),b=l[u.hcGetDay](),p=l[u.hcGetDate](),C=l[u.hcGetMonth](),t=l[u.hcGetFullYear](),m=a.defaultOptions.lang,c=m.weekdays,n=m.shortWeekdays,E=a.pad,u=a.extend({a:n?n[b]:c[b].substr(0,3),A:c[b],d:E(p),e:E(p,2," "),w:b,b:m.shortMonths[C],B:m.months[C],m:E(C+1),y:t.toString().substr(2,2),Y:t,H:E(d),k:d,I:E(d%12||12),l:d%12||12,M:E(l[u.hcGetMinutes]()),p:12>d?"AM":"PM",P:12>d?"am":"pm",S:E(l.getSeconds()),L:E(Math.round(g%
	1E3),3)},a.dateFormats);for(q in u)for(;-1!==r.indexOf("%"+q);)r=r.replace("%"+q,"function"===typeof u[q]?u[q](g):u[q]);return f?r.substr(0,1).toUpperCase()+r.substr(1):r};a.formatSingle=function(r,g){var f=/\.([0-9])/,u=a.defaultOptions.lang;/f$/.test(r)?(f=(f=r.match(f))?f[1]:-1,null!==g&&(g=a.numberFormat(g,f,u.decimalPoint,-1<r.indexOf(",")?u.thousandsSep:""))):g=a.dateFormat(r,g);return g};a.format=function(r,g){for(var f="{",u=!1,l,q,d,b,p=[],C;r;){f=r.indexOf(f);if(-1===f)break;l=r.slice(0,
	f);if(u){l=l.split(":");q=l.shift().split(".");b=q.length;C=g;for(d=0;d<b;d++)C=C[q[d]];l.length&&(C=a.formatSingle(l.join(":"),C));p.push(C)}else p.push(l);r=r.slice(f+1);f=(u=!u)?"}":"{"}p.push(r);return p.join("")};a.getMagnitude=function(a){return Math.pow(10,Math.floor(Math.log(a)/Math.LN10))};a.normalizeTickInterval=function(r,g,f,u,l){var q,d=r;f=a.pick(f,1);q=r/f;g||(g=l?[1,1.2,1.5,2,2.5,3,4,5,6,8,10]:[1,2,2.5,5,10],!1===u&&(1===f?g=a.grep(g,function(a){return 0===a%1}):.1>=f&&(g=[1/f])));
	for(u=0;u<g.length&&!(d=g[u],l&&d*f>=r||!l&&q<=(g[u]+(g[u+1]||g[u]))/2);u++);return d=a.correctFloat(d*f,-Math.round(Math.log(.001)/Math.LN10))};a.stableSort=function(a,g){var f=a.length,r,l;for(l=0;l<f;l++)a[l].safeI=l;a.sort(function(a,d){r=g(a,d);return 0===r?a.safeI-d.safeI:r});for(l=0;l<f;l++)delete a[l].safeI};a.arrayMin=function(a){for(var g=a.length,f=a[0];g--;)a[g]<f&&(f=a[g]);return f};a.arrayMax=function(a){for(var g=a.length,f=a[0];g--;)a[g]>f&&(f=a[g]);return f};a.destroyObjectProperties=
	function(a,g){for(var f in a)a[f]&&a[f]!==g&&a[f].destroy&&a[f].destroy(),delete a[f]};a.discardElement=function(r){var g=a.garbageBin;g||(g=a.createElement("div"));r&&g.appendChild(r);g.innerHTML=""};a.correctFloat=function(a,g){return parseFloat(a.toPrecision(g||14))};a.setAnimation=function(r,g){g.renderer.globalAnimation=a.pick(r,g.options.chart.animation,!0)};a.animObject=function(r){return a.isObject(r)?a.merge(r):{duration:r?500:0}};a.timeUnits={millisecond:1,second:1E3,minute:6E4,hour:36E5,
	day:864E5,week:6048E5,month:24192E5,year:314496E5};a.numberFormat=function(r,g,f,u){r=+r||0;g=+g;var l=a.defaultOptions.lang,q=(r.toString().split(".")[1]||"").length,d,b;-1===g?g=Math.min(q,20):a.isNumber(g)||(g=2);b=(Math.abs(r)+Math.pow(10,-Math.max(g,q)-1)).toFixed(g);q=String(a.pInt(b));d=3<q.length?q.length%3:0;f=a.pick(f,l.decimalPoint);u=a.pick(u,l.thousandsSep);r=(0>r?"-":"")+(d?q.substr(0,d)+u:"");r+=q.substr(d).replace(/(\d{3})(?=\d)/g,"$1"+u);g&&(r+=f+b.slice(-g));return r};Math.easeInOutSine=
	function(a){return-.5*(Math.cos(Math.PI*a)-1)};a.getStyle=function(r,g){return"width"===g?Math.min(r.offsetWidth,r.scrollWidth)-a.getStyle(r,"padding-left")-a.getStyle(r,"padding-right"):"height"===g?Math.min(r.offsetHeight,r.scrollHeight)-a.getStyle(r,"padding-top")-a.getStyle(r,"padding-bottom"):(r=G.getComputedStyle(r,void 0))&&a.pInt(r.getPropertyValue(g))};a.inArray=function(a,g){return g.indexOf?g.indexOf(a):[].indexOf.call(g,a)};a.grep=function(a,g){return[].filter.call(a,g)};a.find=function(a,
	g){return[].find.call(a,g)};a.map=function(a,g){for(var f=[],u=0,l=a.length;u<l;u++)f[u]=g.call(a[u],a[u],u,a);return f};a.offset=function(a){var g=H.documentElement;a=a.getBoundingClientRect();return{top:a.top+(G.pageYOffset||g.scrollTop)-(g.clientTop||0),left:a.left+(G.pageXOffset||g.scrollLeft)-(g.clientLeft||0)}};a.stop=function(a,g){for(var f=B.length;f--;)B[f].elem!==a||g&&g!==B[f].prop||(B[f].stopped=!0)};a.each=function(a,g,f){return Array.prototype.forEach.call(a,g,f)};a.addEvent=function(r,
	g,f){function u(a){a.target=a.srcElement||G;f.call(r,a)}var l=r.hcEvents=r.hcEvents||{};r.addEventListener?r.addEventListener(g,f,!1):r.attachEvent&&(r.hcEventsIE||(r.hcEventsIE={}),r.hcEventsIE[f.toString()]=u,r.attachEvent("on"+g,u));l[g]||(l[g]=[]);l[g].push(f);return function(){a.removeEvent(r,g,f)}};a.removeEvent=function(r,g,f){function u(a,b){r.removeEventListener?r.removeEventListener(a,b,!1):r.attachEvent&&(b=r.hcEventsIE[b.toString()],r.detachEvent("on"+a,b))}function l(){var a,b;if(r.nodeName)for(b in g?
	(a={},a[g]=!0):a=d,a)if(d[b])for(a=d[b].length;a--;)u(b,d[b][a])}var q,d=r.hcEvents,b;d&&(g?(q=d[g]||[],f?(b=a.inArray(f,q),-1<b&&(q.splice(b,1),d[g]=q),u(g,f)):(l(),d[g]=[])):(l(),r.hcEvents={}))};a.fireEvent=function(r,g,f,u){var l;l=r.hcEvents;var q,d;f=f||{};if(H.createEvent&&(r.dispatchEvent||r.fireEvent))l=H.createEvent("Events"),l.initEvent(g,!0,!0),a.extend(l,f),r.dispatchEvent?r.dispatchEvent(l):r.fireEvent(g,l);else if(l)for(l=l[g]||[],q=l.length,f.target||a.extend(f,{preventDefault:function(){f.defaultPrevented=
	!0},target:r,type:g}),g=0;g<q;g++)(d=l[g])&&!1===d.call(r,f)&&f.preventDefault();u&&!f.defaultPrevented&&u(f)};a.animate=function(r,g,f){var u,l="",q,d,b;a.isObject(f)||(u=arguments,f={duration:u[2],easing:u[3],complete:u[4]});a.isNumber(f.duration)||(f.duration=400);f.easing="function"===typeof f.easing?f.easing:Math[f.easing]||Math.easeInOutSine;f.curAnim=a.merge(g);for(b in g)a.stop(r,b),d=new a.Fx(r,f,b),q=null,"d"===b?(d.paths=d.initPath(r,r.d,g.d),d.toD=g.d,u=0,q=1):r.attr?u=r.attr(b):(u=parseFloat(a.getStyle(r,
	b))||0,"opacity"!==b&&(l="px")),q||(q=g[b]),q.match&&q.match("px")&&(q=q.replace(/px/g,"")),d.run(u,q,l)};a.seriesType=function(r,g,f,u,l){var q=a.getOptions(),d=a.seriesTypes;q.plotOptions[r]=a.merge(q.plotOptions[g],f);d[r]=a.extendClass(d[g]||function(){},u);d[r].prototype.type=r;l&&(d[r].prototype.pointClass=a.extendClass(a.Point,l));return d[r]};a.uniqueKey=function(){var a=Math.random().toString(36).substring(2,9),g=0;return function(){return"highcharts-"+a+"-"+g++}}();G.jQuery&&(G.jQuery.fn.highcharts=
	function(){var r=[].slice.call(arguments);if(this[0])return r[0]?(new (a[a.isString(r[0])?r.shift():"Chart"])(this[0],r[0],r[1]),this):A[a.attr(this[0],"data-highcharts-chart")]});H&&!H.defaultView&&(a.getStyle=function(r,g){var f={width:"clientWidth",height:"clientHeight"}[g];if(r.style[g])return a.pInt(r.style[g]);"opacity"===g&&(g="filter");if(f)return r.style.zoom=1,Math.max(r[f]-2*a.getStyle(r,"padding"),0);r=r.currentStyle[g.replace(/\-(\w)/g,function(a,l){return l.toUpperCase()})];"filter"===
	g&&(r=r.replace(/alpha\(opacity=([0-9]+)\)/,function(a,l){return l/100}));return""===r?1:a.pInt(r)});Array.prototype.forEach||(a.each=function(a,g,f){for(var u=0,l=a.length;u<l;u++)if(!1===g.call(f,a[u],u,a))return u});Array.prototype.indexOf||(a.inArray=function(a,g){var f,u=0;if(g)for(f=g.length;u<f;u++)if(g[u]===a)return u;return-1});Array.prototype.filter||(a.grep=function(a,g){for(var f=[],u=0,l=a.length;u<l;u++)g(a[u],u)&&f.push(a[u]);return f});Array.prototype.find||(a.find=function(a,g){var f,
	u=a.length;for(f=0;f<u;f++)if(g(a[f],f))return a[f]})})(L);(function(a){var B=a.each,A=a.isNumber,H=a.map,G=a.merge,r=a.pInt;a.Color=function(g){if(!(this instanceof a.Color))return new a.Color(g);this.init(g)};a.Color.prototype={parsers:[{regex:/rgba\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]?(?:\.[0-9]+)?)\s*\)/,parse:function(a){return[r(a[1]),r(a[2]),r(a[3]),parseFloat(a[4],10)]}},{regex:/#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/,parse:function(a){return[r(a[1],
	16),r(a[2],16),r(a[3],16),1]}},{regex:/rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/,parse:function(a){return[r(a[1]),r(a[2]),r(a[3]),1]}}],names:{white:"#ffffff",black:"#000000"},init:function(g){var f,u,l,q;if((this.input=g=this.names[g]||g)&&g.stops)this.stops=H(g.stops,function(d){return new a.Color(d[1])});else for(l=this.parsers.length;l--&&!u;)q=this.parsers[l],(f=q.regex.exec(g))&&(u=q.parse(f));this.rgba=u||[]},get:function(a){var f=this.input,g=this.rgba,l;this.stops?
	(l=G(f),l.stops=[].concat(l.stops),B(this.stops,function(f,d){l.stops[d]=[l.stops[d][0],f.get(a)]})):l=g&&A(g[0])?"rgb"===a||!a&&1===g[3]?"rgb("+g[0]+","+g[1]+","+g[2]+")":"a"===a?g[3]:"rgba("+g.join(",")+")":f;return l},brighten:function(a){var f,g=this.rgba;if(this.stops)B(this.stops,function(l){l.brighten(a)});else if(A(a)&&0!==a)for(f=0;3>f;f++)g[f]+=r(255*a),0>g[f]&&(g[f]=0),255<g[f]&&(g[f]=255);return this},setOpacity:function(a){this.rgba[3]=a;return this}};a.color=function(g){return new a.Color(g)}})(L);
	(function(a){var B,A,H=a.addEvent,G=a.animate,r=a.attr,g=a.charts,f=a.color,u=a.css,l=a.createElement,q=a.defined,d=a.deg2rad,b=a.destroyObjectProperties,p=a.doc,C=a.each,t=a.extend,m=a.erase,c=a.grep,n=a.hasTouch,E=a.inArray,z=a.isArray,e=a.isFirefox,x=a.isMS,F=a.isObject,w=a.isString,h=a.isWebKit,y=a.merge,J=a.noop,K=a.pick,I=a.pInt,k=a.removeEvent,D=a.stop,P=a.svg,N=a.SVG_NS,S=a.symbolSizes,O=a.win;B=a.SVGElement=function(){return this};B.prototype={opacity:1,SVG_NS:N,textProps:"direction fontSize fontWeight fontFamily fontStyle color lineHeight width textDecoration textOverflow textOutline".split(" "),
	init:function(a,k){this.element="span"===k?l(k):p.createElementNS(this.SVG_NS,k);this.renderer=a},animate:function(v,k,e){k=a.animObject(K(k,this.renderer.globalAnimation,!0));0!==k.duration?(e&&(k.complete=e),G(this,v,k)):this.attr(v,null,e);return this},colorGradient:function(v,k,e){var b=this.renderer,h,D,c,x,M,m,n,d,F,t,p,w=[],l;v.linearGradient?D="linearGradient":v.radialGradient&&(D="radialGradient");if(D){c=v[D];M=b.gradients;n=v.stops;t=e.radialReference;z(c)&&(v[D]=c={x1:c[0],y1:c[1],x2:c[2],
	y2:c[3],gradientUnits:"userSpaceOnUse"});"radialGradient"===D&&t&&!q(c.gradientUnits)&&(x=c,c=y(c,b.getRadialAttr(t,x),{gradientUnits:"userSpaceOnUse"}));for(p in c)"id"!==p&&w.push(p,c[p]);for(p in n)w.push(n[p]);w=w.join(",");M[w]?t=M[w].attr("id"):(c.id=t=a.uniqueKey(),M[w]=m=b.createElement(D).attr(c).add(b.defs),m.radAttr=x,m.stops=[],C(n,function(v){0===v[1].indexOf("rgba")?(h=a.color(v[1]),d=h.get("rgb"),F=h.get("a")):(d=v[1],F=1);v=b.createElement("stop").attr({offset:v[0],"stop-color":d,
	"stop-opacity":F}).add(m);m.stops.push(v)}));l="url("+b.url+"#"+t+")";e.setAttribute(k,l);e.gradient=w;v.toString=function(){return l}}},applyTextOutline:function(a){var v=this.element,k,e,b,c;-1!==a.indexOf("contrast")&&(a=a.replace(/contrast/g,this.renderer.getContrast(v.style.fill)));this.fakeTS=!0;this.ySetter=this.xSetter;k=[].slice.call(v.getElementsByTagName("tspan"));a=a.split(" ");e=a[a.length-1];(b=a[0])&&"none"!==b&&(b=b.replace(/(^[\d\.]+)(.*?)$/g,function(a,v,k){return 2*v+k}),C(k,function(a){"highcharts-text-outline"===
	a.getAttribute("class")&&m(k,v.removeChild(a))}),c=v.firstChild,C(k,function(a,k){0===k&&(a.setAttribute("x",v.getAttribute("x")),k=v.getAttribute("y"),a.setAttribute("y",k||0),null===k&&v.setAttribute("y",0));a=a.cloneNode(1);r(a,{"class":"highcharts-text-outline",fill:e,stroke:e,"stroke-width":b,"stroke-linejoin":"round"});v.insertBefore(a,c)}))},attr:function(a,k,e,b){var v,c=this.element,h,x=this,M;"string"===typeof a&&void 0!==k&&(v=a,a={},a[v]=k);if("string"===typeof a)x=(this[a+"Getter"]||
	this._defaultGetter).call(this,a,c);else{for(v in a)k=a[v],M=!1,b||D(this,v),this.symbolName&&/^(x|y|width|height|r|start|end|innerR|anchorX|anchorY)/.test(v)&&(h||(this.symbolAttr(a),h=!0),M=!0),!this.rotation||"x"!==v&&"y"!==v||(this.doTransform=!0),M||(M=this[v+"Setter"]||this._defaultSetter,M.call(this,k,v,c),this.shadows&&/^(width|height|visibility|x|y|d|transform|cx|cy|r)$/.test(v)&&this.updateShadows(v,k,M));this.doTransform&&(this.updateTransform(),this.doTransform=!1)}e&&e();return x},updateShadows:function(a,
	k,e){for(var v=this.shadows,b=v.length;b--;)e.call(v[b],"height"===a?Math.max(k-(v[b].cutHeight||0),0):"d"===a?this.d:k,a,v[b])},addClass:function(a,k){var v=this.attr("class")||"";-1===v.indexOf(a)&&(k||(a=(v+(v?" ":"")+a).replace("  "," ")),this.attr("class",a));return this},hasClass:function(a){return-1!==r(this.element,"class").indexOf(a)},removeClass:function(a){r(this.element,"class",(r(this.element,"class")||"").replace(a,""));return this},symbolAttr:function(a){var v=this;C("x y r start end width height innerR anchorX anchorY".split(" "),
	function(k){v[k]=K(a[k],v[k])});v.attr({d:v.renderer.symbols[v.symbolName](v.x,v.y,v.width,v.height,v)})},clip:function(a){return this.attr("clip-path",a?"url("+this.renderer.url+"#"+a.id+")":"none")},crisp:function(a,k){var v,e={},b;k=k||a.strokeWidth||0;b=Math.round(k)%2/2;a.x=Math.floor(a.x||this.x||0)+b;a.y=Math.floor(a.y||this.y||0)+b;a.width=Math.floor((a.width||this.width||0)-2*b);a.height=Math.floor((a.height||this.height||0)-2*b);q(a.strokeWidth)&&(a.strokeWidth=k);for(v in a)this[v]!==a[v]&&
	(this[v]=e[v]=a[v]);return e},css:function(a){var v=this.styles,k={},e=this.element,b,c,h="";b=!v;var D=["textOverflow","width"];a&&a.color&&(a.fill=a.color);if(v)for(c in a)a[c]!==v[c]&&(k[c]=a[c],b=!0);if(b){b=this.textWidth=a&&a.width&&"text"===e.nodeName.toLowerCase()&&I(a.width)||this.textWidth;v&&(a=t(v,k));this.styles=a;b&&!P&&this.renderer.forExport&&delete a.width;if(x&&!P)u(this.element,a);else{v=function(a,v){return"-"+v.toLowerCase()};for(c in a)-1===E(c,D)&&(h+=c.replace(/([A-Z])/g,v)+
	":"+a[c]+";");h&&r(e,"style",h)}this.added&&(b&&this.renderer.buildText(this),a&&a.textOutline&&this.applyTextOutline(a.textOutline))}return this},strokeWidth:function(){return this["stroke-width"]||0},on:function(a,k){var v=this,e=v.element;n&&"click"===a?(e.ontouchstart=function(a){v.touchEventFired=Date.now();a.preventDefault();k.call(e,a)},e.onclick=function(a){(-1===O.navigator.userAgent.indexOf("Android")||1100<Date.now()-(v.touchEventFired||0))&&k.call(e,a)}):e["on"+a]=k;return this},setRadialReference:function(a){var v=
	this.renderer.gradients[this.element.gradient];this.element.radialReference=a;v&&v.radAttr&&v.animate(this.renderer.getRadialAttr(a,v.radAttr));return this},translate:function(a,k){return this.attr({translateX:a,translateY:k})},invert:function(a){this.inverted=a;this.updateTransform();return this},updateTransform:function(){var a=this.translateX||0,k=this.translateY||0,e=this.scaleX,b=this.scaleY,c=this.inverted,h=this.rotation,D=this.element;c&&(a+=this.width,k+=this.height);a=["translate("+a+","+
	k+")"];c?a.push("rotate(90) scale(-1,1)"):h&&a.push("rotate("+h+" "+(D.getAttribute("x")||0)+" "+(D.getAttribute("y")||0)+")");(q(e)||q(b))&&a.push("scale("+K(e,1)+" "+K(b,1)+")");a.length&&D.setAttribute("transform",a.join(" "))},toFront:function(){var a=this.element;a.parentNode.appendChild(a);return this},align:function(a,k,e){var v,b,c,h,D={};b=this.renderer;c=b.alignedObjects;var x,y;if(a){if(this.alignOptions=a,this.alignByTranslate=k,!e||w(e))this.alignTo=v=e||"renderer",m(c,this),c.push(this),
	e=null}else a=this.alignOptions,k=this.alignByTranslate,v=this.alignTo;e=K(e,b[v],b);v=a.align;b=a.verticalAlign;c=(e.x||0)+(a.x||0);h=(e.y||0)+(a.y||0);"right"===v?x=1:"center"===v&&(x=2);x&&(c+=(e.width-(a.width||0))/x);D[k?"translateX":"x"]=Math.round(c);"bottom"===b?y=1:"middle"===b&&(y=2);y&&(h+=(e.height-(a.height||0))/y);D[k?"translateY":"y"]=Math.round(h);this[this.placed?"animate":"attr"](D);this.placed=!0;this.alignAttr=D;return this},getBBox:function(a,k){var v,e=this.renderer,b,c=this.element,
	h=this.styles,D,x=this.textStr,m,y=e.cache,n=e.cacheKeys,F;k=K(k,this.rotation);b=k*d;D=h&&h.fontSize;void 0!==x&&(F=x.toString(),-1===F.indexOf("\x3c")&&(F=F.replace(/[0-9]/g,"0")),F+=["",k||0,D,h&&h.width,h&&h.textOverflow].join());F&&!a&&(v=y[F]);if(!v){if(c.namespaceURI===this.SVG_NS||e.forExport){try{(m=this.fakeTS&&function(a){C(c.querySelectorAll(".highcharts-text-outline"),function(v){v.style.display=a})})&&m("none"),v=c.getBBox?t({},c.getBBox()):{width:c.offsetWidth,height:c.offsetHeight},
	m&&m("")}catch(W){}if(!v||0>v.width)v={width:0,height:0}}else v=this.htmlGetBBox();e.isSVG&&(a=v.width,e=v.height,h&&"11px"===h.fontSize&&17===Math.round(e)&&(v.height=e=14),k&&(v.width=Math.abs(e*Math.sin(b))+Math.abs(a*Math.cos(b)),v.height=Math.abs(e*Math.cos(b))+Math.abs(a*Math.sin(b))));if(F&&0<v.height){for(;250<n.length;)delete y[n.shift()];y[F]||n.push(F);y[F]=v}}return v},show:function(a){return this.attr({visibility:a?"inherit":"visible"})},hide:function(){return this.attr({visibility:"hidden"})},
	fadeOut:function(a){var v=this;v.animate({opacity:0},{duration:a||150,complete:function(){v.attr({y:-9999})}})},add:function(a){var v=this.renderer,k=this.element,e;a&&(this.parentGroup=a);this.parentInverted=a&&a.inverted;void 0!==this.textStr&&v.buildText(this);this.added=!0;if(!a||a.handleZ||this.zIndex)e=this.zIndexSetter();e||(a?a.element:v.box).appendChild(k);if(this.onAdd)this.onAdd();return this},safeRemoveChild:function(a){var v=a.parentNode;v&&v.removeChild(a)},destroy:function(){var a=
	this.element||{},k=this.renderer.isSVG&&"SPAN"===a.nodeName&&this.parentGroup,e,b;a.onclick=a.onmouseout=a.onmouseover=a.onmousemove=a.point=null;D(this);this.clipPath&&(this.clipPath=this.clipPath.destroy());if(this.stops){for(b=0;b<this.stops.length;b++)this.stops[b]=this.stops[b].destroy();this.stops=null}this.safeRemoveChild(a);for(this.destroyShadows();k&&k.div&&0===k.div.childNodes.length;)a=k.parentGroup,this.safeRemoveChild(k.div),delete k.div,k=a;this.alignTo&&m(this.renderer.alignedObjects,
	this);for(e in this)delete this[e];return null},shadow:function(a,k,e){var v=[],b,c,h=this.element,D,x,m,y;if(!a)this.destroyShadows();else if(!this.shadows){x=K(a.width,3);m=(a.opacity||.15)/x;y=this.parentInverted?"(-1,-1)":"("+K(a.offsetX,1)+", "+K(a.offsetY,1)+")";for(b=1;b<=x;b++)c=h.cloneNode(0),D=2*x+1-2*b,r(c,{isShadow:"true",stroke:a.color||"#000000","stroke-opacity":m*b,"stroke-width":D,transform:"translate"+y,fill:"none"}),e&&(r(c,"height",Math.max(r(c,"height")-D,0)),c.cutHeight=D),k?
	k.element.appendChild(c):h.parentNode.insertBefore(c,h),v.push(c);this.shadows=v}return this},destroyShadows:function(){C(this.shadows||[],function(a){this.safeRemoveChild(a)},this);this.shadows=void 0},xGetter:function(a){"circle"===this.element.nodeName&&("x"===a?a="cx":"y"===a&&(a="cy"));return this._defaultGetter(a)},_defaultGetter:function(a){a=K(this[a],this.element?this.element.getAttribute(a):null,0);/^[\-0-9\.]+$/.test(a)&&(a=parseFloat(a));return a},dSetter:function(a,k,e){a&&a.join&&(a=
	a.join(" "));/(NaN| {2}|^$)/.test(a)&&(a="M 0 0");e.setAttribute(k,a);this[k]=a},dashstyleSetter:function(a){var v,k=this["stroke-width"];"inherit"===k&&(k=1);if(a=a&&a.toLowerCase()){a=a.replace("shortdashdotdot","3,1,1,1,1,1,").replace("shortdashdot","3,1,1,1").replace("shortdot","1,1,").replace("shortdash","3,1,").replace("longdash","8,3,").replace(/dot/g,"1,3,").replace("dash","4,3,").replace(/,$/,"").split(",");for(v=a.length;v--;)a[v]=I(a[v])*k;a=a.join(",").replace(/NaN/g,"none");this.element.setAttribute("stroke-dasharray",
	a)}},alignSetter:function(a){this.element.setAttribute("text-anchor",{left:"start",center:"middle",right:"end"}[a])},opacitySetter:function(a,k,e){this[k]=a;e.setAttribute(k,a)},titleSetter:function(a){var v=this.element.getElementsByTagName("title")[0];v||(v=p.createElementNS(this.SVG_NS,"title"),this.element.appendChild(v));v.firstChild&&v.removeChild(v.firstChild);v.appendChild(p.createTextNode(String(K(a),"").replace(/<[^>]*>/g,"")))},textSetter:function(a){a!==this.textStr&&(delete this.bBox,
	this.textStr=a,this.added&&this.renderer.buildText(this))},fillSetter:function(a,k,e){"string"===typeof a?e.setAttribute(k,a):a&&this.colorGradient(a,k,e)},visibilitySetter:function(a,k,e){"inherit"===a?e.removeAttribute(k):e.setAttribute(k,a)},zIndexSetter:function(a,k){var v=this.renderer,e=this.parentGroup,b=(e||v).element||v.box,c,h=this.element,D;c=this.added;var x;q(a)&&(h.zIndex=a,a=+a,this[k]===a&&(c=!1),this[k]=a);if(c){(a=this.zIndex)&&e&&(e.handleZ=!0);k=b.childNodes;for(x=0;x<k.length&&
	!D;x++)e=k[x],c=e.zIndex,e!==h&&(I(c)>a||!q(a)&&q(c)||0>a&&!q(c)&&b!==v.box)&&(b.insertBefore(h,e),D=!0);D||b.appendChild(h)}return D},_defaultSetter:function(a,k,e){e.setAttribute(k,a)}};B.prototype.yGetter=B.prototype.xGetter;B.prototype.translateXSetter=B.prototype.translateYSetter=B.prototype.rotationSetter=B.prototype.verticalAlignSetter=B.prototype.scaleXSetter=B.prototype.scaleYSetter=function(a,k){this[k]=a;this.doTransform=!0};B.prototype["stroke-widthSetter"]=B.prototype.strokeSetter=function(a,
	k,e){this[k]=a;this.stroke&&this["stroke-width"]?(B.prototype.fillSetter.call(this,this.stroke,"stroke",e),e.setAttribute("stroke-width",this["stroke-width"]),this.hasStroke=!0):"stroke-width"===k&&0===a&&this.hasStroke&&(e.removeAttribute("stroke"),this.hasStroke=!1)};A=a.SVGRenderer=function(){this.init.apply(this,arguments)};A.prototype={Element:B,SVG_NS:N,init:function(a,k,b,c,D,x){var v;c=this.createElement("svg").attr({version:"1.1","class":"highcharts-root"}).css(this.getStyle(c));v=c.element;
	a.appendChild(v);-1===a.innerHTML.indexOf("xmlns")&&r(v,"xmlns",this.SVG_NS);this.isSVG=!0;this.box=v;this.boxWrapper=c;this.alignedObjects=[];this.url=(e||h)&&p.getElementsByTagName("base").length?O.location.href.replace(/#.*?$/,"").replace(/<[^>]*>/g,"").replace(/([\('\)])/g,"\\$1").replace(/ /g,"%20"):"";this.createElement("desc").add().element.appendChild(p.createTextNode("Created with Highcharts 5.0.7"));this.defs=this.createElement("defs").add();this.allowHTML=x;this.forExport=D;this.gradients=
	{};this.cache={};this.cacheKeys=[];this.imgCount=0;this.setSize(k,b,!1);var m;e&&a.getBoundingClientRect&&(k=function(){u(a,{left:0,top:0});m=a.getBoundingClientRect();u(a,{left:Math.ceil(m.left)-m.left+"px",top:Math.ceil(m.top)-m.top+"px"})},k(),this.unSubPixelFix=H(O,"resize",k))},getStyle:function(a){return this.style=t({fontFamily:'"Lucida Grande", "Lucida Sans Unicode", Arial, Helvetica, sans-serif',fontSize:"12px"},a)},setStyle:function(a){this.boxWrapper.css(this.getStyle(a))},isHidden:function(){return!this.boxWrapper.getBBox().width},
	destroy:function(){var a=this.defs;this.box=null;this.boxWrapper=this.boxWrapper.destroy();b(this.gradients||{});this.gradients=null;a&&(this.defs=a.destroy());this.unSubPixelFix&&this.unSubPixelFix();return this.alignedObjects=null},createElement:function(a){var k=new this.Element;k.init(this,a);return k},draw:J,getRadialAttr:function(a,k){return{cx:a[0]-a[2]/2+k.cx*a[2],cy:a[1]-a[2]/2+k.cy*a[2],r:k.r*a[2]}},buildText:function(a){var k=a.element,v=this,e=v.forExport,b=K(a.textStr,"").toString(),
	h=-1!==b.indexOf("\x3c"),D=k.childNodes,x,m,y,n,F=r(k,"x"),d=a.styles,t=a.textWidth,w=d&&d.lineHeight,l=d&&d.textOutline,z=d&&"ellipsis"===d.textOverflow,f=d&&"nowrap"===d.whiteSpace,E=d&&d.fontSize,q,g=D.length,d=t&&!a.added&&this.box,J=function(a){var e;e=/(px|em)$/.test(a&&a.style.fontSize)?a.style.fontSize:E||v.style.fontSize||12;return w?I(w):v.fontMetrics(e,a.getAttribute("style")?a:k).h};q=[b,z,f,w,l,E,t].join();if(q!==a.textCache){for(a.textCache=q;g--;)k.removeChild(D[g]);h||l||z||t||-1!==
	b.indexOf(" ")?(x=/<.*class="([^"]+)".*>/,m=/<.*style="([^"]+)".*>/,y=/<.*href="(http[^"]+)".*>/,d&&d.appendChild(k),b=h?b.replace(/<(b|strong)>/g,'\x3cspan style\x3d"font-weight:bold"\x3e').replace(/<(i|em)>/g,'\x3cspan style\x3d"font-style:italic"\x3e').replace(/<a/g,"\x3cspan").replace(/<\/(b|strong|i|em|a)>/g,"\x3c/span\x3e").split(/<br.*?>/g):[b],b=c(b,function(a){return""!==a}),C(b,function(b,c){var h,D=0;b=b.replace(/^\s+|\s+$/g,"").replace(/<span/g,"|||\x3cspan").replace(/<\/span>/g,"\x3c/span\x3e|||");
	h=b.split("|||");C(h,function(b){if(""!==b||1===h.length){var d={},w=p.createElementNS(v.SVG_NS,"tspan"),l,E;x.test(b)&&(l=b.match(x)[1],r(w,"class",l));m.test(b)&&(E=b.match(m)[1].replace(/(;| |^)color([ :])/,"$1fill$2"),r(w,"style",E));y.test(b)&&!e&&(r(w,"onclick",'location.href\x3d"'+b.match(y)[1]+'"'),u(w,{cursor:"pointer"}));b=(b.replace(/<(.|\n)*?>/g,"")||" ").replace(/&lt;/g,"\x3c").replace(/&gt;/g,"\x3e");if(" "!==b){w.appendChild(p.createTextNode(b));D?d.dx=0:c&&null!==F&&(d.x=F);r(w,d);
	k.appendChild(w);!D&&c&&(!P&&e&&u(w,{display:"block"}),r(w,"dy",J(w)));if(t){d=b.replace(/([^\^])-/g,"$1- ").split(" ");l=1<h.length||c||1<d.length&&!f;for(var q,g,M=[],C=J(w),K=a.rotation,I=b,Q=I.length;(l||z)&&(d.length||M.length);)a.rotation=0,q=a.getBBox(!0),g=q.width,!P&&v.forExport&&(g=v.measureSpanWidth(w.firstChild.data,a.styles)),q=g>t,void 0===n&&(n=q),z&&n?(Q/=2,""===I||!q&&.5>Q?d=[]:(I=b.substring(0,I.length+(q?-1:1)*Math.ceil(Q)),d=[I+(3<t?"\u2026":"")],w.removeChild(w.firstChild))):
	q&&1!==d.length?(w.removeChild(w.firstChild),M.unshift(d.pop())):(d=M,M=[],d.length&&!f&&(w=p.createElementNS(N,"tspan"),r(w,{dy:C,x:F}),E&&r(w,"style",E),k.appendChild(w)),g>t&&(t=g)),d.length&&w.appendChild(p.createTextNode(d.join(" ").replace(/- /g,"-")));a.rotation=K}D++}}})}),n&&a.attr("title",a.textStr),d&&d.removeChild(k),l&&a.applyTextOutline&&a.applyTextOutline(l)):k.appendChild(p.createTextNode(b.replace(/&lt;/g,"\x3c").replace(/&gt;/g,"\x3e")))}},getContrast:function(a){a=f(a).rgba;return 510<
	a[0]+a[1]+a[2]?"#000000":"#FFFFFF"},button:function(a,k,e,b,c,h,D,m,d){var v=this.label(a,k,e,d,null,null,null,null,"button"),n=0;v.attr(y({padding:8,r:2},c));var F,w,p,l;c=y({fill:"#f7f7f7",stroke:"#cccccc","stroke-width":1,style:{color:"#333333",cursor:"pointer",fontWeight:"normal"}},c);F=c.style;delete c.style;h=y(c,{fill:"#e6e6e6"},h);w=h.style;delete h.style;D=y(c,{fill:"#e6ebf5",style:{color:"#000000",fontWeight:"bold"}},D);p=D.style;delete D.style;m=y(c,{style:{color:"#cccccc"}},m);l=m.style;
	delete m.style;H(v.element,x?"mouseover":"mouseenter",function(){3!==n&&v.setState(1)});H(v.element,x?"mouseout":"mouseleave",function(){3!==n&&v.setState(n)});v.setState=function(a){1!==a&&(v.state=n=a);v.removeClass(/highcharts-button-(normal|hover|pressed|disabled)/).addClass("highcharts-button-"+["normal","hover","pressed","disabled"][a||0]);v.attr([c,h,D,m][a||0]).css([F,w,p,l][a||0])};v.attr(c).css(t({cursor:"default"},F));return v.on("click",function(a){3!==n&&b.call(v,a)})},crispLine:function(a,
	k){a[1]===a[4]&&(a[1]=a[4]=Math.round(a[1])-k%2/2);a[2]===a[5]&&(a[2]=a[5]=Math.round(a[2])+k%2/2);return a},path:function(a){var k={fill:"none"};z(a)?k.d=a:F(a)&&t(k,a);return this.createElement("path").attr(k)},circle:function(a,k,e){a=F(a)?a:{x:a,y:k,r:e};k=this.createElement("circle");k.xSetter=k.ySetter=function(a,k,e){e.setAttribute("c"+k,a)};return k.attr(a)},arc:function(a,k,e,b,c,h){F(a)&&(k=a.y,e=a.r,b=a.innerR,c=a.start,h=a.end,a=a.x);a=this.symbol("arc",a||0,k||0,e||0,e||0,{innerR:b||
	0,start:c||0,end:h||0});a.r=e;return a},rect:function(a,k,e,b,c,h){c=F(a)?a.r:c;var v=this.createElement("rect");a=F(a)?a:void 0===a?{}:{x:a,y:k,width:Math.max(e,0),height:Math.max(b,0)};void 0!==h&&(a.strokeWidth=h,a=v.crisp(a));a.fill="none";c&&(a.r=c);v.rSetter=function(a,k,e){r(e,{rx:a,ry:a})};return v.attr(a)},setSize:function(a,k,e){var b=this.alignedObjects,v=b.length;this.width=a;this.height=k;for(this.boxWrapper.animate({width:a,height:k},{step:function(){this.attr({viewBox:"0 0 "+this.attr("width")+
	" "+this.attr("height")})},duration:K(e,!0)?void 0:0});v--;)b[v].align()},g:function(a){var k=this.createElement("g");return a?k.attr({"class":"highcharts-"+a}):k},image:function(a,k,e,b,c){var v={preserveAspectRatio:"none"};1<arguments.length&&t(v,{x:k,y:e,width:b,height:c});v=this.createElement("image").attr(v);v.element.setAttributeNS?v.element.setAttributeNS("http://www.w3.org/1999/xlink","href",a):v.element.setAttribute("hc-svg-href",a);return v},symbol:function(a,k,e,b,c,h){var v=this,D,x=this.symbols[a],
	m=q(k)&&x&&this.symbols[a](Math.round(k),Math.round(e),b,c,h),y=/^url\((.*?)\)$/,d,n;x?(D=this.path(m),D.attr("fill","none"),t(D,{symbolName:a,x:k,y:e,width:b,height:c}),h&&t(D,h)):y.test(a)&&(d=a.match(y)[1],D=this.image(d),D.imgwidth=K(S[d]&&S[d].width,h&&h.width),D.imgheight=K(S[d]&&S[d].height,h&&h.height),n=function(){D.attr({width:D.width,height:D.height})},C(["width","height"],function(a){D[a+"Setter"]=function(a,k){var e={},b=this["img"+k],v="width"===k?"translateX":"translateY";this[k]=a;
	q(b)&&(this.element&&this.element.setAttribute(k,b),this.alignByTranslate||(e[v]=((this[k]||0)-b)/2,this.attr(e)))}}),q(k)&&D.attr({x:k,y:e}),D.isImg=!0,q(D.imgwidth)&&q(D.imgheight)?n():(D.attr({width:0,height:0}),l("img",{onload:function(){var a=g[v.chartIndex];0===this.width&&(u(this,{position:"absolute",top:"-999em"}),p.body.appendChild(this));S[d]={width:this.width,height:this.height};D.imgwidth=this.width;D.imgheight=this.height;D.element&&n();this.parentNode&&this.parentNode.removeChild(this);
	v.imgCount--;if(!v.imgCount&&a&&a.onload)a.onload()},src:d}),this.imgCount++));return D},symbols:{circle:function(a,k,e,b){return this.arc(a+e/2,k+b/2,e/2,b/2,{start:0,end:2*Math.PI,open:!1})},square:function(a,k,e,b){return["M",a,k,"L",a+e,k,a+e,k+b,a,k+b,"Z"]},triangle:function(a,k,e,b){return["M",a+e/2,k,"L",a+e,k+b,a,k+b,"Z"]},"triangle-down":function(a,k,e,b){return["M",a,k,"L",a+e,k,a+e/2,k+b,"Z"]},diamond:function(a,k,e,b){return["M",a+e/2,k,"L",a+e,k+b/2,a+e/2,k+b,a,k+b/2,"Z"]},arc:function(a,
	k,e,b,c){var v=c.start,h=c.r||e,D=c.r||b||e,x=c.end-.001;e=c.innerR;b=c.open;var m=Math.cos(v),d=Math.sin(v),y=Math.cos(x),x=Math.sin(x);c=c.end-v<Math.PI?0:1;h=["M",a+h*m,k+D*d,"A",h,D,0,c,1,a+h*y,k+D*x];q(e)&&h.push(b?"M":"L",a+e*y,k+e*x,"A",e,e,0,c,0,a+e*m,k+e*d);h.push(b?"":"Z");return h},callout:function(a,k,e,b,c){var h=Math.min(c&&c.r||0,e,b),D=h+6,v=c&&c.anchorX;c=c&&c.anchorY;var x;x=["M",a+h,k,"L",a+e-h,k,"C",a+e,k,a+e,k,a+e,k+h,"L",a+e,k+b-h,"C",a+e,k+b,a+e,k+b,a+e-h,k+b,"L",a+h,k+b,"C",
	a,k+b,a,k+b,a,k+b-h,"L",a,k+h,"C",a,k,a,k,a+h,k];v&&v>e?c>k+D&&c<k+b-D?x.splice(13,3,"L",a+e,c-6,a+e+6,c,a+e,c+6,a+e,k+b-h):x.splice(13,3,"L",a+e,b/2,v,c,a+e,b/2,a+e,k+b-h):v&&0>v?c>k+D&&c<k+b-D?x.splice(33,3,"L",a,c+6,a-6,c,a,c-6,a,k+h):x.splice(33,3,"L",a,b/2,v,c,a,b/2,a,k+h):c&&c>b&&v>a+D&&v<a+e-D?x.splice(23,3,"L",v+6,k+b,v,k+b+6,v-6,k+b,a+h,k+b):c&&0>c&&v>a+D&&v<a+e-D&&x.splice(3,3,"L",v-6,k,v,k-6,v+6,k,e-h,k);return x}},clipRect:function(k,e,b,c){var h=a.uniqueKey(),D=this.createElement("clipPath").attr({id:h}).add(this.defs);
	k=this.rect(k,e,b,c,0).add(D);k.id=h;k.clipPath=D;k.count=0;return k},text:function(a,k,e,b){var c=!P&&this.forExport,h={};if(b&&(this.allowHTML||!this.forExport))return this.html(a,k,e);h.x=Math.round(k||0);e&&(h.y=Math.round(e));if(a||0===a)h.text=a;a=this.createElement("text").attr(h);c&&a.css({position:"absolute"});b||(a.xSetter=function(a,k,e){var b=e.getElementsByTagName("tspan"),c,h=e.getAttribute(k),D;for(D=0;D<b.length;D++)c=b[D],c.getAttribute(k)===h&&c.setAttribute(k,a);e.setAttribute(k,
	a)});return a},fontMetrics:function(a,k){a=a||k&&k.style&&k.style.fontSize||this.style&&this.style.fontSize;a=/px/.test(a)?I(a):/em/.test(a)?parseFloat(a)*(k?this.fontMetrics(null,k.parentNode).f:16):12;k=24>a?a+3:Math.round(1.2*a);return{h:k,b:Math.round(.8*k),f:a}},rotCorr:function(a,k,e){var b=a;k&&e&&(b=Math.max(b*Math.cos(k*d),4));return{x:-a/3*Math.sin(k*d),y:b}},label:function(a,e,b,c,h,D,x,m,d){var v=this,n=v.g("button"!==d&&"label"),F=n.text=v.text("",0,0,x).attr({zIndex:1}),w,p,l=0,z=3,
	E=0,f,g,J,K,P,N={},I,u,r=/^url\((.*?)\)$/.test(c),M=r,S,Q,R,O;d&&n.addClass("highcharts-"+d);M=r;S=function(){return(I||0)%2/2};Q=function(){var a=F.element.style,k={};p=(void 0===f||void 0===g||P)&&q(F.textStr)&&F.getBBox();n.width=(f||p.width||0)+2*z+E;n.height=(g||p.height||0)+2*z;u=z+v.fontMetrics(a&&a.fontSize,F).b;M&&(w||(n.box=w=v.symbols[c]||r?v.symbol(c):v.rect(),w.addClass(("button"===d?"":"highcharts-label-box")+(d?" highcharts-"+d+"-box":"")),w.add(n),a=S(),k.x=a,k.y=(m?-u:0)+a),k.width=
	Math.round(n.width),k.height=Math.round(n.height),w.attr(t(k,N)),N={})};R=function(){var a=E+z,k;k=m?0:u;q(f)&&p&&("center"===P||"right"===P)&&(a+={center:.5,right:1}[P]*(f-p.width));if(a!==F.x||k!==F.y)F.attr("x",a),void 0!==k&&F.attr("y",k);F.x=a;F.y=k};O=function(a,k){w?w.attr(a,k):N[a]=k};n.onAdd=function(){F.add(n);n.attr({text:a||0===a?a:"",x:e,y:b});w&&q(h)&&n.attr({anchorX:h,anchorY:D})};n.widthSetter=function(a){f=a};n.heightSetter=function(a){g=a};n["text-alignSetter"]=function(a){P=a};
	n.paddingSetter=function(a){q(a)&&a!==z&&(z=n.padding=a,R())};n.paddingLeftSetter=function(a){q(a)&&a!==E&&(E=a,R())};n.alignSetter=function(a){a={left:0,center:.5,right:1}[a];a!==l&&(l=a,p&&n.attr({x:J}))};n.textSetter=function(a){void 0!==a&&F.textSetter(a);Q();R()};n["stroke-widthSetter"]=function(a,k){a&&(M=!0);I=this["stroke-width"]=a;O(k,a)};n.strokeSetter=n.fillSetter=n.rSetter=function(a,k){"fill"===k&&a&&(M=!0);O(k,a)};n.anchorXSetter=function(a,k){h=a;O(k,Math.round(a)-S()-J)};n.anchorYSetter=
	function(a,k){D=a;O(k,a-K)};n.xSetter=function(a){n.x=a;l&&(a-=l*((f||p.width)+2*z));J=Math.round(a);n.attr("translateX",J)};n.ySetter=function(a){K=n.y=Math.round(a);n.attr("translateY",K)};var V=n.css;return t(n,{css:function(a){if(a){var k={};a=y(a);C(n.textProps,function(e){void 0!==a[e]&&(k[e]=a[e],delete a[e])});F.css(k)}return V.call(n,a)},getBBox:function(){return{width:p.width+2*z,height:p.height+2*z,x:p.x-z,y:p.y-z}},shadow:function(a){a&&(Q(),w&&w.shadow(a));return n},destroy:function(){k(n.element,
	"mouseenter");k(n.element,"mouseleave");F&&(F=F.destroy());w&&(w=w.destroy());B.prototype.destroy.call(n);n=v=Q=R=O=null}})}};a.Renderer=A})(L);(function(a){var B=a.attr,A=a.createElement,H=a.css,G=a.defined,r=a.each,g=a.extend,f=a.isFirefox,u=a.isMS,l=a.isWebKit,q=a.pInt,d=a.SVGRenderer,b=a.win,p=a.wrap;g(a.SVGElement.prototype,{htmlCss:function(a){var b=this.element;if(b=a&&"SPAN"===b.tagName&&a.width)delete a.width,this.textWidth=b,this.updateTransform();a&&"ellipsis"===a.textOverflow&&(a.whiteSpace=
	"nowrap",a.overflow="hidden");this.styles=g(this.styles,a);H(this.element,a);return this},htmlGetBBox:function(){var a=this.element;"text"===a.nodeName&&(a.style.position="absolute");return{x:a.offsetLeft,y:a.offsetTop,width:a.offsetWidth,height:a.offsetHeight}},htmlUpdateTransform:function(){if(this.added){var a=this.renderer,b=this.element,m=this.translateX||0,c=this.translateY||0,n=this.x||0,d=this.y||0,p=this.textAlign||"left",e={left:0,center:.5,right:1}[p],x=this.styles;H(b,{marginLeft:m,marginTop:c});
	this.shadows&&r(this.shadows,function(a){H(a,{marginLeft:m+1,marginTop:c+1})});this.inverted&&r(b.childNodes,function(e){a.invertChild(e,b)});if("SPAN"===b.tagName){var F=this.rotation,w=q(this.textWidth),h=x&&x.whiteSpace,y=[F,p,b.innerHTML,this.textWidth,this.textAlign].join();y!==this.cTT&&(x=a.fontMetrics(b.style.fontSize).b,G(F)&&this.setSpanRotation(F,e,x),H(b,{width:"",whiteSpace:h||"nowrap"}),b.offsetWidth>w&&/[ \-]/.test(b.textContent||b.innerText)&&H(b,{width:w+"px",display:"block",whiteSpace:h||
	"normal"}),this.getSpanCorrection(b.offsetWidth,x,e,F,p));H(b,{left:n+(this.xCorr||0)+"px",top:d+(this.yCorr||0)+"px"});l&&(x=b.offsetHeight);this.cTT=y}}else this.alignOnAdd=!0},setSpanRotation:function(a,d,m){var c={},n=u?"-ms-transform":l?"-webkit-transform":f?"MozTransform":b.opera?"-o-transform":"";c[n]=c.transform="rotate("+a+"deg)";c[n+(f?"Origin":"-origin")]=c.transformOrigin=100*d+"% "+m+"px";H(this.element,c)},getSpanCorrection:function(a,b,m){this.xCorr=-a*m;this.yCorr=-b}});g(d.prototype,
	{html:function(a,b,m){var c=this.createElement("span"),n=c.element,d=c.renderer,l=d.isSVG,e=function(a,e){r(["opacity","visibility"],function(b){p(a,b+"Setter",function(a,b,c,x){a.call(this,b,c,x);e[c]=b})})};c.textSetter=function(a){a!==n.innerHTML&&delete this.bBox;n.innerHTML=this.textStr=a;c.htmlUpdateTransform()};l&&e(c,c.element.style);c.xSetter=c.ySetter=c.alignSetter=c.rotationSetter=function(a,e){"align"===e&&(e="textAlign");c[e]=a;c.htmlUpdateTransform()};c.attr({text:a,x:Math.round(b),
	y:Math.round(m)}).css({fontFamily:this.style.fontFamily,fontSize:this.style.fontSize,position:"absolute"});n.style.whiteSpace="nowrap";c.css=c.htmlCss;l&&(c.add=function(a){var b,x=d.box.parentNode,h=[];if(this.parentGroup=a){if(b=a.div,!b){for(;a;)h.push(a),a=a.parentGroup;r(h.reverse(),function(a){var n,m=B(a.element,"class");m&&(m={className:m});b=a.div=a.div||A("div",m,{position:"absolute",left:(a.translateX||0)+"px",top:(a.translateY||0)+"px",display:a.display,opacity:a.opacity,pointerEvents:a.styles&&
	a.styles.pointerEvents},b||x);n=b.style;g(a,{on:function(){c.on.apply({element:h[0].div},arguments);return a},translateXSetter:function(e,k){n.left=e+"px";a[k]=e;a.doTransform=!0},translateYSetter:function(e,k){n.top=e+"px";a[k]=e;a.doTransform=!0}});e(a,n)})}}else b=x;b.appendChild(n);c.added=!0;c.alignOnAdd&&c.htmlUpdateTransform();return c});return c}})})(L);(function(a){var B,A,H=a.createElement,G=a.css,r=a.defined,g=a.deg2rad,f=a.discardElement,u=a.doc,l=a.each,q=a.erase,d=a.extend;B=a.extendClass;
	var b=a.isArray,p=a.isNumber,C=a.isObject,t=a.merge;A=a.noop;var m=a.pick,c=a.pInt,n=a.SVGElement,E=a.SVGRenderer,z=a.win;a.svg||(A={docMode8:u&&8===u.documentMode,init:function(a,b){var e=["\x3c",b,' filled\x3d"f" stroked\x3d"f"'],c=["position: ","absolute",";"],h="div"===b;("shape"===b||h)&&c.push("left:0;top:0;width:1px;height:1px;");c.push("visibility: ",h?"hidden":"visible");e.push(' style\x3d"',c.join(""),'"/\x3e');b&&(e=h||"span"===b||"img"===b?e.join(""):a.prepVML(e),this.element=H(e));this.renderer=
	a},add:function(a){var e=this.renderer,b=this.element,c=e.box,h=a&&a.inverted,c=a?a.element||a:c;a&&(this.parentGroup=a);h&&e.invertChild(b,c);c.appendChild(b);this.added=!0;this.alignOnAdd&&!this.deferUpdateTransform&&this.updateTransform();if(this.onAdd)this.onAdd();this.className&&this.attr("class",this.className);return this},updateTransform:n.prototype.htmlUpdateTransform,setSpanRotation:function(){var a=this.rotation,b=Math.cos(a*g),c=Math.sin(a*g);G(this.element,{filter:a?["progid:DXImageTransform.Microsoft.Matrix(M11\x3d",
	b,", M12\x3d",-c,", M21\x3d",c,", M22\x3d",b,", sizingMethod\x3d'auto expand')"].join(""):"none"})},getSpanCorrection:function(a,b,c,n,h){var e=n?Math.cos(n*g):1,x=n?Math.sin(n*g):0,d=m(this.elemHeight,this.element.offsetHeight),F;this.xCorr=0>e&&-a;this.yCorr=0>x&&-d;F=0>e*x;this.xCorr+=x*b*(F?1-c:c);this.yCorr-=e*b*(n?F?c:1-c:1);h&&"left"!==h&&(this.xCorr-=a*c*(0>e?-1:1),n&&(this.yCorr-=d*c*(0>x?-1:1)),G(this.element,{textAlign:h}))},pathToVML:function(a){for(var b=a.length,e=[];b--;)p(a[b])?e[b]=
	Math.round(10*a[b])-5:"Z"===a[b]?e[b]="x":(e[b]=a[b],!a.isArc||"wa"!==a[b]&&"at"!==a[b]||(e[b+5]===e[b+7]&&(e[b+7]+=a[b+7]>a[b+5]?1:-1),e[b+6]===e[b+8]&&(e[b+8]+=a[b+8]>a[b+6]?1:-1)));return e.join(" ")||"x"},clip:function(a){var b=this,e;a?(e=a.members,q(e,b),e.push(b),b.destroyClip=function(){q(e,b)},a=a.getCSS(b)):(b.destroyClip&&b.destroyClip(),a={clip:b.docMode8?"inherit":"rect(auto)"});return b.css(a)},css:n.prototype.htmlCss,safeRemoveChild:function(a){a.parentNode&&f(a)},destroy:function(){this.destroyClip&&
	this.destroyClip();return n.prototype.destroy.apply(this)},on:function(a,b){this.element["on"+a]=function(){var a=z.event;a.target=a.srcElement;b(a)};return this},cutOffPath:function(a,b){var e;a=a.split(/[ ,]/);e=a.length;if(9===e||11===e)a[e-4]=a[e-2]=c(a[e-2])-10*b;return a.join(" ")},shadow:function(a,b,n){var e=[],h,d=this.element,x=this.renderer,p,F=d.style,k,D=d.path,l,t,z,f;D&&"string"!==typeof D.value&&(D="x");t=D;if(a){z=m(a.width,3);f=(a.opacity||.15)/z;for(h=1;3>=h;h++)l=2*z+1-2*h,n&&
	(t=this.cutOffPath(D.value,l+.5)),k=['\x3cshape isShadow\x3d"true" strokeweight\x3d"',l,'" filled\x3d"false" path\x3d"',t,'" coordsize\x3d"10 10" style\x3d"',d.style.cssText,'" /\x3e'],p=H(x.prepVML(k),null,{left:c(F.left)+m(a.offsetX,1),top:c(F.top)+m(a.offsetY,1)}),n&&(p.cutOff=l+1),k=['\x3cstroke color\x3d"',a.color||"#000000",'" opacity\x3d"',f*h,'"/\x3e'],H(x.prepVML(k),null,null,p),b?b.element.appendChild(p):d.parentNode.insertBefore(p,d),e.push(p);this.shadows=e}return this},updateShadows:A,
	setAttr:function(a,b){this.docMode8?this.element[a]=b:this.element.setAttribute(a,b)},classSetter:function(a){(this.added?this.element:this).className=a},dashstyleSetter:function(a,b,c){(c.getElementsByTagName("stroke")[0]||H(this.renderer.prepVML(["\x3cstroke/\x3e"]),null,null,c))[b]=a||"solid";this[b]=a},dSetter:function(a,b,c){var e=this.shadows;a=a||[];this.d=a.join&&a.join(" ");c.path=a=this.pathToVML(a);if(e)for(c=e.length;c--;)e[c].path=e[c].cutOff?this.cutOffPath(a,e[c].cutOff):a;this.setAttr(b,
	a)},fillSetter:function(a,b,c){var e=c.nodeName;"SPAN"===e?c.style.color=a:"IMG"!==e&&(c.filled="none"!==a,this.setAttr("fillcolor",this.renderer.color(a,c,b,this)))},"fill-opacitySetter":function(a,b,c){H(this.renderer.prepVML(["\x3c",b.split("-")[0],' opacity\x3d"',a,'"/\x3e']),null,null,c)},opacitySetter:A,rotationSetter:function(a,b,c){c=c.style;this[b]=c[b]=a;c.left=-Math.round(Math.sin(a*g)+1)+"px";c.top=Math.round(Math.cos(a*g))+"px"},strokeSetter:function(a,b,c){this.setAttr("strokecolor",
	this.renderer.color(a,c,b,this))},"stroke-widthSetter":function(a,b,c){c.stroked=!!a;this[b]=a;p(a)&&(a+="px");this.setAttr("strokeweight",a)},titleSetter:function(a,b){this.setAttr(b,a)},visibilitySetter:function(a,b,c){"inherit"===a&&(a="visible");this.shadows&&l(this.shadows,function(c){c.style[b]=a});"DIV"===c.nodeName&&(a="hidden"===a?"-999em":0,this.docMode8||(c.style[b]=a?"visible":"hidden"),b="top");c.style[b]=a},xSetter:function(a,b,c){this[b]=a;"x"===b?b="left":"y"===b&&(b="top");this.updateClipping?
	(this[b]=a,this.updateClipping()):c.style[b]=a},zIndexSetter:function(a,b,c){c.style[b]=a}},A["stroke-opacitySetter"]=A["fill-opacitySetter"],a.VMLElement=A=B(n,A),A.prototype.ySetter=A.prototype.widthSetter=A.prototype.heightSetter=A.prototype.xSetter,A={Element:A,isIE8:-1<z.navigator.userAgent.indexOf("MSIE 8.0"),init:function(a,b,c){var e,h;this.alignedObjects=[];e=this.createElement("div").css({position:"relative"});h=e.element;a.appendChild(e.element);this.isVML=!0;this.box=h;this.boxWrapper=
	e;this.gradients={};this.cache={};this.cacheKeys=[];this.imgCount=0;this.setSize(b,c,!1);if(!u.namespaces.hcv){u.namespaces.add("hcv","urn:schemas-microsoft-com:vml");try{u.createStyleSheet().cssText="hcv\\:fill, hcv\\:path, hcv\\:shape, hcv\\:stroke{ behavior:url(#default#VML); display: inline-block; } "}catch(y){u.styleSheets[0].cssText+="hcv\\:fill, hcv\\:path, hcv\\:shape, hcv\\:stroke{ behavior:url(#default#VML); display: inline-block; } "}}},isHidden:function(){return!this.box.offsetWidth},
	clipRect:function(a,b,c,n){var e=this.createElement(),m=C(a);return d(e,{members:[],count:0,left:(m?a.x:a)+1,top:(m?a.y:b)+1,width:(m?a.width:c)-1,height:(m?a.height:n)-1,getCSS:function(a){var b=a.element,c=b.nodeName,k=a.inverted,e=this.top-("shape"===c?b.offsetTop:0),h=this.left,b=h+this.width,n=e+this.height,e={clip:"rect("+Math.round(k?h:e)+"px,"+Math.round(k?n:b)+"px,"+Math.round(k?b:n)+"px,"+Math.round(k?e:h)+"px)"};!k&&a.docMode8&&"DIV"===c&&d(e,{width:b+"px",height:n+"px"});return e},updateClipping:function(){l(e.members,
	function(a){a.element&&a.css(e.getCSS(a))})}})},color:function(b,c,n,m){var e=this,d,x=/^rgba/,p,t,k="none";b&&b.linearGradient?t="gradient":b&&b.radialGradient&&(t="pattern");if(t){var D,w,z=b.linearGradient||b.radialGradient,f,E,v,q,g,F="";b=b.stops;var C,u=[],r=function(){p=['\x3cfill colors\x3d"'+u.join(",")+'" opacity\x3d"',v,'" o:opacity2\x3d"',E,'" type\x3d"',t,'" ',F,'focus\x3d"100%" method\x3d"any" /\x3e'];H(e.prepVML(p),null,null,c)};f=b[0];C=b[b.length-1];0<f[0]&&b.unshift([0,f[1]]);1>
	C[0]&&b.push([1,C[1]]);l(b,function(k,b){x.test(k[1])?(d=a.color(k[1]),D=d.get("rgb"),w=d.get("a")):(D=k[1],w=1);u.push(100*k[0]+"% "+D);b?(v=w,q=D):(E=w,g=D)});if("fill"===n)if("gradient"===t)n=z.x1||z[0]||0,b=z.y1||z[1]||0,f=z.x2||z[2]||0,z=z.y2||z[3]||0,F='angle\x3d"'+(90-180*Math.atan((z-b)/(f-n))/Math.PI)+'"',r();else{var k=z.r,A=2*k,B=2*k,G=z.cx,U=z.cy,L=c.radialReference,T,k=function(){L&&(T=m.getBBox(),G+=(L[0]-T.x)/T.width-.5,U+=(L[1]-T.y)/T.height-.5,A*=L[2]/T.width,B*=L[2]/T.height);F=
	'src\x3d"'+a.getOptions().global.VMLRadialGradientURL+'" size\x3d"'+A+","+B+'" origin\x3d"0.5,0.5" position\x3d"'+G+","+U+'" color2\x3d"'+g+'" ';r()};m.added?k():m.onAdd=k;k=q}else k=D}else x.test(b)&&"IMG"!==c.tagName?(d=a.color(b),m[n+"-opacitySetter"](d.get("a"),n,c),k=d.get("rgb")):(k=c.getElementsByTagName(n),k.length&&(k[0].opacity=1,k[0].type="solid"),k=b);return k},prepVML:function(a){var b=this.isIE8;a=a.join("");b?(a=a.replace("/\x3e",' xmlns\x3d"urn:schemas-microsoft-com:vml" /\x3e'),a=
	-1===a.indexOf('style\x3d"')?a.replace("/\x3e",' style\x3d"display:inline-block;behavior:url(#default#VML);" /\x3e'):a.replace('style\x3d"','style\x3d"display:inline-block;behavior:url(#default#VML);')):a=a.replace("\x3c","\x3chcv:");return a},text:E.prototype.html,path:function(a){var c={coordsize:"10 10"};b(a)?c.d=a:C(a)&&d(c,a);return this.createElement("shape").attr(c)},circle:function(a,b,c){var e=this.symbol("circle");C(a)&&(c=a.r,b=a.y,a=a.x);e.isCircle=!0;e.r=c;return e.attr({x:a,y:b})},g:function(a){var b;
	a&&(b={className:"highcharts-"+a,"class":"highcharts-"+a});return this.createElement("div").attr(b)},image:function(a,b,c,n,h){var e=this.createElement("img").attr({src:a});1<arguments.length&&e.attr({x:b,y:c,width:n,height:h});return e},createElement:function(a){return"rect"===a?this.symbol(a):E.prototype.createElement.call(this,a)},invertChild:function(a,b){var e=this;b=b.style;var n="IMG"===a.tagName&&a.style;G(a,{flip:"x",left:c(b.width)-(n?c(n.top):1),top:c(b.height)-(n?c(n.left):1),rotation:-90});
	l(a.childNodes,function(b){e.invertChild(b,a)})},symbols:{arc:function(a,b,c,n,h){var e=h.start,m=h.end,d=h.r||c||n;c=h.innerR;n=Math.cos(e);var p=Math.sin(e),k=Math.cos(m),D=Math.sin(m);if(0===m-e)return["x"];e=["wa",a-d,b-d,a+d,b+d,a+d*n,b+d*p,a+d*k,b+d*D];h.open&&!c&&e.push("e","M",a,b);e.push("at",a-c,b-c,a+c,b+c,a+c*k,b+c*D,a+c*n,b+c*p,"x","e");e.isArc=!0;return e},circle:function(a,b,c,n,h){h&&r(h.r)&&(c=n=2*h.r);h&&h.isCircle&&(a-=c/2,b-=n/2);return["wa",a,b,a+c,b+n,a+c,b+n/2,a+c,b+n/2,"e"]},
	rect:function(a,b,c,n,h){return E.prototype.symbols[r(h)&&h.r?"callout":"square"].call(0,a,b,c,n,h)}}},a.VMLRenderer=B=function(){this.init.apply(this,arguments)},B.prototype=t(E.prototype,A),a.Renderer=B);E.prototype.measureSpanWidth=function(a,b){var c=u.createElement("span");a=u.createTextNode(a);c.appendChild(a);G(c,b);this.box.appendChild(c);b=c.offsetWidth;f(c);return b}})(L);(function(a){function B(){var l=a.defaultOptions.global,f=u.moment;if(l.timezone){if(f)return function(a){return-f.tz(a,
	l.timezone).utcOffset()};a.error(25)}return l.useUTC&&l.getTimezoneOffset}function A(){var l=a.defaultOptions.global,q,d=l.useUTC,b=d?"getUTC":"get",p=d?"setUTC":"set";a.Date=q=l.Date||u.Date;q.hcTimezoneOffset=d&&l.timezoneOffset;q.hcGetTimezoneOffset=B();q.hcMakeTime=function(a,b,m,c,n,p){var l;d?(l=q.UTC.apply(0,arguments),l+=r(l)):l=(new q(a,b,f(m,1),f(c,0),f(n,0),f(p,0))).getTime();return l};G("Minutes Hours Day Date Month FullYear".split(" "),function(a){q["hcGet"+a]=b+a});G("Milliseconds Seconds Minutes Hours Date Month FullYear".split(" "),
	function(a){q["hcSet"+a]=p+a})}var H=a.color,G=a.each,r=a.getTZOffset,g=a.merge,f=a.pick,u=a.win;a.defaultOptions={colors:"#7cb5ec #434348 #90ed7d #f7a35c #8085e9 #f15c80 #e4d354 #2b908f #f45b5b #91e8e1".split(" "),symbols:["circle","diamond","square","triangle","triangle-down"],lang:{loading:"Loading...",months:"January February March April May June July August September October November December".split(" "),shortMonths:"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "),weekdays:"Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),
	decimalPoint:".",numericSymbols:"kMGTPE".split(""),resetZoom:"Reset zoom",resetZoomTitle:"Reset zoom level 1:1",thousandsSep:" "},global:{useUTC:!0,VMLRadialGradientURL:"http://code.highcharts.com/5.0.7/gfx/vml-radial-gradient.png"},chart:{borderRadius:0,defaultSeriesType:"line",ignoreHiddenSeries:!0,spacing:[10,10,15,10],resetZoomButton:{theme:{zIndex:20},position:{align:"right",x:-10,y:10}},width:null,height:null,borderColor:"#335cad",backgroundColor:"#ffffff",plotBorderColor:"#cccccc"},title:{text:"Chart title",
	align:"center",margin:15,widthAdjust:-44},subtitle:{text:"",align:"center",widthAdjust:-44},plotOptions:{},labels:{style:{position:"absolute",color:"#333333"}},legend:{enabled:!0,align:"center",layout:"horizontal",labelFormatter:function(){return this.name},borderColor:"#999999",borderRadius:0,navigation:{activeColor:"#003399",inactiveColor:"#cccccc"},itemStyle:{color:"#333333",fontSize:"12px",fontWeight:"bold"},itemHoverStyle:{color:"#000000"},itemHiddenStyle:{color:"#cccccc"},shadow:!1,itemCheckboxStyle:{position:"absolute",
	width:"13px",height:"13px"},squareSymbol:!0,symbolPadding:5,verticalAlign:"bottom",x:0,y:0,title:{style:{fontWeight:"bold"}}},loading:{labelStyle:{fontWeight:"bold",position:"relative",top:"45%"},style:{position:"absolute",backgroundColor:"#ffffff",opacity:.5,textAlign:"center"}},tooltip:{enabled:!0,animation:a.svg,borderRadius:3,dateTimeLabelFormats:{millisecond:"%A, %b %e, %H:%M:%S.%L",second:"%A, %b %e, %H:%M:%S",minute:"%A, %b %e, %H:%M",hour:"%A, %b %e, %H:%M",day:"%A, %b %e, %Y",week:"Week from %A, %b %e, %Y",
	month:"%B %Y",year:"%Y"},footerFormat:"",padding:8,snap:a.isTouchDevice?25:10,backgroundColor:H("#f7f7f7").setOpacity(.85).get(),borderWidth:1,headerFormat:'\x3cspan style\x3d"font-size: 10px"\x3e{point.key}\x3c/span\x3e\x3cbr/\x3e',pointFormat:'\x3cspan style\x3d"color:{point.color}"\x3e\u25cf\x3c/span\x3e {series.name}: \x3cb\x3e{point.y}\x3c/b\x3e\x3cbr/\x3e',shadow:!0,style:{color:"#333333",cursor:"default",fontSize:"12px",pointerEvents:"none",whiteSpace:"nowrap"}},credits:{enabled:!0,href:"http://www.highcharts.com",
	position:{align:"right",x:-10,verticalAlign:"bottom",y:-5},style:{cursor:"pointer",color:"#999999",fontSize:"9px"},text:"Highcharts.com"}};a.setOptions=function(l){a.defaultOptions=g(!0,a.defaultOptions,l);A();return a.defaultOptions};a.getOptions=function(){return a.defaultOptions};a.defaultPlotOptions=a.defaultOptions.plotOptions;A()})(L);(function(a){var B=a.arrayMax,A=a.arrayMin,H=a.defined,G=a.destroyObjectProperties,r=a.each,g=a.erase,f=a.merge,u=a.pick;a.PlotLineOrBand=function(a,f){this.axis=
	a;f&&(this.options=f,this.id=f.id)};a.PlotLineOrBand.prototype={render:function(){var a=this,q=a.axis,d=q.horiz,b=a.options,p=b.label,g=a.label,t=b.to,m=b.from,c=b.value,n=H(m)&&H(t),E=H(c),z=a.svgElem,e=!z,x=[],F,w=b.color,h=u(b.zIndex,0),y=b.events,x={"class":"highcharts-plot-"+(n?"band ":"line ")+(b.className||"")},J={},K=q.chart.renderer,I=n?"bands":"lines",k=q.log2lin;q.isLog&&(m=k(m),t=k(t),c=k(c));E?(x={stroke:w,"stroke-width":b.width},b.dashStyle&&(x.dashstyle=b.dashStyle)):n&&(w&&(x.fill=
	w),b.borderWidth&&(x.stroke=b.borderColor,x["stroke-width"]=b.borderWidth));J.zIndex=h;I+="-"+h;(w=q[I])||(q[I]=w=K.g("plot-"+I).attr(J).add());e&&(a.svgElem=z=K.path().attr(x).add(w));if(E)x=q.getPlotLinePath(c,z.strokeWidth());else if(n)x=q.getPlotBandPath(m,t,b);else return;if(e&&x&&x.length){if(z.attr({d:x}),y)for(F in b=function(b){z.on(b,function(k){y[b].apply(a,[k])})},y)b(F)}else z&&(x?(z.show(),z.animate({d:x})):(z.hide(),g&&(a.label=g=g.destroy())));p&&H(p.text)&&x&&x.length&&0<q.width&&
	0<q.height&&!x.flat?(p=f({align:d&&n&&"center",x:d?!n&&4:10,verticalAlign:!d&&n&&"middle",y:d?n?16:10:n?6:-4,rotation:d&&!n&&90},p),this.renderLabel(p,x,n,h)):g&&g.hide();return a},renderLabel:function(a,f,d,b){var p=this.label,l=this.axis.chart.renderer;p||(p={align:a.textAlign||a.align,rotation:a.rotation,"class":"highcharts-plot-"+(d?"band":"line")+"-label "+(a.className||"")},p.zIndex=b,this.label=p=l.text(a.text,0,0,a.useHTML).attr(p).add(),p.css(a.style));b=[f[1],f[4],d?f[6]:f[1]];f=[f[2],f[5],
	d?f[7]:f[2]];d=A(b);l=A(f);p.align(a,!1,{x:d,y:l,width:B(b)-d,height:B(f)-l});p.show()},destroy:function(){g(this.axis.plotLinesAndBands,this);delete this.axis;G(this)}};a.AxisPlotLineOrBandExtension={getPlotBandPath:function(a,f){f=this.getPlotLinePath(f,null,null,!0);(a=this.getPlotLinePath(a,null,null,!0))&&f?(a.flat=a.toString()===f.toString(),a.push(f[4],f[5],f[1],f[2],"z")):a=null;return a},addPlotBand:function(a){return this.addPlotBandOrLine(a,"plotBands")},addPlotLine:function(a){return this.addPlotBandOrLine(a,
	"plotLines")},addPlotBandOrLine:function(f,g){var d=(new a.PlotLineOrBand(this,f)).render(),b=this.userOptions;d&&(g&&(b[g]=b[g]||[],b[g].push(f)),this.plotLinesAndBands.push(d));return d},removePlotBandOrLine:function(a){for(var f=this.plotLinesAndBands,d=this.options,b=this.userOptions,p=f.length;p--;)f[p].id===a&&f[p].destroy();r([d.plotLines||[],b.plotLines||[],d.plotBands||[],b.plotBands||[]],function(b){for(p=b.length;p--;)b[p].id===a&&g(b,b[p])})}}})(L);(function(a){var B=a.correctFloat,A=
	a.defined,H=a.destroyObjectProperties,G=a.isNumber,r=a.merge,g=a.pick,f=a.deg2rad;a.Tick=function(a,f,g,d){this.axis=a;this.pos=f;this.type=g||"";this.isNew=!0;g||d||this.addLabel()};a.Tick.prototype={addLabel:function(){var a=this.axis,f=a.options,q=a.chart,d=a.categories,b=a.names,p=this.pos,C=f.labels,t=a.tickPositions,m=p===t[0],c=p===t[t.length-1],b=d?g(d[p],b[p],p):p,d=this.label,t=t.info,n;a.isDatetimeAxis&&t&&(n=f.dateTimeLabelFormats[t.higherRanks[p]||t.unitName]);this.isFirst=m;this.isLast=
	c;f=a.labelFormatter.call({axis:a,chart:q,isFirst:m,isLast:c,dateTimeLabelFormat:n,value:a.isLog?B(a.lin2log(b)):b});A(d)?d&&d.attr({text:f}):(this.labelLength=(this.label=d=A(f)&&C.enabled?q.renderer.text(f,0,0,C.useHTML).css(r(C.style)).add(a.labelGroup):null)&&d.getBBox().width,this.rotation=0)},getLabelSize:function(){return this.label?this.label.getBBox()[this.axis.horiz?"height":"width"]:0},handleOverflow:function(a){var l=this.axis,q=a.x,d=l.chart.chartWidth,b=l.chart.spacing,p=g(l.labelLeft,
	Math.min(l.pos,b[3])),b=g(l.labelRight,Math.max(l.pos+l.len,d-b[1])),C=this.label,t=this.rotation,m={left:0,center:.5,right:1}[l.labelAlign],c=C.getBBox().width,n=l.getSlotWidth(),E=n,z=1,e,x={};if(t)0>t&&q-m*c<p?e=Math.round(q/Math.cos(t*f)-p):0<t&&q+m*c>b&&(e=Math.round((d-q)/Math.cos(t*f)));else if(d=q+(1-m)*c,q-m*c<p?E=a.x+E*(1-m)-p:d>b&&(E=b-a.x+E*m,z=-1),E=Math.min(n,E),E<n&&"center"===l.labelAlign&&(a.x+=z*(n-E-m*(n-Math.min(c,E)))),c>E||l.autoRotation&&(C.styles||{}).width)e=E;e&&(x.width=
	e,(l.options.labels.style||{}).textOverflow||(x.textOverflow="ellipsis"),C.css(x))},getPosition:function(a,f,g,d){var b=this.axis,p=b.chart,l=d&&p.oldChartHeight||p.chartHeight;return{x:a?b.translate(f+g,null,null,d)+b.transB:b.left+b.offset+(b.opposite?(d&&p.oldChartWidth||p.chartWidth)-b.right-b.left:0),y:a?l-b.bottom+b.offset-(b.opposite?b.height:0):l-b.translate(f+g,null,null,d)-b.transB}},getLabelPosition:function(a,g,q,d,b,p,C,t){var m=this.axis,c=m.transA,n=m.reversed,E=m.staggerLines,z=m.tickRotCorr||
	{x:0,y:0},e=b.y;A(e)||(e=0===m.side?q.rotation?-8:-q.getBBox().height:2===m.side?z.y+8:Math.cos(q.rotation*f)*(z.y-q.getBBox(!1,0).height/2));a=a+b.x+z.x-(p&&d?p*c*(n?-1:1):0);g=g+e-(p&&!d?p*c*(n?1:-1):0);E&&(q=C/(t||1)%E,m.opposite&&(q=E-q-1),g+=m.labelOffset/E*q);return{x:a,y:Math.round(g)}},getMarkPath:function(a,f,g,d,b,p){return p.crispLine(["M",a,f,"L",a+(b?0:-g),f+(b?g:0)],d)},render:function(a,f,q){var d=this.axis,b=d.options,p=d.chart.renderer,l=d.horiz,t=this.type,m=this.label,c=this.pos,
	n=b.labels,E=this.gridLine,z=t?t+"Tick":"tick",e=d.tickSize(z),x=this.mark,F=!x,w=n.step,h={},y=!0,J=d.tickmarkOffset,K=this.getPosition(l,c,J,f),I=K.x,K=K.y,k=l&&I===d.pos+d.len||!l&&K===d.pos?-1:1,D=t?t+"Grid":"grid",P=b[D+"LineWidth"],N=b[D+"LineColor"],r=b[D+"LineDashStyle"],D=g(b[z+"Width"],!t&&d.isXAxis?1:0),z=b[z+"Color"];q=g(q,1);this.isActive=!0;E||(h.stroke=N,h["stroke-width"]=P,r&&(h.dashstyle=r),t||(h.zIndex=1),f&&(h.opacity=0),this.gridLine=E=p.path().attr(h).addClass("highcharts-"+(t?
	t+"-":"")+"grid-line").add(d.gridGroup));if(!f&&E&&(c=d.getPlotLinePath(c+J,E.strokeWidth()*k,f,!0)))E[this.isNew?"attr":"animate"]({d:c,opacity:q});e&&(d.opposite&&(e[0]=-e[0]),F&&(this.mark=x=p.path().addClass("highcharts-"+(t?t+"-":"")+"tick").add(d.axisGroup),x.attr({stroke:z,"stroke-width":D})),x[F?"attr":"animate"]({d:this.getMarkPath(I,K,e[0],x.strokeWidth()*k,l,p),opacity:q}));m&&G(I)&&(m.xy=K=this.getLabelPosition(I,K,m,l,n,J,a,w),this.isFirst&&!this.isLast&&!g(b.showFirstLabel,1)||this.isLast&&
	!this.isFirst&&!g(b.showLastLabel,1)?y=!1:!l||d.isRadial||n.step||n.rotation||f||0===q||this.handleOverflow(K),w&&a%w&&(y=!1),y&&G(K.y)?(K.opacity=q,m[this.isNew?"attr":"animate"](K)):m.attr("y",-9999),this.isNew=!1)},destroy:function(){H(this,this.axis)}}})(L);(function(a){var B=a.addEvent,A=a.animObject,H=a.arrayMax,G=a.arrayMin,r=a.AxisPlotLineOrBandExtension,g=a.color,f=a.correctFloat,u=a.defaultOptions,l=a.defined,q=a.deg2rad,d=a.destroyObjectProperties,b=a.each,p=a.extend,C=a.fireEvent,t=a.format,
	m=a.getMagnitude,c=a.grep,n=a.inArray,E=a.isArray,z=a.isNumber,e=a.isString,x=a.merge,F=a.normalizeTickInterval,w=a.pick,h=a.PlotLineOrBand,y=a.removeEvent,J=a.splat,K=a.syncTimeout,I=a.Tick;a.Axis=function(){this.init.apply(this,arguments)};a.Axis.prototype={defaultOptions:{dateTimeLabelFormats:{millisecond:"%H:%M:%S.%L",second:"%H:%M:%S",minute:"%H:%M",hour:"%H:%M",day:"%e. %b",week:"%e. %b",month:"%b '%y",year:"%Y"},endOnTick:!1,labels:{enabled:!0,style:{color:"#666666",cursor:"default",fontSize:"11px"},
	x:0},minPadding:.01,maxPadding:.01,minorTickLength:2,minorTickPosition:"outside",startOfWeek:1,startOnTick:!1,tickLength:10,tickmarkPlacement:"between",tickPixelInterval:100,tickPosition:"outside",title:{align:"middle",style:{color:"#666666"}},type:"linear",minorGridLineColor:"#f2f2f2",minorGridLineWidth:1,minorTickColor:"#999999",lineColor:"#ccd6eb",lineWidth:1,gridLineColor:"#e6e6e6",tickColor:"#ccd6eb"},defaultYAxisOptions:{endOnTick:!0,tickPixelInterval:72,showLastLabel:!0,labels:{x:-8},maxPadding:.05,
	minPadding:.05,startOnTick:!0,title:{rotation:270,text:"Values"},stackLabels:{enabled:!1,formatter:function(){return a.numberFormat(this.total,-1)},style:{fontSize:"11px",fontWeight:"bold",color:"#000000",textOutline:"1px contrast"}},gridLineWidth:1,lineWidth:0},defaultLeftAxisOptions:{labels:{x:-15},title:{rotation:270}},defaultRightAxisOptions:{labels:{x:15},title:{rotation:90}},defaultBottomAxisOptions:{labels:{autoRotation:[-45],x:0},title:{rotation:0}},defaultTopAxisOptions:{labels:{autoRotation:[-45],
	x:0},title:{rotation:0}},init:function(a,b){var k=b.isX;this.chart=a;this.horiz=a.inverted?!k:k;this.isXAxis=k;this.coll=this.coll||(k?"xAxis":"yAxis");this.opposite=b.opposite;this.side=b.side||(this.horiz?this.opposite?0:2:this.opposite?1:3);this.setOptions(b);var c=this.options,e=c.type;this.labelFormatter=c.labels.formatter||this.defaultLabelFormatter;this.userOptions=b;this.minPixelPadding=0;this.reversed=c.reversed;this.visible=!1!==c.visible;this.zoomEnabled=!1!==c.zoomEnabled;this.hasNames=
	"category"===e||!0===c.categories;this.categories=c.categories||this.hasNames;this.names=this.names||[];this.isLog="logarithmic"===e;this.isDatetimeAxis="datetime"===e;this.isLinked=l(c.linkedTo);this.ticks={};this.labelEdge=[];this.minorTicks={};this.plotLinesAndBands=[];this.alternateBands={};this.len=0;this.minRange=this.userMinRange=c.minRange||c.maxZoom;this.range=c.range;this.offset=c.offset||0;this.stacks={};this.oldStacks={};this.stacksTouched=0;this.min=this.max=null;this.crosshair=w(c.crosshair,
	J(a.options.tooltip.crosshairs)[k?0:1],!1);var h;b=this.options.events;-1===n(this,a.axes)&&(k?a.axes.splice(a.xAxis.length,0,this):a.axes.push(this),a[this.coll].push(this));this.series=this.series||[];a.inverted&&k&&void 0===this.reversed&&(this.reversed=!0);this.removePlotLine=this.removePlotBand=this.removePlotBandOrLine;for(h in b)B(this,h,b[h]);this.isLog&&(this.val2lin=this.log2lin,this.lin2val=this.lin2log)},setOptions:function(a){this.options=x(this.defaultOptions,"yAxis"===this.coll&&this.defaultYAxisOptions,
	[this.defaultTopAxisOptions,this.defaultRightAxisOptions,this.defaultBottomAxisOptions,this.defaultLeftAxisOptions][this.side],x(u[this.coll],a))},defaultLabelFormatter:function(){var b=this.axis,c=this.value,e=b.categories,h=this.dateTimeLabelFormat,n=u.lang,d=n.numericSymbols,n=n.numericSymbolMagnitude||1E3,v=d&&d.length,m,f=b.options.labels.format,b=b.isLog?c:b.tickInterval;if(f)m=t(f,this);else if(e)m=c;else if(h)m=a.dateFormat(h,c);else if(v&&1E3<=b)for(;v--&&void 0===m;)e=Math.pow(n,v+1),b>=
	e&&0===10*c%e&&null!==d[v]&&0!==c&&(m=a.numberFormat(c/e,-1)+d[v]);void 0===m&&(m=1E4<=Math.abs(c)?a.numberFormat(c,-1):a.numberFormat(c,-1,void 0,""));return m},getSeriesExtremes:function(){var a=this,e=a.chart;a.hasVisibleSeries=!1;a.dataMin=a.dataMax=a.threshold=null;a.softThreshold=!a.isXAxis;a.buildStacks&&a.buildStacks();b(a.series,function(b){if(b.visible||!e.options.chart.ignoreHiddenSeries){var k=b.options,h=k.threshold,D;a.hasVisibleSeries=!0;a.isLog&&0>=h&&(h=null);if(a.isXAxis)k=b.xData,
	k.length&&(b=G(k),z(b)||b instanceof Date||(k=c(k,function(a){return z(a)}),b=G(k)),a.dataMin=Math.min(w(a.dataMin,k[0]),b),a.dataMax=Math.max(w(a.dataMax,k[0]),H(k)));else if(b.getExtremes(),D=b.dataMax,b=b.dataMin,l(b)&&l(D)&&(a.dataMin=Math.min(w(a.dataMin,b),b),a.dataMax=Math.max(w(a.dataMax,D),D)),l(h)&&(a.threshold=h),!k.softThreshold||a.isLog)a.softThreshold=!1}})},translate:function(a,b,c,e,h,n){var k=this.linkedParent||this,D=1,m=0,d=e?k.oldTransA:k.transA;e=e?k.oldMin:k.min;var f=k.minPixelPadding;
	h=(k.isOrdinal||k.isBroken||k.isLog&&h)&&k.lin2val;d||(d=k.transA);c&&(D*=-1,m=k.len);k.reversed&&(D*=-1,m-=D*(k.sector||k.len));b?(a=(a*D+m-f)/d+e,h&&(a=k.lin2val(a))):(h&&(a=k.val2lin(a)),a=D*(a-e)*d+m+D*f+(z(n)?d*n:0));return a},toPixels:function(a,b){return this.translate(a,!1,!this.horiz,null,!0)+(b?0:this.pos)},toValue:function(a,b){return this.translate(a-(b?0:this.pos),!0,!this.horiz,null,!0)},getPlotLinePath:function(a,b,c,e,h){var k=this.chart,D=this.left,n=this.top,m,d,f=c&&k.oldChartHeight||
	k.chartHeight,p=c&&k.oldChartWidth||k.chartWidth,y;m=this.transB;var t=function(a,b,k){if(a<b||a>k)e?a=Math.min(Math.max(b,a),k):y=!0;return a};h=w(h,this.translate(a,null,null,c));a=c=Math.round(h+m);m=d=Math.round(f-h-m);z(h)?this.horiz?(m=n,d=f-this.bottom,a=c=t(a,D,D+this.width)):(a=D,c=p-this.right,m=d=t(m,n,n+this.height)):y=!0;return y&&!e?null:k.renderer.crispLine(["M",a,m,"L",c,d],b||1)},getLinearTickPositions:function(a,b,c){var k,e=f(Math.floor(b/a)*a),h=f(Math.ceil(c/a)*a),D=[];if(b===
	c&&z(b))return[b];for(b=e;b<=h;){D.push(b);b=f(b+a);if(b===k)break;k=b}return D},getMinorTickPositions:function(){var a=this.options,b=this.tickPositions,c=this.minorTickInterval,e=[],h,n=this.pointRangePadding||0;h=this.min-n;var n=this.max+n,m=n-h;if(m&&m/c<this.len/3)if(this.isLog)for(n=b.length,h=1;h<n;h++)e=e.concat(this.getLogTickPositions(c,b[h-1],b[h],!0));else if(this.isDatetimeAxis&&"auto"===a.minorTickInterval)e=e.concat(this.getTimeTicks(this.normalizeTimeTickInterval(c),h,n,a.startOfWeek));
	else for(b=h+(b[0]-h)%c;b<=n&&b!==e[0];b+=c)e.push(b);0!==e.length&&this.trimTicks(e,a.startOnTick,a.endOnTick);return e},adjustForMinRange:function(){var a=this.options,c=this.min,e=this.max,h,n=this.dataMax-this.dataMin>=this.minRange,m,v,d,f,p,y;this.isXAxis&&void 0===this.minRange&&!this.isLog&&(l(a.min)||l(a.max)?this.minRange=null:(b(this.series,function(a){f=a.xData;for(v=p=a.xIncrement?1:f.length-1;0<v;v--)if(d=f[v]-f[v-1],void 0===m||d<m)m=d}),this.minRange=Math.min(5*m,this.dataMax-this.dataMin)));
	e-c<this.minRange&&(y=this.minRange,h=(y-e+c)/2,h=[c-h,w(a.min,c-h)],n&&(h[2]=this.isLog?this.log2lin(this.dataMin):this.dataMin),c=H(h),e=[c+y,w(a.max,c+y)],n&&(e[2]=this.isLog?this.log2lin(this.dataMax):this.dataMax),e=G(e),e-c<y&&(h[0]=e-y,h[1]=w(a.min,e-y),c=H(h)));this.min=c;this.max=e},getClosest:function(){var a;this.categories?a=1:b(this.series,function(b){var k=b.closestPointRange,c=b.visible||!b.chart.options.chart.ignoreHiddenSeries;!b.noSharedTooltip&&l(k)&&c&&(a=l(a)?Math.min(a,k):k)});
	return a},nameToX:function(a){var b=E(this.categories),k=b?this.categories:this.names,c=a.options.x,e;a.series.requireSorting=!1;l(c)||(c=!1===this.options.uniqueNames?a.series.autoIncrement():n(a.name,k));-1===c?b||(e=k.length):e=c;this.names[e]=a.name;return e},updateNames:function(){var a=this;0<this.names.length&&(this.names.length=0,this.minRange=void 0,b(this.series||[],function(k){k.xIncrement=null;if(!k.points||k.isDirtyData)k.processData(),k.generatePoints();b(k.points,function(b,c){var e;
	b.options&&(e=a.nameToX(b),e!==b.x&&(b.x=e,k.xData[c]=e))})}))},setAxisTranslation:function(a){var k=this,c=k.max-k.min,h=k.axisPointRange||0,n,m=0,d=0,f=k.linkedParent,y=!!k.categories,p=k.transA,t=k.isXAxis;if(t||y||h)n=k.getClosest(),f?(m=f.minPointOffset,d=f.pointRangePadding):b(k.series,function(a){var b=y?1:t?w(a.options.pointRange,n,0):k.axisPointRange||0;a=a.options.pointPlacement;h=Math.max(h,b);k.single||(m=Math.max(m,e(a)?0:b/2),d=Math.max(d,"on"===a?0:b))}),f=k.ordinalSlope&&n?k.ordinalSlope/
	n:1,k.minPointOffset=m*=f,k.pointRangePadding=d*=f,k.pointRange=Math.min(h,c),t&&(k.closestPointRange=n);a&&(k.oldTransA=p);k.translationSlope=k.transA=p=k.len/(c+d||1);k.transB=k.horiz?k.left:k.bottom;k.minPixelPadding=p*m},minFromRange:function(){return this.max-this.range},setTickInterval:function(k){var c=this,e=c.chart,h=c.options,n=c.isLog,d=c.log2lin,v=c.isDatetimeAxis,y=c.isXAxis,p=c.isLinked,t=h.maxPadding,x=h.minPadding,g=h.tickInterval,E=h.tickPixelInterval,q=c.categories,J=c.threshold,
	K=c.softThreshold,I,r,u,A;v||q||p||this.getTickAmount();u=w(c.userMin,h.min);A=w(c.userMax,h.max);p?(c.linkedParent=e[c.coll][h.linkedTo],e=c.linkedParent.getExtremes(),c.min=w(e.min,e.dataMin),c.max=w(e.max,e.dataMax),h.type!==c.linkedParent.options.type&&a.error(11,1)):(!K&&l(J)&&(c.dataMin>=J?(I=J,x=0):c.dataMax<=J&&(r=J,t=0)),c.min=w(u,I,c.dataMin),c.max=w(A,r,c.dataMax));n&&(!k&&0>=Math.min(c.min,w(c.dataMin,c.min))&&a.error(10,1),c.min=f(d(c.min),15),c.max=f(d(c.max),15));c.range&&l(c.max)&&
	(c.userMin=c.min=u=Math.max(c.min,c.minFromRange()),c.userMax=A=c.max,c.range=null);C(c,"foundExtremes");c.beforePadding&&c.beforePadding();c.adjustForMinRange();!(q||c.axisPointRange||c.usePercentage||p)&&l(c.min)&&l(c.max)&&(d=c.max-c.min)&&(!l(u)&&x&&(c.min-=d*x),!l(A)&&t&&(c.max+=d*t));z(h.floor)?c.min=Math.max(c.min,h.floor):z(h.softMin)&&(c.min=Math.min(c.min,h.softMin));z(h.ceiling)?c.max=Math.min(c.max,h.ceiling):z(h.softMax)&&(c.max=Math.max(c.max,h.softMax));K&&l(c.dataMin)&&(J=J||0,!l(u)&&
	c.min<J&&c.dataMin>=J?c.min=J:!l(A)&&c.max>J&&c.dataMax<=J&&(c.max=J));c.tickInterval=c.min===c.max||void 0===c.min||void 0===c.max?1:p&&!g&&E===c.linkedParent.options.tickPixelInterval?g=c.linkedParent.tickInterval:w(g,this.tickAmount?(c.max-c.min)/Math.max(this.tickAmount-1,1):void 0,q?1:(c.max-c.min)*E/Math.max(c.len,E));y&&!k&&b(c.series,function(a){a.processData(c.min!==c.oldMin||c.max!==c.oldMax)});c.setAxisTranslation(!0);c.beforeSetTickPositions&&c.beforeSetTickPositions();c.postProcessTickInterval&&
	(c.tickInterval=c.postProcessTickInterval(c.tickInterval));c.pointRange&&!g&&(c.tickInterval=Math.max(c.pointRange,c.tickInterval));k=w(h.minTickInterval,c.isDatetimeAxis&&c.closestPointRange);!g&&c.tickInterval<k&&(c.tickInterval=k);v||n||g||(c.tickInterval=F(c.tickInterval,null,m(c.tickInterval),w(h.allowDecimals,!(.5<c.tickInterval&&5>c.tickInterval&&1E3<c.max&&9999>c.max)),!!this.tickAmount));this.tickAmount||(c.tickInterval=c.unsquish());this.setTickPositions()},setTickPositions:function(){var a=
	this.options,b,c=a.tickPositions,e=a.tickPositioner,h=a.startOnTick,n=a.endOnTick,m;this.tickmarkOffset=this.categories&&"between"===a.tickmarkPlacement&&1===this.tickInterval?.5:0;this.minorTickInterval="auto"===a.minorTickInterval&&this.tickInterval?this.tickInterval/5:a.minorTickInterval;this.tickPositions=b=c&&c.slice();!b&&(b=this.isDatetimeAxis?this.getTimeTicks(this.normalizeTimeTickInterval(this.tickInterval,a.units),this.min,this.max,a.startOfWeek,this.ordinalPositions,this.closestPointRange,
	!0):this.isLog?this.getLogTickPositions(this.tickInterval,this.min,this.max):this.getLinearTickPositions(this.tickInterval,this.min,this.max),b.length>this.len&&(b=[b[0],b.pop()]),this.tickPositions=b,e&&(e=e.apply(this,[this.min,this.max])))&&(this.tickPositions=b=e);this.trimTicks(b,h,n);this.isLinked||(this.min===this.max&&l(this.min)&&!this.tickAmount&&(m=!0,this.min-=.5,this.max+=.5),this.single=m,c||e||this.adjustTickAmount())},trimTicks:function(a,b,c){var k=a[0],e=a[a.length-1],h=this.minPointOffset||
	0;if(!this.isLinked){if(b)this.min=k;else for(;this.min-h>a[0];)a.shift();if(c)this.max=e;else for(;this.max+h<a[a.length-1];)a.pop();0===a.length&&l(k)&&a.push((e+k)/2)}},alignToOthers:function(){var a={},c,e=this.options;!1===this.chart.options.chart.alignTicks||!1===e.alignTicks||this.isLog||b(this.chart[this.coll],function(b){var k=b.options,k=[b.horiz?k.left:k.top,k.width,k.height,k.pane].join();b.series.length&&(a[k]?c=!0:a[k]=1)});return c},getTickAmount:function(){var a=this.options,b=a.tickAmount,
	c=a.tickPixelInterval;!l(a.tickInterval)&&this.len<c&&!this.isRadial&&!this.isLog&&a.startOnTick&&a.endOnTick&&(b=2);!b&&this.alignToOthers()&&(b=Math.ceil(this.len/c)+1);4>b&&(this.finalTickAmt=b,b=5);this.tickAmount=b},adjustTickAmount:function(){var a=this.tickInterval,b=this.tickPositions,c=this.tickAmount,e=this.finalTickAmt,h=b&&b.length;if(h<c){for(;b.length<c;)b.push(f(b[b.length-1]+a));this.transA*=(h-1)/(c-1);this.max=b[b.length-1]}else h>c&&(this.tickInterval*=2,this.setTickPositions());
	if(l(e)){for(a=c=b.length;a--;)(3===e&&1===a%2||2>=e&&0<a&&a<c-1)&&b.splice(a,1);this.finalTickAmt=void 0}},setScale:function(){var a,c;this.oldMin=this.min;this.oldMax=this.max;this.oldAxisLength=this.len;this.setAxisSize();c=this.len!==this.oldAxisLength;b(this.series,function(b){if(b.isDirtyData||b.isDirty||b.xAxis.isDirty)a=!0});c||a||this.isLinked||this.forceRedraw||this.userMin!==this.oldUserMin||this.userMax!==this.oldUserMax||this.alignToOthers()?(this.resetStacks&&this.resetStacks(),this.forceRedraw=
	!1,this.getSeriesExtremes(),this.setTickInterval(),this.oldUserMin=this.userMin,this.oldUserMax=this.userMax,this.isDirty||(this.isDirty=c||this.min!==this.oldMin||this.max!==this.oldMax)):this.cleanStacks&&this.cleanStacks()},setExtremes:function(a,c,e,h,n){var k=this,m=k.chart;e=w(e,!0);b(k.series,function(a){delete a.kdTree});n=p(n,{min:a,max:c});C(k,"setExtremes",n,function(){k.userMin=a;k.userMax=c;k.eventArgs=n;e&&m.redraw(h)})},zoom:function(a,b){var c=this.dataMin,k=this.dataMax,e=this.options,
	h=Math.min(c,w(e.min,c)),e=Math.max(k,w(e.max,k));if(a!==this.min||b!==this.max)this.allowZoomOutside||(l(c)&&(a<h&&(a=h),a>e&&(a=e)),l(k)&&(b<h&&(b=h),b>e&&(b=e))),this.displayBtn=void 0!==a||void 0!==b,this.setExtremes(a,b,!1,void 0,{trigger:"zoom"});return!0},setAxisSize:function(){var a=this.chart,b=this.options,c=b.offsets||[0,0,0,0],e=this.horiz,h=w(b.width,a.plotWidth-c[3]+c[1]),n=w(b.height,a.plotHeight-c[0]+c[2]),m=w(b.top,a.plotTop+c[0]),b=w(b.left,a.plotLeft+c[3]),c=/%$/;c.test(n)&&(n=
	Math.round(parseFloat(n)/100*a.plotHeight));c.test(m)&&(m=Math.round(parseFloat(m)/100*a.plotHeight+a.plotTop));this.left=b;this.top=m;this.width=h;this.height=n;this.bottom=a.chartHeight-n-m;this.right=a.chartWidth-h-b;this.len=Math.max(e?h:n,0);this.pos=e?b:m},getExtremes:function(){var a=this.isLog,b=this.lin2log;return{min:a?f(b(this.min)):this.min,max:a?f(b(this.max)):this.max,dataMin:this.dataMin,dataMax:this.dataMax,userMin:this.userMin,userMax:this.userMax}},getThreshold:function(a){var b=
	this.isLog,c=this.lin2log,k=b?c(this.min):this.min,b=b?c(this.max):this.max;null===a?a=k:k>a?a=k:b<a&&(a=b);return this.translate(a,0,1,0,1)},autoLabelAlign:function(a){a=(w(a,0)-90*this.side+720)%360;return 15<a&&165>a?"right":195<a&&345>a?"left":"center"},tickSize:function(a){var b=this.options,c=b[a+"Length"],k=w(b[a+"Width"],"tick"===a&&this.isXAxis?1:0);if(k&&c)return"inside"===b[a+"Position"]&&(c=-c),[c,k]},labelMetrics:function(){return this.chart.renderer.fontMetrics(this.options.labels.style&&
	this.options.labels.style.fontSize,this.ticks[0]&&this.ticks[0].label)},unsquish:function(){var a=this.options.labels,c=this.horiz,e=this.tickInterval,h=e,n=this.len/(((this.categories?1:0)+this.max-this.min)/e),m,d=a.rotation,f=this.labelMetrics(),p,y=Number.MAX_VALUE,t,x=function(a){a/=n||1;a=1<a?Math.ceil(a):1;return a*e};c?(t=!a.staggerLines&&!a.step&&(l(d)?[d]:n<w(a.autoRotationLimit,80)&&a.autoRotation))&&b(t,function(a){var b;if(a===d||a&&-90<=a&&90>=a)p=x(Math.abs(f.h/Math.sin(q*a))),b=p+
	Math.abs(a/360),b<y&&(y=b,m=a,h=p)}):a.step||(h=x(f.h));this.autoRotation=t;this.labelRotation=w(m,d);return h},getSlotWidth:function(){var a=this.chart,b=this.horiz,c=this.options.labels,e=Math.max(this.tickPositions.length-(this.categories?0:1),1),h=a.margin[3];return b&&2>(c.step||0)&&!c.rotation&&(this.staggerLines||1)*this.len/e||!b&&(h&&h-a.spacing[3]||.33*a.chartWidth)},renderUnsquish:function(){var a=this.chart,c=a.renderer,h=this.tickPositions,n=this.ticks,m=this.options.labels,d=this.horiz,
	v=this.getSlotWidth(),f=Math.max(1,Math.round(v-2*(m.padding||5))),p={},y=this.labelMetrics(),t=m.style&&m.style.textOverflow,g,z=0,E,w;e(m.rotation)||(p.rotation=m.rotation||0);b(h,function(a){(a=n[a])&&a.labelLength>z&&(z=a.labelLength)});this.maxLabelLength=z;if(this.autoRotation)z>f&&z>y.h?p.rotation=this.labelRotation:this.labelRotation=0;else if(v&&(g={width:f+"px"},!t))for(g.textOverflow="clip",E=h.length;!d&&E--;)if(w=h[E],f=n[w].label)f.styles&&"ellipsis"===f.styles.textOverflow?f.css({textOverflow:"clip"}):
	n[w].labelLength>v&&f.css({width:v+"px"}),f.getBBox().height>this.len/h.length-(y.h-y.f)&&(f.specCss={textOverflow:"ellipsis"});p.rotation&&(g={width:(z>.5*a.chartHeight?.33*a.chartHeight:a.chartHeight)+"px"},t||(g.textOverflow="ellipsis"));if(this.labelAlign=m.align||this.autoLabelAlign(this.labelRotation))p.align=this.labelAlign;b(h,function(a){var b=(a=n[a])&&a.label;b&&(b.attr(p),g&&b.css(x(g,b.specCss)),delete b.specCss,a.rotation=p.rotation)});this.tickRotCorr=c.rotCorr(y.b,this.labelRotation||
	0,0!==this.side)},hasData:function(){return this.hasVisibleSeries||l(this.min)&&l(this.max)&&!!this.tickPositions},addTitle:function(a){var b=this.chart.renderer,c=this.horiz,k=this.opposite,e=this.options.title,h;this.axisTitle||((h=e.textAlign)||(h=(c?{low:"left",middle:"center",high:"right"}:{low:k?"right":"left",middle:"center",high:k?"left":"right"})[e.align]),this.axisTitle=b.text(e.text,0,0,e.useHTML).attr({zIndex:7,rotation:e.rotation||0,align:h}).addClass("highcharts-axis-title").css(e.style).add(this.axisGroup),
	this.axisTitle.isNew=!0);this.axisTitle[a?"show":"hide"](!0)},generateTick:function(a){var b=this.ticks;b[a]?b[a].addLabel():b[a]=new I(this,a)},getOffset:function(){var a=this,c=a.chart,e=c.renderer,h=a.options,n=a.tickPositions,m=a.ticks,d=a.horiz,f=a.side,p=c.inverted?[1,0,3,2][f]:f,y,t,x=0,g,z=0,E=h.title,q=h.labels,F=0,J=c.axisOffset,c=c.clipOffset,K=[-1,1,1,-1][f],C,I=h.className,r=a.axisParent,u=this.tickSize("tick");y=a.hasData();a.showAxis=t=y||w(h.showEmpty,!0);a.staggerLines=a.horiz&&q.staggerLines;
	a.axisGroup||(a.gridGroup=e.g("grid").attr({zIndex:h.gridZIndex||1}).addClass("highcharts-"+this.coll.toLowerCase()+"-grid "+(I||"")).add(r),a.axisGroup=e.g("axis").attr({zIndex:h.zIndex||2}).addClass("highcharts-"+this.coll.toLowerCase()+" "+(I||"")).add(r),a.labelGroup=e.g("axis-labels").attr({zIndex:q.zIndex||7}).addClass("highcharts-"+a.coll.toLowerCase()+"-labels "+(I||"")).add(r));if(y||a.isLinked)b(n,function(b,c){a.generateTick(b,c)}),a.renderUnsquish(),!1===q.reserveSpace||0!==f&&2!==f&&
	{1:"left",3:"right"}[f]!==a.labelAlign&&"center"!==a.labelAlign||b(n,function(a){F=Math.max(m[a].getLabelSize(),F)}),a.staggerLines&&(F*=a.staggerLines,a.labelOffset=F*(a.opposite?-1:1));else for(C in m)m[C].destroy(),delete m[C];E&&E.text&&!1!==E.enabled&&(a.addTitle(t),t&&(x=a.axisTitle.getBBox()[d?"height":"width"],g=E.offset,z=l(g)?0:w(E.margin,d?5:10)));a.renderLine();a.offset=K*w(h.offset,J[f]);a.tickRotCorr=a.tickRotCorr||{x:0,y:0};e=0===f?-a.labelMetrics().h:2===f?a.tickRotCorr.y:0;z=Math.abs(F)+
	z;F&&(z=z-e+K*(d?w(q.y,a.tickRotCorr.y+8*K):q.x));a.axisTitleMargin=w(g,z);J[f]=Math.max(J[f],a.axisTitleMargin+x+K*a.offset,z,y&&n.length&&u?u[0]:0);h=h.offset?0:2*Math.floor(a.axisLine.strokeWidth()/2);c[p]=Math.max(c[p],h)},getLinePath:function(a){var b=this.chart,c=this.opposite,k=this.offset,e=this.horiz,h=this.left+(c?this.width:0)+k,k=b.chartHeight-this.bottom-(c?this.height:0)+k;c&&(a*=-1);return b.renderer.crispLine(["M",e?this.left:h,e?k:this.top,"L",e?b.chartWidth-this.right:h,e?k:b.chartHeight-
	this.bottom],a)},renderLine:function(){this.axisLine||(this.axisLine=this.chart.renderer.path().addClass("highcharts-axis-line").add(this.axisGroup),this.axisLine.attr({stroke:this.options.lineColor,"stroke-width":this.options.lineWidth,zIndex:7}))},getTitlePosition:function(){var a=this.horiz,b=this.left,c=this.top,e=this.len,h=this.options.title,n=a?b:c,m=this.opposite,d=this.offset,f=h.x||0,p=h.y||0,y=this.chart.renderer.fontMetrics(h.style&&h.style.fontSize,this.axisTitle).f,e={low:n+(a?0:e),
	middle:n+e/2,high:n+(a?e:0)}[h.align],b=(a?c+this.height:b)+(a?1:-1)*(m?-1:1)*this.axisTitleMargin+(2===this.side?y:0);return{x:a?e+f:b+(m?this.width:0)+d+f,y:a?b+p-(m?this.height:0)+d:e+p}},renderMinorTick:function(a){var b=this.chart.hasRendered&&z(this.oldMin),c=this.minorTicks;c[a]||(c[a]=new I(this,a,"minor"));b&&c[a].isNew&&c[a].render(null,!0);c[a].render(null,!1,1)},renderTick:function(a,b){var c=this.isLinked,e=this.ticks,k=this.chart.hasRendered&&z(this.oldMin);if(!c||a>=this.min&&a<=this.max)e[a]||
	(e[a]=new I(this,a)),k&&e[a].isNew&&e[a].render(b,!0,.1),e[a].render(b)},render:function(){var a=this,c=a.chart,e=a.options,n=a.isLog,m=a.lin2log,d=a.isLinked,v=a.tickPositions,f=a.axisTitle,p=a.ticks,y=a.minorTicks,t=a.alternateBands,x=e.stackLabels,z=e.alternateGridColor,g=a.tickmarkOffset,E=a.axisLine,w=a.showAxis,l=A(c.renderer.globalAnimation),q,F;a.labelEdge.length=0;a.overlap=!1;b([p,y,t],function(a){for(var b in a)a[b].isActive=!1});if(a.hasData()||d)a.minorTickInterval&&!a.categories&&b(a.getMinorTickPositions(),
	function(b){a.renderMinorTick(b)}),v.length&&(b(v,function(b,c){a.renderTick(b,c)}),g&&(0===a.min||a.single)&&(p[-1]||(p[-1]=new I(a,-1,null,!0)),p[-1].render(-1))),z&&b(v,function(b,e){F=void 0!==v[e+1]?v[e+1]+g:a.max-g;0===e%2&&b<a.max&&F<=a.max+(c.polar?-g:g)&&(t[b]||(t[b]=new h(a)),q=b+g,t[b].options={from:n?m(q):q,to:n?m(F):F,color:z},t[b].render(),t[b].isActive=!0)}),a._addedPlotLB||(b((e.plotLines||[]).concat(e.plotBands||[]),function(b){a.addPlotBandOrLine(b)}),a._addedPlotLB=!0);b([p,y,t],
	function(a){var b,e,h=[],k=l.duration;for(b in a)a[b].isActive||(a[b].render(b,!1,0),a[b].isActive=!1,h.push(b));K(function(){for(e=h.length;e--;)a[h[e]]&&!a[h[e]].isActive&&(a[h[e]].destroy(),delete a[h[e]])},a!==t&&c.hasRendered&&k?k:0)});E&&(E[E.isPlaced?"animate":"attr"]({d:this.getLinePath(E.strokeWidth())}),E.isPlaced=!0,E[w?"show":"hide"](!0));f&&w&&(f[f.isNew?"attr":"animate"](a.getTitlePosition()),f.isNew=!1);x&&x.enabled&&a.renderStackTotals();a.isDirty=!1},redraw:function(){this.visible&&
	(this.render(),b(this.plotLinesAndBands,function(a){a.render()}));b(this.series,function(a){a.isDirty=!0})},keepProps:"extKey hcEvents names series userMax userMin".split(" "),destroy:function(a){var c=this,e=c.stacks,h,k=c.plotLinesAndBands,m;a||y(c);for(h in e)d(e[h]),e[h]=null;b([c.ticks,c.minorTicks,c.alternateBands],function(a){d(a)});if(k)for(a=k.length;a--;)k[a].destroy();b("stackTotalGroup axisLine axisTitle axisGroup gridGroup labelGroup cross".split(" "),function(a){c[a]&&(c[a]=c[a].destroy())});
	for(m in c)c.hasOwnProperty(m)&&-1===n(m,c.keepProps)&&delete c[m]},drawCrosshair:function(a,b){var c,e=this.crosshair,h=w(e.snap,!0),k,n=this.cross;a||(a=this.cross&&this.cross.e);this.crosshair&&!1!==(l(b)||!h)?(h?l(b)&&(k=this.isXAxis?b.plotX:this.len-b.plotY):k=a&&(this.horiz?a.chartX-this.pos:this.len-a.chartY+this.pos),l(k)&&(c=this.getPlotLinePath(b&&(this.isXAxis?b.x:w(b.stackY,b.y)),null,null,null,k)||null),l(c)?(b=this.categories&&!this.isRadial,n||(this.cross=n=this.chart.renderer.path().addClass("highcharts-crosshair highcharts-crosshair-"+
	(b?"category ":"thin ")+e.className).attr({zIndex:w(e.zIndex,2)}).add(),n.attr({stroke:e.color||(b?g("#ccd6eb").setOpacity(.25).get():"#cccccc"),"stroke-width":w(e.width,1)}),e.dashStyle&&n.attr({dashstyle:e.dashStyle})),n.show().attr({d:c}),b&&!e.width&&n.attr({"stroke-width":this.transA}),this.cross.e=a):this.hideCrosshair()):this.hideCrosshair()},hideCrosshair:function(){this.cross&&this.cross.hide()}};p(a.Axis.prototype,r)})(L);(function(a){var B=a.Axis,A=a.Date,H=a.dateFormat,G=a.defaultOptions,
	r=a.defined,g=a.each,f=a.extend,u=a.getMagnitude,l=a.getTZOffset,q=a.normalizeTickInterval,d=a.pick,b=a.timeUnits;B.prototype.getTimeTicks=function(a,q,t,m){var c=[],n={},p=G.global.useUTC,z,e=new A(q-l(q)),x=A.hcMakeTime,F=a.unitRange,w=a.count,h;if(r(q)){e[A.hcSetMilliseconds](F>=b.second?0:w*Math.floor(e.getMilliseconds()/w));if(F>=b.second)e[A.hcSetSeconds](F>=b.minute?0:w*Math.floor(e.getSeconds()/w));if(F>=b.minute)e[A.hcSetMinutes](F>=b.hour?0:w*Math.floor(e[A.hcGetMinutes]()/w));if(F>=b.hour)e[A.hcSetHours](F>=
	b.day?0:w*Math.floor(e[A.hcGetHours]()/w));if(F>=b.day)e[A.hcSetDate](F>=b.month?1:w*Math.floor(e[A.hcGetDate]()/w));F>=b.month&&(e[A.hcSetMonth](F>=b.year?0:w*Math.floor(e[A.hcGetMonth]()/w)),z=e[A.hcGetFullYear]());if(F>=b.year)e[A.hcSetFullYear](z-z%w);if(F===b.week)e[A.hcSetDate](e[A.hcGetDate]()-e[A.hcGetDay]()+d(m,1));z=e[A.hcGetFullYear]();m=e[A.hcGetMonth]();var y=e[A.hcGetDate](),J=e[A.hcGetHours]();if(A.hcTimezoneOffset||A.hcGetTimezoneOffset)h=(!p||!!A.hcGetTimezoneOffset)&&(t-q>4*b.month||
	l(q)!==l(t)),e=e.getTime(),e=new A(e+l(e));p=e.getTime();for(q=1;p<t;)c.push(p),p=F===b.year?x(z+q*w,0):F===b.month?x(z,m+q*w):!h||F!==b.day&&F!==b.week?h&&F===b.hour?x(z,m,y,J+q*w):p+F*w:x(z,m,y+q*w*(F===b.day?1:7)),q++;c.push(p);F<=b.hour&&1E4>c.length&&g(c,function(a){0===a%18E5&&"000000000"===H("%H%M%S%L",a)&&(n[a]="day")})}c.info=f(a,{higherRanks:n,totalRange:F*w});return c};B.prototype.normalizeTimeTickInterval=function(a,d){var f=d||[["millisecond",[1,2,5,10,20,25,50,100,200,500]],["second",
	[1,2,5,10,15,30]],["minute",[1,2,5,10,15,30]],["hour",[1,2,3,4,6,8,12]],["day",[1,2]],["week",[1,2]],["month",[1,2,3,4,6]],["year",null]];d=f[f.length-1];var m=b[d[0]],c=d[1],n;for(n=0;n<f.length&&!(d=f[n],m=b[d[0]],c=d[1],f[n+1]&&a<=(m*c[c.length-1]+b[f[n+1][0]])/2);n++);m===b.year&&a<5*m&&(c=[1,2,5]);a=q(a/m,c,"year"===d[0]?Math.max(u(a/m),1):1);return{unitRange:m,count:a,unitName:d[0]}}})(L);(function(a){var B=a.Axis,A=a.getMagnitude,H=a.map,G=a.normalizeTickInterval,r=a.pick;B.prototype.getLogTickPositions=
	function(a,f,u,l){var g=this.options,d=this.len,b=this.lin2log,p=this.log2lin,C=[];l||(this._minorAutoInterval=null);if(.5<=a)a=Math.round(a),C=this.getLinearTickPositions(a,f,u);else if(.08<=a)for(var d=Math.floor(f),t,m,c,n,E,g=.3<a?[1,2,4]:.15<a?[1,2,4,6,8]:[1,2,3,4,5,6,7,8,9];d<u+1&&!E;d++)for(m=g.length,t=0;t<m&&!E;t++)c=p(b(d)*g[t]),c>f&&(!l||n<=u)&&void 0!==n&&C.push(n),n>u&&(E=!0),n=c;else f=b(f),u=b(u),a=g[l?"minorTickInterval":"tickInterval"],a=r("auto"===a?null:a,this._minorAutoInterval,
	g.tickPixelInterval/(l?5:1)*(u-f)/((l?d/this.tickPositions.length:d)||1)),a=G(a,null,A(a)),C=H(this.getLinearTickPositions(a,f,u),p),l||(this._minorAutoInterval=a/5);l||(this.tickInterval=a);return C};B.prototype.log2lin=function(a){return Math.log(a)/Math.LN10};B.prototype.lin2log=function(a){return Math.pow(10,a)}})(L);(function(a){var B=a.dateFormat,A=a.each,H=a.extend,G=a.format,r=a.isNumber,g=a.map,f=a.merge,u=a.pick,l=a.splat,q=a.syncTimeout,d=a.timeUnits;a.Tooltip=function(){this.init.apply(this,
	arguments)};a.Tooltip.prototype={init:function(a,d){this.chart=a;this.options=d;this.crosshairs=[];this.now={x:0,y:0};this.isHidden=!0;this.split=d.split&&!a.inverted;this.shared=d.shared||this.split},cleanSplit:function(a){A(this.chart.series,function(b){var d=b&&b.tt;d&&(!d.isActive||a?b.tt=d.destroy():d.isActive=!1)})},getLabel:function(){var a=this.chart.renderer,d=this.options;this.label||(this.split?this.label=a.g("tooltip"):(this.label=a.label("",0,0,d.shape||"callout",null,null,d.useHTML,
	null,"tooltip").attr({padding:d.padding,r:d.borderRadius}),this.label.attr({fill:d.backgroundColor,"stroke-width":d.borderWidth}).css(d.style).shadow(d.shadow)),this.label.attr({zIndex:8}).add());return this.label},update:function(a){this.destroy();this.init(this.chart,f(!0,this.options,a))},destroy:function(){this.label&&(this.label=this.label.destroy());this.split&&this.tt&&(this.cleanSplit(this.chart,!0),this.tt=this.tt.destroy());clearTimeout(this.hideTimer);clearTimeout(this.tooltipTimeout)},
	move:function(a,d,f,t){var b=this,c=b.now,n=!1!==b.options.animation&&!b.isHidden&&(1<Math.abs(a-c.x)||1<Math.abs(d-c.y)),p=b.followPointer||1<b.len;H(c,{x:n?(2*c.x+a)/3:a,y:n?(c.y+d)/2:d,anchorX:p?void 0:n?(2*c.anchorX+f)/3:f,anchorY:p?void 0:n?(c.anchorY+t)/2:t});b.getLabel().attr(c);n&&(clearTimeout(this.tooltipTimeout),this.tooltipTimeout=setTimeout(function(){b&&b.move(a,d,f,t)},32))},hide:function(a){var b=this;clearTimeout(this.hideTimer);a=u(a,this.options.hideDelay,500);this.isHidden||(this.hideTimer=
	q(function(){b.getLabel()[a?"fadeOut":"hide"]();b.isHidden=!0},a))},getAnchor:function(a,d){var b,f=this.chart,m=f.inverted,c=f.plotTop,n=f.plotLeft,p=0,z=0,e,x;a=l(a);b=a[0].tooltipPos;this.followPointer&&d&&(void 0===d.chartX&&(d=f.pointer.normalize(d)),b=[d.chartX-f.plotLeft,d.chartY-c]);b||(A(a,function(a){e=a.series.yAxis;x=a.series.xAxis;p+=a.plotX+(!m&&x?x.left-n:0);z+=(a.plotLow?(a.plotLow+a.plotHigh)/2:a.plotY)+(!m&&e?e.top-c:0)}),p/=a.length,z/=a.length,b=[m?f.plotWidth-z:p,this.shared&&
	!m&&1<a.length&&d?d.chartY-c:m?f.plotHeight-p:z]);return g(b,Math.round)},getPosition:function(a,d,f){var b=this.chart,m=this.distance,c={},n=f.h||0,p,z=["y",b.chartHeight,d,f.plotY+b.plotTop,b.plotTop,b.plotTop+b.plotHeight],e=["x",b.chartWidth,a,f.plotX+b.plotLeft,b.plotLeft,b.plotLeft+b.plotWidth],x=!this.followPointer&&u(f.ttBelow,!b.inverted===!!f.negative),g=function(a,b,e,h,d,f){var k=e<h-m,y=h+m+e<b,p=h-m-e;h+=m;if(x&&y)c[a]=h;else if(!x&&k)c[a]=p;else if(k)c[a]=Math.min(f-e,0>p-n?p:p-n);
	else if(y)c[a]=Math.max(d,h+n+e>b?h:h+n);else return!1},w=function(a,b,e,h){var k;h<m||h>b-m?k=!1:c[a]=h<e/2?1:h>b-e/2?b-e-2:h-e/2;return k},h=function(a){var b=z;z=e;e=b;p=a},y=function(){!1!==g.apply(0,z)?!1!==w.apply(0,e)||p||(h(!0),y()):p?c.x=c.y=0:(h(!0),y())};(b.inverted||1<this.len)&&h();y();return c},defaultFormatter:function(a){var b=this.points||l(this),d;d=[a.tooltipFooterHeaderFormatter(b[0])];d=d.concat(a.bodyFormatter(b));d.push(a.tooltipFooterHeaderFormatter(b[0],!0));return d},refresh:function(a,
	d){var b=this.chart,f,m=this.options,c,n,p={},z=[];f=m.formatter||this.defaultFormatter;var p=b.hoverPoints,e=this.shared;clearTimeout(this.hideTimer);this.followPointer=l(a)[0].series.tooltipOptions.followPointer;n=this.getAnchor(a,d);d=n[0];c=n[1];!e||a.series&&a.series.noSharedTooltip?p=a.getLabelConfig():(b.hoverPoints=a,p&&A(p,function(a){a.setState()}),A(a,function(a){a.setState("hover");z.push(a.getLabelConfig())}),p={x:a[0].category,y:a[0].y},p.points=z,a=a[0]);this.len=z.length;p=f.call(p,
	this);e=a.series;this.distance=u(e.tooltipOptions.distance,16);!1===p?this.hide():(f=this.getLabel(),this.isHidden&&f.attr({opacity:1}).show(),this.split?this.renderSplit(p,b.hoverPoints):(f.attr({text:p&&p.join?p.join(""):p}),f.removeClass(/highcharts-color-[\d]+/g).addClass("highcharts-color-"+u(a.colorIndex,e.colorIndex)),f.attr({stroke:m.borderColor||a.color||e.color||"#666666"}),this.updatePosition({plotX:d,plotY:c,negative:a.negative,ttBelow:a.ttBelow,h:n[2]||0})),this.isHidden=!1)},renderSplit:function(b,
	d){var f=this,p=[],m=this.chart,c=m.renderer,n=!0,g=this.options,z,e=this.getLabel();A(b.slice(0,d.length+1),function(a,b){b=d[b-1]||{isHeader:!0,plotX:d[0].plotX};var x=b.series||f,h=x.tt,y=b.series||{},t="highcharts-color-"+u(b.colorIndex,y.colorIndex,"none");h||(x.tt=h=c.label(null,null,null,"callout").addClass("highcharts-tooltip-box "+t).attr({padding:g.padding,r:g.borderRadius,fill:g.backgroundColor,stroke:b.color||y.color||"#333333","stroke-width":g.borderWidth}).add(e));h.isActive=!0;h.attr({text:a});
	h.css(g.style);a=h.getBBox();y=a.width+h.strokeWidth();b.isHeader?(z=a.height,y=Math.max(0,Math.min(b.plotX+m.plotLeft-y/2,m.chartWidth-y))):y=b.plotX+m.plotLeft-u(g.distance,16)-y;0>y&&(n=!1);a=(b.series&&b.series.yAxis&&b.series.yAxis.pos)+(b.plotY||0);a-=m.plotTop;p.push({target:b.isHeader?m.plotHeight+z:a,rank:b.isHeader?1:0,size:x.tt.getBBox().height+1,point:b,x:y,tt:h})});this.cleanSplit();a.distribute(p,m.plotHeight+z);A(p,function(a){var b=a.point,c=b.series;a.tt.attr({visibility:void 0===
	a.pos?"hidden":"inherit",x:n||b.isHeader?a.x:b.plotX+m.plotLeft+u(g.distance,16),y:a.pos+m.plotTop,anchorX:b.isHeader?b.plotX+m.plotLeft:b.plotX+c.xAxis.pos,anchorY:b.isHeader?a.pos+m.plotTop-15:b.plotY+c.yAxis.pos})})},updatePosition:function(a){var b=this.chart,d=this.getLabel(),d=(this.options.positioner||this.getPosition).call(this,d.width,d.height,a);this.move(Math.round(d.x),Math.round(d.y||0),a.plotX+b.plotLeft,a.plotY+b.plotTop)},getDateFormat:function(a,f,g,t){var b=B("%m-%d %H:%M:%S.%L",
	f),c,n,p={millisecond:15,second:12,minute:9,hour:6,day:3},z="millisecond";for(n in d){if(a===d.week&&+B("%w",f)===g&&"00:00:00.000"===b.substr(6)){n="week";break}if(d[n]>a){n=z;break}if(p[n]&&b.substr(p[n])!=="01-01 00:00:00.000".substr(p[n]))break;"week"!==n&&(z=n)}n&&(c=t[n]);return c},getXDateFormat:function(a,d,f){d=d.dateTimeLabelFormats;var b=f&&f.closestPointRange;return(b?this.getDateFormat(b,a.x,f.options.startOfWeek,d):d.day)||d.year},tooltipFooterHeaderFormatter:function(a,d){var b=d?"footer":
	"header";d=a.series;var f=d.tooltipOptions,m=f.xDateFormat,c=d.xAxis,n=c&&"datetime"===c.options.type&&r(a.key),b=f[b+"Format"];n&&!m&&(m=this.getXDateFormat(a,f,c));n&&m&&(b=b.replace("{point.key}","{point.key:"+m+"}"));return G(b,{point:a,series:d})},bodyFormatter:function(a){return g(a,function(a){var b=a.series.tooltipOptions;return(b.pointFormatter||a.point.tooltipFormatter).call(a.point,b.pointFormat)})}}})(L);(function(a){var B=a.addEvent,A=a.attr,H=a.charts,G=a.color,r=a.css,g=a.defined,f=
	a.doc,u=a.each,l=a.extend,q=a.fireEvent,d=a.offset,b=a.pick,p=a.removeEvent,C=a.splat,t=a.Tooltip,m=a.win;a.Pointer=function(a,b){this.init(a,b)};a.Pointer.prototype={init:function(a,d){this.options=d;this.chart=a;this.runChartClick=d.chart.events&&!!d.chart.events.click;this.pinchDown=[];this.lastValidTouch={};t&&d.tooltip.enabled&&(a.tooltip=new t(a,d.tooltip),this.followTouchMove=b(d.tooltip.followTouchMove,!0));this.setDOMEvents()},zoomOption:function(a){var c=this.chart,d=c.options.chart,m=d.zoomType||
	"",c=c.inverted;/touch/.test(a.type)&&(m=b(d.pinchType,m));this.zoomX=a=/x/.test(m);this.zoomY=m=/y/.test(m);this.zoomHor=a&&!c||m&&c;this.zoomVert=m&&!c||a&&c;this.hasZoom=a||m},normalize:function(a,b){var c,n;a=a||m.event;a.target||(a.target=a.srcElement);n=a.touches?a.touches.length?a.touches.item(0):a.changedTouches[0]:a;b||(this.chartPosition=b=d(this.chart.container));void 0===n.pageX?(c=Math.max(a.x,a.clientX-b.left),b=a.y):(c=n.pageX-b.left,b=n.pageY-b.top);return l(a,{chartX:Math.round(c),
	chartY:Math.round(b)})},getCoordinates:function(a){var b={xAxis:[],yAxis:[]};u(this.chart.axes,function(c){b[c.isXAxis?"xAxis":"yAxis"].push({axis:c,value:c.toValue(a[c.horiz?"chartX":"chartY"])})});return b},runPointActions:function(c){var d=this.chart,m=d.series,p=d.tooltip,e=p?p.shared:!1,g=!0,t=d.hoverPoint,w=d.hoverSeries,h,y,l,q=[],r;if(!e&&!w)for(h=0;h<m.length;h++)if(m[h].directTouch||!m[h].options.stickyTracking)m=[];w&&(e?w.noSharedTooltip:w.directTouch)&&t?q=[t]:(e||!w||w.options.stickyTracking||
	(m=[w]),u(m,function(a){y=a.noSharedTooltip&&e;l=!e&&a.directTouch;a.visible&&!y&&!l&&b(a.options.enableMouseTracking,!0)&&(r=a.searchPoint(c,!y&&1===a.kdDimensions))&&r.series&&q.push(r)}),q.sort(function(a,b){var c=a.distX-b.distX,h=a.dist-b.dist,k=(b.series.group&&b.series.group.zIndex)-(a.series.group&&a.series.group.zIndex);return 0!==c&&e?c:0!==h?h:0!==k?k:a.series.index>b.series.index?-1:1}));if(e)for(h=q.length;h--;)(q[h].x!==q[0].x||q[h].series.noSharedTooltip)&&q.splice(h,1);if(q[0]&&(q[0]!==
	this.prevKDPoint||p&&p.isHidden)){if(e&&!q[0].series.noSharedTooltip){for(h=0;h<q.length;h++)q[h].onMouseOver(c,q[h]!==(w&&w.directTouch&&t||q[0]));q.length&&p&&p.refresh(q.sort(function(a,b){return a.series.index-b.series.index}),c)}else if(p&&p.refresh(q[0],c),!w||!w.directTouch)q[0].onMouseOver(c);this.prevKDPoint=q[0];g=!1}g&&(m=w&&w.tooltipOptions.followPointer,p&&m&&!p.isHidden&&(m=p.getAnchor([{}],c),p.updatePosition({plotX:m[0],plotY:m[1]})));this.unDocMouseMove||(this.unDocMouseMove=B(f,
	"mousemove",function(b){if(H[a.hoverChartIndex])H[a.hoverChartIndex].pointer.onDocumentMouseMove(b)}));u(e?q:[b(t,q[0])],function(a){u(d.axes,function(b){(!a||a.series&&a.series[b.coll]===b)&&b.drawCrosshair(c,a)})})},reset:function(a,b){var c=this.chart,d=c.hoverSeries,e=c.hoverPoint,n=c.hoverPoints,m=c.tooltip,f=m&&m.shared?n:e;a&&f&&u(C(f),function(b){b.series.isCartesian&&void 0===b.plotX&&(a=!1)});if(a)m&&f&&(m.refresh(f),e&&(e.setState(e.state,!0),u(c.axes,function(a){a.crosshair&&a.drawCrosshair(null,
	e)})));else{if(e)e.onMouseOut();n&&u(n,function(a){a.setState()});if(d)d.onMouseOut();m&&m.hide(b);this.unDocMouseMove&&(this.unDocMouseMove=this.unDocMouseMove());u(c.axes,function(a){a.hideCrosshair()});this.hoverX=this.prevKDPoint=c.hoverPoints=c.hoverPoint=null}},scaleGroups:function(a,b){var c=this.chart,d;u(c.series,function(e){d=a||e.getPlotBox();e.xAxis&&e.xAxis.zoomEnabled&&e.group&&(e.group.attr(d),e.markerGroup&&(e.markerGroup.attr(d),e.markerGroup.clip(b?c.clipRect:null)),e.dataLabelsGroup&&
	e.dataLabelsGroup.attr(d))});c.clipRect.attr(b||c.clipBox)},dragStart:function(a){var b=this.chart;b.mouseIsDown=a.type;b.cancelClick=!1;b.mouseDownX=this.mouseDownX=a.chartX;b.mouseDownY=this.mouseDownY=a.chartY},drag:function(a){var b=this.chart,c=b.options.chart,d=a.chartX,e=a.chartY,m=this.zoomHor,f=this.zoomVert,p=b.plotLeft,h=b.plotTop,y=b.plotWidth,g=b.plotHeight,t,q=this.selectionMarker,k=this.mouseDownX,l=this.mouseDownY,r=c.panKey&&a[c.panKey+"Key"];q&&q.touch||(d<p?d=p:d>p+y&&(d=p+y),e<
	h?e=h:e>h+g&&(e=h+g),this.hasDragged=Math.sqrt(Math.pow(k-d,2)+Math.pow(l-e,2)),10<this.hasDragged&&(t=b.isInsidePlot(k-p,l-h),b.hasCartesianSeries&&(this.zoomX||this.zoomY)&&t&&!r&&!q&&(this.selectionMarker=q=b.renderer.rect(p,h,m?1:y,f?1:g,0).attr({fill:c.selectionMarkerFill||G("#335cad").setOpacity(.25).get(),"class":"highcharts-selection-marker",zIndex:7}).add()),q&&m&&(d-=k,q.attr({width:Math.abs(d),x:(0<d?0:d)+k})),q&&f&&(d=e-l,q.attr({height:Math.abs(d),y:(0<d?0:d)+l})),t&&!q&&c.panning&&b.pan(a,
	c.panning)))},drop:function(a){var b=this,c=this.chart,d=this.hasPinched;if(this.selectionMarker){var e={originalEvent:a,xAxis:[],yAxis:[]},m=this.selectionMarker,f=m.attr?m.attr("x"):m.x,p=m.attr?m.attr("y"):m.y,h=m.attr?m.attr("width"):m.width,y=m.attr?m.attr("height"):m.height,t;if(this.hasDragged||d)u(c.axes,function(c){if(c.zoomEnabled&&g(c.min)&&(d||b[{xAxis:"zoomX",yAxis:"zoomY"}[c.coll]])){var m=c.horiz,k="touchend"===a.type?c.minPixelPadding:0,n=c.toValue((m?f:p)+k),m=c.toValue((m?f+h:p+
	y)-k);e[c.coll].push({axis:c,min:Math.min(n,m),max:Math.max(n,m)});t=!0}}),t&&q(c,"selection",e,function(a){c.zoom(l(a,d?{animation:!1}:null))});this.selectionMarker=this.selectionMarker.destroy();d&&this.scaleGroups()}c&&(r(c.container,{cursor:c._cursor}),c.cancelClick=10<this.hasDragged,c.mouseIsDown=this.hasDragged=this.hasPinched=!1,this.pinchDown=[])},onContainerMouseDown:function(a){a=this.normalize(a);this.zoomOption(a);a.preventDefault&&a.preventDefault();this.dragStart(a)},onDocumentMouseUp:function(b){H[a.hoverChartIndex]&&
	H[a.hoverChartIndex].pointer.drop(b)},onDocumentMouseMove:function(a){var b=this.chart,c=this.chartPosition;a=this.normalize(a,c);!c||this.inClass(a.target,"highcharts-tracker")||b.isInsidePlot(a.chartX-b.plotLeft,a.chartY-b.plotTop)||this.reset()},onContainerMouseLeave:function(b){var c=H[a.hoverChartIndex];c&&(b.relatedTarget||b.toElement)&&(c.pointer.reset(),c.pointer.chartPosition=null)},onContainerMouseMove:function(b){var c=this.chart;g(a.hoverChartIndex)&&H[a.hoverChartIndex]&&H[a.hoverChartIndex].mouseIsDown||
	(a.hoverChartIndex=c.index);b=this.normalize(b);b.returnValue=!1;"mousedown"===c.mouseIsDown&&this.drag(b);!this.inClass(b.target,"highcharts-tracker")&&!c.isInsidePlot(b.chartX-c.plotLeft,b.chartY-c.plotTop)||c.openMenu||this.runPointActions(b)},inClass:function(a,b){for(var c;a;){if(c=A(a,"class")){if(-1!==c.indexOf(b))return!0;if(-1!==c.indexOf("highcharts-container"))return!1}a=a.parentNode}},onTrackerMouseOut:function(a){var b=this.chart.hoverSeries;a=a.relatedTarget||a.toElement;if(!(!b||!a||
	b.options.stickyTracking||this.inClass(a,"highcharts-tooltip")||this.inClass(a,"highcharts-series-"+b.index)&&this.inClass(a,"highcharts-tracker")))b.onMouseOut()},onContainerClick:function(a){var b=this.chart,c=b.hoverPoint,d=b.plotLeft,e=b.plotTop;a=this.normalize(a);b.cancelClick||(c&&this.inClass(a.target,"highcharts-tracker")?(q(c.series,"click",l(a,{point:c})),b.hoverPoint&&c.firePointEvent("click",a)):(l(a,this.getCoordinates(a)),b.isInsidePlot(a.chartX-d,a.chartY-e)&&q(b,"click",a)))},setDOMEvents:function(){var b=
	this,d=b.chart.container;d.onmousedown=function(a){b.onContainerMouseDown(a)};d.onmousemove=function(a){b.onContainerMouseMove(a)};d.onclick=function(a){b.onContainerClick(a)};B(d,"mouseleave",b.onContainerMouseLeave);1===a.chartCount&&B(f,"mouseup",b.onDocumentMouseUp);a.hasTouch&&(d.ontouchstart=function(a){b.onContainerTouchStart(a)},d.ontouchmove=function(a){b.onContainerTouchMove(a)},1===a.chartCount&&B(f,"touchend",b.onDocumentTouchEnd))},destroy:function(){var b;p(this.chart.container,"mouseleave",
	this.onContainerMouseLeave);a.chartCount||(p(f,"mouseup",this.onDocumentMouseUp),p(f,"touchend",this.onDocumentTouchEnd));clearInterval(this.tooltipTimeout);for(b in this)this[b]=null}}})(L);(function(a){var B=a.charts,A=a.each,H=a.extend,G=a.map,r=a.noop,g=a.pick;H(a.Pointer.prototype,{pinchTranslate:function(a,g,l,q,d,b){this.zoomHor&&this.pinchTranslateDirection(!0,a,g,l,q,d,b);this.zoomVert&&this.pinchTranslateDirection(!1,a,g,l,q,d,b)},pinchTranslateDirection:function(a,g,l,q,d,b,p,r){var f=
	this.chart,m=a?"x":"y",c=a?"X":"Y",n="chart"+c,E=a?"width":"height",z=f["plot"+(a?"Left":"Top")],e,x,F=r||1,w=f.inverted,h=f.bounds[a?"h":"v"],y=1===g.length,J=g[0][n],u=l[0][n],I=!y&&g[1][n],k=!y&&l[1][n],D;l=function(){!y&&20<Math.abs(J-I)&&(F=r||Math.abs(u-k)/Math.abs(J-I));x=(z-u)/F+J;e=f["plot"+(a?"Width":"Height")]/F};l();g=x;g<h.min?(g=h.min,D=!0):g+e>h.max&&(g=h.max-e,D=!0);D?(u-=.8*(u-p[m][0]),y||(k-=.8*(k-p[m][1])),l()):p[m]=[u,k];w||(b[m]=x-z,b[E]=e);b=w?1/F:F;d[E]=e;d[m]=g;q[w?a?"scaleY":
	"scaleX":"scale"+c]=F;q["translate"+c]=b*z+(u-b*J)},pinch:function(a){var f=this,l=f.chart,q=f.pinchDown,d=a.touches,b=d.length,p=f.lastValidTouch,C=f.hasZoom,t=f.selectionMarker,m={},c=1===b&&(f.inClass(a.target,"highcharts-tracker")&&l.runTrackerClick||f.runChartClick),n={};1<b&&(f.initiated=!0);C&&f.initiated&&!c&&a.preventDefault();G(d,function(a){return f.normalize(a)});"touchstart"===a.type?(A(d,function(a,b){q[b]={chartX:a.chartX,chartY:a.chartY}}),p.x=[q[0].chartX,q[1]&&q[1].chartX],p.y=[q[0].chartY,
	q[1]&&q[1].chartY],A(l.axes,function(a){if(a.zoomEnabled){var b=l.bounds[a.horiz?"h":"v"],c=a.minPixelPadding,d=a.toPixels(g(a.options.min,a.dataMin)),m=a.toPixels(g(a.options.max,a.dataMax)),f=Math.max(d,m);b.min=Math.min(a.pos,Math.min(d,m)-c);b.max=Math.max(a.pos+a.len,f+c)}}),f.res=!0):f.followTouchMove&&1===b?this.runPointActions(f.normalize(a)):q.length&&(t||(f.selectionMarker=t=H({destroy:r,touch:!0},l.plotBox)),f.pinchTranslate(q,d,m,t,n,p),f.hasPinched=C,f.scaleGroups(m,n),f.res&&(f.res=
	!1,this.reset(!1,0)))},touch:function(f,r){var l=this.chart,q,d;if(l.index!==a.hoverChartIndex)this.onContainerMouseLeave({relatedTarget:!0});a.hoverChartIndex=l.index;1===f.touches.length?(f=this.normalize(f),(d=l.isInsidePlot(f.chartX-l.plotLeft,f.chartY-l.plotTop))&&!l.openMenu?(r&&this.runPointActions(f),"touchmove"===f.type&&(r=this.pinchDown,q=r[0]?4<=Math.sqrt(Math.pow(r[0].chartX-f.chartX,2)+Math.pow(r[0].chartY-f.chartY,2)):!1),g(q,!0)&&this.pinch(f)):r&&this.reset()):2===f.touches.length&&
	this.pinch(f)},onContainerTouchStart:function(a){this.zoomOption(a);this.touch(a,!0)},onContainerTouchMove:function(a){this.touch(a)},onDocumentTouchEnd:function(f){B[a.hoverChartIndex]&&B[a.hoverChartIndex].pointer.drop(f)}})})(L);(function(a){var B=a.addEvent,A=a.charts,H=a.css,G=a.doc,r=a.extend,g=a.noop,f=a.Pointer,u=a.removeEvent,l=a.win,q=a.wrap;if(l.PointerEvent||l.MSPointerEvent){var d={},b=!!l.PointerEvent,p=function(){var a,b=[];b.item=function(a){return this[a]};for(a in d)d.hasOwnProperty(a)&&
	b.push({pageX:d[a].pageX,pageY:d[a].pageY,target:d[a].target});return b},C=function(b,d,c,f){"touch"!==b.pointerType&&b.pointerType!==b.MSPOINTER_TYPE_TOUCH||!A[a.hoverChartIndex]||(f(b),f=A[a.hoverChartIndex].pointer,f[d]({type:c,target:b.currentTarget,preventDefault:g,touches:p()}))};r(f.prototype,{onContainerPointerDown:function(a){C(a,"onContainerTouchStart","touchstart",function(a){d[a.pointerId]={pageX:a.pageX,pageY:a.pageY,target:a.currentTarget}})},onContainerPointerMove:function(a){C(a,"onContainerTouchMove",
	"touchmove",function(a){d[a.pointerId]={pageX:a.pageX,pageY:a.pageY};d[a.pointerId].target||(d[a.pointerId].target=a.currentTarget)})},onDocumentPointerUp:function(a){C(a,"onDocumentTouchEnd","touchend",function(a){delete d[a.pointerId]})},batchMSEvents:function(a){a(this.chart.container,b?"pointerdown":"MSPointerDown",this.onContainerPointerDown);a(this.chart.container,b?"pointermove":"MSPointerMove",this.onContainerPointerMove);a(G,b?"pointerup":"MSPointerUp",this.onDocumentPointerUp)}});q(f.prototype,
	"init",function(a,b,c){a.call(this,b,c);this.hasZoom&&H(b.container,{"-ms-touch-action":"none","touch-action":"none"})});q(f.prototype,"setDOMEvents",function(a){a.apply(this);(this.hasZoom||this.followTouchMove)&&this.batchMSEvents(B)});q(f.prototype,"destroy",function(a){this.batchMSEvents(u);a.call(this)})}})(L);(function(a){var B,A=a.addEvent,H=a.css,G=a.discardElement,r=a.defined,g=a.each,f=a.extend,u=a.isFirefox,l=a.marginNames,q=a.merge,d=a.pick,b=a.setAnimation,p=a.stableSort,C=a.win,t=a.wrap;
	B=a.Legend=function(a,b){this.init(a,b)};B.prototype={init:function(a,b){this.chart=a;this.setOptions(b);b.enabled&&(this.render(),A(this.chart,"endResize",function(){this.legend.positionCheckboxes()}))},setOptions:function(a){var b=d(a.padding,8);this.options=a;this.itemStyle=a.itemStyle;this.itemHiddenStyle=q(this.itemStyle,a.itemHiddenStyle);this.itemMarginTop=a.itemMarginTop||0;this.initialItemX=this.padding=b;this.initialItemY=b-5;this.itemHeight=this.maxItemWidth=0;this.symbolWidth=d(a.symbolWidth,
	16);this.pages=[]},update:function(a,b){var c=this.chart;this.setOptions(q(!0,this.options,a));this.destroy();c.isDirtyLegend=c.isDirtyBox=!0;d(b,!0)&&c.redraw()},colorizeItem:function(a,b){a.legendGroup[b?"removeClass":"addClass"]("highcharts-legend-item-hidden");var c=this.options,d=a.legendItem,m=a.legendLine,e=a.legendSymbol,f=this.itemHiddenStyle.color,c=b?c.itemStyle.color:f,p=b?a.color||f:f,g=a.options&&a.options.marker,h={fill:p},y;d&&d.css({fill:c,color:c});m&&m.attr({stroke:p});if(e){if(g&&
	e.isMarker&&(h=a.pointAttribs(),!b))for(y in h)h[y]=f;e.attr(h)}},positionItem:function(a){var b=this.options,d=b.symbolPadding,b=!b.rtl,m=a._legendItemPos,f=m[0],m=m[1],e=a.checkbox;(a=a.legendGroup)&&a.element&&a.translate(b?f:this.legendWidth-f-2*d-4,m);e&&(e.x=f,e.y=m)},destroyItem:function(a){var b=a.checkbox;g(["legendItem","legendLine","legendSymbol","legendGroup"],function(b){a[b]&&(a[b]=a[b].destroy())});b&&G(a.checkbox)},destroy:function(){function a(a){this[a]&&(this[a]=this[a].destroy())}
	g(this.getAllItems(),function(b){g(["legendItem","legendGroup"],a,b)});g(["box","title","group"],a,this);this.display=null},positionCheckboxes:function(a){var b=this.group&&this.group.alignAttr,d,m=this.clipHeight||this.legendHeight,f=this.titleHeight;b&&(d=b.translateY,g(this.allItems,function(c){var e=c.checkbox,n;e&&(n=d+f+e.y+(a||0)+3,H(e,{left:b.translateX+c.checkboxOffset+e.x-20+"px",top:n+"px",display:n>d-6&&n<d+m-6?"":"none"}))}))},renderTitle:function(){var a=this.padding,b=this.options.title,
	d=0;b.text&&(this.title||(this.title=this.chart.renderer.label(b.text,a-3,a-4,null,null,null,null,null,"legend-title").attr({zIndex:1}).css(b.style).add(this.group)),a=this.title.getBBox(),d=a.height,this.offsetWidth=a.width,this.contentGroup.attr({translateY:d}));this.titleHeight=d},setText:function(b){var c=this.options;b.legendItem.attr({text:c.labelFormat?a.format(c.labelFormat,b):c.labelFormatter.call(b)})},renderItem:function(a){var b=this.chart,f=b.renderer,m=this.options,p="horizontal"===
	m.layout,e=this.symbolWidth,g=m.symbolPadding,l=this.itemStyle,t=this.itemHiddenStyle,h=this.padding,y=p?d(m.itemDistance,20):0,J=!m.rtl,r=m.width,I=m.itemMarginBottom||0,k=this.itemMarginTop,u=this.initialItemX,C=a.legendItem,N=!a.series,A=!N&&a.series.drawLegendSymbol?a.series:a,B=A.options,B=this.createCheckboxForItem&&B&&B.showCheckbox,v=m.useHTML;C||(a.legendGroup=f.g("legend-item").addClass("highcharts-"+A.type+"-series highcharts-color-"+a.colorIndex+(a.options.className?" "+a.options.className:
	"")+(N?" highcharts-series-"+a.index:"")).attr({zIndex:1}).add(this.scrollGroup),a.legendItem=C=f.text("",J?e+g:-g,this.baseline||0,v).css(q(a.visible?l:t)).attr({align:J?"left":"right",zIndex:2}).add(a.legendGroup),this.baseline||(l=l.fontSize,this.fontMetrics=f.fontMetrics(l,C),this.baseline=this.fontMetrics.f+3+k,C.attr("y",this.baseline)),this.symbolHeight=m.symbolHeight||this.fontMetrics.f,A.drawLegendSymbol(this,a),this.setItemEvents&&this.setItemEvents(a,C,v),B&&this.createCheckboxForItem(a));
	this.colorizeItem(a,a.visible);this.setText(a);f=C.getBBox();e=a.checkboxOffset=m.itemWidth||a.legendItemWidth||e+g+f.width+y+(B?20:0);this.itemHeight=g=Math.round(a.legendItemHeight||f.height);p&&this.itemX-u+e>(r||b.chartWidth-2*h-u-m.x)&&(this.itemX=u,this.itemY+=k+this.lastLineHeight+I,this.lastLineHeight=0);this.maxItemWidth=Math.max(this.maxItemWidth,e);this.lastItemY=k+this.itemY+I;this.lastLineHeight=Math.max(g,this.lastLineHeight);a._legendItemPos=[this.itemX,this.itemY];p?this.itemX+=e:
	(this.itemY+=k+g+I,this.lastLineHeight=g);this.offsetWidth=r||Math.max((p?this.itemX-u-y:e)+h,this.offsetWidth)},getAllItems:function(){var a=[];g(this.chart.series,function(b){var c=b&&b.options;b&&d(c.showInLegend,r(c.linkedTo)?!1:void 0,!0)&&(a=a.concat(b.legendItems||("point"===c.legendType?b.data:b)))});return a},adjustMargins:function(a,b){var c=this.chart,f=this.options,m=f.align.charAt(0)+f.verticalAlign.charAt(0)+f.layout.charAt(0);f.floating||g([/(lth|ct|rth)/,/(rtv|rm|rbv)/,/(rbh|cb|lbh)/,
	/(lbv|lm|ltv)/],function(e,n){e.test(m)&&!r(a[n])&&(c[l[n]]=Math.max(c[l[n]],c.legend[(n+1)%2?"legendHeight":"legendWidth"]+[1,-1,-1,1][n]*f[n%2?"x":"y"]+d(f.margin,12)+b[n]))})},render:function(){var a=this,b=a.chart,d=b.renderer,q=a.group,l,e,t,r,w=a.box,h=a.options,y=a.padding;a.itemX=a.initialItemX;a.itemY=a.initialItemY;a.offsetWidth=0;a.lastItemY=0;q||(a.group=q=d.g("legend").attr({zIndex:7}).add(),a.contentGroup=d.g().attr({zIndex:1}).add(q),a.scrollGroup=d.g().add(a.contentGroup));a.renderTitle();
	l=a.getAllItems();p(l,function(a,b){return(a.options&&a.options.legendIndex||0)-(b.options&&b.options.legendIndex||0)});h.reversed&&l.reverse();a.allItems=l;a.display=e=!!l.length;a.lastLineHeight=0;g(l,function(b){a.renderItem(b)});t=(h.width||a.offsetWidth)+y;r=a.lastItemY+a.lastLineHeight+a.titleHeight;r=a.handleOverflow(r);r+=y;w||(a.box=w=d.rect().addClass("highcharts-legend-box").attr({r:h.borderRadius}).add(q),w.isNew=!0);w.attr({stroke:h.borderColor,"stroke-width":h.borderWidth||0,fill:h.backgroundColor||
	"none"}).shadow(h.shadow);0<t&&0<r&&(w[w.isNew?"attr":"animate"](w.crisp({x:0,y:0,width:t,height:r},w.strokeWidth())),w.isNew=!1);w[e?"show":"hide"]();a.legendWidth=t;a.legendHeight=r;g(l,function(b){a.positionItem(b)});e&&q.align(f({width:t,height:r},h),!0,"spacingBox");b.isResizing||this.positionCheckboxes()},handleOverflow:function(a){var b=this,f=this.chart,m=f.renderer,p=this.options,e=p.y,f=f.spacingBox.height+("top"===p.verticalAlign?-e:e)-this.padding,e=p.maxHeight,q,l=this.clipRect,t=p.navigation,
	h=d(t.animation,!0),y=t.arrowSize||12,r=this.nav,u=this.pages,I=this.padding,k,D=this.allItems,C=function(a){a?l.attr({height:a}):l&&(b.clipRect=l.destroy(),b.contentGroup.clip());b.contentGroup.div&&(b.contentGroup.div.style.clip=a?"rect("+I+"px,9999px,"+(I+a)+"px,0)":"auto")};"horizontal"!==p.layout||"middle"===p.verticalAlign||p.floating||(f/=2);e&&(f=Math.min(f,e));u.length=0;a>f&&!1!==t.enabled?(this.clipHeight=q=Math.max(f-20-this.titleHeight-I,0),this.currentPage=d(this.currentPage,1),this.fullHeight=
	a,g(D,function(a,b){var c=a._legendItemPos[1];a=Math.round(a.legendItem.getBBox().height);var e=u.length;if(!e||c-u[e-1]>q&&(k||c)!==u[e-1])u.push(k||c),e++;b===D.length-1&&c+a-u[e-1]>q&&u.push(c);c!==k&&(k=c)}),l||(l=b.clipRect=m.clipRect(0,I,9999,0),b.contentGroup.clip(l)),C(q),r||(this.nav=r=m.g().attr({zIndex:1}).add(this.group),this.up=m.symbol("triangle",0,0,y,y).on("click",function(){b.scroll(-1,h)}).add(r),this.pager=m.text("",15,10).addClass("highcharts-legend-navigation").css(t.style).add(r),
	this.down=m.symbol("triangle-down",0,0,y,y).on("click",function(){b.scroll(1,h)}).add(r)),b.scroll(0),a=f):r&&(C(),r.hide(),this.scrollGroup.attr({translateY:1}),this.clipHeight=0);return a},scroll:function(a,c){var d=this.pages,f=d.length;a=this.currentPage+a;var m=this.clipHeight,e=this.options.navigation,p=this.pager,g=this.padding;a>f&&(a=f);0<a&&(void 0!==c&&b(c,this.chart),this.nav.attr({translateX:g,translateY:m+this.padding+7+this.titleHeight,visibility:"visible"}),this.up.attr({"class":1===
	a?"highcharts-legend-nav-inactive":"highcharts-legend-nav-active"}),p.attr({text:a+"/"+f}),this.down.attr({x:18+this.pager.getBBox().width,"class":a===f?"highcharts-legend-nav-inactive":"highcharts-legend-nav-active"}),this.up.attr({fill:1===a?e.inactiveColor:e.activeColor}).css({cursor:1===a?"default":"pointer"}),this.down.attr({fill:a===f?e.inactiveColor:e.activeColor}).css({cursor:a===f?"default":"pointer"}),c=-d[a-1]+this.initialItemY,this.scrollGroup.animate({translateY:c}),this.currentPage=
	a,this.positionCheckboxes(c))}};a.LegendSymbolMixin={drawRectangle:function(a,b){var c=a.symbolHeight,f=a.options.squareSymbol;b.legendSymbol=this.chart.renderer.rect(f?(a.symbolWidth-c)/2:0,a.baseline-c+1,f?c:a.symbolWidth,c,d(a.options.symbolRadius,c/2)).addClass("highcharts-point").attr({zIndex:3}).add(b.legendGroup)},drawLineMarker:function(a){var b=this.options,f=b.marker,m=a.symbolWidth,p=a.symbolHeight,e=p/2,g=this.chart.renderer,l=this.legendGroup;a=a.baseline-Math.round(.3*a.fontMetrics.b);
	var t;t={"stroke-width":b.lineWidth||0};b.dashStyle&&(t.dashstyle=b.dashStyle);this.legendLine=g.path(["M",0,a,"L",m,a]).addClass("highcharts-graph").attr(t).add(l);f&&!1!==f.enabled&&(b=Math.min(d(f.radius,e),e),0===this.symbol.indexOf("url")&&(f=q(f,{width:p,height:p}),b=0),this.legendSymbol=f=g.symbol(this.symbol,m/2-b,a-b,2*b,2*b,f).addClass("highcharts-point").add(l),f.isMarker=!0)}};(/Trident\/7\.0/.test(C.navigator.userAgent)||u)&&t(B.prototype,"positionItem",function(a,b){var c=this,d=function(){b._legendItemPos&&
	a.call(c,b)};d();setTimeout(d)})})(L);(function(a){var B=a.addEvent,A=a.animate,H=a.animObject,G=a.attr,r=a.doc,g=a.Axis,f=a.createElement,u=a.defaultOptions,l=a.discardElement,q=a.charts,d=a.css,b=a.defined,p=a.each,C=a.extend,t=a.find,m=a.fireEvent,c=a.getStyle,n=a.grep,E=a.isNumber,z=a.isObject,e=a.isString,x=a.Legend,F=a.marginNames,w=a.merge,h=a.Pointer,y=a.pick,J=a.pInt,K=a.removeEvent,I=a.seriesTypes,k=a.splat,D=a.svg,P=a.syncTimeout,N=a.win,S=a.Renderer,O=a.Chart=function(){this.getArgs.apply(this,
	arguments)};a.chart=function(a,b,c){return new O(a,b,c)};O.prototype={callbacks:[],getArgs:function(){var a=[].slice.call(arguments);if(e(a[0])||a[0].nodeName)this.renderTo=a.shift();this.init(a[0],a[1])},init:function(b,c){var e,h=b.series;b.series=null;e=w(u,b);e.series=b.series=h;this.userOptions=b;this.respRules=[];b=e.chart;h=b.events;this.margin=[];this.spacing=[];this.bounds={h:{},v:{}};this.callback=c;this.isResizing=0;this.options=e;this.axes=[];this.series=[];this.hasCartesianSeries=b.showAxes;
	var d;this.index=q.length;q.push(this);a.chartCount++;if(h)for(d in h)B(this,d,h[d]);this.xAxis=[];this.yAxis=[];this.pointCount=this.colorCounter=this.symbolCounter=0;this.firstRender()},initSeries:function(b){var c=this.options.chart;(c=I[b.type||c.type||c.defaultSeriesType])||a.error(17,!0);c=new c;c.init(this,b);return c},orderSeries:function(a){var b=this.series;for(a=a||0;a<b.length;a++)b[a]&&(b[a].index=a,b[a].name=b[a].name||"Series "+(b[a].index+1))},isInsidePlot:function(a,b,c){var e=c?
	b:a;a=c?a:b;return 0<=e&&e<=this.plotWidth&&0<=a&&a<=this.plotHeight},redraw:function(b){var c=this.axes,e=this.series,h=this.pointer,d=this.legend,k=this.isDirtyLegend,f,n,y=this.hasCartesianSeries,g=this.isDirtyBox,v=e.length,l=v,q=this.renderer,t=q.isHidden(),w=[];this.setResponsive&&this.setResponsive(!1);a.setAnimation(b,this);t&&this.cloneRenderTo();for(this.layOutTitles();l--;)if(b=e[l],b.options.stacking&&(f=!0,b.isDirty)){n=!0;break}if(n)for(l=v;l--;)b=e[l],b.options.stacking&&(b.isDirty=
	!0);p(e,function(a){a.isDirty&&"point"===a.options.legendType&&(a.updateTotals&&a.updateTotals(),k=!0);a.isDirtyData&&m(a,"updatedData")});k&&d.options.enabled&&(d.render(),this.isDirtyLegend=!1);f&&this.getStacks();y&&p(c,function(a){a.updateNames();a.setScale()});this.getMargins();y&&(p(c,function(a){a.isDirty&&(g=!0)}),p(c,function(a){var b=a.min+","+a.max;a.extKey!==b&&(a.extKey=b,w.push(function(){m(a,"afterSetExtremes",C(a.eventArgs,a.getExtremes()));delete a.eventArgs}));(g||f)&&a.redraw()}));
	g&&this.drawChartBox();m(this,"predraw");p(e,function(a){(g||a.isDirty)&&a.visible&&a.redraw();a.isDirtyData=!1});h&&h.reset(!0);q.draw();m(this,"redraw");m(this,"render");t&&this.cloneRenderTo(!0);p(w,function(a){a.call()})},get:function(a){function b(b){return b.id===a||b.options&&b.options.id===a}var c,e=this.series,h;c=t(this.axes,b)||t(this.series,b);for(h=0;!c&&h<e.length;h++)c=t(e[h].points||[],b);return c},getAxes:function(){var a=this,b=this.options,c=b.xAxis=k(b.xAxis||{}),b=b.yAxis=k(b.yAxis||
	{});p(c,function(a,b){a.index=b;a.isX=!0});p(b,function(a,b){a.index=b});c=c.concat(b);p(c,function(b){new g(a,b)})},getSelectedPoints:function(){var a=[];p(this.series,function(b){a=a.concat(n(b.points||[],function(a){return a.selected}))});return a},getSelectedSeries:function(){return n(this.series,function(a){return a.selected})},setTitle:function(a,b,c){var e=this,h=e.options,d;d=h.title=w({style:{color:"#333333",fontSize:h.isStock?"16px":"18px"}},h.title,a);h=h.subtitle=w({style:{color:"#666666"}},
	h.subtitle,b);p([["title",a,d],["subtitle",b,h]],function(a,b){var c=a[0],h=e[c],d=a[1];a=a[2];h&&d&&(e[c]=h=h.destroy());a&&a.text&&!h&&(e[c]=e.renderer.text(a.text,0,0,a.useHTML).attr({align:a.align,"class":"highcharts-"+c,zIndex:a.zIndex||4}).add(),e[c].update=function(a){e.setTitle(!b&&a,b&&a)},e[c].css(a.style))});e.layOutTitles(c)},layOutTitles:function(a){var b=0,c,e=this.renderer,h=this.spacingBox;p(["title","subtitle"],function(a){var c=this[a],d=this.options[a],k;c&&(k=d.style.fontSize,
	k=e.fontMetrics(k,c).b,c.css({width:(d.width||h.width+d.widthAdjust)+"px"}).align(C({y:b+k+("title"===a?-3:2)},d),!1,"spacingBox"),d.floating||d.verticalAlign||(b=Math.ceil(b+c.getBBox().height)))},this);c=this.titleOffset!==b;this.titleOffset=b;!this.isDirtyBox&&c&&(this.isDirtyBox=c,this.hasRendered&&y(a,!0)&&this.isDirtyBox&&this.redraw())},getChartSize:function(){var a=this.options.chart,e=a.width,a=a.height,h=this.renderToClone||this.renderTo;b(e)||(this.containerWidth=c(h,"width"));b(a)||(this.containerHeight=
	c(h,"height"));this.chartWidth=Math.max(0,e||this.containerWidth||600);this.chartHeight=Math.max(0,a||this.containerHeight||400)},cloneRenderTo:function(a){var b=this.renderToClone,c=this.container;if(a){if(b){for(;b.childNodes.length;)this.renderTo.appendChild(b.firstChild);l(b);delete this.renderToClone}}else c&&c.parentNode===this.renderTo&&this.renderTo.removeChild(c),this.renderToClone=b=this.renderTo.cloneNode(0),d(b,{position:"absolute",top:"-9999px",display:"block"}),b.style.setProperty&&
	b.style.setProperty("display","block","important"),r.body.appendChild(b),c&&b.appendChild(c)},setClassName:function(a){this.container.className="highcharts-container "+(a||"")},getContainer:function(){var b,c=this.options,h=c.chart,d,k;b=this.renderTo;var m=a.uniqueKey(),n;b||(this.renderTo=b=h.renderTo);e(b)&&(this.renderTo=b=r.getElementById(b));b||a.error(13,!0);d=J(G(b,"data-highcharts-chart"));E(d)&&q[d]&&q[d].hasRendered&&q[d].destroy();G(b,"data-highcharts-chart",this.index);b.innerHTML="";
	h.skipClone||b.offsetWidth||this.cloneRenderTo();this.getChartSize();d=this.chartWidth;k=this.chartHeight;n=C({position:"relative",overflow:"hidden",width:d+"px",height:k+"px",textAlign:"left",lineHeight:"normal",zIndex:0,"-webkit-tap-highlight-color":"rgba(0,0,0,0)"},h.style);this.container=b=f("div",{id:m},n,this.renderToClone||b);this._cursor=b.style.cursor;this.renderer=new (a[h.renderer]||S)(b,d,k,null,h.forExport,c.exporting&&c.exporting.allowHTML);this.setClassName(h.className);this.renderer.setStyle(h.style);
	this.renderer.chartIndex=this.index},getMargins:function(a){var c=this.spacing,e=this.margin,h=this.titleOffset;this.resetMargins();h&&!b(e[0])&&(this.plotTop=Math.max(this.plotTop,h+this.options.title.margin+c[0]));this.legend.display&&this.legend.adjustMargins(e,c);this.extraMargin&&(this[this.extraMargin.type]=(this[this.extraMargin.type]||0)+this.extraMargin.value);this.extraTopMargin&&(this.plotTop+=this.extraTopMargin);a||this.getAxisMargins()},getAxisMargins:function(){var a=this,c=a.axisOffset=
	[0,0,0,0],e=a.margin;a.hasCartesianSeries&&p(a.axes,function(a){a.visible&&a.getOffset()});p(F,function(h,d){b(e[d])||(a[h]+=c[d])});a.setChartSize()},reflow:function(a){var e=this,h=e.options.chart,d=e.renderTo,k=b(h.width),f=h.width||c(d,"width"),h=h.height||c(d,"height"),d=a?a.target:N;if(!k&&!e.isPrinting&&f&&h&&(d===N||d===r)){if(f!==e.containerWidth||h!==e.containerHeight)clearTimeout(e.reflowTimeout),e.reflowTimeout=P(function(){e.container&&e.setSize(void 0,void 0,!1)},a?100:0);e.containerWidth=
	f;e.containerHeight=h}},initReflow:function(){var a=this,b;b=B(N,"resize",function(b){a.reflow(b)});B(a,"destroy",b)},setSize:function(b,c,e){var h=this,k=h.renderer;h.isResizing+=1;a.setAnimation(e,h);h.oldChartHeight=h.chartHeight;h.oldChartWidth=h.chartWidth;void 0!==b&&(h.options.chart.width=b);void 0!==c&&(h.options.chart.height=c);h.getChartSize();b=k.globalAnimation;(b?A:d)(h.container,{width:h.chartWidth+"px",height:h.chartHeight+"px"},b);h.setChartSize(!0);k.setSize(h.chartWidth,h.chartHeight,
	e);p(h.axes,function(a){a.isDirty=!0;a.setScale()});h.isDirtyLegend=!0;h.isDirtyBox=!0;h.layOutTitles();h.getMargins();h.redraw(e);h.oldChartHeight=null;m(h,"resize");P(function(){h&&m(h,"endResize",null,function(){--h.isResizing})},H(b).duration)},setChartSize:function(a){var b=this.inverted,c=this.renderer,e=this.chartWidth,h=this.chartHeight,d=this.options.chart,k=this.spacing,f=this.clipOffset,m,n,y,g;this.plotLeft=m=Math.round(this.plotLeft);this.plotTop=n=Math.round(this.plotTop);this.plotWidth=
	y=Math.max(0,Math.round(e-m-this.marginRight));this.plotHeight=g=Math.max(0,Math.round(h-n-this.marginBottom));this.plotSizeX=b?g:y;this.plotSizeY=b?y:g;this.plotBorderWidth=d.plotBorderWidth||0;this.spacingBox=c.spacingBox={x:k[3],y:k[0],width:e-k[3]-k[1],height:h-k[0]-k[2]};this.plotBox=c.plotBox={x:m,y:n,width:y,height:g};e=2*Math.floor(this.plotBorderWidth/2);b=Math.ceil(Math.max(e,f[3])/2);c=Math.ceil(Math.max(e,f[0])/2);this.clipBox={x:b,y:c,width:Math.floor(this.plotSizeX-Math.max(e,f[1])/
	2-b),height:Math.max(0,Math.floor(this.plotSizeY-Math.max(e,f[2])/2-c))};a||p(this.axes,function(a){a.setAxisSize();a.setAxisTranslation()})},resetMargins:function(){var a=this,b=a.options.chart;p(["margin","spacing"],function(c){var e=b[c],h=z(e)?e:[e,e,e,e];p(["Top","Right","Bottom","Left"],function(e,d){a[c][d]=y(b[c+e],h[d])})});p(F,function(b,c){a[b]=y(a.margin[c],a.spacing[c])});a.axisOffset=[0,0,0,0];a.clipOffset=[0,0,0,0]},drawChartBox:function(){var a=this.options.chart,b=this.renderer,c=
	this.chartWidth,e=this.chartHeight,h=this.chartBackground,d=this.plotBackground,k=this.plotBorder,f,m=this.plotBGImage,n=a.backgroundColor,p=a.plotBackgroundColor,y=a.plotBackgroundImage,g,l=this.plotLeft,q=this.plotTop,t=this.plotWidth,w=this.plotHeight,x=this.plotBox,r=this.clipRect,z=this.clipBox,J="animate";h||(this.chartBackground=h=b.rect().addClass("highcharts-background").add(),J="attr");f=a.borderWidth||0;g=f+(a.shadow?8:0);n={fill:n||"none"};if(f||h["stroke-width"])n.stroke=a.borderColor,
	n["stroke-width"]=f;h.attr(n).shadow(a.shadow);h[J]({x:g/2,y:g/2,width:c-g-f%2,height:e-g-f%2,r:a.borderRadius});J="animate";d||(J="attr",this.plotBackground=d=b.rect().addClass("highcharts-plot-background").add());d[J](x);d.attr({fill:p||"none"}).shadow(a.plotShadow);y&&(m?m.animate(x):this.plotBGImage=b.image(y,l,q,t,w).add());r?r.animate({width:z.width,height:z.height}):this.clipRect=b.clipRect(z);J="animate";k||(J="attr",this.plotBorder=k=b.rect().addClass("highcharts-plot-border").attr({zIndex:1}).add());
	k.attr({stroke:a.plotBorderColor,"stroke-width":a.plotBorderWidth||0,fill:"none"});k[J](k.crisp({x:l,y:q,width:t,height:w},-k.strokeWidth()));this.isDirtyBox=!1},propFromSeries:function(){var a=this,b=a.options.chart,c,e=a.options.series,h,d;p(["inverted","angular","polar"],function(k){c=I[b.type||b.defaultSeriesType];d=b[k]||c&&c.prototype[k];for(h=e&&e.length;!d&&h--;)(c=I[e[h].type])&&c.prototype[k]&&(d=!0);a[k]=d})},linkSeries:function(){var a=this,b=a.series;p(b,function(a){a.linkedSeries.length=
	0});p(b,function(b){var c=b.options.linkedTo;e(c)&&(c=":previous"===c?a.series[b.index-1]:a.get(c))&&c.linkedParent!==b&&(c.linkedSeries.push(b),b.linkedParent=c,b.visible=y(b.options.visible,c.options.visible,b.visible))})},renderSeries:function(){p(this.series,function(a){a.translate();a.render()})},renderLabels:function(){var a=this,b=a.options.labels;b.items&&p(b.items,function(c){var e=C(b.style,c.style),h=J(e.left)+a.plotLeft,d=J(e.top)+a.plotTop+12;delete e.left;delete e.top;a.renderer.text(c.html,
	h,d).attr({zIndex:2}).css(e).add()})},render:function(){var a=this.axes,b=this.renderer,c=this.options,e,h,d;this.setTitle();this.legend=new x(this,c.legend);this.getStacks&&this.getStacks();this.getMargins(!0);this.setChartSize();c=this.plotWidth;e=this.plotHeight-=21;p(a,function(a){a.setScale()});this.getAxisMargins();h=1.1<c/this.plotWidth;d=1.05<e/this.plotHeight;if(h||d)p(a,function(a){(a.horiz&&h||!a.horiz&&d)&&a.setTickInterval(!0)}),this.getMargins();this.drawChartBox();this.hasCartesianSeries&&
	p(a,function(a){a.visible&&a.render()});this.seriesGroup||(this.seriesGroup=b.g("series-group").attr({zIndex:3}).add());this.renderSeries();this.renderLabels();this.addCredits();this.setResponsive&&this.setResponsive();this.hasRendered=!0},addCredits:function(a){var b=this;a=w(!0,this.options.credits,a);a.enabled&&!this.credits&&(this.credits=this.renderer.text(a.text+(this.mapCredits||""),0,0).addClass("highcharts-credits").on("click",function(){a.href&&(N.location.href=a.href)}).attr({align:a.position.align,
	zIndex:8}).css(a.style).add().align(a.position),this.credits.update=function(a){b.credits=b.credits.destroy();b.addCredits(a)})},destroy:function(){var b=this,c=b.axes,e=b.series,h=b.container,d,k=h&&h.parentNode;m(b,"destroy");q[b.index]=void 0;a.chartCount--;b.renderTo.removeAttribute("data-highcharts-chart");K(b);for(d=c.length;d--;)c[d]=c[d].destroy();this.scroller&&this.scroller.destroy&&this.scroller.destroy();for(d=e.length;d--;)e[d]=e[d].destroy();p("title subtitle chartBackground plotBackground plotBGImage plotBorder seriesGroup clipRect credits pointer rangeSelector legend resetZoomButton tooltip renderer".split(" "),
	function(a){var c=b[a];c&&c.destroy&&(b[a]=c.destroy())});h&&(h.innerHTML="",K(h),k&&l(h));for(d in b)delete b[d]},isReadyToRender:function(){var a=this;return D||N!=N.top||"complete"===r.readyState?!0:(r.attachEvent("onreadystatechange",function(){r.detachEvent("onreadystatechange",a.firstRender);"complete"===r.readyState&&a.firstRender()}),!1)},firstRender:function(){var a=this,b=a.options;if(a.isReadyToRender()){a.getContainer();m(a,"init");a.resetMargins();a.setChartSize();a.propFromSeries();
	a.getAxes();p(b.series||[],function(b){a.initSeries(b)});a.linkSeries();m(a,"beforeRender");h&&(a.pointer=new h(a,b));a.render();if(!a.renderer.imgCount&&a.onload)a.onload();a.cloneRenderTo(!0)}},onload:function(){p([this.callback].concat(this.callbacks),function(a){a&&void 0!==this.index&&a.apply(this,[this])},this);m(this,"load");m(this,"render");b(this.index)&&!1!==this.options.chart.reflow&&this.initReflow();this.onload=null}}})(L);(function(a){var B,A=a.each,H=a.extend,G=a.erase,r=a.fireEvent,
	g=a.format,f=a.isArray,u=a.isNumber,l=a.pick,q=a.removeEvent;B=a.Point=function(){};B.prototype={init:function(a,b,f){this.series=a;this.color=a.color;this.applyOptions(b,f);a.options.colorByPoint?(b=a.options.colors||a.chart.options.colors,this.color=this.color||b[a.colorCounter],b=b.length,f=a.colorCounter,a.colorCounter++,a.colorCounter===b&&(a.colorCounter=0)):f=a.colorIndex;this.colorIndex=l(this.colorIndex,f);a.chart.pointCount++;return this},applyOptions:function(a,b){var d=this.series,f=d.options.pointValKey||
	d.pointValKey;a=B.prototype.optionsToObject.call(this,a);H(this,a);this.options=this.options?H(this.options,a):a;a.group&&delete this.group;f&&(this.y=this[f]);this.isNull=l(this.isValid&&!this.isValid(),null===this.x||!u(this.y,!0));this.selected&&(this.state="select");"name"in this&&void 0===b&&d.xAxis&&d.xAxis.hasNames&&(this.x=d.xAxis.nameToX(this));void 0===this.x&&d&&(this.x=void 0===b?d.autoIncrement(this):b);return this},optionsToObject:function(a){var b={},d=this.series,g=d.options.keys,
	l=g||d.pointArrayMap||["y"],m=l.length,c=0,n=0;if(u(a)||null===a)b[l[0]]=a;else if(f(a))for(!g&&a.length>m&&(d=typeof a[0],"string"===d?b.name=a[0]:"number"===d&&(b.x=a[0]),c++);n<m;)g&&void 0===a[c]||(b[l[n]]=a[c]),c++,n++;else"object"===typeof a&&(b=a,a.dataLabels&&(d._hasPointLabels=!0),a.marker&&(d._hasPointMarkers=!0));return b},getClassName:function(){return"highcharts-point"+(this.selected?" highcharts-point-select":"")+(this.negative?" highcharts-negative":"")+(this.isNull?" highcharts-null-point":
	"")+(void 0!==this.colorIndex?" highcharts-color-"+this.colorIndex:"")+(this.options.className?" "+this.options.className:"")+(this.zone&&this.zone.className?" "+this.zone.className.replace("highcharts-negative",""):"")},getZone:function(){var a=this.series,b=a.zones,a=a.zoneAxis||"y",f=0,g;for(g=b[f];this[a]>=g.value;)g=b[++f];g&&g.color&&!this.options.color&&(this.color=g.color);return g},destroy:function(){var a=this.series.chart,b=a.hoverPoints,f;a.pointCount--;b&&(this.setState(),G(b,this),b.length||
	(a.hoverPoints=null));if(this===a.hoverPoint)this.onMouseOut();if(this.graphic||this.dataLabel)q(this),this.destroyElements();this.legendItem&&a.legend.destroyItem(this);for(f in this)this[f]=null},destroyElements:function(){for(var a=["graphic","dataLabel","dataLabelUpper","connector","shadowGroup"],b,f=6;f--;)b=a[f],this[b]&&(this[b]=this[b].destroy())},getLabelConfig:function(){return{x:this.category,y:this.y,color:this.color,colorIndex:this.colorIndex,key:this.name||this.category,series:this.series,
	point:this,percentage:this.percentage,total:this.total||this.stackTotal}},tooltipFormatter:function(a){var b=this.series,d=b.tooltipOptions,f=l(d.valueDecimals,""),q=d.valuePrefix||"",m=d.valueSuffix||"";A(b.pointArrayMap||["y"],function(b){b="{point."+b;if(q||m)a=a.replace(b+"}",q+b+"}"+m);a=a.replace(b+"}",b+":,."+f+"f}")});return g(a,{point:this,series:this.series})},firePointEvent:function(a,b,f){var d=this,g=this.series.options;(g.point.events[a]||d.options&&d.options.events&&d.options.events[a])&&
	this.importEvents();"click"===a&&g.allowPointSelect&&(f=function(a){d.select&&d.select(null,a.ctrlKey||a.metaKey||a.shiftKey)});r(this,a,b,f)},visible:!0}})(L);(function(a){var B=a.addEvent,A=a.animObject,H=a.arrayMax,G=a.arrayMin,r=a.correctFloat,g=a.Date,f=a.defaultOptions,u=a.defaultPlotOptions,l=a.defined,q=a.each,d=a.erase,b=a.extend,p=a.fireEvent,C=a.grep,t=a.isArray,m=a.isNumber,c=a.isString,n=a.merge,E=a.pick,z=a.removeEvent,e=a.splat,x=a.SVGElement,F=a.syncTimeout,w=a.win;a.Series=a.seriesType("line",
	null,{lineWidth:2,allowPointSelect:!1,showCheckbox:!1,animation:{duration:1E3},events:{},marker:{lineWidth:0,lineColor:"#ffffff",radius:4,states:{hover:{animation:{duration:50},enabled:!0,radiusPlus:2,lineWidthPlus:1},select:{fillColor:"#cccccc",lineColor:"#000000",lineWidth:2}}},point:{events:{}},dataLabels:{align:"center",formatter:function(){return null===this.y?"":a.numberFormat(this.y,-1)},style:{fontSize:"11px",fontWeight:"bold",color:"contrast",textOutline:"1px contrast"},verticalAlign:"bottom",
	x:0,y:0,padding:5},cropThreshold:300,pointRange:0,softThreshold:!0,states:{hover:{lineWidthPlus:1,marker:{},halo:{size:10,opacity:.25}},select:{marker:{}}},stickyTracking:!0,turboThreshold:1E3},{isCartesian:!0,pointClass:a.Point,sorted:!0,requireSorting:!0,directTouch:!1,axisTypes:["xAxis","yAxis"],colorCounter:0,parallelArrays:["x","y"],coll:"series",init:function(a,c){var e=this,h,d,k=a.series,f;e.chart=a;e.options=c=e.setOptions(c);e.linkedSeries=[];e.bindAxes();b(e,{name:c.name,state:"",visible:!1!==
	c.visible,selected:!0===c.selected});d=c.events;for(h in d)B(e,h,d[h]);if(d&&d.click||c.point&&c.point.events&&c.point.events.click||c.allowPointSelect)a.runTrackerClick=!0;e.getColor();e.getSymbol();q(e.parallelArrays,function(a){e[a+"Data"]=[]});e.setData(c.data,!1);e.isCartesian&&(a.hasCartesianSeries=!0);k.length&&(f=k[k.length-1]);e._i=E(f&&f._i,-1)+1;a.orderSeries(this.insert(k))},insert:function(a){var b=this.options.index,c;if(m(b)){for(c=a.length;c--;)if(b>=E(a[c].options.index,a[c]._i)){a.splice(c+
	1,0,this);break}-1===c&&a.unshift(this);c+=1}else a.push(this);return E(c,a.length-1)},bindAxes:function(){var b=this,c=b.options,e=b.chart,d;q(b.axisTypes||[],function(h){q(e[h],function(a){d=a.options;if(c[h]===d.index||void 0!==c[h]&&c[h]===d.id||void 0===c[h]&&0===d.index)b.insert(a.series),b[h]=a,a.isDirty=!0});b[h]||b.optionalAxis===h||a.error(18,!0)})},updateParallelArrays:function(a,b){var c=a.series,e=arguments,h=m(b)?function(e){var h="y"===e&&c.toYData?c.toYData(a):a[e];c[e+"Data"][b]=
	h}:function(a){Array.prototype[b].apply(c[a+"Data"],Array.prototype.slice.call(e,2))};q(c.parallelArrays,h)},autoIncrement:function(){var a=this.options,b=this.xIncrement,c,e=a.pointIntervalUnit,b=E(b,a.pointStart,0);this.pointInterval=c=E(this.pointInterval,a.pointInterval,1);e&&(a=new g(b),"day"===e?a=+a[g.hcSetDate](a[g.hcGetDate]()+c):"month"===e?a=+a[g.hcSetMonth](a[g.hcGetMonth]()+c):"year"===e&&(a=+a[g.hcSetFullYear](a[g.hcGetFullYear]()+c)),c=a-b);this.xIncrement=b+c;return b},setOptions:function(a){var b=
	this.chart,c=b.options.plotOptions,b=b.userOptions||{},e=b.plotOptions||{},h=c[this.type];this.userOptions=a;c=n(h,c.series,a);this.tooltipOptions=n(f.tooltip,f.plotOptions[this.type].tooltip,b.tooltip,e.series&&e.series.tooltip,e[this.type]&&e[this.type].tooltip,a.tooltip);null===h.marker&&delete c.marker;this.zoneAxis=c.zoneAxis;a=this.zones=(c.zones||[]).slice();!c.negativeColor&&!c.negativeFillColor||c.zones||a.push({value:c[this.zoneAxis+"Threshold"]||c.threshold||0,className:"highcharts-negative",
	color:c.negativeColor,fillColor:c.negativeFillColor});a.length&&l(a[a.length-1].value)&&a.push({color:this.color,fillColor:this.fillColor});return c},getCyclic:function(a,b,c){var e,h=this.chart,d=this.userOptions,f=a+"Index",n=a+"Counter",m=c?c.length:E(h.options.chart[a+"Count"],h[a+"Count"]);b||(e=E(d[f],d["_"+f]),l(e)||(h.series.length||(h[n]=0),d["_"+f]=e=h[n]%m,h[n]+=1),c&&(b=c[e]));void 0!==e&&(this[f]=e);this[a]=b},getColor:function(){this.options.colorByPoint?this.options.color=null:this.getCyclic("color",
	this.options.color||u[this.type].color,this.chart.options.colors)},getSymbol:function(){this.getCyclic("symbol",this.options.marker.symbol,this.chart.options.symbols)},drawLegendSymbol:a.LegendSymbolMixin.drawLineMarker,setData:function(b,e,d,f){var h=this,k=h.points,n=k&&k.length||0,g,p=h.options,y=h.chart,l=null,w=h.xAxis,x=p.turboThreshold,r=this.xData,z=this.yData,F=(g=h.pointArrayMap)&&g.length;b=b||[];g=b.length;e=E(e,!0);if(!1!==f&&g&&n===g&&!h.cropped&&!h.hasGroupedData&&h.visible)q(b,function(a,
	b){k[b].update&&a!==p.data[b]&&k[b].update(a,!1,null,!1)});else{h.xIncrement=null;h.colorCounter=0;q(this.parallelArrays,function(a){h[a+"Data"].length=0});if(x&&g>x){for(d=0;null===l&&d<g;)l=b[d],d++;if(m(l))for(d=0;d<g;d++)r[d]=this.autoIncrement(),z[d]=b[d];else if(t(l))if(F)for(d=0;d<g;d++)l=b[d],r[d]=l[0],z[d]=l.slice(1,F+1);else for(d=0;d<g;d++)l=b[d],r[d]=l[0],z[d]=l[1];else a.error(12)}else for(d=0;d<g;d++)void 0!==b[d]&&(l={series:h},h.pointClass.prototype.applyOptions.apply(l,[b[d]]),h.updateParallelArrays(l,
	d));c(z[0])&&a.error(14,!0);h.data=[];h.options.data=h.userOptions.data=b;for(d=n;d--;)k[d]&&k[d].destroy&&k[d].destroy();w&&(w.minRange=w.userMinRange);h.isDirty=y.isDirtyBox=!0;h.isDirtyData=!!k;d=!1}"point"===p.legendType&&(this.processData(),this.generatePoints());e&&y.redraw(d)},processData:function(b){var c=this.xData,e=this.yData,h=c.length,d;d=0;var k,f,n=this.xAxis,m,g=this.options;m=g.cropThreshold;var p=this.getExtremesFromAll||g.getExtremesFromAll,l=this.isCartesian,g=n&&n.val2lin,q=n&&
	n.isLog,t,w;if(l&&!this.isDirty&&!n.isDirty&&!this.yAxis.isDirty&&!b)return!1;n&&(b=n.getExtremes(),t=b.min,w=b.max);if(l&&this.sorted&&!p&&(!m||h>m||this.forceCrop))if(c[h-1]<t||c[0]>w)c=[],e=[];else if(c[0]<t||c[h-1]>w)d=this.cropData(this.xData,this.yData,t,w),c=d.xData,e=d.yData,d=d.start,k=!0;for(m=c.length||1;--m;)h=q?g(c[m])-g(c[m-1]):c[m]-c[m-1],0<h&&(void 0===f||h<f)?f=h:0>h&&this.requireSorting&&a.error(15);this.cropped=k;this.cropStart=d;this.processedXData=c;this.processedYData=e;this.closestPointRange=
	f},cropData:function(a,b,c,e){var h=a.length,d=0,f=h,n=E(this.cropShoulder,1),m;for(m=0;m<h;m++)if(a[m]>=c){d=Math.max(0,m-n);break}for(c=m;c<h;c++)if(a[c]>e){f=c+n;break}return{xData:a.slice(d,f),yData:b.slice(d,f),start:d,end:f}},generatePoints:function(){var a=this.options.data,b=this.data,c,d=this.processedXData,f=this.processedYData,k=this.pointClass,n=d.length,m=this.cropStart||0,g,p=this.hasGroupedData,l,q=[],t;b||p||(b=[],b.length=a.length,b=this.data=b);for(t=0;t<n;t++)g=m+t,p?(l=(new k).init(this,
	[d[t]].concat(e(f[t]))),l.dataGroup=this.groupMap[t]):(l=b[g])||void 0===a[g]||(b[g]=l=(new k).init(this,a[g],d[t])),l.index=g,q[t]=l;if(b&&(n!==(c=b.length)||p))for(t=0;t<c;t++)t!==m||p||(t+=n),b[t]&&(b[t].destroyElements(),b[t].plotX=void 0);this.data=b;this.points=q},getExtremes:function(a){var b=this.yAxis,c=this.processedXData,e,h=[],d=0;e=this.xAxis.getExtremes();var f=e.min,n=e.max,g,p,l,q;a=a||this.stackedYData||this.processedYData||[];e=a.length;for(q=0;q<e;q++)if(p=c[q],l=a[q],g=(m(l,!0)||
	t(l))&&(!b.isLog||l.length||0<l),p=this.getExtremesFromAll||this.options.getExtremesFromAll||this.cropped||(c[q+1]||p)>=f&&(c[q-1]||p)<=n,g&&p)if(g=l.length)for(;g--;)null!==l[g]&&(h[d++]=l[g]);else h[d++]=l;this.dataMin=G(h);this.dataMax=H(h)},translate:function(){this.processedXData||this.processData();this.generatePoints();var a=this.options,b=a.stacking,c=this.xAxis,e=c.categories,d=this.yAxis,k=this.points,f=k.length,n=!!this.modifyValue,g=a.pointPlacement,p="between"===g||m(g),q=a.threshold,
	t=a.startFromThreshold?q:0,w,x,z,F,u=Number.MAX_VALUE;"between"===g&&(g=.5);m(g)&&(g*=E(a.pointRange||c.pointRange));for(a=0;a<f;a++){var C=k[a],A=C.x,B=C.y;x=C.low;var H=b&&d.stacks[(this.negStacks&&B<(t?0:q)?"-":"")+this.stackKey],G;d.isLog&&null!==B&&0>=B&&(C.isNull=!0);C.plotX=w=r(Math.min(Math.max(-1E5,c.translate(A,0,0,0,1,g,"flags"===this.type)),1E5));b&&this.visible&&!C.isNull&&H&&H[A]&&(F=this.getStackIndicator(F,A,this.index),G=H[A],B=G.points[F.key],x=B[0],B=B[1],x===t&&F.key===H[A].base&&
	(x=E(q,d.min)),d.isLog&&0>=x&&(x=null),C.total=C.stackTotal=G.total,C.percentage=G.total&&C.y/G.total*100,C.stackY=B,G.setOffset(this.pointXOffset||0,this.barW||0));C.yBottom=l(x)?d.translate(x,0,1,0,1):null;n&&(B=this.modifyValue(B,C));C.plotY=x="number"===typeof B&&Infinity!==B?Math.min(Math.max(-1E5,d.translate(B,0,1,0,1)),1E5):void 0;C.isInside=void 0!==x&&0<=x&&x<=d.len&&0<=w&&w<=c.len;C.clientX=p?r(c.translate(A,0,0,0,1,g)):w;C.negative=C.y<(q||0);C.category=e&&void 0!==e[C.x]?e[C.x]:C.x;C.isNull||
	(void 0!==z&&(u=Math.min(u,Math.abs(w-z))),z=w);C.zone=this.zones.length&&C.getZone()}this.closestPointRangePx=u},getValidPoints:function(a,b){var c=this.chart;return C(a||this.points||[],function(a){return b&&!c.isInsidePlot(a.plotX,a.plotY,c.inverted)?!1:!a.isNull})},setClip:function(a){var b=this.chart,c=this.options,e=b.renderer,d=b.inverted,h=this.clipBox,f=h||b.clipBox,n=this.sharedClipKey||["_sharedClip",a&&a.duration,a&&a.easing,f.height,c.xAxis,c.yAxis].join(),m=b[n],g=b[n+"m"];m||(a&&(f.width=
	0,b[n+"m"]=g=e.clipRect(-99,d?-b.plotLeft:-b.plotTop,99,d?b.chartWidth:b.chartHeight)),b[n]=m=e.clipRect(f),m.count={length:0});a&&!m.count[this.index]&&(m.count[this.index]=!0,m.count.length+=1);!1!==c.clip&&(this.group.clip(a||h?m:b.clipRect),this.markerGroup.clip(g),this.sharedClipKey=n);a||(m.count[this.index]&&(delete m.count[this.index],--m.count.length),0===m.count.length&&n&&b[n]&&(h||(b[n]=b[n].destroy()),b[n+"m"]&&(this.markerGroup.clip(),b[n+"m"]=b[n+"m"].destroy())))},animate:function(a){var b=
	this.chart,c=A(this.options.animation),e;a?this.setClip(c):(e=this.sharedClipKey,(a=b[e])&&a.animate({width:b.plotSizeX},c),b[e+"m"]&&b[e+"m"].animate({width:b.plotSizeX+99},c),this.animate=null)},afterAnimate:function(){this.setClip();p(this,"afterAnimate")},drawPoints:function(){var a=this.points,b=this.chart,c,e,d,k,f=this.options.marker,n,g,p,l,q=this.markerGroup,t=E(f.enabled,this.xAxis.isRadial?!0:null,this.closestPointRangePx>2*f.radius);if(!1!==f.enabled||this._hasPointMarkers)for(e=0;e<a.length;e++)d=
	a[e],c=d.plotY,k=d.graphic,n=d.marker||{},g=!!d.marker,p=t&&void 0===n.enabled||n.enabled,l=d.isInside,p&&m(c)&&null!==d.y?(c=E(n.symbol,this.symbol),d.hasImage=0===c.indexOf("url"),p=this.markerAttribs(d,d.selected&&"select"),k?k[l?"show":"hide"](!0).animate(p):l&&(0<p.width||d.hasImage)&&(d.graphic=k=b.renderer.symbol(c,p.x,p.y,p.width,p.height,g?n:f).add(q)),k&&k.attr(this.pointAttribs(d,d.selected&&"select")),k&&k.addClass(d.getClassName(),!0)):k&&(d.graphic=k.destroy())},markerAttribs:function(a,
	b){var c=this.options.marker,e=a.marker||{},d=E(e.radius,c.radius);b&&(c=c.states[b],b=e.states&&e.states[b],d=E(b&&b.radius,c&&c.radius,d+(c&&c.radiusPlus||0)));a.hasImage&&(d=0);a={x:Math.floor(a.plotX)-d,y:a.plotY-d};d&&(a.width=a.height=2*d);return a},pointAttribs:function(a,b){var c=this.options.marker,e=a&&a.options,d=e&&e.marker||{},h=this.color,f=e&&e.color,n=a&&a.color,e=E(d.lineWidth,c.lineWidth);a=a&&a.zone&&a.zone.color;h=f||a||n||h;a=d.fillColor||c.fillColor||h;h=d.lineColor||c.lineColor||
	h;b&&(c=c.states[b],b=d.states&&d.states[b]||{},e=E(b.lineWidth,c.lineWidth,e+E(b.lineWidthPlus,c.lineWidthPlus,0)),a=b.fillColor||c.fillColor||a,h=b.lineColor||c.lineColor||h);return{stroke:h,"stroke-width":e,fill:a}},destroy:function(){var a=this,b=a.chart,c=/AppleWebKit\/533/.test(w.navigator.userAgent),e,f=a.data||[],k,n,m;p(a,"destroy");z(a);q(a.axisTypes||[],function(b){(m=a[b])&&m.series&&(d(m.series,a),m.isDirty=m.forceRedraw=!0)});a.legendItem&&a.chart.legend.destroyItem(a);for(e=f.length;e--;)(k=
	f[e])&&k.destroy&&k.destroy();a.points=null;clearTimeout(a.animationTimeout);for(n in a)a[n]instanceof x&&!a[n].survive&&(e=c&&"group"===n?"hide":"destroy",a[n][e]());b.hoverSeries===a&&(b.hoverSeries=null);d(b.series,a);b.orderSeries();for(n in a)delete a[n]},getGraphPath:function(a,b,c){var e=this,d=e.options,h=d.step,f,n=[],m=[],g;a=a||e.points;(f=a.reversed)&&a.reverse();(h={right:1,center:2}[h]||h&&3)&&f&&(h=4-h);!d.connectNulls||b||c||(a=this.getValidPoints(a));q(a,function(f,k){var p=f.plotX,
	q=f.plotY,t=a[k-1];(f.leftCliff||t&&t.rightCliff)&&!c&&(g=!0);f.isNull&&!l(b)&&0<k?g=!d.connectNulls:f.isNull&&!b?g=!0:(0===k||g?k=["M",f.plotX,f.plotY]:e.getPointSpline?k=e.getPointSpline(a,f,k):h?(k=1===h?["L",t.plotX,q]:2===h?["L",(t.plotX+p)/2,t.plotY,"L",(t.plotX+p)/2,q]:["L",p,t.plotY],k.push("L",p,q)):k=["L",p,q],m.push(f.x),h&&m.push(f.x),n.push.apply(n,k),g=!1)});n.xMap=m;return e.graphPath=n},drawGraph:function(){var a=this,b=this.options,c=(this.gappedPath||this.getGraphPath).call(this),
	e=[["graph","highcharts-graph",b.lineColor||this.color,b.dashStyle]];q(this.zones,function(c,d){e.push(["zone-graph-"+d,"highcharts-graph highcharts-zone-graph-"+d+" "+(c.className||""),c.color||a.color,c.dashStyle||b.dashStyle])});q(e,function(e,d){var h=e[0],f=a[h];f?(f.endX=c.xMap,f.animate({d:c})):c.length&&(a[h]=a.chart.renderer.path(c).addClass(e[1]).attr({zIndex:1}).add(a.group),f={stroke:e[2],"stroke-width":b.lineWidth,fill:a.fillGraph&&a.color||"none"},e[3]?f.dashstyle=e[3]:"square"!==b.linecap&&
	(f["stroke-linecap"]=f["stroke-linejoin"]="round"),f=a[h].attr(f).shadow(2>d&&b.shadow));f&&(f.startX=c.xMap,f.isArea=c.isArea)})},applyZones:function(){var a=this,b=this.chart,c=b.renderer,e=this.zones,d,f,n=this.clips||[],m,g=this.graph,p=this.area,l=Math.max(b.chartWidth,b.chartHeight),t=this[(this.zoneAxis||"y")+"Axis"],w,x,r=b.inverted,z,F,u,C,A=!1;e.length&&(g||p)&&t&&void 0!==t.min&&(x=t.reversed,z=t.horiz,g&&g.hide(),p&&p.hide(),w=t.getExtremes(),q(e,function(e,h){d=x?z?b.plotWidth:0:z?0:
	t.toPixels(w.min);d=Math.min(Math.max(E(f,d),0),l);f=Math.min(Math.max(Math.round(t.toPixels(E(e.value,w.max),!0)),0),l);A&&(d=f=t.toPixels(w.max));F=Math.abs(d-f);u=Math.min(d,f);C=Math.max(d,f);t.isXAxis?(m={x:r?C:u,y:0,width:F,height:l},z||(m.x=b.plotHeight-m.x)):(m={x:0,y:r?C:u,width:l,height:F},z&&(m.y=b.plotWidth-m.y));r&&c.isVML&&(m=t.isXAxis?{x:0,y:x?u:C,height:m.width,width:b.chartWidth}:{x:m.y-b.plotLeft-b.spacingBox.x,y:0,width:m.height,height:b.chartHeight});n[h]?n[h].animate(m):(n[h]=
	c.clipRect(m),g&&a["zone-graph-"+h].clip(n[h]),p&&a["zone-area-"+h].clip(n[h]));A=e.value>w.max}),this.clips=n)},invertGroups:function(a){function b(){q(["group","markerGroup"],function(b){c[b]&&(c[b].width=c.yAxis.len,c[b].height=c.xAxis.len,c[b].invert(a))})}var c=this,e;c.xAxis&&(e=B(c.chart,"resize",b),B(c,"destroy",e),b(a),c.invertGroups=b)},plotGroup:function(a,b,c,e,d){var h=this[a],f=!h;f&&(this[a]=h=this.chart.renderer.g(b).attr({zIndex:e||.1}).add(d),h.addClass("highcharts-series-"+this.index+
	" highcharts-"+this.type+"-series highcharts-color-"+this.colorIndex+" "+(this.options.className||"")));h.attr({visibility:c})[f?"attr":"animate"](this.getPlotBox());return h},getPlotBox:function(){var a=this.chart,b=this.xAxis,c=this.yAxis;a.inverted&&(b=c,c=this.xAxis);return{translateX:b?b.left:a.plotLeft,translateY:c?c.top:a.plotTop,scaleX:1,scaleY:1}},render:function(){var a=this,b=a.chart,c,e=a.options,d=!!a.animate&&b.renderer.isSVG&&A(e.animation).duration,f=a.visible?"inherit":"hidden",n=
	e.zIndex,m=a.hasRendered,g=b.seriesGroup,p=b.inverted;c=a.plotGroup("group","series",f,n,g);a.markerGroup=a.plotGroup("markerGroup","markers",f,n,g);d&&a.animate(!0);c.inverted=a.isCartesian?p:!1;a.drawGraph&&(a.drawGraph(),a.applyZones());a.drawDataLabels&&a.drawDataLabels();a.visible&&a.drawPoints();a.drawTracker&&!1!==a.options.enableMouseTracking&&a.drawTracker();a.invertGroups(p);!1===e.clip||a.sharedClipKey||m||c.clip(b.clipRect);d&&a.animate();m||(a.animationTimeout=F(function(){a.afterAnimate()},
	d));a.isDirty=!1;a.hasRendered=!0},redraw:function(){var a=this.chart,b=this.isDirty||this.isDirtyData,c=this.group,e=this.xAxis,d=this.yAxis;c&&(a.inverted&&c.attr({width:a.plotWidth,height:a.plotHeight}),c.animate({translateX:E(e&&e.left,a.plotLeft),translateY:E(d&&d.top,a.plotTop)}));this.translate();this.render();b&&delete this.kdTree},kdDimensions:1,kdAxisArray:["clientX","plotY"],searchPoint:function(a,b){var c=this.xAxis,e=this.yAxis,d=this.chart.inverted;return this.searchKDTree({clientX:d?
	c.len-a.chartY+c.pos:a.chartX-c.pos,plotY:d?e.len-a.chartX+e.pos:a.chartY-e.pos},b)},buildKDTree:function(){function a(c,e,d){var h,f;if(f=c&&c.length)return h=b.kdAxisArray[e%d],c.sort(function(a,b){return a[h]-b[h]}),f=Math.floor(f/2),{point:c[f],left:a(c.slice(0,f),e+1,d),right:a(c.slice(f+1),e+1,d)}}this.buildingKdTree=!0;var b=this,c=b.kdDimensions;delete b.kdTree;F(function(){b.kdTree=a(b.getValidPoints(null,!b.directTouch),c,c);b.buildingKdTree=!1},b.options.kdNow?0:1)},searchKDTree:function(a,
	b){function c(a,b,k,n){var m=b.point,g=e.kdAxisArray[k%n],p,t,q=m;t=l(a[d])&&l(m[d])?Math.pow(a[d]-m[d],2):null;p=l(a[h])&&l(m[h])?Math.pow(a[h]-m[h],2):null;p=(t||0)+(p||0);m.dist=l(p)?Math.sqrt(p):Number.MAX_VALUE;m.distX=l(t)?Math.sqrt(t):Number.MAX_VALUE;g=a[g]-m[g];p=0>g?"left":"right";t=0>g?"right":"left";b[p]&&(p=c(a,b[p],k+1,n),q=p[f]<q[f]?p:m);b[t]&&Math.sqrt(g*g)<q[f]&&(a=c(a,b[t],k+1,n),q=a[f]<q[f]?a:q);return q}var e=this,d=this.kdAxisArray[0],h=this.kdAxisArray[1],f=b?"distX":"dist";
	this.kdTree||this.buildingKdTree||this.buildKDTree();if(this.kdTree)return c(a,this.kdTree,this.kdDimensions,this.kdDimensions)}})})(L);(function(a){function B(a,d,b,f,g){var p=a.chart.inverted;this.axis=a;this.isNegative=b;this.options=d;this.x=f;this.total=null;this.points={};this.stack=g;this.rightCliff=this.leftCliff=0;this.alignOptions={align:d.align||(p?b?"left":"right":"center"),verticalAlign:d.verticalAlign||(p?"middle":b?"bottom":"top"),y:l(d.y,p?4:b?14:-6),x:l(d.x,p?b?-6:6:0)};this.textAlign=
	d.textAlign||(p?b?"right":"left":"center")}var A=a.Axis,H=a.Chart,G=a.correctFloat,r=a.defined,g=a.destroyObjectProperties,f=a.each,u=a.format,l=a.pick;a=a.Series;B.prototype={destroy:function(){g(this,this.axis)},render:function(a){var d=this.options,b=d.format,b=b?u(b,this):d.formatter.call(this);this.label?this.label.attr({text:b,visibility:"hidden"}):this.label=this.axis.chart.renderer.text(b,null,null,d.useHTML).css(d.style).attr({align:this.textAlign,rotation:d.rotation,visibility:"hidden"}).add(a)},
	setOffset:function(a,d){var b=this.axis,f=b.chart,g=f.inverted,l=b.reversed,l=this.isNegative&&!l||!this.isNegative&&l,m=b.translate(b.usePercentage?100:this.total,0,0,0,1),b=b.translate(0),b=Math.abs(m-b);a=f.xAxis[0].translate(this.x)+a;var c=f.plotHeight,g={x:g?l?m:m-b:a,y:g?c-a-d:l?c-m-b:c-m,width:g?b:d,height:g?d:b};if(d=this.label)d.align(this.alignOptions,null,g),g=d.alignAttr,d[!1===this.options.crop||f.isInsidePlot(g.x,g.y)?"show":"hide"](!0)}};H.prototype.getStacks=function(){var a=this;
	f(a.yAxis,function(a){a.stacks&&a.hasVisibleSeries&&(a.oldStacks=a.stacks)});f(a.series,function(d){!d.options.stacking||!0!==d.visible&&!1!==a.options.chart.ignoreHiddenSeries||(d.stackKey=d.type+l(d.options.stack,""))})};A.prototype.buildStacks=function(){var a=this.series,d,b=l(this.options.reversedStacks,!0),f=a.length,g;if(!this.isXAxis){this.usePercentage=!1;for(g=f;g--;)a[b?g:f-g-1].setStackedPoints();for(g=f;g--;)d=a[b?g:f-g-1],d.setStackCliffs&&d.setStackCliffs();if(this.usePercentage)for(g=
	0;g<f;g++)a[g].setPercentStacks()}};A.prototype.renderStackTotals=function(){var a=this.chart,d=a.renderer,b=this.stacks,f,g,l=this.stackTotalGroup;l||(this.stackTotalGroup=l=d.g("stack-labels").attr({visibility:"visible",zIndex:6}).add());l.translate(a.plotLeft,a.plotTop);for(f in b)for(g in a=b[f],a)a[g].render(l)};A.prototype.resetStacks=function(){var a=this.stacks,d,b;if(!this.isXAxis)for(d in a)for(b in a[d])a[d][b].touched<this.stacksTouched?(a[d][b].destroy(),delete a[d][b]):(a[d][b].total=
	null,a[d][b].cum=null)};A.prototype.cleanStacks=function(){var a,d,b;if(!this.isXAxis)for(d in this.oldStacks&&(a=this.stacks=this.oldStacks),a)for(b in a[d])a[d][b].cum=a[d][b].total};a.prototype.setStackedPoints=function(){if(this.options.stacking&&(!0===this.visible||!1===this.chart.options.chart.ignoreHiddenSeries)){var a=this.processedXData,d=this.processedYData,b=[],f=d.length,g=this.options,t=g.threshold,m=g.startFromThreshold?t:0,c=g.stack,g=g.stacking,n=this.stackKey,u="-"+n,z=this.negStacks,
	e=this.yAxis,x=e.stacks,F=e.oldStacks,w,h,y,A,K,I,k;e.stacksTouched+=1;for(K=0;K<f;K++)I=a[K],k=d[K],w=this.getStackIndicator(w,I,this.index),A=w.key,y=(h=z&&k<(m?0:t))?u:n,x[y]||(x[y]={}),x[y][I]||(F[y]&&F[y][I]?(x[y][I]=F[y][I],x[y][I].total=null):x[y][I]=new B(e,e.options.stackLabels,h,I,c)),y=x[y][I],null!==k&&(y.points[A]=y.points[this.index]=[l(y.cum,m)],r(y.cum)||(y.base=A),y.touched=e.stacksTouched,0<w.index&&!1===this.singleStacks&&(y.points[A][0]=y.points[this.index+","+I+",0"][0])),"percent"===
	g?(h=h?n:u,z&&x[h]&&x[h][I]?(h=x[h][I],y.total=h.total=Math.max(h.total,y.total)+Math.abs(k)||0):y.total=G(y.total+(Math.abs(k)||0))):y.total=G(y.total+(k||0)),y.cum=l(y.cum,m)+(k||0),null!==k&&(y.points[A].push(y.cum),b[K]=y.cum);"percent"===g&&(e.usePercentage=!0);this.stackedYData=b;e.oldStacks={}}};a.prototype.setPercentStacks=function(){var a=this,d=a.stackKey,b=a.yAxis.stacks,g=a.processedXData,l;f([d,"-"+d],function(d){for(var f=g.length,c,n;f--;)if(c=g[f],l=a.getStackIndicator(l,c,a.index,
	d),c=(n=b[d]&&b[d][c])&&n.points[l.key])n=n.total?100/n.total:0,c[0]=G(c[0]*n),c[1]=G(c[1]*n),a.stackedYData[f]=c[1]})};a.prototype.getStackIndicator=function(a,d,b,f){!r(a)||a.x!==d||f&&a.key!==f?a={x:d,index:0,key:f}:a.index++;a.key=[b,d,a.index].join();return a}})(L);(function(a){var B=a.addEvent,A=a.animate,H=a.Axis,G=a.createElement,r=a.css,g=a.defined,f=a.each,u=a.erase,l=a.extend,q=a.fireEvent,d=a.inArray,b=a.isNumber,p=a.isObject,C=a.merge,t=a.pick,m=a.Point,c=a.Series,n=a.seriesTypes,E=a.setAnimation,
	z=a.splat;l(a.Chart.prototype,{addSeries:function(a,b,c){var e,d=this;a&&(b=t(b,!0),q(d,"addSeries",{options:a},function(){e=d.initSeries(a);d.isDirtyLegend=!0;d.linkSeries();b&&d.redraw(c)}));return e},addAxis:function(a,b,c,d){var e=b?"xAxis":"yAxis",f=this.options;a=C(a,{index:this[e].length,isX:b});new H(this,a);f[e]=z(f[e]||{});f[e].push(a);t(c,!0)&&this.redraw(d)},showLoading:function(a){var b=this,c=b.options,e=b.loadingDiv,d=c.loading,f=function(){e&&r(e,{left:b.plotLeft+"px",top:b.plotTop+
	"px",width:b.plotWidth+"px",height:b.plotHeight+"px"})};e||(b.loadingDiv=e=G("div",{className:"highcharts-loading highcharts-loading-hidden"},null,b.container),b.loadingSpan=G("span",{className:"highcharts-loading-inner"},null,e),B(b,"redraw",f));e.className="highcharts-loading";b.loadingSpan.innerHTML=a||c.lang.loading;r(e,l(d.style,{zIndex:10}));r(b.loadingSpan,d.labelStyle);b.loadingShown||(r(e,{opacity:0,display:""}),A(e,{opacity:d.style.opacity||.5},{duration:d.showDuration||0}));b.loadingShown=
	!0;f()},hideLoading:function(){var a=this.options,b=this.loadingDiv;b&&(b.className="highcharts-loading highcharts-loading-hidden",A(b,{opacity:0},{duration:a.loading.hideDuration||100,complete:function(){r(b,{display:"none"})}}));this.loadingShown=!1},propsRequireDirtyBox:"backgroundColor borderColor borderWidth margin marginTop marginRight marginBottom marginLeft spacing spacingTop spacingRight spacingBottom spacingLeft borderRadius plotBackgroundColor plotBackgroundImage plotBorderColor plotBorderWidth plotShadow shadow".split(" "),
	propsRequireUpdateSeries:"chart.inverted chart.polar chart.ignoreHiddenSeries chart.type colors plotOptions".split(" "),update:function(a,c){var e,n={credits:"addCredits",title:"setTitle",subtitle:"setSubtitle"},h=a.chart,m,p;if(h){C(!0,this.options.chart,h);"className"in h&&this.setClassName(h.className);if("inverted"in h||"polar"in h)this.propFromSeries(),m=!0;for(e in h)h.hasOwnProperty(e)&&(-1!==d("chart."+e,this.propsRequireUpdateSeries)&&(p=!0),-1!==d(e,this.propsRequireDirtyBox)&&(this.isDirtyBox=
	!0));"style"in h&&this.renderer.setStyle(h.style)}for(e in a){if(this[e]&&"function"===typeof this[e].update)this[e].update(a[e],!1);else if("function"===typeof this[n[e]])this[n[e]](a[e]);"chart"!==e&&-1!==d(e,this.propsRequireUpdateSeries)&&(p=!0)}a.colors&&(this.options.colors=a.colors);a.plotOptions&&C(!0,this.options.plotOptions,a.plotOptions);f(["xAxis","yAxis","series"],function(b){a[b]&&f(z(a[b]),function(a,c){(c=g(a.id)&&this.get(a.id)||this[b][c])&&c.coll===b&&c.update(a,!1)},this)},this);
	m&&f(this.axes,function(a){a.update({},!1)});p&&f(this.series,function(a){a.update({},!1)});a.loading&&C(!0,this.options.loading,a.loading);e=h&&h.width;h=h&&h.height;b(e)&&e!==this.chartWidth||b(h)&&h!==this.chartHeight?this.setSize(e,h):t(c,!0)&&this.redraw()},setSubtitle:function(a){this.setTitle(void 0,a)}});l(m.prototype,{update:function(a,b,c,d){function e(){f.applyOptions(a);null===f.y&&n&&(f.graphic=n.destroy());p(a,!0)&&(n&&n.element&&a&&a.marker&&a.marker.symbol&&(f.graphic=n.destroy()),
	a&&a.dataLabels&&f.dataLabel&&(f.dataLabel=f.dataLabel.destroy()));m=f.index;g.updateParallelArrays(f,m);l.data[m]=p(l.data[m],!0)?f.options:a;g.isDirty=g.isDirtyData=!0;!g.fixedBox&&g.hasCartesianSeries&&(k.isDirtyBox=!0);"point"===l.legendType&&(k.isDirtyLegend=!0);b&&k.redraw(c)}var f=this,g=f.series,n=f.graphic,m,k=g.chart,l=g.options;b=t(b,!0);!1===d?e():f.firePointEvent("update",{options:a},e)},remove:function(a,b){this.series.removePoint(d(this,this.series.data),a,b)}});l(c.prototype,{addPoint:function(a,
	b,c,d){var e=this.options,f=this.data,g=this.chart,n=this.xAxis,n=n&&n.hasNames&&n.names,m=e.data,k,p,l=this.xData,q,w;b=t(b,!0);k={series:this};this.pointClass.prototype.applyOptions.apply(k,[a]);w=k.x;q=l.length;if(this.requireSorting&&w<l[q-1])for(p=!0;q&&l[q-1]>w;)q--;this.updateParallelArrays(k,"splice",q,0,0);this.updateParallelArrays(k,q);n&&k.name&&(n[w]=k.name);m.splice(q,0,a);p&&(this.data.splice(q,0,null),this.processData());"point"===e.legendType&&this.generatePoints();c&&(f[0]&&f[0].remove?
	f[0].remove(!1):(f.shift(),this.updateParallelArrays(k,"shift"),m.shift()));this.isDirtyData=this.isDirty=!0;b&&g.redraw(d)},removePoint:function(a,b,c){var e=this,d=e.data,f=d[a],g=e.points,n=e.chart,m=function(){g&&g.length===d.length&&g.splice(a,1);d.splice(a,1);e.options.data.splice(a,1);e.updateParallelArrays(f||{series:e},"splice",a,1);f&&f.destroy();e.isDirty=!0;e.isDirtyData=!0;b&&n.redraw()};E(c,n);b=t(b,!0);f?f.firePointEvent("remove",null,m):m()},remove:function(a,b,c){function e(){d.destroy();
	f.isDirtyLegend=f.isDirtyBox=!0;f.linkSeries();t(a,!0)&&f.redraw(b)}var d=this,f=d.chart;!1!==c?q(d,"remove",null,e):e()},update:function(a,b){var c=this,e=this.chart,d=this.userOptions,g=this.type,m=a.type||d.type||e.options.chart.type,p=n[g].prototype,q=["group","markerGroup","dataLabelsGroup"],k;if(m&&m!==g||void 0!==a.zIndex)q.length=0;f(q,function(a){q[a]=c[a];delete c[a]});a=C(d,{animation:!1,index:this.index,pointStart:this.xData[0]},{data:this.options.data},a);this.remove(!1,null,!1);for(k in p)this[k]=
	void 0;l(this,n[m||g].prototype);f(q,function(a){c[a]=q[a]});this.init(e,a);e.linkSeries();t(b,!0)&&e.redraw(!1)}});l(H.prototype,{update:function(a,b){var c=this.chart;a=c.options[this.coll][this.options.index]=C(this.userOptions,a);this.destroy(!0);this.init(c,l(a,{events:void 0}));c.isDirtyBox=!0;t(b,!0)&&c.redraw()},remove:function(a){for(var b=this.chart,c=this.coll,e=this.series,d=e.length;d--;)e[d]&&e[d].remove(!1);u(b.axes,this);u(b[c],this);b.options[c].splice(this.options.index,1);f(b[c],
	function(a,b){a.options.index=b});this.destroy();b.isDirtyBox=!0;t(a,!0)&&b.redraw()},setTitle:function(a,b){this.update({title:a},b)},setCategories:function(a,b){this.update({categories:a},b)}})})(L);(function(a){var B=a.color,A=a.each,H=a.map,G=a.pick,r=a.Series,g=a.seriesType;g("area","line",{softThreshold:!1,threshold:0},{singleStacks:!1,getStackPoints:function(){var a=[],g=[],l=this.xAxis,q=this.yAxis,d=q.stacks[this.stackKey],b={},p=this.points,r=this.index,t=q.series,m=t.length,c,n=G(q.options.reversedStacks,
	!0)?1:-1,E,z;if(this.options.stacking){for(E=0;E<p.length;E++)b[p[E].x]=p[E];for(z in d)null!==d[z].total&&g.push(z);g.sort(function(a,b){return a-b});c=H(t,function(){return this.visible});A(g,function(e,f){var p=0,t,h;if(b[e]&&!b[e].isNull)a.push(b[e]),A([-1,1],function(a){var p=1===a?"rightNull":"leftNull",l=0,q=d[g[f+a]];if(q)for(E=r;0<=E&&E<m;)t=q.points[E],t||(E===r?b[e][p]=!0:c[E]&&(h=d[e].points[E])&&(l-=h[1]-h[0])),E+=n;b[e][1===a?"rightCliff":"leftCliff"]=l});else{for(E=r;0<=E&&E<m;){if(t=
	d[e].points[E]){p=t[1];break}E+=n}p=q.toPixels(p,!0);a.push({isNull:!0,plotX:l.toPixels(e,!0),plotY:p,yBottom:p})}})}return a},getGraphPath:function(a){var f=r.prototype.getGraphPath,g=this.options,q=g.stacking,d=this.yAxis,b,p,C=[],t=[],m=this.index,c,n=d.stacks[this.stackKey],E=g.threshold,z=d.getThreshold(g.threshold),e,g=g.connectNulls||"percent"===q,x=function(b,e,f){var h=a[b];b=q&&n[h.x].points[m];var g=h[f+"Null"]||0;f=h[f+"Cliff"]||0;var p,l,h=!0;f||g?(p=(g?b[0]:b[1])+f,l=b[0]+f,h=!!g):!q&&
	a[e]&&a[e].isNull&&(p=l=E);void 0!==p&&(t.push({plotX:c,plotY:null===p?z:d.getThreshold(p),isNull:h}),C.push({plotX:c,plotY:null===l?z:d.getThreshold(l),doCurve:!1}))};a=a||this.points;q&&(a=this.getStackPoints());for(b=0;b<a.length;b++)if(p=a[b].isNull,c=G(a[b].rectPlotX,a[b].plotX),e=G(a[b].yBottom,z),!p||g)g||x(b,b-1,"left"),p&&!q&&g||(t.push(a[b]),C.push({x:b,plotX:c,plotY:e})),g||x(b,b+1,"right");b=f.call(this,t,!0,!0);C.reversed=!0;p=f.call(this,C,!0,!0);p.length&&(p[0]="L");p=b.concat(p);f=
	f.call(this,t,!1,g);p.xMap=b.xMap;this.areaPath=p;return f},drawGraph:function(){this.areaPath=[];r.prototype.drawGraph.apply(this);var a=this,g=this.areaPath,l=this.options,q=[["area","highcharts-area",this.color,l.fillColor]];A(this.zones,function(d,b){q.push(["zone-area-"+b,"highcharts-area highcharts-zone-area-"+b+" "+d.className,d.color||a.color,d.fillColor||l.fillColor])});A(q,function(d){var b=d[0],f=a[b];f?(f.endX=g.xMap,f.animate({d:g})):(f=a[b]=a.chart.renderer.path(g).addClass(d[1]).attr({fill:G(d[3],
	B(d[2]).setOpacity(G(l.fillOpacity,.75)).get()),zIndex:0}).add(a.group),f.isArea=!0);f.startX=g.xMap;f.shiftUnit=l.step?2:1})},drawLegendSymbol:a.LegendSymbolMixin.drawRectangle})})(L);(function(a){var B=a.pick;a=a.seriesType;a("spline","line",{},{getPointSpline:function(a,H,G){var r=H.plotX,g=H.plotY,f=a[G-1];G=a[G+1];var u,l,q,d;if(f&&!f.isNull&&!1!==f.doCurve&&G&&!G.isNull&&!1!==G.doCurve){a=f.plotY;q=G.plotX;G=G.plotY;var b=0;u=(1.5*r+f.plotX)/2.5;l=(1.5*g+a)/2.5;q=(1.5*r+q)/2.5;d=(1.5*g+G)/2.5;
	q!==u&&(b=(d-l)*(q-r)/(q-u)+g-d);l+=b;d+=b;l>a&&l>g?(l=Math.max(a,g),d=2*g-l):l<a&&l<g&&(l=Math.min(a,g),d=2*g-l);d>G&&d>g?(d=Math.max(G,g),l=2*g-d):d<G&&d<g&&(d=Math.min(G,g),l=2*g-d);H.rightContX=q;H.rightContY=d}H=["C",B(f.rightContX,f.plotX),B(f.rightContY,f.plotY),B(u,r),B(l,g),r,g];f.rightContX=f.rightContY=null;return H}})})(L);(function(a){var B=a.seriesTypes.area.prototype,A=a.seriesType;A("areaspline","spline",a.defaultPlotOptions.area,{getStackPoints:B.getStackPoints,getGraphPath:B.getGraphPath,
	setStackCliffs:B.setStackCliffs,drawGraph:B.drawGraph,drawLegendSymbol:a.LegendSymbolMixin.drawRectangle})})(L);(function(a){var B=a.animObject,A=a.color,H=a.each,G=a.extend,r=a.isNumber,g=a.merge,f=a.pick,u=a.Series,l=a.seriesType,q=a.svg;l("column","line",{borderRadius:0,groupPadding:.2,marker:null,pointPadding:.1,minPointLength:0,cropThreshold:50,pointRange:null,states:{hover:{halo:!1,brightness:.1,shadow:!1},select:{color:"#cccccc",borderColor:"#000000",shadow:!1}},dataLabels:{align:null,verticalAlign:null,
	y:null},softThreshold:!1,startFromThreshold:!0,stickyTracking:!1,tooltip:{distance:6},threshold:0,borderColor:"#ffffff"},{cropShoulder:0,directTouch:!0,trackerGroups:["group","dataLabelsGroup"],negStacks:!0,init:function(){u.prototype.init.apply(this,arguments);var a=this,b=a.chart;b.hasRendered&&H(b.series,function(b){b.type===a.type&&(b.isDirty=!0)})},getColumnMetrics:function(){var a=this,b=a.options,g=a.xAxis,l=a.yAxis,t=g.reversed,m,c={},n=0;!1===b.grouping?n=1:H(a.chart.series,function(b){var e=
	b.options,d=b.yAxis,f;b.type===a.type&&b.visible&&l.len===d.len&&l.pos===d.pos&&(e.stacking?(m=b.stackKey,void 0===c[m]&&(c[m]=n++),f=c[m]):!1!==e.grouping&&(f=n++),b.columnIndex=f)});var q=Math.min(Math.abs(g.transA)*(g.ordinalSlope||b.pointRange||g.closestPointRange||g.tickInterval||1),g.len),r=q*b.groupPadding,e=(q-2*r)/(n||1),b=Math.min(b.maxPointWidth||g.len,f(b.pointWidth,e*(1-2*b.pointPadding)));a.columnMetrics={width:b,offset:(e-b)/2+(r+((a.columnIndex||0)+(t?1:0))*e-q/2)*(t?-1:1)};return a.columnMetrics},
	crispCol:function(a,b,f,g){var d=this.chart,m=this.borderWidth,c=-(m%2?.5:0),m=m%2?.5:1;d.inverted&&d.renderer.isVML&&(m+=1);f=Math.round(a+f)+c;a=Math.round(a)+c;g=Math.round(b+g)+m;c=.5>=Math.abs(b)&&.5<g;b=Math.round(b)+m;g-=b;c&&g&&(--b,g+=1);return{x:a,y:b,width:f-a,height:g}},translate:function(){var a=this,b=a.chart,g=a.options,l=a.dense=2>a.closestPointRange*a.xAxis.transA,l=a.borderWidth=f(g.borderWidth,l?0:1),t=a.yAxis,m=a.translatedThreshold=t.getThreshold(g.threshold),c=f(g.minPointLength,
	5),n=a.getColumnMetrics(),q=n.width,r=a.barW=Math.max(q,1+2*l),e=a.pointXOffset=n.offset;b.inverted&&(m-=.5);g.pointPadding&&(r=Math.ceil(r));u.prototype.translate.apply(a);H(a.points,function(d){var g=f(d.yBottom,m),n=999+Math.abs(g),n=Math.min(Math.max(-n,d.plotY),t.len+n),h=d.plotX+e,l=r,p=Math.min(n,g),z,x=Math.max(n,g)-p;Math.abs(x)<c&&c&&(x=c,z=!t.reversed&&!d.negative||t.reversed&&d.negative,p=Math.abs(p-m)>c?g-c:m-(z?c:0));d.barX=h;d.pointWidth=q;d.tooltipPos=b.inverted?[t.len+t.pos-b.plotLeft-
	n,a.xAxis.len-h-l/2,x]:[h+l/2,n+t.pos-b.plotTop,x];d.shapeType="rect";d.shapeArgs=a.crispCol.apply(a,d.isNull?[d.plotX,t.len/2,0,0]:[h,p,l,x])})},getSymbol:a.noop,drawLegendSymbol:a.LegendSymbolMixin.drawRectangle,drawGraph:function(){this.group[this.dense?"addClass":"removeClass"]("highcharts-dense-data")},pointAttribs:function(a,b){var d=this.options,f,g=this.pointAttrToOptions||{};f=g.stroke||"borderColor";var m=g["stroke-width"]||"borderWidth",c=a&&a.color||this.color,n=a[f]||d[f]||this.color||
	c,l=a[m]||d[m]||this[m]||0,g=d.dashStyle;a&&this.zones.length&&(c=(c=a.getZone())&&c.color||a.options.color||this.color);b&&(a=d.states[b],b=a.brightness,c=a.color||void 0!==b&&A(c).brighten(a.brightness).get()||c,n=a[f]||n,l=a[m]||l,g=a.dashStyle||g);f={fill:c,stroke:n,"stroke-width":l};d.borderRadius&&(f.r=d.borderRadius);g&&(f.dashstyle=g);return f},drawPoints:function(){var a=this,b=this.chart,f=a.options,l=b.renderer,t=f.animationLimit||250,m;H(a.points,function(c){var d=c.graphic;if(r(c.plotY)&&
	null!==c.y){m=c.shapeArgs;if(d)d[b.pointCount<t?"animate":"attr"](g(m));else c.graphic=d=l[c.shapeType](m).attr({"class":c.getClassName()}).add(c.group||a.group);d.attr(a.pointAttribs(c,c.selected&&"select")).shadow(f.shadow,null,f.stacking&&!f.borderRadius)}else d&&(c.graphic=d.destroy())})},animate:function(a){var b=this,d=this.yAxis,f=b.options,g=this.chart.inverted,m={};q&&(a?(m.scaleY=.001,a=Math.min(d.pos+d.len,Math.max(d.pos,d.toPixels(f.threshold))),g?m.translateX=a-d.len:m.translateY=a,b.group.attr(m)):
	(m[g?"translateX":"translateY"]=d.pos,b.group.animate(m,G(B(b.options.animation),{step:function(a,d){b.group.attr({scaleY:Math.max(.001,d.pos)})}})),b.animate=null))},remove:function(){var a=this,b=a.chart;b.hasRendered&&H(b.series,function(b){b.type===a.type&&(b.isDirty=!0)});u.prototype.remove.apply(a,arguments)}})})(L);(function(a){a=a.seriesType;a("bar","column",null,{inverted:!0})})(L);(function(a){var B=a.Series;a=a.seriesType;a("scatter","line",{lineWidth:0,marker:{enabled:!0},tooltip:{headerFormat:'\x3cspan style\x3d"color:{point.color}"\x3e\u25cf\x3c/span\x3e \x3cspan style\x3d"font-size: 0.85em"\x3e {series.name}\x3c/span\x3e\x3cbr/\x3e',
	pointFormat:"x: \x3cb\x3e{point.x}\x3c/b\x3e\x3cbr/\x3ey: \x3cb\x3e{point.y}\x3c/b\x3e\x3cbr/\x3e"}},{sorted:!1,requireSorting:!1,noSharedTooltip:!0,trackerGroups:["group","markerGroup","dataLabelsGroup"],takeOrdinalPosition:!1,kdDimensions:2,drawGraph:function(){this.options.lineWidth&&B.prototype.drawGraph.call(this)}})})(L);(function(a){var B=a.pick,A=a.relativeLength;a.CenteredSeriesMixin={getCenter:function(){var a=this.options,G=this.chart,r=2*(a.slicedOffset||0),g=G.plotWidth-2*r,G=G.plotHeight-
	2*r,f=a.center,f=[B(f[0],"50%"),B(f[1],"50%"),a.size||"100%",a.innerSize||0],u=Math.min(g,G),l,q;for(l=0;4>l;++l)q=f[l],a=2>l||2===l&&/%$/.test(q),f[l]=A(q,[g,G,u,f[2]][l])+(a?r:0);f[3]>f[2]&&(f[3]=f[2]);return f}}})(L);(function(a){var B=a.addEvent,A=a.defined,H=a.each,G=a.extend,r=a.inArray,g=a.noop,f=a.pick,u=a.Point,l=a.Series,q=a.seriesType,d=a.setAnimation;q("pie","line",{center:[null,null],clip:!1,colorByPoint:!0,dataLabels:{distance:30,enabled:!0,formatter:function(){return null===this.y?
	void 0:this.point.name},x:0},ignoreHiddenPoint:!0,legendType:"point",marker:null,size:null,showInLegend:!1,slicedOffset:10,stickyTracking:!1,tooltip:{followPointer:!0},borderColor:"#ffffff",borderWidth:1,states:{hover:{brightness:.1,shadow:!1}}},{isCartesian:!1,requireSorting:!1,directTouch:!0,noSharedTooltip:!0,trackerGroups:["group","dataLabelsGroup"],axisTypes:[],pointAttribs:a.seriesTypes.column.prototype.pointAttribs,animate:function(a){var b=this,d=b.points,f=b.startAngleRad;a||(H(d,function(a){var c=
	a.graphic,d=a.shapeArgs;c&&(c.attr({r:a.startR||b.center[3]/2,start:f,end:f}),c.animate({r:d.r,start:d.start,end:d.end},b.options.animation))}),b.animate=null)},updateTotals:function(){var a,d=0,f=this.points,g=f.length,m,c=this.options.ignoreHiddenPoint;for(a=0;a<g;a++)m=f[a],0>m.y&&(m.y=null),d+=c&&!m.visible?0:m.y;this.total=d;for(a=0;a<g;a++)m=f[a],m.percentage=0<d&&(m.visible||!c)?m.y/d*100:0,m.total=d},generatePoints:function(){l.prototype.generatePoints.call(this);this.updateTotals()},translate:function(a){this.generatePoints();
	var b=0,d=this.options,g=d.slicedOffset,m=g+(d.borderWidth||0),c,n,l,q=d.startAngle||0,e=this.startAngleRad=Math.PI/180*(q-90),q=(this.endAngleRad=Math.PI/180*(f(d.endAngle,q+360)-90))-e,r=this.points,u=d.dataLabels.distance,d=d.ignoreHiddenPoint,w,h=r.length,y;a||(this.center=a=this.getCenter());this.getX=function(b,c){l=Math.asin(Math.min((b-a[1])/(a[2]/2+u),1));return a[0]+(c?-1:1)*Math.cos(l)*(a[2]/2+u)};for(w=0;w<h;w++){y=r[w];c=e+b*q;if(!d||y.visible)b+=y.percentage/100;n=e+b*q;y.shapeType=
	"arc";y.shapeArgs={x:a[0],y:a[1],r:a[2]/2,innerR:a[3]/2,start:Math.round(1E3*c)/1E3,end:Math.round(1E3*n)/1E3};l=(n+c)/2;l>1.5*Math.PI?l-=2*Math.PI:l<-Math.PI/2&&(l+=2*Math.PI);y.slicedTranslation={translateX:Math.round(Math.cos(l)*g),translateY:Math.round(Math.sin(l)*g)};c=Math.cos(l)*a[2]/2;n=Math.sin(l)*a[2]/2;y.tooltipPos=[a[0]+.7*c,a[1]+.7*n];y.half=l<-Math.PI/2||l>Math.PI/2?1:0;y.angle=l;m=Math.min(m,u/5);y.labelPos=[a[0]+c+Math.cos(l)*u,a[1]+n+Math.sin(l)*u,a[0]+c+Math.cos(l)*m,a[1]+n+Math.sin(l)*
	m,a[0]+c,a[1]+n,0>u?"center":y.half?"right":"left",l]}},drawGraph:null,drawPoints:function(){var a=this,d=a.chart.renderer,f,g,m,c,n=a.options.shadow;n&&!a.shadowGroup&&(a.shadowGroup=d.g("shadow").add(a.group));H(a.points,function(b){if(null!==b.y){g=b.graphic;c=b.shapeArgs;f=b.sliced?b.slicedTranslation:{};var l=b.shadowGroup;n&&!l&&(l=b.shadowGroup=d.g("shadow").add(a.shadowGroup));l&&l.attr(f);m=a.pointAttribs(b,b.selected&&"select");g?g.setRadialReference(a.center).attr(m).animate(G(c,f)):(b.graphic=
	g=d[b.shapeType](c).addClass(b.getClassName()).setRadialReference(a.center).attr(f).add(a.group),b.visible||g.attr({visibility:"hidden"}),g.attr(m).attr({"stroke-linejoin":"round"}).shadow(n,l))}})},searchPoint:g,sortByAngle:function(a,d){a.sort(function(a,b){return void 0!==a.angle&&(b.angle-a.angle)*d})},drawLegendSymbol:a.LegendSymbolMixin.drawRectangle,getCenter:a.CenteredSeriesMixin.getCenter,getSymbol:g},{init:function(){u.prototype.init.apply(this,arguments);var a=this,d;a.name=f(a.name,"Slice");
	d=function(b){a.slice("select"===b.type)};B(a,"select",d);B(a,"unselect",d);return a},setVisible:function(a,d){var b=this,g=b.series,m=g.chart,c=g.options.ignoreHiddenPoint;d=f(d,c);a!==b.visible&&(b.visible=b.options.visible=a=void 0===a?!b.visible:a,g.options.data[r(b,g.data)]=b.options,H(["graphic","dataLabel","connector","shadowGroup"],function(c){if(b[c])b[c][a?"show":"hide"](!0)}),b.legendItem&&m.legend.colorizeItem(b,a),a||"hover"!==b.state||b.setState(""),c&&(g.isDirty=!0),d&&m.redraw())},
	slice:function(a,g,l){var b=this.series;d(l,b.chart);f(g,!0);this.sliced=this.options.sliced=a=A(a)?a:!this.sliced;b.options.data[r(this,b.data)]=this.options;a=a?this.slicedTranslation:{translateX:0,translateY:0};this.graphic.animate(a);this.shadowGroup&&this.shadowGroup.animate(a)},haloPath:function(a){var b=this.shapeArgs;return this.sliced||!this.visible?[]:this.series.chart.renderer.symbols.arc(b.x,b.y,b.r+a,b.r+a,{innerR:this.shapeArgs.r,start:b.start,end:b.end})}})})(L);(function(a){var B=
	a.addEvent,A=a.arrayMax,H=a.defined,G=a.each,r=a.extend,g=a.format,f=a.map,u=a.merge,l=a.noop,q=a.pick,d=a.relativeLength,b=a.Series,p=a.seriesTypes,C=a.stableSort;a.distribute=function(a,b){function c(a,b){return a.target-b.target}var d,g=!0,m=a,e=[],l;l=0;for(d=a.length;d--;)l+=a[d].size;if(l>b){C(a,function(a,b){return(b.rank||0)-(a.rank||0)});for(l=d=0;l<=b;)l+=a[d].size,d++;e=a.splice(d-1,a.length)}C(a,c);for(a=f(a,function(a){return{size:a.size,targets:[a.target]}});g;){for(d=a.length;d--;)g=
	a[d],l=(Math.min.apply(0,g.targets)+Math.max.apply(0,g.targets))/2,g.pos=Math.min(Math.max(0,l-g.size/2),b-g.size);d=a.length;for(g=!1;d--;)0<d&&a[d-1].pos+a[d-1].size>a[d].pos&&(a[d-1].size+=a[d].size,a[d-1].targets=a[d-1].targets.concat(a[d].targets),a[d-1].pos+a[d-1].size>b&&(a[d-1].pos=b-a[d-1].size),a.splice(d,1),g=!0)}d=0;G(a,function(a){var b=0;G(a.targets,function(){m[d].pos=a.pos+b;b+=m[d].size;d++})});m.push.apply(m,e);C(m,c)};b.prototype.drawDataLabels=function(){var a=this,b=a.options,
	c=b.dataLabels,d=a.points,f,l,e=a.hasRendered||0,p,r,w=q(c.defer,!0),h=a.chart.renderer;if(c.enabled||a._hasPointLabels)a.dlProcessOptions&&a.dlProcessOptions(c),r=a.plotGroup("dataLabelsGroup","data-labels",w&&!e?"hidden":"visible",c.zIndex||6),w&&(r.attr({opacity:+e}),e||B(a,"afterAnimate",function(){a.visible&&r.show(!0);r[b.animation?"animate":"attr"]({opacity:1},{duration:200})})),l=c,G(d,function(e){var d,m=e.dataLabel,n,k,t,z=e.connector,w=!m,x;f=e.dlOptions||e.options&&e.options.dataLabels;
	if(d=q(f&&f.enabled,l.enabled)&&null!==e.y)for(k in c=u(l,f),n=e.getLabelConfig(),p=c.format?g(c.format,n):c.formatter.call(n,c),x=c.style,t=c.rotation,x.color=q(c.color,x.color,a.color,"#000000"),"contrast"===x.color&&(x.color=c.inside||0>c.distance||b.stacking?h.getContrast(e.color||a.color):"#000000"),b.cursor&&(x.cursor=b.cursor),n={fill:c.backgroundColor,stroke:c.borderColor,"stroke-width":c.borderWidth,r:c.borderRadius||0,rotation:t,padding:c.padding,zIndex:1},n)void 0===n[k]&&delete n[k];!m||
	d&&H(p)?d&&H(p)&&(m?n.text=p:(m=e.dataLabel=h[t?"text":"label"](p,0,-9999,c.shape,null,null,c.useHTML,null,"data-label"),m.addClass("highcharts-data-label-color-"+e.colorIndex+" "+(c.className||"")+(c.useHTML?"highcharts-tracker":""))),m.attr(n),m.css(x).shadow(c.shadow),m.added||m.add(r),a.alignDataLabel(e,m,c,null,w)):(e.dataLabel=m.destroy(),z&&(e.connector=z.destroy()))})};b.prototype.alignDataLabel=function(a,b,c,d,f){var g=this.chart,e=g.inverted,m=q(a.plotX,-9999),n=q(a.plotY,-9999),l=b.getBBox(),
	h,p=c.rotation,t=c.align,u=this.visible&&(a.series.forceDL||g.isInsidePlot(m,Math.round(n),e)||d&&g.isInsidePlot(m,e?d.x+1:d.y+d.height-1,e)),E="justify"===q(c.overflow,"justify");u&&(h=c.style.fontSize,h=g.renderer.fontMetrics(h,b).b,d=r({x:e?g.plotWidth-n:m,y:Math.round(e?g.plotHeight-m:n),width:0,height:0},d),r(c,{width:l.width,height:l.height}),p?(E=!1,e=g.renderer.rotCorr(h,p),e={x:d.x+c.x+d.width/2+e.x,y:d.y+c.y+{top:0,middle:.5,bottom:1}[c.verticalAlign]*d.height},b[f?"attr":"animate"](e).attr({align:t}),
	m=(p+720)%360,m=180<m&&360>m,"left"===t?e.y-=m?l.height:0:"center"===t?(e.x-=l.width/2,e.y-=l.height/2):"right"===t&&(e.x-=l.width,e.y-=m?0:l.height)):(b.align(c,null,d),e=b.alignAttr),E?this.justifyDataLabel(b,c,e,l,d,f):q(c.crop,!0)&&(u=g.isInsidePlot(e.x,e.y)&&g.isInsidePlot(e.x+l.width,e.y+l.height)),c.shape&&!p&&b.attr({anchorX:a.plotX,anchorY:a.plotY}));u||(b.attr({y:-9999}),b.placed=!1)};b.prototype.justifyDataLabel=function(a,b,c,d,f,g){var e=this.chart,m=b.align,n=b.verticalAlign,l,h,p=a.box?
	0:a.padding||0;l=c.x+p;0>l&&("right"===m?b.align="left":b.x=-l,h=!0);l=c.x+d.width-p;l>e.plotWidth&&("left"===m?b.align="right":b.x=e.plotWidth-l,h=!0);l=c.y+p;0>l&&("bottom"===n?b.verticalAlign="top":b.y=-l,h=!0);l=c.y+d.height-p;l>e.plotHeight&&("top"===n?b.verticalAlign="bottom":b.y=e.plotHeight-l,h=!0);h&&(a.placed=!g,a.align(b,null,f))};p.pie&&(p.pie.prototype.drawDataLabels=function(){var d=this,g=d.data,c,l=d.chart,p=d.options.dataLabels,r=q(p.connectorPadding,10),e=q(p.connectorWidth,1),u=
	l.plotWidth,F=l.plotHeight,w,h=p.distance,y=d.center,C=y[2]/2,B=y[1],H=0<h,k,D,L,N,S=[[],[]],O,v,M,Q,R=[0,0,0,0];d.visible&&(p.enabled||d._hasPointLabels)&&(b.prototype.drawDataLabels.apply(d),G(g,function(a){a.dataLabel&&a.visible&&(S[a.half].push(a),a.dataLabel._pos=null)}),G(S,function(b,e){var g,m,n=b.length,q,t,z;if(n)for(d.sortByAngle(b,e-.5),0<h&&(g=Math.max(0,B-C-h),m=Math.min(B+C+h,l.plotHeight),q=f(b,function(a){if(a.dataLabel)return z=a.dataLabel.getBBox().height||21,{target:a.labelPos[1]-
	g+z/2,size:z,rank:a.y}}),a.distribute(q,m+z-g)),Q=0;Q<n;Q++)c=b[Q],L=c.labelPos,k=c.dataLabel,M=!1===c.visible?"hidden":"inherit",t=L[1],q?void 0===q[Q].pos?M="hidden":(N=q[Q].size,v=g+q[Q].pos):v=t,O=p.justify?y[0]+(e?-1:1)*(C+h):d.getX(v<g+2||v>m-2?t:v,e),k._attr={visibility:M,align:L[6]},k._pos={x:O+p.x+({left:r,right:-r}[L[6]]||0),y:v+p.y-10},L.x=O,L.y=v,null===d.options.size&&(D=k.width,O-D<r?R[3]=Math.max(Math.round(D-O+r),R[3]):O+D>u-r&&(R[1]=Math.max(Math.round(O+D-u+r),R[1])),0>v-N/2?R[0]=
	Math.max(Math.round(-v+N/2),R[0]):v+N/2>F&&(R[2]=Math.max(Math.round(v+N/2-F),R[2])))}),0===A(R)||this.verifyDataLabelOverflow(R))&&(this.placeDataLabels(),H&&e&&G(this.points,function(a){var b;w=a.connector;if((k=a.dataLabel)&&k._pos&&a.visible){M=k._attr.visibility;if(b=!w)a.connector=w=l.renderer.path().addClass("highcharts-data-label-connector highcharts-color-"+a.colorIndex).add(d.dataLabelsGroup),w.attr({"stroke-width":e,stroke:p.connectorColor||a.color||"#666666"});w[b?"attr":"animate"]({d:d.connectorPath(a.labelPos)});
	w.attr("visibility",M)}else w&&(a.connector=w.destroy())}))},p.pie.prototype.connectorPath=function(a){var b=a.x,c=a.y;return q(this.options.dataLabels.softConnector,!0)?["M",b+("left"===a[6]?5:-5),c,"C",b,c,2*a[2]-a[4],2*a[3]-a[5],a[2],a[3],"L",a[4],a[5]]:["M",b+("left"===a[6]?5:-5),c,"L",a[2],a[3],"L",a[4],a[5]]},p.pie.prototype.placeDataLabels=function(){G(this.points,function(a){var b=a.dataLabel;b&&a.visible&&((a=b._pos)?(b.attr(b._attr),b[b.moved?"animate":"attr"](a),b.moved=!0):b&&b.attr({y:-9999}))})},
	p.pie.prototype.alignDataLabel=l,p.pie.prototype.verifyDataLabelOverflow=function(a){var b=this.center,c=this.options,f=c.center,g=c.minSize||80,l,e;null!==f[0]?l=Math.max(b[2]-Math.max(a[1],a[3]),g):(l=Math.max(b[2]-a[1]-a[3],g),b[0]+=(a[3]-a[1])/2);null!==f[1]?l=Math.max(Math.min(l,b[2]-Math.max(a[0],a[2])),g):(l=Math.max(Math.min(l,b[2]-a[0]-a[2]),g),b[1]+=(a[0]-a[2])/2);l<b[2]?(b[2]=l,b[3]=Math.min(d(c.innerSize||0,l),l),this.translate(b),this.drawDataLabels&&this.drawDataLabels()):e=!0;return e});
	p.column&&(p.column.prototype.alignDataLabel=function(a,d,c,f,g){var l=this.chart.inverted,e=a.series,m=a.dlBox||a.shapeArgs,n=q(a.below,a.plotY>q(this.translatedThreshold,e.yAxis.len)),p=q(c.inside,!!this.options.stacking);m&&(f=u(m),0>f.y&&(f.height+=f.y,f.y=0),m=f.y+f.height-e.yAxis.len,0<m&&(f.height-=m),l&&(f={x:e.yAxis.len-f.y-f.height,y:e.xAxis.len-f.x-f.width,width:f.height,height:f.width}),p||(l?(f.x+=n?0:f.width,f.width=0):(f.y+=n?f.height:0,f.height=0)));c.align=q(c.align,!l||p?"center":
	n?"right":"left");c.verticalAlign=q(c.verticalAlign,l||p?"middle":n?"top":"bottom");b.prototype.alignDataLabel.call(this,a,d,c,f,g)})})(L);(function(a){var B=a.Chart,A=a.each,H=a.pick,G=a.addEvent;B.prototype.callbacks.push(function(a){function g(){var f=[];A(a.series,function(a){var g=a.options.dataLabels,q=a.dataLabelCollections||["dataLabel"];(g.enabled||a._hasPointLabels)&&!g.allowOverlap&&a.visible&&A(q,function(d){A(a.points,function(a){a[d]&&(a[d].labelrank=H(a.labelrank,a.shapeArgs&&a.shapeArgs.height),
	f.push(a[d]))})})});a.hideOverlappingLabels(f)}g();G(a,"redraw",g)});B.prototype.hideOverlappingLabels=function(a){var g=a.length,f,r,l,q,d,b,p,C,t,m=function(a,b,d,f,e,g,l,m){return!(e>a+d||e+l<a||g>b+f||g+m<b)};for(r=0;r<g;r++)if(f=a[r])f.oldOpacity=f.opacity,f.newOpacity=1;a.sort(function(a,b){return(b.labelrank||0)-(a.labelrank||0)});for(r=0;r<g;r++)for(l=a[r],f=r+1;f<g;++f)if(q=a[f],l&&q&&l.placed&&q.placed&&0!==l.newOpacity&&0!==q.newOpacity&&(d=l.alignAttr,b=q.alignAttr,p=l.parentGroup,C=q.parentGroup,
	t=2*(l.box?0:l.padding),d=m(d.x+p.translateX,d.y+p.translateY,l.width-t,l.height-t,b.x+C.translateX,b.y+C.translateY,q.width-t,q.height-t)))(l.labelrank<q.labelrank?l:q).newOpacity=0;A(a,function(a){var b,c;a&&(c=a.newOpacity,a.oldOpacity!==c&&a.placed&&(c?a.show(!0):b=function(){a.hide()},a.alignAttr.opacity=c,a[a.isOld?"animate":"attr"](a.alignAttr,null,b)),a.isOld=!0)})}})(L);(function(a){var B=a.addEvent,A=a.Chart,H=a.createElement,G=a.css,r=a.defaultOptions,g=a.defaultPlotOptions,f=a.each,u=
	a.extend,l=a.fireEvent,q=a.hasTouch,d=a.inArray,b=a.isObject,p=a.Legend,C=a.merge,t=a.pick,m=a.Point,c=a.Series,n=a.seriesTypes,E=a.svg;a=a.TrackerMixin={drawTrackerPoint:function(){var a=this,b=a.chart,c=b.pointer,d=function(a){for(var c=a.target,e;c&&!e;)e=c.point,c=c.parentNode;if(void 0!==e&&e!==b.hoverPoint)e.onMouseOver(a)};f(a.points,function(a){a.graphic&&(a.graphic.element.point=a);a.dataLabel&&(a.dataLabel.div?a.dataLabel.div.point=a:a.dataLabel.element.point=a)});a._hasTracking||(f(a.trackerGroups,
	function(b){if(a[b]){a[b].addClass("highcharts-tracker").on("mouseover",d).on("mouseout",function(a){c.onTrackerMouseOut(a)});if(q)a[b].on("touchstart",d);a.options.cursor&&a[b].css(G).css({cursor:a.options.cursor})}}),a._hasTracking=!0)},drawTrackerGraph:function(){var a=this,b=a.options,c=b.trackByArea,d=[].concat(c?a.areaPath:a.graphPath),g=d.length,h=a.chart,l=h.pointer,m=h.renderer,n=h.options.tooltip.snap,p=a.tracker,k,r=function(){if(h.hoverSeries!==a)a.onMouseOver()},t="rgba(192,192,192,"+
	(E?.0001:.002)+")";if(g&&!c)for(k=g+1;k--;)"M"===d[k]&&d.splice(k+1,0,d[k+1]-n,d[k+2],"L"),(k&&"M"===d[k]||k===g)&&d.splice(k,0,"L",d[k-2]+n,d[k-1]);p?p.attr({d:d}):a.graph&&(a.tracker=m.path(d).attr({"stroke-linejoin":"round",visibility:a.visible?"visible":"hidden",stroke:t,fill:c?t:"none","stroke-width":a.graph.strokeWidth()+(c?0:2*n),zIndex:2}).add(a.group),f([a.tracker,a.markerGroup],function(a){a.addClass("highcharts-tracker").on("mouseover",r).on("mouseout",function(a){l.onTrackerMouseOut(a)});
	b.cursor&&a.css({cursor:b.cursor});if(q)a.on("touchstart",r)}))}};n.column&&(n.column.prototype.drawTracker=a.drawTrackerPoint);n.pie&&(n.pie.prototype.drawTracker=a.drawTrackerPoint);n.scatter&&(n.scatter.prototype.drawTracker=a.drawTrackerPoint);u(p.prototype,{setItemEvents:function(a,b,c){var e=this,d=e.chart,f="highcharts-legend-"+(a.series?"point":"series")+"-active";(c?b:a.legendGroup).on("mouseover",function(){a.setState("hover");d.seriesGroup.addClass(f);b.css(e.options.itemHoverStyle)}).on("mouseout",
	function(){b.css(a.visible?e.itemStyle:e.itemHiddenStyle);d.seriesGroup.removeClass(f);a.setState()}).on("click",function(b){var c=function(){a.setVisible&&a.setVisible()};b={browserEvent:b};a.firePointEvent?a.firePointEvent("legendItemClick",b,c):l(a,"legendItemClick",b,c)})},createCheckboxForItem:function(a){a.checkbox=H("input",{type:"checkbox",checked:a.selected,defaultChecked:a.selected},this.options.itemCheckboxStyle,this.chart.container);B(a.checkbox,"click",function(b){l(a.series||a,"checkboxClick",
	{checked:b.target.checked,item:a},function(){a.select()})})}});r.legend.itemStyle.cursor="pointer";u(A.prototype,{showResetZoom:function(){var a=this,b=r.lang,c=a.options.chart.resetZoomButton,d=c.theme,f=d.states,g="chart"===c.relativeTo?null:"plotBox";this.resetZoomButton=a.renderer.button(b.resetZoom,null,null,function(){a.zoomOut()},d,f&&f.hover).attr({align:c.position.align,title:b.resetZoomTitle}).addClass("highcharts-reset-zoom").add().align(c.position,!1,g)},zoomOut:function(){var a=this;
	l(a,"selection",{resetSelection:!0},function(){a.zoom()})},zoom:function(a){var c,d=this.pointer,g=!1,l;!a||a.resetSelection?f(this.axes,function(a){c=a.zoom()}):f(a.xAxis.concat(a.yAxis),function(a){var b=a.axis;d[b.isXAxis?"zoomX":"zoomY"]&&(c=b.zoom(a.min,a.max),b.displayBtn&&(g=!0))});l=this.resetZoomButton;g&&!l?this.showResetZoom():!g&&b(l)&&(this.resetZoomButton=l.destroy());c&&this.redraw(t(this.options.chart.animation,a&&a.animation,100>this.pointCount))},pan:function(a,b){var c=this,d=c.hoverPoints,
	e;d&&f(d,function(a){a.setState()});f("xy"===b?[1,0]:[1],function(b){b=c[b?"xAxis":"yAxis"][0];var d=b.horiz,f=a[d?"chartX":"chartY"],d=d?"mouseDownX":"mouseDownY",g=c[d],h=(b.pointRange||0)/2,k=b.getExtremes(),l=b.toValue(g-f,!0)+h,h=b.toValue(g+b.len-f,!0)-h,m=h<l,g=m?h:l,l=m?l:h,h=Math.min(k.dataMin,k.min)-g,k=l-Math.max(k.dataMax,k.max);b.series.length&&0>h&&0>k&&(b.setExtremes(g,l,!1,!1,{trigger:"pan"}),e=!0);c[d]=f});e&&c.redraw(!1);G(c.container,{cursor:"move"})}});u(m.prototype,{select:function(a,
	b){var c=this,e=c.series,g=e.chart;a=t(a,!c.selected);c.firePointEvent(a?"select":"unselect",{accumulate:b},function(){c.selected=c.options.selected=a;e.options.data[d(c,e.data)]=c.options;c.setState(a&&"select");b||f(g.getSelectedPoints(),function(a){a.selected&&a!==c&&(a.selected=a.options.selected=!1,e.options.data[d(a,e.data)]=a.options,a.setState(""),a.firePointEvent("unselect"))})})},onMouseOver:function(a,b){var c=this.series,d=c.chart,e=d.tooltip,f=d.hoverPoint;if(this.series){if(!b){if(f&&
	f!==this)f.onMouseOut();if(d.hoverSeries!==c)c.onMouseOver();d.hoverPoint=this}!e||e.shared&&!c.noSharedTooltip?e||this.setState("hover"):(this.setState("hover"),e.refresh(this,a));this.firePointEvent("mouseOver")}},onMouseOut:function(){var a=this.series.chart,b=a.hoverPoints;this.firePointEvent("mouseOut");b&&-1!==d(this,b)||(this.setState(),a.hoverPoint=null)},importEvents:function(){if(!this.hasImportedEvents){var a=C(this.series.options.point,this.options).events,b;this.events=a;for(b in a)B(this,
	b,a[b]);this.hasImportedEvents=!0}},setState:function(a,b){var c=Math.floor(this.plotX),d=this.plotY,e=this.series,f=e.options.states[a]||{},l=g[e.type].marker&&e.options.marker,m=l&&!1===l.enabled,n=l&&l.states&&l.states[a]||{},p=!1===n.enabled,k=e.stateMarkerGraphic,q=this.marker||{},r=e.chart,z=e.halo,C,A=l&&e.markerAttribs;a=a||"";if(!(a===this.state&&!b||this.selected&&"select"!==a||!1===f.enabled||a&&(p||m&&!1===n.enabled)||a&&q.states&&q.states[a]&&!1===q.states[a].enabled)){A&&(C=e.markerAttribs(this,
	a));if(this.graphic)this.state&&this.graphic.removeClass("highcharts-point-"+this.state),a&&this.graphic.addClass("highcharts-point-"+a),this.graphic.attr(e.pointAttribs(this,a)),C&&this.graphic.animate(C,t(r.options.chart.animation,n.animation,l.animation)),k&&k.hide();else{if(a&&n){l=q.symbol||e.symbol;k&&k.currentSymbol!==l&&(k=k.destroy());if(k)k[b?"animate":"attr"]({x:C.x,y:C.y});else l&&(e.stateMarkerGraphic=k=r.renderer.symbol(l,C.x,C.y,C.width,C.height).add(e.markerGroup),k.currentSymbol=
	l);k&&k.attr(e.pointAttribs(this,a))}k&&(k[a&&r.isInsidePlot(c,d,r.inverted)?"show":"hide"](),k.element.point=this)}(c=f.halo)&&c.size?(z||(e.halo=z=r.renderer.path().add(A?e.markerGroup:e.group)),z[b?"animate":"attr"]({d:this.haloPath(c.size)}),z.attr({"class":"highcharts-halo highcharts-color-"+t(this.colorIndex,e.colorIndex)}),z.point=this,z.attr(u({fill:this.color||e.color,"fill-opacity":c.opacity,zIndex:-1},c.attributes))):z&&z.point&&z.point.haloPath&&z.animate({d:z.point.haloPath(0)});this.state=
	a}},haloPath:function(a){return this.series.chart.renderer.symbols.circle(Math.floor(this.plotX)-a,this.plotY-a,2*a,2*a)}});u(c.prototype,{onMouseOver:function(){var a=this.chart,b=a.hoverSeries;if(b&&b!==this)b.onMouseOut();this.options.events.mouseOver&&l(this,"mouseOver");this.setState("hover");a.hoverSeries=this},onMouseOut:function(){var a=this.options,b=this.chart,c=b.tooltip,d=b.hoverPoint;b.hoverSeries=null;if(d)d.onMouseOut();this&&a.events.mouseOut&&l(this,"mouseOut");!c||a.stickyTracking||
	c.shared&&!this.noSharedTooltip||c.hide();this.setState()},setState:function(a){var b=this,c=b.options,d=b.graph,g=c.states,h=c.lineWidth,c=0;a=a||"";if(b.state!==a&&(f([b.group,b.markerGroup],function(c){c&&(b.state&&c.removeClass("highcharts-series-"+b.state),a&&c.addClass("highcharts-series-"+a))}),b.state=a,!g[a]||!1!==g[a].enabled)&&(a&&(h=g[a].lineWidth||h+(g[a].lineWidthPlus||0)),d&&!d.dashstyle))for(g={"stroke-width":h},d.attr(g);b["zone-graph-"+c];)b["zone-graph-"+c].attr(g),c+=1},setVisible:function(a,
	b){var c=this,d=c.chart,e=c.legendItem,g,m=d.options.chart.ignoreHiddenSeries,n=c.visible;g=(c.visible=a=c.options.visible=c.userOptions.visible=void 0===a?!n:a)?"show":"hide";f(["group","dataLabelsGroup","markerGroup","tracker","tt"],function(a){if(c[a])c[a][g]()});if(d.hoverSeries===c||(d.hoverPoint&&d.hoverPoint.series)===c)c.onMouseOut();e&&d.legend.colorizeItem(c,a);c.isDirty=!0;c.options.stacking&&f(d.series,function(a){a.options.stacking&&a.visible&&(a.isDirty=!0)});f(c.linkedSeries,function(b){b.setVisible(a,
	!1)});m&&(d.isDirtyBox=!0);!1!==b&&d.redraw();l(c,g)},show:function(){this.setVisible(!0)},hide:function(){this.setVisible(!1)},select:function(a){this.selected=a=void 0===a?!this.selected:a;this.checkbox&&(this.checkbox.checked=a);l(this,a?"select":"unselect")},drawTracker:a.drawTrackerGraph})})(L);(function(a){var B=a.Chart,A=a.each,H=a.inArray,G=a.isObject,r=a.pick,g=a.splat;B.prototype.setResponsive=function(a){var f=this.options.responsive;f&&f.rules&&A(f.rules,function(f){this.matchResponsiveRule(f,
	a)},this)};B.prototype.matchResponsiveRule=function(f,g){var l=this.respRules,q=f.condition,d;d=q.callback||function(){return this.chartWidth<=r(q.maxWidth,Number.MAX_VALUE)&&this.chartHeight<=r(q.maxHeight,Number.MAX_VALUE)&&this.chartWidth>=r(q.minWidth,0)&&this.chartHeight>=r(q.minHeight,0)};void 0===f._id&&(f._id=a.uniqueKey());d=d.call(this);!l[f._id]&&d?f.chartOptions&&(l[f._id]=this.currentOptions(f.chartOptions),this.update(f.chartOptions,g)):l[f._id]&&!d&&(this.update(l[f._id],g),delete l[f._id])};
	B.prototype.currentOptions=function(a){function f(a,d,b,l){var p,q;for(p in a)if(!l&&-1<H(p,["series","xAxis","yAxis"]))for(a[p]=g(a[p]),b[p]=[],q=0;q<a[p].length;q++)b[p][q]={},f(a[p][q],d[p][q],b[p][q],l+1);else G(a[p])?(b[p]={},f(a[p],d[p]||{},b[p],l+1)):b[p]=d[p]||null}var l={};f(a,this.options,l,0);return l}})(L);return L});


/***/ },
/* 461 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var format_money = __webpack_require__(440).format_money;
	var PortfolioWS = __webpack_require__(462).PortfolioWS;
	var updateContractBalance = __webpack_require__(456).updateContractBalance;
	var Client = __webpack_require__(305).Client;
	var Cashier = __webpack_require__(428).Cashier;

	var ViewBalanceUI = function () {
	    var updateBalances = function updateBalances(response) {
	        if (response.hasOwnProperty('error')) {
	            console.log(response.error.message);
	            return;
	        }
	        var balance = response.balance.balance;
	        Client.set_value('balance', balance);
	        PortfolioWS.updateBalance();
	        Cashier.check_top_up_withdraw();
	        var currency = response.balance.currency;
	        if (!currency) {
	            return;
	        }
	        var view = format_money(currency, balance);
	        updateContractBalance(balance);
	        $('.topMenuBalance').text(view).css('visibility', 'visible');
	    };

	    return {
	        updateBalances: updateBalances
	    };
	}();

	module.exports = {
	    ViewBalanceUI: ViewBalanceUI
	};

/***/ },
/* 462 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var showLoadingImage = __webpack_require__(419).showLoadingImage;
	var toJapanTimeIfNeeded = __webpack_require__(439).Clock.toJapanTimeIfNeeded;
	var format_money = __webpack_require__(440).format_money;
	var buildOauthApps = __webpack_require__(463).buildOauthApps;
	var addTooltip = __webpack_require__(463).addTooltip;
	var showTooltip = __webpack_require__(463).showTooltip;
	var japanese_client = __webpack_require__(307).japanese_client;
	var Portfolio = __webpack_require__(464).Portfolio;
	var ViewPopupWS = __webpack_require__(438).ViewPopupWS;
	var State = __webpack_require__(304).State;
	var localize = __webpack_require__(423).localize;
	var Client = __webpack_require__(305).Client;
	var url = __webpack_require__(306).url;

	var PortfolioWS = function () {
	    'use strict';

	    var values = void 0,
	        currency = void 0,
	        oauth_apps = void 0,
	        hidden_class = void 0,
	        is_initialized = void 0,
	        is_first_response = void 0;

	    var init = function init() {
	        hidden_class = 'invisible';
	        if (Client.get_value('balance')) {
	            updateBalance();
	        }

	        if (is_initialized) return;

	        values = {};
	        currency = '';
	        oauth_apps = {};
	        var $portfolio_loading = $('#portfolio-loading');
	        $portfolio_loading.show();
	        showLoadingImage($portfolio_loading);
	        is_first_response = true;
	        BinarySocket.send({ portfolio: 1 });
	        // Subscribe to transactions to auto update new purchases
	        BinarySocket.send({ transaction: 1, subscribe: 1 });
	        BinarySocket.send({ oauth_apps: 1 });
	        is_initialized = true;

	        // Display ViewPopup according to contract_id in query string
	        var contract_id = url.param('contract_id');
	        if (contract_id) {
	            ViewPopupWS.init($('<div />', { contract_id: contract_id }).get(0));
	        }
	    };

	    var createPortfolioRow = function createPortfolioRow(data, is_first) {
	        var longCode =  true ? data.longcode : japanese_client() ? toJapanTimeIfNeeded(undefined, undefined, data.longcode) : data.longcode;

	        var new_class = is_first ? '' : 'new';
	        $('#portfolio-body').prepend($('<tr class="tr-first ' + new_class + ' ' + data.contract_id + '" id="' + data.contract_id + '">' + '<td class="ref"><span' + showTooltip(data.app_id, oauth_apps[data.app_id]) + ' data-balloon-pos="right">' + data.transaction_id + '</span></td>' + '<td class="payout"><strong>' + format_money(data.currency, data.payout) + '</strong></td>' + '<td class="details">' + longCode + '</td>' + '<td class="purchase"><strong>' + format_money(data.currency, data.buy_price) + '</strong></td>' + '<td class="indicative"><strong class="indicative_price">--.--</strong></td>' + '<td class="button"><button class="button open_contract_detailsws nowrap" contract_id="' + data.contract_id + '">' + localize('View') + '</button></td>' + '</tr>' + '<tr class="tr-desc ' + new_class + ' ' + data.contract_id + '">' + '<td colspan="6">' + longCode + '</td>' + '</tr>'));
	    };

	    var updateBalance = function updateBalance() {
	        var $portfolio_balance = $('#portfolio-balance');
	        if ($portfolio_balance.length === 0) return;
	        $portfolio_balance.text(Portfolio.getBalance(Client.get_value('balance'), Client.get_value('currency')));
	        var $if_balance_zero = $('#if-balance-zero');
	        if (Client.get_value('balance') > 0 || Client.get_boolean('is_virtual')) {
	            $if_balance_zero.addClass(hidden_class);
	        } else {
	            $if_balance_zero.removeClass(hidden_class);
	            if (Client.status_detected('unwelcome, cashier_locked', 'any')) {
	                $if_balance_zero.removeAttr('href').addClass('button-disabled');
	            }
	        }
	    };

	    var updatePortfolio = function updatePortfolio(data) {
	        if (data.hasOwnProperty('error')) {
	            errorMessage(data.error.message);
	            return;
	        }

	        // no open contracts
	        if (data.portfolio.contracts.length === 0) {
	            $('#portfolio-no-contract').show();
	            $('#portfolio-table').addClass(hidden_class);
	        } else {
	            (function () {
	                /**
	                 * User has at least one contract
	                 **/
	                $('#portfolio-no-contract').hide();
	                var portfolio_data = void 0;
	                $.each(data.portfolio.contracts, function (ci, c) {
	                    if (!values.hasOwnProperty(c.contract_id)) {
	                        values[c.contract_id] = {};
	                        values[c.contract_id].buy_price = c.buy_price;
	                        portfolio_data = Portfolio.getPortfolioData(c);
	                        currency = portfolio_data.currency;
	                        createPortfolioRow(portfolio_data, is_first_response);
	                        setTimeout(function () {
	                            $('tr.' + c.contract_id).removeClass('new');
	                        }, 1000);
	                    }
	                });
	                $('#portfolio-table').removeClass(hidden_class);

	                // update footer area data
	                updateFooter();

	                // request "proposal_open_contract"
	                BinarySocket.send({ proposal_open_contract: 1, subscribe: 1 });
	            })();
	        }
	        // ready to show portfolio table
	        $('#portfolio-loading').hide();
	        $('#portfolio-content').removeClass(hidden_class);
	        is_first_response = false;
	    };

	    var transactionResponseHandler = function transactionResponseHandler(response) {
	        if (response.hasOwnProperty('error')) {
	            errorMessage(response.error.message);
	        } else if (response.transaction.action === 'buy') {
	            BinarySocket.send({ portfolio: 1 });
	        } else if (response.transaction.action === 'sell') {
	            removeContract(response.transaction.contract_id);
	        }
	    };

	    var updateIndicative = function updateIndicative(data) {
	        if (data.hasOwnProperty('error') || !values) {
	            return;
	        }

	        var proposal = Portfolio.getProposalOpenContract(data.proposal_open_contract);
	        // avoid updating 'values' before the new contract row added to the table
	        if (!values.hasOwnProperty(proposal.contract_id)) {
	            return;
	        }

	        // force to sell the expired contract, in order to remove from portfolio
	        if (+proposal.is_settleable === 1 && !proposal.is_sold) {
	            BinarySocket.send({ sell_expired: 1 });
	        }
	        var $td = $('#' + proposal.contract_id + ' td.indicative');

	        var old_indicative = values[proposal.contract_id].indicative || 0.00;
	        values[proposal.contract_id].indicative = proposal.bid_price;

	        var status_class = '',
	            no_resale_html = '';
	        if (+proposal.is_sold === 1) {
	            removeContract(proposal.contract_id);
	        } else {
	            if (+proposal.is_valid_to_sell !== 1) {
	                no_resale_html = '<span>' + localize('Resale not offered') + '</span>';
	                $td.addClass('no_resale');
	            } else {
	                status_class = values[proposal.contract_id].indicative < old_indicative ? ' price_moved_down' : values[proposal.contract_id].indicative > old_indicative ? ' price_moved_up' : '';
	                $td.removeClass('no_resale');
	            }
	            $td.html('<strong class="indicative_price' + status_class + '"">' + format_money(proposal.currency, values[proposal.contract_id].indicative) + '</strong>' + no_resale_html);
	        }

	        updateFooter();
	    };

	    var updateOAuthApps = function updateOAuthApps(response) {
	        oauth_apps = buildOauthApps(response.oauth_apps);
	        addTooltip(oauth_apps);
	    };

	    var removeContract = function removeContract(contract_id) {
	        delete values[contract_id];
	        $('tr.' + contract_id).removeClass('new').css('opacity', '0.5').fadeOut(1000, function () {
	            $(this).remove();
	            if ($('#portfolio-body').find('tr').length === 0) {
	                $('#portfolio-table').addClass(hidden_class);
	                $('#cost-of-open-positions, #value-of-open-positions').text('');
	                $('#portfolio-no-contract').show();
	            }
	        });
	        updateFooter();
	    };

	    var updateFooter = function updateFooter() {
	        $('#cost-of-open-positions').text(format_money(currency, Portfolio.getSumPurchase(values)));
	        $('#value-of-open-positions').text(format_money(currency, Portfolio.getIndicativeSum(values)));
	    };

	    var errorMessage = function errorMessage(msg) {
	        var $err = $('#portfolio').find('#error-msg');
	        if (msg) {
	            $err.removeClass(hidden_class).text(msg);
	        } else {
	            $err.addClass(hidden_class).text('');
	        }
	    };

	    var onLoad = function onLoad() {
	        if (!State.get('is_beta_trading') && !State.get('is_mb_trading')) {
	            BinarySocket.init({
	                onmessage: function onmessage(msg) {
	                    var response = JSON.parse(msg.data),
	                        msg_type = response.msg_type;

	                    switch (msg_type) {
	                        case 'portfolio':
	                            PortfolioWS.updatePortfolio(response);
	                            break;
	                        case 'transaction':
	                            PortfolioWS.transactionResponseHandler(response);
	                            break;
	                        case 'proposal_open_contract':
	                            PortfolioWS.updateIndicative(response);
	                            break;
	                        case 'oauth_apps':
	                            PortfolioWS.updateOAuthApps(response);
	                            break;
	                        default:
	                        // msg_type is not what PortfolioWS handles, so ignore it.
	                    }
	                }
	            });
	        }
	        PortfolioWS.init();
	    };

	    var onUnload = function onUnload() {
	        BinarySocket.send({ forget_all: 'proposal_open_contract' });
	        BinarySocket.send({ forget_all: 'transaction' });
	        $('#portfolio-body').empty();
	        $('#portfolio-content').addClass(hidden_class);
	        is_initialized = false;
	    };

	    return {
	        init: init,
	        updateBalance: updateBalance,
	        updatePortfolio: updatePortfolio,
	        updateIndicative: updateIndicative,
	        updateOAuthApps: updateOAuthApps,
	        transactionResponseHandler: transactionResponseHandler,
	        onLoad: onLoad,
	        onUnload: onUnload
	    };
	}();

	module.exports = {
	    PortfolioWS: PortfolioWS
	};

/***/ },
/* 463 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var template = __webpack_require__(419).template;
	var localize = __webpack_require__(423).localize;

	var buildOauthApps = function buildOauthApps(data) {
	    var oauth_apps = {};
	    if (data) {
	        for (var i = 0; i < data.length; i++) {
	            oauth_apps[data[i].app_id] = data[i].name;
	        }
	    }
	    oauth_apps[2] = 'Binary.com Autoexpiry';
	    return oauth_apps;
	};

	var addTooltip = function addTooltip(oauth_apps) {
	    var keys = Object.keys(oauth_apps);
	    keys.forEach(function (key) {
	        if (oauth_apps.hasOwnProperty(key)) {
	            $('.' + key).attr('data-balloon', add_app_id_name(key, oauth_apps[key]));
	        }
	    });
	};

	var add_app_id_name = function add_app_id_name(app_id, app_name) {
	    var ref_string = void 0;
	    if (app_id) {
	        ref_string = template(localize('Transaction performed by [_1] (App ID: [_2])'), [app_name || '', app_id]);
	    }
	    return ref_string;
	};

	var showTooltip = function showTooltip(app_id, oauth_app_id) {
	    return app_id ? ' class="' + app_id + '" data-balloon="' + (oauth_app_id ? add_app_id_name(app_id, oauth_app_id) : app_id ? add_app_id_name(app_id) : '') + '"' : '';
	};

	module.exports = {
	    buildOauthApps: buildOauthApps,
	    addTooltip: addTooltip,
	    showTooltip: showTooltip
	};

/***/ },
/* 464 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var toJapanTimeIfNeeded = __webpack_require__(439).Clock.toJapanTimeIfNeeded;
	var format_money = __webpack_require__(440).format_money;
	var japanese_client = __webpack_require__(307).japanese_client;

	var Portfolio = function () {
	    'use strict';

	    var getBalance = function getBalance(balance, currency) {
	        balance = parseFloat(balance);
	        return currency ? format_money(currency, balance) : balance;
	    };

	    var getPortfolioData = function getPortfolioData(c) {
	        return {
	            transaction_id: c.transaction_id,
	            contract_id: c.contract_id,
	            payout: parseFloat(c.payout).toFixed(2),
	            longcode:  true ? c.longcode : japanese_client() ? toJapanTimeIfNeeded(undefined, undefined, c.longcode) : c.longcode,
	            currency: c.currency,
	            buy_price: c.buy_price,
	            app_id: c.app_id
	        };
	    };

	    var getProposalOpenContract = function getProposalOpenContract(proposal) {
	        return {
	            contract_id: proposal.contract_id,
	            bid_price: parseFloat(proposal.bid_price || 0).toFixed(2),
	            is_sold: proposal.is_sold,
	            is_valid_to_sell: proposal.is_valid_to_sell,
	            currency: proposal.currency
	        };
	    };

	    var getSum = function getSum(values, value_type) {
	        // value_type is: indicative or buy_price
	        var sum = 0;
	        var keys = Object.keys(values);
	        for (var i = 0; i < keys.length; i++) {
	            var key = keys[i];
	            if (values[key] && !isNaN(values[key][value_type])) {
	                sum += parseFloat(values[key][value_type]);
	            }
	        }

	        return sum.toFixed(2);
	    };

	    return {
	        getBalance: getBalance,
	        getPortfolioData: getPortfolioData,
	        getProposalOpenContract: getProposalOpenContract,
	        getIndicativeSum: function getIndicativeSum(values) {
	            return getSum(values, 'indicative');
	        },
	        getSumPurchase: function getSumPurchase(values) {
	            return getSum(values, 'buy_price');
	        }
	    };
	}();

	module.exports = {
	    Portfolio: Portfolio
	};

/***/ },
/* 465 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var TradingAnalysis = __webpack_require__(466).TradingAnalysis;
	var displayCurrencies = __webpack_require__(469).displayCurrencies;
	var Defaults = __webpack_require__(457).Defaults;
	var TradingEvents = __webpack_require__(470).TradingEvents;
	var Message = __webpack_require__(497).Message;
	var Notifications = __webpack_require__(458).Notifications;
	var Price = __webpack_require__(474).Price;
	var Symbols = __webpack_require__(459).Symbols;
	var forgetTradingStreams = __webpack_require__(476).forgetTradingStreams;
	var Content = __webpack_require__(426).Content;
	var Guide = __webpack_require__(507).Guide;
	var japanese_client = __webpack_require__(307).japanese_client;
	var State = __webpack_require__(304).State;
	var showPriceOverlay = __webpack_require__(456).showPriceOverlay;
	var showFormOverlay = __webpack_require__(456).showFormOverlay;
	var addEventListenerForm = __webpack_require__(456).addEventListenerForm;
	var chartFrameCleanup = __webpack_require__(456).chartFrameCleanup;
	var localize = __webpack_require__(423).localize;
	var url_for = __webpack_require__(306).url_for;

	var TradePage = function () {
	    var events_initialized = 0;
	    State.remove('is_trading');

	    var onLoad = function onLoad() {
	        if (japanese_client() && /\/trading\.html/i.test(window.location.pathname)) {
	            window.location.href = url_for('multi_barriers_trading');
	            return;
	        } else if (!japanese_client() && /\/multi_barriers_trading\.html/.test(window.location.pathname)) {
	            window.location.href = url_for('trading');
	            return;
	        }
	        State.set('is_trading', true);
	        if (sessionStorage.getItem('currencies')) {
	            displayCurrencies();
	        }
	        BinarySocket.init({
	            onmessage: function onmessage(msg) {
	                Message.process(msg);
	            },
	            onopen: function onopen() {
	                Notifications.hide('CONNECTION_ERROR');
	            }
	        });
	        Price.clearFormId();
	        if (events_initialized === 0) {
	            events_initialized = 1;
	            TradingEvents.init();
	        }
	        Content.populate();

	        if (sessionStorage.getItem('currencies')) {
	            displayCurrencies();
	            Symbols.getSymbols(1);
	        } else {
	            BinarySocket.send({ payout_currencies: 1 });
	        }

	        if (document.getElementById('websocket_form')) {
	            addEventListenerForm();
	        }

	        // Walk-through Guide
	        Guide.init({
	            script: 'trading'
	        });
	        TradingAnalysis.bindAnalysisTabEvent();
	        $('#tab_portfolio').find('a').text(localize('Portfolio'));
	        $('#tab_graph').find('a').text(localize('Chart'));
	        $('#tab_explanation').find('a').text(localize('Explanation'));
	        $('#tab_last_digit').find('a').text(localize('Last Digit Stats'));
	    };

	    var reload = function reload() {
	        sessionStorage.removeItem('underlying');
	        window.location.reload();
	    };

	    var onUnload = function onUnload() {
	        State.remove('is_trading');
	        events_initialized = 0;
	        forgetTradingStreams();
	        BinarySocket.clear();
	        Defaults.clear();
	        chartFrameCleanup();
	    };

	    var onDisconnect = function onDisconnect() {
	        showPriceOverlay();
	        showFormOverlay();
	        chartFrameCleanup();
	        onLoad();
	    };

	    return {
	        onLoad: onLoad,
	        reload: reload,
	        onUnload: onUnload,
	        onDisconnect: onDisconnect
	    };
	}();

	module.exports = {
	    TradePage: TradePage
	};

/***/ },
/* 466 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var DigitInfoWS = __webpack_require__(467).DigitInfoWS;
	var JapanPortfolio = __webpack_require__(468).JapanPortfolio;
	var State = __webpack_require__(304).State;
	var getLanguage = __webpack_require__(303).getLanguage;
	var toggleActiveNavMenuElement = __webpack_require__(456).toggleActiveNavMenuElement;
	var showHighchart = __webpack_require__(456).showHighchart;
	var Url = __webpack_require__(306).Url;
	var url_for = __webpack_require__(306).url_for;
	var url_for_static = __webpack_require__(306).url_for_static;
	var elementInnerHtml = __webpack_require__(420).elementInnerHtml;

	/*
	 * This file contains the code related to loading of trading page bottom analysis
	 * content. It will contain jquery so as to compatible with old code and less rewrite
	 *
	 * Please note that this will be removed in near future
	 */

	/*
	 * This function is called whenever we change market, form
	 * or underlying to load bet analysis for that particular event
	 */

	var TradingAnalysis = function () {
	    var trading_digit_info = new DigitInfoWS();

	    var requestTradeAnalysis = function requestTradeAnalysis() {
	        var formName = State.get('is_mb_trading') ? $('#category').val() : $('#contract_form_name_nav').find('.a-active').attr('id');
	        if (formName === 'matchdiff') {
	            formName = 'digits';
	        }
	        if (formName === 'callput') {
	            formName = 'higherlower';
	        }
	        $('#tab_explanation').find('a').attr('href', url_for('trade/bet_explanation', 'underlying_symbol=' + $('#underlying').val() + '&form_name=' + formName));
	        if (formName === 'digits' || formName === 'overunder' || formName === 'evenodd') {
	            $('#tab_last_digit').removeClass('invisible');
	        } else {
	            $('#tab_last_digit').addClass('invisible');
	        }
	        sessionStorage.setItem('currentAnalysisTab', getActiveTab());
	        loadAnalysisTab();
	    };

	    /*
	     * This function bind event to link elements of bottom content
	     * navigation
	     */
	    var bindAnalysisTabEvent = function bindAnalysisTabEvent() {
	        'use strict';

	        var analysisNavElement = document.querySelector('#trading_bottom_content #betsBottomPage');
	        if (analysisNavElement) {
	            analysisNavElement.addEventListener('click', function (e) {
	                if (e.target && e.target.nodeName === 'A') {
	                    e.preventDefault();

	                    var clickedLink = e.target,
	                        clickedElement = clickedLink.parentElement,
	                        isTabActive = clickedElement.classList.contains('active');

	                    sessionStorage.setItem('currentAnalysisTab', clickedElement.id);

	                    if (!isTabActive) {
	                        loadAnalysisTab();
	                    }
	                }
	            });
	        }
	    };

	    /*
	     * This function handles all the functionality on how to load
	     * tab according to current paramerted
	     */
	    var loadAnalysisTab = function loadAnalysisTab() {
	        'use strict';

	        var currentTab = getActiveTab(),
	            currentLink = document.querySelector('#' + currentTab + ' a'),
	            contentId = document.getElementById(currentTab + '-content');

	        var analysisNavElement = document.querySelector('#trading_bottom_content #betsBottomPage');
	        toggleActiveNavMenuElement(analysisNavElement, currentLink.parentElement);
	        toggleActiveAnalysisTabs();

	        JapanPortfolio.init();
	        if (currentTab === 'tab_portfolio') {
	            JapanPortfolio.show();
	        } else {
	            JapanPortfolio.hide();
	            if (currentTab === 'tab_graph') {
	                showHighchart();
	            } else if (currentTab === 'tab_last_digit') {
	                var underlying = $('[name=underlying] option:selected').val() || $('#underlying').find('option:selected').val();
	                var tick = $('[name=tick_count]').val() || 100;
	                BinarySocket.send({
	                    ticks_history: underlying,
	                    count: tick + '',
	                    end: 'latest',
	                    req_id: 1
	                });
	            } else {
	                var url = currentLink.getAttribute('href');
	                $.ajax({
	                    method: 'GET',
	                    url: url
	                }).done(function (data) {
	                    elementInnerHtml(contentId, data);
	                    if (currentTab === 'tab_explanation') {
	                        showExplanation(currentLink.href);
	                    }
	                });
	            }
	        }
	    };

	    /*
	     * function to toggle the active element for analysis menu
	     */
	    var toggleActiveAnalysisTabs = function toggleActiveAnalysisTabs() {
	        'use strict';

	        var currentTab = getActiveTab(),
	            analysisContainer = document.getElementById('bet_bottom_content');

	        if (analysisContainer) {
	            var childElements = analysisContainer.children,
	                currentTabElement = document.getElementById(currentTab + '-content'),
	                classes = currentTabElement.classList;

	            for (var i = 0, len = childElements.length; i < len; i++) {
	                childElements[i].classList.remove('selectedTab');
	                childElements[i].classList.add('invisible');
	            }

	            classes.add('selectedTab');
	            classes.remove('invisible');
	        }
	    };

	    /*
	     * get the current active tab if its visible i.e allowed for current parameters
	     */
	    var getActiveTab = function getActiveTab() {
	        var selectedTab = sessionStorage.getItem('currentAnalysisTab') || (State.get('is_mb_trading') ? 'tab_portfolio' : window.chartAllowed ? 'tab_graph' : 'tab_explanation');
	        var selectedElement = document.getElementById(selectedTab);

	        if (selectedElement && selectedElement.classList.contains('invisible') && !(selectedTab === 'tab_portfolio' && JapanPortfolio.isActive())) {
	            selectedTab = window.chartAllowed ? 'tab_graph' : 'tab_explanation';
	            sessionStorage.setItem('currentAnalysisTab', selectedTab);
	        }

	        return selectedTab;
	    };

	    /*
	     * handle the display of proper explanation based on parameters
	     */
	    var showExplanation = function showExplanation(href) {
	        var options = new Url(href).params_hash();
	        var form_name = options.form_name || 'risefall',
	            show_image = options.show_image ? options.show_image > 0 : true,
	            show_winning = options.show_winning ? options.show_winning > 0 : true,
	            show_explain = true,
	            hidden_class = 'invisible',
	            $Container = $('#tab_explanation-content');

	        if (show_winning) {
	            $Container.find('#explanation_winning, #winning_' + form_name).removeClass(hidden_class);
	        }

	        if (show_explain) {
	            $Container.find('#explanation_explain, #explain_' + form_name).removeClass(hidden_class);
	        }

	        var images = {
	            risefall: {
	                image1: 'rise-fall-1.svg',
	                image2: 'rise-fall-2.svg'
	            },
	            higherlower: {
	                image1: 'higher-lower-1.svg',
	                image2: 'higher-lower-2.svg'
	            },
	            touchnotouch: {
	                image1: 'touch-notouch-1.svg',
	                image2: 'touch-notouch-2.svg'
	            },
	            endsinout: {
	                image1: 'in-out-1.svg',
	                image2: 'in-out-2.svg'
	            },
	            staysinout: {
	                image1: 'in-out-3.svg',
	                image2: 'in-out-4.svg'
	            },
	            updown: {
	                image1: 'up-down-1.svg',
	                image2: 'up-down-2.svg'
	            },
	            spreads: {
	                image1: 'spreads-1.svg',
	                image2: 'spreads-2.svg'
	            },
	            evenodd: {
	                image1: 'evenodd-1.svg',
	                image2: 'evenodd-2.svg'
	            },
	            overunder: {
	                image1: 'overunder-1.svg',
	                image2: 'overunder-2.svg'
	            }
	        };

	        if (show_image && images.hasOwnProperty(form_name)) {
	            var image_path = url_for_static('images/pages/trade-explanation/' + (getLanguage() === 'JA' ? 'ja/' : ''));
	            $Container.find('#explanation_image_1').attr('src', image_path + images[form_name].image1);
	            $Container.find('#explanation_image_2').attr('src', image_path + images[form_name].image2);
	            $Container.find('#explanation_image').removeClass(hidden_class);
	        }
	    };

	    return {
	        request: requestTradeAnalysis,
	        digit_info: function digit_info() {
	            return trading_digit_info;
	        },
	        getActiveTab: getActiveTab,
	        bindAnalysisTabEvent: bindAnalysisTabEvent
	    };
	}();

	module.exports = {
	    TradingAnalysis: TradingAnalysis
	};

/***/ },
/* 467 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var Symbols = __webpack_require__(459).Symbols;
	var template = __webpack_require__(419).template;
	var localize = __webpack_require__(423).localize;
	var Highcharts = __webpack_require__(460);
	var elementInnerHtml = __webpack_require__(420).elementInnerHtml;

	__webpack_require__(452)(Highcharts);

	var DigitInfoWS = function DigitInfoWS() {
	    this.chart_config = {
	        chart: {
	            renderTo: 'last_digit_histo',
	            defaultSeriesType: 'column',
	            backgroundColor: '#eee',
	            borderWidth: 1,
	            borderColor: '#ccc',
	            plotBackgroundColor: '#fff',
	            plotBorderWidth: 1,
	            plotBorderColor: '#ccc',
	            height: 225 },
	        title: { text: '' },
	        credits: { enabled: false },
	        exporting: { enabled: false },
	        legend: {
	            enabled: false
	        },
	        tooltip: {
	            borderWidth: 1,
	            formatter: function formatter() {
	                var that = this,
	                    total = $("select[name='tick_count']").val(),
	                    percentage = that.y / total * 100;
	                return '<b>Digit:</b> ' + that.x + '<br/><b>Percentage:</b> ' + percentage.toFixed(1) + ' %';
	            }
	        },
	        plotOptions: {
	            column: {
	                shadow: false,
	                borderWidth: 0.5,
	                borderColor: '#666',
	                pointPadding: 0,
	                groupPadding: 0.0,
	                color: '#e1f0fb'
	            },
	            series: {
	                dataLabels: {
	                    enabled: true,
	                    style: {
	                        textShadow: false
	                    },
	                    formatter: function formatter() {
	                        var total = $("select[name='tick_count']").val();
	                        var percentage = this.point.y / total * 100;
	                        return percentage.toFixed(2) + ' %';
	                    }
	                }
	            }
	        },
	        xAxis: {
	            categories: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],
	            lineWidth: 0,
	            lineColor: '#999',
	            tickLength: 10,
	            tickColor: '#ccc'
	        },
	        yAxis: {
	            title: { text: '' },
	            maxPadding: 0,
	            gridLineColor: '#e9e9e9',
	            tickWidth: 1,
	            tickLength: 3,
	            tickColor: '#ccc',
	            lineColor: '#ccc',
	            endOnTick: true,
	            opposite: false,
	            labels: {
	                align: 'left',
	                x: 0,
	                enabled: false,
	                formatter: function formatter() {
	                    var total = $("select[name='tick_count']").val();
	                    var percentage = parseInt(this.value / total * 100);
	                    return percentage + ' %';
	                }
	            }
	        }
	    };

	    this.spots = [];
	    this.stream_id = null;
	    // To avoid too many greens and reds
	    this.prev_min_index = -1;
	    this.prev_max_index = -1;
	};

	DigitInfoWS.prototype = {
	    add_content: function add_content(underlying) {
	        var domain = document.domain.split('.').slice(-2).join('.');
	        var underlyings = [];
	        var symbols = Symbols.getAllSymbols();
	        Object.keys(symbols).forEach(function (key) {
	            if (/^(R_|RD)/.test(key)) {
	                underlyings.push(key);
	            }
	        });
	        underlyings = underlyings.sort();
	        var elem = '<select class="smallfont" name="underlying">';
	        for (var i = 0; i < underlyings.length; i++) {
	            elem += '<option value="' + underlyings[i] + '">' + localize(symbols[underlyings[i]]) + '</option>';
	        }
	        elem += '</select>';
	        var contentId = document.getElementById('tab_last_digit-content'),
	            content = '<div class="gr-parent">' + '<div id="last_digit_histo_form" class="gr-8 gr-12-m gr-centered">' + '<form class="smallfont gr-row" action="#" method="post">' + '<div class="gr-6 gr-12-m">' + localize('Select market') + ' : ' + elem + ' </div>' + '<div class="gr-6 gr-12-m">' + localize('Number of ticks') + ' : <select class="smallfont" name="tick_count"><option value="25">25</option><option value="50">50</option><option selected="selected" value="100">100</option><option value="500">500</option><option value="1000">1000</option></select></div>' + '</form>' + '</div>' + '<div id="last_digit_histo" class="gr-8 gr-12-m gr-centered"></div>' + '<div id="last_digit_title" class="gr-hide">' + (domain.charAt(0).toUpperCase() + domain.slice(1)) + ' - ' + localize('Last digit stats for the latest [_1] ticks on [_2]') + '</div>' + '</div>';
	        elementInnerHtml(contentId, content);
	        $('[name=underlying]').val(underlying);
	    },
	    on_latest: function on_latest() {
	        var that = this;
	        var tab = $('#tab_last_digit-content');
	        var form = tab.find('form:first');
	        form.on('submit', function (event) {
	            event.preventDefault();
	            return false;
	        }).addClass('unbind_later');

	        var get_latest = function get_latest() {
	            var symbol = $('[name=underlying] option:selected').val();
	            var request = {
	                ticks_history: symbol,
	                end: 'latest',
	                count: $('[name=tick_count]', form).val(),
	                req_id: 2
	            };
	            if (that.chart.series[0].name !== symbol) {
	                if ($('#underlying').find('option:selected').val() !== $('[name=underlying]', form).val()) {
	                    request.subscribe = 1;
	                    request.style = 'ticks';
	                }
	                if (that.stream_id !== null) {
	                    BinarySocket.send({ forget: that.stream_id });
	                    that.stream_id = null;
	                }
	            }
	            BinarySocket.send(request);
	        };
	        $('[name=underlying]', form).on('change', get_latest).addClass('unbind_later');
	        $('[name=tick_count]', form).on('change', get_latest).addClass('unbind_later');
	    },
	    show_chart: function show_chart(underlying, spots) {
	        if (typeof spots === 'undefined' || spots.length <= 0) {
	            console.log('Unexpected error occured in the charts.');
	            return;
	        }
	        var dec = spots[0].split('.')[1].length;
	        for (var i = 0; i < spots.length; i++) {
	            var val = parseFloat(spots[i]).toFixed(dec);
	            spots[i] = val.substr(val.length - 1);
	        }

	        var get_title = function get_title() {
	            return {
	                text: template($('#last_digit_title').html(), [spots.length, $('[name=underlying] option:selected').text()])
	            };
	        };

	        this.spots = spots;
	        if (this.chart && $('#last_digit_histo').html()) {
	            this.chart.xAxis[0].update({ title: get_title() }, true);
	            this.chart.series[0].name = underlying;
	        } else {
	            this.add_content(underlying); // this creates #last_digit_title
	            this.chart_config.xAxis.title = get_title();
	            this.chart = new Highcharts.Chart(this.chart_config);
	            this.chart.addSeries({ name: underlying, data: [] });
	            this.on_latest();
	            this.stream_id = null;
	        }
	        this.update();
	    },
	    update: function update(symbol, latest_spot) {
	        if (typeof this.chart === 'undefined') {
	            return null;
	        }

	        var series = this.chart.series[0]; // Where we put the final data.
	        if (series.name !== symbol) {
	            latest_spot = undefined; // This simplifies the logic a bit later.
	        }

	        if (typeof latest_spot !== 'undefined') {
	            // This is a bit later. :D
	            this.spots.unshift(latest_spot.slice(-1)); // Only last digit matters
	            this.spots.pop();
	        }

	        // Always recompute and draw, even if theres no new data.
	        // This is especially useful on first reuqest, but maybe in other ways.
	        var filtered_spots = [],
	            filterFunc = function filterFunc(el) {
	            return +el === digit;
	        };
	        var digit = 10;
	        var min_max_counter = [];
	        while (digit--) {
	            var val = this.spots.filter(filterFunc).length;
	            filtered_spots[digit] = val;
	            if (typeof min_max_counter[val] === 'undefined') {
	                min_max_counter[val] = 0;
	            }
	            min_max_counter[val]++;
	        }
	        var min = Math.min.apply(null, filtered_spots);
	        var max = Math.max.apply(null, filtered_spots);
	        var min_index = filtered_spots.indexOf(min);
	        var max_index = filtered_spots.indexOf(max);
	        // changing color
	        if (min_max_counter[min] >= 1) {
	            filtered_spots[min_index] = { y: min, color: '#CC0000' };
	            if (this.prev_min_index === -1) {
	                this.prev_min_index = min_index;
	            } else if (this.prev_min_index !== min_index) {
	                if (_typeof(filtered_spots[this.prev_min_index]) === 'object') {
	                    filtered_spots[this.prev_min_index] = { y: filtered_spots[this.prev_min_index].y, color: '#e1f0fb' };
	                } else {
	                    filtered_spots[this.prev_min_index] = { y: filtered_spots[this.prev_min_index], color: '#e1f0fb' };
	                }
	                this.prev_min_index = min_index;
	            }
	        }

	        if (min_max_counter[max] >= 1) {
	            filtered_spots[max_index] = { y: max, color: '#2E8836' };
	            if (this.prev_max_index === -1) {
	                this.prev_max_index = max_index;
	            } else if (this.prev_max_index !== max_index) {
	                if (_typeof(filtered_spots[this.prev_max_index]) === 'object') {
	                    filtered_spots[this.prev_max_index] = { y: filtered_spots[this.prev_max_index].y, color: '#e1f0fb' };
	                } else {
	                    filtered_spots[this.prev_max_index] = { y: filtered_spots[this.prev_max_index], color: '#e1f0fb' };
	                }
	                this.prev_max_index = max_index;
	            }
	        }
	        return series.setData(filtered_spots);
	    },
	    update_chart: function update_chart(tick) {
	        if (tick.req_id === 2) {
	            if (this.chart.series[0].name === tick.tick.symbol) {
	                this.stream_id = tick.tick.id || null;
	                this.update(tick.tick.symbol, tick.tick.quote);
	            } else {
	                BinarySocket.send({ forget: tick.tick.id + '' });
	            }
	        } else if (!this.stream_id) {
	            this.update(tick.tick.symbol, tick.tick.quote);
	        }
	    }
	};

	module.exports = {
	    DigitInfoWS: DigitInfoWS
	};

/***/ },
/* 468 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var State = __webpack_require__(304).State;
	var Client = __webpack_require__(305).Client;
	var PortfolioWS = __webpack_require__(462).PortfolioWS;

	var JapanPortfolio = function () {
	    var $portfolio = void 0,
	        isPortfolioActive = false;

	    function init() {
	        if (isActive()) {
	            $('#tab_portfolio').removeClass('invisible');
	        }

	        var $container = $('#tab_portfolio-content');
	        $portfolio = $portfolio || $('#portfolio');

	        if ($portfolio && (!$portfolio.parent().length || $portfolio.parent().get(0).id !== 'tab_portfolio-content')) {
	            $portfolio.detach();
	            $container.append($portfolio);
	        }
	    }

	    function show() {
	        if (isTradePage() && !isPortfolioActive) {
	            PortfolioWS.onLoad();
	            isPortfolioActive = true;
	        }
	    }

	    function isActive() {
	        return !!(Client.get_value('is_logged_in') && isTradePage());
	    }

	    function hide() {
	        if (isTradePage() && isPortfolioActive) {
	            PortfolioWS.onUnload();
	            isPortfolioActive = false;
	        }
	    }

	    function isTradePage() {
	        return State.get('is_mb_trading');
	    }

	    return {
	        init: init,
	        show: show,
	        hide: hide,
	        isActive: isActive
	    };
	}();

	module.exports = {
	    JapanPortfolio: JapanPortfolio
	};

/***/ },
/* 469 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Defaults = __webpack_require__(457).Defaults;
	var format_currency = __webpack_require__(440).format_currency;
	var Client = __webpack_require__(305).Client;

	/*
	 * Handles currency display
	 *
	 * It process 'socket.send({payout_currencies:1})` response
	 * and display them
	 */
	function displayCurrencies() {
	    'use strict';

	    var target = document.getElementById('currency'),
	        fragment = document.createDocumentFragment(),
	        currencies = Client.get_value('currencies').split(',');

	    if (!target) {
	        return;
	    }

	    while (target && target.firstChild) {
	        target.removeChild(target.firstChild);
	    }

	    if (currencies.length > 1) {
	        currencies.forEach(function (currency) {
	            var option = document.createElement('option'),
	                content = document.createTextNode(currency);

	            option.setAttribute('value', currency);

	            option.appendChild(content);
	            fragment.appendChild(option);
	        });

	        target.appendChild(fragment);
	        Defaults.set('currency', target.value);
	    } else {
	        $('#currency').replaceWith('<span id="' + target.getAttribute('id') + '" class="' + target.getAttribute('class') + '" value="' + currencies[0] + '">' + format_currency(currencies[0]) + '</span>');
	        Defaults.set('currency', currencies[0]);
	    }
	}

	module.exports = {
	    displayCurrencies: displayCurrencies
	};

/***/ },
/* 470 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var TradingAnalysis = __webpack_require__(466).TradingAnalysis;
	var Barriers = __webpack_require__(471).Barriers;
	var Contract = __webpack_require__(472).Contract;
	var Defaults = __webpack_require__(457).Defaults;
	var Durations = __webpack_require__(473).Durations;
	var Price = __webpack_require__(474).Price;
	var Tick = __webpack_require__(454).Tick;
	var processMarket = __webpack_require__(476).processMarket;
	var processContractForm = __webpack_require__(476).processContractForm;
	var processForgetTicks = __webpack_require__(476).processForgetTicks;
	var onExpiryTypeChange = __webpack_require__(476).onExpiryTypeChange;
	var onDurationUnitChange = __webpack_require__(476).onDurationUnitChange;
	var onlyNumericOnKeypress = __webpack_require__(481).onlyNumericOnKeypress;
	var moment = __webpack_require__(308);
	var setFormPlaceholderContent = __webpack_require__(479).setFormPlaceholderContent;
	var isVisible = __webpack_require__(420).isVisible;
	var showPriceOverlay = __webpack_require__(456).showPriceOverlay;
	var showFormOverlay = __webpack_require__(456).showFormOverlay;
	var hideOverlayContainer = __webpack_require__(456).hideOverlayContainer;
	var toggleActiveCatMenuElement = __webpack_require__(456).toggleActiveCatMenuElement;
	var debounce = __webpack_require__(456).debounce;
	var submitForm = __webpack_require__(456).submitForm;
	var displayTooltip = __webpack_require__(456).displayTooltip;
	var updateWarmChart = __webpack_require__(456).updateWarmChart;
	var reloadPage = __webpack_require__(456).reloadPage;
	var chartFrameSource = __webpack_require__(456).chartFrameSource;
	var timeIsValid = __webpack_require__(456).timeIsValid;
	var getStartDateNode = __webpack_require__(455).getStartDateNode;
	var TimePicker = __webpack_require__(482).TimePicker;
	var dateValueChanged = __webpack_require__(420).dateValueChanged;
	var load_with_pjax = __webpack_require__(483).load_with_pjax;
	var Client = __webpack_require__(305).Client;
	var elementTextContent = __webpack_require__(420).elementTextContent;

	/*
	 * TradingEvents object contains all the event handler const required = function for
	 * websocket trading page
	 *
	 * We need it as object so that we can call TradingEvent.init() only on trading
	 * page for pjax to work else it will fire on all pages
	 *
	 */
	var TradingEvents = function () {
	    'use strict';

	    var initiate = function initiate() {
	        /*
	         * attach event to market list, so when client change market we need to update undelryings
	         * and request for new Contract details to populate the form and request price accordingly
	         */
	        var marketNavElement = document.getElementById('contract_markets');
	        var onMarketChange = function onMarketChange(market) {
	            showPriceOverlay();
	            Defaults.set('market', market);

	            // as different markets have different forms so remove from sessionStorage
	            // it will default to proper one
	            Defaults.remove('formname');
	            Defaults.remove('underlying');
	            processMarket(1);
	            chartFrameSource();
	        };

	        if (marketNavElement) {
	            marketNavElement.addEventListener('change', function (e) {
	                var clickedMarket = e.target;
	                onMarketChange(clickedMarket.value);
	            });
	        }

	        /*
	         * attach event to form list, so when client click on different form we need to update form
	         * and request for new Contract details to populate the form and request price accordingly
	         */
	        var contractFormEventChange = function contractFormEventChange() {
	            processContractForm();
	            TradingAnalysis.request();
	        };

	        var formNavElement = document.getElementById('contract_form_name_nav');
	        if (formNavElement) {
	            formNavElement.addEventListener('click', function (e) {
	                if (e.target && e.target.getAttribute('menuitem')) {
	                    var clickedForm = e.target;
	                    var isFormActive = clickedForm.classList.contains('active') || clickedForm.parentElement.classList.contains('active');
	                    Defaults.set('formname', clickedForm.getAttribute('menuitem'));

	                    setFormPlaceholderContent();
	                    // if form is already active then no need to send same request again
	                    toggleActiveCatMenuElement(formNavElement, e.target.getAttribute('menuitem'));

	                    if (!isFormActive) {
	                        contractFormEventChange();
	                    }
	                    var contractFormCheckbox = document.getElementById('contract_form_show_menu');
	                    if (contractFormCheckbox) {
	                        contractFormCheckbox.checked = false;
	                    }
	                }
	            });
	        }

	        /*
	         * attach event to underlying change, event need to request new contract details and price
	         */
	        var underlyingElement = document.getElementById('underlying');
	        if (underlyingElement) {
	            underlyingElement.addEventListener('change', function (e) {
	                if (e.target) {
	                    chartFrameSource();
	                    showFormOverlay();
	                    showPriceOverlay();
	                    if (e.target.selectedIndex < 0) {
	                        e.target.selectedIndex = 0;
	                    }
	                    var underlying = e.target.value;
	                    Defaults.remove('barrier', 'barrier_high', 'barrier_low');
	                    Defaults.set('underlying', underlying);
	                    TradingAnalysis.request();

	                    Tick.clean();

	                    updateWarmChart();

	                    Contract.getContracts(underlying);

	                    // forget the old tick id i.e. close the old tick stream
	                    processForgetTicks();
	                    // get ticks for current underlying
	                    Tick.request(underlying);
	                    displayTooltip(Defaults.get('market'), underlying);
	                }
	            });
	        }

	        /*
	         * bind event to change in duration amount, request new price
	         */
	        var triggerOnDurationChange = function triggerOnDurationChange(e) {
	            if (e.target.value % 1 !== 0) {
	                e.target.value = Math.floor(e.target.value);
	            }
	            Defaults.set('duration_amount', e.target.value);
	            Durations.select_amount(e.target.value);
	            Price.processPriceRequest();
	            submitForm(document.getElementById('websocket_form'));
	        };
	        var durationAmountElement = document.getElementById('duration_amount');
	        var inputEventTriggered = false; // For triggering one of the two events.
	        if (durationAmountElement) {
	            durationAmountElement.addEventListener('keypress', onlyNumericOnKeypress);
	            // jquery needed for datepicker
	            $('#duration_amount').on('input', debounce(function (e) {
	                triggerOnDurationChange(e);
	                Durations.validateMinDurationAmount();
	                inputEventTriggered = true;
	            })).on('change', debounce(function (e) {
	                // using Defaults, to update the value by datepicker if it was emptied by keyboard (delete)
	                Durations.validateMinDurationAmount();
	                if (inputEventTriggered === false || !Defaults.get('duration_amount')) {
	                    triggerOnDurationChange(e);
	                } else {
	                    inputEventTriggered = false;
	                }
	            }));
	        }

	        /*
	         * attach event to expiry time change, event need to populate duration
	         * and request new price
	         */
	        var expiryTypeElement = document.getElementById('expiry_type');
	        if (expiryTypeElement) {
	            expiryTypeElement.addEventListener('change', function (e) {
	                Defaults.set('expiry_type', e.target.value);
	                onExpiryTypeChange(e.target.value);
	                if (expiryTypeElement.value !== 'endtime') Price.processPriceRequest();
	            });
	        }

	        /*
	         * bind event to change in duration units, populate duration and request price
	         */
	        var durationUnitElement = document.getElementById('duration_units');
	        if (durationUnitElement) {
	            durationUnitElement.addEventListener('change', function (e) {
	                Defaults.remove('barrier', 'barrier_high', 'barrier_low');
	                onDurationUnitChange(e.target.value);
	                Price.processPriceRequest();
	            });
	        }

	        /*
	         * bind event to change in endtime date and time
	         */
	        var endDateElement = document.getElementById('expiry_date');
	        if (endDateElement) {
	            // need to use jquery as datepicker is used, if we switch to some other
	            // datepicker we can move back to javascript
	            $('#expiry_date').on('change input', function () {
	                if (!dateValueChanged(this, 'date')) {
	                    return false;
	                }
	                if (timeIsValid($('#expiry_date'))) {
	                    Durations.selectEndDate(moment(this.getAttribute('data-value')));
	                }
	                return true;
	            });
	        }

	        var endTimeElement = document.getElementById('expiry_time');
	        if (endTimeElement) {
	            /*
	             * attach datepicker and timepicker to end time durations
	             * have to use jquery
	             */
	            attachTimePicker();
	            $('#expiry_time').on('focus click', attachTimePicker).on('keypress', function (ev) {
	                onlyNumericOnKeypress(ev, [58]);
	            }).on('change input blur', function () {
	                if (!dateValueChanged(this, 'time')) {
	                    return false;
	                }
	                if (timeIsValid($('#expiry_time'))) {
	                    Durations.setTime(endTimeElement.value);
	                    Price.processPriceRequest();
	                }
	                return true;
	            });
	        }

	        /*
	         * attach event to change in amount, request new price only
	         */
	        var amountElement = document.getElementById('amount');
	        if (amountElement) {
	            amountElement.addEventListener('keypress', onlyNumericOnKeypress);

	            amountElement.addEventListener('input', debounce(function (e) {
	                e.target.value = e.target.value.replace(/[^0-9.]/g, '');
	                if (isStandardFloat(e.target.value)) {
	                    e.target.value = parseFloat(e.target.value).toFixed(2);
	                }
	                Defaults.set('amount', e.target.value);
	                Price.processPriceRequest();
	                submitForm(document.getElementById('websocket_form'));
	            }));
	        }

	        /*
	         * attach event to start time, display duration based on
	         * whether start time is forward starting or not and request
	         * new price
	         */
	        var dateStartElement = getStartDateNode();
	        if (dateStartElement) {
	            dateStartElement.addEventListener('change', function (e) {
	                Defaults.set('date_start', e.target.value);
	                var r = Durations.onStartDateChange(e.target.value);
	                if (r >= 0) {
	                    Price.processPriceRequest();
	                }
	            });
	        }

	        /*
	         * attach event to change in amount type that is whether its
	         * payout or stake and request new price
	         */
	        var amountTypeElement = document.getElementById('amount_type');
	        if (amountTypeElement) {
	            amountTypeElement.addEventListener('change', function (e) {
	                Defaults.set('amount_type', e.target.value);
	                Price.processPriceRequest();
	            });
	        }

	        /*
	         * attach event to change in submarkets. We need to disable
	         * underlyings that are not in selected seubmarkets
	         */
	        var submarketElement = document.getElementById('submarket');
	        if (submarketElement) {
	            submarketElement.addEventListener('change', function (e) {
	                if (e.target) {
	                    var elem = document.getElementById('underlying');
	                    var underlyings = elem.children;

	                    for (var i = 0, len = underlyings.length; i < len; i++) {
	                        underlyings[i].disabled = e.target.value !== 'all' && e.target.value !== underlyings[i].className;
	                    }

	                    // as submarket change has modified the underlying list so we need to manually
	                    // fire change event for underlying
	                    document.querySelectorAll('#underlying option:enabled')[0].selected = 'selected';
	                    var event = new Event('change');
	                    elem.dispatchEvent(event);
	                }
	            });
	        }

	        /*
	         * attach an event to change in currency
	         */
	        var currencyElement = document.getElementById('currency');
	        if (currencyElement) {
	            currencyElement.addEventListener('change', function (e) {
	                Defaults.set('currency', e.target.value);
	                var stopTypeDollarLabel = document.getElementById('stop_type_dollar_label');
	                if (stopTypeDollarLabel && isVisible(stopTypeDollarLabel)) {
	                    elementTextContent(stopTypeDollarLabel, e.target.value);
	                }
	                Price.processPriceRequest();
	            });
	        }

	        /*
	         * attach event to purchase buttons to buy the current contract
	         */
	        $('.purchase_button').on('click dblclick', function () {
	            var _this = this;

	            if (!Client.status_detected('unwelcome') && !isVisible(document.getElementById('confirmation_message_container'))) {
	                (function () {
	                    var id = _this.getAttribute('data-purchase-id'),
	                        askPrice = _this.getAttribute('data-ask-price');

	                    var params = { buy: id, price: askPrice, passthrough: {} };
	                    Object.keys(_this.attributes).forEach(function (attr) {
	                        if (attr && this.attributes[attr] && this.attributes[attr].name && !/data\-balloon/.test(this.attributes[attr].name)) {
	                            // do not send tooltip data
	                            var m = this.attributes[attr].name.match(/data\-(.+)/);

	                            if (m && m[1] && m[1] !== 'purchase-id' && m[1] !== 'passthrough') {
	                                params.passthrough[m[1]] = this.attributes[attr].value;
	                            }
	                        }
	                    }, _this);
	                    if (id && askPrice) {
	                        $('.purchase_button').css('visibility', 'hidden');
	                        BinarySocket.send(params);
	                        Price.incrFormId();
	                        Price.processForgetProposals();
	                    }
	                })();
	            }
	        });

	        /*
	         * attach event to close icon for purchase container
	         */
	        $('#close_confirmation_container, #contract_purchase_new_trade').on('click', function (e) {
	            if (e.target) {
	                e.preventDefault();
	                hideOverlayContainer();
	                Price.processPriceRequest();
	            }
	        });

	        /*
	         * attach an event to change in barrier
	         */
	        var barrierElement = document.getElementById('barrier');
	        if (barrierElement) {
	            $('#barrier').on('keypress', function (ev) {
	                onlyNumericOnKeypress(ev, [43, 45, 46]);
	            }).on('input', debounce(function (e) {
	                Barriers.validateBarrier();
	                Defaults.set('barrier', e.target.value);
	                Price.processPriceRequest();
	                submitForm(document.getElementById('websocket_form'));
	            }, 1000));
	        }

	        /*
	         * attach an event to change in low barrier
	         */
	        var lowBarrierElement = document.getElementById('barrier_low');
	        if (lowBarrierElement) {
	            lowBarrierElement.addEventListener('input', debounce(function (e) {
	                Defaults.set('barrier_low', e.target.value);
	                Price.processPriceRequest();
	                submitForm(document.getElementById('websocket_form'));
	            }));
	        }

	        /*
	         * attach an event to change in high barrier
	         */
	        var highBarrierElement = document.getElementById('barrier_high');
	        if (highBarrierElement) {
	            highBarrierElement.addEventListener('input', debounce(function (e) {
	                Defaults.set('barrier_high', e.target.value);
	                Price.processPriceRequest();
	                submitForm(document.getElementById('websocket_form'));
	            }));
	        }

	        /*
	         * attach an event to change in digit prediction input
	         */
	        var predictionElement = document.getElementById('prediction');
	        if (predictionElement) {
	            predictionElement.addEventListener('change', debounce(function (e) {
	                Defaults.set('prediction', e.target.value);
	                Price.processPriceRequest();
	                submitForm(document.getElementById('websocket_form'));
	            }));
	        }

	        /*
	         * attach an event to change in amount per point for spreads
	         */
	        var amountPerPointElement = document.getElementById('amount_per_point');
	        if (amountPerPointElement) {
	            amountPerPointElement.addEventListener('input', debounce(function (e) {
	                if (isStandardFloat(e.target.value)) {
	                    e.target.value = parseFloat(e.target.value).toFixed(2);
	                }
	                Defaults.set('amount_per_point', e.target.value);
	                Price.processPriceRequest();
	                submitForm(document.getElementById('websocket_form'));
	            }));
	        }

	        /*
	         * attach an event to change in stop type for spreads
	         */
	        var stopTypeEvent = function stopTypeEvent(e) {
	            Defaults.set('stop_type', e.target.value);
	            Price.processPriceRequest();
	        };

	        var stopTypeElement = document.querySelectorAll('input[name="stop_type"]');
	        if (stopTypeElement) {
	            for (var i = 0, len = stopTypeElement.length; i < len; i++) {
	                stopTypeElement[i].addEventListener('click', stopTypeEvent);
	            }
	        }

	        /*
	         * attach an event to change in stop loss input value
	         */
	        var stopLossElement = document.getElementById('stop_loss');
	        if (stopLossElement) {
	            stopLossElement.addEventListener('input', debounce(function (e) {
	                if (isStandardFloat(e.target.value)) {
	                    e.target.value = parseFloat(e.target.value).toFixed(2);
	                }
	                Defaults.set('stop_loss', e.target.value);
	                Price.processPriceRequest();
	                submitForm(document.getElementById('websocket_form'));
	            }));
	        }

	        /*
	         * attach an event to change in stop profit input value
	         */
	        var stopProfitElement = document.getElementById('stop_profit');
	        if (stopProfitElement) {
	            stopProfitElement.addEventListener('input', debounce(function (e) {
	                if (isStandardFloat(e.target.value)) {
	                    e.target.value = parseFloat(e.target.value).toFixed(2);
	                }
	                Defaults.set('stop_profit', e.target.value);
	                Price.processPriceRequest();
	                submitForm(document.getElementById('websocket_form'));
	            }));
	        }

	        // For verifying there are 2 digits after decimal
	        var isStandardFloat = function isStandardFloat(value) {
	            return !isNaN(value) && value % 1 !== 0 && (+parseFloat(value)).toFixed(10).replace(/^-?\d*\.?|0+$/g, '').length > 2;
	        };

	        var init_logo = document.getElementById('trading_init_progress');
	        if (init_logo) {
	            init_logo.addEventListener('click', debounce(function () {
	                reloadPage();
	            }));
	        }

	        var tip = document.getElementById('symbol_tip');
	        if (init_logo) {
	            tip.addEventListener('click', debounce(function (e) {
	                var url = e.target.getAttribute('target');
	                load_with_pjax(url);
	            }));
	        }
	    };

	    var attachTimePicker = function attachTimePicker() {
	        var timePickerInst = new TimePicker('#expiry_time');
	        var date_start = document.getElementById('date_start').value;
	        var now = !date_start || date_start === 'now';
	        var current_moment = now ? window.time ? window.time : moment.utc() : parseInt(date_start) * 1000;
	        timePickerInst.hide();
	        timePickerInst.show(current_moment);
	    };

	    return {
	        init: initiate
	    };
	}();

	module.exports = {
	    TradingEvents: TradingEvents
	};

/***/ },
/* 471 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var Contract = __webpack_require__(472).Contract;
	var Defaults = __webpack_require__(457).Defaults;
	var Tick = __webpack_require__(454).Tick;
	var moment = __webpack_require__(308);
	var isVisible = __webpack_require__(420).isVisible;
	var countDecimalPlaces = __webpack_require__(455).countDecimalPlaces;
	var elementTextContent = __webpack_require__(420).elementTextContent;

	/*
	 * Handles barrier processing and display
	 *
	 * It process `Contract.barriers` and display them if its applicable
	 * for current `Contract.form()
	 */

	var Barriers = function () {
	    'use strict';

	    var _isBarrierUpdated = false;

	    var display = function display() {
	        var barriers = Contract.barriers()[Defaults.get('underlying')],
	            formName = Contract.form();

	        if (barriers && formName && Defaults.get('formname') !== 'risefall') {
	            var barrier = barriers[formName];
	            if (barrier) {
	                var _ret = function () {
	                    var unit = document.getElementById('duration_units'),
	                        end_time = document.getElementById('expiry_date'),
	                        indicativeBarrierTooltip = document.getElementById('indicative_barrier_tooltip'),
	                        indicativeHighBarrierTooltip = document.getElementById('indicative_high_barrier_tooltip'),
	                        indicativeLowBarrierTooltip = document.getElementById('indicative_low_barrier_tooltip'),
	                        currentTick = Tick.quote(),
	                        decimalPlaces = countDecimalPlaces(currentTick);

	                    if (barrier.count === 1) {
	                        document.getElementById('high_barrier_row').style.display = 'none';
	                        document.getElementById('low_barrier_row').style.display = 'none';
	                        document.getElementById('barrier_row').setAttribute('style', '');

	                        var defaults_barrier = Defaults.get('barrier'),
	                            elm = document.getElementById('barrier'),
	                            tooltip = document.getElementById('barrier_tooltip'),
	                            span = document.getElementById('barrier_span');
	                        var barrier_def = defaults_barrier && !isNaN(defaults_barrier) ? defaults_barrier : barrier.barrier,
	                            value = void 0;
	                        if (unit && isVisible(unit) && unit.value === 'd' || end_time && isVisible(end_time) && moment(end_time.getAttribute('data-value')).isAfter(moment(), 'day') || !String(barrier.barrier).match(/^[+-]/)) {
	                            if (currentTick && !isNaN(currentTick) && String(barrier_def).match(/^[+-]/)) {
	                                value = (parseFloat(currentTick) + parseFloat(barrier_def)).toFixed(decimalPlaces);
	                            } else {
	                                value = parseFloat(barrier_def);
	                            }
	                            tooltip.style.display = 'none';
	                            span.style.display = 'inherit';
	                            // no need to display indicative barrier in case of absolute barrier
	                            elementTextContent(indicativeBarrierTooltip, '');
	                        } else {
	                            if (!String(barrier_def).match(/^[+-]/)) barrier_def = barrier.barrier; // override Defaults value, because it's changing from absolute to relative barrier
	                            value = barrier_def;
	                            span.style.display = 'none';
	                            tooltip.style.display = 'inherit';
	                            if (currentTick && !isNaN(currentTick)) {
	                                elementTextContent(indicativeBarrierTooltip, (parseFloat(currentTick) + parseFloat(barrier_def)).toFixed(decimalPlaces));
	                            } else {
	                                elementTextContent(indicativeBarrierTooltip, '');
	                            }
	                        }
	                        elm.value = elm.textContent = value;
	                        Defaults.set('barrier', elm.value);
	                        Defaults.remove('barrier_high', 'barrier_low');
	                        Barriers.validateBarrier();
	                        return {
	                            v: void 0
	                        };
	                    } else if (barrier.count === 2) {
	                        document.getElementById('barrier_row').style.display = 'none';
	                        document.getElementById('high_barrier_row').setAttribute('style', '');
	                        document.getElementById('low_barrier_row').setAttribute('style', '');

	                        var high_elm = document.getElementById('barrier_high'),
	                            low_elm = document.getElementById('barrier_low'),
	                            high_tooltip = document.getElementById('barrier_high_tooltip'),
	                            high_span = document.getElementById('barrier_high_span'),
	                            low_tooltip = document.getElementById('barrier_low_tooltip'),
	                            low_span = document.getElementById('barrier_low_span');

	                        var defaults_high = Defaults.get('barrier_high'),
	                            defaults_low = Defaults.get('barrier_low');
	                        var barrier_high = defaults_high && !isNaN(defaults_high) ? defaults_high : barrier.barrier,
	                            barrier_low = defaults_low && !isNaN(defaults_low) ? defaults_low : barrier.barrier1,
	                            value_high = void 0,
	                            value_low = void 0;
	                        if (unit && isVisible(unit) && unit.value === 'd' || end_time && isVisible(end_time) && moment(end_time.getAttribute('data-value')).isAfter(moment(), 'day') || !String(barrier.barrier).match(/^[+-]/)) {
	                            if (currentTick && !isNaN(currentTick) && String(barrier_high).match(/^[+-]/)) {
	                                value_high = (parseFloat(currentTick) + parseFloat(barrier_high)).toFixed(decimalPlaces);
	                                value_low = (parseFloat(currentTick) + parseFloat(barrier_low)).toFixed(decimalPlaces);
	                            } else {
	                                value_high = parseFloat(barrier_high);
	                                value_low = parseFloat(barrier_low);
	                            }

	                            high_span.style.display = 'inherit';
	                            high_tooltip.style.display = 'none';
	                            low_span.style.display = 'inherit';
	                            low_tooltip.style.display = 'none';

	                            elementTextContent(indicativeHighBarrierTooltip, '');
	                            elementTextContent(indicativeLowBarrierTooltip, '');
	                        } else {
	                            // override Defaults value, if it's changing from absolute to relative barrier
	                            if (!String(barrier_high).match(/^[+-]/) || !String(barrier_low).match(/^[+-]/)) {
	                                barrier_high = barrier.barrier;
	                                barrier_low = barrier.barrier1;
	                            }
	                            value_high = barrier_high;
	                            value_low = barrier_low;

	                            high_span.style.display = 'none';
	                            high_tooltip.style.display = 'inherit';
	                            low_span.style.display = 'none';
	                            low_tooltip.style.display = 'inherit';

	                            var barrierVal = function barrierVal(current_tick, barrier_value) {
	                                return (current_tick + parseFloat(barrier_value)).toFixed(decimalPlaces);
	                            };

	                            if (currentTick && !isNaN(currentTick)) {
	                                var current_tick = parseFloat(currentTick);
	                                elementTextContent(indicativeHighBarrierTooltip, barrierVal(current_tick, barrier_high));
	                                elementTextContent(indicativeLowBarrierTooltip, barrierVal(current_tick, barrier_low));
	                            } else {
	                                elementTextContent(indicativeHighBarrierTooltip, '');
	                                elementTextContent(indicativeLowBarrierTooltip, '');
	                            }
	                        }
	                        high_elm.value = high_elm.textContent = value_high;
	                        low_elm.value = low_elm.textContent = value_low;

	                        Defaults.set('barrier_high', high_elm.value);
	                        Defaults.set('barrier_low', low_elm.value);
	                        Defaults.remove('barrier');
	                        return {
	                            v: void 0
	                        };
	                    }
	                }();

	                if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
	            }
	        }

	        var elements = document.getElementsByClassName('barrier_class');
	        for (var i = 0; i < elements.length; i++) {
	            elements[i].style.display = 'none';
	        }
	        Defaults.remove('barrier', 'barrier_high', 'barrier_low');
	    };

	    var validateBarrier = function validateBarrier() {
	        var barrierElement = document.getElementById('barrier'),
	            empty = isNaN(parseFloat(barrierElement.value)) || parseFloat(barrierElement.value) === 0;
	        if (isVisible(barrierElement) && empty) {
	            barrierElement.classList.add('error-field');
	        } else {
	            barrierElement.classList.remove('error-field');
	        }
	    };

	    return {
	        display: display,
	        isBarrierUpdated: function isBarrierUpdated() {
	            return _isBarrierUpdated;
	        },
	        setBarrierUpdate: function setBarrierUpdate(flag) {
	            _isBarrierUpdated = flag;
	        },
	        validateBarrier: validateBarrier
	    };
	}();

	module.exports = {
	    Barriers: Barriers
	};

/***/ },
/* 472 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var objectNotEmpty = __webpack_require__(419).objectNotEmpty;
	var Content = __webpack_require__(426).Content;
	var getFormNameBarrierCategory = __webpack_require__(456).getFormNameBarrierCategory;
	var localize = __webpack_require__(423).localize;
	var getLanguage = __webpack_require__(303).getLanguage;

	/*
	 * Contract object mocks the trading form we have on our website
	 * It parses the contracts json we get from socket.send({contracts_for: 'R_50'})
	 * and gives back barriers, startDate, durations etc
	 *
	 *
	 * Usage:
	 *
	 * use `Contract.details` to populate this object
	 *
	 * then use
	 *
	 * `Contract.durations()` to get durations like seconds, hours etc
	 * `Contract.open()` `Contract.close()`
	 * `Contract.barriers` if applicable for current underlying
	 */
	var Contract = function () {
	    'use strict';

	    var _contractType = {};
	    var contractDetails = {},
	        _barriers = {},
	        _durations = {},
	        _startDates = {},
	        _open = void 0,
	        _close = void 0,
	        _form = void 0,
	        _barrier = void 0;

	    var populate_durations = function populate_durations(currentContract) {
	        var currentCategory = currentContract.contract_category,
	            expiry_type = currentContract.expiry_type,
	            barrier_category = currentContract.barrier_category,
	            start_type = currentContract.start_type,
	            max_duration = currentContract.max_contract_duration,
	            min_duration = currentContract.min_contract_duration;

	        if (!_durations[expiry_type]) {
	            _durations[expiry_type] = {};
	        }

	        if (!_durations[expiry_type][currentCategory]) {
	            _durations[expiry_type][currentCategory] = {};
	        }

	        if (!_durations[expiry_type][currentCategory][barrier_category]) {
	            _durations[expiry_type][currentCategory][barrier_category] = {};
	        }

	        if (!_durations[expiry_type][currentCategory][barrier_category][start_type]) {
	            _durations[expiry_type][currentCategory][barrier_category][start_type] = {};
	        }

	        _durations[expiry_type][currentCategory][barrier_category][start_type].max_contract_duration = max_duration;

	        _durations[expiry_type][currentCategory][barrier_category][start_type].min_contract_duration = min_duration;
	    };

	    var details = function details(formName) {
	        var contracts = Contract.contracts().contracts_for;
	        var barrierCategory = void 0;

	        if (!contracts) return;

	        _startDates = { has_spot: 0, list: [] };
	        _durations = {};
	        _open = contracts.open;
	        _close = contracts.close;

	        var formBarrier = getFormNameBarrierCategory(formName);
	        _form = formName = formBarrier.formName;
	        _barrier = barrierCategory = formBarrier.barrierCategory;

	        contracts.available.forEach(function (currentObj) {
	            var contractCategory = currentObj.contract_category;

	            if (formName && formName === contractCategory) {
	                if (barrierCategory) {
	                    if (barrierCategory === currentObj.barrier_category) {
	                        populate_durations(currentObj);
	                    }
	                } else {
	                    populate_durations(currentObj);
	                }

	                if (currentObj.forward_starting_options && currentObj.start_type === 'forward' && sessionStorage.formname !== 'higherlower') {
	                    _startDates.list = currentObj.forward_starting_options;
	                } else if (currentObj.start_type === 'spot') {
	                    _startDates.has_spot = 1;
	                }

	                var symbol = currentObj.underlying_symbol;
	                if (currentObj.barrier_category && currentObj.barrier_category !== 'non_financial') {
	                    if (!_barriers.hasOwnProperty(symbol)) {
	                        _barriers[symbol] = {};
	                    }
	                    if (currentObj.barriers === 1) {
	                        _barriers[symbol][contractCategory] = {
	                            count: 1,
	                            barrier: currentObj.barrier,
	                            barrier_category: currentObj.barrier_category
	                        };
	                    } else if (currentObj.barriers === 2) {
	                        _barriers[symbol][contractCategory] = {
	                            count: 2,
	                            barrier: currentObj.high_barrier,
	                            barrier1: currentObj.low_barrier,
	                            barrier_category: currentObj.barrier_category
	                        };
	                    }
	                }

	                if (!_contractType[contractCategory]) {
	                    _contractType[contractCategory] = {};
	                }

	                var type = currentObj.contract_type;
	                if (!_contractType[contractCategory].hasOwnProperty(type)) {
	                    _contractType[contractCategory][type] = localize(currentObj.contract_display);
	                }
	            }
	        });

	        if (formName && barrierCategory) {
	            if (_barriers && _barriers[formName] && _barriers[formName].barrier_category !== barrierCategory) {
	                _barriers = {};
	            }
	        }
	    };

	    var getContracts = function getContracts(underlying) {
	        BinarySocket.send({ contracts_for: underlying });
	    };

	    var getContractForms = function getContractForms() {
	        var contracts = Contract.contracts().contracts_for,
	            tradeContractForms = {};

	        if (!contracts) return null;

	        contracts.available.forEach(function (currentObj) {
	            var contractCategory = currentObj.contract_category;
	            if (contractCategory && !tradeContractForms.hasOwnProperty(contractCategory)) {
	                if (contractCategory === 'callput') {
	                    if (currentObj.barrier_category === 'euro_atm') {
	                        tradeContractForms.risefall = Content.localize().textFormRiseFall;
	                    } else {
	                        tradeContractForms.higherlower = Content.localize().textFormHigherLower;
	                    }
	                } else {
	                    tradeContractForms[contractCategory] = localize(currentObj.contract_category_display);
	                    if (contractCategory === 'digits') {
	                        tradeContractForms.matchdiff = Content.localize().textFormMatchesDiffers;
	                        if (getLanguage() !== 'ID') {
	                            tradeContractForms.evenodd = Content.localize().textFormEvenOdd;
	                            tradeContractForms.overunder = Content.localize().textFormOverUnder;
	                        }
	                    }
	                }
	            }
	        });

	        if (!objectNotEmpty(tradeContractForms)) return null;

	        if (tradeContractForms.risefall || tradeContractForms.higherlower) {
	            tradeContractForms.updown = Content.localize().textFormUpDown;
	        }

	        if (tradeContractForms.endsinout || tradeContractForms.staysinout) {
	            tradeContractForms.inout = Content.localize().textFormInOut;
	        }

	        return tradeContractForms;
	    };

	    return {
	        details: details,
	        getContracts: getContracts,
	        contractForms: getContractForms,
	        open: function open() {
	            return _open;
	        },
	        close: function close() {
	            return _close;
	        },
	        contracts: function contracts() {
	            return contractDetails;
	        },
	        durations: function durations() {
	            return _durations;
	        },
	        startDates: function startDates() {
	            return _startDates;
	        },
	        barriers: function barriers() {
	            return _barriers;
	        },
	        contractType: function contractType() {
	            return _contractType;
	        },
	        form: function form() {
	            return _form;
	        },
	        barrier: function barrier() {
	            return _barrier;
	        },
	        setContracts: function setContracts(data) {
	            contractDetails = data;
	        }
	    };
	}();

	module.exports = {
	    Contract: Contract
	};

/***/ },
/* 473 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Barriers = __webpack_require__(471).Barriers;
	var Contract = __webpack_require__(472).Contract;
	var Defaults = __webpack_require__(457).Defaults;
	var Price = __webpack_require__(474).Price;
	var Content = __webpack_require__(426).Content;
	var moment = __webpack_require__(308);
	var State = __webpack_require__(304).State;
	var isVisible = __webpack_require__(420).isVisible;
	var durationOrder = __webpack_require__(456).durationOrder;
	var selectOption = __webpack_require__(456).selectOption;
	var timeIsValid = __webpack_require__(456).timeIsValid;
	var showPriceOverlay = __webpack_require__(456).showPriceOverlay;
	var getTradingTimes = __webpack_require__(455).getTradingTimes;
	var DatePicker = __webpack_require__(475).DatePicker;
	var toReadableFormat = __webpack_require__(441).toReadableFormat;
	var toISOFormat = __webpack_require__(441).toISOFormat;
	var elementTextContent = __webpack_require__(420).elementTextContent;

	/*
	 * Handles duration processing display
	 *
	 * It process `Contract.durations()` and display them according to
	 * the current `Contract.form()` and `Contract.barriers()`
	 *
	 * It also populate expiry type select box i.e Durations and Endtime select
	 *
	 */

	var Durations = function () {
	    'use strict';

	    var selected_duration = {},
	        has_end_date = 0;

	    var displayDurations = function displayDurations() {
	        var startType = void 0;
	        if (Defaults.get('date_start') !== 'now' && State.get('is_start_dates_displayed') && moment(Defaults.get('date_start') * 1000).isAfter(moment())) {
	            startType = 'forward';
	        } else {
	            startType = 'spot';
	        }

	        var durations = Contract.durations();
	        if (durations === false) {
	            document.getElementById('expiry_row').style.display = 'none';
	            Defaults.remove('expiry_type', 'duration_amount', 'duration_units', 'expiry_date', 'expiry_time');
	            return;
	        }

	        var target = document.getElementById('duration_units'),
	            formName = Contract.form(),
	            barrierCategory = Contract.barrier(),
	            durationContainer = {};

	        while (target && target.firstChild) {
	            target.removeChild(target.firstChild);
	        }

	        Object.keys(durations).forEach(function (key) {
	            Object.keys(durations[key][formName]).forEach(function (form) {
	                var obj = {};
	                if (barrierCategory) {
	                    obj = durations[key][formName][barrierCategory];
	                } else {
	                    obj = durations[key][formName][form];
	                }
	                Object.keys(obj).forEach(function (type) {
	                    if (startType) {
	                        if (startType === type) {
	                            if (!durationContainer.hasOwnProperty(startType)) {
	                                durationContainer[key] = obj[startType];
	                            }
	                        }
	                    } else if (!durationContainer.hasOwnProperty(type)) {
	                        durationContainer[key] = obj[type];
	                    }
	                });
	            });
	        });

	        var duration_list = {};
	        Object.keys(durationContainer).forEach(function (duration) {
	            var textMappingMin = durationTextValueMappings(durationContainer[duration].min_contract_duration),
	                textMappingMax = durationTextValueMappings(durationContainer[duration].max_contract_duration),
	                minUnit = textMappingMin.unit;

	            if (duration === 'intraday') {
	                switch (minUnit) {
	                    case 's':
	                        duration_list[minUnit] = makeDurationOption(textMappingMin, textMappingMax);
	                        duration_list.m = makeDurationOption(durationTextValueMappings('1m'), textMappingMax, true);
	                        duration_list.h = makeDurationOption(durationTextValueMappings('1h'), textMappingMax);
	                        break;
	                    case 'm':
	                        duration_list[minUnit] = makeDurationOption(textMappingMin, textMappingMax, true);
	                        duration_list.h = makeDurationOption(durationTextValueMappings('1h'), textMappingMax);
	                        break;
	                    case 'h':
	                        duration_list[minUnit] = makeDurationOption(textMappingMin, textMappingMax);
	                        break;
	                    default:
	                        duration_list[minUnit] = makeDurationOption(textMappingMin, textMappingMax);
	                        break;
	                }
	            } else if (duration === 'daily' || duration === 'tick') {
	                duration_list[minUnit] = makeDurationOption(textMappingMin, textMappingMax);
	            }
	        });
	        var list = Object.keys(duration_list).sort(function (a, b) {
	            if (durationOrder(a) > durationOrder(b)) {
	                return 1;
	            }

	            return -1;
	        });
	        has_end_date = 0;
	        for (var k = 0; k < list.length; k++) {
	            var d = list[k];
	            if (d !== 't') {
	                has_end_date = 1;
	            }
	            if (duration_list.hasOwnProperty(d)) {
	                target.appendChild(duration_list[d]);
	            }
	        }

	        if (selected_duration.unit) {
	            if (!selectOption(selected_duration.unit, target)) {
	                selected_duration = {};
	            }
	        }

	        durationPopulate();
	    };

	    var makeDurationOption = function makeDurationOption(mapMin, mapMax, isSelected) {
	        var option = document.createElement('option'),
	            content = document.createTextNode(mapMin.text);
	        option.setAttribute('value', mapMin.unit);
	        option.setAttribute('data-minimum', mapMin.value);
	        if (mapMax.value && mapMax.unit) {
	            var max = convertDurationUnit(mapMax.value, mapMax.unit, mapMin.unit);
	            if (max) {
	                option.setAttribute('data-maximum', max);
	            }
	        }
	        if (isSelected) {
	            option.setAttribute('selected', 'selected');
	        }
	        option.appendChild(content);
	        return option;
	    };

	    var convertDurationUnit = function convertDurationUnit(value, from_unit, to_unit) {
	        if (!value || !from_unit || !to_unit) return null;
	        if (from_unit === to_unit) return value;
	        var seconds = {
	            s: 1,
	            m: 60,
	            h: 3600,
	            d: 3600 * 24
	        };
	        return value * seconds[from_unit] / seconds[to_unit];
	    };

	    var displayEndTime = function displayEndTime() {
	        var date_start = document.getElementById('date_start').value;
	        var now = !date_start || date_start === 'now';
	        var current_moment = moment(now ? window.time : parseInt(date_start) * 1000).add(5, 'minutes').utc();
	        var expiry_date = Defaults.get('expiry_date') ? moment(Defaults.get('expiry_date')) : current_moment,
	            expiry_time = Defaults.get('expiry_time') || current_moment.format('HH:mm'),
	            expiry_date_iso = toISOFormat(expiry_date);

	        if (moment(expiry_date_iso + ' ' + expiry_time).valueOf() < current_moment.valueOf()) {
	            expiry_date = current_moment;
	            expiry_date_iso = toISOFormat(expiry_date);
	            expiry_time = current_moment.format('HH:mm');
	        }

	        var expiry_date_el = document.getElementById('expiry_date'),
	            expiry_time_el = document.getElementById('expiry_time');

	        expiry_date_el.value = toReadableFormat(expiry_date);
	        expiry_date_el.setAttribute('data-value', expiry_date_iso);
	        expiry_time_el.value = expiry_time;
	        expiry_time_el.setAttribute('data-value', expiry_time);
	        Defaults.set('expiry_date', expiry_date_iso);
	        Defaults.set('expiry_time', expiry_time);
	        Durations.setTime(expiry_time);

	        durationPopulate();
	    };

	    var durationTextValueMappings = function durationTextValueMappings(str) {
	        var mapping = {
	            s: Content.localize().textDurationSeconds,
	            m: Content.localize().textDurationMinutes,
	            h: Content.localize().textDurationHours,
	            d: Content.localize().textDurationDays,
	            t: Content.localize().textDurationTicks
	        };

	        var arry = str ? str.toString().match(/[a-zA-Z]+|[0-9]+/g) : [],
	            obj = {};

	        if (arry.length > 1) {
	            obj.unit = arry[1];
	            obj.text = mapping[arry[1]];
	            obj.value = arry[0];
	        } else {
	            obj.unit = 't';
	            obj.text = mapping.t;
	            obj.value = arry[0];
	        }

	        return obj;
	    };

	    var durationPopulate = function durationPopulate() {
	        var unit = document.getElementById('duration_units');
	        if (!unit.options[unit.selectedIndex]) return;
	        var unitMinValue = unit.options[unit.selectedIndex].getAttribute('data-minimum'),
	            unitMaxValue = unit.options[unit.selectedIndex].getAttribute('data-maximum');
	        var unitValue = Defaults.get('duration_amount') || unitMinValue;
	        unit.value = Defaults.get('duration_units') && document.querySelectorAll('select[id="duration_units"] [value="' + Defaults.get('duration_units') + '"]').length ? Defaults.get('duration_units') : unit.value;
	        elementTextContent(document.getElementById('duration_minimum'), unitMinValue);
	        elementTextContent(document.getElementById('duration_maximum'), unitMaxValue);
	        if (selected_duration.amount && selected_duration.unit > unitValue) {
	            unitValue = selected_duration.amount;
	        }
	        document.getElementById('duration_amount').value = unitValue;
	        Defaults.set('duration_amount', unitValue);
	        displayExpiryType();
	        Defaults.set('duration_units', unit.value);

	        // jquery for datepicker
	        var amountElement = $('#duration_amount'),
	            datePickerDur = new DatePicker('#duration_amount', 'diff'),
	            datePickDate = new DatePicker('#expiry_date');
	        if (unit.value === 'd') {
	            var tomorrow = window.time ? new Date(window.time.valueOf()) : new Date();
	            tomorrow.setDate(tomorrow.getDate() + 1);
	            datePickerDur.show(tomorrow, 364, 'attr', 'noNative');
	            amountElement.change(function (value) {
	                var dayDiff = void 0;
	                var $duration_amount_val = $('#duration_amount').val();
	                if ($duration_amount_val) {
	                    dayDiff = $duration_amount_val;
	                } else {
	                    value = value.target.getAttribute('data-value');
	                    var date = value ? new Date(value) : new Date();
	                    var today = window.time ? window.time.valueOf() : new Date();
	                    dayDiff = Math.ceil((date - today) / (1000 * 60 * 60 * 24));
	                }
	                amountElement.val(dayDiff);
	            });
	        } else {
	            datePickerDur.hide();
	        }

	        if ($('#expiry_date').is(':visible')) {
	            datePickDate.hide();
	            datePickDate.show('today', 364);
	        }

	        validateMinDurationAmount();
	        // we need to call it here as for days we need to show absolute barriers
	        Barriers.display();
	    };

	    var displayExpiryType = function displayExpiryType() {
	        var target = document.getElementById('expiry_type'),
	            fragment = document.createDocumentFragment();

	        // in case of having endtime as expiry_type and change the form to contract types
	        // which only have duration and do not support endtime, it should change the Default value
	        // to get corrected based on contract situations
	        if ($('#expiry_type').find('option[value=' + Defaults.get('expiry_type') + ']').length === 0 && target.value) {
	            Defaults.set('expiry_type', target.value);
	        }
	        var current_selected = Defaults.get('expiry_type') || target.value || 'duration';
	        var id = current_selected,
	            hideId = current_selected === 'duration' ? 'endtime' : 'duration';

	        id = document.getElementById('expiry_type_' + id);
	        if (id) {
	            id.style.display = 'flex';
	        }
	        // need to hide the non selected one
	        hideId = document.getElementById('expiry_type_' + hideId);
	        if (hideId) {
	            hideId.style.display = 'none';
	        }

	        while (target && target.firstChild) {
	            target.removeChild(target.firstChild);
	        }

	        var option = document.createElement('option'),
	            content = document.createTextNode(Content.localize().textDuration);

	        option.setAttribute('value', 'duration');
	        if (current_selected === 'duration') {
	            option.setAttribute('selected', 'selected');
	        }
	        option.appendChild(content);
	        fragment.appendChild(option);

	        if (has_end_date) {
	            option = document.createElement('option');
	            content = document.createTextNode(Content.localize().textEndTime);
	            option.setAttribute('value', 'endtime');
	            if (current_selected === 'endtime') {
	                option.setAttribute('selected', 'selected');
	            }
	            option.appendChild(content);
	            fragment.appendChild(option);
	        }
	        target.appendChild(fragment);
	    };

	    var selectEndDate = function selectEndDate(end_date) {
	        var expiry_time = document.getElementById('expiry_time'),
	            date_start = document.getElementById('date_start'),
	            end_date_readable = toReadableFormat(end_date),
	            end_date_iso = toISOFormat(end_date);
	        $('#expiry_date').val(end_date_readable).attr('data-value', end_date_iso);
	        Defaults.set('expiry_date', end_date_iso);
	        if (end_date.isAfter(window.time.format('YYYY-MM-DD HH:mm'), 'day')) {
	            Durations.setTime('');
	            Defaults.remove('expiry_time');
	            setNow(); // start time
	            date_start.setAttribute('disabled', 'disabled');
	            expiry_time.hide();
	            processTradingTimesRequest(end_date_iso);
	        } else {
	            date_start.removeAttribute('disabled');
	            if (!expiry_time.value) {
	                var new_time = moment(window.time).add(5, 'minutes').utc().format('HH:mm');
	                expiry_time.value = new_time;
	                expiry_time.setAttribute('data-value', new_time);
	            }
	            Durations.setTime(expiry_time.value);
	            Defaults.set('expiry_time', Defaults.get('expiry_time') || expiry_time.value);
	            expiry_time.show();
	            Price.processPriceRequest();
	        }

	        Barriers.display();
	    };

	    var processTradingTimesRequest = function processTradingTimesRequest(date) {
	        var trading_times = getTradingTimes();
	        if (trading_times.hasOwnProperty(date)) {
	            Price.processPriceRequest();
	        } else {
	            showPriceOverlay();
	            BinarySocket.send({
	                trading_times: date
	            });
	        }
	    };

	    var validateMinDurationAmount = function validateMinDurationAmount() {
	        var durationAmountElement = document.getElementById('duration_amount'),
	            durationMinElement = document.getElementById('duration_minimum'),
	            durationMaxElement = document.getElementById('duration_maximum');
	        if (!isVisible(durationAmountElement) || !isVisible(durationMinElement)) return;
	        if (+durationAmountElement.value < +durationMinElement.textContent || +durationMaxElement.textContent && +durationAmountElement.value > +durationMaxElement.textContent) {
	            durationAmountElement.classList.add('error-field');
	        } else {
	            durationAmountElement.classList.remove('error-field');
	        }
	    };

	    var onStartDateChange = function onStartDateChange(value) {
	        var $dateStartSelect = $('#date_start');
	        if (!value || !$dateStartSelect.find('option[value=' + value + ']').length) {
	            return 0;
	        }

	        var yellowBorder = 'light-yellow-background';
	        if (value !== 'now') {
	            $dateStartSelect.addClass(yellowBorder);
	        } else {
	            $dateStartSelect.removeClass(yellowBorder);
	        }

	        $dateStartSelect.val(value);

	        var make_price_request = 1;
	        var $expiry_time = $('#expiry_time');
	        if (value !== 'now' && Defaults.get('expiry_type') === 'endtime') {
	            make_price_request = -1;
	            var end_time = moment(parseInt(value) * 1000).add(5, 'minutes').utc();
	            Durations.setTime(timeIsValid($expiry_time) && Defaults.get('expiry_time') ? Defaults.get('expiry_time') : end_time.format('HH:mm'));
	            Durations.selectEndDate(timeIsValid($expiry_time) && (Defaults.get('expiry_date') ? moment(Defaults.get('expiry_date')) : end_time));
	        }
	        timeIsValid($expiry_time);
	        Durations.display();
	        return make_price_request;
	    };

	    var setNow = function setNow() {
	        var $date_start = $('#date_start');
	        if ($date_start.find('option[value="now"]').length) {
	            $date_start.val('now').removeClass('light-yellow-background');
	            Defaults.set('date_start', 'now');
	        }
	    };

	    return {
	        display: displayDurations,
	        displayEndTime: displayEndTime,
	        populate: durationPopulate,
	        selectEndDate: selectEndDate,
	        validateMinDurationAmount: validateMinDurationAmount,
	        onStartDateChange: onStartDateChange,
	        setTime: function setTime(time) {
	            $('#expiry_time').val(time);Defaults.set('expiry_time', time);
	        },
	        select_amount: function select_amount(a) {
	            selected_duration.amount = a;
	        },
	        select_unit: function select_unit(u) {
	            selected_duration.unit = u;
	        }
	    };
	}();

	module.exports = {
	    Durations: Durations
	};

/***/ },
/* 474 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var getStartDateNode = __webpack_require__(455).getStartDateNode;
	var Content = __webpack_require__(426).Content;
	var format_money = __webpack_require__(440).format_money;
	var moment = __webpack_require__(308);
	var contractTypeDisplayMapping = __webpack_require__(456).contractTypeDisplayMapping;
	var resetPriceMovement = __webpack_require__(456).resetPriceMovement;
	var displayCommentPrice = __webpack_require__(456).displayCommentPrice;
	var displayCommentSpreads = __webpack_require__(456).displayCommentSpreads;
	var showPriceOverlay = __webpack_require__(456).showPriceOverlay;
	var displayPriceMovement = __webpack_require__(455).displayPriceMovement;
	var getTradingTimes = __webpack_require__(455).getTradingTimes;
	var Contract = __webpack_require__(472).Contract;
	var Defaults = __webpack_require__(457).Defaults;
	var isVisible = __webpack_require__(420).isVisible;
	var localize = __webpack_require__(423).localize;
	var Client = __webpack_require__(305).Client;
	var elementTextContent = __webpack_require__(420).elementTextContent;

	/*
	 * Price object handles all the functions we need to display prices
	 *
	 * We create Price proposal that we need to send to server to get price,
	 * longcode and all other information that we need to get the price for
	 * current contract
	 *
	 *
	 * Usage:
	 *
	 * `socket.send(Price.proposal())` to send price proposal to sever
	 * `Price.display()` to display the price details returned from server
	 */
	var Price = function () {
	    'use strict';

	    var typeDisplayIdMapping = {},
	        form_id = 0;

	    var createProposal = function createProposal(typeOfContract) {
	        var proposal = {
	            proposal: 1,
	            subscribe: 1
	        };
	        var underlying = document.getElementById('underlying'),
	            contractType = typeOfContract,
	            amountType = document.getElementById('amount_type'),
	            currency = document.getElementById('currency'),
	            payout = document.getElementById('amount'),
	            startTime = getStartDateNode(),
	            expiryType = document.getElementById('expiry_type'),
	            duration = document.getElementById('duration_amount'),
	            durationUnit = document.getElementById('duration_units'),
	            endDate = document.getElementById('expiry_date'),
	            barrier = document.getElementById('barrier'),
	            highBarrier = document.getElementById('barrier_high'),
	            lowBarrier = document.getElementById('barrier_low'),
	            prediction = document.getElementById('prediction'),
	            amountPerPoint = document.getElementById('amount_per_point'),
	            stopType = document.querySelector('input[name="stop_type"]:checked'),
	            stopLoss = document.getElementById('stop_loss'),
	            stopProfit = document.getElementById('stop_profit');

	        if (payout && isVisible(payout) && payout.value) {
	            proposal.amount = parseFloat(payout.value);
	        }

	        if (amountType && isVisible(amountType) && amountType.value) {
	            proposal.basis = amountType.value;
	        }

	        if (contractType) {
	            proposal.contract_type = typeOfContract;
	        }

	        if (currency && (currency.value || currency.getAttribute('value'))) {
	            proposal.currency = currency.value || currency.getAttribute('value');
	        }

	        if (underlying && underlying.value) {
	            proposal.symbol = underlying.value;
	        }

	        if (startTime && isVisible(startTime) && startTime.value !== 'now') {
	            proposal.date_start = startTime.value;
	        }

	        if (expiryType && isVisible(expiryType) && expiryType.value === 'duration') {
	            proposal.duration = parseInt(duration.value);
	            proposal.duration_unit = durationUnit.value;
	        } else if (expiryType && isVisible(expiryType) && expiryType.value === 'endtime') {
	            var endDate2 = endDate.getAttribute('data-value');
	            var endTime2 = Defaults.get('expiry_time');
	            if (!endTime2) {
	                var trading_times = getTradingTimes();
	                if (trading_times.hasOwnProperty(endDate2) && _typeof(trading_times[endDate2][underlying.value]) === 'object' && trading_times[endDate2][underlying.value].length && trading_times[endDate2][underlying.value][0] !== '--') {
	                    if (trading_times[endDate2][underlying.value].length > 1) {
	                        endTime2 = trading_times[endDate2][underlying.value][1];
	                    } else {
	                        endTime2 = trading_times[endDate2][underlying.value];
	                    }
	                }
	            }

	            proposal.date_expiry = moment.utc(endDate2 + ' ' + endTime2).unix();
	            // For stopping tick trade behaviour
	            proposal.duration_unit = 'm';
	        }

	        if (barrier && isVisible(barrier) && barrier.value) {
	            proposal.barrier = barrier.value;
	        }

	        if (highBarrier && isVisible(highBarrier) && highBarrier.value) {
	            proposal.barrier = highBarrier.value;
	        }

	        if (lowBarrier && isVisible(lowBarrier) && lowBarrier.value) {
	            proposal.barrier2 = lowBarrier.value;
	        }

	        if (prediction && isVisible(prediction)) {
	            proposal.barrier = parseInt(prediction.value);
	        }

	        if (amountPerPoint && isVisible(amountPerPoint)) {
	            proposal.amount_per_point = parseFloat(amountPerPoint.value);
	        }

	        if (stopType && isVisible(stopType)) {
	            proposal.stop_type = stopType.value;
	        }

	        if (stopLoss && isVisible(stopLoss)) {
	            proposal.stop_loss = parseFloat(stopLoss.value);
	        }

	        if (stopProfit && isVisible(stopProfit)) {
	            proposal.stop_profit = parseFloat(stopProfit.value);
	        }

	        if (contractType) {
	            proposal.contract_type = typeOfContract;
	        }

	        proposal.passthrough = {
	            form_id: form_id
	        };

	        resetPriceMovement();

	        return proposal;
	    };

	    var display = function display(details, contractType) {
	        var proposal = details.proposal;
	        var id = proposal ? proposal.id : '';
	        var params = details.echo_req;

	        var type = params.contract_type;
	        if (id && !type) {
	            type = typeDisplayIdMapping[id];
	        }

	        var is_spread = false;
	        if (params.contract_type && (params.contract_type === 'SPREADU' || params.contract_type === 'SPREADD')) {
	            is_spread = true;
	        }

	        if (params && id && Object.getOwnPropertyNames(params).length > 0) {
	            typeDisplayIdMapping[id] = type;
	        }

	        var position = contractTypeDisplayMapping(type);

	        if (!position) {
	            return;
	        }

	        var container = document.getElementById('price_container_' + position);
	        if (!container) return;
	        if (!$(container).is(':visible')) {
	            $(container).fadeIn(200);
	        }

	        var h4 = container.getElementsByClassName('contract_heading')[0],
	            amount = container.getElementsByClassName('contract_amount')[0],
	            payoutAmount = container.getElementsByClassName('contract_payout')[0],
	            stake = container.getElementsByClassName('stake')[0],
	            payout = container.getElementsByClassName('payout')[0],
	            purchase = container.getElementsByClassName('purchase_button')[0],
	            description = container.getElementsByClassName('contract_description')[0],
	            comment = container.getElementsByClassName('price_comment')[0],
	            error = container.getElementsByClassName('contract_error')[0],
	            currency = document.getElementById('currency');

	        var display_text = type && contractType ? contractType[type] : '';
	        if (display_text) {
	            h4.setAttribute('class', 'contract_heading ' + type);
	            if (is_spread) {
	                if (position === 'top') {
	                    elementTextContent(h4, Content.localize().textSpreadTypeLong);
	                } else {
	                    elementTextContent(h4, Content.localize().textSpreadTypeShort);
	                }
	            } else {
	                elementTextContent(h4, display_text);
	            }
	        }

	        var setData = function setData(data) {
	            if (!data) return;
	            if (data.display_value) {
	                if (is_spread) {
	                    $('.stake:visible').hide();
	                    elementTextContent(amount, data.display_value);
	                } else {
	                    $('.stake:hidden').show();
	                    elementTextContent(stake, localize('Stake') + ': ');
	                    elementTextContent(amount, format_money(currency.value || currency.getAttribute('value'), data.display_value));
	                }
	                $('.stake_wrapper:hidden').show();
	            } else {
	                $('.stake_wrapper:visible').hide();
	            }

	            if (data.payout) {
	                elementTextContent(payout, (is_spread ? localize('Payout/point') : localize('Payout')) + ': ');
	                elementTextContent(payoutAmount, format_money(currency.value || currency.getAttribute('value'), data.payout));
	                $('.payout_wrapper:hidden').show();
	            } else {
	                $('.payout_wrapper:visible').hide();
	            }

	            if (data.longcode && window.innerWidth > 500 && !Client.status_detected('unwelcome')) {
	                description.setAttribute('data-balloon', data.longcode);
	            } else {
	                description.removeAttribute('data-balloon');
	            }
	        };

	        if (details.error) {
	            purchase.hide();
	            comment.hide();
	            setData(details.error.details);
	            error.show();
	            elementTextContent(error, details.error.message);
	        } else {
	            setData(proposal);
	            if ($('#websocket_form').find('.error-field:visible').length > 0) {
	                purchase.hide();
	            } else {
	                purchase.show();
	            }
	            comment.show();
	            error.hide();
	            if (is_spread) {
	                displayCommentSpreads(comment, currency.value || currency.getAttribute('value'), proposal.spread);
	            } else {
	                displayCommentPrice(comment, currency.value || currency.getAttribute('value'), proposal.ask_price, proposal.payout);
	            }
	            var oldprice = purchase.getAttribute('data-display_value'),
	                oldpayout = purchase.getAttribute('data-payout');
	            displayPriceMovement(amount, oldprice, proposal.display_value);
	            displayPriceMovement(payoutAmount, oldpayout, proposal.payout);
	            purchase.setAttribute('data-purchase-id', id);
	            purchase.setAttribute('data-ask-price', proposal.ask_price);
	            purchase.setAttribute('data-display_value', proposal.display_value);
	            purchase.setAttribute('data-payout', proposal.payout);
	            purchase.setAttribute('data-symbol', id);
	            Object.keys(params).forEach(function (key) {
	                if (key && key !== 'proposal') {
	                    purchase.setAttribute('data-' + key, params[key]);
	                }
	            });
	        }
	    };

	    var clearMapping = function clearMapping() {
	        typeDisplayIdMapping = {};
	    };

	    var clearFormId = function clearFormId() {
	        form_id = 0;
	    };

	    /*
	     * Function to request for cancelling the current price proposal
	     */
	    var processForgetProposals = function processForgetProposals() {
	        showPriceOverlay();
	        BinarySocket.send({
	            forget_all: 'proposal'
	        });
	        Price.clearMapping();
	    };

	    /*
	     * Function to process and calculate price based on current form
	     * parameters or change in form parameters
	     */
	    var processPriceRequest = function processPriceRequest() {
	        Price.incrFormId();
	        processForgetProposals();
	        showPriceOverlay();
	        var types = Contract.contractType()[Contract.form()];
	        if (Contract.form() === 'digits') {
	            switch (sessionStorage.getItem('formname')) {
	                case 'matchdiff':
	                    types = {
	                        DIGITMATCH: 1,
	                        DIGITDIFF: 1
	                    };
	                    break;
	                case 'evenodd':
	                    types = {
	                        DIGITEVEN: 1,
	                        DIGITODD: 1
	                    };
	                    break;
	                case 'overunder':
	                    types = {
	                        DIGITOVER: 1,
	                        DIGITUNDER: 1
	                    };
	                    break;
	                default:
	                    break;
	            }
	        }
	        Object.keys(types).forEach(function (typeOfContract) {
	            if (types.hasOwnProperty(typeOfContract)) {
	                BinarySocket.send(Price.proposal(typeOfContract));
	            }
	        });
	    };

	    return {
	        proposal: createProposal,
	        display: display,
	        clearMapping: clearMapping,
	        clearFormId: clearFormId,
	        idDisplayMapping: function idDisplayMapping() {
	            return typeDisplayIdMapping;
	        },
	        getFormId: function getFormId() {
	            return form_id;
	        },
	        incrFormId: function incrFormId() {
	            form_id++;
	        },
	        processForgetProposals: processForgetProposals,
	        processPriceRequest: processPriceRequest
	    };
	}();

	module.exports = {
	    Price: Price
	};

/***/ },
/* 475 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var moment = __webpack_require__(308);
	var checkInput = __webpack_require__(420).checkInput;
	var toReadableFormat = __webpack_require__(441).toReadableFormat;
	var localize = __webpack_require__(423).localize;

	var DatePicker = function DatePicker(component_selector, select_type) {
	    this.component_selector = component_selector;
	    this.select_type = typeof select_type === 'undefined' ? 'date' : select_type;

	    this.localizations = {};
	    this.localizations.monthNames = localize(['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']);

	    this.localizations.monthNamesShort = localize(['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']);

	    this.localizations.dayNames = localize(['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']);

	    this.localizations.dayNamesMin = localize(['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']);

	    this.localizations.nextText = localize('Next');
	    this.localizations.prevText = localize('Previous');
	};

	DatePicker.prototype = {
	    show: function show(min_day, max_days, setValue, noNative) {
	        this.checkWidth(this.config(min_day, max_days, setValue, noNative), this.component_selector, this);
	        var that = this;
	        $(window).resize(function () {
	            that.checkWidth(that.config_data, that.component_selector, that);
	        });
	    },
	    hide: function hide() {
	        if ($(this.component_selector + '.hasDatepicker').length > 0) {
	            $(this.component_selector).datepicker('destroy').removeAttr('data-picker');
	        }
	        $(this.component_selector).off('keydown');
	    },
	    create: function create(config) {
	        var that = this;
	        $(this.component_selector).keydown(function (e) {
	            if (e.which === 13) {
	                e.preventDefault();
	                e.stopPropagation();
	                if (that.select_type === 'date') {
	                    $(this).datepicker('setDate', $(this).val());
	                }
	                $(this).datepicker('hide');
	                $(this).blur();
	                $(that).trigger('enter_pressed');
	                return false;
	            }
	            return true;
	        }).datepicker(config);

	        // Not possible to tell datepicker where to put it's
	        // trigger calendar icon on the page, so we remove it
	        // from the DOM and use our own one.
	        $('button.ui-datepicker-trigger').remove();
	    },
	    config: function config(min_day, max_days, setValue, noNative) {
	        var today = new Date();

	        var config = {
	            dateFormat: 'dd M, yy',
	            monthNames: this.localizations.monthNames,
	            monthNamesShort: this.localizations.monthNamesShort,
	            dayNames: this.localizations.dayNames,
	            dayNamesMin: this.localizations.dayNamesMin,
	            nextText: this.localizations.nextText,
	            prevText: this.localizations.prevText,
	            changeMonth: true,
	            changeYear: true
	        };

	        if (min_day) {
	            config.minDate = min_day === 'today' ? today : min_day;
	        }

	        if (max_days) {
	            max_days = typeof max_days === 'undefined' ? 365 : max_days;
	            var next_year = new Date();
	            next_year.setDate(today.getDate() + Number(max_days));
	            config.maxDate = next_year;
	        }

	        this.setValue = setValue;
	        this.noNative = noNative;

	        var that = this;
	        config.onSelect = function (date_text) {
	            var day = date_text.split(' ')[0],
	                month = ('0' + (Number($('.ui-datepicker-month').val()) + 1)).slice(-2),
	                year = $('.ui-datepicker-year').val(),
	                date = [year, month, day].join('-'),
	                oldValue = $(this).attr('data-value');

	            $(this).attr('data-value', date);
	            if (that.select_type === 'diff') {
	                var today_utc = moment.utc();
	                var selected_date = moment.utc(date + ' 23:59:59');
	                var duration = selected_date.diff(today_utc, 'days');
	                $(this).val(duration);
	                if (oldValue && oldValue === date) return false;
	                $(that.component_selector).trigger('change', [duration]);
	            } else if (that.select_type === 'date') {
	                if (that.setValue === 'attr') {
	                    $(this).val('');
	                } else {
	                    $(this).val(date_text);
	                }
	                if (oldValue && oldValue === date) return false;
	                $(that.component_selector).trigger('change', [date_text]);
	            }
	            return true;
	        };

	        this.config_data = config;

	        return config;
	    },
	    getDate: function getDate(date) {
	        var year = date.getFullYear(),
	            month = ('0' + (date.getMonth() + 1)).slice(-2),
	            day = ('0' + date.getDate()).slice(-2);
	        return year + '-' + month + '-' + day;
	    },
	    checkWidth: function checkWidth(config, component_selector, that) {
	        var $selector = $(component_selector);
	        if ($(window).width() < 770 && that.noNative) {
	            that.hide($selector);
	            $selector.attr('type', 'number');
	        } else if ($(window).width() < 770 && checkInput('date', 'not-a-date') && $selector.attr('data-picker') !== 'native' && !that.noNative) {
	            that.hide($selector);
	            $selector.attr({ type: 'date', 'data-picker': 'native' }).val($selector.attr('data-value'));
	            if ($selector.attr('readonly')) {
	                $selector.attr('data-readonly', 'readonly').removeAttr('readonly');
	            }
	            if (config.minDate) {
	                $selector.attr('min', that.getDate(config.minDate));
	            }
	            if (config.maxDate) {
	                $selector.attr('max', that.getDate(config.maxDate));
	            }
	        } else if ($(window).width() > 769 && $selector.attr('data-picker') !== 'jquery' || $(window).width() < 770 && !checkInput('date', 'not-a-date')) {
	            var value = $selector.attr('data-value'),
	                format_value = value && that.select_type === 'date' ? toReadableFormat(moment(value)) : $selector.val();
	            $selector.attr({ type: 'text', 'data-picker': 'jquery' }).removeAttr('min').removeAttr('max').val(format_value);
	            if ($selector.attr('data-readonly')) {
	                $selector.attr('readonly', 'readonly').removeAttr('data-readonly');
	            }
	            that.create(config);
	        }
	    }
	};

	module.exports = {
	    DatePicker: DatePicker
	};

/***/ },
/* 476 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var TradingAnalysis = __webpack_require__(466).TradingAnalysis;
	var Barriers = __webpack_require__(471).Barriers;
	var Contract = __webpack_require__(472).Contract;
	var Defaults = __webpack_require__(457).Defaults;
	var Durations = __webpack_require__(473).Durations;
	var Price = __webpack_require__(474).Price;
	var Purchase = __webpack_require__(477).Purchase;
	var StartDates = __webpack_require__(478).StartDates;
	var Symbols = __webpack_require__(459).Symbols;
	var Tick = __webpack_require__(454).Tick;
	var WSTickDisplay = __webpack_require__(453).WSTickDisplay;
	var State = __webpack_require__(304).State;
	var displayUnderlyings = __webpack_require__(456).displayUnderlyings;
	var hidePriceOverlay = __webpack_require__(456).hidePriceOverlay;
	var hideFormOverlay = __webpack_require__(456).hideFormOverlay;
	var showFormOverlay = __webpack_require__(456).showFormOverlay;
	var hideOverlayContainer = __webpack_require__(456).hideOverlayContainer;
	var getContractCategoryTree = __webpack_require__(456).getContractCategoryTree;
	var getDefaultMarket = __webpack_require__(456).getDefaultMarket;
	var displayTooltip = __webpack_require__(456).displayTooltip;
	var selectOption = __webpack_require__(456).selectOption;
	var updateWarmChart = __webpack_require__(456).updateWarmChart;
	var displayContractForms = __webpack_require__(456).displayContractForms;
	var displayMarkets = __webpack_require__(456).displayMarkets;
	var processTradingTimesAnswer = __webpack_require__(455).processTradingTimesAnswer;
	var setFormPlaceholderContent = __webpack_require__(479).setFormPlaceholderContent;
	var localize = __webpack_require__(423).localize;
	var moment = __webpack_require__(308);
	var elementTextContent = __webpack_require__(420).elementTextContent;
	var elementInnerHtml = __webpack_require__(420).elementInnerHtml;

	/*
	 * This function process the active symbols to get markets
	 * and underlying list
	 */
	function processActiveSymbols(data) {
	    'use strict';

	    // populate the Symbols object

	    Symbols.details(data);

	    var market = getDefaultMarket();

	    // store the market
	    Defaults.set('market', market);

	    displayMarkets('contract_markets', Symbols.markets(), market);
	    processMarket();
	    // setTimeout(function(){
	    // if(document.getElementById('underlying')){
	    //     Symbols.getSymbols(0);
	    // }
	    // }, 60*1000);
	}

	/*
	 * Function to call when market has changed
	 */
	function processMarket(flag) {
	    'use strict';

	    // we can get market from sessionStorage as allowed market
	    // is already set when this function is called

	    var market = Defaults.get('market'),
	        symbol = Defaults.get('underlying');
	    var update_page = Symbols.need_page_update() || flag;

	    // change to default market if query string contains an invalid market
	    if (!market || !Symbols.underlyings()[market]) {
	        market = getDefaultMarket();
	        Defaults.set('market', market);
	    }
	    if (update_page && (!symbol || !Symbols.underlyings()[market][symbol])) {
	        symbol = undefined;
	    }
	    displayUnderlyings('underlying', Symbols.underlyings()[market], symbol);

	    if (update_page) {
	        processMarketUnderlying();
	    }
	}

	/*
	 * Function to call when underlying has changed
	 */
	function processMarketUnderlying() {
	    'use strict';

	    var underlyingElement = document.getElementById('underlying');
	    if (!underlyingElement) {
	        return;
	    }

	    if (underlyingElement.selectedIndex < 0) {
	        underlyingElement.selectedIndex = 0;
	    }
	    var underlying = underlyingElement.value;
	    Defaults.set('underlying', underlying);

	    showFormOverlay();

	    // forget the old tick id i.e. close the old tick stream
	    processForgetTicks();
	    // get ticks for current underlying
	    Tick.request(underlying);

	    Tick.clean();

	    updateWarmChart();

	    BinarySocket.clearTimeouts();

	    Contract.getContracts(underlying);

	    displayTooltip(Defaults.get('market'), underlying);
	}

	/*
	 * Function to display contract form for current underlying
	 */
	function processContract(contracts) {
	    'use strict';

	    if (contracts.hasOwnProperty('error') && contracts.error.code === 'InvalidSymbol') {
	        Price.processForgetProposals();
	        var container = document.getElementById('contract_confirmation_container'),
	            message_container = document.getElementById('confirmation_message'),
	            confirmation_error = document.getElementById('confirmation_error'),
	            contracts_list = document.getElementById('contracts_list');
	        container.style.display = 'block';
	        contracts_list.style.display = 'none';
	        message_container.hide();
	        confirmation_error.show();
	        elementInnerHtml(confirmation_error, contracts.error.message + ' <a href="javascript:;" onclick="sessionStorage.removeItem(\'underlying\'); window.location.reload();">' + localize('Please reload the page') + '</a>');
	        return;
	    }

	    window.chartAllowed = !(contracts.contracts_for && contracts.contracts_for.feed_license && contracts.contracts_for.feed_license === 'chartonly');

	    document.getElementById('trading_socket_container').classList.add('show');
	    var init_logo = document.getElementById('trading_init_progress');
	    if (init_logo.style.display !== 'none') {
	        init_logo.style.display = 'none';
	        Defaults.update();
	    }

	    Contract.setContracts(contracts);

	    var contract_categories = Contract.contractForms();
	    var formname = void 0;
	    if (Defaults.get('formname') && contract_categories && contract_categories[Defaults.get('formname')]) {
	        formname = Defaults.get('formname');
	    } else {
	        var tree = getContractCategoryTree(contract_categories);
	        if (tree[0]) {
	            if (_typeof(tree[0]) === 'object') {
	                formname = tree[0][1][0];
	            } else {
	                formname = tree[0];
	            }
	        }
	    }

	    // set form to session storage
	    Defaults.set('formname', formname);

	    // change the form placeholder content as per current form (used for mobile menu)
	    setFormPlaceholderContent(formname);

	    displayContractForms('contract_form_name_nav', contract_categories, formname);

	    processContractForm();

	    TradingAnalysis.request();

	    hideFormOverlay();
	}

	function processContractForm() {
	    Contract.details(sessionStorage.getItem('formname'));

	    StartDates.display();

	    displayPrediction();

	    displaySpreads();

	    var r1 = void 0;
	    if (State.get('is_start_dates_displayed') && Defaults.get('date_start') && Defaults.get('date_start') !== 'now') {
	        r1 = Durations.onStartDateChange(Defaults.get('date_start'));
	        if (!r1 || Defaults.get('expiry_type') === 'endtime') Durations.display();
	    } else {
	        Durations.display();
	    }

	    if (Defaults.get('amount')) $('#amount').val(Defaults.get('amount'));else Defaults.set('amount', document.getElementById('amount').value);
	    if (Defaults.get('amount_type')) selectOption(Defaults.get('amount_type'), document.getElementById('amount_type'));else Defaults.set('amount_type', document.getElementById('amount_type').value);
	    if (Defaults.get('currency')) selectOption(Defaults.get('currency'), document.getElementById('currency'));

	    var expiry_type = Defaults.get('expiry_type') || 'duration';
	    var make_price_request = onExpiryTypeChange(expiry_type);

	    if (make_price_request >= 0) {
	        Price.processPriceRequest();
	    }

	    if (Defaults.get('formname') === 'spreads') {
	        Defaults.remove('expiry_type', 'duration_amount', 'duration_units', 'expiry_date', 'expiry_time', 'amount', 'amount_type');
	    } else {
	        Defaults.remove('amount_per_point', 'stop_type', 'stop_loss', 'stop_profit');
	    }
	}

	function displayPrediction() {
	    var predictionElement = document.getElementById('prediction_row');
	    if (Contract.form() === 'digits' && sessionStorage.getItem('formname') !== 'evenodd') {
	        predictionElement.show();
	        if (Defaults.get('prediction')) {
	            selectOption(Defaults.get('prediction'), document.getElementById('prediction'));
	        } else {
	            Defaults.set('prediction', document.getElementById('prediction').value);
	        }
	    } else {
	        predictionElement.hide();
	        Defaults.remove('prediction');
	    }
	}

	function displaySpreads() {
	    var amountType = document.getElementById('amount_type'),
	        amountPerPointLabel = document.getElementById('amount_per_point_label'),
	        amount = document.getElementById('amount'),
	        amountPerPoint = document.getElementById('amount_per_point'),
	        spreadContainer = document.getElementById('spread_element_container'),
	        stopTypeDollarLabel = document.getElementById('stop_type_dollar_label'),
	        expiryTypeRow = document.getElementById('expiry_row');

	    if (sessionStorage.getItem('formname') === 'spreads') {
	        amountType.hide();
	        amount.hide();
	        expiryTypeRow.hide();
	        amountPerPointLabel.show();
	        amountPerPoint.show();
	        spreadContainer.show();
	        elementTextContent(stopTypeDollarLabel, document.getElementById('currency').value || Defaults.get('currency'));
	        if (Defaults.get('stop_type')) {
	            var el = document.querySelectorAll('input[name="stop_type"][value="' + Defaults.get('stop_type') + '"]');
	            if (el) {
	                el[0].setAttribute('checked', 'checked');
	            }
	        } else {
	            Defaults.set('stop_type', document.getElementById('stop_type_points').checked ? 'point' : 'dollar');
	        }
	        if (Defaults.get('amount_per_point')) amountPerPoint.value = Defaults.get('amount_per_point');else Defaults.set('amount_per_point', amountPerPoint.value);
	        if (Defaults.get('stop_loss')) document.getElementById('stop_loss').value = Defaults.get('stop_loss');else Defaults.set('stop_loss', document.getElementById('stop_loss').value);
	        if (Defaults.get('stop_profit')) document.getElementById('stop_profit').value = Defaults.get('stop_profit');else Defaults.set('stop_profit', document.getElementById('stop_profit').value);
	    } else {
	        amountPerPointLabel.hide();
	        amountPerPoint.hide();
	        spreadContainer.hide();
	        expiryTypeRow.show();
	        amountType.show();
	        amount.show();
	    }
	}

	function forgetTradingStreams() {
	    Price.processForgetProposals();
	    processForgetTicks();
	}

	/*
	 * Function to cancel the current tick stream
	 * this need to be invoked before makin
	 */
	function processForgetTicks() {
	    'use strict';

	    BinarySocket.send({
	        forget_all: 'ticks'
	    });
	}

	/*
	 * Function to process ticks stream
	 */
	function processTick(tick) {
	    'use strict';

	    var symbol = sessionStorage.getItem('underlying');
	    var digit_info = TradingAnalysis.digit_info();
	    if (tick.echo_req.ticks === symbol || tick.tick && tick.tick.symbol === symbol) {
	        Tick.details(tick);
	        Tick.display();
	        if (digit_info && tick.tick) {
	            digit_info.update_chart(tick);
	        }
	        WSTickDisplay.updateChart(tick);
	        Purchase.update_spot_list();
	        if (!Barriers.isBarrierUpdated()) {
	            Barriers.display();
	            Barriers.setBarrierUpdate(true);
	        }
	        updateWarmChart();
	    } else if (digit_info) {
	        digit_info.update_chart(tick);
	    }
	}

	function processProposal(response) {
	    'use strict';

	    var form_id = Price.getFormId();
	    if (response.echo_req && response.echo_req !== null && response.echo_req.passthrough && response.echo_req.passthrough.form_id === form_id) {
	        hideOverlayContainer();
	        Price.display(response, Contract.contractType()[Contract.form()]);
	        hidePriceOverlay();
	    }
	}

	function processTradingTimes(response) {
	    processTradingTimesAnswer(response);
	    Price.processPriceRequest();
	}

	function onExpiryTypeChange(value) {
	    var $expiry_type = $('#expiry_type');
	    if (!value || !$expiry_type.find('option[value=' + value + ']').length) {
	        value = 'duration';
	    }
	    $expiry_type.val(value);

	    var make_price_request = 0;
	    if (value === 'endtime') {
	        Durations.displayEndTime();
	        if (Defaults.get('expiry_date')) {
	            Durations.selectEndDate(moment(Defaults.get('expiry_date')));
	            make_price_request = -1;
	        }
	        Defaults.remove('duration_units', 'duration_amount');
	    } else {
	        StartDates.enable();
	        Durations.display();
	        if (Defaults.get('duration_units')) {
	            onDurationUnitChange(Defaults.get('duration_units'));
	        }
	        var duration_amount = Defaults.get('duration_amount');
	        if (duration_amount && duration_amount > $('#duration_minimum').text()) {
	            $('#duration_amount').val(duration_amount);
	        }
	        make_price_request = 1;
	        Defaults.remove('expiry_date', 'expiry_time', 'end_date');
	        Durations.validateMinDurationAmount();
	    }

	    return make_price_request;
	}

	function onDurationUnitChange(value) {
	    var $duration_units = $('#duration_units');
	    if (!value || !$duration_units.find('option[value=' + value + ']').length) {
	        return 0;
	    }

	    $duration_units.val(value);
	    Defaults.set('duration_units', value);

	    Durations.select_unit(value);
	    Durations.populate();

	    return 1;
	}

	module.exports = {
	    processActiveSymbols: processActiveSymbols,
	    processMarket: processMarket,
	    processContract: processContract,
	    processContractForm: processContractForm,
	    forgetTradingStreams: forgetTradingStreams,
	    processForgetTicks: processForgetTicks,
	    processTick: processTick,
	    processProposal: processProposal,
	    processTradingTimes: processTradingTimes,
	    onExpiryTypeChange: onExpiryTypeChange,
	    onDurationUnitChange: onDurationUnitChange
	};

/***/ },
/* 477 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Contract = __webpack_require__(472).Contract;
	var Symbols = __webpack_require__(459).Symbols;
	var Tick = __webpack_require__(454).Tick;
	var WSTickDisplay = __webpack_require__(453).WSTickDisplay;
	var Content = __webpack_require__(426).Content;
	var isVisible = __webpack_require__(420).isVisible;
	var updatePurchaseStatus = __webpack_require__(456).updatePurchaseStatus;
	var updateContractBalance = __webpack_require__(456).updateContractBalance;
	var elementTextContent = __webpack_require__(420).elementTextContent;
	var elementInnerHtml = __webpack_require__(420).elementInnerHtml;

	/*
	 * Purchase object that handles all the functions related to
	 * contract purchase response
	 */

	var Purchase = function () {
	    'use strict';

	    var purchase_data = {};

	    var display = function display(details) {
	        purchase_data = details;

	        var receipt = details.buy,
	            passthrough = details.echo_req.passthrough,
	            container = document.getElementById('contract_confirmation_container'),
	            message_container = document.getElementById('confirmation_message'),
	            heading = document.getElementById('contract_purchase_heading'),
	            descr = document.getElementById('contract_purchase_descr'),
	            barrier_element = document.getElementById('contract_purchase_barrier'),
	            reference = document.getElementById('contract_purchase_reference'),
	            chart = document.getElementById('tick_chart'),
	            payout = document.getElementById('contract_purchase_payout'),
	            cost = document.getElementById('contract_purchase_cost'),
	            profit = document.getElementById('contract_purchase_profit'),
	            spots = document.getElementById('contract_purchase_spots'),
	            confirmation_error = document.getElementById('confirmation_error'),
	            contracts_list = document.getElementById('contracts_list'),
	            button = document.getElementById('contract_purchase_button');

	        var error = details.error;
	        var show_chart = !error && passthrough.duration <= 10 && passthrough.duration_unit === 't' && (sessionStorage.formname === 'risefall' || sessionStorage.formname === 'higherlower' || sessionStorage.formname === 'asian');

	        contracts_list.style.display = 'none';

	        if (error) {
	            container.style.display = 'block';
	            message_container.hide();
	            confirmation_error.show();
	            elementInnerHtml(confirmation_error, error.message);
	        } else {
	            var guideBtn = document.getElementById('guideBtn');
	            if (guideBtn) {
	                guideBtn.style.display = 'none';
	            }
	            container.style.display = 'table-row';
	            message_container.show();
	            confirmation_error.hide();

	            elementTextContent(heading, Content.localize().textContractConfirmationHeading);
	            elementTextContent(descr, receipt.longcode);
	            if (barrier_element) barrier_element.textContent = '';
	            elementTextContent(reference, Content.localize().textContractConfirmationReference + ' ' + receipt.transaction_id);

	            var payout_value = void 0,
	                cost_value = void 0;

	            if (passthrough.basis === 'payout') {
	                payout_value = passthrough.amount;
	                cost_value = passthrough['ask-price'];
	            } else {
	                cost_value = passthrough.amount;
	                payout_value = receipt.payout;
	            }
	            var profit_value = Math.round((payout_value - cost_value) * 100) / 100;

	            if (sessionStorage.getItem('formname') === 'spreads') {
	                elementInnerHtml(payout, Content.localize().textStopLoss + ' <p>' + receipt.stop_loss_level + '</p>');
	                elementInnerHtml(cost, Content.localize().textAmountPerPoint + ' <p>' + receipt.amount_per_point + '</p>');
	                elementInnerHtml(profit, Content.localize().textStopProfit + ' <p>' + receipt.stop_profit_level + '</p>');
	            } else {
	                elementInnerHtml(payout, Content.localize().textContractConfirmationPayout + ' <p>' + payout_value + '</p>');
	                elementInnerHtml(cost, Content.localize().textContractConfirmationCost + ' <p>' + cost_value + '</p>');
	                elementInnerHtml(profit, Content.localize().textContractConfirmationProfit + ' <p>' + profit_value + '</p>');
	            }

	            updateContractBalance(receipt.balance_after);

	            if (show_chart) {
	                chart.show();
	            } else {
	                chart.hide();
	            }

	            if (Contract.form() === 'digits') {
	                elementTextContent(spots, '');
	                spots.className = '';
	                spots.show();
	            } else {
	                spots.hide();
	            }

	            if (Contract.form() !== 'digits' && !show_chart) {
	                elementTextContent(button, Content.localize().textContractConfirmationButton);
	                button.setAttribute('contract_id', receipt.contract_id);
	                button.show();
	                $('.open_contract_detailsws').attr('contract_id', receipt.contract_id).removeClass('invisible');
	            } else {
	                button.hide();
	                $('.open_contract_detailsws').addClass('invisible');
	            }
	        }

	        if (show_chart) {
	            var contract_sentiment = void 0;
	            if (passthrough.contract_type === 'CALL' || passthrough.contract_type === 'ASIANU') {
	                contract_sentiment = 'up';
	            } else {
	                contract_sentiment = 'down';
	            }

	            // calculate number of decimals needed to display tick-chart according to the spot
	            // value of the underlying
	            var decimal_points = 2;
	            var tick_spots = Tick.spots();
	            var tick_spot_epochs = Object.keys(tick_spots);
	            if (tick_spot_epochs.length > 0) {
	                var last_quote = tick_spots[tick_spot_epochs[0]].toString();

	                if (last_quote.indexOf('.') !== -1) {
	                    decimal_points = last_quote.split('.')[1].length;
	                }
	            }

	            var barrier = void 0;
	            if (sessionStorage.getItem('formname') === 'higherlower') {
	                barrier = passthrough.barrier;
	            }

	            WSTickDisplay.initialize({
	                symbol: passthrough.symbol,
	                barrier: barrier,
	                number_of_ticks: passthrough.duration,
	                previous_tick_epoch: receipt.start_time,
	                contract_category: sessionStorage.getItem('formname') === 'asian' ? 'asian' : 'callput',
	                display_symbol: Symbols.getName(passthrough.symbol),
	                contract_start: receipt.start_time,
	                display_decimals: decimal_points,
	                contract_sentiment: contract_sentiment,
	                price: passthrough['ask-price'],
	                payout: receipt.payout,
	                show_contract_result: 1,
	                width: $('#confirmation_message').width()
	            });
	            WSTickDisplay.spots_list = {};
	        }
	    };

	    var update_spot_list = function update_spot_list() {
	        if ($('#contract_purchase_spots:hidden').length) {
	            return;
	        }

	        var duration = purchase_data.echo_req && purchase_data.echo_req.passthrough ? purchase_data.echo_req.passthrough.duration : null;

	        if (!duration) {
	            return;
	        }

	        var spots = document.getElementById('contract_purchase_spots');
	        var spots2 = Tick.spots();
	        var epoches = Object.keys(spots2).sort(function (a, b) {
	            return a - b;
	        });
	        if (spots) spots.textContent = '';

	        var last_digit = void 0;
	        var replace = function replace(d) {
	            last_digit = d;return '<b>' + d + '</b>';
	        };
	        for (var s = 0; s < epoches.length; s++) {
	            var tick_d = {
	                epoch: epoches[s],
	                quote: spots2[epoches[s]]
	            };

	            if (isVisible(spots) && tick_d.epoch && tick_d.epoch > purchase_data.buy.start_time) {
	                var fragment = document.createElement('div');
	                fragment.classList.add('row');

	                var el1 = document.createElement('div');
	                el1.classList.add('col');
	                elementTextContent(el1, Content.localize().textTickResultLabel + ' ' + (spots.getElementsByClassName('row').length + 1));
	                fragment.appendChild(el1);

	                var el2 = document.createElement('div');
	                el2.classList.add('col');
	                var date = new Date(tick_d.epoch * 1000);
	                var hours = date.getUTCHours() < 10 ? '0' + date.getUTCHours() : date.getUTCHours();
	                var minutes = date.getUTCMinutes() < 10 ? '0' + date.getUTCMinutes() : date.getUTCMinutes();
	                var seconds = date.getUTCSeconds() < 10 ? '0' + date.getUTCSeconds() : date.getUTCSeconds();
	                elementTextContent(el2, hours + ':' + minutes + ':' + seconds);
	                fragment.appendChild(el2);

	                var tick = tick_d.quote.replace(/\d$/, replace);
	                var el3 = document.createElement('div');
	                el3.classList.add('col');
	                elementInnerHtml(el3, tick);
	                fragment.appendChild(el3);

	                spots.appendChild(fragment);
	                spots.scrollTop = spots.scrollHeight;

	                if (last_digit && duration === 1) {
	                    var contract_status = void 0,
	                        final_price = void 0,
	                        pnl = void 0;
	                    var pass_contract_type = purchase_data.echo_req.passthrough.contract_type,
	                        pass_barrier = purchase_data.echo_req.passthrough.barrier;

	                    if (pass_contract_type === 'DIGITMATCH' && +last_digit === +pass_barrier || pass_contract_type === 'DIGITDIFF' && +last_digit !== +pass_barrier || pass_contract_type === 'DIGITEVEN' && +last_digit % 2 === 0 || pass_contract_type === 'DIGITODD' && +last_digit % 2 || pass_contract_type === 'DIGITOVER' && +last_digit > pass_barrier || pass_contract_type === 'DIGITUNDER' && +last_digit < pass_barrier) {
	                        spots.className = 'won';
	                        final_price = $('#contract_purchase_payout').find('p').text();
	                        pnl = $('#contract_purchase_cost').find('p').text();
	                        contract_status = Content.localize().textContractStatusWon;
	                    } else {
	                        spots.className = 'lost';
	                        final_price = 0;
	                        pnl = -$('#contract_purchase_cost').find('p').text();
	                        contract_status = Content.localize().textContractStatusLost;
	                    }

	                    updatePurchaseStatus(final_price, pnl, contract_status);
	                }

	                duration--;
	                if (!duration) {
	                    purchase_data.echo_req.passthrough.duration = 0;
	                }
	            }
	        }
	    };

	    return {
	        display: display,
	        update_spot_list: update_spot_list
	    };
	}();

	module.exports = {
	    Purchase: Purchase
	};

/***/ },
/* 478 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Contract = __webpack_require__(472).Contract;
	var Defaults = __webpack_require__(457).Defaults;
	var Durations = __webpack_require__(473).Durations;
	var getStartDateNode = __webpack_require__(455).getStartDateNode;
	var moment = __webpack_require__(308);
	var Content = __webpack_require__(426).Content;
	var State = __webpack_require__(304).State;

	/*
	 * Handles start time display
	 *
	 * It process `Contract.startDates` in case of forward
	 * starting contracts and populate the start time select
	 * box
	 */

	var StartDates = function () {
	    'use strict';

	    var hasNow = 0;
	    State.remove('is_start_dates_displayed');

	    var compareStartDate = function compareStartDate(a, b) {
	        if (a.date < b.date) {
	            return -1;
	        }
	        if (a.date > b.date) {
	            return 1;
	        }
	        return 0;
	    };

	    var displayStartDates = function displayStartDates() {
	        var startDates = Contract.startDates();

	        if (startDates && startDates.list && startDates.list.length) {
	            (function () {
	                var target = getStartDateNode(),
	                    fragment = document.createDocumentFragment(),
	                    row = document.getElementById('date_start_row');
	                var option = void 0,
	                    content = void 0;

	                row.style.display = 'flex';

	                while (target && target.firstChild) {
	                    target.removeChild(target.firstChild);
	                }

	                if (startDates.has_spot) {
	                    option = document.createElement('option');
	                    content = document.createTextNode(Content.localize().textNow);
	                    option.setAttribute('value', 'now');
	                    $('#date_start').removeClass('light-yellow-background');
	                    option.appendChild(content);
	                    fragment.appendChild(option);
	                    hasNow = 1;
	                } else {
	                    hasNow = 0;
	                }

	                startDates.list.sort(compareStartDate);

	                var first = void 0;
	                startDates.list.forEach(function (start_date) {
	                    var a = moment.unix(start_date.open).utc();
	                    var b = moment.unix(start_date.close).utc();

	                    var ROUNDING = 5 * 60 * 1000;
	                    var start = moment.utc();

	                    if (moment(start).isAfter(moment(a))) {
	                        a = start;
	                    }

	                    a = moment(Math.ceil(+a / ROUNDING) * ROUNDING).utc();

	                    while (a.isBefore(b)) {
	                        if (a.unix() - start.unix() > 5 * 60) {
	                            option = document.createElement('option');
	                            option.setAttribute('value', a.utc().unix());
	                            if (typeof first === 'undefined' && !hasNow) {
	                                first = a.utc().unix();
	                            }
	                            content = document.createTextNode(a.format('HH:mm ddd').replace(' ', ' GMT, '));
	                            if (option.value === Defaults.get('date_start')) {
	                                option.setAttribute('selected', 'selected');
	                            }
	                            option.appendChild(content);
	                            fragment.appendChild(option);
	                        }
	                        a.add(5, 'minutes');
	                    }
	                });
	                target.appendChild(fragment);
	                Defaults.set('date_start', target.value);
	                State.set('is_start_dates_displayed', true);
	                if (first) {
	                    Durations.onStartDateChange(first);
	                }
	            })();
	        } else {
	            State.remove('is_start_dates_displayed');
	            document.getElementById('date_start_row').style.display = 'none';
	            Defaults.remove('date_start');
	        }
	    };

	    return {
	        display: displayStartDates,
	        disable: function disable() {
	            getStartDateNode().setAttribute('disabled', 'disabled');
	        },
	        enable: function enable() {
	            getStartDateNode().removeAttribute('disabled');
	        }
	    };
	}();

	module.exports = {
	    StartDates: StartDates
	};

/***/ },
/* 479 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Contract = __webpack_require__(472).Contract;
	var Defaults = __webpack_require__(457).Contract;
	var Contract_Beta = __webpack_require__(480).Contract_Beta;

	/*
	 * function to set placeholder text based on current form, used for mobile menu
	 */
	function setFormPlaceholderContent(name) {
	    'use strict';

	    var formPlaceholder = document.getElementById('contract_form_nav_placeholder');
	    if (formPlaceholder) {
	        name = name || Defaults.get('formname');
	        formPlaceholder.textContent = Contract.contractForms()[name];
	    }
	}

	/*
	 * function to set placeholder text based on current form, used for mobile menu
	 */
	function setFormPlaceholderContent_Beta(name) {
	    'use strict';

	    var formPlaceholder = document.getElementById('contract_form_nav_placeholder');
	    if (formPlaceholder) {
	        name = name || Defaults.get('formname');
	        formPlaceholder.textContent = Contract_Beta.contractForms()[name];
	    }
	}

	module.exports = {
	    setFormPlaceholderContent: setFormPlaceholderContent,
	    setFormPlaceholderContent_Beta: setFormPlaceholderContent_Beta
	};

/***/ },
/* 480 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var objectNotEmpty = __webpack_require__(419).objectNotEmpty;
	var Content = __webpack_require__(426).Content;
	var getFormNameBarrierCategory = __webpack_require__(456).getFormNameBarrierCategory;
	var localize = __webpack_require__(423).localize;
	var getLanguage = __webpack_require__(303).getLanguage;

	/*
	 * Contract object mocks the trading form we have on our website
	 * It parses the contracts json we get from socket.send({contracts_for: 'R_50'})
	 * and gives back barriers, startDate, durations etc
	 *
	 *
	 * Usage:
	 *
	 * use `Contract.details` to populate this object
	 *
	 * then use
	 *
	 * `Contract.durations()` to get durations like seconds, hours etc
	 * `Contract.open()` `Contract.close()`
	 * `Contract.barriers` if applicable for current underlying
	 */
	var Contract_Beta = function () {
	    'use strict';

	    var _contractType = {};
	    var contractDetails = {},
	        _durations = {},
	        _startDates = {},
	        _barriers = {},
	        _open = void 0,
	        _close = void 0,
	        _form = void 0,
	        _barrier = void 0;

	    var populate_durations = function populate_durations(currentContract) {
	        var currentCategory = currentContract.contract_category,
	            expiry_type = currentContract.expiry_type,
	            barrier_category = currentContract.barrier_category,
	            start_type = currentContract.start_type,
	            max_duration = currentContract.max_contract_duration,
	            min_duration = currentContract.min_contract_duration;

	        if (!_durations[expiry_type]) {
	            _durations[expiry_type] = {};
	        }

	        if (!_durations[expiry_type][currentCategory]) {
	            _durations[expiry_type][currentCategory] = {};
	        }

	        if (!_durations[expiry_type][currentCategory][barrier_category]) {
	            _durations[expiry_type][currentCategory][barrier_category] = {};
	        }

	        if (!_durations[expiry_type][currentCategory][barrier_category][start_type]) {
	            _durations[expiry_type][currentCategory][barrier_category][start_type] = {};
	        }

	        _durations[expiry_type][currentCategory][barrier_category][start_type].max_contract_duration = max_duration;

	        _durations[expiry_type][currentCategory][barrier_category][start_type].min_contract_duration = min_duration;
	    };

	    var details = function details(formName) {
	        var contracts = Contract_Beta.contracts().contracts_for;
	        var barrierCategory = void 0;

	        if (!contracts) return;

	        _startDates = { has_spot: 0, list: [] };
	        _durations = {};
	        _open = contracts.open;
	        _close = contracts.close;

	        var formBarrier = getFormNameBarrierCategory(formName);
	        _form = formName = formBarrier.formName;
	        _barrier = barrierCategory = formBarrier.barrierCategory;

	        contracts.available.forEach(function (currentObj) {
	            var contractCategory = currentObj.contract_category;

	            if (formName && formName === contractCategory) {
	                if (barrierCategory) {
	                    if (barrierCategory === currentObj.barrier_category) {
	                        populate_durations(currentObj);
	                    }
	                } else {
	                    populate_durations(currentObj);
	                }

	                if (currentObj.forward_starting_options && currentObj.start_type === 'forward' && sessionStorage.formname !== 'higherlower') {
	                    _startDates.list = currentObj.forward_starting_options;
	                } else if (currentObj.start_type === 'spot') {
	                    _startDates.has_spot = 1;
	                }

	                var symbol = currentObj.underlying_symbol;
	                if (currentObj.barrier_category && currentObj.barrier_category !== 'non_financial') {
	                    if (!_barriers.hasOwnProperty(symbol)) {
	                        _barriers[symbol] = {};
	                    }
	                    if (currentObj.barriers === 1) {
	                        _barriers[symbol][contractCategory] = {
	                            count: 1,
	                            barrier: currentObj.barrier,
	                            barrier_category: currentObj.barrier_category
	                        };
	                    } else if (currentObj.barriers === 2) {
	                        _barriers[symbol][contractCategory] = {
	                            count: 2,
	                            barrier: currentObj.high_barrier,
	                            barrier1: currentObj.low_barrier,
	                            barrier_category: currentObj.barrier_category
	                        };
	                    }
	                }

	                if (!_contractType[contractCategory]) {
	                    _contractType[contractCategory] = {};
	                }

	                if (!_contractType[contractCategory].hasOwnProperty(currentObj.contract_type)) {
	                    _contractType[contractCategory][currentObj.contract_type] = localize(currentObj.contract_display);
	                }
	            }
	        });

	        if (formName && barrierCategory) {
	            if (_barriers && _barriers[formName] && _barriers[formName].barrier_category !== barrierCategory) {
	                _barriers = {};
	            }
	        }
	    };

	    var getContracts = function getContracts(underlying) {
	        BinarySocket.send({ contracts_for: underlying });
	    };

	    var getContractForms = function getContractForms() {
	        var contracts = Contract_Beta.contracts().contracts_for,
	            tradeContractForms = {};

	        if (!contracts) return null;

	        contracts.available.forEach(function (currentObj) {
	            var contractCategory = currentObj.contract_category;
	            if (contractCategory && !tradeContractForms.hasOwnProperty(contractCategory)) {
	                if (contractCategory === 'callput') {
	                    if (currentObj.barrier_category === 'euro_atm') {
	                        tradeContractForms.risefall = Content.localize().textFormRiseFall;
	                    } else {
	                        tradeContractForms.higherlower = Content.localize().textFormHigherLower;
	                    }
	                } else {
	                    tradeContractForms[contractCategory] = localize(currentObj.contract_category_display);
	                    if (contractCategory === 'digits') {
	                        tradeContractForms.matchdiff = Content.localize().textFormMatchesDiffers;
	                        if (getLanguage() !== 'ID') {
	                            tradeContractForms.evenodd = Content.localize().textFormEvenOdd;
	                            tradeContractForms.overunder = Content.localize().textFormOverUnder;
	                        }
	                    }
	                }
	            }
	        });

	        if (!objectNotEmpty(tradeContractForms)) return null;

	        if (tradeContractForms.risefall || tradeContractForms.higherlower) {
	            tradeContractForms.updown = Content.localize().textFormUpDown;
	        }

	        if (tradeContractForms.endsinout || tradeContractForms.staysinout) {
	            tradeContractForms.inout = Content.localize().textFormInOut;
	        }

	        return tradeContractForms;
	    };

	    return {
	        details: details,
	        getContracts: getContracts,
	        contractForms: getContractForms,
	        open: function open() {
	            return _open;
	        },
	        close: function close() {
	            return _close;
	        },
	        contracts: function contracts() {
	            return contractDetails;
	        },
	        durations: function durations() {
	            return _durations;
	        },
	        startDates: function startDates() {
	            return _startDates;
	        },
	        barriers: function barriers() {
	            return _barriers;
	        },
	        contractType: function contractType() {
	            return _contractType;
	        },
	        form: function form() {
	            return _form;
	        },
	        barrier: function barrier() {
	            return _barrier;
	        },
	        setContracts: function setContracts(data) {
	            contractDetails = data;
	        }
	    };
	}();

	module.exports = {
	    Contract_Beta: Contract_Beta
	};

/***/ },
/* 481 */
/***/ function(module, exports) {

	'use strict';

	function onlyNumericOnKeypress(ev, optional_value) {
	    var key = ev.keyCode;
	    var char = String.fromCharCode(ev.which);
	    var array_of_char = [8, 37, 39, 46]; // delete, backspace, arrow keys
	    if (optional_value && optional_value.length > 0) {
	        array_of_char = array_of_char.concat(optional_value);
	    }
	    if (char === '.' && ev.target.value.indexOf(char) >= 0 || !/[0-9\.]/.test(char) && array_of_char.indexOf(key) < 0 || /['%]/.test(char)) {
	        // similarity to arrows key code in some browsers
	        ev.returnValue = false;
	        ev.preventDefault();
	    }
	}

	module.exports = {
	    onlyNumericOnKeypress: onlyNumericOnKeypress
	};

/***/ },
/* 482 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var moment = __webpack_require__(308);
	var checkInput = __webpack_require__(420).checkInput;
	var localize = __webpack_require__(423).localize;

	var TimePicker = function TimePicker(component_selector) {
	    this.component_selector = component_selector;
	};

	TimePicker.prototype = {
	    show: function show(min_time, max_time) {
	        this.checkWidth(this.config(min_time, max_time), this.component_selector, this);
	        var that = this;
	        $(window).resize(function () {
	            that.checkWidth(that.config_data, that.component_selector, that);
	        });
	    },
	    hide: function hide() {
	        if ($(this.component_selector + '.hasTimepicker').length > 0) {
	            $(this.component_selector).timepicker('destroy').removeAttr('data-picker');
	        }
	        $(this.component_selector).off('keydown');
	    },
	    create: function create(config) {
	        var that = this;
	        $(this.component_selector).keydown(function (e) {
	            if (e.which === 13) {
	                e.preventDefault();
	                e.stopPropagation();
	                $(this).timepicker('setTime', $(this).val());
	                $(this).timepicker('hide');
	                $(this).blur();
	                $(that).trigger('enter_pressed');
	                return false;
	            }
	            return true;
	        }).timepicker(config);
	    },
	    time_now: function time_now() {
	        return moment.utc(window.time);
	    },
	    config: function config(min_time, max_time) {
	        var that = this;
	        var time_now = this.time_now();

	        var config = {
	            hourText: localize('Hour'),
	            minuteText: localize('Minute'),
	            amPmText: localize(['AM', 'PM'])
	        };
	        if (min_time) {
	            min_time = min_time === 'now' ? time_now : moment.utc(min_time);
	            if (min_time.isBefore(time_now)) {
	                min_time = time_now;
	            }
	            config.minTime = { hour: parseInt(min_time.hour()), minute: parseInt(min_time.minute()) };
	        }
	        if (max_time) {
	            max_time = moment.utc(max_time);
	            config.maxTime = { hour: parseInt(max_time.hour()), minute: parseInt(max_time.minute()) };
	        }

	        config.onSelect = function (time) {
	            var oldValue = $(that.component_selector).attr('data-value');
	            if (!time.match(/^(:?[0-3]\d):(:?[0-5]\d):(:?[0-5]\d)$/)) {
	                time_now = that.time_now();
	                var invalid = time.match(/([a-z0-9]*):([a-z0-9]*):?([a-z0-9]*)?/);
	                var hour = time_now.format('hh'),
	                    minute = time_now.format('mm'),
	                    second = time_now.format('ss');

	                if (typeof invalid[1] !== 'undefined' && isFinite(invalid[1])) {
	                    hour = parseInt(invalid[1]);
	                    if (hour < 10) {
	                        hour = '0' + hour;
	                    }
	                }
	                if (typeof invalid[2] !== 'undefined' && isFinite(invalid[2])) {
	                    minute = parseInt(invalid[2]);
	                    if (parseInt(minute) < 10) {
	                        minute = '0' + minute;
	                    }
	                }
	                if (typeof invalid[3] !== 'undefined' && isFinite(invalid[3])) {
	                    second = parseInt(invalid[3]);
	                    if (second < 10) {
	                        second = '0' + minute;
	                    }
	                }

	                var new_time = moment(time_now.format('YYYY-MM-DD') + ' ' + hour + ':' + minute + ':' + second).format('HH:mm');

	                if (oldValue && oldValue === new_time) return false;

	                $(this).val(new_time);
	                $(this).attr('data-value', new_time);
	                $(that.component_selector).trigger('change', [new_time]);
	            } else {
	                if (oldValue && oldValue === time) return false;
	                $(this).attr('data-value', time);
	                $(that.component_selector).trigger('change', [time]);
	            }
	            return true;
	        };

	        this.config_data = config;

	        return config;
	    },
	    getTime: function getTime(time) {
	        var hour = ('0' + time.hour).slice(-2),
	            minute = ('0' + time.minute).slice(-2),
	            second = '00';
	        return [hour, minute, second].join(':');
	    },
	    checkWidth: function checkWidth(config, component_selector, that) {
	        var $selector = $(that.component_selector);
	        if ($(window).width() < 770 && checkInput('time', 'not-a-time') && $selector.attr('data-picker') !== 'native') {
	            that.hide($selector);
	            $selector.attr({ type: 'time', 'data-picker': 'native' });
	            var minTime = config.minTime;
	            if (minTime) {
	                $selector.attr('min', that.getTime(minTime));
	            }
	            var maxTime = config.maxTime;
	            if (maxTime) {
	                $selector.attr('max', that.getTime(maxTime));
	            }
	        } else if ($(window).width() > 769 && $selector.attr('data-picker') !== 'jquery' || $(window).width() < 770 && !checkInput('time', 'not-a-time')) {
	            $selector.attr({ type: 'text', 'data-picker': 'jquery' });
	            $selector.removeAttr('min');
	            $selector.removeAttr('max');
	            that.create(config);
	        }
	    }
	};

	module.exports = {
	    TimePicker: TimePicker
	};

/***/ },
/* 483 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var MenuContent = __webpack_require__(484).MenuContent;
	var Url = __webpack_require__(306).Url;
	var url = __webpack_require__(306).url;
	var GTM = __webpack_require__(430).GTM;
	var SessionStore = __webpack_require__(304).SessionStore;
	var State = __webpack_require__(304).State;
	var Contents = __webpack_require__(485).Contents;
	var url_for = __webpack_require__(306).url_for;
	var Client = __webpack_require__(305).Client;
	var Login = __webpack_require__(302).Login;
	var page = __webpack_require__(486).page;
	var japanese_client = __webpack_require__(307).japanese_client;
	var pjax = __webpack_require__(496);

	var make_mobile_menu = function make_mobile_menu() {
	    if ($('#mobile-menu-container').is(':visible')) {
	        $('#mobile-menu').mmenu({
	            position: 'right',
	            zposition: 'front',
	            slidingSubmenus: false,
	            searchfield: true,
	            onClick: {
	                close: true
	            }
	        }, {
	            selectedClass: 'active'
	        });
	    }
	};

	// For object shape coherence we create named objects to be inserted into the queue.
	var URLPjaxQueueElement = function URLPjaxQueueElement(exec_function, new_url) {
	    this.method = exec_function;
	    if (new_url) {
	        this.url = new RegExp(new_url);
	    } else {
	        this.url = /.*/;
	    }
	};

	URLPjaxQueueElement.prototype = {
	    fire: function fire(in_url) {
	        if (this.url.test(in_url)) {
	            this.method();
	        }
	    }
	};

	var IDPjaxQueueElement = function IDPjaxQueueElement(exec_function, id) {
	    this.method = exec_function;
	    this.sel = '#' + id;
	};

	IDPjaxQueueElement.prototype = {
	    fire: function fire() {
	        if ($(this.sel).length > 0) {
	            this.method();
	        }
	    }
	};

	var PjaxExecQueue = function PjaxExecQueue() {
	    this.url_exec_queue = [];
	    this.id_exec_queue = [];
	    this.fired = false;
	    this.content = $('#content');
	};

	PjaxExecQueue.prototype = {
	    queue: function queue(exec_function) {
	        this.url_exec_queue.unshift(new URLPjaxQueueElement(exec_function));
	    },
	    queue_for_url: function queue_for_url(exec_function, url_pattern) {
	        this.url_exec_queue.unshift(new URLPjaxQueueElement(exec_function, url_pattern));
	    },
	    fire: function fire() {
	        if (!this.fired) {
	            var match_loc = window.location.href;
	            var i = this.url_exec_queue.length;
	            while (i--) {
	                this.url_exec_queue[i].fire(match_loc);
	            }

	            i = this.id_exec_queue.length;
	            while (i--) {
	                this.id_exec_queue[i].fire(match_loc);
	            }
	        }
	        this.fired = true;
	    },
	    reset: function reset() {
	        this.fired = false;
	    },
	    loading: function loading() {
	        this.reset();
	    }
	};

	var pjax_config_page = function pjax_config_page(new_url, exec_functions) {
	    var functions = exec_functions();
	    if (functions.onLoad) onLoad.queue_for_url(functions.onLoad, new_url);
	    if (functions.onUnload) onUnload.queue_for_url(functions.onUnload, new_url);
	};

	var pjax_config = function pjax_config() {
	    return {
	        container: 'content',
	        beforeSend: function beforeSend() {
	            onLoad.loading();
	            onUnload.fire();
	        },
	        complete: function complete() {
	            State.set('is_loaded_by_pjax', true);
	            onLoad.fire();
	            onUnload.reset();
	        },
	        error: function error() {
	            var error_text = SessionStore.get('errors.500');
	            if (error_text) {
	                $('#content').html(error_text);
	            } else {
	                $.get('/errors/500.html').always(function (content) {
	                    var tmp = document.createElement('div');
	                    tmp.innerHTML = content;
	                    var tmpNodes = tmp.getElementsByTagName('div');
	                    for (var i = 0, l = tmpNodes.length; i < l; i++) {
	                        if (tmpNodes[i].id === 'content') {
	                            SessionStore.set('errors.500', tmpNodes[i].innerHTML);
	                            $('#content').html(tmpNodes[i].innerHTML);
	                            break;
	                        }
	                    }
	                });
	            }
	        },
	        useClass: 'pjaxload'
	    };
	};

	var init_pjax = function init_pjax() {
	    if (!$('body').hasClass('BlueTopBack')) {
	        // No Pjax for BO.
	        pjax.connect(pjax_config());
	    }
	};

	var load_with_pjax = function load_with_pjax(new_url) {
	    if (url.is_in(new Url(new_url))) {
	        return;
	    }

	    var config = pjax_config();
	    config.url = new_url;
	    config.update_url = new_url;
	    config.history = true;
	    pjax.invoke(config);
	};

	// Reduce duplication as required Auth is a common pattern
	var pjax_config_page_require_auth = function pjax_config_page_require_auth(new_url, exec) {
	    var oldOnLoad = exec().onLoad;
	    var newOnLoad = function newOnLoad() {
	        if (!Contents.show_login_if_logout(true)) {
	            oldOnLoad();
	        }
	    };

	    var newExecFn = function newExecFn() {
	        return {
	            onLoad: newOnLoad,
	            onUnload: exec().onUnload
	        };
	    };
	    pjax_config_page(new_url, newExecFn);
	};

	var onLoad = new PjaxExecQueue();
	var onUnload = new PjaxExecQueue();

	init_pjax(); // Pjax-standalone will wait for on load event before attaching.
	$(function () {
	    onLoad.fire();
	});

	onLoad.queue(GTM.push_data_layer);

	onLoad.queue(function () {
	    page.on_load();
	    $('#logo').on('click', function () {
	        load_with_pjax(url_for(Client.get_boolean('is_logged_in') ? japanese_client() ? 'multi_barriers_trading' : 'trading' : ''));
	    });
	    $('#btn_login').on('click', function (e) {
	        e.preventDefault();
	        Login.redirect_to_login();
	    });
	});

	onUnload.queue(function () {
	    page.on_unload();
	});

	onLoad.queue(function () {
	    $('.tm-ul > li').hover(function () {
	        $(this).addClass('hover');
	    }, function () {
	        $(this).removeClass('hover');
	    });

	    MenuContent.init($('.content-tab-container').find('.tm-ul'));

	    make_mobile_menu();

	    var i = window.location.href.split('#');
	    if (i.length !== 2) return;
	    var o = document.getElementsByTagName('a');
	    for (var t = 0; t < o.length; t++) {
	        if (o[t].href.substr(o[t].href.length - i[1].length - 1) === '#' + i[1]) {
	            o[t].click();
	            break;
	        }
	    }
	});

	module.exports = {
	    load_with_pjax: load_with_pjax,
	    pjax_config_page: pjax_config_page,
	    pjax_config_page_require_auth: pjax_config_page_require_auth
	};

/***/ },
/* 484 */
/***/ function(module, exports) {

	'use strict';

	var MenuContent = function () {
	    var listeners_events = [];

	    var that = {
	        init: function init(_menu_containers) {
	            if (/trading/.test(window.location.pathname)) return;
	            _menu_containers.filter(':not(.follow-default)').delegate('.tm-a,.tm-a-2', 'click', function (event) {
	                event.preventDefault();

	                var target = $(event.target);
	                var tab_id = target.parents('li:first').attr('id');

	                if (tab_id) {
	                    var tab_container = target.parents('.tm-ul');
	                    /* eslint-disable newline-per-chained-call */
	                    var selected_tab =
	                    // find previously active tab
	                    tab_container.find('.tm-a, .tm-a-2')
	                    // remove previously active tab
	                    .removeClass('a-active').end()
	                    // unwrap previously active tab
	                    .find('.menu-wrap-a .tm-a').unwrap().unwrap()
	                    // go back to selected target
	                    .end().end()
	                    // set active class to it
	                    .addClass('a-active')
	                    // set active class to its parent as well
	                    .parents('.tm-li').addClass('active').removeClass('hover').find('.tm-li-2').addClass('active').end()
	                    // wrap it
	                    .find('.tm-a').wrap('<span class="menu-wrap-a"><span class="menu-wrap-b"></span></span>').end()
	                    // remove previously active parent
	                    .siblings().removeClass('active').find('.tm-li-2').removeClass('active').end().end().end();
	                    /* eslint-enable newline-per-chained-call */

	                    // replace span to a, to make it clickable for real
	                    var span_tm_a = tab_container.find('span.tm-a');
	                    span_tm_a.replaceWith('<a href="javascript:;" class="' + span_tm_a.attr('class') + '">' + span_tm_a.html() + '</a>');

	                    var menu_li = selected_tab.parents('li');
	                    var sub_menu_selected = menu_li.find('.tm-ul-2 .a-active'),
	                        selected_tab_id = menu_li.attr('id');
	                    var $selected_tab_content = $('#' + selected_tab_id + '-content');
	                    var selected_content = $selected_tab_content
	                    // show selected tab content
	                    .removeClass('invisible')
	                    // and hide the rest
	                    .siblings(':not(.sticky)').addClass('invisible').end();

	                    if (!sub_menu_selected.length) {
	                        sub_menu_selected = menu_li.find('.tm-a-2:first').addClass('a-active');

	                        if (sub_menu_selected.length) {
	                            selected_tab = sub_menu_selected;
	                            selected_tab_id = sub_menu_selected.parents('li').attr('id');
	                            selected_content = $selected_tab_content.removeClass('invisible');
	                        } else {
	                            selected_tab_id = menu_li.attr('id');
	                        }
	                    }

	                    that.push_to_listeners({
	                        id: selected_tab_id,
	                        target: selected_tab,
	                        content: selected_content,
	                        menu: menu_li.parents('ul.tm-ul'),
	                        event: event
	                    });
	                }

	                return false;
	            });
	        },
	        push_to_listeners: function push_to_listeners(info) {
	            // push to listeners events
	            for (var i = 0; i < listeners_events.length; i++) {
	                listeners_events[i](info);
	            }
	        },
	        trigger: function trigger(id) {
	            var tab_id = id.tab_id;
	            var content_id = id.content_id;

	            if (!tab_id && typeof content_id !== 'undefined') {
	                var matched = content_id.match(/^(.+)-content$/);
	                if (matched && matched[1]) {
	                    tab_id = matched[1];
	                }
	            }

	            if (!tab_id) {
	                return false;
	            }

	            var tab_to_trigger = $('#' + tab_id);

	            if (!tab_to_trigger.length || tab_to_trigger.hasClass('invisible')) {
	                return false;
	            }
	            // else
	            var tab = tab_to_trigger.find('.tm-a');
	            if (tab.length) {
	                return tab.trigger('click');
	            }
	            // else
	            return tab_to_trigger.find('.tm-a-2').trigger('click');
	        }
	    };

	    return that;
	}();

	module.exports = {
	    MenuContent: MenuContent
	};

/***/ },
/* 485 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var localize = __webpack_require__(423).localize;
	var Client = __webpack_require__(305).Client;
	var Login = __webpack_require__(302).Login;

	var Contents = function () {
	    var on_load = function on_load() {
	        Client.activate_by_client_type();
	        update_content_class();
	        init_draggable();
	    };

	    var on_unload = function on_unload() {
	        var $unbind_later = $('.unbind_later');
	        if ($unbind_later.length > 0) {
	            $unbind_later.off();
	        }
	    };

	    var update_content_class = function update_content_class() {
	        // This is required for our css to work.
	        $('#content').removeClass().addClass($('#content_class').text());
	    };

	    var init_draggable = function init_draggable() {
	        $('.draggable').draggable();
	    };

	    var show_login_if_logout = function show_login_if_logout(shouldReplacePageContents) {
	        if (!Client.get_boolean('is_logged_in') && shouldReplacePageContents) {
	            $('#content').find(' > .container').addClass('center-text').html($('<p/>', {
	                class: 'notice-msg',
	                html: localize('Please [_1] to view this page', ['<a class="login_link" href="javascript:;">' + localize('login') + '</a>'])
	            }));
	            $('.login_link').click(function () {
	                Login.redirect_to_login();
	            });
	        }
	        return !Client.get_boolean('is_logged_in');
	    };

	    return {
	        on_load: on_load,
	        on_unload: on_unload,

	        show_login_if_logout: show_login_if_logout
	    };
	}();

	module.exports = {
	    Contents: Contents
	};

/***/ },
/* 486 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Login = __webpack_require__(302).Login;
	var template = __webpack_require__(419).template;
	var LocalStore = __webpack_require__(304).LocalStore;
	var State = __webpack_require__(304).State;
	var localizeForLang = __webpack_require__(423).localizeForLang;
	var localize = __webpack_require__(423).localize;
	var getLanguage = __webpack_require__(303).getLanguage;
	var setCookieLanguage = __webpack_require__(303).setCookieLanguage;
	var Url = __webpack_require__(306).Url;
	var url_for = __webpack_require__(306).url_for;
	var Client = __webpack_require__(305).Client;
	var Header = __webpack_require__(429).Header;
	var Menu = __webpack_require__(487).Menu;
	var Contents = __webpack_require__(485).Contents;
	var TrafficSource = __webpack_require__(488).TrafficSource;
	var checkLanguage = __webpack_require__(307).checkLanguage;
	var ViewBalance = __webpack_require__(489).ViewBalance;
	var Cookies = __webpack_require__(301);
	var RealityCheck = __webpack_require__(490).RealityCheck;
	var RealityCheckData = __webpack_require__(492).RealityCheckData;
	__webpack_require__(493);
	__webpack_require__(494);
	__webpack_require__(495);

	var Page = function Page() {
	    State.set('is_loaded_by_pjax', false);
	    Client.init();
	    this.url = new Url();
	    Menu.init(this.url);
	};

	Page.prototype = {
	    on_load: function on_load() {
	        Client.set_check_tnc();
	        this.url.reset();
	        localizeForLang(getLanguage());
	        Header.on_load();
	        this.record_affiliate_exposure();
	        Contents.on_load();
	        if (State.get('is_loaded_by_pjax')) {
	            this.show_authenticate_message();
	            if (RealityCheckData.get_value('delay_reality_init')) {
	                RealityCheck.init();
	            } else if (RealityCheckData.get_value('delay_reality_check')) {
	                BinarySocket.send({ reality_check: 1 });
	            }
	        }
	        if (Client.get_boolean('is_logged_in')) {
	            ViewBalance.init();
	        } else {
	            LocalStore.set('reality_check.ack', 0);
	        }
	        setCookieLanguage();
	        if (sessionStorage.getItem('showLoginPage')) {
	            sessionStorage.removeItem('showLoginPage');
	            Login.redirect_to_login();
	        }
	        checkLanguage();
	        TrafficSource.setData();
	        this.endpoint_notification();
	        BinarySocket.init();
	        this.show_notification_outdated_browser();
	    },
	    on_unload: function on_unload() {
	        Menu.on_unload();
	        Contents.on_unload();
	    },
	    record_affiliate_exposure: function record_affiliate_exposure() {
	        var token = this.url.param('t');
	        if (!token || token.length !== 32) {
	            return false;
	        }
	        var token_length = token.length;
	        var is_subsidiary = /\w{1}/.test(this.url.param('s'));

	        var cookie_token = Cookies.getJSON('affiliate_tracking');
	        if (cookie_token) {
	            // Already exposed to some other affiliate.
	            if (is_subsidiary && cookie_token && cookie_token.t) {
	                return false;
	            }
	        }

	        // Record the affiliate exposure. Overwrite existing cookie, if any.
	        var cookie_hash = {};
	        if (token_length === 32) {
	            cookie_hash.t = token.toString();
	        }
	        if (is_subsidiary) {
	            cookie_hash.s = '1';
	        }

	        Cookies.set('affiliate_tracking', cookie_hash, {
	            expires: 365, // expires in 365 days
	            path: '/',
	            domain: '.' + location.hostname.split('.').slice(-2).join('.')
	        });
	        return true;
	    },
	    reload: function reload(forcedReload) {
	        window.location.reload(!!forcedReload);
	    },
	    endpoint_notification: function endpoint_notification() {
	        var server = localStorage.getItem('config.server_url');
	        if (server && server.length > 0) {
	            var message = (/www\.binary\.com/i.test(window.location.hostname) ? '' : localize('This is a staging server - For testing purposes only') + ' - ') + localize('The server <a href="[_1]">endpoint</a> is: [_2]', [url_for('endpoint'), server]),
	                $end_note = $('#end-note');
	            $end_note.html(message).removeClass('invisible');
	            $('#footer').css('padding-bottom', $end_note.height());
	        }
	    },
	    show_authenticate_message: function show_authenticate_message() {
	        if ($('.authenticate-msg').length !== 0 || /authenticatews\.html/.test(window.location.pathname)) return;

	        var p = $('<p/>', { class: 'authenticate-msg notice-msg' });
	        var span = void 0;

	        if (Client.status_detected('unwelcome')) {
	            var purchase_button = $('.purchase_button');
	            if (purchase_button.length > 0 && !purchase_button.parent().hasClass('button-disabled')) {
	                $.each(purchase_button, function () {
	                    $(this).off('click dblclick').removeAttr('data-balloon').parent().addClass('button-disabled');
	                });
	            }
	        }

	        if (Client.status_detected('unwelcome, cashier_locked', 'any')) {
	            var if_balance_zero = $('#if-balance-zero');
	            if (if_balance_zero.length > 0 && !if_balance_zero.hasClass('button-disabled')) {
	                if_balance_zero.removeAttr('href').addClass('button-disabled');
	            }
	        }

	        var href = window.location.href,
	            cashier_page = /cashier[\/\w]*\.html/.test(href),
	            withdrawal_page = cashier_page && !/(deposit|payment_agent_listws)/.test(href);

	        if (Client.status_detected('authenticated, unwelcome', 'all')) {
	            span = $('<span/>', { html: template(localize('Your account is currently suspended. Only withdrawals are now permitted. For further information, please contact [_1].', ['<a href="mailto:support@binary.com">support@binary.com</a>'])) });
	        } else if (Client.status_detected('unwelcome')) {
	            span = this.general_authentication_message();
	        } else if (Client.status_detected('authenticated, cashier_locked', 'all') && cashier_page) {
	            span = $('<span/>', { html: template(localize('Deposits and withdrawal for your account is not allowed at this moment. Please contact [_1] to unlock it.', ['<a href="mailto:support@binary.com">support@binary.com</a>'])) });
	        } else if (Client.status_detected('cashier_locked') && cashier_page) {
	            span = this.general_authentication_message();
	        } else if (Client.status_detected('authenticated, withdrawal_locked', 'all') && withdrawal_page) {
	            span = $('<span/>', { html: template(localize('Withdrawal for your account is not allowed at this moment. Please contact [_1] to unlock it.', ['<a href="mailto:support@binary.com">support@binary.com</a>'])) });
	        } else if (Client.status_detected('withdrawal_locked') && withdrawal_page) {
	            span = this.general_authentication_message();
	        }
	        if (span) {
	            $('#content').find('> .container').prepend(p.append(span));
	        }
	    },
	    general_authentication_message: function general_authentication_message() {
	        var span = $('<span/>', { html: template(localize('To authenticate your account, kindly email the following to [_1]:', ['<a href="mailto:support@binary.com">support@binary.com</a>'])) });
	        var ul = $('<ul/>', { class: 'checked' });
	        var li1 = $('<li/>', { text: localize('A scanned copy of your passport, driving licence (provisional or full) or identity card, showing your name and date of birth. Your document must be valid for at least 6 months after this date.') });
	        var li2 = $('<li/>', { text: localize('A scanned copy of a utility bill or bank statement (no more than 3 months old)') });
	        return span.append(ul.append(li1, li2));
	    },
	    show_notification_outdated_browser: function show_notification_outdated_browser() {
	        window.$buoop = {
	            vs: { i: 11, f: -4, o: -4, s: 9, c: -4 },
	            api: 4,
	            l: getLanguage().toLowerCase(),
	            url: 'https://whatbrowser.org/'
	        };
	        $(document).ready(function () {
	            $('body').append($('<script/>', { src: '//browser-update.org/update.min.js' }));
	        });
	    }
	};

	var page = new Page();

	// LocalStorage can be used as a means of communication among
	// different windows. The problem that is solved here is what
	// happens if the user logs out or switches loginid in one
	// window while keeping another window or tab open. This can
	// lead to unintended trades. The solution is to reload the
	// page in all windows after switching loginid or after logout.

	// onLoad.queue does not work on the home page.
	// jQuery's ready function works always.

	$(document).ready(function () {
	    if ($('body').hasClass('BlueTopBack')) return; // exclude BO
	    // Cookies is not always available.
	    // So, fall back to a more basic solution.
	    var match = document.cookie.match(/\bloginid=(\w+)/);
	    match = match ? match[1] : '';
	    $(window).on('storage', function (jq_event) {
	        switch (jq_event.originalEvent.key) {
	            case 'active_loginid':
	                if (jq_event.originalEvent.newValue === match) return;
	                if (jq_event.originalEvent.newValue === '') {
	                    // logged out
	                    page.reload();
	                } else if (!window.is_logging_in) {
	                    // loginid switch
	                    page.reload();
	                }
	                break;
	            case 'new_release_reload_time':
	                if (jq_event.originalEvent.newValue !== jq_event.originalEvent.oldValue) {
	                    page.reload(true);
	                }
	                break;
	            // no default
	        }
	    });
	    LocalStore.set('active_loginid', match);
	});

	module.exports = {
	    page: page
	};

/***/ },
/* 487 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Url = __webpack_require__(306).Url;
	var Client = __webpack_require__(305).Client;

	var Menu = function () {
	    var page_url = void 0;

	    var init = function init(url) {
	        page_url = url;
	        $(page_url).on('change', function () {
	            activate();
	        });
	    };

	    var activate = function activate() {
	        $('#menu-top').find('li').removeClass('active');
	        hide_main_menu();

	        var active = active_menu_top();
	        var trading = new RegExp('\/(jp_|multi_barriers_|)trading\.html');
	        var trading_is_active = trading.test(window.location.pathname);
	        if (active) {
	            active.addClass('active');
	        }
	        var is_trading_submenu = /\/cashier|\/resources/.test(window.location.pathname) || trading_is_active;
	        if (Client.get_boolean('is_logged_in') || trading_is_active || is_trading_submenu) {
	            show_main_menu();
	        }
	    };

	    var show_main_menu = function show_main_menu() {
	        $('#main-menu').removeClass('hidden');
	        activate_main_menu();
	    };

	    var hide_main_menu = function hide_main_menu() {
	        $('#main-menu').addClass('hidden');
	    };

	    var activate_main_menu = function activate_main_menu() {
	        // First unset everything.
	        var $main_menu = $('#main-menu');
	        $main_menu.find('li.item').removeClass('active hover');
	        $main_menu.find('li.sub_item a').removeClass('a-active');

	        var active = active_main_menu();
	        if (active.subitem) {
	            active.subitem.addClass('a-active');
	        }

	        if (active.item) {
	            active.item.addClass('active');
	            active.item.addClass('hover');
	        }

	        on_mouse_hover(active.item);
	    };

	    var on_unload = function on_unload() {
	        $('#main-menu').find('.item').unbind().end().unbind();
	    };

	    var on_mouse_hover = function on_mouse_hover(active_item) {
	        var $main_menu = $('#main-menu');
	        $main_menu.find('.item').on('mouseenter', function () {
	            $('#main-menu').find('li.item').removeClass('hover');
	            $(this).addClass('hover');
	        });

	        $main_menu.on('mouseleave', function () {
	            $main_menu.find('li.item').removeClass('hover');
	            if (active_item) active_item.addClass('hover');
	        });
	    };

	    var active_menu_top = function active_menu_top() {
	        var active = '';
	        var path = window.location.pathname;
	        $('#menu-top').find('li a').each(function () {
	            if (path.indexOf(this.pathname.replace(/\.html/i, '')) >= 0) {
	                active = $(this).closest('li');
	            }
	        });

	        return active;
	    };

	    var active_main_menu = function active_main_menu() {
	        var new_url = page_url;
	        if (/cashier/i.test(new_url.location.href) && !/cashier_password/.test(new_url.location.href)) {
	            new_url = new Url($('#topMenuCashier').find('a').attr('href'));
	        }

	        var item = '',
	            subitem = '';
	        var $main_menu = $('#main-menu');
	        // Is something selected in main items list
	        $main_menu.find('.items a').each(function () {
	            var url = new Url($(this).attr('href'));
	            if (url.is_in(new_url)) {
	                item = $(this).closest('.item');
	            }
	        });

	        $main_menu.find('.sub_items a').each(function () {
	            var link_href = $(this).attr('href');
	            if (link_href) {
	                var url = new Url(link_href);
	                if (url.is_in(new_url)) {
	                    item = $(this).closest('.item');
	                    subitem = $(this);
	                }
	            }
	        });

	        return { item: item, subitem: subitem };
	    };

	    return {
	        init: init,
	        on_unload: on_unload
	    };
	}();

	module.exports = {
	    Menu: Menu
	};

/***/ },
/* 488 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var CookieStorage = __webpack_require__(304).CookieStorage;
	var Url = __webpack_require__(306).Url;
	var url = __webpack_require__(306).url;
	var Client = __webpack_require__(305).Client;

	/*
	 * Handles utm parameters/referrer to use on signup
	 *
	 * Priorities:
	 * 1. Cookie having utm data (utm_source, utm_medium, utm_campaign) [Expires in 3 months]
	 * 2. Query string utm parameters
	 * 3. document.referrer
	 *
	 */

	var TrafficSource = function () {
	    'use strict';

	    var cookie = void 0;
	    var expire_months = 3;

	    var initCookie = function initCookie() {
	        if (!cookie) {
	            cookie = new CookieStorage('utm_data');
	            cookie.read();
	            // expiration date is used when writing cookie
	            var now = new Date();
	            cookie.expires = now.setMonth(now.getMonth() + expire_months);
	        }
	    };

	    var getData = function getData() {
	        initCookie();
	        var data = cookie.value;
	        Object.keys(data).map(function (key) {
	            data[key] = (data[key] || '').replace(/[^a-zA-Z0-9\s\-\.\_]/gi, '').substring(0, 100);
	        });
	        return data;
	    };

	    var getSource = function getSource(utm_data) {
	        if (!utm_data) utm_data = getData();
	        return utm_data.utm_source || utm_data.referrer || 'direct'; // in order of precedence
	    };

	    var setData = function setData() {
	        if (Client.get_boolean('is_logged_in')) {
	            clearData();
	            return;
	        }

	        var current_values = getData(),
	            params = url.params_hash(),
	            param_keys = ['utm_source', 'utm_medium', 'utm_campaign'];

	        if (params.utm_source) {
	            // url params can be stored only if utm_source is available
	            param_keys.map(function (key) {
	                if (params[key] && !current_values[key]) {
	                    cookie.set(key, params[key]);
	                }
	            });
	        }

	        var doc_ref = document.referrer;
	        var referrer = localStorage.getItem('index_referrer') || doc_ref;
	        localStorage.removeItem('index_referrer');
	        if (doc_ref && !new RegExp(window.location.hostname, 'i').test(doc_ref)) {
	            referrer = doc_ref;
	        }
	        if (referrer && !current_values.referrer && !params.utm_source && !current_values.utm_source) {
	            cookie.set('referrer', new Url(referrer).location.hostname);
	        }
	    };

	    var clearData = function clearData() {
	        initCookie();
	        cookie.remove();
	    };

	    return {
	        getData: getData,
	        setData: setData,
	        clearData: clearData,
	        getSource: getSource
	    };
	}();

	module.exports = {
	    TrafficSource: TrafficSource
	};

/***/ },
/* 489 */
/***/ function(module, exports) {

	"use strict";

	var ViewBalance = function () {
	    var init = function init() {
	        BinarySocket.init(1);
	    };

	    return {
	        init: init
	    };
	}();

	module.exports = {
	    ViewBalance: ViewBalance
	};

/***/ },
/* 490 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var RealityCheckUI = __webpack_require__(491).RealityCheckUI;
	var RealityCheckData = __webpack_require__(492).RealityCheckData;
	var Client = __webpack_require__(305).Client;

	var RealityCheck = function () {
	    'use strict';

	    var realityCheckWSHandler = function realityCheckWSHandler(response) {
	        RealityCheckUI.initializeValues();
	        if ($.isEmptyObject(response.reality_check)) {
	            // not required for reality check
	            RealityCheckUI.sendAccountStatus();
	            return;
	        }
	        if (/no-reality-check/.test(window.location.hash)) {
	            RealityCheckData.set_value('delay_reality_check', 1);
	        } else {
	            RealityCheckData.set_value('delay_reality_check', 0);
	            var summary = RealityCheckData.summaryData(response.reality_check);
	            RealityCheckUI.renderSummaryPopUp(summary);
	        }
	    };

	    var realityStorageEventHandler = function realityStorageEventHandler(ev) {
	        if (ev.key === 'reality_check.ack' && ev.newValue === '1') {
	            RealityCheckUI.closePopUp();
	            RealityCheckUI.startSummaryTimer();
	        } else if (ev.key === 'reality_check.keep_open' && ev.newValue === '0') {
	            RealityCheckUI.closePopUp();
	            RealityCheckUI.startSummaryTimer();
	        }
	    };

	    var init = function init() {
	        if (/no-reality-check/.test(window.location.hash)) {
	            RealityCheckData.set_value('delay_reality_init', 1);
	        } else {
	            RealityCheckData.set_value('delay_reality_init', 0);
	            RealityCheckUI.initializeValues();
	            if (!Client.get_boolean('has_reality_check')) {
	                RealityCheckData.set_value('loginid', Client.get_value('loginid'));
	                RealityCheckUI.sendAccountStatus();
	                return;
	            }

	            RealityCheckUI.setLoginTime(Client.get_value('session_start') * 1000);

	            window.addEventListener('storage', realityStorageEventHandler, false);

	            if (Client.get_value('loginid') !== RealityCheckData.get_value('loginid')) {
	                RealityCheckData.clear();
	            }

	            RealityCheckData.resetInvalid(); // need to reset after clear

	            if (!RealityCheckData.get_value('ack')) {
	                RealityCheckUI.renderFrequencyPopUp();
	            } else if (RealityCheckData.get_value('keep_open')) {
	                RealityCheckData.getSummaryAsync();
	            } else {
	                RealityCheckUI.startSummaryTimer();
	            }

	            RealityCheckData.set_value('loginid', Client.get_value('loginid'));
	            RealityCheckUI.sendAccountStatus();
	        }
	    };

	    return {
	        init: init,
	        realityCheckWSHandler: realityCheckWSHandler
	    };
	}();

	module.exports = {
	    RealityCheck: RealityCheck
	};

/***/ },
/* 491 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var showLocalTimeOnHover = __webpack_require__(439).Clock.showLocalTimeOnHover;
	var onlyNumericOnKeypress = __webpack_require__(481).onlyNumericOnKeypress;
	var Content = __webpack_require__(426).Content;
	var RealityCheckData = __webpack_require__(492).RealityCheckData;
	var localize = __webpack_require__(423).localize;
	var Client = __webpack_require__(305).Client;
	var url_for = __webpack_require__(306).url_for;
	__webpack_require__(493);
	__webpack_require__(494);

	var RealityCheckUI = function () {
	    'use strict';

	    var frequency_url = url_for('user/reality_check_frequencyws'),
	        summary_url = url_for('user/reality_check_summaryws'),
	        hiddenClass = 'invisible';
	    var loginTime = void 0,
	        // milliseconds
	    getAccountStatus = void 0;

	    var initializeValues = function initializeValues() {
	        getAccountStatus = false;
	    };

	    var showPopUp = function showPopUp(content) {
	        if ($('#reality-check').length > 0) {
	            return;
	        }

	        var lightboxDiv = $("<div id='reality-check' class='lightbox'></div>");

	        var wrapper = $('<div></div>');
	        wrapper = wrapper.append(content);
	        wrapper = $('<div></div>').append(wrapper);
	        wrapper.appendTo(lightboxDiv);
	        lightboxDiv.appendTo('body');

	        $('#realityDuration').val(RealityCheckData.get_value('interval')).keypress(onlyNumericOnKeypress);
	    };

	    var showIntervalOnPopUp = function showIntervalOnPopUp() {
	        var intervalMinutes = Math.floor(+RealityCheckData.get_value('interval') / 60 / 1000);
	        $('#realityDuration').val(intervalMinutes);
	    };

	    var getAjax = function getAjax(summary) {
	        $.ajax({
	            url: summary ? summary_url : frequency_url,
	            dataType: 'html',
	            method: 'GET',
	            success: function success(realityCheckText) {
	                ajaxSuccess(realityCheckText, summary);
	            }
	        });
	    };

	    var ajaxSuccess = function ajaxSuccess(realityCheckText, summary) {
	        if (realityCheckText.includes('reality-check-content')) {
	            var payload = $(realityCheckText);
	            showPopUp(payload.find('#reality-check-content'));
	            showIntervalOnPopUp();
	            $('#continue').click(onContinueClick);
	            $('#statement').click(onStatementClick);
	            $('button#btn_logout').click(onLogoutClick);
	            if (summary) {
	                updateSummary(summary);
	            }
	        }
	    };

	    var updateSummary = function updateSummary(summary) {
	        $('#start-time').text(summary.startTimeString);
	        $('#login-time').text(summary.loginTime);
	        $('#current-time').text(summary.currentTime);
	        $('#session-duration').text(summary.sessionDuration);

	        $('#login-id').text(summary.loginId);
	        $('#rc_currency').text(summary.currency);
	        $('#turnover').text(summary.turnover);
	        $('#profitloss').text(summary.profitLoss);
	        $('#bought').text(summary.contractsBought);
	        $('#sold').text(summary.contractsSold);
	        $('#open').text(summary.openContracts);
	        $('#potential').text(summary.potentialProfit);

	        showLocalTimeOnHover('#start-time');
	        showLocalTimeOnHover('#login-time');
	        showLocalTimeOnHover('#current-time');
	    };

	    var closePopUp = function closePopUp() {
	        $('#reality-check').remove();
	        RealityCheckUI.sendAccountStatus();
	    };

	    var onContinueClick = function onContinueClick() {
	        var intervalMinute = +$('#realityDuration').val();

	        if (!(Math.floor(intervalMinute) === intervalMinute && $.isNumeric(intervalMinute))) {
	            var shouldBeInteger = localize('Interval should be integer.');
	            $('#rc-err').text(shouldBeInteger).removeClass(hiddenClass);
	            return;
	        }

	        if (intervalMinute < 10 || intervalMinute > 120) {
	            Content.populate();
	            var minimumValueMsg = Content.errorMessage('number_should_between', '10 to 120');
	            $('#rc-err').text(minimumValueMsg).removeClass(hiddenClass);
	            return;
	        }

	        var intervalMs = intervalMinute * 60 * 1000;
	        RealityCheckData.set_value('interval', intervalMs);
	        RealityCheckData.set_value('keep_open', 0);
	        RealityCheckData.set_value('ack', 1);
	        RealityCheckUI.closePopUp();
	        startSummaryTimer();
	        sendAccountStatus();
	    };

	    var onStatementClick = function onStatementClick() {
	        var win = window.open(url_for('user/statementws') + '#no-reality-check', '_blank');
	        if (win) {
	            win.focus();
	        }
	    };

	    var onLogoutClick = function onLogoutClick() {
	        BinarySocket.send({ logout: '1' });
	    };

	    var sendAccountStatus = function sendAccountStatus() {
	        if (!Client.get_boolean('is_virtual') && Client.get_value('residence') !== 'jp' && !getAccountStatus) {
	            BinarySocket.send({ get_account_status: 1 });
	            getAccountStatus = true;
	        }
	    };

	    var startSummaryTimer = function startSummaryTimer() {
	        var interval = +RealityCheckData.get_value('interval');
	        var currentTime = Date.now();
	        var toWait = interval - (currentTime - loginTime) % interval;

	        window.setTimeout(function () {
	            RealityCheckData.set_value('keep_open', 1);
	            RealityCheckData.getSummaryAsync();
	        }, toWait);
	    };

	    return {
	        renderFrequencyPopUp: function renderFrequencyPopUp() {
	            getAjax();
	        },
	        renderSummaryPopUp: function renderSummaryPopUp(summary) {
	            getAjax(summary);
	        },
	        closePopUp: closePopUp,
	        sendAccountStatus: sendAccountStatus,
	        initializeValues: initializeValues,
	        startSummaryTimer: startSummaryTimer,
	        setLoginTime: function setLoginTime(time) {
	            loginTime = time;
	        }
	    };
	}();

	module.exports = {
	    RealityCheckUI: RealityCheckUI
	};

/***/ },
/* 492 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var template = __webpack_require__(419).template;
	var LocalStore = __webpack_require__(304).LocalStore;
	var moment = __webpack_require__(308);

	var RealityCheckData = function () {
	    'use strict';

	    var defaultInterval = 600000;
	    var durationTemplateString = '[_1] days [_2] hours [_3] minutes';
	    var tradingTimeTemplate = 'Your trading statistics since [_1].';
	    var reality_object = {};

	    var getSummaryAsync = function getSummaryAsync() {
	        BinarySocket.send({ reality_check: 1 });
	    };

	    var resetInvalid = function resetInvalid() {
	        var ack = get_storage_value('ack');
	        var interval = +get_storage_value('interval');
	        if (ack !== 0 && ack !== 1) {
	            set_storage_value('ack', 0);
	        }
	        if (!interval) {
	            set_storage_value('interval', defaultInterval);
	        }
	    };

	    var summaryData = function summaryData(wsData) {
	        var startTime = moment.utc(new Date(wsData.start_time * 1000));
	        var currentTime = moment.utc();

	        var sessionDuration = moment.duration(currentTime.diff(startTime));
	        var durationString = template(durationTemplateString, [sessionDuration.get('days'), sessionDuration.get('hours'), sessionDuration.get('minutes')]);

	        var turnover = +wsData.buy_amount + +wsData.sell_amount;
	        var profitLoss = +wsData.sell_amount - +wsData.buy_amount;

	        var startTimeString = template(tradingTimeTemplate, [startTime.format('YYYY-MM-DD HH:mm:ss') + ' GMT']);
	        return {
	            startTimeString: startTimeString,
	            loginTime: startTime.format('YYYY-MM-DD HH:mm:ss') + ' GMT',
	            currentTime: currentTime.format('YYYY-MM-DD HH:mm:ss') + ' GMT',
	            sessionDuration: durationString,
	            loginId: wsData.loginid,
	            currency: wsData.currency,
	            turnover: (+turnover).toFixed(2),
	            profitLoss: (+profitLoss).toFixed(2),
	            contractsBought: wsData.buy_count,
	            contractsSold: wsData.sell_count,
	            openContracts: wsData.open_contract_count,
	            potentialProfit: (+wsData.potential_profit).toFixed(2)
	        };
	    };

	    var set_storage_value = function set_storage_value(key, value) {
	        reality_object[key] = value;
	        return LocalStore.set('reality_check.' + key, value);
	    };

	    // use this function to get variables that have values
	    var get_storage_value = function get_storage_value(key) {
	        var value = reality_object[key] || LocalStore.get('reality_check.' + key) || '';
	        if (+value === 1 || +value === 0 || value === 'true' || value === 'false') {
	            value = JSON.parse(value || false);
	        }
	        return value;
	    };

	    var clear_storage_values = function clear_storage_values() {
	        // clear all reality check values from local storage except loginid
	        Object.keys(localStorage).forEach(function (c) {
	            if (/^reality_check\.(?!(loginid$))/.test(c)) {
	                LocalStore.set(c, '');
	            }
	        });
	    };

	    return {
	        getSummaryAsync: getSummaryAsync,
	        clear: clear_storage_values,
	        resetInvalid: resetInvalid,
	        summaryData: summaryData,
	        set_value: set_storage_value,
	        get_value: get_storage_value
	    };
	}();

	module.exports = {
	    RealityCheckData: RealityCheckData
	};

/***/ },
/* 493 */
/***/ function(module, exports) {

	'use strict';

	if (!('includes' in Array.prototype)) {
	    Array.prototype.includes = function includes(searchElement /*, fromIndex*/) {
	        'use strict';

	        var O = Object(this);
	        var len = parseInt(O.length) || 0;
	        if (len === 0) {
	            return false;
	        }
	        var n = parseInt(arguments[1]) || 0;
	        var k;
	        if (n >= 0) {
	            k = n;
	        } else {
	            k = len + n;
	            if (k < 0) {
	                k = 0;
	            }
	        }
	        var currentElement;
	        while (k < len) {
	            currentElement = O[k];
	            if (searchElement === currentElement || searchElement !== searchElement && currentElement !== currentElement) {
	                return true;
	            }
	            k++;
	        }
	        return false;
	    };
	}

/***/ },
/* 494 */
/***/ function(module, exports) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	if (!('includes' in String.prototype)) {
	    String.prototype.includes = function (string, index) {
	        if ((typeof string === 'undefined' ? 'undefined' : _typeof(string)) === 'object' && string instanceof RegExp) throw new TypeError("First argument to String.prototype.includes must not be a regular expression");
	        return this.indexOf(string, index) !== -1;
	    };
	}

/***/ },
/* 495 */
/***/ function(module, exports) {

	"use strict";

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	/*	
	 * jQuery mmenu v4.2.2
	 * @requires jQuery 1.7.0 or later
	 *
	 * mmenu.frebsite.nl
	 *	
	 * Copyright (c) Fred Heusschen
	 * www.frebsite.nl
	 *
	 * Dual licensed under the MIT and GPL licenses.
	 * http://en.wikipedia.org/wiki/MIT_License
	 * http://en.wikipedia.org/wiki/GNU_General_Public_License
	 */
	!function (e) {
	  function t(t, n, s) {
	    if (s) {
	      if ("object" != (typeof t === "undefined" ? "undefined" : _typeof(t)) && (t = {}), "boolean" != typeof t.isMenu) {
	        var o = s.children();t.isMenu = 1 == o.length && o.is(n.panelNodetype);
	      }return t;
	    }return t = e.extend(!0, {}, e[a].defaults, t), ("top" == t.position || "bottom" == t.position) && ("back" == t.zposition || "next" == t.zposition) && (e[a].deprecated('Using position "' + t.position + '" in combination with zposition "' + t.zposition + '"', 'zposition "front"'), t.zposition = "front"), t;
	  }function n(t) {
	    return t = e.extend(!0, {}, e[a].configuration, t), "string" != typeof t.pageSelector && (t.pageSelector = "> " + t.pageNodetype), t;
	  }function s() {
	    r.$wndw = e(window), r.$html = e("html"), r.$body = e("body"), r.$allMenus = e(), e.each([d, c, u], function (e, t) {
	      t.add = function (e) {
	        e = e.split(" ");for (var n in e) {
	          t[e[n]] = t.mm(e[n]);
	        }
	      };
	    }), d.mm = function (e) {
	      return "mm-" + e;
	    }, d.add("menu ismenu panel list subtitle selected label spacer current highest hidden page blocker modal background opened opening subopened subopen fullsubopen subclose"), d.umm = function (e) {
	      return "mm-" == e.slice(0, 3) && (e = e.slice(3)), e;
	    }, c.mm = function (e) {
	      return "mm-" + e;
	    }, c.add("parent style"), u.mm = function (e) {
	      return e + ".mm";
	    }, u.add("toggle open opening opened close closing closed update setPage setSelected transitionend webkitTransitionEnd mousedown touchstart mouseup touchend scroll touchmove click keydown keyup resize"), r.$wndw.on(u.keydown, function (e) {
	      return r.$html.hasClass(d.opened) && 9 == e.keyCode ? (e.preventDefault(), !1) : void 0;
	    });var t = 0;r.$wndw.on(u.resize, function (e, n) {
	      if (n || r.$html.hasClass(d.opened)) {
	        var s = r.$wndw.height();(n || s != t) && (t = s, r.$page.css("minHeight", s));
	      }
	    }), e[a]._c = d, e[a]._d = c, e[a]._e = u, e[a].glbl = r;
	  }function o(t, n) {
	    if (t.hasClass(d.current)) return !1;var s = e("." + d.panel, n),
	        o = s.filter("." + d.current);return s.removeClass(d.highest).removeClass(d.current).not(t).not(o).addClass(d.hidden), t.hasClass(d.opened) ? o.addClass(d.highest).removeClass(d.opened).removeClass(d.subopened) : (t.addClass(d.highest), o.addClass(d.subopened)), t.removeClass(d.hidden).removeClass(d.subopened).addClass(d.current).addClass(d.opened), "open";
	  }function i(e, t, n) {
	    var s = !1,
	        o = function o() {
	      s || t.call(e[0]), s = !0;
	    };e.one(u.transitionend, o), e.one(u.webkitTransitionEnd, o), setTimeout(o, 1.1 * n);
	  }var a = "mmenu",
	      l = "4.2.2";if (!e[a]) {
	    var r = { $wndw: null, $html: null, $body: null, $page: null, $blck: null, $allMenus: null },
	        d = {},
	        c = {},
	        u = {},
	        p = 0,
	        h = 0;e[a] = function (e, t, n) {
	      return r.$allMenus = r.$allMenus.add(e), this.$menu = e, this.opts = t, this.conf = n, this.serialnr = p++, this._init(), this;
	    }, e[a].prototype = { open: function open() {
	        var e = this;return this._openSetup(), setTimeout(function () {
	          e._openFinish();
	        }, 50), "open";
	      }, _openSetup: function _openSetup() {
	        h = r.$wndw.scrollTop(), this.$menu.addClass(d.current), r.$allMenus.not(this.$menu).trigger(u.close), r.$page.data(c.style, r.$page.attr("style") || ""), r.$wndw.trigger(u.resize, [!0]), this.opts.modal && r.$html.addClass(d.modal), this.opts.moveBackground && r.$html.addClass(d.background), "left" != this.opts.position && r.$html.addClass(d.mm(this.opts.position)), "back" != this.opts.zposition && r.$html.addClass(d.mm(this.opts.zposition)), this.opts.classes && r.$html.addClass(this.opts.classes), r.$html.addClass(d.opened), this.$menu.addClass(d.opened);
	      }, _openFinish: function _openFinish() {
	        var e = this;i(r.$page, function () {
	          e.$menu.trigger(u.opened);
	        }, this.conf.transitionDuration), r.$html.addClass(d.opening), this.$menu.trigger(u.opening);
	      }, close: function close() {
	        var e = this;return i(r.$page, function () {
	          e.$menu.removeClass(d.current).removeClass(d.opened), r.$html.removeClass(d.opened).removeClass(d.modal).removeClass(d.background).removeClass(d.mm(e.opts.position)).removeClass(d.mm(e.opts.zposition)), e.opts.classes && r.$html.removeClass(e.opts.classes), r.$page.attr("style", r.$page.data(c.style)), e.$menu.trigger(u.closed);
	        }, this.conf.transitionDuration), r.$html.removeClass(d.opening), this.$menu.trigger(u.closing), "close";
	      }, _init: function _init() {
	        if (this.opts = t(this.opts, this.conf, this.$menu), this.direction = this.opts.slidingSubmenus ? "horizontal" : "vertical", this._initPage(r.$page), this._initMenu(), this._initBlocker(), this._initPanles(), this._initLinks(), this._initOpenClose(), this._bindCustomEvents(), e[a].addons) for (var n = 0; n < e[a].addons.length; n++) {
	          "function" == typeof this["_addon_" + e[a].addons[n]] && this["_addon_" + e[a].addons[n]]();
	        }
	      }, _bindCustomEvents: function _bindCustomEvents() {
	        var t = this;this.$menu.off(u.open + " " + u.close + " " + u.setPage + " " + u.update).on(u.open + " " + u.close + " " + u.setPage + " " + u.update, function (e) {
	          e.stopPropagation();
	        }), this.$menu.on(u.open, function (n) {
	          return e(this).hasClass(d.current) ? (n.stopImmediatePropagation(), !1) : t.open();
	        }).on(u.close, function (n) {
	          return e(this).hasClass(d.current) ? t.close() : (n.stopImmediatePropagation(), !1);
	        }).on(u.setPage, function (e, n) {
	          t._initPage(n), t._initOpenClose();
	        });var n = this.$menu.find(this.opts.isMenu && "horizontal" != this.direction ? "ul, ol" : "." + d.panel);n.off(u.toggle + " " + u.open + " " + u.close).on(u.toggle + " " + u.open + " " + u.close, function (e) {
	          e.stopPropagation();
	        }), "horizontal" == this.direction ? n.on(u.open, function () {
	          return o(e(this), t.$menu);
	        }) : n.on(u.toggle, function () {
	          var t = e(this);return t.triggerHandler(t.parent().hasClass(d.opened) ? u.close : u.open);
	        }).on(u.open, function () {
	          return e(this).parent().addClass(d.opened), "open";
	        }).on(u.close, function () {
	          return e(this).parent().removeClass(d.opened), "close";
	        });
	      }, _initBlocker: function _initBlocker() {
	        var t = this;r.$blck || (r.$blck = e('<div id="' + d.blocker + '" />').appendTo(r.$body)), r.$blck.off(u.touchstart).on(u.touchstart, function (e) {
	          e.preventDefault(), e.stopPropagation(), r.$blck.trigger(u.mousedown);
	        }).on(u.mousedown, function (e) {
	          e.preventDefault(), r.$html.hasClass(d.modal) || t.$menu.trigger(u.close);
	        });
	      }, _initPage: function _initPage(t) {
	        t || (t = e(this.conf.pageSelector, r.$body), t.length > 1 && (e[a].debug("Multiple nodes found for the page-node, all nodes are wrapped in one <" + this.conf.pageNodetype + ">."), t = t.wrapAll("<" + this.conf.pageNodetype + " />").parent())), t.addClass(d.page), r.$page = t;
	      }, _initMenu: function _initMenu() {
	        this.conf.clone && (this.$menu = this.$menu.clone(!0), this.$menu.add(this.$menu.find("*")).filter("[id]").each(function () {
	          e(this).attr("id", d.mm(e(this).attr("id")));
	        })), this.$menu.contents().each(function () {
	          3 == e(this)[0].nodeType && e(this).remove();
	        }), this.$menu.prependTo("body").addClass(d.menu), this.$menu.addClass(d.mm(this.direction)), this.opts.classes && this.$menu.addClass(this.opts.classes), this.opts.isMenu && this.$menu.addClass(d.ismenu), "left" != this.opts.position && this.$menu.addClass(d.mm(this.opts.position)), "back" != this.opts.zposition && this.$menu.addClass(d.mm(this.opts.zposition));
	      }, _initPanles: function _initPanles() {
	        var t = this;this.__refactorClass(e("." + this.conf.listClass, this.$menu), "list"), this.opts.isMenu && e("ul, ol", this.$menu).not(".mm-nolist").addClass(d.list);var n = e("." + d.list + " > li", this.$menu);this.__refactorClass(n.filter("." + this.conf.selectedClass), "selected"), this.__refactorClass(n.filter("." + this.conf.labelClass), "label"), this.__refactorClass(n.filter("." + this.conf.spacerClass), "spacer"), n.off(u.setSelected).on(u.setSelected, function (t, s) {
	          t.stopPropagation(), n.removeClass(d.selected), "boolean" != typeof s && (s = !0), s && e(this).addClass(d.selected);
	        }), this.__refactorClass(e("." + this.conf.panelClass, this.$menu), "panel"), this.$menu.children().filter(this.conf.panelNodetype).add(this.$menu.find("." + d.list).children().children().filter(this.conf.panelNodetype)).addClass(d.panel);var s = e("." + d.panel, this.$menu);s.each(function (n) {
	          var s = e(this),
	              o = s.attr("id") || d.mm("m" + t.serialnr + "-p" + n);s.attr("id", o);
	        }), s.find("." + d.panel).each(function () {
	          var n = e(this),
	              s = n.is("ul, ol") ? n : n.find("ul ,ol").first(),
	              o = n.parent(),
	              i = o.find("> a, > span"),
	              a = o.closest("." + d.panel);if (n.data(c.parent, o), o.parent().is("." + d.list)) {
	            var l = e('<a class="' + d.subopen + '" href="#' + n.attr("id") + '" />').insertBefore(i);i.is("a") || l.addClass(d.fullsubopen), "horizontal" == t.direction && s.prepend('<li class="' + d.subtitle + '"><a class="' + d.subclose + '" href="#' + a.attr("id") + '">' + i.text() + "</a></li>");
	          }
	        });var o = "horizontal" == this.direction ? u.open : u.toggle;if (s.each(function () {
	          var n = e(this),
	              s = n.attr("id");e('a[href="#' + s + '"]', t.$menu).off(u.click).on(u.click, function (e) {
	            e.preventDefault(), n.trigger(o);
	          });
	        }), "horizontal" == this.direction) {
	          var i = e("." + d.list + " > li." + d.selected, this.$menu);i.add(i.parents("li")).parents("li").removeClass(d.selected).end().each(function () {
	            var t = e(this),
	                n = t.find("> ." + d.panel);n.length && (t.parents("." + d.panel).addClass(d.subopened), n.addClass(d.opened));
	          }).closest("." + d.panel).addClass(d.opened).parents("." + d.panel).addClass(d.subopened);
	        } else e("li." + d.selected, this.$menu).addClass(d.opened).parents("." + d.selected).removeClass(d.selected);var a = s.filter("." + d.opened);a.length || (a = s.first()), a.addClass(d.opened).last().addClass(d.current), "horizontal" == this.direction && s.find("." + d.panel).appendTo(this.$menu);
	      }, _initLinks: function _initLinks() {
	        var t = this;e("." + d.list + " > li > a", this.$menu).not("." + d.subopen).not("." + d.subclose).not('[rel="external"]').not('[target="_blank"]').off(u.click).on(u.click, function (n) {
	          var s = e(this),
	              o = s.attr("href");t.__valueOrFn(t.opts.onClick.setSelected, s) && s.parent().trigger(u.setSelected);var i = t.__valueOrFn(t.opts.onClick.preventDefault, s, "#" == o.slice(0, 1));i && n.preventDefault(), t.__valueOrFn(t.opts.onClick.blockUI, s, !i) && r.$html.addClass(d.blocking), t.__valueOrFn(t.opts.onClick.close, s, i) && t.$menu.triggerHandler(u.close);
	        });
	      }, _initOpenClose: function _initOpenClose() {
	        var t = this,
	            n = this.$menu.attr("id");n && n.length && (this.conf.clone && (n = d.umm(n)), e('a[href="#' + n + '"]').off(u.click).on(u.click, function (e) {
	          e.preventDefault(), t.$menu.trigger(u.open);
	        }));var n = r.$page.attr("id");n && n.length && e('a[href="#' + n + '"]').off(u.click).on(u.click, function (e) {
	          e.preventDefault(), t.$menu.trigger(u.close);
	        });
	      }, __valueOrFn: function __valueOrFn(e, t, n) {
	        return "function" == typeof e ? e.call(t[0]) : "undefined" == typeof e && "undefined" != typeof n ? n : e;
	      }, __refactorClass: function __refactorClass(e, t) {
	        e.removeClass(this.conf[t + "Class"]).addClass(d[t]);
	      } }, e.fn[a] = function (o, i) {
	      return r.$wndw || s(), o = t(o, i), i = n(i), this.each(function () {
	        var t = e(this);t.data(a) || t.data(a, new e[a](t, o, i));
	      });
	    }, e[a].version = l, e[a].defaults = { position: "left", zposition: "back", moveBackground: !0, slidingSubmenus: !0, modal: !1, classes: "", onClick: { setSelected: !0 } }, e[a].configuration = { preventTabbing: !0, panelClass: "Panel", listClass: "List", selectedClass: "Selected", labelClass: "Label", spacerClass: "Spacer", pageNodetype: "div", panelNodetype: "ul, ol, div", transitionDuration: 400 }, function () {
	      var t = window.document,
	          n = window.navigator.userAgent,
	          s = (document.createElement("div").style, "ontouchstart" in t),
	          o = "WebkitOverflowScrolling" in t.documentElement.style,
	          i = function () {
	        return n.indexOf("Android") >= 0 ? 2.4 > parseFloat(n.slice(n.indexOf("Android") + 8)) : !1;
	      }();e[a].support = { touch: s, oldAndroidBrowser: i, overflowscrolling: function () {
	          return s ? o ? !0 : i ? !1 : !0 : !0;
	        }() };
	    }(), e[a].debug = function () {}, e[a].deprecated = function (e, t) {
	      "undefined" != typeof console && "undefined" != typeof console.warn && console.warn("MMENU: " + e + " is deprecated, use " + t + " instead.");
	    };
	  }
	}(jQuery);
	/*	
	 * jQuery mmenu counters addon
	 * @requires mmenu 4.0.0 or later
	 *
	 * mmenu.frebsite.nl
	 *	
	 * Copyright (c) Fred Heusschen
	 * www.frebsite.nl
	 *
	 * Dual licensed under the MIT and GPL licenses.
	 * http://en.wikipedia.org/wiki/MIT_License
	 * http://en.wikipedia.org/wiki/GNU_General_Public_License
	 */
	!function (t) {
	  var e = "mmenu",
	      n = "counters";t[e].prototype["_addon_" + n] = function () {
	    var o = this,
	        u = this.opts[n],
	        a = t[e]._c,
	        r = t[e]._d,
	        d = t[e]._e;a.add("counter noresults"), d.add("updatecounters"), "boolean" == typeof u && (u = { add: u, update: u }), "object" != (typeof u === "undefined" ? "undefined" : _typeof(u)) && (u = {}), u = t.extend(!0, {}, t[e].defaults[n], u), u.count && (t[e].deprecated('the option "count" for counters, the option "update"'), u.update = u.count), this.__refactorClass(t("em." + this.conf.counterClass, this.$menu), "counter");var s = t("." + a.panel, this.$menu);if (u.add && s.each(function () {
	      var e = t(this),
	          n = e.data(r.parent);if (n) {
	        var o = t('<em class="' + a.counter + '" />'),
	            u = n.find("> a." + a.subopen);u.parent().find("em." + a.counter).length || u.before(o);
	      }
	    }), u.update) {
	      var c = t("em." + a.counter, this.$menu);c.off(d.updatecounters).on(d.updatecounters, function (t) {
	        t.stopPropagation();
	      }).each(function () {
	        var e = t(this),
	            n = t(e.next().attr("href"), o.$menu);n.is("." + a.list) || (n = n.find("> ." + a.list)), n.length && e.on(d.updatecounters, function () {
	          var t = n.children().not("." + a.label).not("." + a.subtitle).not("." + a.hidden).not("." + a.noresults);e.html(t.length);
	        });
	      }).trigger(d.updatecounters), this.$menu.on(d.update, function () {
	        c.trigger(d.updatecounters);
	      });
	    }
	  }, t[e].defaults[n] = { add: !1, update: !1 }, t[e].configuration.counterClass = "Counter", t[e].addons = t[e].addons || [], t[e].addons.push(n);
	}(jQuery);
	/*	
	 * jQuery mmenu dragOpen addon
	 * @requires mmenu 4.0.0 or later
	 *
	 * mmenu.frebsite.nl
	 *	
	 * Copyright (c) Fred Heusschen
	 * www.frebsite.nl
	 *
	 * Dual licensed under the MIT and GPL licenses.
	 * http://en.wikipedia.org/wiki/MIT_License
	 * http://en.wikipedia.org/wiki/GNU_General_Public_License
	 */
	!function (e) {
	  function t(e, t, a) {
	    return t > e && (e = t), e > a && (e = a), e;
	  }var a = "mmenu",
	      o = "dragOpen";e[a].prototype["_addon_" + o] = function () {
	    var n = this,
	        r = this.opts[o];if (e.fn.hammer) {
	      var i = e[a]._c,
	          s = (e[a]._d, e[a]._e);i.add("dragging"), s.add("dragleft dragright dragup dragdown dragend");var d = e[a].glbl;if ("boolean" == typeof r && (r = { open: r }), "object" != (typeof r === "undefined" ? "undefined" : _typeof(r)) && (r = {}), "number" != typeof r.maxStartPos && (r.maxStartPos = "left" == this.opts.position || "right" == this.opts.position ? 150 : 75), r = e.extend(!0, {}, e[a].defaults[o], r), r.open) {
	        var p = 0,
	            g = !1,
	            c = 0,
	            h = 0,
	            l = "width";switch (this.opts.position) {case "left":case "right":
	            l = "width";break;default:
	            l = "height";}switch (this.opts.position) {case "left":
	            var f = { events: s.dragleft + " " + s.dragright, open_dir: "right", close_dir: "left", delta: "deltaX", page: "pageX", negative: !1 };break;case "right":
	            var f = { events: s.dragleft + " " + s.dragright, open_dir: "left", close_dir: "right", delta: "deltaX", page: "pageX", negative: !0 };break;case "top":
	            var f = { events: s.dragup + " " + s.dragdown, open_dir: "down", close_dir: "up", delta: "deltaY", page: "pageY", negative: !1 };break;case "bottom":
	            var f = { events: s.dragup + " " + s.dragdown, open_dir: "up", close_dir: "down", delta: "deltaY", page: "pageY", negative: !0 };}var u = this.__valueOrFn(r.pageNode, this.$menu, d.$page);"string" == typeof u && (u = e(u));var m = d.$page.find("." + i.mm("fixed-top") + ", ." + i.mm("fixed-bottom")),
	            v = d.$page;switch (n.opts.zposition) {case "back":
	            v = v.add(m);break;case "front":
	            v = n.$menu;break;case "next":
	            v = v.add(n.$menu).add(m);}u.hammer().on(s.touchstart + " " + s.mousedown, function (e) {
	          if ("touchstart" == e.type) var t = e.originalEvent.touches[0] || e.originalEvent.changedTouches[0],
	              a = t[f.page];else if ("mousedown" == e.type) var a = e[f.page];switch (n.opts.position) {case "right":case "bottom":
	              a >= d.$wndw[l]() - r.maxStartPos && (p = 1);break;default:
	              a <= r.maxStartPos && (p = 1);}
	        }).on(f.events + " " + s.dragend, function (e) {
	          p > 0 && (e.gesture.preventDefault(), e.stopPropagation());
	        }).on(f.events, function (e) {
	          var a = f.negative ? -e.gesture[f.delta] : e.gesture[f.delta];if (g = a > c ? f.open_dir : f.close_dir, c = a, c > r.threshold && 1 == p) {
	            if (d.$html.hasClass(i.opened)) return;p = 2, n._openSetup(), d.$html.addClass(i.dragging), h = t(d.$wndw[l]() * n.conf[o][l].perc, n.conf[o][l].min, n.conf[o][l].max);
	          }2 == p && v.css(n.opts.position, t(c, 10, h) - ("front" == n.opts.zposition ? h : 0));
	        }).on(s.dragend, function () {
	          2 == p && (d.$html.removeClass(i.dragging), v.css(n.opts.position, ""), g == f.open_dir ? n._openFinish() : n.close()), p = 0;
	        });
	      }
	    }
	  }, e[a].defaults[o] = { open: !1, threshold: 50 }, e[a].configuration[o] = { width: { perc: .8, min: 140, max: 440 }, height: { perc: .8, min: 140, max: 880 } }, e[a].addons = e[a].addons || [], e[a].addons.push(o);
	}(jQuery);
	/*	
	 * jQuery mmenu header addon
	 * @requires mmenu 4.0.0 or later
	 *
	 * mmenu.frebsite.nl
	 *	
	 * Copyright (c) Fred Heusschen
	 * www.frebsite.nl
	 *
	 * Dual licensed under the MIT and GPL licenses.
	 * http://en.wikipedia.org/wiki/MIT_License
	 * http://en.wikipedia.org/wiki/GNU_General_Public_License
	 */
	!function (e) {
	  var t = "mmenu",
	      a = "header";e[t].prototype["_addon_" + a] = function () {
	    var n = this,
	        r = this.opts[a],
	        d = this.conf[a],
	        s = e[t]._c,
	        i = (e[t]._d, e[t]._e);s.add("header hasheader prev next title titletext"), i.add("updateheader");var o = e[t].glbl;if ("boolean" == typeof r && (r = { add: r, update: r }), "object" != (typeof r === "undefined" ? "undefined" : _typeof(r)) && (r = {}), r = e.extend(!0, {}, e[t].defaults[a], r), r.add) {
	      var h = r.content ? r.content : '<a class="' + s.prev + '" href="javascript:;"></a><span class="' + s.title + '"></span><a class="' + s.next + '" href="javascript:;"></a>';e('<div class="' + s.header + '" />').prependTo(this.$menu).append(h);
	    }var p = e("div." + s.header, this.$menu);if (p.length && this.$menu.addClass(s.hasheader), r.update && p.length) {
	      var l = p.find("." + s.title),
	          u = p.find("." + s.prev),
	          f = p.find("." + s.next),
	          c = "#" + o.$page.attr("id");u.add(f).on(i.click, function (t) {
	        t.preventDefault(), t.stopPropagation();var a = e(this).attr("href");"#" !== a && (a == c ? n.$menu.trigger(i.close) : e(a, n.$menu).trigger(i.open));
	      }), e("." + s.panel, this.$menu).each(function () {
	        var t = e(this),
	            a = e("." + d.panelHeaderClass, t).text(),
	            n = e("." + d.panelPrevClass, t).attr("href"),
	            o = e("." + d.panelNextClass, t).attr("href");a || (a = e("." + s.subclose, t).text()), a || (a = r.title), n || (n = e("." + s.subclose, t).attr("href")), t.off(i.updateheader).on(i.updateheader, function (e) {
	          e.stopPropagation(), l[a ? "show" : "hide"]().text(a), u[n ? "show" : "hide"]().attr("href", n), f[o ? "show" : "hide"]().attr("href", o);
	        }), t.on(i.open, function () {
	          e(this).trigger(i.updateheader);
	        });
	      }).filter("." + s.current).trigger(i.updateheader);
	    }
	  }, e[t].defaults[a] = { add: !1, content: !1, update: !1, title: "Menu" }, e[t].configuration[a] = { panelHeaderClass: "Header", panelNextClass: "Next", panelPrevClass: "Prev" }, e[t].addons = e[t].addons || [], e[t].addons.push(a);
	}(jQuery);
	/*	
	 * jQuery mmenu labels addon
	 * @requires mmenu 4.1.0 or later
	 *
	 * mmenu.frebsite.nl
	 *	
	 * Copyright (c) Fred Heusschen
	 * www.frebsite.nl
	 *
	 * Dual licensed under the MIT and GPL licenses.
	 * http://en.wikipedia.org/wiki/MIT_License
	 * http://en.wikipedia.org/wiki/GNU_General_Public_License
	 */
	!function (e) {
	  var l = "mmenu",
	      s = "labels";e[l].prototype["_addon_" + s] = function () {
	    function a() {
	      var e = t.hassearch && o.$menu.hasClass(t.hassearch),
	          l = t.hasheader && o.$menu.hasClass(t.hasheader);return e ? l ? 100 : 50 : l ? 60 : 0;
	    }var o = this,
	        n = this.opts[s],
	        t = e[l]._c,
	        i = (e[l]._d, e[l]._e);if (t.add("collapsed"), t.add("fixedlabels original clone"), i.add("updatelabels position scroll"), e[l].support.touch && (i.scroll += " " + i.mm("touchmove")), "boolean" == typeof n && (n = { collapse: n }), "object" != (typeof n === "undefined" ? "undefined" : _typeof(n)) && (n = {}), n = e.extend(!0, {}, e[l].defaults[s], n), n.collapse) {
	      this.__refactorClass(e("li." + this.conf.collapsedClass, this.$menu), "collapsed");var d = e("." + t.label, this.$menu);d.each(function () {
	        var l = e(this),
	            s = l.nextUntil("." + t.label, "all" == n.collapse ? null : "." + t.collapsed);"all" == n.collapse && (l.addClass(t.opened), s.removeClass(t.collapsed)), s.length && (l.wrapInner("<span />"), e('<a href="javascript:;" class="' + t.subopen + " " + t.fullsubopen + '" />').prependTo(l).on(i.click, function (e) {
	          e.preventDefault(), l.toggleClass(t.opened), s[l.hasClass(t.opened) ? "removeClass" : "addClass"](t.collapsed);
	        }));
	      });
	    } else if (n.fixed) {
	      if ("horizontal" != this.direction) return;this.$menu.addClass(t.fixedlabels);var r = e("." + t.panel, this.$menu),
	          d = e("." + t.label, this.$menu);r.add(d).off(i.updatelabels + " " + i.position + " " + i.scroll).on(i.updatelabels + " " + i.position + " " + i.scroll, function (e) {
	        e.stopPropagation();
	      });var p = a();r.each(function () {
	        var l = e(this),
	            s = l.find("." + t.label);if (s.length) {
	          var o = l.scrollTop();s.each(function () {
	            var s = e(this);s.wrapInner("<div />").wrapInner("<div />");var a,
	                n,
	                d,
	                r = s.find("> div"),
	                c = e();s.on(i.updatelabels, function () {
	              o = l.scrollTop(), s.hasClass(t.hidden) || (c = s.nextAll("." + t.label).not("." + t.hidden).first(), a = s.offset().top + o, n = c.length ? c.offset().top + o : !1, d = r.height(), s.trigger(i.position));
	            }), s.on(i.position, function () {
	              var e = 0;n && o + p > n - d ? e = n - a - d : o + p > a && (e = o - a + p), r.css("top", e);
	            });
	          }), l.on(i.updatelabels, function () {
	            o = l.scrollTop(), p = a(), s.trigger(i.position);
	          }).on(i.scroll, function () {
	            s.trigger(i.updatelabels);
	          });
	        }
	      }), this.$menu.on(i.update, function () {
	        r.trigger(i.updatelabels);
	      }).on(i.opening, function () {
	        r.trigger(i.updatelabels).trigger(i.scroll);
	      });
	    }
	  }, e[l].defaults[s] = { fixed: !1, collapse: !1 }, e[l].configuration.collapsedClass = "Collapsed", e[l].addons = e[l].addons || [], e[l].addons.push(s);
	}(jQuery);
	/*	
	 * jQuery mmenu searchfield addon
	 * @requires mmenu 4.0.0 or later
	 *
	 * mmenu.frebsite.nl
	 *	
	 * Copyright (c) Fred Heusschen
	 * www.frebsite.nl
	 *
	 * Dual licensed under the MIT and GPL licenses.
	 * http://en.wikipedia.org/wiki/MIT_License
	 * http://en.wikipedia.org/wiki/GNU_General_Public_License
	 */
	!function (e) {
	  function s(e) {
	    switch (e) {case 9:case 16:case 17:case 18:case 37:case 38:case 39:case 40:
	        return !0;}return !1;
	  }var n = "mmenu",
	      t = "searchfield";e[n].prototype["_addon_" + t] = function () {
	    var a = this,
	        r = this.opts[t],
	        o = e[n]._c,
	        l = e[n]._d,
	        d = e[n]._e;if (o.add("search hassearch noresults nosubresults counter"), d.add("search reset change"), "boolean" == typeof r && (r = { add: r, search: r }), "object" != (typeof r === "undefined" ? "undefined" : _typeof(r)) && (r = {}), r = e.extend(!0, {}, e[n].defaults[t], r), r.add && (e('<div class="' + o.search + '" />').prependTo(this.$menu).append('<input placeholder="' + r.placeholder + '" type="text" autocomplete="off" />'), r.noResults && e("ul, ol", this.$menu).first().append('<li class="' + o.noresults + '">' + r.noResults + "</li>")), e("div." + o.search, this.$menu).length && this.$menu.addClass(o.hassearch), r.search) {
	      var i = e("div." + o.search, this.$menu).find("input");if (i.length) {
	        var u = e("." + o.panel, this.$menu),
	            h = e("." + o.list + "> li." + o.label, this.$menu),
	            c = e("." + o.list + "> li", this.$menu).not("." + o.subtitle).not("." + o.label).not("." + o.noresults),
	            f = "> a";r.showLinksOnly || (f += ", > span"), i.off(d.keyup + " " + d.change).on(d.keyup, function (e) {
	          s(e.keyCode) || a.$menu.trigger(d.search);
	        }).on(d.change, function () {
	          a.$menu.trigger(d.search);
	        }), this.$menu.off(d.reset + " " + d.search).on(d.reset + " " + d.search, function (e) {
	          e.stopPropagation();
	        }).on(d.reset, function () {
	          a.$menu.trigger(d.search, [""]);
	        }).on(d.search, function (s, n) {
	          "string" == typeof n ? i.val(n) : n = i.val(), n = n.toLowerCase(), u.scrollTop(0), c.add(h).addClass(o.hidden), c.each(function () {
	            var s = e(this);e(f, s).text().toLowerCase().indexOf(n) > -1 && s.add(s.prevAll("." + o.label).first()).removeClass(o.hidden);
	          }), e(u.get().reverse()).each(function () {
	            var s = e(this),
	                n = s.data(l.parent);if (n) {
	              var t = s.add(s.find("> ." + o.list)).find("> li").not("." + o.subtitle).not("." + o.label).not("." + o.hidden);t.length ? n.removeClass(o.hidden).removeClass(o.nosubresults).prevAll("." + o.label).first().removeClass(o.hidden) : (s.hasClass(o.current) && n.trigger(d.open), n.addClass(o.nosubresults));
	            }
	          }), a.$menu[c.not("." + o.hidden).length ? "removeClass" : "addClass"](o.noresults), a.$menu.trigger(d.update);
	        });
	      }
	    }
	  }, e[n].defaults[t] = { add: !1, search: !1, showLinksOnly: !0, placeholder: "Search", noResults: "No results found." }, e[n].addons = e[n].addons || [], e[n].addons.push(t);
	}(jQuery);

/***/ },
/* 496 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;var __WEBPACK_AMD_DEFINE_RESULT__;"use strict";

	var getLanguage = __webpack_require__(303).getLanguage;

	/**!
	 * PJAX- Standalone (+ several custom changes for binary.com)
	 *
	 * A standalone implementation of Pushstate AJAX, for non-jQuery web pages.
	 * jQuery are recommended to use the original implementation at: http://github.com/defunkt/jquery-pjax
	 *
	 * @version 0.6.1
	 * @author Carl
	 * @source https://github.com/thybag/PJAX-Standalone
	 * @license MIT
	 */
	(function () {

		// Object to store private values/methods.
		var internal = {
			// Is this the first usage of PJAX? (Ensure history entry has required values if so.)
			"firstrun": true,
			// Borrowed wholesale from https://github.com/defunkt/jquery-pjax
			// Attempt to check that a device supports pushstate before attempting to use it.
			"is_supported": window.history && window.history.pushState && window.history.replaceState && !navigator.userAgent.match(/((iPod|iPhone|iPad).+\bOS\s+[1-4]|WebApps\/.+CFNetwork)/),
			// Track which scripts have been included in to the page. (used if e)
			"loaded_scripts": []
		};

		// If PJAX isn't supported we can skip setting up the library all together
		// So as not to break any code expecting PJAX to be there, return a shell object containing
		// IE7 + compatible versions of connect (which needs to do nothing) and invoke ( which just changes the page)
		if (!internal.is_supported) {
			// PJAX shell, so any code expecting PJAX will work
			var pjax_shell = {
				"connect": function connect() {
					return;
				},
				"invoke": function invoke() {
					var url = arguments.length === 2 ? arguments[0] : arguments.url || arguments[0].url;
					document.location = url;
					return;
				}
			};
			// AMD support
			if (true) {
				!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {
					return pjax_shell;
				}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
			} else {
				window.pjax = pjax_shell;
			}
			return;
		}

		/**
	  * AddEvent
	  *
	  * @scope private
	  * @param obj Object to listen on
	  * @param event Event to listen for.
	  * @param callback Method to run when event is detected.
	  */
		internal.addEvent = function (obj, event, callback) {
			obj.addEventListener(event, callback, false);
		};

		/**
	  * Clone
	  * Util method to create copies of the options object (so they do not share references)
	  * This allows custom settings on different links.
	  *
	  * @scope private
	  * @param obj
	  * @return obj
	  */
		internal.clone = function (obj) {
			var object = {};
			// For every option in object, create it in the duplicate.
			for (var i in obj) {
				object[i] = obj[i];
			}
			return object;
		};

		/**
	  * triggerEvent
	  * Fire an event on a given object (used for callbacks)
	  *
	  * @scope private
	  * @param node. Objects to fire event on
	  * @return event_name. type of event
	  */
		internal.triggerEvent = function (node, event_name, data) {
			// Good browsers
			var evt = document.createEvent("HTMLEvents");
			evt.initEvent(event_name, true, true);
			// If additional data was provided, add it to event
			if (typeof data !== 'undefined') evt.data = data;
			node.dispatchEvent(evt);
		};

		/**
	  * popstate listener
	  * Listens for back/forward button events and updates page accordingly.
	  */
		internal.addEvent(window, 'popstate', function (st) {
			if (st.state !== null) {

				var opt = {
					'url': st.state.url,
					'container': st.state.container,
					'useClass': st.state.useClass,
					'loggedin': st.state.loggedin,
					'title': st.state.title,
					'history': false
				};

				// Merge original in original connect options
				if (typeof internal.options !== 'undefined') {
					for (var a in internal.options) {
						if (typeof opt[a] === 'undefined') opt[a] = internal.options[a];
					}
				}

				// Convert state data to PJAX options
				var options = internal.parseOptions(opt);
				// If something went wrong, return.
				if (options === false) return;
				// If there is a state object, handle it as a page load.
				internal.handle(options);
			}
		});

		/**
	  * attach
	  * Attach PJAX listeners to a link.
	  * @scope private
	  * @param link_node. link that will be clicked.
	  * @param content_node.
	  */
		internal.attach = function (node, options) {

			// Ignore external links.
			if (node.protocol !== document.location.protocol || node.host !== document.location.host) {
				return;
			}

			// Ignore anchors on the same page
			if (node.pathname === location.pathname && node.hash.length > 0) {
				return;
			}

			// Ignore common non-PJAX loadable media types (pdf/doc/zips & images) unless user provides alternate array
			var ignoreFileTypes = ['pdf', 'doc', 'docx', 'zip', 'rar', '7z', 'gif', 'jpeg', 'jpg', 'png'];
			if (typeof options.ignoreFileTypes === 'undefined') options.ignoreFileTypes = ignoreFileTypes;
			// Skip link if file type is within ignored types array
			if (options.ignoreFileTypes.indexOf(node.pathname.split('.').pop().toLowerCase()) !== -1) {
				return;
			}

			// Add link HREF to object
			options.url = node.href;
			options.update_url = node.pathname + node.search + node.hash;
			options.loggedin = node.classList.contains('with_login_cookies');

			// If PJAX data is specified, use as container
			if (node.getAttribute('data-pjax')) {
				options.container = node.getAttribute('data-pjax');
			}

			// If data-title is specified, use as title.
			if (node.getAttribute('data-title')) {
				options.title = node.getAttribute('data-title');
			}

			// Check options are valid.
			options = internal.parseOptions(options);
			if (options === false) return;

			// Attach event.
			internal.addEvent(node, 'click', function (event) {
				// Allow middle click (pages in new windows)
				if (event.which > 1 || event.metaKey || event.ctrlKey) return;
				// Don't fire normal event
				if (event.preventDefault) {
					event.preventDefault();
				} else {
					event.returnValue = false;
				}
				// Take no action if we are already on said page?
				if (document.location.href === options.url) return false;
				// handle the load.
				internal.handle(options);
			});
		};

		/**
	  * parseLinks
	  * Parse all links within a DOM node, using settings provided in options.
	  * @scope private
	  * @param dom_obj. Dom node to parse for links.
	  * @param options. Valid Options object.
	  */
		internal.parseLinks = function (dom_obj, options) {

			var nodes;

			if (typeof options.useClass !== 'undefined') {
				// Get all nodes with the provided class name.
				nodes = dom_obj.getElementsByClassName(options.useClass);
			} else {
				// If no class was provided, just get all the links
				nodes = dom_obj.getElementsByTagName('a');
			}

			// For all returned nodes
			for (var i = 0, tmp_opt; i < nodes.length; i++) {
				var node = nodes[i];
				if (typeof options.excludeClass !== 'undefined') {
					if (node.className.indexOf(options.excludeClass) !== -1) continue;
				}
				// Override options history to true, else link parsing could be triggered by back button (which runs in no-history mode)
				tmp_opt = internal.clone(options);
				tmp_opt.history = true;
				internal.attach(node, tmp_opt);
			}

			if (internal.firstrun) {
				// Store array or all currently included script src's to avoid PJAX accidentally reloading existing libraries
				var scripts = document.getElementsByTagName('script');
				for (var c = 0; c < scripts.length; c++) {
					if (scripts[c].src && internal.loaded_scripts.indexOf(scripts[c].src) === -1) {
						internal.loaded_scripts.push(scripts[c].src);
					}
				}

				// Fire ready event once all links are connected
				internal.triggerEvent(internal.get_container_node(options.container), 'ready');
			}
		};

		/**
	  * SmartLoad
	  * Smartload checks the returned HTML to ensure PJAX ready content has been provided rather than
	  * a full HTML page. If a full HTML has been returned, it will attempt to scan the page and extract
	  * the correct HTML to update our container with in order to ensure PJAX still functions as expected.
	  *
	  * @scope private
	  * @param HTML (HTML returned from AJAX)
	  * @param options (Options object used to request page)
	  * @return HTML to append to our page.
	  */
		internal.smartLoad = function (html, options) {
			// Grab the title if there is one
			var title = html.getElementsByTagName('title')[0];
			if (title) document.title = title.innerHTML;

			// Going by caniuse all browsers that support the pushstate API also support querySelector's
			// see: http://caniuse.com/#search=push
			// see: http://caniuse.com/#search=querySelector
			var container = html.querySelector("#" + options.container.id);
			if (container !== null) return container;

			// If our container was not found, HTML will be returned as is.
			return html;
		};

		/**
	  * Update Content
	  * Updates DOM with content loaded via PJAX
	  *
	  * @param html DOM fragment of loaded container
	  * @param options PJAX configuration options
	  * return options
	  */
		internal.updateContent = function (html, options) {
			// Create in memory DOM node, to make parsing returned data easier
			var tmp = document.createElement('div');
			tmp.innerHTML = html;

			// Ensure we have the correct HTML to apply to our container.
			if (options.smartLoad) tmp = internal.smartLoad(tmp, options);

			// If no title was provided, extract it
			if (typeof options.title === 'undefined') {
				// Use current doc title (this will be updated via smart load if its enabled)
				options.title = document.title;

				// Attempt to grab title from non-smart loaded page contents
				if (!options.smartLoad) {
					var tmpTitle = tmp.getElementsByTagName('title');
					if (tmpTitle.length !== 0) options.title = tmpTitle[0].innerHTML;
				}
			}

			// Update the DOM with the new content
			options.container.innerHTML = tmp.innerHTML;

			// Run included JS?
			if (options.parseJS) internal.runScripts(tmp);

			// Send data back to handle
			return options;
		};

		/**
	  * runScripts
	  * Execute JavaScript on pages loaded via PJAX
	  *
	  * Note: In-line JavaScript is run each time a page is hit, while external JavaScript
	  *		is only loaded once (Although remains loaded while the user continues browsing)
	  *
	  * @param html DOM fragment of loaded container
	  * return void
	  */
		internal.runScripts = function (html) {
			// Extract JavaScript & eval it (if enabled)
			var scripts = html.getElementsByTagName('script');
			for (var sc = 0; sc < scripts.length; sc++) {
				// If has an src & src isn't in "loaded_scripts", load the script.
				if (scripts[sc].src && internal.loaded_scripts.indexOf(scripts[sc].src) === -1) {
					// Append to head to include
					var s = document.createElement("script");
					s.src = scripts[sc].src;
					document.head.appendChild(s);
					// Add to loaded list
					internal.loaded_scripts.push(scripts[sc].src);
				} else {
					// If raw JS, eval it.
					eval(scripts[sc].innerHTML);
				}
			}
		};

		/**
	  * handle
	  * Handle requests to load content via PJAX.
	  * @scope private
	  * @param url. Page to load.
	  * @param node. Dom node to add returned content in to.
	  * @param addtohistory. Does this load require a history event.
	  */
		internal.handle = function (options) {

			// Fire beforeSend Event.
			internal.triggerEvent(options.container, 'beforeSend', options);

			// Do the request
			internal.request(options.url, function (html) {

				// Fail if unable to load HTML via AJAX
				if (html === false) {
					internal.triggerEvent(options.container, 'complete', options);
					internal.triggerEvent(options.container, 'error', options);
					return;
				}

				// Parse page & update DOM
				options = internal.updateContent(html, options);

				// Do we need to add this to the history?
				if (options.history) {
					// If this is the first time pjax has run, create a state object for the current page.
					if (internal.firstrun) {
						window.history.replaceState({ 'url': document.location.href, 'container': options.container.id, 'useClass': options.useClass, 'loggedin': options.loggedin, 'title': document.title }, document.title);
						internal.firstrun = false;
					}
					// Update browser history
					window.history.pushState({ 'url': options.url, 'container': options.container.id, 'useClass': options.useClass, 'loggedin': options.loggedin, 'title': options.title }, options.title, options.url);
				}

				// Initialize any new links found within document (if enabled).
				if (options.parseLinksOnload) {
					internal.parseLinks(options.container, options);
				}

				// Fire Events
				internal.triggerEvent(options.container, 'complete', options);
				internal.triggerEvent(options.container, 'success', options);

				// Don't track if page isn't part of history, or if autoAnalytics is disabled
				if (options.autoAnalytics && options.history) {
					// If autoAnalytics is enabled and a Google analytics tracker is detected push
					// a trackPageView, so PJAX loaded pages can be tracked successfully.
					if (window._gaq) _gaq.push(['_trackPageview']);
					if (window.ga) ga('send', 'pageview', { 'page': options.url, 'title': options.title });
				}

				// Set new title
				document.title = options.title;

				// Scroll page to top on new page load
				if (options.returnToTop) {
					window.scrollTo(0, 0);
				}
			});
		};

		/**
	  * Request
	  * Performs AJAX request to page and returns the result..
	  *
	  * @scope private
	  * @param location. Page to request.
	  * @param callback. Method to call when a page is loaded.
	  */
		internal.request = function (location, callback) {
			// Create xmlHttpRequest object.
			var xmlhttp;
			try {
				xmlhttp = window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject("Microsoft.XMLHTTP");
			} catch (e) {
				console.log("Unable to create XMLHTTP Request");
				return;
			}
			// Add state listener.
			xmlhttp.onreadystatechange = function () {
				if (xmlhttp.readyState === 4 && xmlhttp.status === 200) {
					// Success, Return HTML
					callback(xmlhttp.responseText);
				} else if (xmlhttp.readyState === 4 && (xmlhttp.status === 404 || xmlhttp.status === 500)) {
					// error (return false)
					callback(false);
				}
			};
			// Secret pjax ?get param so browser doesn't return pjax content from cache when we don't want it to
			// Switch between ? and & so as not to break any URL params (Based on change by zmasek https://github.com/zmasek/)
			var lang = getLanguage();
			xmlhttp.open("GET", location.replace(new RegExp('\/' + lang + '\/', 'i'), '/' + lang.toLowerCase() + '/pjax/'), true);
			// Add headers so things can tell the request is being performed via AJAX.
			xmlhttp.setRequestHeader('X-PJAX', 'true'); // PJAX header
			xmlhttp.setRequestHeader('X-Requested-With', 'XMLHttpRequest'); // Standard AJAX header.

			xmlhttp.send(null);
		};

		/**
	  * parseOptions
	  * Validate and correct options object while connecting up any listeners.
	  *
	  * @scope private
	  * @param options
	  * @return false | valid options object
	  */
		internal.parseOptions = function (options) {

			/**  Defaults parse options. (if something isn't provided)
	   *
	   * - history: track event to history (on by default, set to off when performing back operation)
	   * - parseLinksOnload: Enabled by default. Process pages loaded via PJAX and setup PJAX on any links found.
	   * - smartLoad: Tries to ensure the correct HTML is loaded. If you are certain your back end
	   *		will only return PJAX ready content this can be disabled for a slight performance boost.
	   * - autoAnalytics: Automatically attempt to log events to Google analytics (if tracker is available)
	   * - returnToTop: Scroll user back to top of page, when new page is opened by PJAX
	   * - parseJS: Disabled by default, when enabled PJAX will automatically run returned JavaScript
	   */
			var defaults = {
				"history": true,
				"parseLinksOnload": true,
				"smartLoad": true,
				"autoAnalytics": true,
				"returnToTop": true,
				"parseJS": false
			};

			// Ensure a URL and container have been provided.
			if (typeof options.url === 'undefined' || typeof options.container === 'undefined' || options.container === null) {
				console.log("URL and Container must be provided.");
				return false;
			}

			// Check required options are defined, if not, use default
			for (var o in defaults) {
				if (typeof options[o] === 'undefined') options[o] = defaults[o];
			}

			// Ensure history setting is a boolean.
			options.history = options.history === false ? false : true;

			// Get container (if its an id, convert it to a DOM node.)
			options.container = internal.get_container_node(options.container);

			// Events
			var events = ['ready', 'beforeSend', 'complete', 'error', 'success'];

			// If everything went okay thus far, connect up listeners
			for (var e in events) {
				var evt = events[e];
				if (typeof options[evt] === 'function') {
					internal.addEvent(options.container, evt, options[evt]);
				}
			}

			// Return valid options
			return options;
		};

		/**
	  * get_container_node
	  * Returns container node
	  *
	  * @param container - (string) container ID | container DOM node.
	  * @return container DOM node | false
	  */
		internal.get_container_node = function (container) {
			if (typeof container === 'string') {
				container = document.getElementById(container);
				if (container === null) {
					console.log("Could not find container with id:" + container);
					return false;
				}
			}
			return container;
		};

		/**
	  * connect
	  * Attach links to PJAX handlers.
	  * @scope public
	  *
	  * Can be called in 3 ways.
	  * Calling as connect();
	  *		Will look for links with the data-pjax attribute.
	  *
	  * Calling as connect(container_id)
	  *		Will try to attach to all links, using the container_id as the target.
	  *
	  * Calling as connect(container_id, class_name)
	  *		Will try to attach any links with the given class name, using container_id as the target.
	  *
	  * Calling as connect({
	  *						'url':'somepage.php',
	  *						'container':'somecontainer',
	  *						'beforeSend': function(){console.log("sending");}
	  *					})
	  *		Will use the provided JSON to configure the script in full (including callbacks)
	  */
		this.connect = function () /* options */{
			// connect();
			var options = {};
			// connect(container, class_to_apply_to)
			if (arguments.length === 2) {
				options.container = arguments[0];
				options.useClass = arguments[1];
			}
			// Either JSON or container id
			if (arguments.length === 1) {
				if (typeof arguments[0] === 'string') {
					//connect(container_id)
					options.container = arguments[0];
				} else {
					//Else connect({url:'', container: ''});
					options = arguments[0];
				}
			}
			// Delete history and title if provided. These options should only be provided via invoke();
			delete options.title;
			delete options.history;

			internal.options = options;
			if (document.readyState === 'complete') {
				internal.parseLinks(document, options);
			} else {
				//Don't run until the window is ready.
				internal.addEvent(window, 'load', function () {
					//Parse links using specified options
					internal.parseLinks(document, options);
				});
			}
		};

		/**
	  * invoke
	  * Directly invoke a pjax page load.
	  * invoke({url: 'file.php', 'container':'content'});
	  *
	  * @scope public
	  * @param options
	  */
		this.invoke = function () /* options */{

			var options = {};
			// url, container
			if (arguments.length === 2) {
				options.url = arguments[0];
				options.container = arguments[1];
			} else {
				options = arguments[0];
			}

			// Process options
			options = internal.parseOptions(options);
			// If everything went okay, activate pjax.
			if (options !== false) internal.handle(options);
		};

		// Make object usable
		var pjax_obj = this;
		if (true) {
			// Register pjax as AMD module
			!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return pjax_obj;
			}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			// Make PJAX object accessible in global name space
			window.pjax = pjax_obj;
		}
	}).call({});

/***/ },
/* 497 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var TradingAnalysis = __webpack_require__(466).TradingAnalysis;
	var displayCurrencies = __webpack_require__(469).displayCurrencies;
	var Notifications = __webpack_require__(458).Notifications;
	var Purchase = __webpack_require__(477).Purchase;
	var Symbols = __webpack_require__(459).Symbols;
	var Tick = __webpack_require__(454).Tick;
	var processActiveSymbols = __webpack_require__(476).processActiveSymbols;
	var processContract = __webpack_require__(476).processContract;
	var forgetTradingStreams = __webpack_require__(476).forgetTradingStreams;
	var processTick = __webpack_require__(476).processTick;
	var processProposal = __webpack_require__(476).processProposal;
	var processTradingTimes = __webpack_require__(476).processTradingTimes;
	var PortfolioWS = __webpack_require__(462).PortfolioWS;
	var ProfitTableWS = __webpack_require__(498).ProfitTableWS;
	var StatementWS = __webpack_require__(504).StatementWS;
	var State = __webpack_require__(304).State;
	var GTM = __webpack_require__(430).GTM;
	var Client = __webpack_require__(305).Client;

	/*
	 * This Message object process the response from server and fire
	 * events based on type of response
	 */
	var Message = function () {
	    'use strict';

	    var process = function process(msg) {
	        var response = JSON.parse(msg.data);
	        if (!State.get('is_trading')) {
	            forgetTradingStreams();
	            return;
	        }
	        if (response) {
	            var type = response.msg_type;
	            if (type === 'active_symbols') {
	                processActiveSymbols(response);
	            } else if (type === 'contracts_for') {
	                Notifications.hide('CONNECTION_ERROR');
	                processContract(response);
	                window.contracts_for = response;
	            } else if (type === 'payout_currencies' && response.hasOwnProperty('echo_req') && (!response.echo_req.hasOwnProperty('passthrough') || !response.echo_req.passthrough.hasOwnProperty('handler'))) {
	                Client.set_value('currencies', response.payout_currencies.join(','));
	                displayCurrencies();
	                Symbols.getSymbols(1);
	            } else if (type === 'proposal') {
	                processProposal(response);
	            } else if (type === 'buy') {
	                Purchase.display(response);
	                GTM.push_purchase_data(response);
	            } else if (type === 'tick') {
	                processTick(response);
	            } else if (type === 'history') {
	                var digit_info = TradingAnalysis.digit_info();
	                if (response.req_id === 1 || response.req_id === 2) {
	                    digit_info.show_chart(response.echo_req.ticks_history, response.history.prices);
	                } else {
	                    Tick.processHistory(response);
	                }
	            } else if (type === 'trading_times') {
	                processTradingTimes(response);
	            } else if (type === 'statement') {
	                StatementWS.statementHandler(response);
	            } else if (type === 'profit_table') {
	                ProfitTableWS.profitTableHandler(response);
	            } else if (type === 'error') {
	                $('.error-msg').text(response.error.message);
	            } else if (type === 'portfolio') {
	                PortfolioWS.updatePortfolio(response);
	            } else if (type === 'proposal_open_contract') {
	                PortfolioWS.updateIndicative(response);
	            } else if (type === 'transaction') {
	                PortfolioWS.transactionResponseHandler(response);
	            }
	        } else {
	            console.log('some error occured');
	        }
	    };

	    return {
	        process: process
	    };
	}();

	module.exports = {
	    Message: Message
	};

/***/ },
/* 498 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var showLocalTimeOnHover = __webpack_require__(439).Clock.showLocalTimeOnHover;
	var addTooltip = __webpack_require__(463).addTooltip;
	var buildOauthApps = __webpack_require__(463).buildOauthApps;
	var Content = __webpack_require__(426).Content;
	var ProfitTableUI = __webpack_require__(499).ProfitTableUI;
	var ProfitTableData = __webpack_require__(503).ProfitTableData;
	var localize = __webpack_require__(423).localize;

	var ProfitTableWS = function () {
	    var batchSize = void 0,
	        chunkSize = void 0,
	        transactionsReceived = void 0,
	        transactionsConsumed = void 0,
	        noMoreData = void 0,
	        pending = void 0,
	        currentBatch = void 0;

	    var tableExist = function tableExist() {
	        return document.getElementById('profit-table');
	    };

	    var finishedConsumed = function finishedConsumed() {
	        return transactionsConsumed === transactionsReceived;
	    };

	    var initTable = function initTable() {
	        currentBatch = [];
	        transactionsConsumed = 0;
	        transactionsReceived = 0;
	        pending = false;

	        ProfitTableUI.errorMessage(null);

	        if (tableExist()) {
	            ProfitTableUI.cleanTableContent();
	        }
	    };

	    var getNextBatchTransactions = function getNextBatchTransactions() {
	        ProfitTableData.getProfitTable({ offset: transactionsReceived, limit: batchSize });
	        pending = true;
	    };

	    var getNextChunk = function getNextChunk() {
	        var chunk = currentBatch.splice(0, chunkSize);
	        transactionsConsumed += chunk.length;
	        return chunk;
	    };

	    var profitTableHandler = function profitTableHandler(response) {
	        if (response.hasOwnProperty('error')) {
	            ProfitTableUI.errorMessage(response.error.message);
	            return;
	        }

	        pending = false;
	        var profitTable = response.profit_table;
	        currentBatch = profitTable.transactions;
	        transactionsReceived += currentBatch.length;

	        if (currentBatch.length < batchSize) {
	            noMoreData = true;
	        }

	        if (!tableExist()) {
	            ProfitTableUI.createEmptyTable().appendTo('#profit-table-ws-container');
	            ProfitTableUI.updateProfitTable(getNextChunk());

	            // Show a message when the table is empty
	            if (transactionsReceived === 0 && currentBatch.length === 0) {
	                $('#profit-table').find('tbody').append($('<tr/>', { class: 'flex-tr' }).append($('<td/>', { colspan: 8 }).append($('<p/>', { class: 'notice-msg center-text', text: localize('Your account has no trading activity.') }))));
	            }
	        }
	    };

	    var onScrollLoad = function onScrollLoad() {
	        $(document).scroll(function () {
	            var hidableHeight = function hidableHeight(percentage) {
	                var totalHidable = $(document).height() - $(window).height();
	                return Math.floor(totalHidable * percentage / 100);
	            };

	            var pFromTop = $(document).scrollTop();

	            if (!tableExist()) {
	                return;
	            }

	            if (pFromTop < hidableHeight(50)) {
	                return;
	            }

	            if (finishedConsumed() && !noMoreData && !pending) {
	                getNextBatchTransactions();
	                return;
	            }

	            if (!finishedConsumed()) {
	                ProfitTableUI.updateProfitTable(getNextChunk());
	            }
	        });
	    };

	    var initSocket = function initSocket() {
	        BinarySocket.init({
	            onmessage: function onmessage(msg) {
	                var response = JSON.parse(msg.data);

	                if (response) {
	                    var type = response.msg_type;
	                    if (type === 'profit_table') {
	                        ProfitTableWS.profitTableHandler(response);
	                        showLocalTimeOnHover('td.buy-date,td.sell-date');
	                    } else if (type === 'oauth_apps') {
	                        addTooltip(ProfitTableUI.setOauthApps(buildOauthApps(response.oauth_apps)));
	                    }
	                }
	            }
	        });
	        BinarySocket.send({ oauth_apps: 1 });
	    };

	    var init = function init() {
	        batchSize = 100;
	        chunkSize = batchSize / 2;
	        transactionsReceived = 0;
	        transactionsConsumed = 0;
	        noMoreData = false;
	        pending = false;
	        currentBatch = [];
	        initSocket();
	        Content.populate();
	        getNextBatchTransactions();
	        onScrollLoad();
	    };

	    return {
	        profitTableHandler: profitTableHandler,
	        init: init,
	        clean: initTable
	    };
	}();

	module.exports = {
	    ProfitTableWS: ProfitTableWS
	};

/***/ },
/* 499 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var toJapanTimeIfNeeded = __webpack_require__(439).Clock.toJapanTimeIfNeeded;
	var localize = __webpack_require__(423).localize;
	var Client = __webpack_require__(305).Client;
	var Button = __webpack_require__(500).Button;
	var Content = __webpack_require__(426).Content;
	var Table = __webpack_require__(501).Table;
	var format_money = __webpack_require__(440).format_money;
	var showTooltip = __webpack_require__(463).showTooltip;
	var japanese_client = __webpack_require__(307).japanese_client;
	var addComma = __webpack_require__(441).addComma;
	var ProfitTable = __webpack_require__(502).ProfitTable;
	var elementTextContent = __webpack_require__(420).elementTextContent;

	var ProfitTableUI = function () {
	    'use strict';

	    var profitTableID = 'profit-table',
	        cols = ['buy-date', 'ref', 'payout', 'contract', 'buy-price', 'sell-date', 'sell-price', 'pl', 'details'],
	        currency = Client.get_value('currency');
	    var oauth_apps = {};

	    var createEmptyTable = function createEmptyTable() {
	        var header = [Content.localize().textDate, Content.localize().textRef, localize('Potential Payout'), Content.localize().textContract, Content.localize().textPurchasePrice, Content.localize().textSaleDate, Content.localize().textSalePrice, Content.localize().textProfitLoss, Content.localize().textDetails];

	        var jpClient = japanese_client();

	        header[7] += jpClient ? '' : currency ? ' (' + currency + ')' : '';

	        var footer = [Content.localize().textTotalProfitLoss, '', '', '', '', '', '', '', ''];

	        var data = [];
	        var metadata = {
	            cols: cols,
	            id: profitTableID
	        };
	        var $tableContainer = Table.createFlexTable(data, metadata, header, footer);

	        $tableContainer.children('table').children('tfoot').children('tr').attr('id', 'pl-day-total');

	        return $tableContainer;
	    };

	    var updateFooter = function updateFooter(transactions) {
	        var accTotal = elementTextContent(document.querySelector('#pl-day-total > .pl'));
	        accTotal = parseFloat(accTotal.replace(/,/g, ''));
	        if (!accTotal || isNaN(accTotal)) {
	            accTotal = 0;
	        }

	        var currentTotal = transactions.reduce(function (previous, current) {
	            var buyPrice = Number(parseFloat(current.buy_price));
	            var sellPrice = Number(parseFloat(current.sell_price));
	            var pl = sellPrice - buyPrice;
	            return previous + pl;
	        }, 0);

	        var total = accTotal + currentTotal,
	            jpClient = japanese_client(),
	            subTotalType = total >= 0 ? 'profit' : 'loss';

	        $('#pl-day-total').find(' > .pl').text(jpClient ? format_money(currency, total) : addComma(Number(total).toFixed(2))).removeClass('profit loss').addClass(subTotalType);
	    };

	    var createProfitTableRow = function createProfitTableRow(transaction) {
	        var profit_table_data = ProfitTable.getProfitTabletData(transaction);
	        var plType = profit_table_data.pl >= 0 ? 'profit' : 'loss';

	        var jpClient = japanese_client();

	        var data = [jpClient ? toJapanTimeIfNeeded(transaction.purchase_time) : profit_table_data.buyDate, '<span' + showTooltip(profit_table_data.app_id, oauth_apps[profit_table_data.app_id]) + '>' + profit_table_data.ref + '</span>', jpClient ? format_money(currency, profit_table_data.payout) : profit_table_data.payout, '', jpClient ? format_money(currency, profit_table_data.buyPrice) : profit_table_data.buyPrice, jpClient ? toJapanTimeIfNeeded(transaction.sell_time) : profit_table_data.sellDate, jpClient ? format_money(currency, profit_table_data.sellPrice) : profit_table_data.sellPrice, jpClient ? format_money(currency, profit_table_data.pl) : profit_table_data.pl, ''];
	        var $row = Table.createFlexTableRow(data, cols, 'data');

	        $row.children('.pl').addClass(plType);
	        $row.children('.contract').html(profit_table_data.desc + '<br>');
	        $row.children('.buy-date').each(function () {
	            $(this).wrapInner('<div class="new-width"></div>');
	        });
	        $row.children('.sell-date').each(function () {
	            $(this).wrapInner('<div class="new-width"></div>');
	        });

	        // create view button and append
	        var $viewButtonSpan = Button.createBinaryStyledButton();
	        var $viewButton = $viewButtonSpan.children('.button').first();
	        $viewButton.text(localize('View'));
	        $viewButton.addClass('open_contract_detailsws');
	        $viewButton.attr('contract_id', profit_table_data.id);

	        $row.children('.contract,.details').append($viewButtonSpan);

	        return $row[0];
	    };

	    var updateProfitTable = function updateProfitTable(transactions) {
	        Table.appendTableBody(profitTableID, transactions, createProfitTableRow);
	        updateFooter(transactions);
	    };

	    var clearTableContent = function clearTableContent() {
	        Table.clearTableBody(profitTableID);
	        $('#' + profitTableID + '>tfoot').hide();
	    };

	    var errorMessage = function errorMessage(msg) {
	        var $err = $('#profit-table-ws-container').find('#error-msg');
	        if (msg) {
	            $err.removeClass('invisible').text(msg);
	        } else {
	            $err.addClass('invisible').text('');
	        }
	    };

	    return {
	        createEmptyTable: createEmptyTable,
	        updateProfitTable: updateProfitTable,
	        cleanTableContent: clearTableContent,
	        errorMessage: errorMessage,
	        setOauthApps: function setOauthApps(values) {
	            return oauth_apps = values;
	        }
	    };
	}();

	module.exports = {
	    ProfitTableUI: ProfitTableUI
	};

/***/ },
/* 500 */
/***/ function(module, exports) {

	'use strict';

	var Button = function () {
	    'use strict';

	    var createBinaryStyledButton = function createBinaryStyledButton() {
	        var span = $('<span></span>', { class: 'button' });
	        var button = $('<button></button>', { class: 'button' });
	        span.append(button);

	        return span;
	    };

	    return {
	        createBinaryStyledButton: createBinaryStyledButton
	    };
	}();

	module.exports = {
	    Button: Button
	};

/***/ },
/* 501 */
/***/ function(module, exports) {

	'use strict';

	var Table = function () {
	    'use strict';

	    /**
	     *
	     * @param {Array[]} body ordered data to pump into table body
	     * @param {Object} metadata object containing metadata of table
	     * @param {String[]} metadata.cols cols of table
	     * @param {String} metadata.id table id
	     * @param {String[]} [metadata.tableClass] class used in html
	     * @param {String[]} [header] string to be used as Header in table, if not stated then table will not have Header
	     * @param {String[]} [footer] string to be used as footer, to have empty footer, use an empty element in array
	     * eg. ["", "halo", ""] will have 3 elements in footer, 2 of them being empty
	     */

	    var createFlexTable = function createFlexTable(body, metadata, header, footer) {
	        var $tableContainer = $('<div></div>', { class: 'table-container' });
	        var $table = $('<table></table>', { class: metadata.tableClass || '', id: metadata.id });
	        var $body = createFlexTableTopGroup(body, metadata.cols, 'body');

	        if (header) {
	            var $header = createFlexTableTopGroup([header], metadata.cols, 'header');
	            $header.appendTo($table);
	        }

	        $body.appendTo($table);

	        if (footer) {
	            var $footer = createFlexTableTopGroup([footer], metadata.cols, 'footer');
	            $footer.appendTo($table);
	        }

	        $table.appendTo($tableContainer);

	        return $tableContainer;
	    };

	    /**
	     *
	     * @param {object[][]} data header strings
	     * @param {String[]} metadata cols name
	     * @param {'header'|'footer'|'body'} opt optional arg, specifies type of element to create. default to header
	     */
	    var createFlexTableTopGroup = function createFlexTableTopGroup(data, metadata, opt) {
	        var $outer = function () {
	            switch (opt) {
	                case 'body':
	                    return $('<tbody></tbody>');
	                case 'footer':
	                    return $('<tfoot></tfoot>');
	                default:
	                    return $('<thead></thead>');
	            }
	        }();

	        for (var i = 0; i < data.length; i++) {
	            var innerType = opt === 'body' ? 'data' : 'header';
	            var $tr = createFlexTableRow(data[i], metadata, innerType);
	            $tr.appendTo($outer);
	        }

	        return $outer;
	    };

	    /**
	     *
	     * @param {object[]} data
	     * @param {String[]} metadata cols name
	     * @param {'header'|'data'} opt optional, default to "header"
	     */
	    var createFlexTableRow = function createFlexTableRow(data, metadata, opt) {
	        if (data.length !== metadata.length) {
	            throw new Error('metadata and data does not match');
	        }

	        var isData = opt === 'data';

	        var $tr = $('<tr></tr>');
	        for (var i = 0; i < data.length; i++) {
	            var className = metadata[i].toLowerCase().replace(/\s/g, '-');
	            var rowElement = isData ? $('<td></td>', { class: className, html: data[i] }) : $('<th></th>', { class: className, html: data[i] });
	            rowElement.appendTo($tr);
	        }

	        return $tr;
	    };

	    var clearTableBody = function clearTableBody(id) {
	        var tbody = document.querySelector('#' + id + '>tbody');
	        while (tbody && tbody.firstElementChild) {
	            tbody.removeChild(tbody.firstElementChild);
	        }
	    };

	    /**
	     *
	     * @param {String} id table id
	     * @param {Object[]} data array of data to be transform to row
	     * @param {Function} rowGenerator takes in one arg, and convert it into row to be append to table body
	     */
	    var appendTableBody = function appendTableBody(id, data, rowGenerator) {
	        var tbody = document.querySelector('#' + id + '>tbody');
	        if (!tbody) return;
	        var docFrag = document.createDocumentFragment();
	        data.map(function (ele) {
	            var row = rowGenerator(ele);
	            docFrag.appendChild(row);
	        });

	        tbody.appendChild(docFrag);
	    };

	    return {
	        createFlexTable: createFlexTable,
	        createFlexTableRow: createFlexTableRow,
	        clearTableBody: clearTableBody,
	        appendTableBody: appendTableBody
	    };
	}();

	module.exports = {
	    Table: Table
	};

/***/ },
/* 502 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var moment = __webpack_require__(308);

	var ProfitTable = function () {
	    'use strict';

	    var getProfitTabletData = function getProfitTabletData(transaction) {
	        var buyMoment = moment.utc(transaction.purchase_time * 1000),
	            sellMoment = moment.utc(transaction.sell_time * 1000),
	            buyPrice = parseFloat(transaction.buy_price).toFixed(2),
	            sellPrice = parseFloat(transaction.sell_price).toFixed(2);

	        return {
	            buyDate: buyMoment.format('YYYY-MM-DD') + '\n' + buyMoment.format('HH:mm:ss') + ' GMT',
	            ref: transaction.transaction_id,
	            payout: parseFloat(transaction.payout).toFixed(2),
	            buyPrice: buyPrice,
	            sellDate: sellMoment.format('YYYY-MM-DD') + '\n' + sellMoment.format('HH:mm:ss') + ' GMT',
	            sellPrice: sellPrice,
	            pl: Number(sellPrice - buyPrice).toFixed(2),
	            desc: transaction.longcode,
	            id: transaction.contract_id,
	            app_id: transaction.app_id
	        };
	    };

	    return {
	        getProfitTabletData: getProfitTabletData
	    };
	}();

	module.exports = {
	    ProfitTable: ProfitTable
	};

/***/ },
/* 503 */
/***/ function(module, exports) {

	"use strict";

	var ProfitTableData = function () {
	    var getProfitTable = function getProfitTable(opts) {
	        var req = { profit_table: 1, description: 1 };
	        if (opts) {
	            $.extend(true, req, opts);
	        }

	        BinarySocket.send(req);
	    };

	    return {
	        getProfitTable: getProfitTable
	    };
	}();

	module.exports = {
	    ProfitTableData: ProfitTableData
	};

/***/ },
/* 504 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var showLocalTimeOnHover = __webpack_require__(439).Clock.showLocalTimeOnHover;
	var StatementUI = __webpack_require__(505).StatementUI;
	var addTooltip = __webpack_require__(463).addTooltip;
	var buildOauthApps = __webpack_require__(463).buildOauthApps;
	var Content = __webpack_require__(426).Content;
	var japanese_client = __webpack_require__(307).japanese_client;
	var moment = __webpack_require__(308);
	var DatePicker = __webpack_require__(475).DatePicker;
	var toISOFormat = __webpack_require__(441).toISOFormat;
	var dateValueChanged = __webpack_require__(420).dateValueChanged;
	var localize = __webpack_require__(423).localize;
	var getLanguage = __webpack_require__(303).getLanguage;

	var StatementWS = function () {
	    'use strict';

	    // Batch refer to number of data get from ws service per request
	    // chunk refer to number of data populate to ui for each append
	    // receive means receive from ws service
	    // consume means consume by UI and displayed to page

	    var batchSize = void 0,
	        chunkSize = void 0,
	        noMoreData = void 0,
	        pending = void 0,
	        currentBatch = void 0,
	        transactionsReceived = void 0,
	        transactionsConsumed = void 0;

	    var tableExist = function tableExist() {
	        return document.getElementById('statement-table');
	    };

	    var finishedConsumed = function finishedConsumed() {
	        return transactionsConsumed === transactionsReceived;
	    };

	    var getStatement = function getStatement(opts) {
	        var req = { statement: 1, description: 1 };
	        if (opts) {
	            $.extend(true, req, opts);
	        }
	        var jumpToVal = $('#jump-to').attr('data-value');
	        if (jumpToVal && jumpToVal !== '') {
	            req.date_to = moment.utc(jumpToVal).unix() + (japanese_client() ? 15 : 24) * (60 * 60);
	            req.date_from = 0;
	        }
	        BinarySocket.send(req);
	    };

	    var getNextBatchStatement = function getNextBatchStatement() {
	        getStatement({ offset: transactionsReceived, limit: batchSize });
	        pending = true;
	    };

	    var getNextChunkStatement = function getNextChunkStatement() {
	        var chunk = currentBatch.splice(0, chunkSize);
	        transactionsConsumed += chunk.length;
	        $('#rows_count').text(transactionsConsumed);
	        return chunk;
	    };

	    var statementHandler = function statementHandler(response) {
	        if (response.hasOwnProperty('error')) {
	            StatementUI.errorMessage(response.error.message);
	            return;
	        }

	        pending = false;

	        var statement = response.statement;
	        currentBatch = statement.transactions;
	        transactionsReceived += currentBatch.length;

	        if (currentBatch.length < batchSize) {
	            noMoreData = true;
	        }

	        if (!tableExist()) {
	            StatementUI.createEmptyStatementTable().appendTo('#statement-ws-container');
	            $('.act, .credit').addClass('nowrap');
	            StatementUI.updateStatementTable(getNextChunkStatement());

	            // Show a message when the table is empty
	            if (transactionsReceived === 0 && currentBatch.length === 0) {
	                $('#statement-table').find('tbody').append($('<tr/>', { class: 'flex-tr' }).append($('<td/>', { colspan: 7 }).append($('<p/>', { class: 'notice-msg center-text', text: localize('Your account has no trading activity.') }))));
	            } else {
	                $('#jump-to').parent().parent().parent().removeClass('invisible');
	                if (getLanguage() === 'JA') {
	                    $('#download_csv').removeClass('invisible').find('a').unbind('click').click(function () {
	                        StatementUI.exportCSV();
	                    });
	                }
	            }
	        }
	        showLocalTimeOnHover('td.date');
	    };

	    var loadStatementChunkWhenScroll = function loadStatementChunkWhenScroll() {
	        $(document).scroll(function () {
	            var hidableHeight = function hidableHeight(percentage) {
	                var totalHidable = $(document).height() - $(window).height();
	                return Math.floor(totalHidable * percentage / 100);
	            };

	            var pFromTop = $(document).scrollTop();

	            if (!tableExist()) {
	                return;
	            }

	            if (pFromTop < hidableHeight(70)) {
	                return;
	            }

	            if (finishedConsumed() && !noMoreData && !pending) {
	                getNextBatchStatement();
	                return;
	            }

	            if (!finishedConsumed()) {
	                StatementUI.updateStatementTable(getNextChunkStatement());
	            }
	        });
	    };

	    var initTable = function initTable() {
	        pending = false;
	        noMoreData = false;

	        currentBatch = [];

	        transactionsReceived = 0;
	        transactionsConsumed = 0;

	        StatementUI.errorMessage(null);

	        StatementUI.clearTableContent();
	    };

	    var initSocket = function initSocket() {
	        BinarySocket.init({
	            onmessage: function onmessage(msg) {
	                var response = JSON.parse(msg.data);
	                if (response) {
	                    var type = response.msg_type;
	                    if (type === 'statement') {
	                        StatementWS.statementHandler(response);
	                    } else if (type === 'oauth_apps') {
	                        addTooltip(StatementUI.setOauthApps(buildOauthApps(response.oauth_apps)));
	                    }
	                }
	            }
	        });
	        BinarySocket.send({ oauth_apps: 1 });
	    };

	    var initPage = function initPage() {
	        batchSize = 200;
	        chunkSize = batchSize / 2;
	        noMoreData = false;
	        pending = false; // serve as a lock to prevent ws request is sequential
	        currentBatch = [];
	        transactionsReceived = 0;
	        transactionsConsumed = 0;
	        initSocket();
	        Content.populate();
	        getNextBatchStatement();
	        loadStatementChunkWhenScroll();
	    };

	    var cleanStatementPageState = function cleanStatementPageState() {
	        initTable();
	    };

	    var attachDatePicker = function attachDatePicker() {
	        var jumpTo = '#jump-to',
	            datePickerInst = new DatePicker(jumpTo);
	        datePickerInst.hide();
	        datePickerInst.show('', '0');
	        $(jumpTo).val(localize('Today')).attr('data-value', toISOFormat(moment())).change(function () {
	            if (!dateValueChanged(this, 'date')) {
	                return false;
	            }
	            $('.table-container').remove();
	            StatementUI.clearTableContent();
	            StatementWS.init();
	            return true;
	        });
	    };

	    return {
	        init: initPage,
	        statementHandler: statementHandler,
	        clean: cleanStatementPageState,
	        attachDatePicker: attachDatePicker
	    };
	}();

	module.exports = {
	    StatementWS: StatementWS
	};

/***/ },
/* 505 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var toJapanTimeIfNeeded = __webpack_require__(439).Clock.toJapanTimeIfNeeded;
	var downloadCSV = __webpack_require__(419).downloadCSV;
	var Button = __webpack_require__(500).Button;
	var Content = __webpack_require__(426).Content;
	var Table = __webpack_require__(501).Table;
	var showTooltip = __webpack_require__(463).showTooltip;
	var japanese_client = __webpack_require__(307).japanese_client;
	var Statement = __webpack_require__(506).Statement;
	var localize = __webpack_require__(423).localize;
	var Client = __webpack_require__(305).Client;

	var StatementUI = function () {
	    'use strict';

	    var tableID = 'statement-table',
	        columns = ['date', 'ref', 'payout', 'act', 'desc', 'credit', 'bal', 'details'];
	    var allData = [],
	        oauth_apps = {};

	    var createEmptyStatementTable = function createEmptyStatementTable() {
	        var header = [Content.localize().textDate, Content.localize().textRef, localize('Potential Payout'), Content.localize().textAction, Content.localize().textDescription, Content.localize().textCreditDebit, Content.localize().textBalance, Content.localize().textDetails];

	        var jpClient = japanese_client(),
	            currency = Client.get_value('currency');

	        header[6] += jpClient || !currency ? '' : ' (' + currency + ')';

	        var metadata = {
	            id: tableID,
	            cols: columns
	        };
	        var data = [];
	        return Table.createFlexTable(data, metadata, header);
	    };

	    var clearTableContent = function clearTableContent() {
	        Table.clearTableBody(tableID);
	        allData = [];
	        $('#' + tableID + '>tfoot').hide();
	    };

	    var createStatementRow = function createStatementRow(transaction) {
	        var statement_data = Statement.getStatementData(transaction, Client.get_value('currency'), japanese_client());
	        allData.push($.extend({}, statement_data, {
	            action: localize(statement_data.action),
	            desc: localize(statement_data.desc)
	        }));
	        var creditDebitType = parseFloat(transaction.amount) >= 0 ? 'profit' : 'loss';

	        var $statementRow = Table.createFlexTableRow([statement_data.date, '<span' + showTooltip(statement_data.app_id, oauth_apps[statement_data.app_id]) + '>' + statement_data.ref + '</span>', statement_data.payout, localize(statement_data.action), '', statement_data.amount, statement_data.balance, ''], columns, 'data');

	        $statementRow.children('.credit').addClass(creditDebitType);
	        $statementRow.children('.date').addClass('pre');
	        $statementRow.children('.desc').html(localize(statement_data.desc) + '<br>');

	        // create view button and append
	        if (statement_data.action === 'Sell' || statement_data.action === 'Buy') {
	            var $viewButtonSpan = Button.createBinaryStyledButton();
	            var $viewButton = $viewButtonSpan.children('.button').first();
	            $viewButton.text(localize('View'));
	            $viewButton.addClass('open_contract_detailsws');
	            $viewButton.attr('contract_id', statement_data.id);

	            $statementRow.children('.desc,.details').append($viewButtonSpan);
	        }

	        return $statementRow[0]; // return DOM instead of jquery object
	    };

	    var updateStatementTable = function updateStatementTable(transactions) {
	        Table.appendTableBody(tableID, transactions, createStatementRow);
	    };

	    var errorMessage = function errorMessage(msg) {
	        var $err = $('#statement-ws-container').find('#error-msg');
	        if (msg) {
	            $err.removeClass('invisible').text(msg);
	        } else {
	            $err.addClass('invisible').text('');
	        }
	    };

	    var exportCSV = function exportCSV() {
	        downloadCSV(Statement.generateCSV(allData, japanese_client()), 'Statement_' + Client.get_value('loginid') + '_latest' + $('#rows_count').text() + '_' + toJapanTimeIfNeeded(window.time).replace(/\s/g, '_').replace(/:/g, '') + '.csv');
	    };

	    return {
	        clearTableContent: clearTableContent,
	        createEmptyStatementTable: createEmptyStatementTable,
	        updateStatementTable: updateStatementTable,
	        errorMessage: errorMessage,
	        exportCSV: exportCSV,
	        setOauthApps: function setOauthApps(values) {
	            return oauth_apps = values;
	        }
	    };
	}();

	module.exports = {
	    StatementUI: StatementUI
	};

/***/ },
/* 506 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var moment = __webpack_require__(308);
	var toTitleCase = __webpack_require__(441).toTitleCase;
	var addComma = __webpack_require__(441).addComma;
	var format_money = __webpack_require__(440).format_money;
	var toJapanTimeIfNeeded = __webpack_require__(439).Clock.toJapanTimeIfNeeded;
	var localize = __webpack_require__(423).localize;
	var Client = __webpack_require__(305).Client;

	var Statement = function () {
	    'use strict';

	    var getStatementData = function getStatementData(statement, currency, jpClient) {
	        var dateObj = new Date(statement.transaction_time * 1000),
	            momentObj = moment.utc(dateObj),
	            dateStr = momentObj.format('YYYY-MM-DD'),
	            timeStr = momentObj.format('HH:mm:ss') + ' GMT',
	            payout = parseFloat(statement.payout),
	            amount = parseFloat(statement.amount),
	            balance = parseFloat(statement.balance_after);

	        return {
	            date: jpClient ? toJapanTimeIfNeeded(statement.transaction_time) : dateStr + '\n' + timeStr,
	            ref: statement.transaction_id,
	            payout: isNaN(payout) ? '-' : jpClient ? format_money(currency, payout) : payout.toFixed(2),
	            action: toTitleCase(statement.action_type),
	            amount: isNaN(amount) ? '-' : jpClient ? format_money(currency, amount) : addComma(amount),
	            balance: isNaN(balance) ? '-' : jpClient ? format_money(currency, balance) : addComma(balance),
	            desc: statement.longcode.replace(/\n/g, '<br />'),
	            id: statement.contract_id,
	            app_id: statement.app_id
	        };
	    };

	    var generateCSV = function generateCSV(allData, jpClient) {
	        var columns = ['date', 'ref', 'payout', 'action', 'desc', 'amount', 'balance'],
	            header = ['Date', 'Reference ID', 'Potential Payout', 'Action', 'Description', 'Credit/Debit'].map(function (str) {
	            return localize(str);
	        }),
	            currency = Client.get_value('currency');
	        header.push(localize('Balance') + (jpClient || !currency ? '' : ' (' + currency + ')'));
	        var sep = ',';
	        var csv = [header.join(sep)];
	        if (allData && allData.length > 0) {
	            csv = csv.concat(allData.map(function (data) {
	                return columns.map(function (key) {
	                    // eslint-disable-next-line no-control-regex
	                    return data[key] ? data[key].replace(new RegExp(sep, 'g'), '').replace(new RegExp('\n|<br />', 'g'), ' ') : '';
	                }).join(sep);
	            }));
	        }
	        return csv.join('\r\n');
	    };

	    return {
	        getStatementData: getStatementData,
	        generateCSV: generateCSV
	    };
	}();

	module.exports = {
	    Statement: Statement
	};

/***/ },
/* 507 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var EnjoyHint = __webpack_require__(508);
	var Cookies = __webpack_require__(301);
	var localize = __webpack_require__(423).localize;

	/*
	 *  This is developed to simplify the usage of enjoyhint (https://github.com/xbsoftware/enjoyhint)
	 *
	 *  How to Implement in a page:
	 *  1. Add the button element to the template: <div id="guideBtn"></div>
	 *  2. Add the js initialization call, having the customized parameters: Guide.init({script : 'trading'});
	 *  3. Add the script data to getScript() method
	 */

	var Guide = function () {
	    var opt = void 0,
	        cookieName = void 0,
	        btnNext = void 0,
	        btnFinish = void 0;

	    var init = function init(options) {
	        opt = {
	            script: '', // the script name in scripts
	            autoStart: false, // false: start by button click
	            guideBtnID: '#guideBtn',
	            btnText: localize('Walkthrough Guide'), // guide start button's text
	            blink_class: 'highlight',
	            blink_inDelay: 1000,
	            blink_outDelay: 1000,
	            blink_interval: 3000, // 0: continous blinking (blink_inDelay + blink_outDelay)
	            blink_count: 0 };
	        $.extend(true, opt, options);

	        cookieName = 'hide_guide';
	        btnNext = { className: 'button', html: '<span>' + localize('Next') + '</span>' };
	        btnFinish = { className: 'button btnFinish', html: '<span>' + localize('Finish') + '</span>' };

	        if ($(opt.guideBtnID).length === 0) {
	            console.warn('Could not find the button placeholder: <div id="' + opt.guideBtnID + '"></div>');
	            return;
	        }

	        if (opt.script.length === 0) {
	            console.warn('"script" name should be specified');
	            return;
	        }

	        if (isDisabled()) {
	            $(opt.guideBtnID).remove();
	            return;
	        }

	        makeButton();
	    };

	    /*
	     *  do not show the guide button if its close (X) has been clicked before
	     */
	    var isDisabled = function isDisabled() {
	        var disabled = Cookies.get(cookieName);
	        return !!disabled && $.inArray(opt.script, disabled.split(',')) >= 0;
	    };

	    /*
	     *  handle the guide button appearance using a cookie for all scripts
	     */
	    var setDisabled = function setDisabled() {
	        if (!isDisabled()) {
	            var disabled = Cookies.get(cookieName);
	            Cookies.set(cookieName, !disabled ? opt.script : disabled + ',' + opt.script);
	        }
	    };

	    /*
	     *  generate the button's html
	     */
	    var makeButton = function makeButton() {
	        if ($(opt.guideBtnID).children().length > 0) {
	            return;
	        }

	        $(opt.guideBtnID).addClass('gr-hide-m pulser').append($('<span/>', { class: 'close', text: 'X' })).append($('<strong/>'));
	        $(opt.guideBtnID + ' strong').html('<span></span>' + opt.btnText);

	        setEvents();
	    };

	    /*
	     *  both buttons' click event
	     */
	    var setEvents = function setEvents() {
	        $(opt.guideBtnID + ' strong').click(function () {
	            var enjoyhint_instance = new EnjoyHint({});
	            enjoyhint_instance.setScript(getScript(opt.script));
	            enjoyhint_instance.runScript();
	        });

	        if (opt.autoStart) {
	            $(opt.guideBtnID).click();
	        }

	        // Hide button
	        $(opt.guideBtnID + ' span.close').click(function () {
	            setDisabled();
	            $(opt.guideBtnID).remove();
	        });
	    };

	    /*
	     *  each page's script
	     */
	    var getScript = function getScript(scriptName) {
	        if (scriptName !== 'trading') {
	            return null;
	        }
	        return [{
	            selector: '#contract_markets',
	            description: '<h1>' + localize('Step') + ' 1</h1>' + localize('Select your market'),
	            event_type: 'next',
	            nextButton: btnNext
	        }, {
	            selector: '#underlying',
	            description: '<h1>' + localize('Step') + ' 2</h1>' + localize('Select your underlying asset'),
	            event_type: 'next',
	            nextButton: btnNext
	        }, {
	            selector: '#contract_form_name_nav',
	            description: '<h1>' + localize('Step') + ' 3</h1>' + localize('Select your trade type'),
	            event_type: 'next',
	            nextButton: btnNext
	        }, {
	            selector: '#websocket_form',
	            description: '<h1>' + localize('Step') + ' 4</h1>' + localize('Adjust trade parameters'),
	            event_type: 'next',
	            nextButton: btnNext
	        }, {
	            selector: '#contracts_list',
	            description: '<h1>' + localize('Step') + ' 5</h1>' + localize('Predict the direction<br />and purchase'),
	            event_type: 'next',
	            nextButton: btnFinish
	        }];
	    };

	    return {
	        init: init
	    };
	}();

	module.exports = {
	    Guide: Guide
	};

/***/ },
/* 508 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	// https://github.com/xbsoftware/enjoyhint
	// (+ some custom changes for binary.com)

	var $ = __webpack_require__(1);
	var Kinetic = __webpack_require__(509);

	module.exports = function (_options) {
	    var that = this;
	    // Some options
	    var defaults = {
	        onStart: function onStart() {},
	        onEnd: function onEnd() {}
	    };
	    var options = $.extend(defaults, _options);

	    var data = [];
	    var current_step = 0;

	    $body = $('body');

	    /********************* PRIVAT METHODS ***************************************/
	    var init = function init() {
	        if ($('.enjoyhint')) $('.enjoyhint').remove();
	        $("html, body").css({ 'overflow': 'hidden' });
	        $(document).on("touchmove", lockTouch);

	        $body.enjoyhint({
	            onNextClick: function onNextClick() {
	                current_step++;
	                stepAction();
	            },
	            onSkipClick: function onSkipClick() {
	                var step_data = data[current_step];
	                var $element = $(step_data.selector);
	                off(step_data.event);
	                $element.off(makeEventName(step_data.event));
	                destroyEnjoy();
	            }
	        });
	    };

	    var lockTouch = function lockTouch(e) {
	        e.preventDefault();
	    };

	    var destroyEnjoy = function destroyEnjoy() {
	        $body = $('body');
	        $('.enjoyhint').remove();
	        $("html, body").css({ 'overflow': 'auto' });
	        $("html, body").css({ 'overflow-x': 'hidden' });
	        $(document).off("touchmove", lockTouch);
	    };

	    that.clear = function () {
	        //Remove userClass and set default text
	        $(".enjoyhint_next_btn").removeClass(that.nextUserClass);
	        $(".enjoyhint_next_btn").text("Next");
	        $(".enjoyhint_skip_btn").removeClass(that.skipUserClass);
	        $(".enjoyhint_skip_btn").text("Skip");
	    };

	    var $body = $('body');
	    var stepAction = function stepAction() {
	        if (data && data[current_step]) {
	            $(".enjoyhint").removeClass("enjoyhint-step-" + current_step);
	            $(".enjoyhint").addClass("enjoyhint-step-" + (current_step + 1));
	            var step_data = data[current_step];
	            if (step_data.onBeforeStart && typeof step_data.onBeforeStart === 'function') {
	                step_data.onBeforeStart();
	            }
	            var timeout = step_data.timeout || 0;
	            setTimeout(function () {
	                if (!step_data.selector) {
	                    for (var prop in step_data) {
	                        if (step_data.hasOwnProperty(prop) && prop.split(" ")[1]) {
	                            step_data.selector = prop.split(" ")[1];
	                            step_data.event = prop.split(" ")[0];
	                            if (prop.split(" ")[0] == 'next' || prop.split(" ")[0] == 'auto' || prop.split(" ")[0] == 'custom') {
	                                step_data.event_type = prop.split(" ")[0];
	                            }
	                            step_data.description = step_data[prop];
	                        }
	                    }
	                }
	                setTimeout(function () {
	                    that.clear();
	                }, 250);
	                $(document.body).scrollTo(step_data.selector, step_data.scrollAnimationSpeed || 250, { offset: -100 });
	                setTimeout(function () {
	                    var $element = $(step_data.selector);
	                    var event = makeEventName(step_data.event);

	                    $body.enjoyhint('show');
	                    $body.enjoyhint('hide_next');
	                    var $event_element = $element;
	                    if (step_data.event_selector) {
	                        $event_element = $(step_data.event_selector);
	                    }
	                    if (!step_data.event_type && step_data.event == "key") {
	                        $element.keydown(function (event) {
	                            if (event.which == step_data.keyCode) {
	                                current_step++;
	                                stepAction();
	                            }
	                        });
	                    }
	                    if (step_data.showNext == true) {
	                        $body.enjoyhint('show_next');
	                    }
	                    if (step_data.showSkip == true) {
	                        $body.enjoyhint('show_skip');
	                    } else {
	                        $body.enjoyhint('hide_skip');
	                    }
	                    if (step_data.showSkip == true) {}

	                    if (step_data.nextButton) {
	                        $(".enjoyhint_next_btn").addClass(step_data.nextButton.className || "");
	                        $(".enjoyhint_next_btn").html(step_data.nextButton.html || "Next");
	                        that.nextUserClass = step_data.nextButton.className;
	                    }

	                    if (step_data.skipButton) {
	                        $(".enjoyhint_skip_btn").addClass(step_data.skipButton.className || "");
	                        $(".enjoyhint_skip_btn").html(step_data.skipButton.html || "Skip");
	                        that.skipUserClass = step_data.skipButton.className;
	                    }

	                    if (step_data.event_type) {
	                        switch (step_data.event_type) {
	                            case 'auto':
	                                $element[step_data.event]();
	                                switch (step_data.event) {
	                                    case 'click':
	                                        break;
	                                }
	                                current_step++;
	                                stepAction();
	                                return;
	                                break;
	                            case 'custom':
	                                on(step_data.event, function () {
	                                    current_step++;
	                                    off(step_data.event);
	                                    stepAction();
	                                });
	                                break;
	                            case 'next':
	                                $body.enjoyhint('show_next');
	                                break;

	                        }
	                    } else {
	                        $event_element.on(event, function (e) {
	                            if (step_data.keyCode && e.keyCode != step_data.keyCode) {
	                                return;
	                            }
	                            current_step++;
	                            $(this).off(event);

	                            stepAction();
	                        });
	                    }
	                    var max_habarites = Math.max($element.outerWidth(), $element.outerHeight());
	                    var radius = step_data.radius || Math.round(max_habarites / 2) + 5;
	                    var offset = $element.offset();
	                    var w = $element.outerWidth();
	                    var h = $element.outerHeight();
	                    var shape_margin = step_data.margin !== undefined ? step_data.margin : 10;
	                    var coords = {
	                        x: offset.left + Math.round(w / 2),
	                        y: offset.top + Math.round(h / 2) - $(document).scrollTop()
	                    };
	                    var shape_data = {
	                        center_x: coords.x,
	                        center_y: coords.y,
	                        text: step_data.description,
	                        top: step_data.top,
	                        bottom: step_data.bottom,
	                        left: step_data.left,
	                        right: step_data.right,
	                        margin: step_data.margin,
	                        scroll: step_data.scroll
	                    };

	                    if (step_data.shape && step_data.shape == 'circle') {
	                        shape_data.shape = 'circle';
	                        shape_data.radius = radius;
	                    } else {
	                        shape_data.radius = 0;
	                        shape_data.width = w + shape_margin;
	                        shape_data.height = h + shape_margin;
	                    }
	                    $body.enjoyhint('render_label_with_shape', shape_data);
	                }, step_data.scrollAnimationSpeed + 20 || 270);
	            }, timeout);
	        } else {
	            $body.enjoyhint('hide');
	            options.onEnd();
	            destroyEnjoy();
	        }
	    };

	    var makeEventName = function makeEventName(name, is_custom) {
	        return name + (is_custom ? 'custom' : '') + '.enjoy_hint';
	    };

	    var on = function on(event_name, callback) {
	        $body.on(makeEventName(event_name, true), callback);
	    };
	    var off = function off(event_name) {
	        $body.off(makeEventName(event_name, true));
	    };

	    /********************* PUBLIC METHODS ***************************************/
	    that.runScript = function () {
	        current_step = 0;
	        options.onStart();
	        stepAction();
	    };

	    that.resumeScript = function () {
	        stepAction();
	    };

	    that.getCurrentStep = function () {
	        return current_step;
	    };

	    that.trigger = function (event_name) {
	        $body.trigger(makeEventName(event_name, true));
	    };

	    that.setScript = function (_data) {
	        if (_data) {
	            data = _data;
	        }
	    };

	    //support deprecated API methods
	    that.set = function (_data) {
	        that.setScript(_data);
	    };

	    that.setSteps = function (_data) {
	        that.setScript(_data);
	    };

	    that.run = function () {
	        that.runScript();
	    };

	    that.resume = function () {
	        that.resumeScript();
	    };

	    init();
	};

	if (typeof CanvasRenderingContext2D !== 'undefined') {
	    CanvasRenderingContext2D.prototype.roundRect = function (x, y, w, h, r) {
	        if (w < 2 * r) r = w / 2;
	        if (h < 2 * r) r = h / 2;
	        this.beginPath();
	        this.moveTo(x + r, y);
	        this.arcTo(x + w, y, x + w, y + h, r);
	        this.arcTo(x + w, y + h, x, y + h, r);
	        this.arcTo(x, y + h, x, y, r);
	        this.arcTo(x, y, x + w, y, r);
	        this.closePath();
	        return this;
	    };
	}

	var methods = {
	    init: function init(options) {
	        //console.log(options,'-------------');
	        return this.each(function () {
	            var defaults = {
	                onNextClick: function onNextClick() {},
	                onSkipClick: function onSkipClick() {},
	                animation_time: 800
	            };

	            this.enjoyhint_obj = {};
	            var that = this.enjoyhint_obj;
	            var $that = $(this);
	            var $body = $('body');
	            that.options = jQuery.extend(defaults, options);

	            //general classes
	            that.gcl = {
	                chooser: 'enjoyhint'
	            };

	            // classes
	            that.cl = {
	                enjoy_hint: 'enjoyhint',
	                hide: 'enjoyhint_hide',
	                disable_events_element: 'enjoyhint_disable_events',
	                btn: 'enjoyhint_btn',
	                skip_btn: 'enjoyhint_skip_btn',
	                close_btn: 'enjoyhint_close_btn',
	                next_btn: 'enjoyhint_next_btn',
	                main_canvas: 'enjoyhint_canvas',
	                main_svg: 'enjoyhint_svg',
	                svg_wrapper: 'enjoyhint_svg_wrapper',
	                svg_transparent: 'enjoyhint_svg_transparent',
	                kinetic_container: 'kinetic_container'
	            };
	            function makeSVG(tag, attrs) {
	                var el = document.createElementNS('http://www.w3.org/2000/svg', tag);
	                for (var k in attrs) {
	                    el.setAttribute(k, attrs[k]);
	                }return el;
	            }

	            // =======================================================================
	            // ========================---- enjoyhint ----==============================
	            // =======================================================================
	            that.canvas_size = {
	                w: $(window).width() * 1.4,
	                h: $(window).height() * 1.4
	            };
	            var canvas_id = "enj_canvas";

	            that.enjoyhint = $('<div>', { 'class': that.cl.enjoy_hint + ' ' + that.cl.svg_transparent }).appendTo($that);
	            that.enjoyhint_svg_wrapper = $('<div>', { 'class': that.cl.svg_wrapper + ' ' + that.cl.svg_transparent }).appendTo(that.enjoyhint);
	            that.$stage_container = $('<div id="' + that.cl.kinetic_container + '">').appendTo(that.enjoyhint);
	            that.$canvas = $('<canvas id="' + canvas_id + '" width="' + that.canvas_size.w + '" height="' + that.canvas_size.h + '" class="' + that.cl.main_canvas + '">').appendTo(that.enjoyhint);
	            that.$svg = $('<svg width="' + that.canvas_size.w + '" height="' + that.canvas_size.h + '" class="' + that.cl.main_canvas + ' ' + that.cl.main_svg + '">').appendTo(that.enjoyhint_svg_wrapper);
	            var defs = $(makeSVG('defs'));
	            var marker = $(makeSVG('marker', { id: "arrowMarker", viewBox: "0 0 36 21", refX: "21", refY: "10", markerUnits: "strokeWidth", orient: "auto", markerWidth: "16", markerHeight: "12" }));
	            var polilyne = $(makeSVG('path', { style: "fill:none; stroke:rgb(255,255,255); stroke-width:2", d: "M0,0 c30,11 30,9 0,20" }));
	            defs.append(marker.append(polilyne)).appendTo(that.$svg);
	            that.kinetic_stage = new Kinetic.Stage({
	                container: that.cl.kinetic_container,
	                width: that.canvas_size.w,
	                height: that.canvas_size.h
	            });
	            //console.log(that.enjoyhint);

	            that.layer = new Kinetic.Layer();
	            that.rect = new Kinetic.Rect({
	                //          x: 0,
	                //          y: 0,
	                fill: 'rgba(0,0,0,0.6)',
	                width: that.canvas_size.w,
	                height: that.canvas_size.h
	            });

	            var $top_dis_events = $('<div>', { 'class': that.cl.disable_events_element }).appendTo(that.enjoyhint);
	            var $bottom_dis_events = $top_dis_events.clone().appendTo(that.enjoyhint);
	            var $left_dis_events = $top_dis_events.clone().appendTo(that.enjoyhint);
	            var $right_dis_events = $top_dis_events.clone().appendTo(that.enjoyhint);

	            that.$skip_btn = $('<div>', { 'class': that.cl.skip_btn }).appendTo(that.enjoyhint).html('Skip').click(function (e) {
	                that.hide();
	                that.options.onSkipClick();
	            });
	            that.$next_btn = $('<div>', { 'class': that.cl.next_btn }).appendTo(that.enjoyhint).html('Next').click(function (e) {
	                that.options.onNextClick();
	            });

	            that.$close_btn = $('<div>', { 'class': that.cl.close_btn }).appendTo(that.enjoyhint).html('').click(function (e) {
	                that.hide();
	                that.options.onSkipClick();
	            });

	            that.$canvas.mousedown(function (e) {
	                //console.log('cl')
	                $('canvas').css({ left: '4000px' });

	                var BottomElement = document.elementFromPoint(e.clientX, e.clientY);
	                //console.log(BottomElement.tagName)
	                $('canvas').css({ left: '0' });

	                $(BottomElement).click();
	                //          that.$canvas.show();
	                return false;
	            });

	            var circle_r = 0;
	            var shape_init_shift = 130;
	            that.shape = new Kinetic.Shape({
	                radius: circle_r,
	                center_x: -shape_init_shift,
	                center_y: -shape_init_shift,
	                width: 0,
	                height: 0,
	                sceneFunc: function sceneFunc(context) {
	                    var ctx = this.getContext("2d")._context;
	                    var pos = this.pos;
	                    var def_comp = ctx.globalCompositeOperation;
	                    ctx.globalCompositeOperation = 'destination-out';
	                    ctx.beginPath();

	                    var x = this.attrs.center_x - Math.round(this.attrs.width / 2);
	                    var y = this.attrs.center_y - Math.round(this.attrs.height / 2);
	                    ctx.roundRect(x, y, this.attrs.width, this.attrs.height, this.attrs.radius);
	                    ctx.fillStyle = "red";
	                    ctx.fill();

	                    ctx.globalCompositeOperation = def_comp;
	                }
	            });
	            that.shape.radius = circle_r;
	            that.layer.add(that.rect);
	            that.layer.add(that.shape);
	            that.kinetic_stage.add(that.layer);

	            var enjoyhint_elements = [that.enjoyhint, $top_dis_events, $bottom_dis_events, $left_dis_events, $right_dis_events];

	            that.show = function () {
	                that.enjoyhint.removeClass(that.cl.hide);
	            };

	            that.hide = function () {
	                that.enjoyhint.addClass(that.cl.hide);
	                var tween = new Kinetic.Tween({
	                    node: that.shape,
	                    duration: 0.002,
	                    center_x: -shape_init_shift,
	                    center_y: -shape_init_shift
	                });
	                tween.play();
	            };

	            that.hide();

	            that.hideNextBtn = function () {
	                that.$next_btn.addClass(that.cl.hide);
	                that.nextBtn = "hide";
	            };
	            that.showNextBtn = function () {
	                that.$next_btn.removeClass(that.cl.hide);
	                that.nextBtn = "show";
	            };

	            that.hideSkipBtn = function () {
	                that.$skip_btn.addClass(that.cl.hide);
	            };
	            that.showSkipBtn = function () {
	                that.$skip_btn.removeClass(that.cl.hide);
	            };

	            that.renderCircle = function (data) {
	                var r = data.r || 0;
	                var x = data.x || 0;
	                var y = data.y || 0;

	                var tween = new Kinetic.Tween({
	                    node: that.shape,
	                    duration: 0.2,
	                    center_x: x,
	                    center_y: y,
	                    width: r * 2,
	                    height: r * 2,
	                    radius: r
	                });
	                tween.play();

	                var left = x - r;
	                var right = x + r;
	                var top = y - r;
	                var bottom = y + r;
	                var margin = 20;
	                return {
	                    x: x,
	                    y: y,
	                    left: left,
	                    right: right,
	                    top: top,
	                    bottom: bottom,
	                    conn: {
	                        left: {
	                            x: left - margin,
	                            y: y
	                        },
	                        right: {
	                            x: right + margin,
	                            y: y
	                        },
	                        top: {
	                            x: x,
	                            y: top - margin
	                        },
	                        bottom: {
	                            x: x,
	                            y: bottom + margin
	                        }
	                    }
	                };
	            };

	            that.renderRect = function (data) {
	                var r = data.r || 0;
	                var x = data.x || 0;
	                var y = data.y || 0;
	                var w = data.w || 0;
	                var h = data.h || 0;
	                var margin = 20;
	                var tween = new Kinetic.Tween({
	                    node: that.shape,
	                    duration: 0.2,
	                    center_x: x,
	                    center_y: y,
	                    width: w,
	                    height: h,
	                    radius: r
	                });
	                tween.play();
	                var half_w = Math.round(w / 2);
	                var half_h = Math.round(h / 2);
	                var left = x - half_w;
	                var right = x + half_w;
	                var top = y - half_h;
	                var bottom = y + half_h;
	                return {
	                    x: x,
	                    y: y,
	                    left: left,
	                    right: right,
	                    top: top,
	                    bottom: bottom,
	                    conn: {
	                        left: {
	                            x: left - margin,
	                            y: y
	                        },
	                        right: {
	                            x: right + margin,
	                            y: y
	                        },
	                        top: {
	                            x: x,
	                            y: top - margin
	                        },
	                        bottom: {
	                            x: x,
	                            y: bottom + margin
	                        }
	                    }
	                };
	            };
	            that.renderLabel = function (data) {
	                var x = data.x || 0;
	                var y = data.y || 0;
	                var text = data.text || 0;

	                var label = that.getLabelElement({
	                    x: x,
	                    y: y,
	                    text: data.text
	                });
	                var label_w = label.width();
	                var label_h = label.height();
	                var label_left = label.offset().left;
	                var label_right = label.offset().left + label_w;
	                var label_top = label.offset().top - $(document).scrollTop();;
	                var label_bottom = label.offset().top + label_h;

	                var margin = 10;
	                var conn_left = {
	                    x: label_left - margin,
	                    y: label_top + Math.round(label_h / 2)
	                };
	                var conn_right = {
	                    x: label_right + margin,
	                    y: label_top + Math.round(label_h / 2)
	                };
	                var conn_top = {
	                    x: label_left + Math.round(label_w / 2),
	                    y: label_top - margin
	                };
	                var conn_bottom = {
	                    x: label_left + Math.round(label_w / 2),
	                    y: label_bottom + margin
	                };
	                label.detach();
	                setTimeout(function () {
	                    $('#enjoyhint_label').remove();
	                    label.appendTo(that.enjoyhint);
	                }, that.options.animation_time / 2);
	                return {
	                    label: label,
	                    left: label_left,
	                    right: label_right,
	                    top: label_top,
	                    bottom: label_bottom,
	                    conn: {
	                        left: conn_left,
	                        right: conn_right,
	                        top: conn_top,
	                        bottom: conn_bottom
	                    }

	                };
	            };
	            that.renderArrow = function (data) {
	                var x_from = data.x_from || 0;
	                var y_from = data.y_from || 0;
	                var x_to = data.x_to || 0;
	                var y_to = data.y_to || 0;
	                var by_top_side = data.by_top_side;
	                var control_point_x = 0;
	                var control_point_y = 0;
	                if (by_top_side) {
	                    if (y_from >= y_to) {
	                        control_point_y = y_to;
	                        control_point_x = x_from;
	                    } else {
	                        control_point_y = y_from;
	                        control_point_x = x_to;
	                    }
	                } else {
	                    if (y_from >= y_to) {
	                        control_point_y = y_from;
	                        control_point_x = x_to;
	                    } else {
	                        control_point_y = y_to;
	                        control_point_x = x_from;
	                    }
	                }

	                var text = data.text || '';
	                that.enjoyhint.addClass(that.cl.svg_transparent);
	                setTimeout(function () {
	                    $('#enjoyhint_arrpw_line').remove();
	                    var d = 'M' + x_from + ',' + y_from + ' Q' + control_point_x + ',' + control_point_y + ' ' + x_to + ',' + y_to;
	                    that.$svg.append(makeSVG('path', { style: "fill:none; stroke:rgb(255,255,255); stroke-width:3", 'marker-end': "url(#arrowMarker)", d: d, id: 'enjoyhint_arrpw_line' }));
	                    that.enjoyhint.removeClass(that.cl.svg_transparent);
	                }, that.options.animation_time / 2);
	            };

	            that.getLabelElement = function (data) {
	                return $('<div>', { "class": 'enjoy_hint_label', id: 'enjoyhint_label' }).css({
	                    'top': data.y + 'px',
	                    'left': data.x + 'px'
	                }).html(data.text).appendTo(that.enjoyhint);
	            };

	            that.disableEventsNearRect = function (rect) {
	                $top_dis_events.css({
	                    top: '0',
	                    left: '0'
	                }).height(rect.top);
	                $bottom_dis_events.css({
	                    top: rect.bottom + 'px',
	                    left: '0'
	                });
	                $left_dis_events.css({
	                    top: '0',
	                    left: 0 + 'px'
	                }).width(rect.left);
	                $right_dis_events.css({
	                    top: '0',
	                    left: rect.right + 'px'
	                });
	            };

	            that.renderLabelWithShape = function (data) {
	                var shape_type = data.shape || 'rect';
	                var shape_data = {};

	                var half_w = 0;
	                var half_h = 0;

	                var shape_offsets = {
	                    top: data.top || 0,
	                    bottom: data.bottom || 0,
	                    left: data.left || 0,
	                    right: data.right || 0
	                };

	                switch (shape_type) {
	                    case 'circle':
	                        half_w = half_h = data.radius;
	                        var sides_pos = {
	                            top: data.center_y - half_h + shape_offsets.top,
	                            bottom: data.center_y + half_h - shape_offsets.bottom,
	                            left: data.center_x - half_w + shape_offsets.left,
	                            right: data.center_x + half_w - shape_offsets.right
	                        };
	                        var width = sides_pos.right - sides_pos.left;
	                        var height = sides_pos.bottom - sides_pos.top;
	                        data.radius = Math.round(Math.min(width, height) / 2);
	                        //new half habarites
	                        half_w = half_h = Math.round(data.radius / 2);

	                        var new_half_w = Math.round(width / 2);
	                        var new_half_h = Math.round(height / 2);
	                        //new center_x and center_y
	                        data.center_x = sides_pos.left + new_half_w;
	                        data.center_y = sides_pos.top + new_half_h;

	                        shape_data = that.renderCircle({
	                            x: data.center_x,
	                            y: data.center_y,
	                            r: data.radius
	                        });

	                        break;
	                    case 'rect':
	                        half_w = Math.round(data.width / 2);
	                        half_h = Math.round(data.height / 2);

	                        var sides_pos = {
	                            top: data.center_y - half_h + shape_offsets.top,
	                            bottom: data.center_y + half_h - shape_offsets.bottom,
	                            left: data.center_x - half_w + shape_offsets.left,
	                            right: data.center_x + half_w - shape_offsets.right
	                        };
	                        data.width = sides_pos.right - sides_pos.left;
	                        data.height = sides_pos.bottom - sides_pos.top;

	                        half_w = Math.round(data.width / 2);
	                        half_h = Math.round(data.height / 2);
	                        //new center_x and center_y
	                        data.center_x = sides_pos.left + half_w;
	                        data.center_y = sides_pos.top + half_h;
	                        shape_data = that.renderRect({
	                            x: data.center_x,
	                            y: data.center_y,
	                            w: data.width,
	                            h: data.height,
	                            r: data.radius
	                        });
	                        break;
	                }

	                var body_size = {
	                    w: that.enjoyhint.width(),
	                    h: that.enjoyhint.height()
	                };
	                //temp label used for detect label width and height
	                var label = that.getLabelElement({
	                    x: 0,
	                    y: 0,
	                    text: data.text
	                });
	                var label_width = label.outerWidth();
	                var label_height = label.outerHeight();
	                label.remove();
	                var top_offset = data.center_y - half_h;
	                var bottom_offset = body_size.h - (data.center_y + half_h);
	                var left_offset = data.center_x - half_w;
	                var right_offset = body_size.w - (data.center_x + half_w);

	                var label_hor_side = body_size.w - data.center_x < data.center_x ? 'left' : 'right';
	                var label_ver_side = body_size.h - data.center_y < data.center_y ? 'top' : 'bottom';
	                var label_shift = 150;
	                var label_margin = 40;
	                var label_shift_with_label_width = label_shift + label_width + label_margin;
	                var label_shift_with_label_height = label_shift + label_height + label_margin;
	                var label_hor_offset = half_w + label_shift;
	                var label_ver_offset = half_h + label_shift;

	                var label_x = label_hor_side == 'left' ? data.center_x - label_hor_offset - label_width : data.center_x + label_hor_offset;
	                var label_y = label_ver_side == 'top' ? data.center_y - label_ver_offset - label_height : data.center_y + label_ver_offset;
	                if (top_offset < label_shift_with_label_height && bottom_offset < label_shift_with_label_height) {
	                    label_y = data.center_y + label_margin;
	                }
	                if (left_offset < label_shift_with_label_width && right_offset < label_shift_with_label_width) {
	                    label_x = data.center_x;
	                }

	                var label_data = that.renderLabel({
	                    x: label_x,
	                    y: label_y,
	                    text: data.text
	                });

	                that.$next_btn.css({
	                    left: label_x,
	                    top: label_y + label_height + 15
	                });
	                var left_skip = label_x + that.$next_btn.width() + 10;
	                //console.log(that.nextBtn);
	                if (that.nextBtn == "hide") {
	                    left_skip = label_x;
	                }

	                that.$skip_btn.css({
	                    left: left_skip,
	                    top: label_y + label_height + 15
	                });
	                that.$close_btn.css({
	                    right: 10,
	                    top: 10
	                });

	                that.disableEventsNearRect({
	                    top: shape_data.top,
	                    bottom: shape_data.bottom,
	                    left: shape_data.left,
	                    right: shape_data.right
	                });

	                var x_to = 0;
	                var y_to = 0;
	                var arrow_side = false;
	                var conn_label_side = 'left';
	                var conn_circle_side = 'left';

	                var is_center = label_data.left <= shape_data.x && label_data.right >= shape_data.x;
	                var is_left = label_data.right < shape_data.x;
	                var is_right = label_data.left > shape_data.x;

	                var is_abs_left = label_data.right < shape_data.left;
	                var is_abs_right = label_data.left > shape_data.right;

	                var is_top = label_data.bottom < shape_data.top;
	                var is_bottom = label_data.top > shape_data.bottom;
	                var is_mid = label_data.bottom >= shape_data.y && label_data.top <= shape_data.y;
	                var is_mid_top = label_data.bottom <= shape_data.y && !is_top;
	                var is_mid_bottom = label_data.top >= shape_data.y && !is_bottom;

	                function setArrowData(l_s, c_s, a_s) {
	                    conn_label_side = l_s;
	                    conn_circle_side = c_s;
	                    arrow_side = a_s;
	                }

	                function sideStatements(top_s, mid_top_s, mid_s, mid_bottom_s, bottom_s) {
	                    var statement = [];
	                    if (is_top) {
	                        statement = top_s;
	                    } else if (is_mid_top) {
	                        statement = mid_top_s;
	                    } else if (is_mid) {
	                        statement = mid_s;
	                    } else if (is_mid_bottom) {
	                        statement = mid_bottom_s;
	                    } else {
	                        //bottom
	                        statement = bottom_s;
	                    }
	                    if (!statement) {
	                        return;
	                    } else {
	                        setArrowData(statement[0], statement[1], statement[2]);
	                    }
	                }

	                if (is_center) {
	                    if (is_top) {
	                        setArrowData('bottom', 'top', 'top');
	                    } else if (is_bottom) {
	                        setArrowData('top', 'bottom', 'bottom');
	                    } else {
	                        return;
	                    }
	                } else if (is_left) {
	                    sideStatements(['right', 'top', 'top'], //top
	                    ['bottom', 'left', 'bottom'], //mid_top
	                    ['right', 'left', 'top'], //mid
	                    ['top', 'left', 'top'], //mid_bot
	                    ['right', 'bottom', 'bottom'] //bot
	                    );
	                } else {
	                    //right
	                    sideStatements(['left', 'top', 'top'], //top
	                    ['bottom', 'right', 'bottom'], //mid_top
	                    ['left', 'right', 'top'], //mid
	                    ['top', 'right', 'top'], //mid_bot
	                    ['left', 'bottom', 'bottom'] //bot
	                    );
	                }

	                var label_conn_coordinates = label_data.conn[conn_label_side];
	                var circle_conn_coordinates = shape_data.conn[conn_circle_side];
	                var by_top_side = arrow_side == 'top' ? true : false;
	                that.renderArrow({
	                    x_from: label_conn_coordinates.x,
	                    y_from: label_conn_coordinates.y,
	                    x_to: circle_conn_coordinates.x,
	                    y_to: circle_conn_coordinates.y,
	                    by_top_side: by_top_side
	                });
	            };

	            that.clear = function () {
	                that.ctx.clearRect(0, 0, 3000, 2000);
	            };

	            return this;
	        });
	    },

	    set: function set(val) {
	        this.each(function () {
	            this.enjoyhint_obj.setValue(val);
	        });
	        return this;
	    },

	    show: function show() {
	        this.each(function () {
	            this.enjoyhint_obj.show();
	        });
	        return this;
	    },

	    hide: function hide() {
	        this.each(function () {
	            this.enjoyhint_obj.hide();
	        });
	        return this;
	    },

	    hide_next: function hide_next() {
	        this.each(function () {
	            this.enjoyhint_obj.hideNextBtn();
	        });
	        return this;
	    },

	    show_next: function show_next() {
	        this.each(function () {
	            this.enjoyhint_obj.showNextBtn();
	        });
	        return this;
	    },

	    hide_skip: function hide_skip() {
	        this.each(function () {
	            this.enjoyhint_obj.hideSkipBtn();
	        });
	        return this;
	    },

	    show_skip: function show_skip() {
	        this.each(function () {
	            this.enjoyhint_obj.showSkipBtn();
	        });
	        return this;
	    },

	    render_circle: function render_circle(x, y, r) {
	        this.each(function () {
	            this.enjoyhint_obj.renderCircle(x, y, r);
	        });
	        return this;
	    },

	    render_label: function render_label(x, y, r) {
	        this.each(function () {
	            this.enjoyhint_obj.renderLabel(x, y, r);
	        });
	        return this;
	    },

	    render_label_with_shape: function render_label_with_shape(data) {
	        this.each(function () {
	            this.enjoyhint_obj.renderLabelWithShape(data);
	        });
	        return this;
	    },

	    clear: function clear() {
	        this.each(function () {
	            this.enjoyhint_obj.clear();
	        });
	        return this;
	    },

	    close: function close(val) {
	        this.each(function () {
	            this.enjoyhint_obj.closePopdown();
	        });
	        return this;
	    }
	};

	$.fn.enjoyhint = function (method) {
	    //console.log(method);
	    if (methods[method]) {
	        return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));
	    } else if ((typeof method === 'undefined' ? 'undefined' : _typeof(method)) === 'object' || !method) {
	        return methods.init.apply(this, arguments);
	    } else {
	        $.error('Method ' + method + ' does not exist on $.numinput');
	    }
	    return this;
	};

/***/ },
/* 509 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {
	/*
	 * KineticJS JavaScript Framework v5.2.0
	 * http://lavrton.github.io/KineticJS/
	 * Licensed under the MIT or GPL Version 2 licenses.
	 * Date: 2015-01-22
	 *
	 * Original work Copyright (C) 2011 - 2013 by Eric Rowell
	 * Modified work Copyright (C) 2014 - 2015 by Anton Lavrenov
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in
	 * all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	 * THE SOFTWARE.
	 */
	/**
	 * @namespace Kinetic
	 */
	/*jshint -W079, -W020*/
	var Kinetic = {};
	(function(root) {
	    var PI_OVER_180 = Math.PI / 180;

	    Kinetic = {
	        // public
	        version: '5.2.0',

	        // private
	        stages: [],
	        idCounter: 0,
	        ids: {},
	        names: {},
	        shapes: {},
	        listenClickTap: false,
	        inDblClickWindow: false,

	        // configurations
	        enableTrace: false,
	        traceArrMax: 100,
	        dblClickWindow: 400,
	        /**
	         * Global pixel ratio configuration. KineticJS automatically detect pixel ratio of current device.
	         * But you may override such property, if you want to use your value.
	         * @property pixelRatio
	         * @default undefined
	         * @memberof Kinetic
	         * @example
	         * Kinetic.pixelRatio = 1;
	         */
	        pixelRatio: undefined,
	        /**
	         * Drag distance property. If you start to drag a node you may want to wait until pointer is moved to some distance from start point,
	         * only then start dragging.
	         * @property dragDistance
	         * @default 0
	         * @memberof Kinetic
	         * @example
	         * Kinetic.dragDistance = 10;
	         */
	        dragDistance : 0,
	        /**
	         * Use degree values for angle properties. You may set this property to false if you want to use radiant values.
	         * @property angleDeg
	         * @default true
	         * @memberof Kinetic
	         * @example
	         * node.rotation(45); // 45 degrees
	         * Kinetic.angleDeg = false;
	         * node.rotation(Math.PI / 2); // PI/2 radian
	         */
	        angleDeg: true,
	         /**
	         * Show different warnings about errors or wrong API usage
	         * @property showWarnings
	         * @default true
	         * @memberof Kinetic
	         * @example
	         * Kinetic.showWarnings = false;
	         */
	        showWarnings : true,



	        /**
	         * @namespace Filters
	         * @memberof Kinetic
	         */
	        Filters: {},

	        /**
	         * Node constructor. Nodes are entities that can be transformed, layered,
	         * and have bound events. The stage, layers, groups, and shapes all extend Node.
	         * @constructor
	         * @memberof Kinetic
	         * @abstract
	         * @param {Object} config
	         * @param {Number} [config.x]
	     * @param {Number} [config.y]
	     * @param {Number} [config.width]
	     * @param {Number} [config.height]
	     * @param {Boolean} [config.visible]
	     * @param {Boolean} [config.listening] whether or not the node is listening for events
	     * @param {String} [config.id] unique id
	     * @param {String} [config.name] non-unique name
	     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1
	     * @param {Object} [config.scale] set scale
	     * @param {Number} [config.scaleX] set scale x
	     * @param {Number} [config.scaleY] set scale y
	     * @param {Number} [config.rotation] rotation in degrees
	     * @param {Object} [config.offset] offset from center point and rotation point
	     * @param {Number} [config.offsetX] set offset x
	     * @param {Number} [config.offsetY] set offset y
	     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop
	     *  the entire stage by dragging any portion of the stage
	     * @param {Number} [config.dragDistance]
	     * @param {Function} [config.dragBoundFunc]
	         */
	        Node: function(config) {
	            this._init(config);
	        },

	        /**
	         * Shape constructor.  Shapes are primitive objects such as rectangles,
	         *  circles, text, lines, etc.
	         * @constructor
	         * @memberof Kinetic
	         * @augments Kinetic.Node
	         * @param {Object} config
	         * @param {String} [config.fill] fill color
	     * @param {Integer} [config.fillRed] set fill red component
	     * @param {Integer} [config.fillGreen] set fill green component
	     * @param {Integer} [config.fillBlue] set fill blue component
	     * @param {Integer} [config.fillAlpha] set fill alpha component
	     * @param {Image} [config.fillPatternImage] fill pattern image
	     * @param {Number} [config.fillPatternX]
	     * @param {Number} [config.fillPatternY]
	     * @param {Object} [config.fillPatternOffset] object with x and y component
	     * @param {Number} [config.fillPatternOffsetX] 
	     * @param {Number} [config.fillPatternOffsetY] 
	     * @param {Object} [config.fillPatternScale] object with x and y component
	     * @param {Number} [config.fillPatternScaleX]
	     * @param {Number} [config.fillPatternScaleY]
	     * @param {Number} [config.fillPatternRotation]
	     * @param {String} [config.fillPatternRepeat] can be "repeat", "repeat-x", "repeat-y", or "no-repeat".  The default is "no-repeat"
	     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientStartPointX]
	     * @param {Number} [config.fillLinearGradientStartPointY]
	     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientEndPointX]
	     * @param {Number} [config.fillLinearGradientEndPointY]
	     * @param {Array} [config.fillLinearGradientColorStops] array of color stops
	     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientStartPointX]
	     * @param {Number} [config.fillRadialGradientStartPointY]
	     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientEndPointX] 
	     * @param {Number} [config.fillRadialGradientEndPointY] 
	     * @param {Number} [config.fillRadialGradientStartRadius]
	     * @param {Number} [config.fillRadialGradientEndRadius]
	     * @param {Array} [config.fillRadialGradientColorStops] array of color stops
	     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true
	     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration
	     * @param {String} [config.stroke] stroke color
	     * @param {Integer} [config.strokeRed] set stroke red component
	     * @param {Integer} [config.strokeGreen] set stroke green component
	     * @param {Integer} [config.strokeBlue] set stroke blue component
	     * @param {Integer} [config.strokeAlpha] set stroke alpha component
	     * @param {Number} [config.strokeWidth] stroke width
	     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true
	     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true
	     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default
	     *  is miter
	     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default
	     *  is butt
	     * @param {String} [config.shadowColor]
	     * @param {Integer} [config.shadowRed] set shadow color red component
	     * @param {Integer} [config.shadowGreen] set shadow color green component
	     * @param {Integer} [config.shadowBlue] set shadow color blue component
	     * @param {Integer} [config.shadowAlpha] set shadow color alpha component
	     * @param {Number} [config.shadowBlur]
	     * @param {Object} [config.shadowOffset] object with x and y component
	     * @param {Number} [config.shadowOffsetX]
	     * @param {Number} [config.shadowOffsetY]
	     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number
	     *  between 0 and 1
	     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true
	     * @param {Array} [config.dash]
	     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true
	         * @param {Number} [config.x]
	     * @param {Number} [config.y]
	     * @param {Number} [config.width]
	     * @param {Number} [config.height]
	     * @param {Boolean} [config.visible]
	     * @param {Boolean} [config.listening] whether or not the node is listening for events
	     * @param {String} [config.id] unique id
	     * @param {String} [config.name] non-unique name
	     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1
	     * @param {Object} [config.scale] set scale
	     * @param {Number} [config.scaleX] set scale x
	     * @param {Number} [config.scaleY] set scale y
	     * @param {Number} [config.rotation] rotation in degrees
	     * @param {Object} [config.offset] offset from center point and rotation point
	     * @param {Number} [config.offsetX] set offset x
	     * @param {Number} [config.offsetY] set offset y
	     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop
	     *  the entire stage by dragging any portion of the stage
	     * @param {Number} [config.dragDistance]
	     * @param {Function} [config.dragBoundFunc]
	         * @example
	         * var customShape = new Kinetic.Shape({
	         *   x: 5,
	         *   y: 10,
	         *   fill: 'red',
	         *   // a Kinetic.Canvas renderer is passed into the drawFunc function
	         *   drawFunc: function(context) {
	         *     context.beginPath();
	         *     context.moveTo(200, 50);
	         *     context.lineTo(420, 80);
	         *     context.quadraticCurveTo(300, 100, 260, 170);
	         *     context.closePath();
	         *     context.fillStrokeShape(this);
	         *   }
	         *});
	         */
	        Shape: function(config) {
	            this.__init(config);
	        },

	        /**
	         * Container constructor.&nbsp; Containers are used to contain nodes or other containers
	         * @constructor
	         * @memberof Kinetic
	         * @augments Kinetic.Node
	         * @abstract
	         * @param {Object} config
	         * @param {Number} [config.x]
	     * @param {Number} [config.y]
	     * @param {Number} [config.width]
	     * @param {Number} [config.height]
	     * @param {Boolean} [config.visible]
	     * @param {Boolean} [config.listening] whether or not the node is listening for events
	     * @param {String} [config.id] unique id
	     * @param {String} [config.name] non-unique name
	     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1
	     * @param {Object} [config.scale] set scale
	     * @param {Number} [config.scaleX] set scale x
	     * @param {Number} [config.scaleY] set scale y
	     * @param {Number} [config.rotation] rotation in degrees
	     * @param {Object} [config.offset] offset from center point and rotation point
	     * @param {Number} [config.offsetX] set offset x
	     * @param {Number} [config.offsetY] set offset y
	     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop
	     *  the entire stage by dragging any portion of the stage
	     * @param {Number} [config.dragDistance]
	     * @param {Function} [config.dragBoundFunc]
	         * * @param {Object} [config.clip] set clip
	     * @param {Number} [config.clipX] set clip x
	     * @param {Number} [config.clipY] set clip y
	     * @param {Number} [config.clipWidth] set clip width
	     * @param {Number} [config.clipHeight] set clip height

	         */
	        Container: function(config) {
	            this.__init(config);
	        },

	        /**
	         * Stage constructor.  A stage is used to contain multiple layers
	         * @constructor
	         * @memberof Kinetic
	         * @augments Kinetic.Container
	         * @param {Object} config
	         * @param {String|Element} config.container Container id or DOM element
	         * @param {Number} [config.x]
	     * @param {Number} [config.y]
	     * @param {Number} [config.width]
	     * @param {Number} [config.height]
	     * @param {Boolean} [config.visible]
	     * @param {Boolean} [config.listening] whether or not the node is listening for events
	     * @param {String} [config.id] unique id
	     * @param {String} [config.name] non-unique name
	     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1
	     * @param {Object} [config.scale] set scale
	     * @param {Number} [config.scaleX] set scale x
	     * @param {Number} [config.scaleY] set scale y
	     * @param {Number} [config.rotation] rotation in degrees
	     * @param {Object} [config.offset] offset from center point and rotation point
	     * @param {Number} [config.offsetX] set offset x
	     * @param {Number} [config.offsetY] set offset y
	     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop
	     *  the entire stage by dragging any portion of the stage
	     * @param {Number} [config.dragDistance]
	     * @param {Function} [config.dragBoundFunc]
	         * @example
	         * var stage = new Kinetic.Stage({
	         *   width: 500,
	         *   height: 800,
	         *   container: 'containerId'
	         * });
	         */
	        Stage: function(config) {
	            this.___init(config);
	        },

	        /**
	         * BaseLayer constructor. 
	         * @constructor
	         * @memberof Kinetic
	         * @augments Kinetic.Container
	         * @param {Object} config
	         * @param {Boolean} [config.clearBeforeDraw] set this property to false if you don't want
	         * to clear the canvas before each layer draw.  The default value is true.
	         * @param {Number} [config.x]
	     * @param {Number} [config.y]
	     * @param {Number} [config.width]
	     * @param {Number} [config.height]
	     * @param {Boolean} [config.visible]
	     * @param {Boolean} [config.listening] whether or not the node is listening for events
	     * @param {String} [config.id] unique id
	     * @param {String} [config.name] non-unique name
	     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1
	     * @param {Object} [config.scale] set scale
	     * @param {Number} [config.scaleX] set scale x
	     * @param {Number} [config.scaleY] set scale y
	     * @param {Number} [config.rotation] rotation in degrees
	     * @param {Object} [config.offset] offset from center point and rotation point
	     * @param {Number} [config.offsetX] set offset x
	     * @param {Number} [config.offsetY] set offset y
	     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop
	     *  the entire stage by dragging any portion of the stage
	     * @param {Number} [config.dragDistance]
	     * @param {Function} [config.dragBoundFunc]
	         * * @param {Object} [config.clip] set clip
	     * @param {Number} [config.clipX] set clip x
	     * @param {Number} [config.clipY] set clip y
	     * @param {Number} [config.clipWidth] set clip width
	     * @param {Number} [config.clipHeight] set clip height

	         * @example
	         * var layer = new Kinetic.Layer();
	         */
	        BaseLayer: function(config) {
	            this.___init(config);
	        },

	        /**
	         * Layer constructor.  Layers are tied to their own canvas element and are used
	         * to contain groups or shapes.
	         * @constructor
	         * @memberof Kinetic
	         * @augments Kinetic.BaseLayer
	         * @param {Object} config
	         * @param {Boolean} [config.clearBeforeDraw] set this property to false if you don't want
	         * to clear the canvas before each layer draw.  The default value is true.
	         * @param {Number} [config.x]
	     * @param {Number} [config.y]
	     * @param {Number} [config.width]
	     * @param {Number} [config.height]
	     * @param {Boolean} [config.visible]
	     * @param {Boolean} [config.listening] whether or not the node is listening for events
	     * @param {String} [config.id] unique id
	     * @param {String} [config.name] non-unique name
	     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1
	     * @param {Object} [config.scale] set scale
	     * @param {Number} [config.scaleX] set scale x
	     * @param {Number} [config.scaleY] set scale y
	     * @param {Number} [config.rotation] rotation in degrees
	     * @param {Object} [config.offset] offset from center point and rotation point
	     * @param {Number} [config.offsetX] set offset x
	     * @param {Number} [config.offsetY] set offset y
	     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop
	     *  the entire stage by dragging any portion of the stage
	     * @param {Number} [config.dragDistance]
	     * @param {Function} [config.dragBoundFunc]
	         * * @param {Object} [config.clip] set clip
	     * @param {Number} [config.clipX] set clip x
	     * @param {Number} [config.clipY] set clip y
	     * @param {Number} [config.clipWidth] set clip width
	     * @param {Number} [config.clipHeight] set clip height

	         * @example
	         * var layer = new Kinetic.Layer();
	         */
	        Layer: function(config) {
	            this.____init(config);
	        },

	        /**
	         * FastLayer constructor. Layers are tied to their own canvas element and are used
	         * to contain shapes only.  If you don't need node nesting, mouse and touch interactions,
	         * or event pub/sub, you should use FastLayer instead of Layer to create your layers.
	         * It renders about 2x faster than normal layers.
	         * @constructor
	         * @memberof Kinetic
	         * @augments Kinetic.BaseLayer
	         * @param {Object} config
	         * @param {Boolean} [config.clearBeforeDraw] set this property to false if you don't want
	         * to clear the canvas before each layer draw.  The default value is true.
	         * @param {Boolean} [config.visible]
	         * @param {String} [config.id] unique id
	         * @param {String} [config.name] non-unique name
	         * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1
	         * * @param {Object} [config.clip] set clip
	     * @param {Number} [config.clipX] set clip x
	     * @param {Number} [config.clipY] set clip y
	     * @param {Number} [config.clipWidth] set clip width
	     * @param {Number} [config.clipHeight] set clip height

	         * @example
	         * var layer = new Kinetic.FastLayer();
	         */
	        FastLayer: function(config) {
	            this.____init(config);
	        },

	        /**
	         * Group constructor.  Groups are used to contain shapes or other groups.
	         * @constructor
	         * @memberof Kinetic
	         * @augments Kinetic.Container
	         * @param {Object} config
	         * @param {Number} [config.x]
	     * @param {Number} [config.y]
	     * @param {Number} [config.width]
	     * @param {Number} [config.height]
	     * @param {Boolean} [config.visible]
	     * @param {Boolean} [config.listening] whether or not the node is listening for events
	     * @param {String} [config.id] unique id
	     * @param {String} [config.name] non-unique name
	     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1
	     * @param {Object} [config.scale] set scale
	     * @param {Number} [config.scaleX] set scale x
	     * @param {Number} [config.scaleY] set scale y
	     * @param {Number} [config.rotation] rotation in degrees
	     * @param {Object} [config.offset] offset from center point and rotation point
	     * @param {Number} [config.offsetX] set offset x
	     * @param {Number} [config.offsetY] set offset y
	     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop
	     *  the entire stage by dragging any portion of the stage
	     * @param {Number} [config.dragDistance]
	     * @param {Function} [config.dragBoundFunc]
	         * * @param {Object} [config.clip] set clip
	     * @param {Number} [config.clipX] set clip x
	     * @param {Number} [config.clipY] set clip y
	     * @param {Number} [config.clipWidth] set clip width
	     * @param {Number} [config.clipHeight] set clip height

	         * @example
	         * var group = new Kinetic.Group();
	         */
	        Group: function(config) {
	            this.___init(config);
	        },

	        /**
	         * returns whether or not drag and drop is currently active
	         * @method
	         * @memberof Kinetic
	         */
	        isDragging: function() {
	            var dd = Kinetic.DD;

	            // if DD is not included with the build, then
	            // drag and drop is not even possible
	            if (dd) {
	                return dd.isDragging;
	            } else {
	                return false;
	            }
	        },
	        /**
	        * returns whether or not a drag and drop operation is ready, but may
	        *  not necessarily have started
	        * @method
	        * @memberof Kinetic
	        */
	        isDragReady: function() {
	            var dd = Kinetic.DD;

	            // if DD is not included with the build, then
	            // drag and drop is not even possible
	            if (dd) {
	                return !!dd.node;
	            } else {
	                return false;
	            }
	        },
	        _addId: function(node, id) {
	            if(id !== undefined) {
	                this.ids[id] = node;
	            }
	        },
	        _removeId: function(id) {
	            if(id !== undefined) {
	                delete this.ids[id];
	            }
	        },
	        _addName: function(node, name) {
	            if(name !== undefined) {

	                var names = name.split(/\s/g);
	                for(var n = 0; n < names.length; n++) {
	                    var subname = names[n];
	                    if (subname) {
	                        if(this.names[subname] === undefined) {
	                            this.names[subname] = [];
	                        }
	                        this.names[subname].push(node);
	                    }
	                }
	            }
	        },
	        _removeName: function(name, _id) {
	            if(name !== undefined) {
	                var nodes = this.names[name];
	                if(nodes !== undefined) {
	                    for(var n = 0; n < nodes.length; n++) {
	                        var no = nodes[n];
	                        if(no._id === _id) {
	                            nodes.splice(n, 1);
	                        }
	                    }
	                    if(nodes.length === 0) {
	                        delete this.names[name];
	                    }
	                }
	            }
	        },
	        getAngle: function(angle) {
	            return this.angleDeg ? angle * PI_OVER_180 : angle;
	        },
	        _parseUA: function(userAgent) {
	            var ua = userAgent.toLowerCase(),
	                // jQuery UA regex
	                match = /(chrome)[ \/]([\w.]+)/.exec( ua ) ||
	                /(webkit)[ \/]([\w.]+)/.exec( ua ) ||
	                /(opera)(?:.*version|)[ \/]([\w.]+)/.exec( ua ) ||
	                /(msie) ([\w.]+)/.exec( ua ) ||
	                ua.indexOf('compatible') < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec( ua ) ||
	                [],

	                // adding mobile flag as well
	                mobile = !!(userAgent.match(/Android|BlackBerry|iPhone|iPad|iPod|Opera Mini|IEMobile/i)),
	                ieMobile = !!(userAgent.match(/IEMobile/i));
	                
	            return {
	                browser: match[ 1 ] || '',
	                version: match[ 2 ] || '0',

	                // adding mobile flab
	                mobile: mobile,
	                ieMobile: ieMobile  // If this is true (i.e., WP8), then Kinetic touch events are executed instead of equivalent Kinetic mouse events
	            };
	        },
	        // user agent  
	        UA: undefined
	    };

	    Kinetic.UA = Kinetic._parseUA((root.navigator && root.navigator.userAgent) || '');
	    
	})(this);

	// Uses Node, AMD or browser globals to create a module.

	// If you want something that will work in other stricter CommonJS environments,
	// or if you need to create a circular dependency, see commonJsStrict.js

	// Defines a module "returnExports" that depends another module called "b".
	// Note that the name of the module is implied by the file name. It is best
	// if the file name and the exported global have matching names.

	// If the 'b' module also uses this type of boilerplate, then
	// in the browser, it will create a global .b that is used below.

	// If you do not want to support the browser global path, then you
	// can remove the `root` use and the passing `this` as the first arg to
	// the top function.

	// if the module has no dependencies, the above pattern can be simplified to
	( function(root, factory) {
	    if( true) {
	        var KineticJS = factory();
	        // runtime-check for browserify
	        if(global.window === global) {
	            Kinetic.document = global.document;
	            Kinetic.window = global;
	        } else {
	            // Node. Does not work with strict CommonJS, but
	            // only CommonJS-like enviroments that support module.exports,
	            // like Node.
	            var Canvas = __webpack_require__(510);
	            var jsdom = __webpack_require__(511).jsdom;

	            Kinetic.document = jsdom('<!DOCTYPE html><html><head></head><body></body></html>');
	            Kinetic.window = Kinetic.document.createWindow();
	            Kinetic.window.Image = Canvas.Image;
	            Kinetic._nodeCanvas = Canvas;
	        }

	        Kinetic.root = root;
	        module.exports = KineticJS;
	        return;
	    }
	    else if( typeof define === 'function' && define.amd) {
	        // AMD. Register as an anonymous module.
	        define(factory);
	    }
	    Kinetic.document = document;
	    Kinetic.window = window;
	    Kinetic.root = root;

	}(this, function() {

	    // Just return a value to define the module export.
	    // This example returns an object, but the module
	    // can return a function as the exported value.
	    return Kinetic;
	}));
	;(function() {
	    /**
	     * Collection constructor.  Collection extends
	     *  Array.  This class is used in conjunction with {@link Kinetic.Container#get}
	     * @constructor
	     * @memberof Kinetic
	     */
	    Kinetic.Collection = function() {
	        var args = [].slice.call(arguments), length = args.length, i = 0;

	        this.length = length;
	        for(; i < length; i++) {
	            this[i] = args[i];
	        }
	        return this;
	    };
	    Kinetic.Collection.prototype = [];
	    /**
	     * iterate through node array and run a function for each node.
	     *  The node and index is passed into the function
	     * @method
	     * @memberof Kinetic.Collection.prototype
	     * @param {Function} func
	     * @example
	     * // get all nodes with name foo inside layer, and set x to 10 for each
	     * layer.get('.foo').each(function(shape, n) {
	     *   shape.setX(10);
	     * });
	     */
	    Kinetic.Collection.prototype.each = function(func) {
	        for(var n = 0; n < this.length; n++) {
	            func(this[n], n);
	        }
	    };
	    /**
	     * convert collection into an array
	     * @method
	     * @memberof Kinetic.Collection.prototype
	     */
	    Kinetic.Collection.prototype.toArray = function() {
	        var arr = [],
	            len = this.length,
	            n;

	        for(n = 0; n < len; n++) {
	            arr.push(this[n]);
	        }
	        return arr;
	    };
	    /**
	     * convert array into a collection
	     * @method
	     * @memberof Kinetic.Collection
	     * @param {Array} arr
	     */
	    Kinetic.Collection.toCollection = function(arr) {
	        var collection = new Kinetic.Collection(),
	            len = arr.length,
	            n;

	        for(n = 0; n < len; n++) {
	            collection.push(arr[n]);
	        }
	        return collection;
	    };

	    // map one method by it's name
	    Kinetic.Collection._mapMethod = function(methodName) {
	        Kinetic.Collection.prototype[methodName] = function() {
	            var len = this.length,
	                i;

	            var args = [].slice.call(arguments);
	            for(i = 0; i < len; i++) {
	                this[i][methodName].apply(this[i], args);
	            }

	            return this;
	        };
	    };

	    Kinetic.Collection.mapMethods = function(constructor) {
	        var prot = constructor.prototype;
	        for(var methodName in prot) {
	            Kinetic.Collection._mapMethod(methodName);
	        }
	    };

	    /*
	    * Last updated November 2011
	    * By Simon Sarris
	    * www.simonsarris.com
	    * sarris@acm.org
	    *
	    * Free to use and distribute at will
	    * So long as you are nice to people, etc
	    */

	    /*
	    * The usage of this class was inspired by some of the work done by a forked
	    * project, KineticJS-Ext by Wappworks, which is based on Simon's Transform
	    * class.  Modified by Eric Rowell
	    */

	    /**
	     * Transform constructor
	     * @constructor
	     * @param {Array} [m] Optional six-element matrix
	     * @memberof Kinetic
	     */
	    Kinetic.Transform = function(m) {
	        this.m = (m && m.slice()) || [1, 0, 0, 1, 0, 0];
	    };

	    Kinetic.Transform.prototype = {
	        /**
	         * Copy Kinetic.Transform object
	         * @method
	         * @memberof Kinetic.Transform.prototype
	         * @returns {Kinetic.Transform}
	         */
	        copy: function() {
	            return new Kinetic.Transform(this.m);
	        },
	        /**
	         * Transform point
	         * @method
	         * @memberof Kinetic.Transform.prototype
	         * @param {Object} point 2D point(x, y)
	         * @returns {Object} 2D point(x, y)
	         */
	        point: function(point) {
	            var m = this.m;
	            return {
	                x: m[0] * point.x + m[2] * point.y + m[4],
	                y: m[1] * point.x + m[3] * point.y + m[5]
	            };
	        },
	        /**
	         * Apply translation
	         * @method
	         * @memberof Kinetic.Transform.prototype
	         * @param {Number} x
	         * @param {Number} y
	         * @returns {Kinetic.Transform}
	         */
	        translate: function(x, y) {
	            this.m[4] += this.m[0] * x + this.m[2] * y;
	            this.m[5] += this.m[1] * x + this.m[3] * y;
	            return this;
	        },
	        /**
	         * Apply scale
	         * @method
	         * @memberof Kinetic.Transform.prototype
	         * @param {Number} sx
	         * @param {Number} sy
	         * @returns {Kinetic.Transform}
	         */
	        scale: function(sx, sy) {
	            this.m[0] *= sx;
	            this.m[1] *= sx;
	            this.m[2] *= sy;
	            this.m[3] *= sy;
	            return this;
	        },
	        /**
	         * Apply rotation
	         * @method
	         * @memberof Kinetic.Transform.prototype
	         * @param {Number} rad  Angle in radians
	         * @returns {Kinetic.Transform}
	         */
	        rotate: function(rad) {
	            var c = Math.cos(rad);
	            var s = Math.sin(rad);
	            var m11 = this.m[0] * c + this.m[2] * s;
	            var m12 = this.m[1] * c + this.m[3] * s;
	            var m21 = this.m[0] * -s + this.m[2] * c;
	            var m22 = this.m[1] * -s + this.m[3] * c;
	            this.m[0] = m11;
	            this.m[1] = m12;
	            this.m[2] = m21;
	            this.m[3] = m22;
	            return this;
	        },
	        /**
	         * Returns the translation
	         * @method
	         * @memberof Kinetic.Transform.prototype
	         * @returns {Object} 2D point(x, y)
	         */
	        getTranslation: function() {
	            return {
	                x: this.m[4],
	                y: this.m[5]
	            };
	        },
	        /**
	         * Apply skew
	         * @method
	         * @memberof Kinetic.Transform.prototype
	         * @param {Number} sx
	         * @param {Number} sy
	         * @returns {Kinetic.Transform}
	         */
	        skew: function(sx, sy) {
	            var m11 = this.m[0] + this.m[2] * sy;
	            var m12 = this.m[1] + this.m[3] * sy;
	            var m21 = this.m[2] + this.m[0] * sx;
	            var m22 = this.m[3] + this.m[1] * sx;
	            this.m[0] = m11;
	            this.m[1] = m12;
	            this.m[2] = m21;
	            this.m[3] = m22;
	            return this;
	         },
	        /**
	         * Transform multiplication
	         * @method
	         * @memberof Kinetic.Transform.prototype
	         * @param {Kinetic.Transform} matrix
	         * @returns {Kinetic.Transform}
	         */
	        multiply: function(matrix) {
	            var m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];
	            var m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];

	            var m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];
	            var m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];

	            var dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];
	            var dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];

	            this.m[0] = m11;
	            this.m[1] = m12;
	            this.m[2] = m21;
	            this.m[3] = m22;
	            this.m[4] = dx;
	            this.m[5] = dy;
	            return this;
	        },
	        /**
	         * Invert the matrix
	         * @method
	         * @memberof Kinetic.Transform.prototype
	         * @returns {Kinetic.Transform}
	         */
	        invert: function() {
	            var d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);
	            var m0 = this.m[3] * d;
	            var m1 = -this.m[1] * d;
	            var m2 = -this.m[2] * d;
	            var m3 = this.m[0] * d;
	            var m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);
	            var m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);
	            this.m[0] = m0;
	            this.m[1] = m1;
	            this.m[2] = m2;
	            this.m[3] = m3;
	            this.m[4] = m4;
	            this.m[5] = m5;
	            return this;
	        },
	        /**
	         * return matrix
	         * @method
	         * @memberof Kinetic.Transform.prototype
	         */
	        getMatrix: function() {
	            return this.m;
	        },
	        /**
	         * set to absolute position via translation
	         * @method
	         * @memberof Kinetic.Transform.prototype
	         * @returns {Kinetic.Transform}
	         * @author ericdrowell
	         */
	        setAbsolutePosition: function(x, y) {
	            var m0 = this.m[0],
	                m1 = this.m[1],
	                m2 = this.m[2],
	                m3 = this.m[3],
	                m4 = this.m[4],
	                m5 = this.m[5],
	                yt = ((m0 * (y - m5)) - (m1 * (x - m4))) / ((m0 * m3) - (m1 * m2)),
	                xt = (x - m4 - (m2 * yt)) / m0;

	            return this.translate(xt, yt);
	        }
	    };

	    // CONSTANTS
	    var CONTEXT_2D = '2d',
	        OBJECT_ARRAY = '[object Array]',
	        OBJECT_NUMBER = '[object Number]',
	        OBJECT_STRING = '[object String]',
	        PI_OVER_DEG180 = Math.PI / 180,
	        DEG180_OVER_PI = 180 / Math.PI,
	        HASH = '#',
	        EMPTY_STRING = '',
	        ZERO = '0',
	        KINETIC_WARNING = 'Kinetic warning: ',
	        KINETIC_ERROR = 'Kinetic error: ',
	        RGB_PAREN = 'rgb(',
	        COLORS = {
	            aqua: [0,255,255],
	            lime: [0,255,0],
	            silver: [192,192,192],
	            black: [0,0,0],
	            maroon: [128,0,0],
	            teal: [0,128,128],
	            blue: [0,0,255],
	            navy: [0,0,128],
	            white: [255,255,255],
	            fuchsia: [255,0,255],
	            olive:[128,128,0],
	            yellow: [255,255,0],
	            orange: [255,165,0],
	            gray: [128,128,128],
	            purple: [128,0,128],
	            green: [0,128,0],
	            red: [255,0,0],
	            pink: [255,192,203],
	            cyan: [0,255,255],
	            transparent: [255,255,255,0]
	        },

	        RGB_REGEX = /rgb\((\d{1,3}),(\d{1,3}),(\d{1,3})\)/;

	    /**
	     * @namespace Util
	     * @memberof Kinetic
	     */
	    Kinetic.Util = {
	        /*
	         * cherry-picked utilities from underscore.js
	         */
	        _isElement: function(obj) {
	            return !!(obj && obj.nodeType == 1);
	        },
	        _isFunction: function(obj) {
	            return !!(obj && obj.constructor && obj.call && obj.apply);
	        },
	        _isObject: function(obj) {
	            return (!!obj && obj.constructor == Object);
	        },
	        _isArray: function(obj) {
	            return Object.prototype.toString.call(obj) == OBJECT_ARRAY;
	        },
	        _isNumber: function(obj) {
	            return Object.prototype.toString.call(obj) == OBJECT_NUMBER;
	        },
	        _isString: function(obj) {
	            return Object.prototype.toString.call(obj) == OBJECT_STRING;
	        },
	        // Returns a function, that, when invoked, will only be triggered at most once
	        // during a given window of time. Normally, the throttled function will run
	        // as much as it can, without ever going more than once per `wait` duration;
	        // but if you'd like to disable the execution on the leading edge, pass
	        // `{leading: false}`. To disable execution on the trailing edge, ditto.
	        _throttle: function(func, wait, opts) {
	            var context, args, result;
	            var timeout = null;
	            var previous = 0;
	            var options = opts || {};
	            var later = function() {
	                previous = options.leading === false ? 0 : new Date().getTime();
	                timeout = null;
	                result = func.apply(context, args);
	                context = args = null;
	            };
	            return function() {
	                var now = new Date().getTime();
	                if (!previous && options.leading === false) {
	                    previous = now;
	                }
	                var remaining = wait - (now - previous);
	                context = this;
	                args = arguments;
	                if (remaining <= 0) {
	                  clearTimeout(timeout);
	                  timeout = null;
	                  previous = now;
	                  result = func.apply(context, args);
	                  context = args = null;
	                } else if (!timeout && options.trailing !== false) {
	                  timeout = setTimeout(later, remaining);
	                }
	                return result;
	            };
	        },
	        /*
	         * other utils
	         */
	        _hasMethods: function(obj) {
	            var names = [],
	                key;

	            for(key in obj) {
	                if(this._isFunction(obj[key])) {
	                    names.push(key);
	                }
	            }
	            return names.length > 0;
	        },
	        createCanvasElement: function() {
	            var canvas = Kinetic.document.createElement('canvas');
	            // on some environments canvas.style is readonly
	            try {
	                canvas.style = canvas.style || {};
	            } catch (e) {
	            }
	            return canvas;
	        },
	        isBrowser: function() {
	            return (typeof exports !==  'object');
	        },
	        _isInDocument: function(el) {
	            while(el = el.parentNode) {
	                if(el == Kinetic.document) {
	                    return true;
	                }
	            }
	            return false;
	        },
	        _simplifyArray: function(arr) {
	            var retArr = [],
	                len = arr.length,
	                util = Kinetic.Util,
	                n, val;

	            for (n=0; n<len; n++) {
	                val = arr[n];
	                if (util._isNumber(val)) {
	                    val = Math.round(val * 1000) / 1000;
	                }
	                else if (!util._isString(val)) {
	                    val = val.toString();
	                }

	                retArr.push(val);
	            }

	            return retArr;
	        },
	        /*
	         * arg can be an image object or image data
	         */
	        _getImage: function(arg, callback) {
	            var imageObj, canvas;

	            // if arg is null or undefined
	            if(!arg) {
	                callback(null);
	            }

	            // if arg is already an image object
	            else if(this._isElement(arg)) {
	                callback(arg);
	            }

	            // if arg is a string, then it's a data url
	            else if(this._isString(arg)) {
	                imageObj = new Kinetic.window.Image();
	                imageObj.onload = function() {
	                    callback(imageObj);
	                };
	                imageObj.src = arg;
	            }

	            //if arg is an object that contains the data property, it's an image object
	            else if(arg.data) {
	                canvas = Kinetic.Util.createCanvasElement();
	                canvas.width = arg.width;
	                canvas.height = arg.height;
	                var _context = canvas.getContext(CONTEXT_2D);
	                _context.putImageData(arg, 0, 0);
	                this._getImage(canvas.toDataURL(), callback);
	            }
	            else {
	                callback(null);
	            }
	        },
	        _getRGBAString: function(obj) {
	            var red = obj.red || 0,
	                green = obj.green || 0,
	                blue = obj.blue || 0,
	                alpha = obj.alpha || 1;

	            return [
	                'rgba(',
	                red,
	                ',',
	                green,
	                ',',
	                blue,
	                ',',
	                alpha,
	                ')'
	            ].join(EMPTY_STRING);
	        },
	        _rgbToHex: function(r, g, b) {
	            return ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);
	        },
	        _hexToRgb: function(hex) {
	            hex = hex.replace(HASH, EMPTY_STRING);
	            var bigint = parseInt(hex, 16);
	            return {
	                r: (bigint >> 16) & 255,
	                g: (bigint >> 8) & 255,
	                b: bigint & 255
	            };
	        },
	        /**
	         * return random hex color
	         * @method
	         * @memberof Kinetic.Util.prototype
	         */
	        getRandomColor: function() {
	            var randColor = (Math.random() * 0xFFFFFF << 0).toString(16);
	            while (randColor.length < 6) {
	                randColor = ZERO + randColor;
	            }
	            return HASH + randColor;
	        },
	        /**
	         * return value with default fallback
	         * @method
	         * @memberof Kinetic.Util.prototype
	         */
	        get: function(val, def) {
	            if (val === undefined) {
	                return def;
	            }
	            else {
	                return val;
	            }
	        },
	        /**
	         * get RGB components of a color
	         * @method
	         * @memberof Kinetic.Util.prototype
	         * @param {String} color
	         * @example
	         * // each of the following examples return {r:0, g:0, b:255}
	         * var rgb = Kinetic.Util.getRGB('blue');
	         * var rgb = Kinetic.Util.getRGB('#0000ff');
	         * var rgb = Kinetic.Util.getRGB('rgb(0,0,255)');
	         */
	        getRGB: function(color) {
	            var rgb;
	            // color string
	            if (color in COLORS) {
	                rgb = COLORS[color];
	                return {
	                    r: rgb[0],
	                    g: rgb[1],
	                    b: rgb[2]
	                };
	            }
	            // hex
	            else if (color[0] === HASH) {
	                return this._hexToRgb(color.substring(1));
	            }
	            // rgb string
	            else if (color.substr(0, 4) === RGB_PAREN) {
	                rgb = RGB_REGEX.exec(color.replace(/ /g,''));
	                return {
	                    r: parseInt(rgb[1], 10),
	                    g: parseInt(rgb[2], 10),
	                    b: parseInt(rgb[3], 10)
	                };
	            }
	            // default
	            else {
	                return {
	                    r: 0,
	                    g: 0,
	                    b: 0
	                };
	            }
	        },
	        // o1 takes precedence over o2
	        _merge: function(o1, o2) {
	            var retObj = this._clone(o2);
	            for(var key in o1) {
	                if(this._isObject(o1[key])) {
	                    retObj[key] = this._merge(o1[key], retObj[key]);
	                }
	                else {
	                    retObj[key] = o1[key];
	                }
	            }
	            return retObj;
	        },
	        cloneObject: function(obj) {
	            var retObj = {};
	            for(var key in obj) {
	                if(this._isObject(obj[key])) {
	                    retObj[key] = this.cloneObject(obj[key]);
	                }
	                else if (this._isArray(obj[key])) {
	                    retObj[key] = this.cloneArray(obj[key]);
	                } else {
	                    retObj[key] = obj[key];
	                }
	            }
	            return retObj;
	        },
	        cloneArray: function(arr) {
	            return arr.slice(0);
	        },
	        _degToRad: function(deg) {
	            return deg * PI_OVER_DEG180;
	        },
	        _radToDeg: function(rad) {
	            return rad * DEG180_OVER_PI;
	        },
	        _capitalize: function(str) {
	            return str.charAt(0).toUpperCase() + str.slice(1);
	        },
	        error: function(str) {
	            throw new Error(KINETIC_ERROR + str);
	        },
	        warn: function(str) {
	            /*
	             * IE9 on Windows7 64bit will throw a JS error
	             * if we don't use window.console in the conditional
	             */
	            if(Kinetic.root.console && console.warn && Kinetic.showWarnings) {
	                console.warn(KINETIC_WARNING + str);
	            }
	        },
	        extend: function(child, parent) {
	                function ctor() {
	                    this.constructor = child;
	                }
	                ctor.prototype = parent.prototype;
	                var old_proto = child.prototype;
	                child.prototype = new ctor();
	                for (var key in old_proto) {
	                    if (old_proto.hasOwnProperty(key)) {
	                        child.prototype[key] = old_proto[key];
	                    }
	                }
	                child.__super__ = parent.prototype;
	        },
	        /**
	         * adds methods to a constructor prototype
	         * @method
	         * @memberof Kinetic.Util.prototype
	         * @param {Function} constructor
	         * @param {Object} methods
	         */
	        addMethods: function(constructor, methods) {
	            var key;

	            for (key in methods) {
	                constructor.prototype[key] = methods[key];
	            }
	        },
	        _getControlPoints: function(x0, y0, x1, y1, x2, y2, t) {
	            var d01 = Math.sqrt(Math.pow(x1 - x0, 2) + Math.pow(y1 - y0, 2)),
	                d12 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2)),
	                fa = t * d01 / (d01 + d12),
	                fb = t * d12 / (d01 + d12),
	                p1x = x1 - fa * (x2 - x0),
	                p1y = y1 - fa * (y2 - y0),
	                p2x = x1 + fb * (x2 - x0),
	                p2y = y1 + fb * (y2 - y0);

	            return [p1x ,p1y, p2x, p2y];
	        },
	        _expandPoints: function(p, tension) {
	            var len = p.length,
	                allPoints = [],
	                n, cp;

	            for (n=2; n<len-2; n+=2) {
	                cp = Kinetic.Util._getControlPoints(p[n-2], p[n-1], p[n], p[n+1], p[n+2], p[n+3], tension);
	                allPoints.push(cp[0]);
	                allPoints.push(cp[1]);
	                allPoints.push(p[n]);
	                allPoints.push(p[n+1]);
	                allPoints.push(cp[2]);
	                allPoints.push(cp[3]);
	            }

	            return allPoints;
	        },
	        _removeLastLetter: function(str) {
	            return str.substring(0, str.length - 1);
	        }
	    };
	})();
	;(function() {
	    // calculate pixel ratio
	    var canvas = Kinetic.Util.createCanvasElement(),
	        context = canvas.getContext('2d'),
	        // if using a mobile device, calculate the pixel ratio.  Otherwise, just use
	        // 1.  For desktop browsers, if the user has zoom enabled, it affects the pixel ratio
	        // and causes artifacts on the canvas.  As of 02/26/2014, there doesn't seem to be a way
	        // to reliably calculate the browser zoom for modern browsers, which is why we just set
	        // the pixel ratio to 1 for desktops
	        _pixelRatio = Kinetic.UA.mobile ? (function() {
	            var devicePixelRatio = window.devicePixelRatio || 1,
	            backingStoreRatio = context.webkitBackingStorePixelRatio
	                || context.mozBackingStorePixelRatio
	                || context.msBackingStorePixelRatio
	                || context.oBackingStorePixelRatio
	                || context.backingStorePixelRatio
	                || 1;
	            return devicePixelRatio / backingStoreRatio;
	        })() : 1;

	    /**
	     * Canvas Renderer constructor
	     * @constructor
	     * @abstract
	     * @memberof Kinetic
	     * @param {Object} config
	     * @param {Number} config.width
	     * @param {Number} config.height
	     * @param {Number} config.pixelRatio KineticJS automatically handles pixel ratio adjustments in order to render crisp drawings
	     *  on all devices. Most desktops, low end tablets, and low end phones, have device pixel ratios
	     *  of 1.  Some high end tablets and phones, like iPhones and iPads (not the mini) have a device pixel ratio 
	     *  of 2.  Some Macbook Pros, and iMacs also have a device pixel ratio of 2.  Some high end Android devices have pixel 
	     *  ratios of 2 or 3.  Some browsers like Firefox allow you to configure the pixel ratio of the viewport.  Unless otherwise
	     *  specified, the pixel ratio will be defaulted to the actual device pixel ratio.  You can override the device pixel
	     *  ratio for special situations, or, if you don't want the pixel ratio to be taken into account, you can set it to 1.
	     */
	    Kinetic.Canvas = function(config) {
	        this.init(config);
	    };

	    Kinetic.Canvas.prototype = {
	        init: function(config) {
	            var conf = config || {};

	            var pixelRatio = conf.pixelRatio || Kinetic.pixelRatio || _pixelRatio;

	            this.pixelRatio = pixelRatio;
	            this._canvas = Kinetic.Util.createCanvasElement();

	            // set inline styles
	            this._canvas.style.padding = 0;
	            this._canvas.style.margin = 0;
	            this._canvas.style.border = 0;
	            this._canvas.style.background = 'transparent';
	            this._canvas.style.position = 'absolute';
	            this._canvas.style.top = 0;
	            this._canvas.style.left = 0;
	        },
	        /**
	         * get canvas context
	         * @method
	         * @memberof Kinetic.Canvas.prototype
	         * @returns {CanvasContext} context
	         */
	        getContext: function() {
	            return this.context;
	        },
	        /**
	         * get pixel ratio
	         * @method
	         * @memberof Kinetic.Canvas.prototype
	         * @returns {Number} pixel ratio
	         */
	        getPixelRatio: function() {
	            return this.pixelRatio;
	        },
	        /**
	         * get pixel ratio
	         * @method
	         * @memberof Kinetic.Canvas.prototype
	         * @param {Number} pixelRatio KineticJS automatically handles pixel ratio adustments in order to render crisp drawings 
	         *  on all devices. Most desktops, low end tablets, and low end phones, have device pixel ratios
	         *  of 1.  Some high end tablets and phones, like iPhones and iPads (not the mini) have a device pixel ratio 
	         *  of 2.  Some Macbook Pros, and iMacs also have a device pixel ratio of 2.  Some high end Android devices have pixel 
	         *  ratios of 2 or 3.  Some browsers like Firefox allow you to configure the pixel ratio of the viewport.  Unless otherwise
	         *  specificed, the pixel ratio will be defaulted to the actual device pixel ratio.  You can override the device pixel
	         *  ratio for special situations, or, if you don't want the pixel ratio to be taken into account, you can set it to 1.
	         */
	        setPixelRatio: function(pixelRatio) {
	            this.pixelRatio = pixelRatio;
	            this.setSize(this.getWidth(), this.getHeight());
	        },
	        /**
	         * set width
	         * @method
	         * @memberof Kinetic.Canvas.prototype
	         * @param {Number} width
	         */
	        setWidth: function(width) {
	            // take into account pixel ratio
	            this.width = this._canvas.width = width * this.pixelRatio;
	            this._canvas.style.width = width + 'px';
	        },
	        /**
	         * set height
	         * @method
	         * @memberof Kinetic.Canvas.prototype
	         * @param {Number} height
	         */
	        setHeight: function(height) {
	            // take into account pixel ratio
	            this.height = this._canvas.height = height * this.pixelRatio;
	            this._canvas.style.height = height + 'px';
	        },
	        /**
	         * get width
	         * @method
	         * @memberof Kinetic.Canvas.prototype
	         * @returns {Number} width
	         */
	        getWidth: function() {
	            return this.width;
	        },
	        /**
	         * get height
	         * @method
	         * @memberof Kinetic.Canvas.prototype
	         * @returns {Number} height
	         */
	        getHeight: function() {
	            return this.height;
	        },
	        /**
	         * set size
	         * @method
	         * @memberof Kinetic.Canvas.prototype
	         * @param {Number} width
	         * @param {Number} height
	         */
	        setSize: function(width, height) {
	            this.setWidth(width);
	            this.setHeight(height);
	        },
	        /**
	         * to data url
	         * @method
	         * @memberof Kinetic.Canvas.prototype
	         * @param {String} mimeType
	         * @param {Number} quality between 0 and 1 for jpg mime types
	         * @returns {String} data url string
	         */
	        toDataURL: function(mimeType, quality) {
	            try {
	                // If this call fails (due to browser bug, like in Firefox 3.6),
	                // then revert to previous no-parameter image/png behavior
	                return this._canvas.toDataURL(mimeType, quality);
	            }
	            catch(e) {
	                try {
	                    return this._canvas.toDataURL();
	                }
	                catch(err) {
	                    Kinetic.Util.warn('Unable to get data URL. ' + err.message);
	                    return '';
	                }
	            }
	        }
	    };

	    Kinetic.SceneCanvas = function(config) {
	        var conf = config || {};
	        var width = conf.width || 0,
	            height = conf.height || 0;

	        Kinetic.Canvas.call(this, conf);
	        this.context = new Kinetic.SceneContext(this);
	        this.setSize(width, height);
	    };

	    Kinetic.SceneCanvas.prototype = {
	        setWidth: function(width) {
	            var pixelRatio = this.pixelRatio,
	                _context = this.getContext()._context;

	            Kinetic.Canvas.prototype.setWidth.call(this, width);
	            _context.scale(pixelRatio, pixelRatio);
	        },
	        setHeight: function(height) {
	            var pixelRatio = this.pixelRatio,
	                _context = this.getContext()._context;

	            Kinetic.Canvas.prototype.setHeight.call(this, height);
	            _context.scale(pixelRatio, pixelRatio);
	        }
	    };
	    Kinetic.Util.extend(Kinetic.SceneCanvas, Kinetic.Canvas);

	    Kinetic.HitCanvas = function(config) {
	        var conf = config || {};
	        var width = conf.width || 0,
	            height = conf.height || 0;
	            
	        Kinetic.Canvas.call(this, conf);
	        this.context = new Kinetic.HitContext(this);
	        this.setSize(width, height);
	        this.hitCanvas = true;
	    };
	    Kinetic.Util.extend(Kinetic.HitCanvas, Kinetic.Canvas);

	})();
	;(function() {
	    var COMMA = ',',
	        OPEN_PAREN = '(',
	        CLOSE_PAREN = ')',
	        OPEN_PAREN_BRACKET = '([',
	        CLOSE_BRACKET_PAREN = '])',
	        SEMICOLON = ';',
	        DOUBLE_PAREN = '()',
	        // EMPTY_STRING = '',
	        EQUALS = '=',
	        // SET = 'set',
	        CONTEXT_METHODS = [
	            'arc',
	            'arcTo',
	            'beginPath',
	            'bezierCurveTo',
	            'clearRect',
	            'clip',
	            'closePath',
	            'createLinearGradient',
	            'createPattern',
	            'createRadialGradient',
	            'drawImage',
	            'fill',
	            'fillText',
	            'getImageData',
	            'createImageData',
	            'lineTo',
	            'moveTo',
	            'putImageData',
	            'quadraticCurveTo',
	            'rect',
	            'restore',
	            'rotate',
	            'save',
	            'scale',
	            'setLineDash',
	            'setTransform',
	            'stroke',
	            'strokeText',
	            'transform',
	            'translate'
	        ];

	    /**
	     * Canvas Context constructor
	     * @constructor
	     * @abstract
	     * @memberof Kinetic
	     */
	    Kinetic.Context = function(canvas) {
	        this.init(canvas);
	    };

	    Kinetic.Context.prototype = {
	        init: function(canvas) {
	            this.canvas = canvas;
	            this._context = canvas._canvas.getContext('2d');

	            if (Kinetic.enableTrace) {
	                this.traceArr = [];
	                this._enableTrace();
	            }
	        },
	        /**
	         * fill shape
	         * @method
	         * @memberof Kinetic.Context.prototype
	         * @param {Kinetic.Shape} shape
	         */
	        fillShape: function(shape) {
	            if(shape.getFillEnabled()) {
	                this._fill(shape);
	            }
	        },
	        /**
	         * stroke shape
	         * @method
	         * @memberof Kinetic.Context.prototype
	         * @param {Kinetic.Shape} shape
	         */
	        strokeShape: function(shape) {
	            if(shape.getStrokeEnabled()) {
	                this._stroke(shape);
	            }
	        },
	        /**
	         * fill then stroke
	         * @method
	         * @memberof Kinetic.Context.prototype
	         * @param {Kinetic.Shape} shape
	         */
	        fillStrokeShape: function(shape) {
	            var fillEnabled = shape.getFillEnabled();
	            if(fillEnabled) {
	                this._fill(shape);
	            }
	            if(shape.getStrokeEnabled()) {
	                this._stroke(shape);
	            }
	        },
	        /**
	         * get context trace if trace is enabled
	         * @method
	         * @memberof Kinetic.Context.prototype
	         * @param {Boolean} relaxed if false, return strict context trace, which includes method names, method parameters
	         *  properties, and property values.  If true, return relaxed context trace, which only returns method names and
	         *  properites.
	         * @returns {String}
	         */
	        getTrace: function(relaxed) {
	            var traceArr = this.traceArr,
	                len = traceArr.length,
	                str = '',
	                n, trace, method, args;

	            for (n=0; n<len; n++) {
	                trace = traceArr[n];
	                method = trace.method;

	                // methods
	                if (method) {
	                    args = trace.args;
	                    str += method;
	                    if (relaxed) {
	                        str += DOUBLE_PAREN;
	                    }
	                    else {
	                        if (Kinetic.Util._isArray(args[0])) {
	                            str += OPEN_PAREN_BRACKET + args.join(COMMA) + CLOSE_BRACKET_PAREN;
	                        }
	                        else {
	                            str += OPEN_PAREN + args.join(COMMA) + CLOSE_PAREN;
	                        }
	                    }
	                }
	                // properties
	                else {
	                    str += trace.property;
	                    if (!relaxed) {
	                        str += EQUALS + trace.val;
	                    }
	                }

	                str += SEMICOLON;
	            }

	            return str;
	        },
	        /**
	         * clear trace if trace is enabled
	         * @method
	         * @memberof Kinetic.Context.prototype
	         */
	        clearTrace: function() {
	            this.traceArr = [];
	        },
	        _trace: function(str) {
	            var traceArr = this.traceArr,
	                len;
	 
	            traceArr.push(str);
	            len = traceArr.length;

	            if (len >= Kinetic.traceArrMax) {
	                traceArr.shift();
	            }
	        },
	        /**
	         * reset canvas context transform
	         * @method
	         * @memberof Kinetic.Context.prototype
	         */
	        reset: function() {
	            var pixelRatio = this.getCanvas().getPixelRatio();
	            this.setTransform(1 * pixelRatio, 0, 0, 1 * pixelRatio, 0, 0);
	        },
	        /**
	         * get canvas
	         * @method
	         * @memberof Kinetic.Context.prototype
	         * @returns {Kinetic.Canvas}
	         */
	        getCanvas: function() {
	            return this.canvas;
	        },
	        /**
	         * clear canvas
	         * @method
	         * @memberof Kinetic.Context.prototype
	         * @param {Object} [bounds]
	         * @param {Number} [bounds.x]
	         * @param {Number} [bounds.y]
	         * @param {Number} [bounds.width]
	         * @param {Number} [bounds.height]
	         */
	        clear: function(bounds) {
	            var canvas = this.getCanvas();
	            
	            if (bounds) {
	                this.clearRect(bounds.x || 0, bounds.y || 0, bounds.width || 0, bounds.height || 0);
	            }
	            else {
	                this.clearRect(0, 0, canvas.getWidth(), canvas.getHeight());
	            }
	        },
	        _applyLineCap: function(shape) {
	            var lineCap = shape.getLineCap();
	            if(lineCap) {
	                this.setAttr('lineCap', lineCap);
	            }
	        },
	        _applyOpacity: function(shape) {
	            var absOpacity = shape.getAbsoluteOpacity();
	            if(absOpacity !== 1) {
	                this.setAttr('globalAlpha', absOpacity);
	            }
	        },
	        _applyLineJoin: function(shape) {
	            var lineJoin = shape.getLineJoin();
	            if(lineJoin) {
	                this.setAttr('lineJoin', lineJoin);
	            }
	        },
	        setAttr: function(attr, val) {
	            this._context[attr] = val;
	        },

	        // context pass through methods
	        arc: function() {
	            var a = arguments;
	            this._context.arc(a[0], a[1], a[2], a[3], a[4], a[5]);
	        },
	        beginPath: function() {
	            this._context.beginPath();
	        },
	        bezierCurveTo: function() {
	            var a = arguments;
	            this._context.bezierCurveTo(a[0], a[1], a[2], a[3], a[4], a[5]);
	        },
	        clearRect: function() {
	            var a = arguments;
	            this._context.clearRect(a[0], a[1], a[2], a[3]);
	        },
	        clip: function() {
	            this._context.clip();
	        },
	        closePath: function() {
	            this._context.closePath();
	        },
	        createImageData: function() {
	            var a = arguments;
	            if(a.length === 2) {
	                return this._context.createImageData(a[0], a[1]);
	            }
	            else if(a.length === 1) {
	                return this._context.createImageData(a[0]);
	            }
	        },
	        createLinearGradient: function() {
	            var a = arguments;
	            return this._context.createLinearGradient(a[0], a[1], a[2], a[3]);
	        },
	        createPattern: function() {
	            var a = arguments;
	            return this._context.createPattern(a[0], a[1]);
	        },
	        createRadialGradient: function() {
	            var a = arguments;
	            return this._context.createRadialGradient(a[0], a[1], a[2], a[3], a[4], a[5]);
	        },
	        drawImage: function() {
	            var a = arguments,
	                _context = this._context;

	            if(a.length === 3) {
	                _context.drawImage(a[0], a[1], a[2]);
	            }
	            else if(a.length === 5) {
	                _context.drawImage(a[0], a[1], a[2], a[3], a[4]);
	            }
	            else if(a.length === 9) {
	                _context.drawImage(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);
	            }
	        },
	        fill: function() {
	            this._context.fill();
	        },
	        fillText: function() {
	            var a = arguments;
	            this._context.fillText(a[0], a[1], a[2]);
	        },
	        getImageData: function() {
	            var a = arguments;
	            return this._context.getImageData(a[0], a[1], a[2], a[3]);
	        },
	        lineTo: function() {
	            var a = arguments;
	            this._context.lineTo(a[0], a[1]);
	        },
	        moveTo: function() {
	            var a = arguments;
	            this._context.moveTo(a[0], a[1]);
	        },
	        rect: function() {
	            var a = arguments;
	            this._context.rect(a[0], a[1], a[2], a[3]);
	        },
	        putImageData: function() {
	            var a = arguments;
	            this._context.putImageData(a[0], a[1], a[2]);
	        },
	        quadraticCurveTo: function() {
	            var a = arguments;
	            this._context.quadraticCurveTo(a[0], a[1], a[2], a[3]);
	        },
	        restore: function() {
	            this._context.restore();
	        },
	        rotate: function() {
	            var a = arguments;
	            this._context.rotate(a[0]);
	        },
	        save: function() {
	            this._context.save();
	        },
	        scale: function() {
	            var a = arguments;
	            this._context.scale(a[0], a[1]);
	        },
	        setLineDash: function() {
	            var a = arguments,
	                _context = this._context;

	            // works for Chrome and IE11
	            if(this._context.setLineDash) {
	                _context.setLineDash(a[0]);
	            }
	            // verified that this works in firefox
	            else if('mozDash' in _context) {
	                _context.mozDash = a[0];
	            }
	            // does not currently work for Safari
	            else if('webkitLineDash' in _context) {
	                _context.webkitLineDash = a[0];
	            }

	            // no support for IE9 and IE10
	        },
	        setTransform: function() {
	            var a = arguments;
	            this._context.setTransform(a[0], a[1], a[2], a[3], a[4], a[5]);
	        },
	        stroke: function() {
	            this._context.stroke();
	        },
	        strokeText: function() {
	            var a = arguments;
	            this._context.strokeText(a[0], a[1], a[2]);
	        },
	        transform: function() {
	            var a = arguments;
	            this._context.transform(a[0], a[1], a[2], a[3], a[4], a[5]);
	        },
	        translate: function() {
	            var a = arguments;
	            this._context.translate(a[0], a[1]);
	        },
	        _enableTrace: function() {
	            var that = this,
	                len = CONTEXT_METHODS.length,
	                _simplifyArray = Kinetic.Util._simplifyArray,
	                origSetter = this.setAttr,
	                n, args;

	            // to prevent creating scope function at each loop
	            var func = function(methodName) {
	                    var origMethod = that[methodName],
	                        ret;

	                    that[methodName] = function() {
	                        args = _simplifyArray(Array.prototype.slice.call(arguments, 0));
	                        ret = origMethod.apply(that, arguments);
	           
	                        that._trace({
	                            method: methodName,
	                            args: args
	                        });
	                 
	                        return ret;
	                    };
	            };
	            // methods
	            for (n=0; n<len; n++) {
	                func(CONTEXT_METHODS[n]);
	            }

	            // attrs
	            that.setAttr = function() {
	                origSetter.apply(that, arguments);
	                that._trace({
	                    property: arguments[0],
	                    val: arguments[1]
	                });
	            };
	        }
	    };

	    Kinetic.SceneContext = function(canvas) {
	        Kinetic.Context.call(this, canvas);
	    };

	    Kinetic.SceneContext.prototype = {
	        _fillColor: function(shape) {
	            var fill = shape.fill()
	                || Kinetic.Util._getRGBAString({
	                    red: shape.fillRed(),
	                    green: shape.fillGreen(),
	                    blue: shape.fillBlue(),
	                    alpha: shape.fillAlpha()
	                });

	            this.setAttr('fillStyle', fill);
	            shape._fillFunc(this);
	        },
	        _fillPattern: function(shape) {
	            var fillPatternImage = shape.getFillPatternImage(),
	                fillPatternX = shape.getFillPatternX(),
	                fillPatternY = shape.getFillPatternY(),
	                fillPatternScale = shape.getFillPatternScale(),
	                fillPatternRotation = Kinetic.getAngle(shape.getFillPatternRotation()),
	                fillPatternOffset = shape.getFillPatternOffset(),
	                fillPatternRepeat = shape.getFillPatternRepeat();

	            if(fillPatternX || fillPatternY) {
	                this.translate(fillPatternX || 0, fillPatternY || 0);
	            }
	            if(fillPatternRotation) {
	                this.rotate(fillPatternRotation);
	            }
	            if(fillPatternScale) {
	                this.scale(fillPatternScale.x, fillPatternScale.y);
	            }
	            if(fillPatternOffset) {
	                this.translate(-1 * fillPatternOffset.x, -1 * fillPatternOffset.y);
	            }

	            this.setAttr('fillStyle', this.createPattern(fillPatternImage, fillPatternRepeat || 'repeat'));
	            this.fill();
	        },
	        _fillLinearGradient: function(shape) {
	            var start = shape.getFillLinearGradientStartPoint(),
	                end = shape.getFillLinearGradientEndPoint(),
	                colorStops = shape.getFillLinearGradientColorStops(),
	                grd = this.createLinearGradient(start.x, start.y, end.x, end.y);

	            if (colorStops) {
	                // build color stops
	                for(var n = 0; n < colorStops.length; n += 2) {
	                    grd.addColorStop(colorStops[n], colorStops[n + 1]);
	                }
	                this.setAttr('fillStyle', grd);
	                this.fill();
	            }
	        },
	        _fillRadialGradient: function(shape) {
	            var start = shape.getFillRadialGradientStartPoint(),
	                end = shape.getFillRadialGradientEndPoint(),
	                startRadius = shape.getFillRadialGradientStartRadius(),
	                endRadius = shape.getFillRadialGradientEndRadius(),
	                colorStops = shape.getFillRadialGradientColorStops(),
	                grd = this.createRadialGradient(start.x, start.y, startRadius, end.x, end.y, endRadius);
	           
	            // build color stops
	            for(var n = 0; n < colorStops.length; n += 2) {
	                grd.addColorStop(colorStops[n], colorStops[n + 1]);
	            }
	            this.setAttr('fillStyle', grd);
	            this.fill();
	        },
	        _fill: function(shape) {
	            var hasColor = shape.fill() || shape.fillRed() || shape.fillGreen() || shape.fillBlue(),
	                hasPattern = shape.getFillPatternImage(),
	                hasLinearGradient = shape.getFillLinearGradientColorStops(),
	                hasRadialGradient = shape.getFillRadialGradientColorStops(),
	                fillPriority = shape.getFillPriority();

	            // priority fills
	            if(hasColor && fillPriority === 'color') {
	                this._fillColor(shape);
	            }
	            else if(hasPattern && fillPriority === 'pattern') {
	                this._fillPattern(shape);
	            }
	            else if(hasLinearGradient && fillPriority === 'linear-gradient') {
	                this._fillLinearGradient(shape);
	            }
	            else if(hasRadialGradient && fillPriority === 'radial-gradient') {
	                this._fillRadialGradient(shape);
	            }
	            // now just try and fill with whatever is available
	            else if(hasColor) {
	                this._fillColor(shape);
	            }
	            else if(hasPattern) {
	                this._fillPattern(shape);
	            }
	            else if(hasLinearGradient) {
	                this._fillLinearGradient(shape);
	            }
	            else if(hasRadialGradient) {
	                this._fillRadialGradient(shape);
	            }
	        },
	        _stroke: function(shape) {
	            var dash = shape.dash(),
	                strokeScaleEnabled = shape.getStrokeScaleEnabled();

	            if(shape.hasStroke()) {
	                if (!strokeScaleEnabled) {
	                    this.save();
	                    this.setTransform(1, 0, 0, 1, 0, 0);
	                }

	                this._applyLineCap(shape);
	                if(dash && shape.dashEnabled()) {
	                    this.setLineDash(dash);
	                }

	                this.setAttr('lineWidth', shape.strokeWidth());
	                this.setAttr('strokeStyle', shape.stroke()
	                    || Kinetic.Util._getRGBAString({
	                        red: shape.strokeRed(),
	                        green: shape.strokeGreen(),
	                        blue: shape.strokeBlue(),
	                        alpha: shape.strokeAlpha()
	                    }));

	                shape._strokeFunc(this);
	                
	                if (!strokeScaleEnabled) {
	                    this.restore();
	                }
	            }
	        },
	        _applyShadow: function(shape) {
	            var util = Kinetic.Util,
	                absOpacity = shape.getAbsoluteOpacity(),
	                color = util.get(shape.getShadowColor(), 'black'),
	                blur = util.get(shape.getShadowBlur(), 5),
	                shadowOpacity = util.get(shape.getShadowOpacity(), 1),
	                offset = util.get(shape.getShadowOffset(), {
	                    x: 0,
	                    y: 0
	                });

	            if(shadowOpacity) {
	                this.setAttr('globalAlpha', shadowOpacity * absOpacity);
	            }

	            this.setAttr('shadowColor', color);
	            this.setAttr('shadowBlur', blur);
	            this.setAttr('shadowOffsetX', offset.x);
	            this.setAttr('shadowOffsetY', offset.y);
	        
	        }
	    };
	    Kinetic.Util.extend(Kinetic.SceneContext, Kinetic.Context);

	    Kinetic.HitContext = function(canvas) {
	        Kinetic.Context.call(this, canvas);
	    };

	    Kinetic.HitContext.prototype = {
	        _fill: function(shape) {
	            this.save();
	            this.setAttr('fillStyle', shape.colorKey);
	            shape._fillFuncHit(this);
	            this.restore();
	        },
	        _stroke: function(shape) {
	            if(shape.hasStroke()) {
	                this._applyLineCap(shape);
	                this.setAttr('lineWidth', shape.strokeWidth());
	                this.setAttr('strokeStyle', shape.colorKey);
	                shape._strokeFuncHit(this);
	            }
	        }
	    };
	    Kinetic.Util.extend(Kinetic.HitContext, Kinetic.Context);
	})();
	;/*jshint unused:false */
	(function() {
	    // CONSTANTS
	    var GET = 'get',
	        RGB = 'RGB',
	        SET = 'set';

	    Kinetic.Factory = {
	        addGetterSetter: function(constructor, attr, def, validator, after) {
	            this.addGetter(constructor, attr, def);
	            this.addSetter(constructor, attr, validator, after);
	            this.addOverloadedGetterSetter(constructor, attr);
	        },
	        addGetter: function(constructor, attr, def) {
	            var method = GET + Kinetic.Util._capitalize(attr);

	            constructor.prototype[method] = function() {
	                var val = this.attrs[attr];
	                return val === undefined ? def : val;
	            };
	        },
	        addSetter: function(constructor, attr, validator, after) {
	            var method = SET + Kinetic.Util._capitalize(attr);

	            constructor.prototype[method] = function(val) {
	                if (validator) {
	                    val = validator.call(this, val);
	                }

	                this._setAttr(attr, val);

	                if (after) {
	                    after.call(this);
	                }

	                return this;
	            };
	        },
	        addComponentsGetterSetter: function(constructor, attr, components, validator, after) {
	            var len = components.length,
	                capitalize = Kinetic.Util._capitalize,
	                getter = GET + capitalize(attr),
	                setter = SET + capitalize(attr),
	                n, component;

	            // getter
	            constructor.prototype[getter] = function() {
	                var ret = {};

	                for (n=0; n<len; n++) {
	                    component = components[n];
	                    ret[component] = this.getAttr(attr + capitalize(component));
	                }

	                return ret;
	            };

	            // setter
	            constructor.prototype[setter] = function(val) {
	                var oldVal = this.attrs[attr],
	                    key;

	                if (validator) {
	                    val = validator.call(this, val);
	                }

	                for (key in val) {
	                    this._setAttr(attr + capitalize(key), val[key]);
	                }

	                this._fireChangeEvent(attr, oldVal, val);
	                
	                if (after) {
	                    after.call(this);
	                }

	                return this;
	            };

	            this.addOverloadedGetterSetter(constructor, attr);
	        },
	        addOverloadedGetterSetter: function(constructor, attr) {
	            var capitalizedAttr = Kinetic.Util._capitalize(attr),
	                setter = SET + capitalizedAttr,
	                getter = GET + capitalizedAttr;

	            constructor.prototype[attr] = function() {
	                // setting
	                if (arguments.length) {
	                    this[setter](arguments[0]);
	                    return this;
	                }
	                // getting
	                else {
	                    return this[getter]();
	                }
	            };
	        },
	        backCompat: function(constructor, methods) {
	            var key;

	            for (key in methods) {
	                constructor.prototype[key] = constructor.prototype[methods[key]];
	            }
	        },
	        afterSetFilter: function() {
	            this._filterUpToDate = false;
	        }
	    };

	    Kinetic.Validators = {
	        /**
	         * @return {number}
	         */
	        RGBComponent: function(val) {
	            if (val > 255) {
	                return 255;
	            } else if (val < 0) {
	                return 0;
	            } else {
	                return Math.round(val);
	            }
	        },
	        alphaComponent: function(val) {
	            if (val > 1) {
	                return 1;
	            }
	            // chrome does not honor alpha values of 0
	            else if (val < 0.0001) {
	                return 0.0001;
	            }
	            else {
	                return val;
	            }
	        }
	    };
	})();;(function() {
	    // CONSTANTS
	    var ABSOLUTE_OPACITY = 'absoluteOpacity',
	        ABSOLUTE_TRANSFORM = 'absoluteTransform',
	        CHANGE = 'Change',
	        CHILDREN = 'children',
	        DOT = '.',
	        EMPTY_STRING = '',
	        GET = 'get',
	        ID = 'id',
	        KINETIC = 'kinetic',
	        LISTENING = 'listening',
	        MOUSEENTER = 'mouseenter',
	        MOUSELEAVE = 'mouseleave',
	        NAME = 'name',
	        SET = 'set',
	        SHAPE = 'Shape',
	        SPACE = ' ',
	        STAGE = 'stage',
	        TRANSFORM = 'transform',
	        UPPER_STAGE = 'Stage',
	        VISIBLE = 'visible',
	        CLONE_BLACK_LIST = ['id'],

	        TRANSFORM_CHANGE_STR = [
	            'xChange.kinetic',
	            'yChange.kinetic',
	            'scaleXChange.kinetic',
	            'scaleYChange.kinetic',
	            'skewXChange.kinetic',
	            'skewYChange.kinetic',
	            'rotationChange.kinetic',
	            'offsetXChange.kinetic',
	            'offsetYChange.kinetic',
	            'transformsEnabledChange.kinetic'
	        ].join(SPACE);


	    Kinetic.Util.addMethods(Kinetic.Node, {
	        _init: function(config) {
	            var that = this;
	            this._id = Kinetic.idCounter++;
	            this.eventListeners = {};
	            this.attrs = {};
	            this._cache = {};
	            this._filterUpToDate = false;
	            this.setAttrs(config);

	            // event bindings for cache handling
	            this.on(TRANSFORM_CHANGE_STR, function() {
	                this._clearCache(TRANSFORM);
	                that._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);
	            });
	            this.on('visibleChange.kinetic', function() {
	                that._clearSelfAndDescendantCache(VISIBLE);
	            });
	            this.on('listeningChange.kinetic', function() {
	                that._clearSelfAndDescendantCache(LISTENING);
	            });
	            this.on('opacityChange.kinetic', function() {
	                that._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);
	            });
	        },
	        _clearCache: function(attr){
	            if (attr) {
	                delete this._cache[attr];
	            }
	            else {
	                this._cache = {};
	            }
	        },
	        _getCache: function(attr, privateGetter){
	            var cache = this._cache[attr];

	            // if not cached, we need to set it using the private getter method.
	            if (cache === undefined) {
	                this._cache[attr] = privateGetter.call(this);
	            }

	            return this._cache[attr];
	        },
	        /*
	         * when the logic for a cached result depends on ancestor propagation, use this
	         * method to clear self and children cache
	         */
	        _clearSelfAndDescendantCache: function(attr) {
	            this._clearCache(attr);

	            if (this.children) {
	                this.getChildren().each(function(node) {
	                    node._clearSelfAndDescendantCache(attr);
	                });
	            }
	        },
	        /**
	        * clear cached canvas
	        * @method
	        * @memberof Kinetic.Node.prototype
	        * @returns {Kinetic.Node}
	        * @example
	        * node.clearCache();
	        */
	        clearCache: function() {
	            delete this._cache.canvas;
	            this._filterUpToDate = false;
	            return this;
	        },
	        /**
	        * cache node to improve drawing performance, apply filters, or create more accurate
	        *  hit regions
	        * @method
	        * @memberof Kinetic.Node.prototype
	        * @param {Object} config
	        * @param {Number} [config.x]
	        * @param {Number} [config.y]
	        * @param {Number} [config.width]
	        * @param {Number} [config.height]
	        * @param {Boolean} [config.drawBorder] when set to true, a red border will be drawn around the cached
	        *  region for debugging purposes
	        * @returns {Kinetic.Node}
	        * @example
	        * // cache a shape with the x,y position of the bounding box at the center and
	        * // the width and height of the bounding box equal to the width and height of
	        * // the shape obtained from shape.width() and shape.height()
	        * image.cache();
	        *
	        * // cache a node and define the bounding box position and size
	        * node.cache({
	        *   x: -30,
	        *   y: -30,
	        *   width: 100,
	        *   height: 200
	        * });
	        *
	        * // cache a node and draw a red border around the bounding box
	        * // for debugging purposes
	        * node.cache({
	        *   x: -30,
	        *   y: -30,
	        *   width: 100,
	        *   height: 200,
	        *   drawBorder: true
	        * });
	        */
	        cache: function(config) {
	            var conf = config || {},
	                x = conf.x || 0,
	                y = conf.y || 0,
	                width = conf.width || this.width(),
	                height = conf.height || this.height(),
	                drawBorder = conf.drawBorder || false;

	            if (width === 0 || height === 0) {
	                Kinetic.Util.warn('Width or height of caching configuration equals 0. Cache is ignored.');
	                return;
	            }
	            var cachedSceneCanvas = new Kinetic.SceneCanvas({
	                    pixelRatio: 1,
	                    width: width,
	                    height: height
	                }),
	                cachedFilterCanvas = new Kinetic.SceneCanvas({
	                    pixelRatio: 1,
	                    width: width,
	                    height: height
	                }),
	                cachedHitCanvas = new Kinetic.HitCanvas({
	                    width: width,
	                    height: height
	                }),
	                sceneContext = cachedSceneCanvas.getContext(),
	                hitContext = cachedHitCanvas.getContext();

	            cachedHitCanvas.isCache = true;

	            this.clearCache();
	   
	            sceneContext.save();
	            hitContext.save();

	            // this will draw a red border around the cached box for
	            // debugging purposes
	            if (drawBorder) {
	                sceneContext.save();
	                sceneContext.beginPath();
	                sceneContext.rect(0, 0, width, height);
	                sceneContext.closePath();
	                sceneContext.setAttr('strokeStyle', 'red');
	                sceneContext.setAttr('lineWidth', 5);
	                sceneContext.stroke();
	                sceneContext.restore();
	            }

	            sceneContext.translate(x * -1, y * -1);
	            hitContext.translate(x * -1, y * -1);

	            // don't need to translate canvas if shape is not added to layer
	            if (this.nodeType === 'Shape') {
	                sceneContext.translate(this.x() * -1, this.y() * -1);
	                hitContext.translate(this.x() * -1, this.y() * -1);
	            }

	            this.drawScene(cachedSceneCanvas, this);
	            this.drawHit(cachedHitCanvas, this);

	            sceneContext.restore();
	            hitContext.restore();

	            this._cache.canvas = {
	                scene: cachedSceneCanvas,
	                filter: cachedFilterCanvas,
	                hit: cachedHitCanvas
	            };

	            return this;
	        },
	        _drawCachedSceneCanvas: function(context) {
	            context.save();
	            this.getLayer()._applyTransform(this, context);
	            context._applyOpacity(this);
	            context.drawImage(this._getCachedSceneCanvas()._canvas, 0, 0);
	            context.restore();
	        },
	        _getCachedSceneCanvas: function() {
	            var filters = this.filters(),
	                cachedCanvas = this._cache.canvas,
	                sceneCanvas = cachedCanvas.scene,
	                filterCanvas = cachedCanvas.filter,
	                filterContext = filterCanvas.getContext(),
	                len, imageData, n, filter;

	            if (filters) {
	                if (!this._filterUpToDate) {
	                    try {
	                        len = filters.length;
	                        filterContext.clear();
	                        // copy cached canvas onto filter context
	                        filterContext.drawImage(sceneCanvas._canvas, 0, 0);
	                        imageData = filterContext.getImageData(0, 0, filterCanvas.getWidth(), filterCanvas.getHeight());

	                        // apply filters to filter context
	                        for (n=0; n<len; n++) {
	                            filter = filters[n];
	                            filter.call(this, imageData);
	                            filterContext.putImageData(imageData, 0, 0);
	                        }
	                    }
	                    catch(e) {
	                        Kinetic.Util.warn('Unable to apply filter. ' + e.message);
	                    }

	                    this._filterUpToDate = true;
	                }

	                return filterCanvas;
	            }
	            else {
	                return sceneCanvas;
	            }
	        },
	        _drawCachedHitCanvas: function(context) {
	            var cachedCanvas = this._cache.canvas,
	                hitCanvas = cachedCanvas.hit;

	            context.save();
	            this.getLayer()._applyTransform(this, context);
	            context.drawImage(hitCanvas._canvas, 0, 0);
	            context.restore();
	        },
	        /**
	         * bind events to the node. KineticJS supports mouseover, mousemove,
	         *  mouseout, mouseenter, mouseleave, mousedown, mouseup, mousewheel, click, dblclick, touchstart, touchmove,
	         *  touchend, tap, dbltap, dragstart, dragmove, and dragend events. The Kinetic Stage supports
	         *  contentMouseover, contentMousemove, contentMouseout, contentMousedown, contentMouseup,
	         *  contentClick, contentDblclick, contentTouchstart, contentTouchmove, contentTouchend, contentTap,
	         *  and contentDblTap.  Pass in a string of events delimmited by a space to bind multiple events at once
	         *  such as 'mousedown mouseup mousemove'. Include a namespace to bind an
	         *  event by name such as 'click.foobar'.
	         * @method
	         * @memberof Kinetic.Node.prototype
	         * @param {String} evtStr e.g. 'click', 'mousedown touchstart', 'mousedown.foo touchstart.foo'
	         * @param {Function} handler The handler function is passed an event object
	         * @returns {Kinetic.Node}
	         * @example
	         * // add click listener
	         * node.on('click', function() {
	         *   console.log('you clicked me!');
	         * });
	         *
	         * // get the target node
	         * node.on('click', function(evt) {
	         *   console.log(evt.target);
	         * });
	         *
	         * // stop event propagation
	         * node.on('click', function(evt) {
	         *   evt.cancelBubble = true;
	         * });
	         *
	         * // bind multiple listeners
	         * node.on('click touchstart', function() {
	         *   console.log('you clicked/touched me!');
	         * });
	         *
	         * // namespace listener
	         * node.on('click.foo', function() {
	         *   console.log('you clicked/touched me!');
	         * });
	         *
	         * // get the event type
	         * node.on('click tap', function(evt) {
	         *   var eventType = evt.type;
	         * });
	         *
	         * // get native event object
	         * node.on('click tap', function(evt) {
	         *   var nativeEvent = evt.evt;
	         * });
	         *
	         * // for change events, get the old and new val
	         * node.on('xChange', function(evt) {
	         *   var oldVal = evt.oldVal;
	         *   var newVal = evt.newVal;
	         * });
	         */
	        on: function(evtStr, handler) {
	            var events = evtStr.split(SPACE),
	                len = events.length,
	                n, event, parts, baseEvent, name;

	             /*
	             * loop through types and attach event listeners to
	             * each one.  eg. 'click mouseover.namespace mouseout'
	             * will create three event bindings
	             */
	            for(n = 0; n < len; n++) {
	                event = events[n];
	                parts = event.split(DOT);
	                baseEvent = parts[0];
	                name = parts[1] || EMPTY_STRING;

	                // create events array if it doesn't exist
	                if(!this.eventListeners[baseEvent]) {
	                    this.eventListeners[baseEvent] = [];
	                }

	                this.eventListeners[baseEvent].push({
	                    name: name,
	                    handler: handler
	                });
	            }

	            return this;
	        },
	        /**
	         * remove event bindings from the node. Pass in a string of
	         *  event types delimmited by a space to remove multiple event
	         *  bindings at once such as 'mousedown mouseup mousemove'.
	         *  include a namespace to remove an event binding by name
	         *  such as 'click.foobar'. If you only give a name like '.foobar',
	         *  all events in that namespace will be removed.
	         * @method
	         * @memberof Kinetic.Node.prototype
	         * @param {String} evtStr e.g. 'click', 'mousedown touchstart', '.foobar'
	         * @returns {Kinetic.Node}
	         * @example
	         * // remove listener
	         * node.off('click');
	         *
	         * // remove multiple listeners
	         * node.off('click touchstart');
	         *
	         * // remove listener by name
	         * node.off('click.foo');
	         */
	        off: function(evtStr) {
	            var events = (evtStr || '').split(SPACE),
	                len = events.length,
	                n, t, event, parts, baseEvent, name;

	            if (!evtStr) {
	                // remove all events
	                for(t in this.eventListeners) {
	                    this._off(t);
	                }
	            }
	            for(n = 0; n < len; n++) {
	                event = events[n];
	                parts = event.split(DOT);
	                baseEvent = parts[0];
	                name = parts[1];

	                if(baseEvent) {
	                    if(this.eventListeners[baseEvent]) {
	                        this._off(baseEvent, name);
	                    }
	                }
	                else {
	                    for(t in this.eventListeners) {
	                        this._off(t, name);
	                    }
	                }
	            }
	            return this;
	        },
	        // some event aliases for third party integration like HammerJS
	        dispatchEvent: function(evt) {
	            var e = {
	              target: this,
	              type: evt.type,
	              evt: evt
	            };
	            this.fire(evt.type, e);
	        },
	        addEventListener: function(type, handler) {
	            // we have to pass native event to handler
	            this.on(type, function(evt){
	                handler.call(this, evt.evt);
	            });
	        },
	        removeEventListener : function(type) {
	            this.off(type);
	        },
	        /**
	         * remove self from parent, but don't destroy
	         * @method
	         * @memberof Kinetic.Node.prototype
	         * @returns {Kinetic.Node}
	         * @example
	         * node.remove();
	         */
	        remove: function() {
	            var parent = this.getParent();

	            if(parent && parent.children) {
	                parent.children.splice(this.index, 1);
	                parent._setChildrenIndices();
	                delete this.parent;
	            }

	            // every cached attr that is calculated via node tree
	            // traversal must be cleared when removing a node
	            this._clearSelfAndDescendantCache(STAGE);
	            this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);
	            this._clearSelfAndDescendantCache(VISIBLE);
	            this._clearSelfAndDescendantCache(LISTENING);
	            this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);

	            return this;
	        },
	        /**
	         * remove and destroy self
	         * @method
	         * @memberof Kinetic.Node.prototype
	         * @example
	         * node.destroy();
	         */
	        destroy: function() {
	            // remove from ids and names hashes
	            Kinetic._removeId(this.getId());
	            Kinetic._removeName(this.getName(), this._id);

	            this.remove();
	        },
	        /**
	         * get attr
	         * @method
	         * @memberof Kinetic.Node.prototype
	         * @param {String} attr
	         * @returns {Integer|String|Object|Array}
	         * @example
	         * var x = node.getAttr('x');
	         */
	        getAttr: function(attr) {
	            var method = GET + Kinetic.Util._capitalize(attr);
	            if(Kinetic.Util._isFunction(this[method])) {
	                return this[method]();
	            }
	            // otherwise get directly
	            else {
	                return this.attrs[attr];
	            }
	        },
	        /**
	        * get ancestors
	        * @method
	        * @memberof Kinetic.Node.prototype
	        * @returns {Kinetic.Collection}
	        * @example
	        * shape.getAncestors().each(function(node) {
	        *   console.log(node.getId());
	        * })
	        */
	        getAncestors: function() {
	            var parent = this.getParent(),
	                ancestors = new Kinetic.Collection();

	            while (parent) {
	                ancestors.push(parent);
	                parent = parent.getParent();
	            }

	            return ancestors;
	        },
	        /**
	         * get attrs object literal
	         * @method
	         * @memberof Kinetic.Node.prototype
	         * @returns {Object}
	         */
	        getAttrs: function() {
	            return this.attrs || {};
	        },
	        /**
	         * set multiple attrs at once using an object literal
	         * @method
	         * @memberof Kinetic.Node.prototype
	         * @param {Object} config object containing key value pairs
	         * @returns {Kinetic.Node}
	         * @example
	         * node.setAttrs({
	         *   x: 5,
	         *   fill: 'red'
	         * });
	         */
	        setAttrs: function(config) {
	            var key, method;

	            if(config) {
	                for(key in config) {
	                    if (key === CHILDREN || config[key] instanceof Kinetic.Node) {

	                    }
	                    else {
	                        method = SET + Kinetic.Util._capitalize(key);
	                        // use setter if available
	                        if(Kinetic.Util._isFunction(this[method])) {
	                            this[method](config[key]);
	                        }
	                        // otherwise set directly
	                        else {
	                            this._setAttr(key, config[key]);
	                        }
	                    }
	                }
	            }
	            return this;
	        },
	        /**
	         * determine if node is listening for events by taking into account ancestors.
	         *
	         * Parent    | Self      | isListening
	         * listening | listening | 
	         * ----------+-----------+------------
	         * T         | T         | T 
	         * T         | F         | F
	         * F         | T         | T 
	         * F         | F         | F
	         * ----------+-----------+------------
	         * T         | I         | T
	         * F         | I         | F
	         * I         | I         | T
	         *
	         * @method
	         * @memberof Kinetic.Node.prototype
	         * @returns {Boolean}
	         */
	        isListening: function() {
	            return this._getCache(LISTENING, this._isListening);
	        },
	        _isListening: function() {
	            var listening = this.getListening(),
	                parent = this.getParent();

	            // the following conditions are a simplification of the truth table above.
	            // please modify carefully
	            if (listening === 'inherit') {
	                if (parent) {
	                    return parent.isListening();
	                }
	                else {
	                    return true;
	                }
	            }
	            else {
	                return listening;
	            }
	        },
	        /**
	         * determine if node is visible by taking into account ancestors.
	         *
	         * Parent    | Self      | isVisible
	         * visible   | visible   | 
	         * ----------+-----------+------------
	         * T         | T         | T 
	         * T         | F         | F
	         * F         | T         | T 
	         * F         | F         | F
	         * ----------+-----------+------------
	         * T         | I         | T
	         * F         | I         | F
	         * I         | I         | T

	         * @method
	         * @memberof Kinetic.Node.prototype
	         * @returns {Boolean}
	         */
	        isVisible: function() {
	            return this._getCache(VISIBLE, this._isVisible);
	        },
	        _isVisible: function() {
	            var visible = this.getVisible(),
	                parent = this.getParent();

	            // the following conditions are a simplification of the truth table above.
	            // please modify carefully
	            if (visible === 'inherit') {
	                if (parent) {
	                    return parent.isVisible();
	                }
	                else {
	                    return true;
	                }
	            }
	            else {
	                return visible;
	            }
	        },
	        /**
	         * determine if listening is enabled by taking into account descendants.  If self or any children
	         * have _isListeningEnabled set to true, then self also has listening enabled.
	         * @method
	         * @memberof Kinetic.Node.prototype
	         * @returns {Boolean}
	         */
	        shouldDrawHit: function(canvas) {
	            var layer = this.getLayer();
	            return  (canvas && canvas.isCache) || (layer && layer.hitGraphEnabled())
	                && this.isListening() && this.isVisible();
	        },
	        /**
	         * show node
	         * @method
	         * @memberof Kinetic.Node.prototype
	         * @returns {Kinetic.Node}
	         */
	        show: function() {
	            this.setVisible(true);
	            return this;
	        },
	        /**
	         * hide node.  Hidden nodes are no longer detectable
	         * @method
	         * @memberof Kinetic.Node.prototype
	         * @returns {Kinetic.Node}
	         */
	        hide: function() {
	            this.setVisible(false);
	            return this;
	        },
	        /**
	         * get zIndex relative to the node's siblings who share the same parent
	         * @method
	         * @memberof Kinetic.Node.prototype
	         * @returns {Integer}
	         */
	        getZIndex: function() {
	            return this.index || 0;
	        },
	        /**
	         * get absolute z-index which takes into account sibling
	         *  and ancestor indices
	         * @method
	         * @memberof Kinetic.Node.prototype
	         * @returns {Integer}
	         */
	        getAbsoluteZIndex: function() {
	            var depth = this.getDepth(),
	                that = this,
	                index = 0,
	                nodes, len, n, child;

	            function addChildren(children) {
	                nodes = [];
	                len = children.length;
	                for(n = 0; n < len; n++) {
	                    child = children[n];
	                    index++;

	                    if(child.nodeType !== SHAPE) {
	                        nodes = nodes.concat(child.getChildren().toArray());
	                    }

	                    if(child._id === that._id) {
	                        n = len;
	                    }
	                }

	                if(nodes.length > 0 && nodes[0].getDepth() <= depth) {
	                    addChildren(nodes);
	                }
	            }
	            if(that.nodeType !== UPPER_STAGE) {
	                addChildren(that.getStage().getChildren());
	            }

	            return index;
	        },
	        /**
	         * get node depth in node tree.  Returns an integer.
	         *  e.g. Stage depth will always be 0.  Layers will always be 1.  Groups and Shapes will always
	         *  be >= 2
	         * @method
	         * @memberof Kinetic.Node.prototype
	         * @returns {Integer}
	         */
	        getDepth: function() {
	            var depth = 0,
	                parent = this.parent;

	            while(parent) {
	                depth++;
	                parent = parent.parent;
	            }
	            return depth;
	        },
	        setPosition: function(pos) {
	            this.setX(pos.x);
	            this.setY(pos.y);
	            return this;
	        },
	        getPosition: function() {
	            return {
	                x: this.getX(),
	                y: this.getY()
	            };
	        },
	        /**
	         * get absolute position relative to the top left corner of the stage container div
	         * @method
	         * @memberof Kinetic.Node.prototype
	         * @returns {Object}
	         */
	        getAbsolutePosition: function() {
	            var absoluteMatrix = this.getAbsoluteTransform().getMatrix(),
	                absoluteTransform = new Kinetic.Transform(),
	                offset = this.offset();

	            // clone the matrix array
	            absoluteTransform.m = absoluteMatrix.slice();
	            absoluteTransform.translate(offset.x, offset.y);

	            return absoluteTransform.getTranslation();
	        },
	        /**
	         * set absolute position
	         * @method
	         * @memberof Kinetic.Node.prototype
	         * @param {Object} pos
	         * @param {Number} pos.x
	         * @param {Number} pos.y
	         * @returns {Kinetic.Node}
	         */
	        setAbsolutePosition: function(pos) {
	            var origTrans = this._clearTransform(),
	                it;

	            // don't clear translation
	            this.attrs.x = origTrans.x;
	            this.attrs.y = origTrans.y;
	            delete origTrans.x;
	            delete origTrans.y;

	            // unravel transform
	            it = this.getAbsoluteTransform();

	            it.invert();
	            it.translate(pos.x, pos.y);
	            pos = {
	                x: this.attrs.x + it.getTranslation().x,
	                y: this.attrs.y + it.getTranslation().y
	            };

	            this.setPosition({x:pos.x, y:pos.y});
	            this._setTransform(origTrans);

	            return this;
	        },
	        _setTransform: function(trans) {
	            var key;

	            for(key in trans) {
	                this.attrs[key] = trans[key];
	            }

	            this._clearCache(TRANSFORM);
	            this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);
	        },
	        _clearTransform: function() {
	            var trans = {
	                x: this.getX(),
	                y: this.getY(),
	                rotation: this.getRotation(),
	                scaleX: this.getScaleX(),
	                scaleY: this.getScaleY(),
	                offsetX: this.getOffsetX(),
	                offsetY: this.getOffsetY(),
	                skewX: this.getSkewX(),
	                skewY: this.getSkewY()
	            };

	            this.attrs.x = 0;
	            this.attrs.y = 0;
	            this.attrs.rotation = 0;
	            this.attrs.scaleX = 1;
	            this.attrs.scaleY = 1;
	            this.attrs.offsetX = 0;
	            this.attrs.offsetY = 0;
	            this.attrs.skewX = 0;
	            this.attrs.skewY = 0;

	            this._clearCache(TRANSFORM);
	            this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);

	            // return original transform
	            return trans;
	        },
	        /**
	         * move node by an amount relative to its current position
	         * @method
	         * @memberof Kinetic.Node.prototype
	         * @param {Object} change
	         * @param {Number} change.x
	         * @param {Number} change.y
	         * @returns {Kinetic.Node}
	         * @example
	         * // move node in x direction by 1px and y direction by 2px
	         * node.move({
	         *   x: 1,
	         *   y: 2)
	         * });
	         */
	        move: function(change) {
	            var changeX = change.x,
	                changeY = change.y,
	                x = this.getX(),
	                y = this.getY();

	            if(changeX !== undefined) {
	                x += changeX;
	            }

	            if(changeY !== undefined) {
	                y += changeY;
	            }

	            this.setPosition({x:x, y:y});
	            return this;
	        },
	        _eachAncestorReverse: function(func, top) {
	            var family = [],
	                parent = this.getParent(),
	                len, n;

	            // if top node is defined, and this node is top node,
	            // there's no need to build a family tree.  just execute
	            // func with this because it will be the only node
	            if (top && top._id === this._id) {
	                func(this);
	                return true;
	            }

	            family.unshift(this);

	            while(parent && (!top || parent._id !== top._id)) {
	                family.unshift(parent);
	                parent = parent.parent;
	            }

	            len = family.length;
	            for(n = 0; n < len; n++) {
	                func(family[n]);
	            }
	        },
	        /**
	         * rotate node by an amount in degrees relative to its current rotation
	         * @method
	         * @memberof Kinetic.Node.prototype
	         * @param {Number} theta
	         * @returns {Kinetic.Node}
	         */
	        rotate: function(theta) {
	            this.setRotation(this.getRotation() + theta);
	            return this;
	        },
	        /**
	         * move node to the top of its siblings
	         * @method
	         * @memberof Kinetic.Node.prototype
	         * @returns {Boolean}
	         */
	        moveToTop: function() {
	            if (!this.parent) {
	                Kinetic.Util.warn('Node has no parent. moveToTop function is ignored.');
	                return;
	            }
	            var index = this.index;
	            this.parent.children.splice(index, 1);
	            this.parent.children.push(this);
	            this.parent._setChildrenIndices();
	            return true;
	        },
	        /**
	         * move node up
	         * @method
	         * @memberof Kinetic.Node.prototype
	         * @returns {Boolean}
	         */
	        moveUp: function() {
	            if (!this.parent) {
	                Kinetic.Util.warn('Node has no parent. moveUp function is ignored.');
	                return;
	            }
	            var index = this.index,
	                len = this.parent.getChildren().length;
	            if(index < len - 1) {
	                this.parent.children.splice(index, 1);
	                this.parent.children.splice(index + 1, 0, this);
	                this.parent._setChildrenIndices();
	                return true;
	            }
	            return false;
	        },
	        /**
	         * move node down
	         * @method
	         * @memberof Kinetic.Node.prototype
	         * @returns {Boolean}
	         */
	        moveDown: function() {
	            if (!this.parent) {
	                Kinetic.Util.warn('Node has no parent. moveDown function is ignored.');
	                return;
	            }
	            var index = this.index;
	            if(index > 0) {
	                this.parent.children.splice(index, 1);
	                this.parent.children.splice(index - 1, 0, this);
	                this.parent._setChildrenIndices();
	                return true;
	            }
	            return false;
	        },
	        /**
	         * move node to the bottom of its siblings
	         * @method
	         * @memberof Kinetic.Node.prototype
	         * @returns {Boolean}
	         */
	        moveToBottom: function() {
	            if (!this.parent) {
	                Kinetic.Util.warn('Node has no parent. moveToBottom function is ignored.');
	                return;
	            }
	            var index = this.index;
	            if(index > 0) {
	                this.parent.children.splice(index, 1);
	                this.parent.children.unshift(this);
	                this.parent._setChildrenIndices();
	                return true;
	            }
	            return false;
	        },
	        /**
	         * set zIndex relative to siblings
	         * @method
	         * @memberof Kinetic.Node.prototype
	         * @param {Integer} zIndex
	         * @returns {Kinetic.Node}
	         */
	        setZIndex: function(zIndex) {
	            if (!this.parent) {
	                Kinetic.Util.warn('Node has no parent. zIndex parameter is ignored.');
	                return;
	            }
	            var index = this.index;
	            this.parent.children.splice(index, 1);
	            this.parent.children.splice(zIndex, 0, this);
	            this.parent._setChildrenIndices();
	            return this;
	        },
	        /**
	         * get absolute opacity
	         * @method
	         * @memberof Kinetic.Node.prototype
	         * @returns {Number}
	         */
	        getAbsoluteOpacity: function() {
	            return this._getCache(ABSOLUTE_OPACITY, this._getAbsoluteOpacity);
	        },
	        _getAbsoluteOpacity: function() {
	            var absOpacity = this.getOpacity();
	            if(this.getParent()) {
	                absOpacity *= this.getParent().getAbsoluteOpacity();
	            }
	            return absOpacity;
	        },
	        /**
	         * move node to another container
	         * @method
	         * @memberof Kinetic.Node.prototype
	         * @param {Container} newContainer
	         * @returns {Kinetic.Node}
	         * @example
	         * // move node from current layer into layer2
	         * node.moveTo(layer2);
	         */
	        moveTo: function(newContainer) {
	            // do nothing if new container is already parent
	            if (this.getParent() !== newContainer) {
	                this.remove();
	                newContainer.add(this);
	            }
	            return this;
	        },
	        /**
	         * convert Node into an object for serialization.  Returns an object.
	         * @method
	         * @memberof Kinetic.Node.prototype
	         * @returns {Object}
	         */
	        toObject: function() {
	            var type = Kinetic.Util,
	                obj = {},
	                attrs = this.getAttrs(),
	                key, val, getter, defaultValue;

	            obj.attrs = {};

	            // serialize only attributes that are not function, image, DOM, or objects with methods
	            for(key in attrs) {
	                val = attrs[key];
	                if (!type._isFunction(val) && !type._isElement(val) && !(type._isObject(val) && type._hasMethods(val))) {
	                    getter = this[key];
	                    // remove attr value so that we can extract the default value from the getter
	                    delete attrs[key];
	                    defaultValue = getter ? getter.call(this) : null;
	                    // restore attr value
	                    attrs[key] = val;
	                    if (defaultValue !== val) {
	                        obj.attrs[key] = val;
	                    }
	                }
	            }

	            obj.className = this.getClassName();
	            return obj;
	        },
	        /**
	         * convert Node into a JSON string.  Returns a JSON string.
	         * @method
	         * @memberof Kinetic.Node.prototype
	         * @returns {String}}
	         */
	        toJSON: function() {
	            return JSON.stringify(this.toObject());
	        },
	        /**
	         * get parent container
	         * @method
	         * @memberof Kinetic.Node.prototype
	         * @returns {Kinetic.Node}
	         */
	        getParent: function() {
	            return this.parent;
	        },
	        /**
	         * get layer ancestor
	         * @method
	         * @memberof Kinetic.Node.prototype
	         * @returns {Kinetic.Layer}
	         */
	        getLayer: function() {
	            var parent = this.getParent();
	            return parent ? parent.getLayer() : null;
	        },
	        /**
	         * get stage ancestor
	         * @method
	         * @memberof Kinetic.Node.prototype
	         * @returns {Kinetic.Stage}
	         */
	        getStage: function() {
	            return this._getCache(STAGE, this._getStage);
	        },
	        _getStage: function() {
	            var parent = this.getParent();
	            if(parent) {
	                return parent.getStage();
	            }
	            else {
	                return undefined;
	            }
	        },
	        /**
	         * fire event
	         * @method
	         * @memberof Kinetic.Node.prototype
	         * @param {String} eventType event type.  can be a regular event, like click, mouseover, or mouseout, or it can be a custom event, like myCustomEvent
	         * @param {Event} [evt] event object
	         * @param {Boolean} [bubble] setting the value to false, or leaving it undefined, will result in the event
	         *  not bubbling.  Setting the value to true will result in the event bubbling.
	         * @returns {Kinetic.Node}
	         * @example
	         * // manually fire click event
	         * node.fire('click');
	         *
	         * // fire custom event
	         * node.fire('foo');
	         *
	         * // fire custom event with custom event object
	         * node.fire('foo', {
	         *   bar: 10
	         * });
	         *
	         * // fire click event that bubbles
	         * node.fire('click', null, true);
	         */
	        fire: function(eventType, evt, bubble) {
	            // bubble
	            if (bubble) {
	                this._fireAndBubble(eventType, evt || {});
	            }
	            // no bubble
	            else {
	                this._fire(eventType, evt || {});
	            }
	            return this;
	        },
	        /**
	         * get absolute transform of the node which takes into
	         *  account its ancestor transforms
	         * @method
	         * @memberof Kinetic.Node.prototype
	         * @returns {Kinetic.Transform}
	         */
	        getAbsoluteTransform: function(top) {
	            // if using an argument, we can't cache the result.
	            if (top) {
	                return this._getAbsoluteTransform(top);
	            }
	            // if no argument, we can cache the result
	            else {
	                return this._getCache(ABSOLUTE_TRANSFORM, this._getAbsoluteTransform);
	            }
	        },
	        _getAbsoluteTransform: function(top) {
	            var at = new Kinetic.Transform(),
	                transformsEnabled, trans;

	            // start with stage and traverse downwards to self
	            this._eachAncestorReverse(function(node) {
	                transformsEnabled = node.transformsEnabled();
	                trans = node.getTransform();

	                if (transformsEnabled === 'all') {
	                    at.multiply(trans);
	                }
	                else if (transformsEnabled === 'position') {
	                    at.translate(node.x(), node.y());
	                }
	            }, top);
	            return at;
	        },
	        /**
	         * get transform of the node
	         * @method
	         * @memberof Kinetic.Node.prototype
	         * @returns {Kinetic.Transform}
	         */
	        getTransform: function() {
	            return this._getCache(TRANSFORM, this._getTransform);
	        },
	        _getTransform: function() {
	            var m = new Kinetic.Transform(),
	                x = this.getX(),
	                y = this.getY(),
	                rotation = Kinetic.getAngle(this.getRotation()),
	                scaleX = this.getScaleX(),
	                scaleY = this.getScaleY(),
	                skewX = this.getSkewX(),
	                skewY = this.getSkewY(),
	                offsetX = this.getOffsetX(),
	                offsetY = this.getOffsetY();

	            if(x !== 0 || y !== 0) {
	                m.translate(x, y);
	            }
	            if(rotation !== 0) {
	                m.rotate(rotation);
	            }
	            if(skewX !== 0 || skewY !== 0) {
	                m.skew(skewX, skewY);
	            }
	            if(scaleX !== 1 || scaleY !== 1) {
	                m.scale(scaleX, scaleY);
	            }
	            if(offsetX !== 0 || offsetY !== 0) {
	                m.translate(-1 * offsetX, -1 * offsetY);
	            }

	            return m;
	        },
	        /**
	         * clone node.  Returns a new Node instance with identical attributes.  You can also override
	         *  the node properties with an object literal, enabling you to use an existing node as a template
	         *  for another node
	         * @method
	         * @memberof Kinetic.Node.prototype
	         * @param {Object} obj override attrs
	         * @returns {Kinetic.Node}
	         * @example
	         * // simple clone
	         * var clone = node.clone();
	         *
	         * // clone a node and override the x position
	         * var clone = rect.clone({
	         *   x: 5
	         * });
	         */
	        clone: function(obj) {
	            // instantiate new node
	            var className = this.getClassName(),
	                attrs = Kinetic.Util.cloneObject(this.attrs),
	                key, allListeners, len, n, listener;
	            // filter black attrs
	            for (var i in CLONE_BLACK_LIST) {
	                var blockAttr = CLONE_BLACK_LIST[i];
	                delete attrs[blockAttr];
	            }
	            // apply attr overrides
	            for (key in obj) {
	                attrs[key] = obj[key];
	            }

	            var node = new Kinetic[className](attrs);
	            // copy over listeners
	            for(key in this.eventListeners) {
	                allListeners = this.eventListeners[key];
	                len = allListeners.length;
	                for(n = 0; n < len; n++) {
	                    listener = allListeners[n];
	                    /*
	                     * don't include kinetic namespaced listeners because
	                     *  these are generated by the constructors
	                     */
	                    if(listener.name.indexOf(KINETIC) < 0) {
	                        // if listeners array doesn't exist, then create it
	                        if(!node.eventListeners[key]) {
	                            node.eventListeners[key] = [];
	                        }
	                        node.eventListeners[key].push(listener);
	                    }
	                }
	            }
	            return node;
	        },
	        /**
	         * Creates a composite data URL. If MIME type is not
	         * specified, then "image/png" will result. For "image/jpeg", specify a quality
	         * level as quality (range 0.0 - 1.0)
	         * @method
	         * @memberof Kinetic.Node.prototype
	         * @param {Object} config
	         * @param {String} [config.mimeType] can be "image/png" or "image/jpeg".
	         *  "image/png" is the default
	         * @param {Number} [config.x] x position of canvas section
	         * @param {Number} [config.y] y position of canvas section
	         * @param {Number} [config.width] width of canvas section
	         * @param {Number} [config.height] height of canvas section
	         * @param {Number} [config.quality] jpeg quality.  If using an "image/jpeg" mimeType,
	         *  you can specify the quality from 0 to 1, where 0 is very poor quality and 1
	         *  is very high quality
	         * @returns {String}
	         */
	        toDataURL: function(config) {
	            config = config || {};

	            var mimeType = config.mimeType || null,
	                quality = config.quality || null,
	                stage = this.getStage(),
	                x = config.x || 0,
	                y = config.y || 0,
	                canvas = new Kinetic.SceneCanvas({
	                    width: config.width || this.getWidth() || (stage ? stage.getWidth() : 0),
	                    height: config.height || this.getHeight() || (stage ? stage.getHeight() : 0),
	                    pixelRatio: 1
	                }),
	                context = canvas.getContext();

	            context.save();

	            if(x || y) {
	                context.translate(-1 * x, -1 * y);
	            }

	            this.drawScene(canvas);
	            context.restore();

	            return canvas.toDataURL(mimeType, quality);
	        },
	        /**
	         * converts node into an image.  Since the toImage
	         *  method is asynchronous, a callback is required.  toImage is most commonly used
	         *  to cache complex drawings as an image so that they don't have to constantly be redrawn
	         * @method
	         * @memberof Kinetic.Node.prototype
	         * @param {Object} config
	         * @param {Function} config.callback function executed when the composite has completed
	         * @param {String} [config.mimeType] can be "image/png" or "image/jpeg".
	         *  "image/png" is the default
	         * @param {Number} [config.x] x position of canvas section
	         * @param {Number} [config.y] y position of canvas section
	         * @param {Number} [config.width] width of canvas section
	         * @param {Number} [config.height] height of canvas section
	         * @param {Number} [config.quality] jpeg quality.  If using an "image/jpeg" mimeType,
	         *  you can specify the quality from 0 to 1, where 0 is very poor quality and 1
	         *  is very high quality
	         * @example
	         * var image = node.toImage({
	         *   callback: function(img) {
	         *     // do stuff with img
	         *   }
	         * });
	         */
	        toImage: function(config) {
	            Kinetic.Util._getImage(this.toDataURL(config), function(img) {
	                config.callback(img);
	            });
	        },
	        setSize: function(size) {
	            this.setWidth(size.width);
	            this.setHeight(size.height);
	            return this;
	        },
	        getSize: function() {
	            return {
	                width: this.getWidth(),
	                height: this.getHeight()
	            };
	        },
	        getWidth: function() {
	            return this.attrs.width || 0;
	        },
	        getHeight: function() {
	            return this.attrs.height || 0;
	        },
	        /**
	         * get class name, which may return Stage, Layer, Group, or shape class names like Rect, Circle, Text, etc.
	         * @method
	         * @memberof Kinetic.Node.prototype
	         * @returns {String}
	         */
	        getClassName: function() {
	            return this.className || this.nodeType;
	        },
	        /**
	         * get the node type, which may return Stage, Layer, Group, or Node
	         * @method
	         * @memberof Kinetic.Node.prototype
	         * @returns {String}
	         */
	        getType: function() {
	            return this.nodeType;
	        },
	        getDragDistance: function() {
	            // compare with undefined because we need to track 0 value
	            if (this.attrs.dragDistance !== undefined) {
	                return this.attrs.dragDistance;
	            } else if (this.parent) {
	                return this.parent.getDragDistance();
	            } else {
	                return Kinetic.dragDistance;
	            }
	        },
	        _get: function(selector) {
	            return this.className === selector || this.nodeType === selector ? [this] : [];
	        },
	        _off: function(type, name) {
	            var evtListeners = this.eventListeners[type],
	                i, evtName;

	            for(i = 0; i < evtListeners.length; i++) {
	                evtName = evtListeners[i].name;
	                // the following two conditions must be true in order to remove a handler:
	                // 1) the current event name cannot be kinetic unless the event name is kinetic
	                //    this enables developers to force remove a kinetic specific listener for whatever reason
	                // 2) an event name is not specified, or if one is specified, it matches the current event name
	                if((evtName !== 'kinetic' || name === 'kinetic') && (!name || evtName === name)) {
	                    evtListeners.splice(i, 1);
	                    if(evtListeners.length === 0) {
	                        delete this.eventListeners[type];
	                        break;
	                    }
	                    i--;
	                }
	            }
	        },
	        _fireChangeEvent: function(attr, oldVal, newVal) {
	            this._fire(attr + CHANGE, {
	                oldVal: oldVal,
	                newVal: newVal
	            });
	        },
	        setId: function(id) {
	            var oldId = this.getId();

	            Kinetic._removeId(oldId);
	            Kinetic._addId(this, id);
	            this._setAttr(ID, id);
	            return this;
	        },
	        setName: function(name) {
	            var oldName = this.getName();

	            Kinetic._removeName(oldName, this._id);
	            Kinetic._addName(this, name);
	            this._setAttr(NAME, name);
	            return this;
	        },
	        /**
	         * set attr
	         * @method
	         * @memberof Kinetic.Node.prototype
	         * @param {String} attr
	         * @param {*} val
	         * @returns {Kinetic.Node}
	         * @example
	         * node.setAttr('x', 5);
	         */
	        setAttr: function(attr, val) {
	            var method = SET + Kinetic.Util._capitalize(attr),
	                func = this[method];

	            if(Kinetic.Util._isFunction(func)) {
	                func.call(this, val);
	            }
	            // otherwise set directly
	            else {
	                this._setAttr(attr, val);
	            }
	            return this;
	        },
	        _setAttr: function(key, val) {
	            var oldVal;
	            if(val !== undefined) {
	                oldVal = this.attrs[key];
	                this.attrs[key] = val;
	                this._fireChangeEvent(key, oldVal, val);
	            }
	        },
	        _setComponentAttr: function(key, component, val) {
	            var oldVal;
	            if(val !== undefined) {
	                oldVal = this.attrs[key];

	                if (!oldVal) {
	                    // set value to default value using getAttr
	                    this.attrs[key] = this.getAttr(key);
	                }
	                
	                this.attrs[key][component] = val;
	                this._fireChangeEvent(key, oldVal, val);
	            }
	        },
	        _fireAndBubble: function(eventType, evt, compareShape) {
	            var okayToRun = true;

	            if(evt && this.nodeType === SHAPE) {
	                evt.target = this;
	            }

	            if(eventType === MOUSEENTER && compareShape && (this._id === compareShape._id || (this.isAncestorOf && this.isAncestorOf(compareShape)))) {
	                okayToRun = false;
	            }
	            else if(eventType === MOUSELEAVE && compareShape && (this._id === compareShape._id || (this.isAncestorOf && this.isAncestorOf(compareShape)))) {
	                okayToRun = false;
	            }
	            if(okayToRun) {
	                this._fire(eventType, evt);

	                // simulate event bubbling
	                var stopBubble = (eventType === MOUSEENTER || eventType === MOUSELEAVE) && ((compareShape && compareShape.isAncestorOf && compareShape.isAncestorOf(this)) || !!(compareShape && compareShape.isAncestorOf));
	                if(evt && !evt.cancelBubble && this.parent && this.parent.isListening() && (!stopBubble)) {
	                    if(compareShape && compareShape.parent) {
	                        this._fireAndBubble.call(this.parent, eventType, evt, compareShape.parent);
	                    }
	                    else {
	                        this._fireAndBubble.call(this.parent, eventType, evt);
	                    }
	                }
	            }
	        },
	        _fire: function(eventType, evt) {
	            var events = this.eventListeners[eventType],
	                i;

	            evt.type = eventType;

	            if (events) {
	                for(i = 0; i < events.length; i++) {
	                    events[i].handler.call(this, evt);
	                }
	            }
	        },
	        /**
	         * draw both scene and hit graphs.  If the node being drawn is the stage, all of the layers will be cleared and redrawn
	         * @method
	         * @memberof Kinetic.Node.prototype
	         * @returns {Kinetic.Node}
	         */
	        draw: function() {
	            this.drawScene();
	            this.drawHit();
	            return this;
	        }
	    });

	    /**
	     * create node with JSON string.  De-serializtion does not generate custom
	     *  shape drawing functions, images, or event handlers (this would make the
	     *  serialized object huge).  If your app uses custom shapes, images, and
	     *  event handlers (it probably does), then you need to select the appropriate
	     *  shapes after loading the stage and set these properties via on(), setDrawFunc(),
	     *  and setImage() methods
	     * @method
	     * @memberof Kinetic.Node
	     * @param {String} json
	     * @param {Element} [container] optional container dom element used only if you're
	     *  creating a stage node
	     */
	    Kinetic.Node.create = function(json, container) {
	        return this._createNode(JSON.parse(json), container);
	    };
	    Kinetic.Node._createNode = function(obj, container) {
	        var className = Kinetic.Node.prototype.getClassName.call(obj),
	            children = obj.children,
	            no, len, n;

	        // if container was passed in, add it to attrs
	        if(container) {
	            obj.attrs.container = container;
	        }

	        no = new Kinetic[className](obj.attrs);
	        if(children) {
	            len = children.length;
	            for(n = 0; n < len; n++) {
	                no.add(this._createNode(children[n]));
	            }
	        }

	        return no;
	    };


	    // =========================== add getters setters ===========================

	    Kinetic.Factory.addOverloadedGetterSetter(Kinetic.Node, 'position');
	    /**
	     * get/set node position relative to parent
	     * @name position
	     * @method
	     * @memberof Kinetic.Node.prototype
	     * @param {Object} pos
	     * @param {Number} pos.x
	     * @param {Number} pos.y
	     * @returns {Object}
	     * @example
	     * // get position
	     * var position = node.position();
	     *
	     * // set position
	     * node.position({
	     *   x: 5
	     *   y: 10
	     * });
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Node, 'x', 0);

	    /**
	     * get/set x position
	     * @name x
	     * @method
	     * @memberof Kinetic.Node.prototype
	     * @param {Number} x
	     * @returns {Object}
	     * @example
	     * // get x
	     * var x = node.x();
	     *
	     * // set x
	     * node.x(5);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Node, 'y', 0);

	    /**
	     * get/set y position
	     * @name y
	     * @method
	     * @memberof Kinetic.Node.prototype
	     * @param {Number} y
	     * @returns {Integer}
	     * @example
	     * // get y
	     * var y = node.y();
	     *
	     * // set y
	     * node.y(5);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Node, 'opacity', 1);

	    /**
	     * get/set opacity.  Opacity values range from 0 to 1.
	     *  A node with an opacity of 0 is fully transparent, and a node
	     *  with an opacity of 1 is fully opaque
	     * @name opacity
	     * @method
	     * @memberof Kinetic.Node.prototype
	     * @param {Object} opacity
	     * @returns {Number}
	     * @example
	     * // get opacity
	     * var opacity = node.opacity();
	     *
	     * // set opacity
	     * node.opacity(0.5);
	     */

	    Kinetic.Factory.addGetter(Kinetic.Node, 'name');
	    Kinetic.Factory.addOverloadedGetterSetter(Kinetic.Node, 'name');

	    /**
	     * get/set name
	     * @name name
	     * @method
	     * @memberof Kinetic.Node.prototype
	     * @param {String} name
	     * @returns {String}
	     * @example
	     * // get name
	     * var name = node.name();
	     *
	     * // set name
	     * node.name('foo');
	     *
	     * // also node may have multiple names (as css classes)
	     * node.name('foo bar');
	     */

	    Kinetic.Factory.addGetter(Kinetic.Node, 'id');
	    Kinetic.Factory.addOverloadedGetterSetter(Kinetic.Node, 'id');

	    /**
	     * get/set id
	     * @name id
	     * @method
	     * @memberof Kinetic.Node.prototype
	     * @param {String} id
	     * @returns {String}
	     * @example
	     * // get id
	     * var name = node.id();
	     *
	     * // set id
	     * node.id('foo');
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Node, 'rotation', 0);

	    /**
	     * get/set rotation in degrees
	     * @name rotation
	     * @method
	     * @memberof Kinetic.Node.prototype
	     * @param {Number} rotation
	     * @returns {Number}
	     * @example
	     * // get rotation in degrees
	     * var rotation = node.rotation();
	     *
	     * // set rotation in degrees
	     * node.rotation(45);
	     */

	    Kinetic.Factory.addComponentsGetterSetter(Kinetic.Node, 'scale', ['x', 'y']);

	    /**
	     * get/set scale
	     * @name scale
	     * @param {Object} scale
	     * @param {Number} scale.x
	     * @param {Number} scale.y
	     * @method
	     * @memberof Kinetic.Node.prototype
	     * @returns {Object}
	     * @example
	     * // get scale
	     * var scale = node.scale();
	     *
	     * // set scale 
	     * shape.scale({
	     *   x: 2
	     *   y: 3
	     * });
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Node, 'scaleX', 1);

	    /**
	     * get/set scale x
	     * @name scaleX
	     * @param {Number} x
	     * @method
	     * @memberof Kinetic.Node.prototype
	     * @returns {Number}
	     * @example
	     * // get scale x
	     * var scaleX = node.scaleX();
	     *
	     * // set scale x
	     * node.scaleX(2);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Node, 'scaleY', 1);

	    /**
	     * get/set scale y
	     * @name scaleY
	     * @param {Number} y
	     * @method
	     * @memberof Kinetic.Node.prototype
	     * @returns {Number}
	     * @example
	     * // get scale y
	     * var scaleY = node.scaleY();
	     *
	     * // set scale y
	     * node.scaleY(2);
	     */

	    Kinetic.Factory.addComponentsGetterSetter(Kinetic.Node, 'skew', ['x', 'y']);

	    /**
	     * get/set skew
	     * @name skew
	     * @param {Object} skew
	     * @param {Number} skew.x
	     * @param {Number} skew.y
	     * @method
	     * @memberof Kinetic.Node.prototype
	     * @returns {Object}
	     * @example
	     * // get skew
	     * var skew = node.skew();
	     *
	     * // set skew 
	     * node.skew({
	     *   x: 20
	     *   y: 10
	     * });
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Node, 'skewX', 0);

	    /**
	     * get/set skew x
	     * @name skewX
	     * @param {Number} x
	     * @method
	     * @memberof Kinetic.Node.prototype
	     * @returns {Number}
	     * @example
	     * // get skew x
	     * var skewX = node.skewX();
	     *
	     * // set skew x
	     * node.skewX(3);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Node, 'skewY', 0);

	    /**
	     * get/set skew y
	     * @name skewY
	     * @param {Number} y
	     * @method
	     * @memberof Kinetic.Node.prototype
	     * @returns {Number}
	     * @example
	     * // get skew y
	     * var skewY = node.skewY();
	     *
	     * // set skew y
	     * node.skewY(3);
	     */

	    Kinetic.Factory.addComponentsGetterSetter(Kinetic.Node, 'offset', ['x', 'y']);

	    /**
	     * get/set offset.  Offsets the default position and rotation point
	     * @method
	     * @memberof Kinetic.Node.prototype
	     * @param {Object} offset
	     * @param {Number} offset.x
	     * @param {Number} offset.y
	     * @returns {Object}
	     * @example
	     * // get offset
	     * var offset = node.offset();
	     *
	     * // set offset
	     * node.offset({
	     *   x: 20
	     *   y: 10
	     * });
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Node, 'offsetX', 0);

	    /**
	     * get/set offset x
	     * @name offsetX
	     * @method
	     * @memberof Kinetic.Node.prototype
	     * @param {Number} x
	     * @returns {Number}
	     * @example
	     * // get offset x
	     * var offsetX = node.offsetX();
	     *
	     * // set offset x
	     * node.offsetX(3);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Node, 'offsetY', 0);

	    /**
	     * get/set offset y
	     * @name offsetY
	     * @method
	     * @memberof Kinetic.Node.prototype
	     * @param {Number} y
	     * @returns {Number}
	     * @example
	     * // get offset y
	     * var offsetY = node.offsetY();
	     *
	     * // set offset y
	     * node.offsetY(3);
	     */

	    Kinetic.Factory.addSetter(Kinetic.Node, 'dragDistance');
	    Kinetic.Factory.addOverloadedGetterSetter(Kinetic.Node, 'dragDistance');

	    /**
	     * get/set drag distance
	     * @name dragDistance
	     * @method
	     * @memberof Kinetic.Node.prototype
	     * @param {Number} distance
	     * @returns {Number}
	     * @example
	     * // get drag distance
	     * var dragDistance = node.dragDistance();
	     *
	     * // set distance
	     * // node starts dragging only if pointer moved more then 3 pixels
	     * node.dragDistance(3);
	     * // or set globally
	     * Kinetic.dragDistance = 3;
	     */


	    Kinetic.Factory.addSetter(Kinetic.Node, 'width', 0);
	    Kinetic.Factory.addOverloadedGetterSetter(Kinetic.Node, 'width');
	    /**
	     * get/set width
	     * @name width
	     * @method
	     * @memberof Kinetic.Node.prototype
	     * @param {Number} width
	     * @returns {Number}
	     * @example
	     * // get width
	     * var width = node.width();
	     *
	     * // set width
	     * node.width(100);
	     */

	    Kinetic.Factory.addSetter(Kinetic.Node, 'height', 0);
	    Kinetic.Factory.addOverloadedGetterSetter(Kinetic.Node, 'height');
	    /**
	     * get/set height
	     * @name height
	     * @method
	     * @memberof Kinetic.Node.prototype
	     * @param {Number} height
	     * @returns {Number}
	     * @example
	     * // get height
	     * var height = node.height();
	     *
	     * // set height
	     * node.height(100);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Node, 'listening', 'inherit');
	    /**
	     * get/set listenig attr.  If you need to determine if a node is listening or not
	     *   by taking into account its parents, use the isListening() method  
	     * @name listening
	     * @method
	     * @memberof Kinetic.Node.prototype
	     * @param {Boolean|String} listening Can be "inherit", true, or false.  The default is "inherit".
	     * @returns {Boolean|String}
	     * @example
	     * // get listening attr
	     * var listening = node.listening();
	     *
	     * // stop listening for events
	     * node.listening(false);
	     *
	     * // listen for events
	     * node.listening(true);
	     *
	     * // listen to events according to the parent
	     * node.listening('inherit');
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Node, 'filters', undefined, function(val) {this._filterUpToDate = false;return val;});
	    /**
	     * get/set filters.  Filters are applied to cached canvases
	     * @name filters
	     * @method
	     * @memberof Kinetic.Node.prototype
	     * @param {Array} filters array of filters
	     * @returns {Array}
	     * @example
	     * // get filters
	     * var filters = node.filters();
	     *
	     * // set a single filter
	     * node.cache();
	     * node.filters([Kinetic.Filters.Blur]);
	     *
	     * // set multiple filters
	     * node.cache();
	     * node.filters([
	     *   Kinetic.Filters.Blur,
	     *   Kinetic.Filters.Sepia,
	     *   Kinetic.Filters.Invert
	     * ]);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Node, 'visible', 'inherit');
	    /**
	     * get/set visible attr.  Can be "inherit", true, or false.  The default is "inherit".
	     *   If you need to determine if a node is visible or not
	     *   by taking into account its parents, use the isVisible() method  
	     * @name visible
	     * @method
	     * @memberof Kinetic.Node.prototype
	     * @param {Boolean|String} visible
	     * @returns {Boolean|String}
	     * @example
	     * // get visible attr
	     * var visible = node.visible();
	     *
	     * // make invisible
	     * node.visible(false);
	     *
	     * // make visible
	     * node.visible(true);
	     *
	     * // make visible according to the parent
	     * node.visible('inherit');
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Node, 'transformsEnabled', 'all');

	    /**
	     * get/set transforms that are enabled.  Can be "all", "none", or "position".  The default
	     *  is "all"
	     * @name transformsEnabled
	     * @method
	     * @memberof Kinetic.Node.prototype
	     * @param {String} enabled
	     * @returns {String}
	     * @example
	     * // enable position transform only to improve draw performance
	     * node.transformsEnabled('position');
	     *
	     * // enable all transforms
	     * node.transformsEnabled('all');
	     */



	    /**
	     * get/set node size
	     * @name size
	     * @method
	     * @memberof Kinetic.Node.prototype
	     * @param {Object} size
	     * @param {Number} size.width
	     * @param {Number} size.height
	     * @returns {Object}
	     * @example
	     * // get node size
	     * var size = node.size();
	     * var x = size.x;
	     * var y = size.y;
	     *
	     * // set size
	     * node.size({
	     *   width: 100,
	     *   height: 200
	     * });
	     */
	    Kinetic.Factory.addOverloadedGetterSetter(Kinetic.Node, 'size');

	    Kinetic.Factory.backCompat(Kinetic.Node, {
	        rotateDeg: 'rotate',
	        setRotationDeg: 'setRotation',
	        getRotationDeg: 'getRotation'
	    });

	    Kinetic.Collection.mapMethods(Kinetic.Node);
	})();
	;(function() {
	    /**
	    * Grayscale Filter
	    * @function
	    * @memberof Kinetic.Filters
	    * @param {Object} imageData
	    * @example
	    * node.cache();
	    * node.filters([Kinetic.Filters.Grayscale]);
	    */
	    Kinetic.Filters.Grayscale = function(imageData) {
	        var data = imageData.data,
	            len = data.length,
	            i, brightness;

	        for(i = 0; i < len; i += 4) {
	            brightness = 0.34 * data[i] + 0.5 * data[i + 1] + 0.16 * data[i + 2];
	            // red
	            data[i] = brightness;
	            // green
	            data[i + 1] = brightness;
	            // blue
	            data[i + 2] = brightness;
	        }
	    };
	})();
	;(function() {
	    /**
	     * Brighten Filter.  
	     * @function
	     * @memberof Kinetic.Filters
	     * @param {Object} imageData
	     * @example
	     * node.cache();
	     * node.filters([Kinetic.Filters.Brighten]);
	     * node.brightness(0.8);
	     */
	    Kinetic.Filters.Brighten = function(imageData) {
	        var brightness = this.brightness() * 255,
	            data = imageData.data,
	            len = data.length,
	            i;

	        for(i = 0; i < len; i += 4) {
	            // red
	            data[i] += brightness;
	            // green
	            data[i + 1] += brightness;
	            // blue
	            data[i + 2] += brightness;
	        }
	    };

	    Kinetic.Factory.addGetterSetter(Kinetic.Node, 'brightness', 0, null, Kinetic.Factory.afterSetFilter);
	    /**
	    * get/set filter brightness.  The brightness is a number between -1 and 1.&nbsp; Positive values 
	    *  brighten the pixels and negative values darken them. Use with {@link Kinetic.Filters.Brighten} filter.
	    * @name brightness
	    * @method
	    * @memberof Kinetic.Node.prototype
	    * @param {Number} brightness value between -1 and 1
	    * @returns {Number}
	    */

	})();
	;(function() {
	    /**
	    * Invert Filter
	    * @function
	    * @memberof Kinetic.Filters
	    * @param {Object} imageData
	    * @example
	    * node.cache();
	    * node.filters([Kinetic.Filters.Invert]);
	    */
	    Kinetic.Filters.Invert = function(imageData) {
	        var data = imageData.data,
	            len = data.length,
	            i;

	        for(i = 0; i < len; i += 4) {
	            // red
	            data[i] = 255 - data[i];
	            // green
	            data[i + 1] = 255 - data[i + 1];
	            // blue
	            data[i + 2] = 255 - data[i + 2];
	        }
	    };
	})();;/*
	 the Gauss filter
	 master repo: https://github.com/pavelpower/kineticjsGaussFilter/
	*/
	(function() {
	    /*

	     StackBlur - a fast almost Gaussian Blur For Canvas

	     Version:   0.5
	     Author:    Mario Klingemann
	     Contact:   mario@quasimondo.com
	     Website:   http://www.quasimondo.com/StackBlurForCanvas
	     Twitter:   @quasimondo

	     In case you find this class useful - especially in commercial projects -
	     I am not totally unhappy for a small donation to my PayPal account
	     mario@quasimondo.de

	     Or support me on flattr:
	     https://flattr.com/thing/72791/StackBlur-a-fast-almost-Gaussian-Blur-Effect-for-CanvasJavascript

	     Copyright (c) 2010 Mario Klingemann

	     Permission is hereby granted, free of charge, to any person
	     obtaining a copy of this software and associated documentation
	     files (the "Software"), to deal in the Software without
	     restriction, including without limitation the rights to use,
	     copy, modify, merge, publish, distribute, sublicense, and/or sell
	     copies of the Software, and to permit persons to whom the
	     Software is furnished to do so, subject to the following
	     conditions:

	     The above copyright notice and this permission notice shall be
	     included in all copies or substantial portions of the Software.

	     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
	     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
	     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
	     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
	     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
	     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
	     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
	     OTHER DEALINGS IN THE SOFTWARE.
	     */

	    function BlurStack() {
	        this.r = 0;
	        this.g = 0;
	        this.b = 0;
	        this.a = 0;
	        this.next = null;
	    }

	    var mul_table = [
	        512,512,456,512,328,456,335,512,405,328,271,456,388,335,292,512,
	        454,405,364,328,298,271,496,456,420,388,360,335,312,292,273,512,
	        482,454,428,405,383,364,345,328,312,298,284,271,259,496,475,456,
	        437,420,404,388,374,360,347,335,323,312,302,292,282,273,265,512,
	        497,482,468,454,441,428,417,405,394,383,373,364,354,345,337,328,
	        320,312,305,298,291,284,278,271,265,259,507,496,485,475,465,456,
	        446,437,428,420,412,404,396,388,381,374,367,360,354,347,341,335,
	        329,323,318,312,307,302,297,292,287,282,278,273,269,265,261,512,
	        505,497,489,482,475,468,461,454,447,441,435,428,422,417,411,405,
	        399,394,389,383,378,373,368,364,359,354,350,345,341,337,332,328,
	        324,320,316,312,309,305,301,298,294,291,287,284,281,278,274,271,
	        268,265,262,259,257,507,501,496,491,485,480,475,470,465,460,456,
	        451,446,442,437,433,428,424,420,416,412,408,404,400,396,392,388,
	        385,381,377,374,370,367,363,360,357,354,350,347,344,341,338,335,
	        332,329,326,323,320,318,315,312,310,307,304,302,299,297,294,292,
	        289,287,285,282,280,278,275,273,271,269,267,265,263,261,259
	    ];

	    var shg_table = [
	        9, 11, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 17,
	        17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19,
	        19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20,
	        20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21,
	        21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	        21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22,
	        22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	        22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23,
	        23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	        23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	        23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	        23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
	        24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
	        24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
	        24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
	        24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24
	    ];

	    function filterGaussBlurRGBA( imageData, radius) {

	        var pixels = imageData.data,
	            width = imageData.width,
	            height = imageData.height;

	        var x, y, i, p, yp, yi, yw, r_sum, g_sum, b_sum, a_sum,
	            r_out_sum, g_out_sum, b_out_sum, a_out_sum,
	            r_in_sum, g_in_sum, b_in_sum, a_in_sum,
	            pr, pg, pb, pa, rbs;

	        var div = radius + radius + 1,
	            widthMinus1  = width - 1,
	            heightMinus1 = height - 1,
	            radiusPlus1  = radius + 1,
	            sumFactor = radiusPlus1 * ( radiusPlus1 + 1 ) / 2,
	            stackStart = new BlurStack(),
	            stackEnd = null,
	            stack = stackStart,
	            stackIn = null,
	            stackOut = null,
	            mul_sum = mul_table[radius],
	            shg_sum = shg_table[radius];

	        for ( i = 1; i < div; i++ ) {
	            stack = stack.next = new BlurStack();
	            if ( i == radiusPlus1 ){
	                stackEnd = stack;
	            }
	        }

	        stack.next = stackStart;

	        yw = yi = 0;

	        for ( y = 0; y < height; y++ )
	        {
	            r_in_sum = g_in_sum = b_in_sum = a_in_sum = r_sum = g_sum = b_sum = a_sum = 0;

	            r_out_sum = radiusPlus1 * ( pr = pixels[yi] );
	            g_out_sum = radiusPlus1 * ( pg = pixels[yi+1] );
	            b_out_sum = radiusPlus1 * ( pb = pixels[yi+2] );
	            a_out_sum = radiusPlus1 * ( pa = pixels[yi+3] );

	            r_sum += sumFactor * pr;
	            g_sum += sumFactor * pg;
	            b_sum += sumFactor * pb;
	            a_sum += sumFactor * pa;

	            stack = stackStart;

	            for( i = 0; i < radiusPlus1; i++ )
	            {
	                stack.r = pr;
	                stack.g = pg;
	                stack.b = pb;
	                stack.a = pa;
	                stack = stack.next;
	            }

	            for( i = 1; i < radiusPlus1; i++ )
	            {
	                p = yi + (( widthMinus1 < i ? widthMinus1 : i ) << 2 );
	                r_sum += ( stack.r = ( pr = pixels[p])) * ( rbs = radiusPlus1 - i );
	                g_sum += ( stack.g = ( pg = pixels[p+1])) * rbs;
	                b_sum += ( stack.b = ( pb = pixels[p+2])) * rbs;
	                a_sum += ( stack.a = ( pa = pixels[p+3])) * rbs;

	                r_in_sum += pr;
	                g_in_sum += pg;
	                b_in_sum += pb;
	                a_in_sum += pa;

	                stack = stack.next;
	            }


	            stackIn = stackStart;
	            stackOut = stackEnd;
	            for ( x = 0; x < width; x++ )
	            {
	                pixels[yi+3] = pa = (a_sum * mul_sum) >> shg_sum;
	                if ( pa !== 0 )
	                {
	                    pa = 255 / pa;
	                    pixels[yi]   = ((r_sum * mul_sum) >> shg_sum) * pa;
	                    pixels[yi+1] = ((g_sum * mul_sum) >> shg_sum) * pa;
	                    pixels[yi+2] = ((b_sum * mul_sum) >> shg_sum) * pa;
	                } else {
	                    pixels[yi] = pixels[yi+1] = pixels[yi+2] = 0;
	                }

	                r_sum -= r_out_sum;
	                g_sum -= g_out_sum;
	                b_sum -= b_out_sum;
	                a_sum -= a_out_sum;

	                r_out_sum -= stackIn.r;
	                g_out_sum -= stackIn.g;
	                b_out_sum -= stackIn.b;
	                a_out_sum -= stackIn.a;

	                p =  ( yw + ( ( p = x + radius + 1 ) < widthMinus1 ? p : widthMinus1 ) ) << 2;

	                r_in_sum += ( stackIn.r = pixels[p]);
	                g_in_sum += ( stackIn.g = pixels[p+1]);
	                b_in_sum += ( stackIn.b = pixels[p+2]);
	                a_in_sum += ( stackIn.a = pixels[p+3]);

	                r_sum += r_in_sum;
	                g_sum += g_in_sum;
	                b_sum += b_in_sum;
	                a_sum += a_in_sum;

	                stackIn = stackIn.next;

	                r_out_sum += ( pr = stackOut.r );
	                g_out_sum += ( pg = stackOut.g );
	                b_out_sum += ( pb = stackOut.b );
	                a_out_sum += ( pa = stackOut.a );

	                r_in_sum -= pr;
	                g_in_sum -= pg;
	                b_in_sum -= pb;
	                a_in_sum -= pa;

	                stackOut = stackOut.next;

	                yi += 4;
	            }
	            yw += width;
	        }


	        for ( x = 0; x < width; x++ )
	        {
	            g_in_sum = b_in_sum = a_in_sum = r_in_sum = g_sum = b_sum = a_sum = r_sum = 0;

	            yi = x << 2;
	            r_out_sum = radiusPlus1 * ( pr = pixels[yi]);
	            g_out_sum = radiusPlus1 * ( pg = pixels[yi+1]);
	            b_out_sum = radiusPlus1 * ( pb = pixels[yi+2]);
	            a_out_sum = radiusPlus1 * ( pa = pixels[yi+3]);

	            r_sum += sumFactor * pr;
	            g_sum += sumFactor * pg;
	            b_sum += sumFactor * pb;
	            a_sum += sumFactor * pa;

	            stack = stackStart;

	            for( i = 0; i < radiusPlus1; i++ )
	            {
	                stack.r = pr;
	                stack.g = pg;
	                stack.b = pb;
	                stack.a = pa;
	                stack = stack.next;
	            }

	            yp = width;

	            for( i = 1; i <= radius; i++ )
	            {
	                yi = ( yp + x ) << 2;

	                r_sum += ( stack.r = ( pr = pixels[yi])) * ( rbs = radiusPlus1 - i );
	                g_sum += ( stack.g = ( pg = pixels[yi+1])) * rbs;
	                b_sum += ( stack.b = ( pb = pixels[yi+2])) * rbs;
	                a_sum += ( stack.a = ( pa = pixels[yi+3])) * rbs;

	                r_in_sum += pr;
	                g_in_sum += pg;
	                b_in_sum += pb;
	                a_in_sum += pa;

	                stack = stack.next;

	                if( i < heightMinus1 )
	                {
	                    yp += width;
	                }
	            }

	            yi = x;
	            stackIn = stackStart;
	            stackOut = stackEnd;
	            for ( y = 0; y < height; y++ )
	            {
	                p = yi << 2;
	                pixels[p+3] = pa = (a_sum * mul_sum) >> shg_sum;
	                if ( pa > 0 )
	                {
	                    pa = 255 / pa;
	                    pixels[p]   = ((r_sum * mul_sum) >> shg_sum ) * pa;
	                    pixels[p+1] = ((g_sum * mul_sum) >> shg_sum ) * pa;
	                    pixels[p+2] = ((b_sum * mul_sum) >> shg_sum ) * pa;
	                } else {
	                    pixels[p] = pixels[p+1] = pixels[p+2] = 0;
	                }

	                r_sum -= r_out_sum;
	                g_sum -= g_out_sum;
	                b_sum -= b_out_sum;
	                a_sum -= a_out_sum;

	                r_out_sum -= stackIn.r;
	                g_out_sum -= stackIn.g;
	                b_out_sum -= stackIn.b;
	                a_out_sum -= stackIn.a;

	                p = ( x + (( ( p = y + radiusPlus1) < heightMinus1 ? p : heightMinus1 ) * width )) << 2;

	                r_sum += ( r_in_sum += ( stackIn.r = pixels[p]));
	                g_sum += ( g_in_sum += ( stackIn.g = pixels[p+1]));
	                b_sum += ( b_in_sum += ( stackIn.b = pixels[p+2]));
	                a_sum += ( a_in_sum += ( stackIn.a = pixels[p+3]));

	                stackIn = stackIn.next;

	                r_out_sum += ( pr = stackOut.r );
	                g_out_sum += ( pg = stackOut.g );
	                b_out_sum += ( pb = stackOut.b );
	                a_out_sum += ( pa = stackOut.a );

	                r_in_sum -= pr;
	                g_in_sum -= pg;
	                b_in_sum -= pb;
	                a_in_sum -= pa;

	                stackOut = stackOut.next;

	                yi += width;
	            }
	        }
	    }

	    /**
	     * Blur Filter
	     * @function
	     * @name Blur
	     * @memberof Kinetic.Filters
	     * @param {Object} imageData
	     * @example
	     * node.cache();
	     * node.filters([Kinetic.Filters.Blur]);
	     * node.blurRadius(10);
	     */
	    Kinetic.Filters.Blur = function Blur(imageData) {
	        var radius = Math.round(this.blurRadius());

	        if (radius > 0) {
	            filterGaussBlurRGBA(imageData, radius);
	        }
	    };

	    Kinetic.Factory.addGetterSetter(Kinetic.Node, 'blurRadius', 0, null, Kinetic.Factory.afterSetFilter);

	    /**
	    * get/set blur radius. Use with {@link Kinetic.Filters.Blur} filter
	    * @name blurRadius
	    * @method
	    * @memberof Kinetic.Node.prototype
	    * @param {Integer} radius
	    * @returns {Integer}
	    */
	})();;(function() {

		function pixelAt(idata, x, y) {
			var idx = (y * idata.width + x) * 4;
			var d = [];
			d.push(idata.data[idx++], idata.data[idx++], idata.data[idx++], idata.data[idx++]);
			return d;
		}

		function rgbDistance(p1, p2) {
			return Math.sqrt(Math.pow(p1[0] - p2[0], 2) + Math.pow(p1[1] - p2[1], 2) + Math.pow(p1[2] - p2[2], 2));
		}

		function rgbMean(pTab) {
			var m = [0, 0, 0];

			for (var i = 0; i < pTab.length; i++) {
				m[0] += pTab[i][0];
				m[1] += pTab[i][1];
				m[2] += pTab[i][2];
			}

			m[0] /= pTab.length;
			m[1] /= pTab.length;
			m[2] /= pTab.length;

			return m;
		}

		function backgroundMask(idata, threshold) {
			var rgbv_no = pixelAt(idata, 0, 0);
			var rgbv_ne = pixelAt(idata, idata.width - 1, 0);
			var rgbv_so = pixelAt(idata, 0, idata.height - 1);
			var rgbv_se = pixelAt(idata, idata.width - 1, idata.height - 1);


			var thres = threshold || 10;
			if (rgbDistance(rgbv_no, rgbv_ne) < thres && rgbDistance(rgbv_ne, rgbv_se) < thres && rgbDistance(rgbv_se, rgbv_so) < thres && rgbDistance(rgbv_so, rgbv_no) < thres) {

				// Mean color
				var mean = rgbMean([rgbv_ne, rgbv_no, rgbv_se, rgbv_so]);

				// Mask based on color distance
				var mask = [];
				for (var i = 0; i < idata.width * idata.height; i++) {
					var d = rgbDistance(mean, [idata.data[i * 4], idata.data[i * 4 + 1], idata.data[i * 4 + 2]]);
					mask[i] = (d < thres) ? 0 : 255;
				}

				return mask;
			}
		}

		function applyMask(idata, mask) {
			for (var i = 0; i < idata.width * idata.height; i++) {
				idata.data[4 * i + 3] = mask[i];
			}
		}

		function erodeMask(mask, sw, sh) {

			var weights = [1, 1, 1, 1, 0, 1, 1, 1, 1];
			var side = Math.round(Math.sqrt(weights.length));
			var halfSide = Math.floor(side / 2);

			var maskResult = [];
			for (var y = 0; y < sh; y++) {
				for (var x = 0; x < sw; x++) {

					var so = y * sw + x;
					var a = 0;
					for (var cy = 0; cy < side; cy++) {
						for (var cx = 0; cx < side; cx++) {
							var scy = y + cy - halfSide;
							var scx = x + cx - halfSide;

							if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {

								var srcOff = scy * sw + scx;
								var wt = weights[cy * side + cx];

								a += mask[srcOff] * wt;
							}
						}
					}

					maskResult[so] = (a === 255 * 8) ? 255 : 0;
				}
			}

			return maskResult;
		}

		function dilateMask(mask, sw, sh) {

			var weights = [1, 1, 1, 1, 1, 1, 1, 1, 1];
			var side = Math.round(Math.sqrt(weights.length));
			var halfSide = Math.floor(side / 2);

			var maskResult = [];
			for (var y = 0; y < sh; y++) {
				for (var x = 0; x < sw; x++) {

					var so = y * sw + x;
					var a = 0;
					for (var cy = 0; cy < side; cy++) {
						for (var cx = 0; cx < side; cx++) {
							var scy = y + cy - halfSide;
							var scx = x + cx - halfSide;

							if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {

								var srcOff = scy * sw + scx;
								var wt = weights[cy * side + cx];

								a += mask[srcOff] * wt;
							}
						}
					}

					maskResult[so] = (a >= 255 * 4) ? 255 : 0;
				}
			}

			return maskResult;
		}

		function smoothEdgeMask(mask, sw, sh) {

			var weights = [1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9];
			var side = Math.round(Math.sqrt(weights.length));
			var halfSide = Math.floor(side / 2);

			var maskResult = [];
			for (var y = 0; y < sh; y++) {
				for (var x = 0; x < sw; x++) {

					var so = y * sw + x;
					var a = 0;
					for (var cy = 0; cy < side; cy++) {
						for (var cx = 0; cx < side; cx++) {
							var scy = y + cy - halfSide;
							var scx = x + cx - halfSide;

							if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {

								var srcOff = scy * sw + scx;
								var wt = weights[cy * side + cx];

								a += mask[srcOff] * wt;
							}
						}
					}

					maskResult[so] = a;
				}
			}

			return maskResult;
		}
		
		/**
		 * Mask Filter
		 * @function
		 * @name Mask
		 * @memberof Kinetic.Filters
		 * @param {Object} imageData
		 * @example
	     * node.cache();
	     * node.filters([Kinetic.Filters.Mask]);
	     * node.threshold(0.1);
		 */
		Kinetic.Filters.Mask = function(imageData) {
			// Detect pixels close to the background color
			var threshold = this.threshold(),
	        mask = backgroundMask(imageData, threshold);
			if (mask) {
				// Erode
				mask = erodeMask(mask, imageData.width, imageData.height);

				// Dilate
				mask = dilateMask(mask, imageData.width, imageData.height);

				// Gradient
				mask = smoothEdgeMask(mask, imageData.width, imageData.height);

				// Apply mask
				applyMask(imageData, mask);
				
				// todo : Update hit region function according to mask
			}

			return imageData;
		};

		Kinetic.Factory.addGetterSetter(Kinetic.Node, 'threshold', 0, null, Kinetic.Factory.afterSetFilter);
	})();
	;(function () {
	    /**
	     * RGB Filter
	     * @function
	     * @name RGB
	     * @memberof Kinetic.Filters
	     * @param {Object} imageData
	     * @author ippo615
	     * @example
	     * node.cache();
	     * node.filters([Kinetic.Filters.RGB]);
	     * node.blue(120);
	     * node.green(200);
	     */
	    Kinetic.Filters.RGB = function (imageData) {
	        var data = imageData.data,
	            nPixels = data.length,
	            red = this.red(),
	            green = this.green(),
	            blue = this.blue(),
	            i, brightness;

	        for (i = 0; i < nPixels; i += 4) {
	            brightness = (0.34 * data[i] + 0.5 * data[i + 1] + 0.16 * data[i + 2])/255;
	            data[i    ] = brightness*red; // r
	            data[i + 1] = brightness*green; // g
	            data[i + 2] = brightness*blue; // b
	            data[i + 3] = data[i + 3]; // alpha
	        }
	    };

	    Kinetic.Factory.addGetterSetter(Kinetic.Node, 'red', 0, function(val) {
	        this._filterUpToDate = false;
	        if (val > 255) {
	            return 255;
	        }
	        else if (val < 0) {
	            return 0;
	        }
	        else {
	            return Math.round(val);
	        }
	    });
	    /**
	    * get/set filter red value. Use with {@link Kinetic.Filters.RGB} filter.
	    * @name red
	    * @method
	    * @memberof Kinetic.Node.prototype
	    * @param {Integer} red value between 0 and 255
	    * @returns {Integer}
	    */

	    Kinetic.Factory.addGetterSetter(Kinetic.Node, 'green', 0, function(val) {
	        this._filterUpToDate = false;
	        if (val > 255) {
	            return 255;
	        }
	        else if (val < 0) {
	            return 0;
	        }
	        else {
	            return Math.round(val);
	        }
	    });
	    /**
	    * get/set filter green value. Use with {@link Kinetic.Filters.RGB} filter.
	    * @name green
	    * @method
	    * @memberof Kinetic.Node.prototype
	    * @param {Integer} green value between 0 and 255
	    * @returns {Integer}
	    */

	    Kinetic.Factory.addGetterSetter(Kinetic.Node, 'blue', 0, Kinetic.Validators.RGBComponent, Kinetic.Factory.afterSetFilter);
	    /**
	    * get/set filter blue value. Use with {@link Kinetic.Filters.RGB} filter.
	    * @name blue
	    * @method
	    * @memberof Kinetic.Node.prototype
	    * @param {Integer} blue value between 0 and 255
	    * @returns {Integer}
	    */
	})();
	;(function () {

	    /**
	    * HSV Filter. Adjusts the hue, saturation and value
	    * @function
	    * @name HSV
	    * @memberof Kinetic.Filters
	    * @param {Object} imageData
	    * @author ippo615
	    * @example
	    * image.filters([Kinetic.Filters.HSV]);
	    * image.value(200);
	    */

	    Kinetic.Filters.HSV = function (imageData) {
	        var data = imageData.data,
	            nPixels = data.length,
	            v = Math.pow(2,this.value()),
	            s = Math.pow(2,this.saturation()),
	            h = Math.abs((this.hue()) + 360) % 360,
	            i;

	        // Basis for the technique used:
	        // http://beesbuzz.biz/code/hsv_color_transforms.php
	        // V is the value multiplier (1 for none, 2 for double, 0.5 for half)
	        // S is the saturation multiplier (1 for none, 2 for double, 0.5 for half)
	        // H is the hue shift in degrees (0 to 360)
	        // vsu = V*S*cos(H*PI/180);
	        // vsw = V*S*sin(H*PI/180);
	        //[ .299V+.701vsu+.168vsw    .587V-.587vsu+.330vsw    .114V-.114vsu-.497vsw ] [R]
	        //[ .299V-.299vsu-.328vsw    .587V+.413vsu+.035vsw    .114V-.114vsu+.292vsw ]*[G]
	        //[ .299V-.300vsu+1.25vsw    .587V-.588vsu-1.05vsw    .114V+.886vsu-.203vsw ] [B]

	        // Precompute the values in the matrix:
	        var vsu = v*s*Math.cos(h*Math.PI/180),
	            vsw = v*s*Math.sin(h*Math.PI/180);
	        // (result spot)(source spot)
	        var rr = 0.299*v+0.701*vsu+0.167*vsw,
	            rg = 0.587*v-0.587*vsu+0.330*vsw,
	            rb = 0.114*v-0.114*vsu-0.497*vsw;
	        var gr = 0.299*v-0.299*vsu-0.328*vsw,
	            gg = 0.587*v+0.413*vsu+0.035*vsw,
	            gb = 0.114*v-0.114*vsu+0.293*vsw;
	        var br = 0.299*v-0.300*vsu+1.250*vsw,
	            bg = 0.587*v-0.586*vsu-1.050*vsw,
	            bb = 0.114*v+0.886*vsu-0.200*vsw;

	        var r,g,b,a;

	        for (i = 0; i < nPixels; i += 4) {
	            r = data[i+0];
	            g = data[i+1];
	            b = data[i+2];
	            a = data[i+3];

	            data[i+0] = rr*r + rg*g + rb*b;
	            data[i+1] = gr*r + gg*g + gb*b;
	            data[i+2] = br*r + bg*g + bb*b;
	            data[i+3] = a; // alpha
	        }

	    };

	    Kinetic.Factory.addGetterSetter(Kinetic.Node, 'hue', 0, null, Kinetic.Factory.afterSetFilter);
	    /**
	    * get/set hsv hue in degrees. Use with {@link Kinetic.Filters.HSV} or {@link Kinetic.Filters.HSL} filter.
	    * @name hue
	    * @method
	    * @memberof Kinetic.Node.prototype
	    * @param {Number} hue value between 0 and 359
	    * @returns {Number}
	    */

	    Kinetic.Factory.addGetterSetter(Kinetic.Node, 'saturation', 0, null, Kinetic.Factory.afterSetFilter);
	    /**
	    * get/set hsv saturation. Use with {@link Kinetic.Filters.HSV} or {@link Kinetic.Filters.HSL} filter.
	    * @name saturation
	    * @method
	    * @memberof Kinetic.Node.prototype
	    * @param {Number} saturation 0 is no change, -1.0 halves the saturation, 1.0 doubles, etc..
	    * @returns {Number}
	    */

	    Kinetic.Factory.addGetterSetter(Kinetic.Node, 'value', 0, null, Kinetic.Factory.afterSetFilter);
	    /**
	    * get/set hsv value. Use with {@link Kinetic.Filters.HSV} filter.
	    * @name value
	    * @method
	    * @memberof Kinetic.Node.prototype
	    * @param {Number} value 0 is no change, -1.0 halves the value, 1.0 doubles, etc..
	    * @returns {Number}
	    */

	})();
	;(function () {

	    Kinetic.Factory.addGetterSetter(Kinetic.Node, 'hue', 0, null, Kinetic.Factory.afterSetFilter);
	    /**
	    * get/set hsv hue in degrees. Use with {@link Kinetic.Filters.HSV} or {@link Kinetic.Filters.HSL} filter.
	    * @name hue
	    * @method
	    * @memberof Kinetic.Node.prototype
	    * @param {Number} hue value between 0 and 359
	    * @returns {Number}
	    */

	    Kinetic.Factory.addGetterSetter(Kinetic.Node, 'saturation', 0, null, Kinetic.Factory.afterSetFilter);
	    /**
	    * get/set hsv saturation. Use with {@link Kinetic.Filters.HSV} or {@link Kinetic.Filters.HSL} filter.
	    * @name saturation
	    * @method
	    * @memberof Kinetic.Node.prototype
	    * @param {Number} saturation 0 is no change, -1.0 halves the saturation, 1.0 doubles, etc..
	    * @returns {Number}
	    */

	    Kinetic.Factory.addGetterSetter(Kinetic.Node, 'luminance', 0, null, Kinetic.Factory.afterSetFilter);
	    /**
	    * get/set hsl luminance. Use with {@link Kinetic.Filters.HSL} filter.
	    * @name value
	    * @method
	    * @memberof Kinetic.Node.prototype
	    * @param {Number} value 0 is no change, -1.0 halves the value, 1.0 doubles, etc..
	    * @returns {Number}
	    */

	    /**
	    * HSL Filter. Adjusts the hue, saturation and luminance (or lightness)
	    * @function
	    * @memberof Kinetic.Filters
	    * @param {Object} imageData
	    * @author ippo615
	    * @example
	    * image.filters([Kinetic.Filters.HSL]);
	    * image.luminance(200);
	    */

	    Kinetic.Filters.HSL = function (imageData) {
	        var data = imageData.data,
	            nPixels = data.length,
	            v = 1,
	            s = Math.pow(2,this.saturation()),
	            h = Math.abs((this.hue()) + 360) % 360,
	            l = this.luminance()*127,
	            i;

	        // Basis for the technique used:
	        // http://beesbuzz.biz/code/hsv_color_transforms.php
	        // V is the value multiplier (1 for none, 2 for double, 0.5 for half)
	        // S is the saturation multiplier (1 for none, 2 for double, 0.5 for half)
	        // H is the hue shift in degrees (0 to 360)
	        // vsu = V*S*cos(H*PI/180);
	        // vsw = V*S*sin(H*PI/180);
	        //[ .299V+.701vsu+.168vsw    .587V-.587vsu+.330vsw    .114V-.114vsu-.497vsw ] [R]
	        //[ .299V-.299vsu-.328vsw    .587V+.413vsu+.035vsw    .114V-.114vsu+.292vsw ]*[G]
	        //[ .299V-.300vsu+1.25vsw    .587V-.588vsu-1.05vsw    .114V+.886vsu-.203vsw ] [B]

	        // Precompute the values in the matrix:
	        var vsu = v*s*Math.cos(h*Math.PI/180),
	            vsw = v*s*Math.sin(h*Math.PI/180);
	        // (result spot)(source spot)
	        var rr = 0.299*v+0.701*vsu+0.167*vsw,
	            rg = 0.587*v-0.587*vsu+0.330*vsw,
	            rb = 0.114*v-0.114*vsu-0.497*vsw;
	        var gr = 0.299*v-0.299*vsu-0.328*vsw,
	            gg = 0.587*v+0.413*vsu+0.035*vsw,
	            gb = 0.114*v-0.114*vsu+0.293*vsw;
	        var br = 0.299*v-0.300*vsu+1.250*vsw,
	            bg = 0.587*v-0.586*vsu-1.050*vsw,
	            bb = 0.114*v+0.886*vsu-0.200*vsw;

	        var r,g,b,a;

	        for (i = 0; i < nPixels; i += 4) {
	            r = data[i+0];
	            g = data[i+1];
	            b = data[i+2];
	            a = data[i+3];

	            data[i+0] = rr*r + rg*g + rb*b + l;
	            data[i+1] = gr*r + gg*g + gb*b + l;
	            data[i+2] = br*r + bg*g + bb*b + l;
	            data[i+3] = a; // alpha
	        }
	    };
	})();
	;(function () {
	    /**
	     * Emboss Filter.
	     * Pixastic Lib - Emboss filter - v0.1.0
	     * Copyright (c) 2008 Jacob Seidelin, jseidelin@nihilogic.dk, http://blog.nihilogic.dk/
	     * License: [http://www.pixastic.com/lib/license.txt]
	     * @function
	     * @memberof Kinetic.Filters
	     * @param {Object} imageData
	     * @example
	     * node.cache();
	     * node.filters([Kinetic.Filters.Emboss]);
	     * node.embossStrength(0.8);
	     * node.embossWhiteLevel(0.3);
	     * node.embossDirection('right');
	     * node.embossBlend(true);
	     */
	    Kinetic.Filters.Emboss = function (imageData) {

	        // pixastic strength is between 0 and 10.  I want it between 0 and 1
	        // pixastic greyLevel is between 0 and 255.  I want it between 0 and 1.  Also,
	        // a max value of greyLevel yields a white emboss, and the min value yields a black
	        // emboss.  Therefore, I changed greyLevel to whiteLevel
	        var strength = this.embossStrength() * 10,
	            greyLevel = this.embossWhiteLevel() * 255,
	            direction = this.embossDirection(),
	            blend = this.embossBlend(),
	            dirY = 0,
	            dirX = 0,
	            data = imageData.data,
	            w = imageData.width,
	            h = imageData.height,
	            w4 = w*4,
	            y = h;

	        switch (direction) {
	            case 'top-left':
	                dirY = -1;
	                dirX = -1;
	                break;
	            case 'top':
	                dirY = -1;
	                dirX = 0;
	                break;
	            case 'top-right':
	                dirY = -1;
	                dirX = 1;
	                break;
	            case 'right':
	                dirY = 0;
	                dirX = 1;
	                break;
	            case 'bottom-right':
	                dirY = 1;
	                dirX = 1;
	                break;
	            case 'bottom':
	                dirY = 1;
	                dirX = 0;
	                break;
	            case 'bottom-left':
	                dirY = 1;
	                dirX = -1;
	                break;
	            case 'left':
	                dirY = 0;
	                dirX = -1;
	                break;
	        }

	        do {
	            var offsetY = (y-1)*w4;

	            var otherY = dirY;
	            if (y + otherY < 1){
	                otherY = 0;
	            }
	            if (y + otherY > h) {
	                otherY = 0;
	            }

	            var offsetYOther = (y-1+otherY)*w*4;

	            var x = w;
	            do {
	                var offset = offsetY + (x-1)*4;

	                var otherX = dirX;
	                if (x + otherX < 1){
	                    otherX = 0;
	                }
	                if (x + otherX > w) {
	                    otherX = 0;
	                }

	                var offsetOther = offsetYOther + (x-1+otherX)*4;

	                var dR = data[offset] - data[offsetOther];
	                var dG = data[offset+1] - data[offsetOther+1];
	                var dB = data[offset+2] - data[offsetOther+2];

	                var dif = dR;
	                var absDif = dif > 0 ? dif : -dif;

	                var absG = dG > 0 ? dG : -dG;
	                var absB = dB > 0 ? dB : -dB;

	                if (absG > absDif) {
	                    dif = dG;
	                }
	                if (absB > absDif) {
	                    dif = dB;
	                }

	                dif *= strength;

	                if (blend) {
	                    var r = data[offset] + dif;
	                    var g = data[offset+1] + dif;
	                    var b = data[offset+2] + dif;

	                    data[offset] = (r > 255) ? 255 : (r < 0 ? 0 : r);
	                    data[offset+1] = (g > 255) ? 255 : (g < 0 ? 0 : g);
	                    data[offset+2] = (b > 255) ? 255 : (b < 0 ? 0 : b);
	                } else {
	                    var grey = greyLevel - dif;
	                    if (grey < 0) {
	                        grey = 0;
	                    } else if (grey > 255) {
	                        grey = 255;
	                    }

	                    data[offset] = data[offset+1] = data[offset+2] = grey;
	                }

	            } while (--x);
	        } while (--y);
	    };

	    Kinetic.Factory.addGetterSetter(Kinetic.Node, 'embossStrength', 0.5, null, Kinetic.Factory.afterSetFilter);
	    /**
	    * get/set emboss strength. Use with {@link Kinetic.Filters.Emboss} filter.
	    * @name embossStrength
	    * @method
	    * @memberof Kinetic.Node.prototype
	    * @param {Number} level between 0 and 1.  Default is 0.5
	    * @returns {Number}
	    */

	    Kinetic.Factory.addGetterSetter(Kinetic.Node, 'embossWhiteLevel', 0.5, null, Kinetic.Factory.afterSetFilter);
	    /**
	    * get/set emboss white level. Use with {@link Kinetic.Filters.Emboss} filter.
	    * @name embossWhiteLevel
	    * @method
	    * @memberof Kinetic.Node.prototype
	    * @param {Number} embossWhiteLevel between 0 and 1.  Default is 0.5
	    * @returns {Number}
	    */

	    Kinetic.Factory.addGetterSetter(Kinetic.Node, 'embossDirection', 'top-left', null, Kinetic.Factory.afterSetFilter);
	    /**
	    * get/set emboss direction. Use with {@link Kinetic.Filters.Emboss} filter.
	    * @name embossDirection
	    * @method
	    * @memberof Kinetic.Node.prototype
	    * @param {String} embossDirection can be top-left, top, top-right, right, bottom-right, bottom, bottom-left or left
	    *   The default is top-left
	    * @returns {String}
	    */

	    Kinetic.Factory.addGetterSetter(Kinetic.Node, 'embossBlend', false, null, Kinetic.Factory.afterSetFilter);
	    /**
	    * get/set emboss blend. Use with {@link Kinetic.Filters.Emboss} filter.
	    * @name embossBlend
	    * @method
	    * @memberof Kinetic.Node.prototype
	    * @param {Boolean} embossBlend
	    * @returns {Boolean}
	    */
	})();


	;(function () {
	    function remap(fromValue, fromMin, fromMax, toMin, toMax) {
	        // Compute the range of the data
	        var fromRange = fromMax - fromMin,
	          toRange = toMax - toMin,
	          toValue;

	        // If either range is 0, then the value can only be mapped to 1 value
	        if (fromRange === 0) {
	            return toMin + toRange / 2;
	        }
	        if (toRange === 0) {
	            return toMin;
	        }

	        // (1) untranslate, (2) unscale, (3) rescale, (4) retranslate
	        toValue = (fromValue - fromMin) / fromRange;
	        toValue = (toRange * toValue) + toMin;

	        return toValue;
	    }


	    /**
	    * Enhance Filter. Adjusts the colors so that they span the widest
	    *  possible range (ie 0-255). Performs w*h pixel reads and w*h pixel
	    *  writes.
	    * @function
	    * @name Enhance
	    * @memberof Kinetic.Filters
	    * @param {Object} imageData
	    * @author ippo615
	    * @example
	    * node.cache();
	    * node.filters([Kinetic.Filters.Enhance]);
	    * node.enhance(0.4);
	    */
	    Kinetic.Filters.Enhance = function (imageData) {
	        var data = imageData.data,
	            nSubPixels = data.length,
	            rMin = data[0], rMax = rMin, r,
	            gMin = data[1], gMax = gMin, g,
	            bMin = data[2], bMax = bMin, b,
	            i;

	        // If we are not enhancing anything - don't do any computation
	        var enhanceAmount = this.enhance();
	        if( enhanceAmount === 0 ){ return; }

	        // 1st Pass - find the min and max for each channel:
	        for (i = 0; i < nSubPixels; i += 4) {
	            r = data[i + 0];
	            if (r < rMin) { rMin = r; }
	            else if (r > rMax) { rMax = r; }
	            g = data[i + 1];
	            if (g < gMin) { gMin = g; } else
	            if (g > gMax) { gMax = g; }
	            b = data[i + 2];
	            if (b < bMin) { bMin = b; } else
	            if (b > bMax) { bMax = b; }
	            //a = data[i + 3];
	            //if (a < aMin) { aMin = a; } else
	            //if (a > aMax) { aMax = a; }
	        }

	        // If there is only 1 level - don't remap
	        if( rMax === rMin ){ rMax = 255; rMin = 0; }
	        if( gMax === gMin ){ gMax = 255; gMin = 0; }
	        if( bMax === bMin ){ bMax = 255; bMin = 0; }

	        var rMid, rGoalMax,rGoalMin,
	            gMid, gGoalMax,gGoalMin,
	            bMid, bGoalMax,bGoalMin;

	        // If the enhancement is positive - stretch the histogram 
	        if ( enhanceAmount > 0 ){
	            rGoalMax = rMax + enhanceAmount*(255-rMax);
	            rGoalMin = rMin - enhanceAmount*(rMin-0);
	            gGoalMax = gMax + enhanceAmount*(255-gMax);
	            gGoalMin = gMin - enhanceAmount*(gMin-0);
	            bGoalMax = bMax + enhanceAmount*(255-bMax);
	            bGoalMin = bMin - enhanceAmount*(bMin-0);
	        // If the enhancement is negative - compress the histogram
	        } else {
	            rMid = (rMax + rMin)*0.5;
	            rGoalMax = rMax + enhanceAmount*(rMax-rMid);
	            rGoalMin = rMin + enhanceAmount*(rMin-rMid);
	            gMid = (gMax + gMin)*0.5;
	            gGoalMax = gMax + enhanceAmount*(gMax-gMid);
	            gGoalMin = gMin + enhanceAmount*(gMin-gMid);
	            bMid = (bMax + bMin)*0.5;
	            bGoalMax = bMax + enhanceAmount*(bMax-bMid);
	            bGoalMin = bMin + enhanceAmount*(bMin-bMid);
	        }

	        // Pass 2 - remap everything, except the alpha
	        for (i = 0; i < nSubPixels; i += 4) {
	            data[i + 0] = remap(data[i + 0], rMin, rMax, rGoalMin, rGoalMax);
	            data[i + 1] = remap(data[i + 1], gMin, gMax, gGoalMin, gGoalMax);
	            data[i + 2] = remap(data[i + 2], bMin, bMax, bGoalMin, bGoalMax);
	            //data[i + 3] = remap(data[i + 3], aMin, aMax, aGoalMin, aGoalMax);
	        }
	    };

	    Kinetic.Factory.addGetterSetter(Kinetic.Node, 'enhance', 0, null, Kinetic.Factory.afterSetFilter);

	    /**
	    * get/set enhance. Use with {@link Kinetic.Filters.Enhance} filter.
	    * @name enhance
	    * @method
	    * @memberof Kinetic.Node.prototype
	    * @param {Float} amount
	    * @returns {Float}
	    */
	})();
	;(function () {

	    /**
	     * Posterize Filter. Adjusts the channels so that there are no more
	     *  than n different values for that channel. This is also applied
	     *  to the alpha channel.
	     * @function
	     * @name Posterize
	     * @author ippo615
	     * @memberof Kinetic.Filters
	     * @param {Object} imageData
	     * @example
	     * node.cache();
	     * node.filters([Kinetic.Filters.Posterize]);
	     * node.levels(0.8);
	     */

	    Kinetic.Filters.Posterize = function (imageData) {
	        // level must be between 1 and 255
	        var levels = Math.round(this.levels() * 254) + 1,
	            data = imageData.data,
	            len = data.length,
	            scale = (255 / levels),
	            i;

	        for (i = 0; i < len; i += 1) {
	            data[i] = Math.floor(data[i] / scale) * scale;
	        }
	    };

	    Kinetic.Factory.addGetterSetter(Kinetic.Node, 'levels', 0.5, null, Kinetic.Factory.afterSetFilter);

	    /**
	    * get/set levels.  Must be a number between 0 and 1.  Use with {@link Kinetic.Filters.Posterize} filter.
	    * @name levels
	    * @method
	    * @memberof Kinetic.Node.prototype
	    * @param {Number} level between 0 and 1
	    * @returns {Number}
	    */
	})();;(function () {

	    /**
	     * Noise Filter. Randomly adds or substracts to the color channels
	     * @function
	     * @name Noise
	     * @memberof Kinetic.Filters
	     * @param {Object} imageData
	     * @author ippo615
	     * @example
	     * node.cache();
	     * node.filters([Kinetic.Filters.Noise]);
	     * node.noise(0.8);
	     */
	    Kinetic.Filters.Noise = function (imageData) {
	        var amount = this.noise() * 255,
	            data = imageData.data,
	            nPixels = data.length,
	            half = amount / 2,
	            i;

	        for (i = 0; i < nPixels; i += 4) {
	            data[i + 0] += half - 2 * half * Math.random();
	            data[i + 1] += half - 2 * half * Math.random();
	            data[i + 2] += half - 2 * half * Math.random();
	        }
	    };

	    Kinetic.Factory.addGetterSetter(Kinetic.Node, 'noise', 0.2, null, Kinetic.Factory.afterSetFilter);

	    /**
	    * get/set noise amount.  Must be a value between 0 and 1. Use with {@link Kinetic.Filters.Noise} filter.
	    * @name noise
	    * @method
	    * @memberof Kinetic.Node.prototype
	    * @param {Number} noise
	    * @returns {Number}
	    */
	})();
	;(function () {

	    /**
	     * Pixelate Filter. Averages groups of pixels and redraws
	     *  them as larger pixels
	     * @function
	     * @name Pixelate
	     * @memberof Kinetic.Filters
	     * @param {Object} imageData
	     * @author ippo615
	     * @example
	     * node.cache();
	     * node.filters([Kinetic.Filters.Pixelate]);
	     * node.pixelSize(10);
	     */

	    Kinetic.Filters.Pixelate = function (imageData) {

	        var pixelSize = Math.ceil(this.pixelSize()),
	            width = imageData.width,
	            height = imageData.height,
	            x, y, i,
	            //pixelsPerBin = pixelSize * pixelSize,
	            red, green, blue, alpha,
	            nBinsX = Math.ceil(width / pixelSize),
	            nBinsY = Math.ceil(height / pixelSize),
	            xBinStart, xBinEnd, yBinStart, yBinEnd,
	            xBin, yBin, pixelsInBin;
	        imageData = imageData.data;

	        for (xBin = 0; xBin < nBinsX; xBin += 1) {
	            for (yBin = 0; yBin < nBinsY; yBin += 1) {
	        
	                // Initialize the color accumlators to 0
	                red = 0;
	                green = 0;
	                blue = 0;
	                alpha = 0;

	                // Determine which pixels are included in this bin
	                xBinStart = xBin * pixelSize;
	                xBinEnd = xBinStart + pixelSize;
	                yBinStart = yBin * pixelSize;
	                yBinEnd = yBinStart + pixelSize;

	                // Add all of the pixels to this bin!
	                pixelsInBin = 0;
	                for (x = xBinStart; x < xBinEnd; x += 1) {
	                    if( x >= width ){ continue; }
	                    for (y = yBinStart; y < yBinEnd; y += 1) {
	                        if( y >= height ){ continue; }
	                        i = (width * y + x) * 4;
	                        red += imageData[i + 0];
	                        green += imageData[i + 1];
	                        blue += imageData[i + 2];
	                        alpha += imageData[i + 3];
	                        pixelsInBin += 1;
	                    }
	                }

	                // Make sure the channels are between 0-255
	                red = red / pixelsInBin;
	                green = green / pixelsInBin;
	                blue = blue / pixelsInBin;

	                // Draw this bin
	                for (x = xBinStart; x < xBinEnd; x += 1) {
	                    if( x >= width ){ continue; }
	                    for (y = yBinStart; y < yBinEnd; y += 1) {
	                        if( y >= height ){ continue; }
	                        i = (width * y + x) * 4;
	                        imageData[i + 0] = red;
	                        imageData[i + 1] = green;
	                        imageData[i + 2] = blue;
	                        imageData[i + 3] = alpha;
	                    }
	                }
	            }
	        }
	      
	    };

	    Kinetic.Factory.addGetterSetter(Kinetic.Node, 'pixelSize', 8, null, Kinetic.Factory.afterSetFilter);

	    /**
	    * get/set pixel size. Use with {@link Kinetic.Filters.Pixelate} filter.
	    * @name pixelSize
	    * @method
	    * @memberof Kinetic.Node.prototype
	    * @param {Integer} pixelSize
	    * @returns {Integer}
	    */
	})();;(function () {

	    /**
	     * Threshold Filter. Pushes any value above the mid point to 
	     *  the max and any value below the mid point to the min.
	     *  This affects the alpha channel.
	     * @function
	     * @name Threshold
	     * @memberof Kinetic.Filters
	     * @param {Object} imageData
	     * @author ippo615
	     * @example
	     * node.cache();
	     * node.filters([Kinetic.Filters.Threshold]);
	     * node.threshold(0.1);
	     */

	    Kinetic.Filters.Threshold = function (imageData) {
	        var level = this.threshold() * 255,
	            data = imageData.data,
	            len = data.length,
	            i;

	        for (i = 0; i < len; i += 1) {
	            data[i] = data[i] < level ? 0 : 255;
	        }
	    };

	    Kinetic.Factory.addGetterSetter(Kinetic.Node, 'threshold', 0.5, null, Kinetic.Factory.afterSetFilter);

	    /**
	    * get/set threshold.  Must be a value between 0 and 1. Use with {@link Kinetic.Filters.Threshold} or {@link Kinetic.Filters.Mask} filter.
	    * @name threshold
	    * @method
	    * @memberof Kinetic.Node.prototype
	    * @param {Number} threshold
	    * @returns {Number}
	    */
	})();;(function() {
	    /**
	     * Sepia Filter
	     * Based on: Pixastic Lib - Sepia filter - v0.1.0
	     * Copyright (c) 2008 Jacob Seidelin, jseidelin@nihilogic.dk, http://blog.nihilogic.dk/
	     * @function
	     * @name Sepia
	     * @memberof Kinetic.Filters
	     * @param {Object} imageData
	     * @author Jacob Seidelin <jseidelin@nihilogic.dk>
	     * @license MPL v1.1 [http://www.pixastic.com/lib/license.txt]
	     * @example
	     * node.cache();
	     * node.filters([Kinetic.Filters.Sepia]);
	     */
	    Kinetic.Filters.Sepia = function (imageData) {
	        var data = imageData.data,
	            w = imageData.width,
	            y = imageData.height,
	            w4 = w*4,
	            offsetY, x, offset, or, og, ob, r, g, b;
	        
	        do {
	            offsetY = (y-1)*w4;
	            x = w;
	            do {
	                offset = offsetY + (x-1)*4;
	                
	                or = data[offset];
	                og = data[offset+1];
	                ob = data[offset+2];

	                r = or * 0.393 + og * 0.769 + ob * 0.189;
	                g = or * 0.349 + og * 0.686 + ob * 0.168;
	                b = or * 0.272 + og * 0.534 + ob * 0.131;

	                data[offset] = r > 255 ? 255 : r;
	                data[offset+1] = g > 255 ? 255 : g;
	                data[offset+2] = b > 255 ? 255 : b;
	                data[offset+3] = data[offset+3];
	            } while (--x);
	        } while (--y);
	    };
	})();
	;(function () {
	    /**
	     * Solarize Filter
	     * Pixastic Lib - Solarize filter - v0.1.0
	     * Copyright (c) 2008 Jacob Seidelin, jseidelin@nihilogic.dk, http://blog.nihilogic.dk/
	     * License: [http://www.pixastic.com/lib/license.txt]
	     * @function
	     * @name Solarize
	     * @memberof Kinetic.Filters
	     * @param {Object} imageData
	     * @example
	     * node.cache();
	     * node.filters([Kinetic.Filters.Solarize]);
	     */
	    Kinetic.Filters.Solarize = function (imageData) {
	        var data = imageData.data,
	            w = imageData.width,
	            h = imageData.height,
	            w4 = w*4,
	            y = h;

	        do {
	            var offsetY = (y-1)*w4;
	            var x = w;
	            do {
	                var offset = offsetY + (x-1)*4;
	                var r = data[offset];
	                var g = data[offset+1];
	                var b = data[offset+2];

	                if (r > 127) {
	                    r = 255 - r;
	                }
	                if (g > 127) {
	                    g = 255 - g;
	                }
	                if (b > 127) {
	                    b = 255 - b;
	                }

	                data[offset] = r;
	                data[offset+1] = g;
	                data[offset+2] = b;
	            } while (--x);
	        } while (--y);
	    };
	})();


	;/*jshint newcap:false */
	(function () {

	  /*
	   * ToPolar Filter. Converts image data to polar coordinates. Performs 
	   *  w*h*4 pixel reads and w*h pixel writes. The r axis is placed along
	   *  what would be the y axis and the theta axis along the x axis.
	   * @function
	   * @author ippo615
	   * @memberof Kinetic.Filters
	   * @param {ImageData} src, the source image data (what will be transformed)
	   * @param {ImageData} dst, the destination image data (where it will be saved)
	   * @param {Object} opt
	   * @param {Number} [opt.polarCenterX] horizontal location for the center of the circle,
	   *  default is in the middle
	   * @param {Number} [opt.polarCenterY] vertical location for the center of the circle,
	   *  default is in the middle
	   */

	    var ToPolar = function(src,dst,opt){

	        var srcPixels = src.data,
	            dstPixels = dst.data,
	            xSize = src.width,
	            ySize = src.height,
	            xMid = opt.polarCenterX || xSize/2,
	            yMid = opt.polarCenterY || ySize/2,
	            i, x, y, r=0,g=0,b=0,a=0;

	        // Find the largest radius
	        var rad, rMax = Math.sqrt( xMid*xMid + yMid*yMid );
	        x = xSize - xMid;
	        y = ySize - yMid;
	        rad = Math.sqrt( x*x + y*y );
	        rMax = (rad > rMax)?rad:rMax;

	        // We'll be uisng y as the radius, and x as the angle (theta=t)
	        var rSize = ySize,
	            tSize = xSize,
	            radius, theta;

	        // We want to cover all angles (0-360) and we need to convert to
	        // radians (*PI/180)
	        var conversion = 360/tSize*Math.PI/180, sin, cos;

	        // var x1, x2, x1i, x2i, y1, y2, y1i, y2i, scale;

	        for( theta=0; theta<tSize; theta+=1 ){
	            sin = Math.sin(theta*conversion);
	            cos = Math.cos(theta*conversion);
	            for( radius=0; radius<rSize; radius+=1 ){
	                x = Math.floor(xMid+rMax*radius/rSize*cos);
	                y = Math.floor(yMid+rMax*radius/rSize*sin);
	                i = (y*xSize + x)*4;
	                r = srcPixels[i+0];
	                g = srcPixels[i+1];
	                b = srcPixels[i+2];
	                a = srcPixels[i+3];

	                // Store it
	                //i = (theta * xSize + radius) * 4;
	                i = (theta + radius*xSize) * 4;
	                dstPixels[i+0] = r;
	                dstPixels[i+1] = g;
	                dstPixels[i+2] = b;
	                dstPixels[i+3] = a;

	            }
	        }
	    };

	    /*
	     * FromPolar Filter. Converts image data from polar coordinates back to rectangular.
	     *  Performs w*h*4 pixel reads and w*h pixel writes.
	     * @function
	     * @author ippo615
	     * @memberof Kinetic.Filters
	     * @param {ImageData} src, the source image data (what will be transformed)
	     * @param {ImageData} dst, the destination image data (where it will be saved)
	     * @param {Object} opt
	     * @param {Number} [opt.polarCenterX] horizontal location for the center of the circle,
	     *  default is in the middle
	     * @param {Number} [opt.polarCenterY] vertical location for the center of the circle,
	     *  default is in the middle
	     * @param {Number} [opt.polarRotation] amount to rotate the image counterclockwis,
	     *  0 is no rotation, 360 degrees is a full rotation
	     */

	    var FromPolar = function(src,dst,opt){

	        var srcPixels = src.data,
	            dstPixels = dst.data,
	            xSize = src.width,
	            ySize = src.height,
	            xMid = opt.polarCenterX || xSize/2,
	            yMid = opt.polarCenterY || ySize/2,
	            i, x, y, dx, dy, r=0,g=0,b=0,a=0;


	        // Find the largest radius
	        var rad, rMax = Math.sqrt( xMid*xMid + yMid*yMid );
	        x = xSize - xMid;
	        y = ySize - yMid;
	        rad = Math.sqrt( x*x + y*y );
	        rMax = (rad > rMax)?rad:rMax;

	        // We'll be uisng x as the radius, and y as the angle (theta=t)
	        var rSize = ySize,
	        tSize = xSize,
	        radius, theta,
	        phaseShift = opt.polarRotation || 0;

	        // We need to convert to degrees and we need to make sure
	        // it's between (0-360)
	        // var conversion = tSize/360*180/Math.PI;
	        //var conversion = tSize/360*180/Math.PI;

	        var x1, y1;

	        for( x=0; x<xSize; x+=1 ){
	            for( y=0; y<ySize; y+=1 ){
	                dx = x - xMid;
	                dy = y - yMid;
	                radius = Math.sqrt(dx*dx + dy*dy)*rSize/rMax;
	                theta = (Math.atan2(dy,dx)*180/Math.PI + 360 + phaseShift)%360;
	                theta = theta*tSize/360;
	                x1 = Math.floor(theta);
	                y1 = Math.floor(radius);
	                i = (y1*xSize + x1)*4;
	                r = srcPixels[i+0];
	                g = srcPixels[i+1];
	                b = srcPixels[i+2];
	                a = srcPixels[i+3];

	                // Store it
	                i = (y*xSize + x)*4;
	                dstPixels[i+0] = r;
	                dstPixels[i+1] = g;
	                dstPixels[i+2] = b;
	                dstPixels[i+3] = a;
	            }
	        }

	    };

	    //Kinetic.Filters.ToPolar = Kinetic.Util._FilterWrapDoubleBuffer(ToPolar);
	    //Kinetic.Filters.FromPolar = Kinetic.Util._FilterWrapDoubleBuffer(FromPolar);

	    // create a temporary canvas for working - shared between multiple calls
	    var tempCanvas = Kinetic.Util.createCanvasElement();

	    /*
	     * Kaleidoscope Filter. 
	     * @function
	     * @name Kaleidoscope
	     * @author ippo615
	     * @memberof Kinetic.Filters
	     * @example
	     * node.cache();
	     * node.filters([Kinetic.Filters.Kaleidoscope]);
	     * node.kaleidoscopePower(3);
	     * node.kaleidoscopeAngle(45);
	     */
	    Kinetic.Filters.Kaleidoscope = function(imageData){
	        var xSize = imageData.width,
	            ySize = imageData.height;

	        var x,y,xoff,i, r,g,b,a, srcPos, dstPos;
	        var power = Math.round( this.kaleidoscopePower() );
	        var angle = Math.round( this.kaleidoscopeAngle() );
	        var offset = Math.floor(xSize*(angle%360)/360);

	        if( power < 1 ){return;}

	        // Work with our shared buffer canvas
	        tempCanvas.width = xSize;
	        tempCanvas.height = ySize;
	        var scratchData = tempCanvas.getContext('2d').getImageData(0,0,xSize,ySize);

	        // Convert thhe original to polar coordinates
	        ToPolar( imageData, scratchData, {
	            polarCenterX:xSize/2,
	            polarCenterY:ySize/2
	        });

	        // Determine how big each section will be, if it's too small 
	        // make it bigger
	        var minSectionSize = xSize / Math.pow(2,power);
	        while( minSectionSize <= 8){
	            minSectionSize = minSectionSize*2;
	            power -= 1;
	        }
	        minSectionSize = Math.ceil(minSectionSize);
	        var sectionSize = minSectionSize;

	        // Copy the offset region to 0
	        // Depending on the size of filter and location of the offset we may need
	        // to copy the section backwards to prevent it from rewriting itself
	        var xStart = 0,
	          xEnd = sectionSize,
	          xDelta = 1;
	        if( offset+minSectionSize > xSize ){
	            xStart = sectionSize;
	            xEnd = 0;
	            xDelta = -1;
	        }
	        for( y=0; y<ySize; y+=1 ){
	            for( x=xStart; x !== xEnd; x+=xDelta ){
	                xoff = Math.round(x+offset)%xSize;
	                srcPos = (xSize*y+xoff)*4;
	                r = scratchData.data[srcPos+0];
	                g = scratchData.data[srcPos+1];
	                b = scratchData.data[srcPos+2];
	                a = scratchData.data[srcPos+3];
	                dstPos = (xSize*y+x)*4;
	                scratchData.data[dstPos+0] = r;
	                scratchData.data[dstPos+1] = g;
	                scratchData.data[dstPos+2] = b;
	                scratchData.data[dstPos+3] = a;
	            }
	        }

	        // Perform the actual effect
	        for( y=0; y<ySize; y+=1 ){
	            sectionSize = Math.floor( minSectionSize );
	            for( i=0; i<power; i+=1 ){
	                for( x=0; x<sectionSize+1; x+=1 ){
	                    srcPos = (xSize*y+x)*4;
	                    r = scratchData.data[srcPos+0];
	                    g = scratchData.data[srcPos+1];
	                    b = scratchData.data[srcPos+2];
	                    a = scratchData.data[srcPos+3];
	                    dstPos = (xSize*y+sectionSize*2-x-1)*4;
	                    scratchData.data[dstPos+0] = r;
	                    scratchData.data[dstPos+1] = g;
	                    scratchData.data[dstPos+2] = b;
	                    scratchData.data[dstPos+3] = a;
	                }
	                sectionSize *= 2;
	            }
	        }

	        // Convert back from polar coordinates
	        FromPolar(scratchData,imageData,{polarRotation:0});
	    };

	    /**
	    * get/set kaleidoscope power. Use with {@link Kinetic.Filters.Kaleidoscope} filter.
	    * @name kaleidoscopePower
	    * @method
	    * @memberof Kinetic.Node.prototype
	    * @param {Integer} power of kaleidoscope
	    * @returns {Integer}
	    */
	    Kinetic.Factory.addGetterSetter(Kinetic.Node, 'kaleidoscopePower', 2, null, Kinetic.Factory.afterSetFilter);

	    /**
	    * get/set kaleidoscope angle. Use with {@link Kinetic.Filters.Kaleidoscope} filter.
	    * @name kaleidoscopeAngle
	    * @method
	    * @memberof Kinetic.Node.prototype
	    * @param {Integer} degrees
	    * @returns {Integer}
	    */
	    Kinetic.Factory.addGetterSetter(Kinetic.Node, 'kaleidoscopeAngle', 0, null, Kinetic.Factory.afterSetFilter);

	})();
	;(function() {
	    var BATCH_DRAW_STOP_TIME_DIFF = 500;

	    var now =(function() {
	        if (Kinetic.root.performance && Kinetic.root.performance.now) {
	            return function() {
	                return Kinetic.root.performance.now();
	            };
	        }
	        else {
	            return function() {
	                return new Date().getTime();
	            };
	        }
	    })();

	    var RAF = (function() {
	        return Kinetic.root.requestAnimationFrame
	            || Kinetic.root.webkitRequestAnimationFrame
	            || Kinetic.root.mozRequestAnimationFrame
	            || Kinetic.root.oRequestAnimationFrame
	            || Kinetic.root.msRequestAnimationFrame
	            || FRAF;
	    })();

	    function FRAF(callback) {
	        setTimeout(callback, 1000 / 60);
	    }

	    function requestAnimFrame() {
	        return RAF.apply(Kinetic.root, arguments);
	    }
	    
	    /**
	     * Animation constructor.  A stage is used to contain multiple layers and handle
	     * @constructor
	     * @memberof Kinetic
	     * @param {Function} func function executed on each animation frame.  The function is passed a frame object, which contains
	     *  timeDiff, lastTime, time, and frameRate properties.  The timeDiff property is the number of milliseconds that have passed
	     *  since the last animation frame.  The lastTime property is time in milliseconds that elapsed from the moment the animation started
	     *  to the last animation frame.  The time property is the time in milliseconds that ellapsed from the moment the animation started
	     *  to the current animation frame.  The frameRate property is the current frame rate in frames / second. Return false from function,
	     *  if you don't need to redraw layer/layers on some frames.
	     * @param {Kinetic.Layer|Array} [layers] layer(s) to be redrawn on each animation frame. Can be a layer, an array of layers, or null.
	     *  Not specifying a node will result in no redraw.
	     * @example
	     * // move a node to the right at 50 pixels / second
	     * var velocity = 50;
	     *
	     * var anim = new Kinetic.Animation(function(frame) {
	     *   var dist = velocity * (frame.timeDiff / 1000);
	     *   node.move(dist, 0);
	     * }, layer);
	     *
	     * anim.start();
	     */
	    Kinetic.Animation = function(func, layers) {
	        var Anim = Kinetic.Animation;
	        this.func = func;
	        this.setLayers(layers);
	        this.id = Anim.animIdCounter++;
	        this.frame = {
	            time: 0,
	            timeDiff: 0,
	            lastTime: now()
	        };
	    };
	    /*
	     * Animation methods
	     */
	    Kinetic.Animation.prototype = {
	        /**
	         * set layers to be redrawn on each animation frame
	         * @method
	         * @memberof Kinetic.Animation.prototype
	         * @param {Kinetic.Layer|Array} [layers] layer(s) to be redrawn.&nbsp; Can be a layer, an array of layers, or null.  Not specifying a node will result in no redraw.
	         */
	        setLayers: function(layers) {
	            var lays = [];
	            // if passing in no layers
	            if (!layers) {
	                lays = [];
	            }
	            // if passing in an array of Layers
	            // NOTE: layers could be an array or Kinetic.Collection.  for simplicity, I'm just inspecting
	            // the length property to check for both cases
	            else if (layers.length > 0) {
	                lays = layers;
	            }
	            // if passing in a Layer
	            else {
	                lays = [layers];
	            }

	            this.layers = lays;
	        },
	        /**
	         * get layers
	         * @method
	         * @memberof Kinetic.Animation.prototype
	         */
	        getLayers: function() {
	            return this.layers;
	        },
	        /**
	         * add layer.  Returns true if the layer was added, and false if it was not
	         * @method
	         * @memberof Kinetic.Animation.prototype
	         * @param {Kinetic.Layer} layer
	         */
	        addLayer: function(layer) {
	            var layers = this.layers,
	                len, n;

	            if (layers) {
	                len = layers.length;

	                // don't add the layer if it already exists
	                for (n = 0; n < len; n++) {
	                    if (layers[n]._id === layer._id) {
	                        return false;
	                    }
	                }
	            }
	            else {
	                this.layers = [];
	            }

	            this.layers.push(layer);
	            return true;
	        },
	        /**
	         * determine if animation is running or not.  returns true or false
	         * @method
	         * @memberof Kinetic.Animation.prototype
	         */
	        isRunning: function() {
	            var a = Kinetic.Animation,
	                animations = a.animations,
	                len = animations.length,
	                n;

	            for(n = 0; n < len; n++) {
	                if(animations[n].id === this.id) {
	                    return true;
	                }
	            }
	            return false;
	        },
	        /**
	         * start animation
	         * @method
	         * @memberof Kinetic.Animation.prototype
	         */
	        start: function() {
	            var Anim = Kinetic.Animation;
	            this.stop();
	            this.frame.timeDiff = 0;
	            this.frame.lastTime = now();
	            Anim._addAnimation(this);
	        },
	        /**
	         * stop animation
	         * @method
	         * @memberof Kinetic.Animation.prototype
	         */
	        stop: function() {
	            Kinetic.Animation._removeAnimation(this);
	        },
	        _updateFrameObject: function(time) {
	            this.frame.timeDiff = time - this.frame.lastTime;
	            this.frame.lastTime = time;
	            this.frame.time += this.frame.timeDiff;
	            this.frame.frameRate = 1000 / this.frame.timeDiff;
	        }
	    };
	    Kinetic.Animation.animations = [];
	    Kinetic.Animation.animIdCounter = 0;
	    Kinetic.Animation.animRunning = false;

	    Kinetic.Animation._addAnimation = function(anim) {
	        this.animations.push(anim);
	        this._handleAnimation();
	    };
	    Kinetic.Animation._removeAnimation = function(anim) {
	        var id = anim.id,
	            animations = this.animations,
	            len = animations.length,
	            n;

	        for(n = 0; n < len; n++) {
	            if(animations[n].id === id) {
	                this.animations.splice(n, 1);
	                break;
	            }
	        }
	    };

	    Kinetic.Animation._runFrames = function() {
	        var layerHash = {},
	            animations = this.animations,
	            anim, layers, func, n, i, layersLen, layer, key, needRedraw;
	        /*
	         * loop through all animations and execute animation
	         *  function.  if the animation object has specified node,
	         *  we can add the node to the nodes hash to eliminate
	         *  drawing the same node multiple times.  The node property
	         *  can be the stage itself or a layer
	         */
	        /*
	         * WARNING: don't cache animations.length because it could change while
	         * the for loop is running, causing a JS error
	         */

	        for(n = 0; n < animations.length; n++) {
	            anim = animations[n];
	            layers = anim.layers;
	            func = anim.func;


	            anim._updateFrameObject(now());
	            layersLen = layers.length;

	            // if animation object has a function, execute it
	            if (func) {
	                // allow anim bypassing drawing
	                needRedraw = (func.call(anim, anim.frame) !== false);
	            } else {
	                needRedraw = true;
	            }
	            if (needRedraw) {
	                for (i = 0; i < layersLen; i++) {
	                    layer = layers[i];

	                    if (layer._id !== undefined) {
	                        layerHash[layer._id] = layer;
	                    }
	                }
	            }
	        }

	        for (key in layerHash) {
	            layerHash[key].draw();
	        }
	    };
	    Kinetic.Animation._animationLoop = function() {
	        var Anim = Kinetic.Animation;

	        if(Anim.animations.length) {
	            requestAnimFrame(Anim._animationLoop);
	            Anim._runFrames();
	        }
	        else {
	            Anim.animRunning = false;
	        }
	    };
	    Kinetic.Animation._handleAnimation = function() {
	        var that = this;
	        if(!this.animRunning) {
	            this.animRunning = true;
	            that._animationLoop();
	        }
	    };

	    var moveTo = Kinetic.Node.prototype.moveTo;
	    Kinetic.Node.prototype.moveTo = function(container) {
	        moveTo.call(this, container);
	    };

	    /**
	     * batch draw
	     * @method
	     * @memberof Kinetic.Base.prototype
	     */
	    Kinetic.BaseLayer.prototype.batchDraw = function() {
	        var that = this,
	            Anim = Kinetic.Animation;

	        if (!this.batchAnim) {
	            this.batchAnim = new Anim(function() {
	                if (that.lastBatchDrawTime && now() - that.lastBatchDrawTime > BATCH_DRAW_STOP_TIME_DIFF) {
	                    that.batchAnim.stop();
	                }
	            }, this);
	        }

	        this.lastBatchDrawTime = now();

	        if (!this.batchAnim.isRunning()) {
	            this.draw();
	            this.batchAnim.start();
	        }
	    };

	    /**
	     * batch draw
	     * @method
	     * @memberof Kinetic.Stage.prototype
	     */
	    Kinetic.Stage.prototype.batchDraw = function() {
	        this.getChildren().each(function(layer) {
	            layer.batchDraw();
	        });
	    };
	})(this);
	;(function() {
	    var blacklist = {
	        node: 1,
	        duration: 1,
	        easing: 1,
	        onFinish: 1,
	        yoyo: 1
	    },

	    PAUSED = 1,
	    PLAYING = 2,
	    REVERSING = 3,

	    idCounter = 0;

	    /**
	     * Tween constructor.  Tweens enable you to animate a node between the current state and a new state.
	     *  You can play, pause, reverse, seek, reset, and finish tweens.  By default, tweens are animated using
	     *  a linear easing.  For more tweening options, check out {@link Kinetic.Easings}
	     * @constructor
	     * @memberof Kinetic
	     * @example
	     * // instantiate new tween which fully rotates a node in 1 second
	     * var tween = new Kinetic.Tween({
	     *   node: node,
	     *   rotationDeg: 360,
	     *   duration: 1,
	     *   easing: Kinetic.Easings.EaseInOut
	     * });
	     *
	     * // play tween
	     * tween.play();
	     *
	     * // pause tween
	     * tween.pause();
	     */
	    Kinetic.Tween = function(config) {
	        var that = this,
	            node = config.node,
	            nodeId = node._id,
	            duration,
	            easing = config.easing || Kinetic.Easings.Linear,
	            yoyo = !!config.yoyo,
	            key;

	        if (typeof config.duration === 'undefined') {
	            duration = 1;
	        } else if (config.duration === 0) {  // zero is bad value for duration
	            duration = 0.001;
	        } else {
	            duration = config.duration;
	        }
	        this.node = node;
	        this._id = idCounter++;

	        this.anim = new Kinetic.Animation(function() {
	            that.tween.onEnterFrame();
	        }, node.getLayer() || ((node instanceof Kinetic.Stage) ? node.getLayers() : null));

	        this.tween = new Tween(key, function(i) {
	            that._tweenFunc(i);
	        }, easing, 0, 1, duration * 1000, yoyo);

	        this._addListeners();

	        // init attrs map
	        if (!Kinetic.Tween.attrs[nodeId]) {
	            Kinetic.Tween.attrs[nodeId] = {};
	        }
	        if (!Kinetic.Tween.attrs[nodeId][this._id]) {
	            Kinetic.Tween.attrs[nodeId][this._id] = {};
	        }
	        // init tweens map
	        if (!Kinetic.Tween.tweens[nodeId]) {
	            Kinetic.Tween.tweens[nodeId] = {};
	        }

	        for (key in config) {
	            if (blacklist[key] === undefined) {
	                this._addAttr(key, config[key]);
	            }
	        }

	        this.reset();

	        // callbacks
	        this.onFinish = config.onFinish;
	        this.onReset = config.onReset;
	    };

	    // start/diff object = attrs.nodeId.tweenId.attr
	    Kinetic.Tween.attrs = {};
	    // tweenId = tweens.nodeId.attr
	    Kinetic.Tween.tweens = {};

	    Kinetic.Tween.prototype = {
	        _addAttr: function(key, end) {
	            var node = this.node,
	                nodeId = node._id,
	                start, diff, tweenId, n, len;

	            // remove conflict from tween map if it exists
	            tweenId = Kinetic.Tween.tweens[nodeId][key];

	            if (tweenId) {
	                delete Kinetic.Tween.attrs[nodeId][tweenId][key];
	            }

	            // add to tween map
	            start = node.getAttr(key);

	            if (Kinetic.Util._isArray(end)) {
	                diff = [];
	                len = end.length;
	                for (n=0; n<len; n++) {
	                    diff.push(end[n] - start[n]);
	                }

	            }
	            else {
	                diff = end - start;
	            }

	            Kinetic.Tween.attrs[nodeId][this._id][key] = {
	                start: start,
	                diff: diff
	            };
	            Kinetic.Tween.tweens[nodeId][key] = this._id;
	        },
	        _tweenFunc: function(i) {
	            var node = this.node,
	                attrs = Kinetic.Tween.attrs[node._id][this._id],
	                key, attr, start, diff, newVal, n, len;

	            for (key in attrs) {
	                attr = attrs[key];
	                start = attr.start;
	                diff = attr.diff;

	                if (Kinetic.Util._isArray(start)) {
	                    newVal = [];
	                    len = start.length;
	                    for (n=0; n<len; n++) {
	                        newVal.push(start[n] + (diff[n] * i));
	                    }
	                }
	                else {
	                    newVal = start + (diff * i);
	                }

	                node.setAttr(key, newVal);
	            }
	        },
	        _addListeners: function() {
	            var that = this;

	            // start listeners
	            this.tween.onPlay = function() {
	                that.anim.start();
	            };
	            this.tween.onReverse = function() {
	                that.anim.start();
	            };

	            // stop listeners
	            this.tween.onPause = function() {
	                that.anim.stop();
	            };
	            this.tween.onFinish = function() {
	                if (that.onFinish) {
	                    that.onFinish();
	                }
	            };
	            this.tween.onReset = function() {
	                if (that.onReset) {
	                    that.onReset();
	                }
	            };
	        },
	        /**
	         * play
	         * @method
	         * @memberof Kinetic.Tween.prototype
	         * @returns {Tween}
	         */
	        play: function() {
	            this.tween.play();
	            return this;
	        },
	        /**
	         * reverse
	         * @method
	         * @memberof Kinetic.Tween.prototype
	         * @returns {Tween}
	         */
	        reverse: function() {
	            this.tween.reverse();
	            return this;
	        },
	        /**
	         * reset
	         * @method
	         * @memberof Kinetic.Tween.prototype
	         * @returns {Tween}
	         */
	        reset: function() {
	            this.tween.reset();
	            return this;
	        },
	        /**
	         * seek
	         * @method
	         * @memberof Kinetic.Tween.prototype
	         * @param {Integer} t time in seconds between 0 and the duration
	         * @returns {Tween}
	         */
	        seek: function(t) {
	            this.tween.seek(t * 1000);
	            return this;
	        },
	        /**
	         * pause
	         * @method
	         * @memberof Kinetic.Tween.prototype
	         * @returns {Tween}
	         */
	        pause: function() {
	            this.tween.pause();
	            return this;
	        },
	        /**
	         * finish
	         * @method
	         * @memberof Kinetic.Tween.prototype
	         * @returns {Tween}
	         */
	        finish: function() {
	            this.tween.finish();
	            return this;
	        },
	        /**
	         * destroy
	         * @method
	         * @memberof Kinetic.Tween.prototype
	         */
	        destroy: function() {
	            var nodeId = this.node._id,
	                thisId = this._id,
	                attrs = Kinetic.Tween.tweens[nodeId],
	                key;

	            this.pause();

	            for (key in attrs) {
	                delete Kinetic.Tween.tweens[nodeId][key];
	            }

	            delete Kinetic.Tween.attrs[nodeId][thisId];
	        }
	    };

	    var Tween = function(prop, propFunc, func, begin, finish, duration, yoyo) {
	        this.prop = prop;
	        this.propFunc = propFunc;
	        this.begin = begin;
	        this._pos = begin;
	        this.duration = duration;
	        this._change = 0;
	        this.prevPos = 0;
	        this.yoyo = yoyo;
	        this._time = 0;
	        this._position = 0;
	        this._startTime = 0;
	        this._finish = 0;
	        this.func = func;
	        this._change = finish - this.begin;
	        this.pause();
	    };
	    /*
	     * Tween methods
	     */
	    Tween.prototype = {
	        fire: function(str) {
	            var handler = this[str];
	            if (handler) {
	                handler();
	            }
	        },
	        setTime: function(t) {
	            if(t > this.duration) {
	                if(this.yoyo) {
	                    this._time = this.duration;
	                    this.reverse();
	                }
	                else {
	                    this.finish();
	                }
	            }
	            else if(t < 0) {
	                if(this.yoyo) {
	                    this._time = 0;
	                    this.play();
	                }
	                else {
	                    this.reset();
	                }
	            }
	            else {
	                this._time = t;
	                this.update();
	            }
	        },
	        getTime: function() {
	            return this._time;
	        },
	        setPosition: function(p) {
	            this.prevPos = this._pos;
	            this.propFunc(p);
	            this._pos = p;
	        },
	        getPosition: function(t) {
	            if(t === undefined) {
	                t = this._time;
	            }
	            return this.func(t, this.begin, this._change, this.duration);
	        },
	        play: function() {
	            this.state = PLAYING;
	            this._startTime = this.getTimer() - this._time;
	            this.onEnterFrame();
	            this.fire('onPlay');
	        },
	        reverse: function() {
	            this.state = REVERSING;
	            this._time = this.duration - this._time;
	            this._startTime = this.getTimer() - this._time;
	            this.onEnterFrame();
	            this.fire('onReverse');
	        },
	        seek: function(t) {
	            this.pause();
	            this._time = t;
	            this.update();
	            this.fire('onSeek');
	        },
	        reset: function() {
	            this.pause();
	            this._time = 0;
	            this.update();
	            this.fire('onReset');
	        },
	        finish: function() {
	            this.pause();
	            this._time = this.duration;
	            this.update();
	            this.fire('onFinish');
	        },
	        update: function() {
	            this.setPosition(this.getPosition(this._time));
	        },
	        onEnterFrame: function() {
	            var t = this.getTimer() - this._startTime;
	            if(this.state === PLAYING) {
	                this.setTime(t);
	            }
	            else if (this.state === REVERSING) {
	                this.setTime(this.duration - t);
	            }
	        },
	        pause: function() {
	            this.state = PAUSED;
	            this.fire('onPause');
	        },
	        getTimer: function() {
	            return new Date().getTime();
	        }
	    };

	    /*
	    * These eases were ported from an Adobe Flash tweening library to JavaScript
	    * by Xaric
	    */

	    /**
	     * @namespace Easings
	     * @memberof Kinetic
	     */
	    Kinetic.Easings = {
	        /**
	        * back ease in
	        * @function
	        * @memberof Kinetic.Easings
	        */
	        'BackEaseIn': function(t, b, c, d) {
	            var s = 1.70158;
	            return c * (t /= d) * t * ((s + 1) * t - s) + b;
	        },
	        /**
	        * back ease out
	        * @function
	        * @memberof Kinetic.Easings
	        */
	        'BackEaseOut': function(t, b, c, d) {
	            var s = 1.70158;
	            return c * (( t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;
	        },
	        /**
	        * back ease in out
	        * @function
	        * @memberof Kinetic.Easings
	        */
	        'BackEaseInOut': function(t, b, c, d) {
	            var s = 1.70158;
	            if((t /= d / 2) < 1) {
	                return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;
	            }
	            return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;
	        },
	        /**
	        * elastic ease in
	        * @function
	        * @memberof Kinetic.Easings
	        */
	        'ElasticEaseIn': function(t, b, c, d, a, p) {
	            // added s = 0
	            var s = 0;
	            if(t === 0) {
	                return b;
	            }
	            if((t /= d) == 1) {
	                return b + c;
	            }
	            if(!p) {
	                p = d * 0.3;
	            }
	            if(!a || a < Math.abs(c)) {
	                a = c;
	                s = p / 4;
	            }
	            else {
	                s = p / (2 * Math.PI) * Math.asin(c / a);
	            }
	            return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;
	        },
	        /**
	        * elastic ease out
	        * @function
	        * @memberof Kinetic.Easings
	        */
	        'ElasticEaseOut': function(t, b, c, d, a, p) {
	            // added s = 0
	            var s = 0;
	            if(t === 0) {
	                return b;
	            }
	            if((t /= d) == 1) {
	                return b + c;
	            }
	            if(!p) {
	                p = d * 0.3;
	            }
	            if(!a || a < Math.abs(c)) {
	                a = c;
	                s = p / 4;
	            }
	            else {
	                s = p / (2 * Math.PI) * Math.asin(c / a);
	            }
	            return (a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * (2 * Math.PI) / p) + c + b);
	        },
	        /**
	        * elastic ease in out
	        * @function
	        * @memberof Kinetic.Easings
	        */
	        'ElasticEaseInOut': function(t, b, c, d, a, p) {
	            // added s = 0
	            var s = 0;
	            if(t === 0) {
	                return b;
	            }
	            if((t /= d / 2) == 2) {
	                return b + c;
	            }
	            if(!p) {
	                p = d * (0.3 * 1.5);
	            }
	            if(!a || a < Math.abs(c)) {
	                a = c;
	                s = p / 4;
	            }
	            else {
	                s = p / (2 * Math.PI) * Math.asin(c / a);
	            }
	            if(t < 1) {
	                return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;
	            }
	            return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p) * 0.5 + c + b;
	        },
	        /**
	        * bounce ease out
	        * @function
	        * @memberof Kinetic.Easings
	        */
	        'BounceEaseOut': function(t, b, c, d) {
	            if((t /= d) < (1 / 2.75)) {
	                return c * (7.5625 * t * t) + b;
	            }
	            else if(t < (2 / 2.75)) {
	                return c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;
	            }
	            else if(t < (2.5 / 2.75)) {
	                return c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;
	            }
	            else {
	                return c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;
	            }
	        },
	        /**
	        * bounce ease in
	        * @function
	        * @memberof Kinetic.Easings
	        */
	        'BounceEaseIn': function(t, b, c, d) {
	            return c - Kinetic.Easings.BounceEaseOut(d - t, 0, c, d) + b;
	        },
	        /**
	        * bounce ease in out
	        * @function
	        * @memberof Kinetic.Easings
	        */
	        'BounceEaseInOut': function(t, b, c, d) {
	            if(t < d / 2) {
	                return Kinetic.Easings.BounceEaseIn(t * 2, 0, c, d) * 0.5 + b;
	            }
	            else {
	                return Kinetic.Easings.BounceEaseOut(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;
	            }
	        },
	        /**
	        * ease in
	        * @function
	        * @memberof Kinetic.Easings
	        */
	        'EaseIn': function(t, b, c, d) {
	            return c * (t /= d) * t + b;
	        },
	        /**
	        * ease out
	        * @function
	        * @memberof Kinetic.Easings
	        */
	        'EaseOut': function(t, b, c, d) {
	            return -c * (t /= d) * (t - 2) + b;
	        },
	        /**
	        * ease in out
	        * @function
	        * @memberof Kinetic.Easings
	        */
	        'EaseInOut': function(t, b, c, d) {
	            if((t /= d / 2) < 1) {
	                return c / 2 * t * t + b;
	            }
	            return -c / 2 * ((--t) * (t - 2) - 1) + b;
	        },
	        /**
	        * strong ease in
	        * @function
	        * @memberof Kinetic.Easings
	        */
	        'StrongEaseIn': function(t, b, c, d) {
	            return c * (t /= d) * t * t * t * t + b;
	        },
	        /**
	        * strong ease out
	        * @function
	        * @memberof Kinetic.Easings
	        */
	        'StrongEaseOut': function(t, b, c, d) {
	            return c * (( t = t / d - 1) * t * t * t * t + 1) + b;
	        },
	        /**
	        * strong ease in out
	        * @function
	        * @memberof Kinetic.Easings
	        */
	        'StrongEaseInOut': function(t, b, c, d) {
	            if((t /= d / 2) < 1) {
	                return c / 2 * t * t * t * t * t + b;
	            }
	            return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;
	        },
	        /**
	        * linear
	        * @function
	        * @memberof Kinetic.Easings
	        */
	        'Linear': function(t, b, c, d) {
	            return c * t / d + b;
	        }
	    };
	})();
	;(function() {
	    Kinetic.DD = {
	        // properties
	        anim: new Kinetic.Animation(function() {
	            var b = this.dirty;
	            this.dirty = false;
	            return b;
	        }),
	        isDragging: false,
	        justDragged: false,
	        offset: {
	            x: 0,
	            y: 0
	        },
	        node: null,

	        // methods
	        _drag: function(evt) {
	            var dd = Kinetic.DD,
	                node = dd.node;

	            if(node) {
	               if(!dd.isDragging) {
	                    var pos = node.getStage().getPointerPosition();
	                    var dragDistance = node.dragDistance();
	                    var distance = Math.max(
	                        Math.abs(pos.x - dd.startPointerPos.x),
	                        Math.abs(pos.y - dd.startPointerPos.y)
	                    );
	                    if (distance < dragDistance) {
	                        return;
	                    }
	                }

	                node._setDragPosition(evt);
	                if(!dd.isDragging) {
	                    dd.isDragging = true;
	                    node.fire('dragstart', {
	                        type : 'dragstart',
	                        target : node,
	                        evt : evt
	                    }, true);
	                }

	                // execute ondragmove if defined
	                node.fire('dragmove', {
	                    type : 'dragmove',
	                    target : node,
	                    evt : evt
	                }, true);
	            }
	        },
	        _endDragBefore: function(evt) {
	            var dd = Kinetic.DD,
	                node = dd.node,
	                nodeType, layer;

	            if(node) {
	                nodeType = node.nodeType;
	                layer = node.getLayer();
	                dd.anim.stop();

	                // only fire dragend event if the drag and drop
	                // operation actually started.
	                if(dd.isDragging) {
	                    dd.isDragging = false;
	                    dd.justDragged = true;
	                    Kinetic.listenClickTap = false;

	                    if (evt) {
	                        evt.dragEndNode = node;
	                    }
	                }

	                delete dd.node;

	                (layer || node).draw();
	            }
	        },
	        _endDragAfter: function(evt) {
	            evt = evt || {};

	            var dragEndNode = evt.dragEndNode;

	            if (evt && dragEndNode) {
	                dragEndNode.fire('dragend', {
	                    type : 'dragend',
	                    target : dragEndNode,
	                    evt : evt
	                }, true);
	            }
	        }
	    };

	    // Node extenders

	    /**
	     * initiate drag and drop
	     * @method
	     * @memberof Kinetic.Node.prototype
	     */
	    Kinetic.Node.prototype.startDrag = function() {
	        var dd = Kinetic.DD,
	            stage = this.getStage(),
	            layer = this.getLayer(),
	            pos = stage.getPointerPosition(),
	            ap = this.getAbsolutePosition();

	        if(pos) {
	            if (dd.node) {
	                dd.node.stopDrag();
	            }

	            dd.node = this;
	            dd.startPointerPos = pos;
	            dd.offset.x = pos.x - ap.x;
	            dd.offset.y = pos.y - ap.y;
	            dd.anim.setLayers(layer || this.getLayers());
	            dd.anim.start();

	            this._setDragPosition();
	        }
	    };

	    Kinetic.Node.prototype._setDragPosition = function(evt) {
	        var dd = Kinetic.DD,
	            pos = this.getStage().getPointerPosition(),
	            dbf = this.getDragBoundFunc();
	        if (!pos) {
	            return;
	        }
	        var newNodePos = {
	            x: pos.x - dd.offset.x,
	            y: pos.y - dd.offset.y
	        };

	        if(dbf !== undefined) {
	            newNodePos = dbf.call(this, newNodePos, evt);
	        }
	        this.setAbsolutePosition(newNodePos);

	        if (!this._lastPos || this._lastPos.x !== newNodePos.x ||
	            this._lastPos.y !== newNodePos.y) {
	            dd.anim.dirty = true;
	        }

	        this._lastPos = newNodePos;
	    };

	    /**
	     * stop drag and drop
	     * @method
	     * @memberof Kinetic.Node.prototype
	     */
	    Kinetic.Node.prototype.stopDrag = function() {
	        var dd = Kinetic.DD,
	            evt = {};
	        dd._endDragBefore(evt);
	        dd._endDragAfter(evt);
	    };

	    Kinetic.Node.prototype.setDraggable = function(draggable) {
	        this._setAttr('draggable', draggable);
	        this._dragChange();
	    };

	    var origDestroy = Kinetic.Node.prototype.destroy;

	    Kinetic.Node.prototype.destroy = function() {
	        var dd = Kinetic.DD;

	        // stop DD
	        if(dd.node && dd.node._id === this._id) {

	            this.stopDrag();
	        }

	        origDestroy.call(this);
	    };

	    /**
	     * determine if node is currently in drag and drop mode
	     * @method
	     * @memberof Kinetic.Node.prototype
	     */
	    Kinetic.Node.prototype.isDragging = function() {
	        var dd = Kinetic.DD;
	        return !!(dd.node && dd.node._id === this._id && dd.isDragging);
	    };

	    Kinetic.Node.prototype._listenDrag = function() {
	        var that = this;

	        this._dragCleanup();

	        if (this.getClassName() === 'Stage') {
	            this.on('contentMousedown.kinetic contentTouchstart.kinetic', function(evt) {
	                if(!Kinetic.DD.node) {
	                    that.startDrag(evt);
	                }
	            });
	        }
	        else {
	            this.on('mousedown.kinetic touchstart.kinetic', function(evt) {
	                // ignore right and middle buttons
	                if (evt.evt.button === 1 || evt.evt.button === 2) {
	                    return;
	                }
	                if(!Kinetic.DD.node) {
	                    that.startDrag(evt);
	                }
	            });
	        }

	        // listening is required for drag and drop
	        /*
	        this._listeningEnabled = true;
	        this._clearSelfAndAncestorCache('listeningEnabled');
	        */
	    };

	    Kinetic.Node.prototype._dragChange = function() {
	        if(this.attrs.draggable) {
	            this._listenDrag();
	        }
	        else {
	            // remove event listeners
	            this._dragCleanup();

	            /*
	             * force drag and drop to end
	             * if this node is currently in
	             * drag and drop mode
	             */
	            var stage = this.getStage();
	            var dd = Kinetic.DD;
	            if(stage && dd.node && dd.node._id === this._id) {
	                dd.node.stopDrag();
	            }
	        }
	    };

	    Kinetic.Node.prototype._dragCleanup = function() {
	        if (this.getClassName() === 'Stage') {
	            this.off('contentMousedown.kinetic');
	            this.off('contentTouchstart.kinetic');
	        } else {
	            this.off('mousedown.kinetic');
	            this.off('touchstart.kinetic');
	        }
	    };

	    Kinetic.Factory.addGetterSetter(Kinetic.Node, 'dragBoundFunc');

	    /**
	     * get/set drag bound function.  This is used to override the default
	     *  drag and drop position
	     * @name dragBoundFunc
	     * @method
	     * @memberof Kinetic.Node.prototype
	     * @param {Function} dragBoundFunc
	     * @returns {Function}
	     * @example
	     * // get drag bound function
	     * var dragBoundFunc = node.dragBoundFunc();
	     *
	     * // create vertical drag and drop
	     * node.dragBoundFunc(function(pos){
	     *   return {
	     *     x: this.getAbsolutePosition().x,
	     *     y: pos.y
	     *   };
	     * });
	     */

	    Kinetic.Factory.addGetter(Kinetic.Node, 'draggable', false);
	    Kinetic.Factory.addOverloadedGetterSetter(Kinetic.Node, 'draggable');

	     /**
	     * get/set draggable flag
	     * @name draggable
	     * @method
	     * @memberof Kinetic.Node.prototype
	     * @param {Boolean} draggable
	     * @returns {Boolean}
	     * @example
	     * // get draggable flag
	     * var draggable = node.draggable();
	     *
	     * // enable drag and drop
	     * node.draggable(true);
	     *
	     * // disable drag and drop
	     * node.draggable(false);
	     */

	    var html = Kinetic.document.documentElement;
	    html.addEventListener('mouseup', Kinetic.DD._endDragBefore, true);
	    html.addEventListener('touchend', Kinetic.DD._endDragBefore, true);

	    html.addEventListener('mouseup', Kinetic.DD._endDragAfter, false);
	    html.addEventListener('touchend', Kinetic.DD._endDragAfter, false);

	})();
	;(function() {
	    Kinetic.Util.addMethods(Kinetic.Container, {
	        __init: function(config) {
	            this.children = new Kinetic.Collection();
	            Kinetic.Node.call(this, config);
	        },
	        /**
	         * returns a {@link Kinetic.Collection} of direct descendant nodes
	         * @method
	         * @memberof Kinetic.Container.prototype
	         * @param {Function} [filterFunc] filter function
	         * @returns {Kinetic.Collection}
	         * @example
	         * // get all children
	         * var children = layer.getChildren();
	         *
	         * // get only circles
	         * var circles = layer.getChildren(function(node){
	         *    return node.getClassName() === 'Circle';
	         * });
	         */
	        getChildren: function(filterFunc) {
	            if (!filterFunc) {
	                return this.children;
	            } else {
	                var results = new Kinetic.Collection();
	                this.children.each(function(child){
	                    if (filterFunc(child)) {
	                        results.push(child);
	                    }
	                });
	                return results;
	            }
	        },
	        /**
	         * determine if node has children
	         * @method
	         * @memberof Kinetic.Container.prototype
	         * @returns {Boolean}
	         */
	        hasChildren: function() {
	            return this.getChildren().length > 0;
	        },
	        /**
	         * remove all children
	         * @method
	         * @memberof Kinetic.Container.prototype
	         */
	        removeChildren: function() {
	            var children = Kinetic.Collection.toCollection(this.children);
	            var child;
	            for (var i = 0; i < children.length; i++) {
	                child = children[i];
	                // reset parent to prevent many _setChildrenIndices calls
	                delete child.parent;
	                child.index = 0;
	                if (child.hasChildren()) {
	                    child.removeChildren();
	                }
	                child.remove();
	            }
	            children = null;
	            this.children = new Kinetic.Collection();
	            return this;
	        },
	        /**
	         * destroy all children
	         * @method
	         * @memberof Kinetic.Container.prototype
	         */
	        destroyChildren: function() {
	           var children = Kinetic.Collection.toCollection(this.children);
	            var child;
	            for (var i = 0; i < children.length; i++) {
	                child = children[i];
	                // reset parent to prevent many _setChildrenIndices calls
	                delete child.parent;
	                child.index = 0;
	                child.destroy();
	            }
	            children = null;
	            this.children = new Kinetic.Collection();
	            return this;
	        },
	        /**
	         * Add node or nodes to container.
	         * @method
	         * @memberof Kinetic.Container.prototype
	         * @param {...Kinetic.Node} child
	         * @returns {Container}
	         * @example
	         * layer.add(shape1, shape2, shape3);
	         */
	        add: function(child) {
	            if (arguments.length > 1) {
	                for (var i = 0; i < arguments.length; i++) {
	                    this.add(arguments[i]);
	                }
	                return this;
	            }
	            if (child.getParent()) {
	                child.moveTo(this);
	                return this;
	            }
	            var children = this.children;
	            this._validateAdd(child);
	            child.index = children.length;
	            child.parent = this;
	            children.push(child);
	            this._fire('add', {
	                child: child
	            });

	            // if node under drag we need to update drag animation
	            if (child.isDragging()) {
	                Kinetic.DD.anim.setLayers(child.getLayer());
	            }

	            // chainable
	            return this;
	        },
	        destroy: function() {
	            // destroy children
	            if (this.hasChildren()) {
	                this.destroyChildren();
	            }
	            // then destroy self
	            Kinetic.Node.prototype.destroy.call(this);
	        },
	        /**
	         * return a {@link Kinetic.Collection} of nodes that match the selector.  Use '#' for id selections
	         * and '.' for name selections.  You can also select by type or class name. Pass multiple selectors
	         * separated by a space.
	         * @method
	         * @memberof Kinetic.Container.prototype
	         * @param {String} selector
	         * @returns {Collection}
	         * @example
	         * // select node with id foo
	         * var node = stage.find('#foo');
	         *
	         * // select nodes with name bar inside layer
	         * var nodes = layer.find('.bar');
	         *
	         * // select all groups inside layer
	         * var nodes = layer.find('Group');
	         *
	         * // select all rectangles inside layer
	         * var nodes = layer.find('Rect');
	         *
	         * // select node with an id of foo or a name of bar inside layer
	         * var nodes = layer.find('#foo, .bar');
	         */
	        find: function(selector) {
	            var retArr = [],
	                selectorArr = selector.replace(/ /g, '').split(','),
	                len = selectorArr.length,
	                n, i, sel, arr, node, children, clen;

	            for (n = 0; n < len; n++) {
	                sel = selectorArr[n];

	                // id selector
	                if(sel.charAt(0) === '#') {
	                    node = this._getNodeById(sel.slice(1));
	                    if(node) {
	                        retArr.push(node);
	                    }
	                }
	                // name selector
	                else if(sel.charAt(0) === '.') {
	                    arr = this._getNodesByName(sel.slice(1));
	                    retArr = retArr.concat(arr);
	                }
	                // unrecognized selector, pass to children
	                else {
	                    children = this.getChildren();
	                    clen = children.length;
	                    for(i = 0; i < clen; i++) {
	                        retArr = retArr.concat(children[i]._get(sel));
	                    }
	                }
	            }

	            return Kinetic.Collection.toCollection(retArr);
	        },
	        _getNodeById: function(key) {
	            var node = Kinetic.ids[key];

	            if(node !== undefined && this.isAncestorOf(node)) {
	                return node;
	            }
	            return null;
	        },
	        _getNodesByName: function(key) {
	            var arr = Kinetic.names[key] || [];
	            return this._getDescendants(arr);
	        },
	        _get: function(selector) {
	            var retArr = Kinetic.Node.prototype._get.call(this, selector);
	            var children = this.getChildren();
	            var len = children.length;
	            for(var n = 0; n < len; n++) {
	                retArr = retArr.concat(children[n]._get(selector));
	            }
	            return retArr;
	        },
	        // extenders
	        toObject: function() {
	            var obj = Kinetic.Node.prototype.toObject.call(this);

	            obj.children = [];

	            var children = this.getChildren();
	            var len = children.length;
	            for(var n = 0; n < len; n++) {
	                var child = children[n];
	                obj.children.push(child.toObject());
	            }

	            return obj;
	        },
	        _getDescendants: function(arr) {
	            var retArr = [];
	            var len = arr.length;
	            for(var n = 0; n < len; n++) {
	                var node = arr[n];
	                if(this.isAncestorOf(node)) {
	                    retArr.push(node);
	                }
	            }

	            return retArr;
	        },
	        /**
	         * determine if node is an ancestor
	         * of descendant
	         * @method
	         * @memberof Kinetic.Container.prototype
	         * @param {Kinetic.Node} node
	         */
	        isAncestorOf: function(node) {
	            var parent = node.getParent();
	            while(parent) {
	                if(parent._id === this._id) {
	                    return true;
	                }
	                parent = parent.getParent();
	            }

	            return false;
	        },
	        clone: function(obj) {
	            // call super method
	            var node = Kinetic.Node.prototype.clone.call(this, obj);

	            this.getChildren().each(function(no) {
	                node.add(no.clone());
	            });
	            return node;
	        },
	        /**
	         * get all shapes that intersect a point.  Note: because this method must clear a temporary
	         * canvas and redraw every shape inside the container, it should only be used for special sitations
	         * because it performs very poorly.  Please use the {@link Kinetic.Stage#getIntersection} method if at all possible
	         * because it performs much better
	         * @method
	         * @memberof Kinetic.Container.prototype
	         * @param {Object} pos
	         * @param {Number} pos.x
	         * @param {Number} pos.y
	         * @returns {Array} array of shapes
	         */
	        getAllIntersections: function(pos) {
	            var arr = [];

	            this.find('Shape').each(function(shape) {
	                if(shape.isVisible() && shape.intersects(pos)) {
	                    arr.push(shape);
	                }
	            });

	            return arr;
	        },
	        _setChildrenIndices: function() {
	            this.children.each(function(child, n) {
	                child.index = n;
	            });
	        },
	        drawScene: function(can, top) {
	            var layer = this.getLayer(),
	                canvas = can || (layer && layer.getCanvas()),
	                context = canvas && canvas.getContext(),
	                cachedCanvas = this._cache.canvas,
	                cachedSceneCanvas = cachedCanvas && cachedCanvas.scene;

	            if (this.isVisible()) {
	                if (cachedSceneCanvas) {
	                    this._drawCachedSceneCanvas(context);
	                }
	                else {
	                    this._drawChildren(canvas, 'drawScene', top);
	                }
	            }
	            return this;
	        },
	        drawHit: function(can, top) {
	            var layer = this.getLayer(),
	                canvas = can || (layer && layer.hitCanvas),
	                context = canvas && canvas.getContext(),
	                cachedCanvas = this._cache.canvas,
	                cachedHitCanvas = cachedCanvas && cachedCanvas.hit;

	            if (this.shouldDrawHit(canvas)) {
	                if (layer) {
	                    layer.clearHitCache();
	                }
	                if (cachedHitCanvas) {
	                    this._drawCachedHitCanvas(context);
	                }
	                else {
	                    this._drawChildren(canvas, 'drawHit', top);
	                }
	            }
	            return this;
	        },
	        _drawChildren: function(canvas, drawMethod, top) {
	            var layer = this.getLayer(),
	                context = canvas && canvas.getContext(),
	                clipWidth = this.getClipWidth(),
	                clipHeight = this.getClipHeight(),
	                hasClip = clipWidth && clipHeight,
	                clipX, clipY;

	            if (hasClip && layer) {
	                clipX = this.getClipX();
	                clipY = this.getClipY();

	                context.save();
	                layer._applyTransform(this, context);
	                context.beginPath();
	                context.rect(clipX, clipY, clipWidth, clipHeight);
	                context.clip();
	                context.reset();
	            }

	            this.children.each(function(child) {
	                child[drawMethod](canvas, top);
	            });

	            if (hasClip) {
	                context.restore();
	            }
	        },
	        shouldDrawHit: function(canvas) {
	            var layer = this.getLayer();
	            var dd = Kinetic.DD;
	            var layerUnderDrag = dd && Kinetic.isDragging() && (Kinetic.DD.anim.getLayers().indexOf(layer) !== -1);
	            return  (canvas && canvas.isCache) || (layer && layer.hitGraphEnabled())
	                && this.isVisible() && !layerUnderDrag;
	        }
	    });

	    Kinetic.Util.extend(Kinetic.Container, Kinetic.Node);
	    // deprecated methods
	    Kinetic.Container.prototype.get = Kinetic.Container.prototype.find;

	    // add getters setters
	    Kinetic.Factory.addComponentsGetterSetter(Kinetic.Container, 'clip', ['x', 'y', 'width', 'height']);
	    /**
	     * get/set clip
	     * @method
	     * @name clip
	     * @memberof Kinetic.Container.prototype
	     * @param {Object} clip
	     * @param {Number} clip.x
	     * @param {Number} clip.y
	     * @param {Number} clip.width
	     * @param {Number} clip.height
	     * @returns {Object}
	     * @example
	     * // get clip
	     * var clip = container.clip();
	     *
	     * // set clip
	     * container.setClip({
	     *   x: 20,
	     *   y: 20,
	     *   width: 20,
	     *   height: 20
	     * });
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Container, 'clipX');
	    /**
	     * get/set clip x
	     * @name clipX
	     * @method
	     * @memberof Kinetic.Container.prototype
	     * @param {Number} x
	     * @returns {Number}
	     * @example
	     * // get clip x
	     * var clipX = container.clipX();
	     *
	     * // set clip x
	     * container.clipX(10);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Container, 'clipY');
	    /**
	     * get/set clip y
	     * @name clipY
	     * @method
	     * @memberof Kinetic.Container.prototype
	     * @param {Number} y
	     * @returns {Number}
	     * @example
	     * // get clip y
	     * var clipY = container.clipY();
	     *
	     * // set clip y
	     * container.clipY(10);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Container, 'clipWidth');
	    /**
	     * get/set clip width
	     * @name clipWidth
	     * @method
	     * @memberof Kinetic.Container.prototype
	     * @param {Number} width
	     * @returns {Number}
	     * @example
	     * // get clip width
	     * var clipWidth = container.clipWidth();
	     *
	     * // set clip width
	     * container.clipWidth(100);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Container, 'clipHeight');
	    /**
	     * get/set clip height
	     * @name clipHeight
	     * @method
	     * @memberof Kinetic.Container.prototype
	     * @param {Number} height
	     * @returns {Number}
	     * @example
	     * // get clip height
	     * var clipHeight = container.clipHeight();
	     *
	     * // set clip height
	     * container.clipHeight(100);
	     */

	    Kinetic.Collection.mapMethods(Kinetic.Container);
	})();
	;(function() {
	    var HAS_SHADOW = 'hasShadow';

	    function _fillFunc(context) {
	        context.fill();
	    }
	    function _strokeFunc(context) {
	        context.stroke();
	    }
	    function _fillFuncHit(context) {
	        context.fill();
	    }
	    function _strokeFuncHit(context) {
	        context.stroke();
	    }

	    function _clearHasShadowCache() {
	        this._clearCache(HAS_SHADOW);
	    }

	    Kinetic.Util.addMethods(Kinetic.Shape, {
	        __init: function(config) {
	            this.nodeType = 'Shape';
	            this._fillFunc = _fillFunc;
	            this._strokeFunc = _strokeFunc;
	            this._fillFuncHit = _fillFuncHit;
	            this._strokeFuncHit = _strokeFuncHit;

	            // set colorKey
	            var shapes = Kinetic.shapes;
	            var key;

	            while(true) {
	                key = Kinetic.Util.getRandomColor();
	                if(key && !( key in shapes)) {
	                    break;
	                }
	            }

	            this.colorKey = key;
	            shapes[key] = this;

	            // call super constructor
	            Kinetic.Node.call(this, config);

	            this.on('shadowColorChange.kinetic shadowBlurChange.kinetic shadowOffsetChange.kinetic shadowOpacityChange.kinetic shadowEnabledChange.kinetic', _clearHasShadowCache);
	        },
	        hasChildren: function() {
	            return false;
	        },
	        getChildren: function() {
	            return [];
	        },
	        /**
	         * get canvas context tied to the layer
	         * @method
	         * @memberof Kinetic.Shape.prototype
	         * @returns {Kinetic.Context}
	         */
	        getContext: function() {
	            return this.getLayer().getContext();
	        },
	        /**
	         * get canvas renderer tied to the layer.  Note that this returns a canvas renderer, not a canvas element
	         * @method
	         * @memberof Kinetic.Shape.prototype
	         * @returns {Kinetic.Canvas}
	         */
	        getCanvas: function() {
	            return this.getLayer().getCanvas();
	        },
	        /**
	         * returns whether or not a shadow will be rendered
	         * @method
	         * @memberof Kinetic.Shape.prototype
	         * @returns {Boolean}
	         */
	        hasShadow: function() {
	            return this._getCache(HAS_SHADOW, this._hasShadow);
	        },
	        _hasShadow: function() {
	            return this.getShadowEnabled() && (this.getShadowOpacity() !== 0 && !!(this.getShadowColor() || this.getShadowBlur() || this.getShadowOffsetX() || this.getShadowOffsetY()));
	        },
	        /**
	         * returns whether or not the shape will be filled
	         * @method
	         * @memberof Kinetic.Shape.prototype
	         * @returns {Boolean}
	         */
	        hasFill: function() {
	            return !!(this.getFill() || this.getFillPatternImage() || this.getFillLinearGradientColorStops() || this.getFillRadialGradientColorStops());
	        },
	        /**
	         * returns whether or not the shape will be stroked
	         * @method
	         * @memberof Kinetic.Shape.prototype
	         * @returns {Boolean}
	         */
	        hasStroke: function() {
	            return !!(this.stroke() || this.strokeRed() || this.strokeGreen() || this.strokeBlue());
	        },
	        /**
	         * determines if point is in the shape, regardless if other shapes are on top of it.  Note: because
	         *  this method clears a temporary canvas and then redraws the shape, it performs very poorly if executed many times
	         *  consecutively.  Please use the {@link Kinetic.Stage#getIntersection} method if at all possible
	         *  because it performs much better
	         * @method
	         * @memberof Kinetic.Shape.prototype
	         * @param {Object} point 
	         * @param {Number} point.x
	         * @param {Number} point.y
	         * @returns {Boolean}
	         */
	        intersects: function(point) {
	            var stage = this.getStage(),
	                bufferHitCanvas = stage.bufferHitCanvas,
	                p;

	            bufferHitCanvas.getContext().clear();
	            this.drawScene(bufferHitCanvas);
	            p = bufferHitCanvas.context.getImageData(Math.round(point.x), Math.round(point.y), 1, 1).data;
	            return p[3] > 0;
	        },
	        // extends Node.prototype.destroy 
	        destroy: function() {
	            Kinetic.Node.prototype.destroy.call(this);
	            delete Kinetic.shapes[this.colorKey];
	        },
	        _useBufferCanvas: function() {
	            return (this.hasShadow() || this.getAbsoluteOpacity() !== 1) && this.hasFill() && this.hasStroke() && this.getStage();
	        },
	        drawScene: function(can, top) {
	            var layer = this.getLayer(),
	                canvas = can || layer.getCanvas(),
	                context = canvas.getContext(),
	                cachedCanvas = this._cache.canvas,
	                drawFunc = this.sceneFunc(),
	                hasShadow = this.hasShadow(),
	                stage, bufferCanvas, bufferContext;

	            if(this.isVisible()) {
	                if (cachedCanvas) {
	                    this._drawCachedSceneCanvas(context);
	                }
	                else if (drawFunc) {
	                    context.save();
	                    // if buffer canvas is needed
	                    if (this._useBufferCanvas()) {
	                        stage = this.getStage();
	                        bufferCanvas = stage.bufferCanvas;
	                        bufferContext = bufferCanvas.getContext();
	                        bufferContext.clear();
	                        bufferContext.save();
	                        bufferContext._applyLineJoin(this);
	                        // layer might be undefined if we are using cache before adding to layer
	                        if (layer) {
	                            layer._applyTransform(this, bufferContext, top);
	                        } else {
	                            var m = this.getAbsoluteTransform(top).getMatrix();
	                            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);
	                        }
	                     
	                        drawFunc.call(this, bufferContext);
	                        bufferContext.restore();

	                        if (hasShadow && !canvas.hitCanvas) {
	                            context.save();
	                            context._applyShadow(this);
	                            context.drawImage(bufferCanvas._canvas, 0, 0);
	                            context.restore();
	                        }

	                        context._applyOpacity(this);
	                        context.drawImage(bufferCanvas._canvas, 0, 0);
	                    }
	                    // if buffer canvas is not needed
	                    else {
	                        context._applyLineJoin(this);
	                        // layer might be undefined if we are using cache before adding to layer
	                        if (layer) {
	                            layer._applyTransform(this, context, top);
	                        } else {
	                            var o = this.getAbsoluteTransform(top).getMatrix();
	                            context.transform(o[0], o[1], o[2], o[3], o[4], o[5]);
	                        }
	               
	                        if (hasShadow && !canvas.hitCanvas) {
	                            context.save();
	                            context._applyShadow(this);
	                            drawFunc.call(this, context);
	                            context.restore();
	                        }

	                        context._applyOpacity(this);
	                        drawFunc.call(this, context);
	                    }
	                    context.restore();
	                }
	            }

	            return this;
	        },
	        drawHit: function(can, top) {
	            var layer = this.getLayer(),
	                canvas = can || layer.hitCanvas,
	                context = canvas.getContext(),
	                drawFunc = this.hitFunc() || this.sceneFunc(),
	                cachedCanvas = this._cache.canvas,
	                cachedHitCanvas = cachedCanvas && cachedCanvas.hit;

	            if(this.shouldDrawHit(canvas)) {
	                if (layer) {
	                    layer.clearHitCache();
	                }
	                if (cachedHitCanvas) {
	                    this._drawCachedHitCanvas(context);
	                }
	                else if (drawFunc) {
	                    context.save();
	                    context._applyLineJoin(this);
	                    if (layer) {
	                        layer._applyTransform(this, context, top);
	                    } else {
	                        var m = this.getAbsoluteTransform(top).getMatrix();
	                        context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);
	                    }
	                   
	                    drawFunc.call(this, context);
	                    context.restore();
	                }
	                
	            }

	            return this;
	        },
	        /**
	        * draw hit graph using the cached scene canvas
	        * @method
	        * @memberof Kinetic.Shape.prototype
	        * @param {Integer} alphaThreshold alpha channel threshold that determines whether or not
	        *  a pixel should be drawn onto the hit graph.  Must be a value between 0 and 255.  
	        *  The default is 0
	        * @returns {Kinetic.Shape}
	        * @example
	        * shape.cache();
	        * shape.drawHitFromCache();
	        */
	        drawHitFromCache: function(alphaThreshold) {
	            var threshold = alphaThreshold || 0,
	                cachedCanvas = this._cache.canvas,
	                sceneCanvas = this._getCachedSceneCanvas(),
	                sceneContext = sceneCanvas.getContext(),
	                hitCanvas = cachedCanvas.hit,
	                hitContext = hitCanvas.getContext(),
	                width = sceneCanvas.getWidth(),
	                height = sceneCanvas.getHeight(),
	                sceneImageData, sceneData, hitImageData, hitData, len, rgbColorKey, i, alpha;

	            hitContext.clear();

	            try {
	                sceneImageData = sceneContext.getImageData(0, 0, width, height);
	                sceneData = sceneImageData.data;
	                hitImageData = hitContext.getImageData(0, 0, width, height);
	                hitData = hitImageData.data;
	                len = sceneData.length;
	                rgbColorKey = Kinetic.Util._hexToRgb(this.colorKey);

	                // replace non transparent pixels with color key
	                for(i = 0; i < len; i += 4) {
	                    alpha = sceneData[i + 3];
	                    if (alpha > threshold) {
	                        hitData[i] = rgbColorKey.r;
	                        hitData[i + 1] = rgbColorKey.g;
	                        hitData[i + 2] = rgbColorKey.b;
	                        hitData[i + 3] = 255;
	                    }
	                }

	                hitContext.putImageData(hitImageData, 0, 0);
	            }
	            catch(e) {
	                Kinetic.Util.warn('Unable to draw hit graph from cached scene canvas. ' + e.message);
	            }

	            return this;
	        }
	    });
	    Kinetic.Util.extend(Kinetic.Shape, Kinetic.Node);

	    // add getters and setters
	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'stroke');

	    /**
	     * get/set stroke color
	     * @name stroke
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {String} color
	     * @returns {String}
	     * @example
	     * // get stroke color
	     * var stroke = shape.stroke();
	     *
	     * // set stroke color with color string
	     * shape.stroke('green');
	     *
	     * // set stroke color with hex
	     * shape.stroke('#00ff00');
	     *
	     * // set stroke color with rgb
	     * shape.stroke('rgb(0,255,0)');
	     *
	     * // set stroke color with rgba and make it 50% opaque
	     * shape.stroke('rgba(0,255,0,0.5');
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'strokeRed', 0, Kinetic.Validators.RGBComponent);

	    /**
	     * get/set stroke red component
	     * @name strokeRed
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Integer} red
	     * @returns {Integer}
	     * @example
	     * // get stroke red component
	     * var strokeRed = shape.strokeRed();
	     *
	     * // set stroke red component
	     * shape.strokeRed(0);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'strokeGreen', 0, Kinetic.Validators.RGBComponent);

	    /**
	     * get/set stroke green component
	     * @name strokeGreen
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Integer} green
	     * @returns {Integer}
	     * @example
	     * // get stroke green component
	     * var strokeGreen = shape.strokeGreen();
	     *
	     * // set stroke green component
	     * shape.strokeGreen(255);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'strokeBlue', 0, Kinetic.Validators.RGBComponent);

	    /**
	     * get/set stroke blue component
	     * @name strokeBlue
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Integer} blue
	     * @returns {Integer}
	     * @example
	     * // get stroke blue component
	     * var strokeBlue = shape.strokeBlue();
	     *
	     * // set stroke blue component
	     * shape.strokeBlue(0);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'strokeAlpha', 1, Kinetic.Validators.alphaComponent);

	    /**
	     * get/set stroke alpha component.  Alpha is a real number between 0 and 1.  The default
	     *  is 1.
	     * @name strokeAlpha
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Number} alpha
	     * @returns {Number}
	     * @example
	     * // get stroke alpha component
	     * var strokeAlpha = shape.strokeAlpha();
	     *
	     * // set stroke alpha component
	     * shape.strokeAlpha(0.5);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'strokeWidth', 2);

	    /**
	     * get/set stroke width
	     * @name strokeWidth
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Number} strokeWidth
	     * @returns {Number}
	     * @example
	     * // get stroke width
	     * var strokeWidth = shape.strokeWidth();
	     *
	     * // set stroke width
	     * shape.strokeWidth();
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'lineJoin');

	    /**
	     * get/set line join.  Can be miter, round, or bevel.  The
	     *  default is miter
	     * @name lineJoin
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {String} lineJoin
	     * @returns {String}
	     * @example
	     * // get line join
	     * var lineJoin = shape.lineJoin();
	     *
	     * // set line join
	     * shape.lineJoin('round');
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'lineCap');

	    /**
	     * get/set line cap.  Can be butt, round, or square
	     * @name lineCap
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {String} lineCap
	     * @returns {String}
	     * @example
	     * // get line cap
	     * var lineCap = shape.lineCap();
	     *
	     * // set line cap
	     * shape.lineCap('round');
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'sceneFunc');

	    /**
	     * get/set scene draw function
	     * @name sceneFunc
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Function} drawFunc drawing function
	     * @returns {Function}
	     * @example
	     * // get scene draw function
	     * var sceneFunc = shape.sceneFunc();
	     *
	     * // set scene draw function
	     * shape.sceneFunc(function(context) {
	     *   context.beginPath();
	     *   context.rect(0, 0, this.width(), this.height());
	     *   context.closePath();
	     *   context.fillStrokeShape(this);
	     * });
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'hitFunc');

	    /**
	     * get/set hit draw function
	     * @name hitFunc
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Function} drawFunc drawing function
	     * @returns {Function}
	     * @example
	     * // get hit draw function
	     * var hitFunc = shape.hitFunc();
	     *
	     * // set hit draw function
	     * shape.hitFunc(function(context) {
	     *   context.beginPath();
	     *   context.rect(0, 0, this.width(), this.height());
	     *   context.closePath();
	     *   context.fillStrokeShape(this);
	     * });
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'dash');

	    /**
	     * get/set dash array for stroke.
	     * @name dash
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Array} dash
	     * @returns {Array}
	     * @example
	     *  // apply dashed stroke that is 10px long and 5 pixels apart
	     *  line.dash([10, 5]);
	     *  
	     *  // apply dashed stroke that is made up of alternating dashed 
	     *  // lines that are 10px long and 20px apart, and dots that have 
	     *  // a radius of 5px and are 20px apart
	     *  line.dash([10, 20, 0.001, 20]);
	     */


	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'shadowColor');

	    /**
	     * get/set shadow color
	     * @name shadowColor
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {String} color
	     * @returns {String}
	     * @example
	     * // get shadow color
	     * var shadow = shape.shadowColor();
	     *
	     * // set shadow color with color string
	     * shape.shadowColor('green');
	     *
	     * // set shadow color with hex
	     * shape.shadowColor('#00ff00');
	     *
	     * // set shadow color with rgb
	     * shape.shadowColor('rgb(0,255,0)');
	     *
	     * // set shadow color with rgba and make it 50% opaque
	     * shape.shadowColor('rgba(0,255,0,0.5');
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'shadowRed', 0, Kinetic.Validators.RGBComponent);

	    /**
	     * get/set shadow red component
	     * @name shadowRed
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Integer} red
	     * @returns {Integer}
	     * @example
	     * // get shadow red component
	     * var shadowRed = shape.shadowRed();
	     *
	     * // set shadow red component
	     * shape.shadowRed(0);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'shadowGreen', 0, Kinetic.Validators.RGBComponent);

	    /**
	     * get/set shadow green component
	     * @name shadowGreen
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Integer} green
	     * @returns {Integer}
	     * @example
	     * // get shadow green component
	     * var shadowGreen = shape.shadowGreen();
	     *
	     * // set shadow green component
	     * shape.shadowGreen(255);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'shadowBlue', 0, Kinetic.Validators.RGBComponent);

	    /**
	     * get/set shadow blue component
	     * @name shadowBlue
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Integer} blue
	     * @returns {Integer}
	     * @example
	     * // get shadow blue component
	     * var shadowBlue = shape.shadowBlue();
	     *
	     * // set shadow blue component
	     * shape.shadowBlue(0);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'shadowAlpha', 1, Kinetic.Validators.alphaComponent);

	    /**
	     * get/set shadow alpha component.  Alpha is a real number between 0 and 1.  The default
	     *  is 1.
	     * @name shadowAlpha
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Number} alpha
	     * @returns {Number}
	     * @example
	     * // get shadow alpha component
	     * var shadowAlpha = shape.shadowAlpha();
	     *
	     * // set shadow alpha component
	     * shape.shadowAlpha(0.5);
	     */
	     
	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'shadowBlur');

	    /**
	     * get/set shadow blur
	     * @name shadowBlur
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Number} blur
	     * @returns {Number}
	     * @example
	     * // get shadow blur
	     * var shadowBlur = shape.shadowBlur();
	     *
	     * // set shadow blur
	     * shape.shadowBlur(10);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'shadowOpacity');

	    /**
	     * get/set shadow opacity.  must be a value between 0 and 1
	     * @name shadowOpacity
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Number} opacity
	     * @returns {Number}
	     * @example
	     * // get shadow opacity
	     * var shadowOpacity = shape.shadowOpacity();
	     *
	     * // set shadow opacity
	     * shape.shadowOpacity(0.5);
	     */

	    Kinetic.Factory.addComponentsGetterSetter(Kinetic.Shape, 'shadowOffset', ['x', 'y']);

	    /**
	     * get/set shadow offset
	     * @name shadowOffset
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Object} offset
	     * @param {Number} offset.x
	     * @param {Number} offset.y
	     * @returns {Object}
	     * @example
	     * // get shadow offset
	     * var shadowOffset = shape.shadowOffset();
	     *
	     * // set shadow offset
	     * shape.shadowOffset({
	     *   x: 20
	     *   y: 10
	     * });
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'shadowOffsetX', 0);

	     /**
	     * get/set shadow offset x
	     * @name shadowOffsetX
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Number} x
	     * @returns {Number}
	     * @example
	     * // get shadow offset x
	     * var shadowOffsetX = shape.shadowOffsetX();
	     *
	     * // set shadow offset x
	     * shape.shadowOffsetX(5);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'shadowOffsetY', 0);

	     /**
	     * get/set shadow offset y
	     * @name shadowOffsetY
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Number} y
	     * @returns {Number}
	     * @example
	     * // get shadow offset y
	     * var shadowOffsetY = shape.shadowOffsetY();
	     *
	     * // set shadow offset y
	     * shape.shadowOffsetY(5);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'fillPatternImage');

	    /**
	     * get/set fill pattern image
	     * @name fillPatternImage
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Image} image object
	     * @returns {Image}
	     * @example
	     * // get fill pattern image
	     * var fillPatternImage = shape.fillPatternImage();
	     *
	     * // set fill pattern image
	     * var imageObj = new Image();
	     * imageObj.onload = function() {
	     *   shape.fillPatternImage(imageObj);
	     * };
	     * imageObj.src = 'path/to/image/jpg';
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'fill');

	    /**
	     * get/set fill color
	     * @name fill
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {String} color
	     * @returns {String}
	     * @example
	     * // get fill color
	     * var fill = shape.fill();
	     *
	     * // set fill color with color string
	     * shape.fill('green');
	     *
	     * // set fill color with hex
	     * shape.fill('#00ff00');
	     *
	     * // set fill color with rgb
	     * shape.fill('rgb(0,255,0)');
	     *
	     * // set fill color with rgba and make it 50% opaque
	     * shape.fill('rgba(0,255,0,0.5');
	     *
	     * // shape without fill
	     * shape.fill(null);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'fillRed', 0, Kinetic.Validators.RGBComponent);

	    /**
	     * get/set fill red component
	     * @name fillRed
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Integer} red
	     * @returns {Integer}
	     * @example
	     * // get fill red component
	     * var fillRed = shape.fillRed();
	     *
	     * // set fill red component
	     * shape.fillRed(0);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'fillGreen', 0, Kinetic.Validators.RGBComponent);

	    /**
	     * get/set fill green component
	     * @name fillGreen
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Integer} green
	     * @returns {Integer}
	     * @example
	     * // get fill green component
	     * var fillGreen = shape.fillGreen();
	     *
	     * // set fill green component
	     * shape.fillGreen(255);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'fillBlue', 0, Kinetic.Validators.RGBComponent);

	    /**
	     * get/set fill blue component
	     * @name fillBlue
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Integer} blue
	     * @returns {Integer}
	     * @example
	     * // get fill blue component
	     * var fillBlue = shape.fillBlue();
	     *
	     * // set fill blue component
	     * shape.fillBlue(0);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'fillAlpha', 1, Kinetic.Validators.alphaComponent);

	    /**
	     * get/set fill alpha component.  Alpha is a real number between 0 and 1.  The default
	     *  is 1.
	     * @name fillAlpha
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Number} alpha
	     * @returns {Number}
	     * @example
	     * // get fill alpha component
	     * var fillAlpha = shape.fillAlpha();
	     *
	     * // set fill alpha component
	     * shape.fillAlpha(0.5);
	     */


	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'fillPatternX', 0);

	    /**
	     * get/set fill pattern x
	     * @name fillPatternX
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Number} x
	     * @returns {Number}
	     * @example
	     * // get fill pattern x
	     * var fillPatternX = shape.fillPatternX();
	     * 
	     * // set fill pattern x
	     * shape.fillPatternX(20);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'fillPatternY', 0);

	    /**
	     * get/set fill pattern y
	     * @name fillPatternY
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Number} y
	     * @returns {Number}
	     * @example
	     * // get fill pattern y
	     * var fillPatternY = shape.fillPatternY();
	     * 
	     * // set fill pattern y
	     * shape.fillPatternY(20);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'fillLinearGradientColorStops');

	    /**
	     * get/set fill linear gradient color stops
	     * @name fillLinearGradientColorStops
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Array} colorStops
	     * @returns {Array} colorStops
	     * @example
	     * // get fill linear gradient color stops
	     * var colorStops = shape.fillLinearGradientColorStops();
	     *
	     * // create a linear gradient that starts with red, changes to blue 
	     * // halfway through, and then changes to green
	     * shape.fillLinearGradientColorStops(0, 'red', 0.5, 'blue', 1, 'green');
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'fillRadialGradientStartRadius', 0);

	    /**
	     * get/set fill radial gradient start radius
	     * @name fillRadialGradientStartRadius
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Number} radius
	     * @returns {Number}
	     * @example
	     * // get radial gradient start radius
	     * var startRadius = shape.fillRadialGradientStartRadius();
	     *
	     * // set radial gradient start radius
	     * shape.fillRadialGradientStartRadius(0);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'fillRadialGradientEndRadius', 0);

	    /**
	     * get/set fill radial gradient end radius
	     * @name fillRadialGradientEndRadius
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Number} radius
	     * @returns {Number}
	     * @example
	     * // get radial gradient end radius
	     * var endRadius = shape.fillRadialGradientEndRadius();
	     *
	     * // set radial gradient end radius
	     * shape.fillRadialGradientEndRadius(100);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'fillRadialGradientColorStops');

	    /**
	     * get/set fill radial gradient color stops
	     * @name fillRadialGradientColorStops
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Number} colorStops
	     * @returns {Array}
	     * @example
	     * // get fill radial gradient color stops
	     * var colorStops = shape.fillRadialGradientColorStops();
	     *
	     * // create a radial gradient that starts with red, changes to blue 
	     * // halfway through, and then changes to green
	     * shape.fillRadialGradientColorStops(0, 'red', 0.5, 'blue', 1, 'green');
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'fillPatternRepeat', 'repeat');

	    /**
	     * get/set fill pattern repeat.  Can be 'repeat', 'repeat-x', 'repeat-y', or 'no-repeat'.  The default is 'repeat'
	     * @name fillPatternRepeat
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {String} repeat
	     * @returns {String}
	     * @example
	     * // get fill pattern repeat
	     * var repeat = shape.fillPatternRepeat();
	     *
	     * // repeat pattern in x direction only
	     * shape.fillPatternRepeat('repeat-x');
	     *
	     * // do not repeat the pattern
	     * shape.fillPatternRepeat('no repeat');
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'fillEnabled', true);

	    /**
	     * get/set fill enabled flag
	     * @name fillEnabled
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Boolean} enabled
	     * @returns {Boolean}
	     * @example
	     * // get fill enabled flag
	     * var fillEnabled = shape.fillEnabled();
	     *
	     * // disable fill
	     * shape.fillEnabled(false);
	     *
	     * // enable fill
	     * shape.fillEnabled(true);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'strokeEnabled', true);

	    /**
	     * get/set stroke enabled flag
	     * @name strokeEnabled
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Boolean} enabled
	     * @returns {Boolean}
	     * @example
	     * // get stroke enabled flag
	     * var strokeEnabled = shape.strokeEnabled();
	     *
	     * // disable stroke
	     * shape.strokeEnabled(false);
	     *
	     * // enable stroke
	     * shape.strokeEnabled(true);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'shadowEnabled', true);

	    /**
	     * get/set shadow enabled flag
	     * @name shadowEnabled
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Boolean} enabled
	     * @returns {Boolean}
	     * @example
	     * // get shadow enabled flag
	     * var shadowEnabled = shape.shadowEnabled();
	     *
	     * // disable shadow
	     * shape.shadowEnabled(false);
	     *
	     * // enable shadow
	     * shape.shadowEnabled(true);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'dashEnabled', true);

	    /**
	     * get/set dash enabled flag
	     * @name dashEnabled
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Boolean} enabled
	     * @returns {Boolean}
	     * @example
	     * // get dash enabled flag
	     * var dashEnabled = shape.dashEnabled();
	     *
	     * // disable dash
	     * shape.dashEnabled(false);
	     *
	     * // enable dash
	     * shape.dashEnabled(true);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'strokeScaleEnabled', true);

	    /**
	     * get/set strokeScale enabled flag
	     * @name strokeScaleEnabled
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Boolean} enabled
	     * @returns {Boolean}
	     * @example
	     * // get stroke scale enabled flag
	     * var strokeScaleEnabled = shape.strokeScaleEnabled();
	     *
	     * // disable stroke scale
	     * shape.strokeScaleEnabled(false);
	     *
	     * // enable stroke scale
	     * shape.strokeScaleEnabled(true);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'fillPriority', 'color');

	    /**
	     * get/set fill priority.  can be color, pattern, linear-gradient, or radial-gradient.  The default is color.
	     *   This is handy if you want to toggle between different fill types.
	     * @name fillPriority
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {String} priority
	     * @returns {String}
	     * @example
	     * // get fill priority
	     * var fillPriority = shape.fillPriority();
	     *
	     * // set fill priority
	     * shape.fillPriority('linear-gradient');
	     */

	    Kinetic.Factory.addComponentsGetterSetter(Kinetic.Shape, 'fillPatternOffset', ['x', 'y']);

	    /**
	     * get/set fill pattern offset
	     * @name fillPatternOffset
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Object} offset
	     * @param {Number} offset.x
	     * @param {Number} offset.y
	     * @returns {Object}
	     * @example
	     * // get fill pattern offset
	     * var patternOffset = shape.fillPatternOffset();
	     *
	     * // set fill pattern offset
	     * shape.fillPatternOffset({
	     *   x: 20
	     *   y: 10
	     * });
	     */


	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'fillPatternOffsetX', 0);
	    /**
	     * get/set fill pattern offset x
	     * @name fillPatternOffsetX
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Number} x
	     * @returns {Number}
	     * @example
	     * // get fill pattern offset x
	     * var patternOffsetX = shape.fillPatternOffsetX();
	     *
	     * // set fill pattern offset x
	     * shape.fillPatternOffsetX(20);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'fillPatternOffsetY', 0);
	    /**
	     * get/set fill pattern offset y
	     * @name fillPatternOffsetY
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Number} y
	     * @returns {Number}
	     * @example
	     * // get fill pattern offset y
	     * var patternOffsetY = shape.fillPatternOffsetY();
	     *
	     * // set fill pattern offset y
	     * shape.fillPatternOffsetY(10);
	     */

	    Kinetic.Factory.addComponentsGetterSetter(Kinetic.Shape, 'fillPatternScale', ['x', 'y']);

	    /**
	     * get/set fill pattern scale
	     * @name fillPatternScale
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Object} scale
	     * @param {Number} scale.x
	     * @param {Number} scale.y
	     * @returns {Object}
	     * @example
	     * // get fill pattern scale
	     * var patternScale = shape.fillPatternScale();
	     *
	     * // set fill pattern scale
	     * shape.fillPatternScale({
	     *   x: 2
	     *   y: 2
	     * });
	     */


	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'fillPatternScaleX', 1);
	    /**
	     * get/set fill pattern scale x
	     * @name fillPatternScaleX
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Number} x
	     * @returns {Number}
	     * @example
	     * // get fill pattern scale x
	     * var patternScaleX = shape.fillPatternScaleX();
	     *
	     * // set fill pattern scale x
	     * shape.fillPatternScaleX(2);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'fillPatternScaleY', 1);
	    /**
	     * get/set fill pattern scale y
	     * @name fillPatternScaleY
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Number} y
	     * @returns {Number}
	     * @example
	     * // get fill pattern scale y
	     * var patternScaleY = shape.fillPatternScaleY();
	     *
	     * // set fill pattern scale y
	     * shape.fillPatternScaleY(2);
	     */

	    Kinetic.Factory.addComponentsGetterSetter(Kinetic.Shape, 'fillLinearGradientStartPoint', ['x', 'y']);

	    /**
	     * get/set fill linear gradient start point
	     * @name fillLinearGradientStartPoint
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Object} startPoint
	     * @param {Number} startPoint.x
	     * @param {Number} startPoint.y
	     * @returns {Object}
	     * @example
	     * // get fill linear gradient start point
	     * var startPoint = shape.fillLinearGradientStartPoint();
	     *
	     * // set fill linear gradient start point
	     * shape.fillLinearGradientStartPoint({
	     *   x: 20
	     *   y: 10
	     * });
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'fillLinearGradientStartPointX', 0);
	    /**
	     * get/set fill linear gradient start point x
	     * @name fillLinearGradientStartPointX
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Number} x
	     * @returns {Number}
	     * @example
	     * // get fill linear gradient start point x
	     * var startPointX = shape.fillLinearGradientStartPointX();
	     *
	     * // set fill linear gradient start point x
	     * shape.fillLinearGradientStartPointX(20);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'fillLinearGradientStartPointY', 0);
	    /**
	     * get/set fill linear gradient start point y
	     * @name fillLinearGradientStartPointY
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Number} y
	     * @returns {Number}
	     * @example
	     * // get fill linear gradient start point y
	     * var startPointY = shape.fillLinearGradientStartPointY();
	     *
	     * // set fill linear gradient start point y
	     * shape.fillLinearGradientStartPointY(20);
	     */

	    Kinetic.Factory.addComponentsGetterSetter(Kinetic.Shape, 'fillLinearGradientEndPoint', ['x', 'y']);

	    /**
	     * get/set fill linear gradient end point
	     * @name fillLinearGradientEndPoint
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Object} endPoint
	     * @param {Number} endPoint.x
	     * @param {Number} endPoint.y
	     * @returns {Object}
	     * @example
	     * // get fill linear gradient end point
	     * var endPoint = shape.fillLinearGradientEndPoint();
	     *
	     * // set fill linear gradient end point
	     * shape.fillLinearGradientEndPoint({
	     *   x: 20
	     *   y: 10
	     * });
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'fillLinearGradientEndPointX', 0);
	    /**
	     * get/set fill linear gradient end point x
	     * @name fillLinearGradientEndPointX
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Number} x
	     * @returns {Number}
	     * @example
	     * // get fill linear gradient end point x
	     * var endPointX = shape.fillLinearGradientEndPointX();
	     *
	     * // set fill linear gradient end point x
	     * shape.fillLinearGradientEndPointX(20);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'fillLinearGradientEndPointY', 0);
	    /**
	     * get/set fill linear gradient end point y
	     * @name fillLinearGradientEndPointY
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Number} y
	     * @returns {Number}
	     * @example
	     * // get fill linear gradient end point y
	     * var endPointY = shape.fillLinearGradientEndPointY();
	     *
	     * // set fill linear gradient end point y
	     * shape.fillLinearGradientEndPointY(20);
	     */

	    Kinetic.Factory.addComponentsGetterSetter(Kinetic.Shape, 'fillRadialGradientStartPoint', ['x', 'y']);

	    /**
	     * get/set fill radial gradient start point
	     * @name fillRadialGradientStartPoint
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Object} startPoint
	     * @param {Number} startPoint.x
	     * @param {Number} startPoint.y
	     * @returns {Object}
	     * @example
	     * // get fill radial gradient start point
	     * var startPoint = shape.fillRadialGradientStartPoint();
	     *
	     * // set fill radial gradient start point
	     * shape.fillRadialGradientStartPoint({
	     *   x: 20
	     *   y: 10
	     * });
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'fillRadialGradientStartPointX', 0);
	    /**
	     * get/set fill radial gradient start point x
	     * @name fillRadialGradientStartPointX
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Number} x
	     * @returns {Number}
	     * @example
	     * // get fill radial gradient start point x
	     * var startPointX = shape.fillRadialGradientStartPointX();
	     *
	     * // set fill radial gradient start point x
	     * shape.fillRadialGradientStartPointX(20);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'fillRadialGradientStartPointY', 0);
	    /**
	     * get/set fill radial gradient start point y
	     * @name fillRadialGradientStartPointY
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Number} y
	     * @returns {Number}
	     * @example
	     * // get fill radial gradient start point y
	     * var startPointY = shape.fillRadialGradientStartPointY();
	     *
	     * // set fill radial gradient start point y
	     * shape.fillRadialGradientStartPointY(20);
	     */

	    Kinetic.Factory.addComponentsGetterSetter(Kinetic.Shape, 'fillRadialGradientEndPoint', ['x', 'y']);

	    /**
	     * get/set fill radial gradient end point
	     * @name fillRadialGradientEndPoint
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Object} endPoint
	     * @param {Number} endPoint.x
	     * @param {Number} endPoint.y
	     * @returns {Object}
	     * @example
	     * // get fill radial gradient end point
	     * var endPoint = shape.fillRadialGradientEndPoint();
	     *
	     * // set fill radial gradient end point
	     * shape.fillRadialGradientEndPoint({
	     *   x: 20
	     *   y: 10
	     * });
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'fillRadialGradientEndPointX', 0);
	    /**
	     * get/set fill radial gradient end point x
	     * @name fillRadialGradientEndPointX
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Number} x
	     * @returns {Number}
	     * @example
	     * // get fill radial gradient end point x
	     * var endPointX = shape.fillRadialGradientEndPointX();
	     *
	     * // set fill radial gradient end point x
	     * shape.fillRadialGradientEndPointX(20);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'fillRadialGradientEndPointY', 0);
	    /**
	     * get/set fill radial gradient end point y
	     * @name fillRadialGradientEndPointY
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Number} y
	     * @returns {Number}
	     * @example
	     * // get fill radial gradient end point y
	     * var endPointY = shape.fillRadialGradientEndPointY();
	     *
	     * // set fill radial gradient end point y
	     * shape.fillRadialGradientEndPointY(20);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Shape, 'fillPatternRotation', 0);

	    /**
	     * get/set fill pattern rotation in degrees
	     * @name fillPatternRotation
	     * @method
	     * @memberof Kinetic.Shape.prototype
	     * @param {Number} rotation
	     * @returns {Kinetic.Shape}
	     * @example
	     * // get fill pattern rotation
	     * var patternRotation = shape.fillPatternRotation();
	     *
	     * // set fill pattern rotation
	     * shape.fillPatternRotation(20);
	     */


	    Kinetic.Factory.backCompat(Kinetic.Shape, {
	        dashArray: 'dash',
	        getDashArray: 'getDash',
	        setDashArray: 'getDash',

	        drawFunc: 'sceneFunc',
	        getDrawFunc: 'getSceneFunc',
	        setDrawFunc: 'setSceneFunc',

	        drawHitFunc: 'hitFunc',
	        getDrawHitFunc: 'getHitFunc',
	        setDrawHitFunc: 'setHitFunc'
	    });

	    Kinetic.Collection.mapMethods(Kinetic.Shape);
	})();
	;/*jshint unused:false */
	(function() {
	    // CONSTANTS
	    var STAGE = 'Stage',
	        STRING = 'string',
	        PX = 'px',

	        MOUSEOUT = 'mouseout',
	        MOUSELEAVE = 'mouseleave',
	        MOUSEOVER = 'mouseover',
	        MOUSEENTER = 'mouseenter',
	        MOUSEMOVE = 'mousemove',
	        MOUSEDOWN = 'mousedown',
	        MOUSEUP = 'mouseup',
	        CLICK = 'click',
	        DBL_CLICK = 'dblclick',
	        TOUCHSTART = 'touchstart',
	        TOUCHEND = 'touchend',
	        TAP = 'tap',
	        DBL_TAP = 'dbltap',
	        TOUCHMOVE = 'touchmove',
	        DOMMOUSESCROLL = 'DOMMouseScroll',
	        MOUSEWHEEL = 'mousewheel',
	        WHEEL = 'wheel',

	        CONTENT_MOUSEOUT = 'contentMouseout',
	        CONTENT_MOUSEOVER = 'contentMouseover',
	        CONTENT_MOUSEMOVE = 'contentMousemove',
	        CONTENT_MOUSEDOWN = 'contentMousedown',
	        CONTENT_MOUSEUP = 'contentMouseup',
	        CONTENT_CLICK = 'contentClick',
	        CONTENT_DBL_CLICK = 'contentDblclick',
	        CONTENT_TOUCHSTART = 'contentTouchstart',
	        CONTENT_TOUCHEND = 'contentTouchend',
	        CONTENT_DBL_TAP = 'contentDbltap',
	        CONTENT_TOUCHMOVE = 'contentTouchmove',

	        DIV = 'div',
	        RELATIVE = 'relative',
	        INLINE_BLOCK = 'inline-block',
	        KINETICJS_CONTENT = 'kineticjs-content',
	        SPACE = ' ',
	        UNDERSCORE = '_',
	        CONTAINER = 'container',
	        EMPTY_STRING = '',
	        EVENTS = [MOUSEDOWN, MOUSEMOVE, MOUSEUP, MOUSEOUT, TOUCHSTART, TOUCHMOVE, TOUCHEND, MOUSEOVER, DOMMOUSESCROLL, MOUSEWHEEL, WHEEL],

	        // cached variables
	        eventsLength = EVENTS.length;

	    function addEvent(ctx, eventName) {
	        ctx.content.addEventListener(eventName, function(evt) {
	            ctx[UNDERSCORE + eventName](evt);
	        }, false);
	    }

	    Kinetic.Util.addMethods(Kinetic.Stage, {
	        ___init: function(config) {
	            this.nodeType = STAGE;
	            // call super constructor
	            Kinetic.Container.call(this, config);
	            this._id = Kinetic.idCounter++;
	            this._buildDOM();
	            this._bindContentEvents();
	            this._enableNestedTransforms = false;
	            Kinetic.stages.push(this);
	        },
	        _validateAdd: function(child) {
	            if (child.getType() !== 'Layer') {
	                Kinetic.Util.error('You may only add layers to the stage.');
	            }
	        },
	        /**
	         * set container dom element which contains the stage wrapper div element
	         * @method
	         * @memberof Kinetic.Stage.prototype
	         * @param {DomElement} container can pass in a dom element or id string
	         */
	        setContainer: function(container) {
	            if( typeof container === STRING) {
	                var id = container;
	                container = Kinetic.document.getElementById(container);
	                if (!container) {
	                    throw 'Can not find container in document with id ' + id;
	                }
	            }
	            this._setAttr(CONTAINER, container);
	            return this;
	        },
	        shouldDrawHit: function() {
	            return true;
	        },
	        draw: function() {
	            Kinetic.Node.prototype.draw.call(this);
	            return this;
	        },
	        /**
	         * draw layer scene graphs
	         * @name draw
	         * @method
	         * @memberof Kinetic.Stage.prototype
	         */

	        /**
	         * draw layer hit graphs
	         * @name drawHit
	         * @method
	         * @memberof Kinetic.Stage.prototype
	         */

	        /**
	         * set height
	         * @method
	         * @memberof Kinetic.Stage.prototype
	         * @param {Number} height
	         */
	        setHeight: function(height) {
	            Kinetic.Node.prototype.setHeight.call(this, height);
	            this._resizeDOM();
	            return this;
	        },
	        /**
	         * set width
	         * @method
	         * @memberof Kinetic.Stage.prototype
	         * @param {Number} width
	         */
	        setWidth: function(width) {
	            Kinetic.Node.prototype.setWidth.call(this, width);
	            this._resizeDOM();
	            return this;
	        },
	        /**
	         * clear all layers
	         * @method
	         * @memberof Kinetic.Stage.prototype
	         */
	        clear: function() {
	            var layers = this.children,
	                len = layers.length,
	                n;

	            for(n = 0; n < len; n++) {
	                layers[n].clear();
	            }
	            return this;
	        },
	        clone: function(obj) {
	            if (!obj) {
	                obj = {};
	            }
	            obj.container = Kinetic.document.createElement(DIV);
	            
	            return Kinetic.Container.prototype.clone.call(this, obj);
	        },
	        /**
	         * destroy stage
	         * @method
	         * @memberof Kinetic.Stage.prototype
	         */
	        destroy: function() {
	            var content = this.content;
	            Kinetic.Container.prototype.destroy.call(this);

	            if(content && Kinetic.Util._isInDocument(content)) {
	                this.getContainer().removeChild(content);
	            }
	            var index = Kinetic.stages.indexOf(this);
	            if (index > -1) {
	                Kinetic.stages.splice(index, 1);
	            }
	        },
	        /**
	         * get pointer position which can be a touch position or mouse position
	         * @method
	         * @memberof Kinetic.Stage.prototype
	         * @returns {Object}
	         */
	        getPointerPosition: function() {
	            return this.pointerPos;
	        },
	        getStage: function() {
	            return this;
	        },
	        /**
	         * get stage content div element which has the
	         *  the class name "kineticjs-content"
	         * @method
	         * @memberof Kinetic.Stage.prototype
	         */
	        getContent: function() {
	            return this.content;
	        },
	        /**
	         * Creates a composite data URL and requires a callback because the composite is generated asynchronously.
	         * @method
	         * @memberof Kinetic.Stage.prototype
	         * @param {Object} config
	         * @param {Function} config.callback function executed when the composite has completed
	         * @param {String} [config.mimeType] can be "image/png" or "image/jpeg".
	         *  "image/png" is the default
	         * @param {Number} [config.x] x position of canvas section
	         * @param {Number} [config.y] y position of canvas section
	         * @param {Number} [config.width] width of canvas section
	         * @param {Number} [config.height] height of canvas section
	         * @param {Number} [config.quality] jpeg quality.  If using an "image/jpeg" mimeType,
	         *  you can specify the quality from 0 to 1, where 0 is very poor quality and 1
	         *  is very high quality
	         */
	        toDataURL: function(config) {
	            config = config || {};

	            var mimeType = config.mimeType || null,
	                quality = config.quality || null,
	                x = config.x || 0,
	                y = config.y || 0,
	                canvas = new Kinetic.SceneCanvas({
	                    width: config.width || this.getWidth(),
	                    height: config.height || this.getHeight(),
	                    pixelRatio: 1
	                }),
	                _context = canvas.getContext()._context,
	                layers = this.children;

	            if(x || y) {
	                _context.translate(-1 * x, -1 * y);
	            }

	            function drawLayer(n) {
	                var layer = layers[n],
	                    layerUrl = layer.toDataURL(),
	                    imageObj = new Kinetic.window.Image();

	                imageObj.onload = function() {
	                    _context.drawImage(imageObj, 0, 0);

	                    if(n < layers.length - 1) {
	                        drawLayer(n + 1);
	                    }
	                    else {
	                        config.callback(canvas.toDataURL(mimeType, quality));
	                    }
	                };
	                imageObj.src = layerUrl;
	            }
	            drawLayer(0);
	        },
	        /**
	         * converts stage into an image.
	         * @method
	         * @memberof Kinetic.Stage.prototype
	         * @param {Object} config
	         * @param {Function} config.callback function executed when the composite has completed
	         * @param {String} [config.mimeType] can be "image/png" or "image/jpeg".
	         *  "image/png" is the default
	         * @param {Number} [config.x] x position of canvas section
	         * @param {Number} [config.y] y position of canvas section
	         * @param {Number} [config.width] width of canvas section
	         * @param {Number} [config.height] height of canvas section
	         * @param {Number} [config.quality] jpeg quality.  If using an "image/jpeg" mimeType,
	         *  you can specify the quality from 0 to 1, where 0 is very poor quality and 1
	         *  is very high quality
	         */
	        toImage: function(config) {
	            var cb = config.callback;

	            config.callback = function(dataUrl) {
	                Kinetic.Util._getImage(dataUrl, function(img) {
	                    cb(img);
	                });
	            };
	            this.toDataURL(config);
	        },
	        /**
	         * get visible intersection shape. This is the preferred
	         *  method for determining if a point intersects a shape or not
	         * @method
	         * @memberof Kinetic.Stage.prototype
	         * @param {Object} pos
	         * @param {Number} pos.x
	         * @param {Number} pos.y
	         * @returns {Kinetic.Shape}
	         */
	        getIntersection: function(pos) {
	            var layers = this.getChildren(),
	                len = layers.length,
	                end = len - 1,
	                n, shape;

	            for(n = end; n >= 0; n--) {
	                shape = layers[n].getIntersection(pos);
	                if (shape) {
	                    return shape;
	                }
	            }

	            return null;
	        },
	        _resizeDOM: function() {
	            if(this.content) {
	                var width = this.getWidth(),
	                    height = this.getHeight(),
	                    layers = this.getChildren(),
	                    len = layers.length,
	                    n, layer;

	                // set content dimensions
	                this.content.style.width = width + PX;
	                this.content.style.height = height + PX;

	                this.bufferCanvas.setSize(width, height);
	                this.bufferHitCanvas.setSize(width, height);

	                // set layer dimensions
	                for(n = 0; n < len; n++) {
	                    layer = layers[n];
	                    layer.setSize(width, height);
	                    layer.draw();
	                }
	            }
	        },
	        /**
	         * add layer or layers to stage
	         * @method
	         * @memberof Kinetic.Stage.prototype
	         * @param {...Kinetic.Layer} layer
	         * @example
	         * stage.add(layer1, layer2, layer3);
	         */
	        add: function(layer) {
	            if (arguments.length > 1) {
	                for (var i = 0; i < arguments.length; i++) {
	                    this.add(arguments[i]);
	                }
	                return;
	            }
	            Kinetic.Container.prototype.add.call(this, layer);
	            layer._setCanvasSize(this.width(), this.height());

	            // draw layer and append canvas to container
	            layer.draw();
	            this.content.appendChild(layer.canvas._canvas);

	            // chainable
	            return this;
	        },
	        getParent: function() {
	            return null;
	        },
	        getLayer: function() {
	            return null;
	        },
	        /**
	         * returns a {@link Kinetic.Collection} of layers
	         * @method
	         * @memberof Kinetic.Stage.prototype
	         */
	        getLayers: function() {
	            return this.getChildren();
	        },
	        _bindContentEvents: function() {
	            for (var n = 0; n < eventsLength; n++) {
	                addEvent(this, EVENTS[n]);
	            }
	        },
	        _mouseover: function(evt) {
	            if (!Kinetic.UA.mobile) {
	                this._setPointerPosition(evt);
	                this._fire(CONTENT_MOUSEOVER, {evt: evt});
	            }
	        },
	        _mouseout: function(evt) {
	            if (!Kinetic.UA.mobile) {
	                this._setPointerPosition(evt);
	                var targetShape = this.targetShape;

	                if(targetShape && !Kinetic.isDragging()) {
	                    targetShape._fireAndBubble(MOUSEOUT, {evt: evt});
	                    targetShape._fireAndBubble(MOUSELEAVE, {evt: evt});
	                    this.targetShape = null;
	                }
	                this.pointerPos = undefined;

	                this._fire(CONTENT_MOUSEOUT, {evt: evt});
	            }
	        },
	        _mousemove: function(evt) {
	        
	            // workaround for mobile IE to force touch event when unhandled pointer event elevates into a mouse event
	            if (Kinetic.UA.ieMobile) {
	                return this._touchmove(evt);
	            }
	            
	            // workaround fake mousemove event in chrome browser https://code.google.com/p/chromium/issues/detail?id=161464
	            if ((typeof evt.webkitMovementX !== 'undefined' || typeof evt.webkitMovementY !== 'undefined') && evt.webkitMovementY === 0 && evt.webkitMovementX === 0) {
	                return;
	            }
	            if (Kinetic.UA.mobile) {
	                return;
	            }
	            this._setPointerPosition(evt);
	            var dd = Kinetic.DD, shape;

	            if (!Kinetic.isDragging()) {
	                shape = this.getIntersection(this.getPointerPosition());
	                if(shape && shape.isListening()) {
	                    if(!Kinetic.isDragging() && (!this.targetShape || this.targetShape._id !== shape._id)) {
	                        if(this.targetShape) {
	                            this.targetShape._fireAndBubble(MOUSEOUT, {evt: evt}, shape);
	                            this.targetShape._fireAndBubble(MOUSELEAVE, {evt: evt}, shape);
	                        }
	                        shape._fireAndBubble(MOUSEOVER, {evt: evt}, this.targetShape);
	                        shape._fireAndBubble(MOUSEENTER, {evt: evt}, this.targetShape);
	                        this.targetShape = shape;
	                    }
	                    else {
	                        shape._fireAndBubble(MOUSEMOVE, {evt: evt});
	                    }
	                }
	                /*
	                 * if no shape was detected, clear target shape and try
	                 * to run mouseout from previous target shape
	                 */
	                else {
	                    if(this.targetShape && !Kinetic.isDragging()) {
	                        this.targetShape._fireAndBubble(MOUSEOUT, {evt: evt});
	                        this.targetShape._fireAndBubble(MOUSELEAVE, {evt: evt});
	                        this.targetShape = null;
	                    }

	                }

	                // content event
	                this._fire(CONTENT_MOUSEMOVE, {evt: evt});
	            }
	            if(dd) {
	                dd._drag(evt);
	            }

	            // always call preventDefault for desktop events because some browsers
	            // try to drag and drop the canvas element
	            if (evt.preventDefault) {
	                evt.preventDefault();
	            }
	        },
	        _mousedown: function(evt) {
	        
	            // workaround for mobile IE to force touch event when unhandled pointer event elevates into a mouse event       
	            if (Kinetic.UA.ieMobile) {
	                return this._touchstart(evt);
	            }
	            
	            if (!Kinetic.UA.mobile) {
	                this._setPointerPosition(evt);
	                var shape = this.getIntersection(this.getPointerPosition());

	                Kinetic.listenClickTap = true;

	                if (shape && shape.isListening()) {
	                    this.clickStartShape = shape;
	                    shape._fireAndBubble(MOUSEDOWN, {evt: evt});
	                }

	                // content event
	                this._fire(CONTENT_MOUSEDOWN, {evt: evt});
	            }

	            // always call preventDefault for desktop events because some browsers
	            // try to drag and drop the canvas element
	            if (evt.preventDefault) {
	                evt.preventDefault();
	            }
	        },
	        _mouseup: function(evt) {
	        
	            // workaround for mobile IE to force touch event when unhandled pointer event elevates into a mouse event       
	            if (Kinetic.UA.ieMobile) {
	                return this._touchend(evt);
	            }
	            if (!Kinetic.UA.mobile) {
	                this._setPointerPosition(evt);
	                var shape = this.getIntersection(this.getPointerPosition()),
	                    clickStartShape = this.clickStartShape,
	                    fireDblClick = false,
	                    dd = Kinetic.DD;

	                if(Kinetic.inDblClickWindow) {
	                    fireDblClick = true;
	                    Kinetic.inDblClickWindow = false;
	                }
	                // don't set inDblClickWindow after dragging
	                else if (!dd || !dd.justDragged) {
	                    Kinetic.inDblClickWindow = true;
	                } else if (dd) {
	                    dd.justDragged = false;
	                }

	                setTimeout(function() {
	                    Kinetic.inDblClickWindow = false;
	                }, Kinetic.dblClickWindow);

	                if (shape && shape.isListening()) {
	                    shape._fireAndBubble(MOUSEUP, {evt: evt});

	                    // detect if click or double click occurred
	                    if(Kinetic.listenClickTap && clickStartShape && clickStartShape._id === shape._id) {
	                        shape._fireAndBubble(CLICK, {evt: evt});

	                        if(fireDblClick) {
	                            shape._fireAndBubble(DBL_CLICK, {evt: evt});
	                        }
	                    }
	                }
	                // content events
	                this._fire(CONTENT_MOUSEUP, {evt: evt});
	                if (Kinetic.listenClickTap) {
	                    this._fire(CONTENT_CLICK, {evt: evt});
	                    if(fireDblClick) {
	                        this._fire(CONTENT_DBL_CLICK, {evt: evt});
	                    }
	                }

	                Kinetic.listenClickTap = false;
	            }

	            // always call preventDefault for desktop events because some browsers
	            // try to drag and drop the canvas element
	            if (evt.preventDefault) {
	                evt.preventDefault();
	            }
	        },
	        _touchstart: function(evt) {
	            this._setPointerPosition(evt);
	            var shape = this.getIntersection(this.getPointerPosition());

	            Kinetic.listenClickTap = true;

	            if (shape && shape.isListening()) {
	                this.tapStartShape = shape;
	                shape._fireAndBubble(TOUCHSTART, {evt: evt});

	                // only call preventDefault if the shape is listening for events
	                if (shape.isListening() && evt.preventDefault) {
	                    evt.preventDefault();
	                }
	            }
	            // content event
	            this._fire(CONTENT_TOUCHSTART, {evt: evt});
	        },
	        _touchend: function(evt) {
	            this._setPointerPosition(evt);
	            var shape = this.getIntersection(this.getPointerPosition()),
	                fireDblClick = false;

	            if(Kinetic.inDblClickWindow) {
	                fireDblClick = true;
	                Kinetic.inDblClickWindow = false;
	            }
	            else {
	                Kinetic.inDblClickWindow = true;
	            }

	            setTimeout(function() {
	                Kinetic.inDblClickWindow = false;
	            }, Kinetic.dblClickWindow);

	            if (shape && shape.isListening()) {
	                shape._fireAndBubble(TOUCHEND, {evt: evt});

	                // detect if tap or double tap occurred
	                if(Kinetic.listenClickTap && shape._id === this.tapStartShape._id) {
	                    shape._fireAndBubble(TAP, {evt: evt});

	                    if(fireDblClick) {
	                        shape._fireAndBubble(DBL_TAP, {evt: evt});
	                    }
	                }
	                // only call preventDefault if the shape is listening for events
	                if (shape.isListening() && evt.preventDefault) {
	                    evt.preventDefault();
	                }
	            }
	            // content events
	            if (Kinetic.listenClickTap) {
	                this._fire(CONTENT_TOUCHEND, {evt: evt});
	                if(fireDblClick) {
	                    this._fire(CONTENT_DBL_TAP, {evt: evt});
	                }
	            }

	            Kinetic.listenClickTap = false;
	        },
	        _touchmove: function(evt) {
	            this._setPointerPosition(evt);
	            var dd = Kinetic.DD,
	                shape;
	            if (!Kinetic.isDragging()) {
	                shape = this.getIntersection(this.getPointerPosition());
	                if (shape && shape.isListening()) {
	                    shape._fireAndBubble(TOUCHMOVE, {evt: evt});
	                    // only call preventDefault if the shape is listening for events
	                    if (shape.isListening() && evt.preventDefault) {
	                        evt.preventDefault();
	                    }
	                }
	                this._fire(CONTENT_TOUCHMOVE, {evt: evt});
	            }
	            if(dd) {
	                dd._drag(evt);
	                if (Kinetic.isDragging()) {
	                    evt.preventDefault();
	                }
	            }
	        },
	        _DOMMouseScroll: function(evt) {
	            this._mousewheel(evt);
	        },
	        _mousewheel: function(evt) {
	            this._setPointerPosition(evt);
	            var shape = this.getIntersection(this.getPointerPosition());

	            if (shape && shape.isListening()) {
	                shape._fireAndBubble(MOUSEWHEEL, {evt: evt});
	            }
	        },
	        _wheel: function(evt) {
	            this._mousewheel(evt);
	        },
	        _setPointerPosition: function(evt) {
	            var contentPosition = this._getContentPosition(),
	                offsetX = evt.offsetX,
	                clientX = evt.clientX,
	                x = null,
	                y = null,
	                touch;
	            evt = evt ? evt : window.event;

	            // touch events
	            if(evt.touches !== undefined) {
	                // currently, only handle one finger
	                if (evt.touches.length > 0) {

	                    touch = evt.touches[0];

	                    // get the information for finger #1
	                    x = touch.clientX - contentPosition.left;
	                    y = touch.clientY - contentPosition.top;
	                }
	            }
	            // mouse events
	            else {
	                // if offsetX is defined, assume that offsetY is defined as well
	                if (offsetX !== undefined) {
	                    x = offsetX;
	                    y = evt.offsetY;
	                }
	                // we unfortunately have to use UA detection here because accessing
	                // the layerX or layerY properties in newer versions of Chrome
	                // throws a JS warning.  layerX and layerY are required for FF
	                // when the container is transformed via CSS.
	                else if (Kinetic.UA.browser === 'mozilla') {
	                    x = evt.layerX;
	                    y = evt.layerY;
	                }
	                // if clientX is defined, assume that clientY is defined as well
	                else if (clientX !== undefined && contentPosition) {
	                    x = clientX - contentPosition.left;
	                    y = evt.clientY - contentPosition.top;
	                }
	            }

	            if (x !== null && y !== null) {
	                this.pointerPos = {
	                    x: x,
	                    y: y
	                };
	            }
	        },
	        _getContentPosition: function() {
	            var rect = this.content.getBoundingClientRect ? this.content.getBoundingClientRect() : { top: 0, left: 0 };
	            return {
	                top: rect.top,
	                left: rect.left
	            };
	        },
	        _buildDOM: function() {
	            var container = this.getContainer();
	            if (!container) {
	                if (Kinetic.Util.isBrowser()) {
	                    throw 'Stage has no container. A container is required.';
	                } else {
	                    // automatically create element for jsdom in nodejs env
	                    container = Kinetic.document.createElement(DIV);
	                }
	            }
	            // clear content inside container
	            container.innerHTML = EMPTY_STRING;

	            // content
	            this.content = Kinetic.document.createElement(DIV);
	            this.content.style.position = RELATIVE;
	            this.content.style.display = INLINE_BLOCK;
	            this.content.className = KINETICJS_CONTENT;
	            this.content.setAttribute('role', 'presentation');
	            container.appendChild(this.content);

	            // the buffer canvas pixel ratio must be 1 because it is used as an 
	            // intermediate canvas before copying the result onto a scene canvas.
	            // not setting it to 1 will result in an over compensation
	            this.bufferCanvas = new Kinetic.SceneCanvas({
	                pixelRatio: 1
	            });
	            this.bufferHitCanvas = new Kinetic.HitCanvas();

	            this._resizeDOM();
	        },
	        _onContent: function(typesStr, handler) {
	            var types = typesStr.split(SPACE),
	                len = types.length,
	                n, baseEvent;

	            for(n = 0; n < len; n++) {
	                baseEvent = types[n];
	                this.content.addEventListener(baseEvent, handler, false);
	            }
	        },
	        // currently cache function is now working for stage, because stage has no its own canvas element
	        // TODO: may be it is better to cache all children layers?
	        cache: function() {
	            Kinetic.Util.warn('Cache function is not allowed for stage. You may use cache only for layers, groups and shapes.');
	        },
	        clearCache : function() {
	        }
	    });
	    Kinetic.Util.extend(Kinetic.Stage, Kinetic.Container);

	    // add getters and setters
	    Kinetic.Factory.addGetter(Kinetic.Stage, 'container');
	    Kinetic.Factory.addOverloadedGetterSetter(Kinetic.Stage, 'container');

	    /**
	     * get container DOM element
	     * @name container
	     * @method
	     * @memberof Kinetic.Stage.prototype
	     * @returns {DomElement} container
	     * @example
	     * // get container
	     * var container = stage.container();
	     * 
	     * // set container
	     * var container = document.createElement('div');
	     * body.appendChild(container);
	     * stage.container(container);
	     */

	})();
	;(function() {
	    Kinetic.Util.addMethods(Kinetic.BaseLayer, {
	        ___init: function(config) {
	            this.nodeType = 'Layer';
	            Kinetic.Container.call(this, config);
	        },
	        createPNGStream : function() {
	            return this.canvas._canvas.createPNGStream();
	        },
	        /**
	         * get layer canvas
	         * @method
	         * @memberof Kinetic.BaseLayer.prototype
	         */
	        getCanvas: function() {
	            return this.canvas;
	        },
	        /**
	         * get layer hit canvas
	         * @method
	         * @memberof Kinetic.BaseLayer.prototype
	         */
	        getHitCanvas: function() {
	            return this.hitCanvas;
	        },
	        /**
	         * get layer canvas context
	         * @method
	         * @memberof Kinetic.BaseLayer.prototype
	         */
	        getContext: function() {
	            return this.getCanvas().getContext();
	        },
	        /**
	         * clear scene and hit canvas contexts tied to the layer
	         * @method
	         * @memberof Kinetic.BaseLayer.prototype
	         * @param {Object} [bounds]
	         * @param {Number} [bounds.x]
	         * @param {Number} [bounds.y]
	         * @param {Number} [bounds.width]
	         * @param {Number} [bounds.height]
	         * @example
	         * layer.clear();
	         * layer.clear({
	         *   x : 0,
	         *   y : 0,
	         *   width : 100,
	         *   height : 100
	         * });
	         */
	        clear: function(bounds) {
	            this.getContext().clear(bounds);
	            this.getHitCanvas().getContext().clear(bounds);
	            return this;
	        },
	        clearHitCache: function() {
	            this._hitImageData = undefined;
	        },
	        // extend Node.prototype.setZIndex
	        setZIndex: function(index) {
	            Kinetic.Node.prototype.setZIndex.call(this, index);
	            var stage = this.getStage();
	            if(stage) {
	                stage.content.removeChild(this.getCanvas()._canvas);

	                if(index < stage.getChildren().length - 1) {
	                    stage.content.insertBefore(this.getCanvas()._canvas, stage.getChildren()[index + 1].getCanvas()._canvas);
	                }
	                else {
	                    stage.content.appendChild(this.getCanvas()._canvas);
	                }
	            }
	            return this;
	        },
	        // extend Node.prototype.moveToTop
	        moveToTop: function() {
	            Kinetic.Node.prototype.moveToTop.call(this);
	            var stage = this.getStage();
	            if(stage) {
	                stage.content.removeChild(this.getCanvas()._canvas);
	                stage.content.appendChild(this.getCanvas()._canvas);
	            }
	        },
	        // extend Node.prototype.moveUp
	        moveUp: function() {
	            if(Kinetic.Node.prototype.moveUp.call(this)) {
	                var stage = this.getStage();
	                if(stage) {
	                    stage.content.removeChild(this.getCanvas()._canvas);

	                    if(this.index < stage.getChildren().length - 1) {
	                        stage.content.insertBefore(this.getCanvas()._canvas, stage.getChildren()[this.index + 1].getCanvas()._canvas);
	                    }
	                    else {
	                        stage.content.appendChild(this.getCanvas()._canvas);
	                    }
	                }
	            }
	        },
	        // extend Node.prototype.moveDown
	        moveDown: function() {
	            if(Kinetic.Node.prototype.moveDown.call(this)) {
	                var stage = this.getStage();
	                if(stage) {
	                    var children = stage.getChildren();
	                    stage.content.removeChild(this.getCanvas()._canvas);
	                    stage.content.insertBefore(this.getCanvas()._canvas, children[this.index + 1].getCanvas()._canvas);
	                }
	            }
	        },
	        // extend Node.prototype.moveToBottom
	        moveToBottom: function() {
	            if(Kinetic.Node.prototype.moveToBottom.call(this)) {
	                var stage = this.getStage();
	                if(stage) {
	                    var children = stage.getChildren();
	                    stage.content.removeChild(this.getCanvas()._canvas);
	                    stage.content.insertBefore(this.getCanvas()._canvas, children[1].getCanvas()._canvas);
	                }
	            }
	        },
	        getLayer: function() {
	            return this;
	        },
	        remove: function() {
	            var _canvas = this.getCanvas()._canvas;

	            Kinetic.Node.prototype.remove.call(this);

	            if(_canvas && _canvas.parentNode && Kinetic.Util._isInDocument(_canvas)) {
	                _canvas.parentNode.removeChild(_canvas);
	            }
	            return this;
	        },
	        getStage: function() {
	            return this.parent;
	        },
	        setSize : function(width, height) {
	            this.canvas.setSize(width, height);
	        },
	        /**
	         * get/set width of layer.getter return width of stage. setter doing nothing.
	         * if you want change width use `stage.width(value);`
	         * @name width
	         * @method
	         * @memberof Kinetic.BaseLayer.prototype
	         * @returns {Number}
	         * @example
	         * var width = layer.width();
	         */
	        getWidth : function() {
	            if (this.parent) {
	                return this.parent.getWidth();
	            }
	        },
	        setWidth : function() {
	            Kinetic.Util.warn('Can not change width of layer. Use "stage.width(value)" function instead.');
	        },
	        /**
	         * get/set height of layer.getter return height of stage. setter doing nothing.
	         * if you want change height use `stage.height(value);`
	         * @name height
	         * @method
	         * @memberof Kinetic.BaseLayer.prototype
	         * @returns {Number}
	         * @example
	         * var height = layer.height();
	         */
	        getHeight : function() {
	            if (this.parent) {
	                return this.parent.getHeight();
	            }
	        },
	        setHeight : function() {
	            Kinetic.Util.warn('Can not change height of layer. Use "stage.height(value)" function instead.');
	        }
	    });
	    Kinetic.Util.extend(Kinetic.BaseLayer, Kinetic.Container);

	    // add getters and setters
	    Kinetic.Factory.addGetterSetter(Kinetic.BaseLayer, 'clearBeforeDraw', true);
	    /**
	     * get/set clearBeforeDraw flag which determines if the layer is cleared or not
	     *  before drawing
	     * @name clearBeforeDraw
	     * @method
	     * @memberof Kinetic.BaseLayer.prototype
	     * @param {Boolean} clearBeforeDraw
	     * @returns {Boolean}
	     * @example
	     * // get clearBeforeDraw flag
	     * var clearBeforeDraw = layer.clearBeforeDraw();
	     *
	     * // disable clear before draw
	     * layer.clearBeforeDraw(false);
	     *
	     * // enable clear before draw
	     * layer.clearBeforeDraw(true);
	     */

	    Kinetic.Collection.mapMethods(Kinetic.BaseLayer);
	})();
	;(function() {
	    // constants
	    var HASH = '#',
	        BEFORE_DRAW ='beforeDraw',
	        DRAW = 'draw',

	        /*
	         * 2 - 3 - 4
	         * |       |
	         * 1 - 0   5
	         *         |
	         * 8 - 7 - 6     
	         */
	        INTERSECTION_OFFSETS = [
	            {x:  0, y:  0}, // 0
	            {x: -1, y:  0}, // 1
	            {x: -1, y: -1}, // 2
	            {x:  0, y: -1}, // 3
	            {x:  1, y: -1}, // 4
	            {x:  1, y:  0}, // 5
	            {x:  1, y:  1}, // 6
	            {x:  0, y:  1}, // 7
	            {x: -1, y:  1}  // 8
	        ],
	        INTERSECTION_OFFSETS_LEN = INTERSECTION_OFFSETS.length;


	    Kinetic.Util.addMethods(Kinetic.Layer, {
	        ____init: function(config) {
	            this.nodeType = 'Layer';
	            this.canvas = new Kinetic.SceneCanvas();
	            this.hitCanvas = new Kinetic.HitCanvas();
	            // call super constructor
	            Kinetic.BaseLayer.call(this, config);
	        },
	        _setCanvasSize: function(width, height) {
	            this.canvas.setSize(width, height);
	            this.hitCanvas.setSize(width, height);
	        },
	        _validateAdd: function(child) {
	            var type = child.getType();
	            if (type !== 'Group' && type !== 'Shape') {
	                Kinetic.Util.error('You may only add groups and shapes to a layer.');
	            }
	        },
	        /**
	         * get visible intersection shape. This is the preferred
	         * method for determining if a point intersects a shape or not
	         * @method
	         * @memberof Kinetic.Layer.prototype
	         * @param {Object} pos
	         * @param {Number} pos.x
	         * @param {Number} pos.y
	         * @returns {Kinetic.Shape}
	         */
	        getIntersection: function(pos) {
	            var obj, i, intersectionOffset, shape;

	            if(this.hitGraphEnabled() && this.isVisible()) {
	                // in some cases antialiased area may be bigger than 1px
	                // it is possible if we will cache node, then scale it a lot
	                // TODO: check { 0; 0 } point before loop, and remove it from INTERSECTION_OFFSETS.
	                var spiralSearchDistance = 1;
	                var continueSearch = false;
	                while (true) {
	                    for (i=0; i<INTERSECTION_OFFSETS_LEN; i++) {
	                        intersectionOffset = INTERSECTION_OFFSETS[i];
	                        obj = this._getIntersection({
	                            x: pos.x + intersectionOffset.x * spiralSearchDistance,
	                            y: pos.y + intersectionOffset.y * spiralSearchDistance
	                        });
	                        shape = obj.shape;
	                        if (shape) {
	                            return shape;
	                        }
	                        // we should continue search if we found antialiased pixel
	                        // that means our node somewhere very close
	                        else if (obj.antialiased) {
	                            continueSearch = true;
	                        }
	                    }
	                    // if no shape, and no antialiased pixel, we should end searching 
	                    if (continueSearch) {
	                        spiralSearchDistance += 1;
	                    } else {
	                        return;
	                    }
	                }
	            } else {
	                return null;
	            }
	        },
	        _getImageData: function(x, y) {
	            var width = this.hitCanvas.width || 1,
	                height = this.hitCanvas.height || 1,
	                index = (Math.round(y) * width ) + Math.round(x);

	            if (!this._hitImageData) {
	                this._hitImageData = this.hitCanvas.context.getImageData(0, 0, width, height);
	            }

	            return [
	                this._hitImageData.data[4 * index + 0] , // Red
	                this._hitImageData.data[4 * index + 1], // Green
	                this._hitImageData.data[4 * index + 2], // Blue
	                this._hitImageData.data[4 * index + 3] // Alpha
	            ];
	        },
	        _getIntersection: function(pos) {
	            var p = this.hitCanvas.context.getImageData(pos.x, pos.y, 1, 1).data,
	                p3 = p[3],
	                colorKey, shape;

	            // fully opaque pixel
	            if(p3 === 255) {
	                colorKey = Kinetic.Util._rgbToHex(p[0], p[1], p[2]);
	                shape = Kinetic.shapes[HASH + colorKey];
	                return {
	                    shape: shape
	                };
	            }
	            // antialiased pixel
	            else if(p3 > 0) {
	                return {
	                    antialiased: true
	                };
	            }
	            // empty pixel
	            else {
	                return {};
	            }
	        },
	        drawScene: function(can, top) {
	            var layer = this.getLayer(),
	                canvas = can || (layer && layer.getCanvas());

	            this._fire(BEFORE_DRAW, {
	                node: this
	            });

	            if(this.getClearBeforeDraw()) {
	                canvas.getContext().clear();
	            }
	            
	            Kinetic.Container.prototype.drawScene.call(this, canvas, top);

	            this._fire(DRAW, {
	                node: this
	            });

	            return this;
	        },
	        // the apply transform method is handled by the Layer and FastLayer class
	        // because it is up to the layer to decide if an absolute or relative transform
	        // should be used
	        _applyTransform: function(shape, context, top) {
	            var m = shape.getAbsoluteTransform(top).getMatrix();
	            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);
	        },
	        drawHit: function(can, top) {
	            var layer = this.getLayer(),
	                canvas = can || (layer && layer.hitCanvas);

	            if(layer && layer.getClearBeforeDraw()) {
	                layer.getHitCanvas().getContext().clear();
	            }

	            Kinetic.Container.prototype.drawHit.call(this, canvas, top);
	            this.imageData = null; // Clear imageData cache
	            return this;
	        },
	        /**
	         * clear scene and hit canvas contexts tied to the layer
	         * @method
	         * @memberof Kinetic.Layer.prototype
	         * @param {Object} [bounds]
	         * @param {Number} [bounds.x]
	         * @param {Number} [bounds.y]
	         * @param {Number} [bounds.width]
	         * @param {Number} [bounds.height]
	         * @example
	         * layer.clear();
	         * layer.clear({
	         *   x : 0,
	         *   y : 0,
	         *   width : 100,
	         *   height : 100
	         * });
	         */
	        clear: function(bounds) {
	            this.getContext().clear(bounds);
	            this.getHitCanvas().getContext().clear(bounds);
	            this.imageData = null; // Clear getImageData cache
	            return this;
	        },
	        // extend Node.prototype.setVisible
	        setVisible: function(visible) {
	            Kinetic.Node.prototype.setVisible.call(this, visible);
	            if(visible) {
	                this.getCanvas()._canvas.style.display = 'block';
	                this.hitCanvas._canvas.style.display = 'block';
	            }
	            else {
	                this.getCanvas()._canvas.style.display = 'none';
	                this.hitCanvas._canvas.style.display = 'none';
	            }
	            return this;
	        },
	        /**
	         * enable hit graph
	         * @name enableHitGraph
	         * @method
	         * @memberof Kinetic.Layer.prototype
	         * @returns {Layer}
	         */
	        enableHitGraph: function() {
	            this.setHitGraphEnabled(true);
	            return this;
	        },
	        /**
	         * disable hit graph
	         * @name disableHitGraph
	         * @method
	         * @memberof Kinetic.Layer.prototype
	         * @returns {Layer}
	         */
	        disableHitGraph: function() {
	            this.setHitGraphEnabled(false);
	            return this;
	        },
	        setSize : function(width, height) {
	            Kinetic.BaseLayer.prototype.setSize.call(this, width, height);
	            this.hitCanvas.setSize(width, height);
	        }
	    });
	    Kinetic.Util.extend(Kinetic.Layer, Kinetic.BaseLayer);

	    Kinetic.Factory.addGetterSetter(Kinetic.Layer, 'hitGraphEnabled', true);
	    /**
	     * get/set hitGraphEnabled flag.  Disabling the hit graph will greatly increase
	     *  draw performance because the hit graph will not be redrawn each time the layer is
	     *  drawn.  This, however, also disables mouse/touch event detection
	     * @name hitGraphEnabled
	     * @method
	     * @memberof Kinetic.Layer.prototype
	     * @param {Boolean} enabled
	     * @returns {Boolean}
	     * @example
	     * // get hitGraphEnabled flag
	     * var hitGraphEnabled = layer.hitGraphEnabled();
	     *
	     * // disable hit graph
	     * layer.hitGraphEnabled(false);
	     *
	     * // enable hit graph
	     * layer.hitGraphEnabled(true);
	     */
	    Kinetic.Collection.mapMethods(Kinetic.Layer);
	})();
	;(function() {

	    Kinetic.Util.addMethods(Kinetic.FastLayer, {
	        ____init: function(config) {
	            this.nodeType = 'Layer';
	            this.canvas = new Kinetic.SceneCanvas();
	            // call super constructor
	            Kinetic.BaseLayer.call(this, config);
	        },
	        _validateAdd: function(child) {
	            var type = child.getType();
	            if (type !== 'Shape') {
	                Kinetic.Util.error('You may only add shapes to a fast layer.');
	            }
	        },
	        _setCanvasSize: function(width, height) {
	            this.canvas.setSize(width, height);
	        },
	        hitGraphEnabled: function() {
	            return false;
	        },
	        getIntersection: function() {
	            return null;
	        },
	        drawScene: function(can) {
	            var layer = this.getLayer(),
	                canvas = can || (layer && layer.getCanvas());

	            if(this.getClearBeforeDraw()) {
	                canvas.getContext().clear();
	            }
	            
	            Kinetic.Container.prototype.drawScene.call(this, canvas);

	            return this;
	        },
	        // the apply transform method is handled by the Layer and FastLayer class
	        // because it is up to the layer to decide if an absolute or relative transform
	        // should be used
	        _applyTransform: function(shape, context, top) {
	            if (!top || top._id !== this._id) {
	                var m = shape.getTransform().getMatrix();
	                context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);
	            }
	        },
	        draw: function() {
	            this.drawScene();
	            return this;
	        },
	        /**
	         * clear scene and hit canvas contexts tied to the layer
	         * @method
	         * @memberof Kinetic.FastLayer.prototype
	         * @param {Object} [bounds]
	         * @param {Number} [bounds.x]
	         * @param {Number} [bounds.y]
	         * @param {Number} [bounds.width]
	         * @param {Number} [bounds.height]
	         * @example
	         * layer.clear();
	         * layer.clear({
	         *   x : 0,
	         *   y : 0,
	         *   width : 100,
	         *   height : 100
	         * });
	         */
	        clear: function(bounds) {
	            this.getContext().clear(bounds);
	            return this;
	        },
	        // extend Node.prototype.setVisible
	        setVisible: function(visible) {
	            Kinetic.Node.prototype.setVisible.call(this, visible);
	            if(visible) {
	                this.getCanvas()._canvas.style.display = 'block';
	            }
	            else {
	                this.getCanvas()._canvas.style.display = 'none';
	            }
	            return this;
	        }
	    });
	    Kinetic.Util.extend(Kinetic.FastLayer, Kinetic.BaseLayer);

	    Kinetic.Collection.mapMethods(Kinetic.FastLayer);
	})();
	;(function() {
	    Kinetic.Util.addMethods(Kinetic.Group, {
	        ___init: function(config) {
	            this.nodeType = 'Group';
	            // call super constructor
	            Kinetic.Container.call(this, config);
	        },
	        _validateAdd: function(child) {
	            var type = child.getType();
	            if (type !== 'Group' && type !== 'Shape') {
	                Kinetic.Util.error('You may only add groups and shapes to groups.');
	            }
	        }
	    });
	    Kinetic.Util.extend(Kinetic.Group, Kinetic.Container);

	    Kinetic.Collection.mapMethods(Kinetic.Group);
	})();
	;(function() {
	    /**
	     * Rect constructor
	     * @constructor
	     * @memberof Kinetic
	     * @augments Kinetic.Shape
	     * @param {Object} config
	     * @param {Number} [config.cornerRadius]
	     * @param {String} [config.fill] fill color
	     * @param {Integer} [config.fillRed] set fill red component
	     * @param {Integer} [config.fillGreen] set fill green component
	     * @param {Integer} [config.fillBlue] set fill blue component
	     * @param {Integer} [config.fillAlpha] set fill alpha component
	     * @param {Image} [config.fillPatternImage] fill pattern image
	     * @param {Number} [config.fillPatternX]
	     * @param {Number} [config.fillPatternY]
	     * @param {Object} [config.fillPatternOffset] object with x and y component
	     * @param {Number} [config.fillPatternOffsetX] 
	     * @param {Number} [config.fillPatternOffsetY] 
	     * @param {Object} [config.fillPatternScale] object with x and y component
	     * @param {Number} [config.fillPatternScaleX]
	     * @param {Number} [config.fillPatternScaleY]
	     * @param {Number} [config.fillPatternRotation]
	     * @param {String} [config.fillPatternRepeat] can be "repeat", "repeat-x", "repeat-y", or "no-repeat".  The default is "no-repeat"
	     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientStartPointX]
	     * @param {Number} [config.fillLinearGradientStartPointY]
	     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientEndPointX]
	     * @param {Number} [config.fillLinearGradientEndPointY]
	     * @param {Array} [config.fillLinearGradientColorStops] array of color stops
	     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientStartPointX]
	     * @param {Number} [config.fillRadialGradientStartPointY]
	     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientEndPointX] 
	     * @param {Number} [config.fillRadialGradientEndPointY] 
	     * @param {Number} [config.fillRadialGradientStartRadius]
	     * @param {Number} [config.fillRadialGradientEndRadius]
	     * @param {Array} [config.fillRadialGradientColorStops] array of color stops
	     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true
	     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration
	     * @param {String} [config.stroke] stroke color
	     * @param {Integer} [config.strokeRed] set stroke red component
	     * @param {Integer} [config.strokeGreen] set stroke green component
	     * @param {Integer} [config.strokeBlue] set stroke blue component
	     * @param {Integer} [config.strokeAlpha] set stroke alpha component
	     * @param {Number} [config.strokeWidth] stroke width
	     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true
	     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true
	     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default
	     *  is miter
	     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default
	     *  is butt
	     * @param {String} [config.shadowColor]
	     * @param {Integer} [config.shadowRed] set shadow color red component
	     * @param {Integer} [config.shadowGreen] set shadow color green component
	     * @param {Integer} [config.shadowBlue] set shadow color blue component
	     * @param {Integer} [config.shadowAlpha] set shadow color alpha component
	     * @param {Number} [config.shadowBlur]
	     * @param {Object} [config.shadowOffset] object with x and y component
	     * @param {Number} [config.shadowOffsetX]
	     * @param {Number} [config.shadowOffsetY]
	     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number
	     *  between 0 and 1
	     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true
	     * @param {Array} [config.dash]
	     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true
	     * @param {Number} [config.x]
	     * @param {Number} [config.y]
	     * @param {Number} [config.width]
	     * @param {Number} [config.height]
	     * @param {Boolean} [config.visible]
	     * @param {Boolean} [config.listening] whether or not the node is listening for events
	     * @param {String} [config.id] unique id
	     * @param {String} [config.name] non-unique name
	     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1
	     * @param {Object} [config.scale] set scale
	     * @param {Number} [config.scaleX] set scale x
	     * @param {Number} [config.scaleY] set scale y
	     * @param {Number} [config.rotation] rotation in degrees
	     * @param {Object} [config.offset] offset from center point and rotation point
	     * @param {Number} [config.offsetX] set offset x
	     * @param {Number} [config.offsetY] set offset y
	     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop
	     *  the entire stage by dragging any portion of the stage
	     * @param {Number} [config.dragDistance]
	     * @param {Function} [config.dragBoundFunc]
	     * @example
	     * var rect = new Kinetic.Rect({
	     *   width: 100,
	     *   height: 50,
	     *   fill: 'red',
	     *   stroke: 'black',
	     *   strokeWidth: 5
	     * });
	     */
	    Kinetic.Rect = function(config) {
	        this.___init(config);
	    };

	    Kinetic.Rect.prototype = {
	        ___init: function(config) {
	            Kinetic.Shape.call(this, config);
	            this.className = 'Rect';
	            this.sceneFunc(this._sceneFunc);
	        },
	        _sceneFunc: function(context) {
	            var cornerRadius = this.getCornerRadius(),
	                width = this.getWidth(),
	                height = this.getHeight();

	            
	            context.beginPath();

	            if(!cornerRadius) {
	                // simple rect - don't bother doing all that complicated maths stuff.
	                context.rect(0, 0, width, height);
	            }
	            else {
	                // arcTo would be nicer, but browser support is patchy (Opera)
	                context.moveTo(cornerRadius, 0);
	                context.lineTo(width - cornerRadius, 0);
	                context.arc(width - cornerRadius, cornerRadius, cornerRadius, Math.PI * 3 / 2, 0, false);
	                context.lineTo(width, height - cornerRadius);
	                context.arc(width - cornerRadius, height - cornerRadius, cornerRadius, 0, Math.PI / 2, false);
	                context.lineTo(cornerRadius, height);
	                context.arc(cornerRadius, height - cornerRadius, cornerRadius, Math.PI / 2, Math.PI, false);
	                context.lineTo(0, cornerRadius);
	                context.arc(cornerRadius, cornerRadius, cornerRadius, Math.PI, Math.PI * 3 / 2, false);
	            }
	            context.closePath();
	            context.fillStrokeShape(this);
	        }
	    };

	    Kinetic.Util.extend(Kinetic.Rect, Kinetic.Shape);

	    Kinetic.Factory.addGetterSetter(Kinetic.Rect, 'cornerRadius', 0);
	    /**
	     * get/set corner radius
	     * @name cornerRadius
	     * @method
	     * @memberof Kinetic.Rect.prototype
	     * @param {Number} cornerRadius
	     * @returns {Number}
	     * @example
	     * // get corner radius
	     * var cornerRadius = rect.cornerRadius();
	     * 
	     * // set corner radius
	     * rect.cornerRadius(10);
	     */

	    Kinetic.Collection.mapMethods(Kinetic.Rect);
	})();
	;(function() {
	    // the 0.0001 offset fixes a bug in Chrome 27
	    var PIx2 = (Math.PI * 2) - 0.0001,
	        CIRCLE = 'Circle';

	    /**
	     * Circle constructor
	     * @constructor
	     * @memberof Kinetic
	     * @augments Kinetic.Shape
	     * @param {Object} config
	     * @param {Number} config.radius
	     * @param {String} [config.fill] fill color
	     * @param {Integer} [config.fillRed] set fill red component
	     * @param {Integer} [config.fillGreen] set fill green component
	     * @param {Integer} [config.fillBlue] set fill blue component
	     * @param {Integer} [config.fillAlpha] set fill alpha component
	     * @param {Image} [config.fillPatternImage] fill pattern image
	     * @param {Number} [config.fillPatternX]
	     * @param {Number} [config.fillPatternY]
	     * @param {Object} [config.fillPatternOffset] object with x and y component
	     * @param {Number} [config.fillPatternOffsetX] 
	     * @param {Number} [config.fillPatternOffsetY] 
	     * @param {Object} [config.fillPatternScale] object with x and y component
	     * @param {Number} [config.fillPatternScaleX]
	     * @param {Number} [config.fillPatternScaleY]
	     * @param {Number} [config.fillPatternRotation]
	     * @param {String} [config.fillPatternRepeat] can be "repeat", "repeat-x", "repeat-y", or "no-repeat".  The default is "no-repeat"
	     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientStartPointX]
	     * @param {Number} [config.fillLinearGradientStartPointY]
	     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientEndPointX]
	     * @param {Number} [config.fillLinearGradientEndPointY]
	     * @param {Array} [config.fillLinearGradientColorStops] array of color stops
	     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientStartPointX]
	     * @param {Number} [config.fillRadialGradientStartPointY]
	     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientEndPointX] 
	     * @param {Number} [config.fillRadialGradientEndPointY] 
	     * @param {Number} [config.fillRadialGradientStartRadius]
	     * @param {Number} [config.fillRadialGradientEndRadius]
	     * @param {Array} [config.fillRadialGradientColorStops] array of color stops
	     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true
	     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration
	     * @param {String} [config.stroke] stroke color
	     * @param {Integer} [config.strokeRed] set stroke red component
	     * @param {Integer} [config.strokeGreen] set stroke green component
	     * @param {Integer} [config.strokeBlue] set stroke blue component
	     * @param {Integer} [config.strokeAlpha] set stroke alpha component
	     * @param {Number} [config.strokeWidth] stroke width
	     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true
	     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true
	     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default
	     *  is miter
	     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default
	     *  is butt
	     * @param {String} [config.shadowColor]
	     * @param {Integer} [config.shadowRed] set shadow color red component
	     * @param {Integer} [config.shadowGreen] set shadow color green component
	     * @param {Integer} [config.shadowBlue] set shadow color blue component
	     * @param {Integer} [config.shadowAlpha] set shadow color alpha component
	     * @param {Number} [config.shadowBlur]
	     * @param {Object} [config.shadowOffset] object with x and y component
	     * @param {Number} [config.shadowOffsetX]
	     * @param {Number} [config.shadowOffsetY]
	     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number
	     *  between 0 and 1
	     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true
	     * @param {Array} [config.dash]
	     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true
	     * @param {Number} [config.x]
	     * @param {Number} [config.y]
	     * @param {Number} [config.width]
	     * @param {Number} [config.height]
	     * @param {Boolean} [config.visible]
	     * @param {Boolean} [config.listening] whether or not the node is listening for events
	     * @param {String} [config.id] unique id
	     * @param {String} [config.name] non-unique name
	     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1
	     * @param {Object} [config.scale] set scale
	     * @param {Number} [config.scaleX] set scale x
	     * @param {Number} [config.scaleY] set scale y
	     * @param {Number} [config.rotation] rotation in degrees
	     * @param {Object} [config.offset] offset from center point and rotation point
	     * @param {Number} [config.offsetX] set offset x
	     * @param {Number} [config.offsetY] set offset y
	     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop
	     *  the entire stage by dragging any portion of the stage
	     * @param {Number} [config.dragDistance]
	     * @param {Function} [config.dragBoundFunc]
	     * @example
	     * // create circle
	     * var circle = new Kinetic.Circle({
	     *   radius: 40,
	     *   fill: 'red',
	     *   stroke: 'black'
	     *   strokeWidth: 5
	     * });
	     */
	    Kinetic.Circle = function(config) {
	        this.___init(config);
	    };

	    Kinetic.Circle.prototype = {
	        ___init: function(config) {
	            // call super constructor
	            Kinetic.Shape.call(this, config);
	            this.className = CIRCLE;
	            this.sceneFunc(this._sceneFunc);
	        },
	        _sceneFunc: function(context) {
	            context.beginPath();
	            context.arc(0, 0, this.getRadius(), 0, PIx2, false);
	            context.closePath();
	            context.fillStrokeShape(this);
	        },
	        // implements Shape.prototype.getWidth()
	        getWidth: function() {
	            return this.getRadius() * 2;
	        },
	        // implements Shape.prototype.getHeight()
	        getHeight: function() {
	            return this.getRadius() * 2;
	        },
	        // implements Shape.prototype.setWidth()
	        setWidth: function(width) {
	            Kinetic.Node.prototype.setWidth.call(this, width);
	            if (this.radius() !== width / 2) {
	                this.setRadius(width / 2);
	            }
	        },
	        // implements Shape.prototype.setHeight()
	        setHeight: function(height) {
	            Kinetic.Node.prototype.setHeight.call(this, height);
	            if (this.radius() !== height / 2) {
	                this.setRadius(height / 2);
	            }
	        },
	        setRadius : function(val) {
	            this._setAttr('radius', val);
	            this.setWidth(val * 2);
	            this.setHeight(val * 2);
	        }
	    };
	    Kinetic.Util.extend(Kinetic.Circle, Kinetic.Shape);

	    // add getters setters
	    Kinetic.Factory.addGetter(Kinetic.Circle, 'radius', 0);
	    Kinetic.Factory.addOverloadedGetterSetter(Kinetic.Circle, 'radius');

	    /**
	     * get/set radius
	     * @name radius
	     * @method
	     * @memberof Kinetic.Circle.prototype
	     * @param {Number} radius
	     * @returns {Number}
	     * @example
	     * // get radius
	     * var radius = circle.radius();
	     *
	     * // set radius
	     * circle.radius(10);
	     */

	    Kinetic.Collection.mapMethods(Kinetic.Circle);
	})();
	;(function() {
	    // the 0.0001 offset fixes a bug in Chrome 27
	    var PIx2 = (Math.PI * 2) - 0.0001,
	        ELLIPSE = 'Ellipse';

	    /**
	     * Ellipse constructor
	     * @constructor
	     * @augments Kinetic.Shape
	     * @param {Object} config
	     * @param {Object} config.radius defines x and y radius
	     * @@ShapeParams
	     * @@NodeParams
	     * @example
	     * var ellipse = new Kinetic.Ellipse({
	     *   radius : {
	     *     x : 50,
	     *     y : 50
	     *   },
	     *   fill: 'red'
	     * });
	     */
	    Kinetic.Ellipse = function(config) {
	        this.___init(config);
	    };

	    Kinetic.Ellipse.prototype = {
	        ___init: function(config) {
	            // call super constructor
	            Kinetic.Shape.call(this, config);
	            this.className = ELLIPSE;
	            this.sceneFunc(this._sceneFunc);
	        },
	        _sceneFunc: function(context) {
	            var rx = this.getRadiusX(),
	                ry = this.getRadiusY();

	            context.beginPath();
	            context.save();
	            if(rx !== ry) {
	                context.scale(1, ry / rx);
	            }
	            context.arc(0, 0, rx, 0, PIx2, false);
	            context.restore();
	            context.closePath();
	            context.fillStrokeShape(this);
	        },
	        // implements Shape.prototype.getWidth()
	        getWidth: function() {
	            return this.getRadiusX() * 2;
	        },
	        // implements Shape.prototype.getHeight()
	        getHeight: function() {
	            return this.getRadiusY() * 2;
	        },
	        // implements Shape.prototype.setWidth()
	        setWidth: function(width) {
	            Kinetic.Node.prototype.setWidth.call(this, width);
	            this.setRadius({
	                x: width / 2
	            });
	        },
	        // implements Shape.prototype.setHeight()
	        setHeight: function(height) {
	            Kinetic.Node.prototype.setHeight.call(this, height);
	            this.setRadius({
	                y: height / 2
	            });
	        }
	    };
	    Kinetic.Util.extend(Kinetic.Ellipse, Kinetic.Shape);

	    // add getters setters
	    Kinetic.Factory.addComponentsGetterSetter(Kinetic.Ellipse, 'radius', ['x', 'y']);

	    /**
	     * get/set radius
	     * @name radius
	     * @method
	     * @memberof Kinetic.Ellipse.prototype
	     * @param {Object} radius
	     * @param {Number} radius.x
	     * @param {Number} radius.y
	     * @returns {Object}
	     * @example
	     * // get radius
	     * var radius = ellipse.radius();
	     * 
	     * // set radius
	     * ellipse.radius({
	     *   x: 200,
	     *   y: 100
	     * });
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Ellipse, 'radiusX', 0);
	    /**
	     * get/set radius x
	     * @name radiusX
	     * @method
	     * @memberof Kinetic.Ellipse.prototype
	     * @param {Number} x
	     * @returns {Number}
	     * @example
	     * // get radius x
	     * var radiusX = ellipse.radiusX();
	     * 
	     * // set radius x
	     * ellipse.radiusX(200);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Ellipse, 'radiusY', 0);
	    /**
	     * get/set radius y
	     * @name radiusY
	     * @method
	     * @memberof Kinetic.Ellipse.prototype
	     * @param {Number} y
	     * @returns {Number}
	     * @example
	     * // get radius y
	     * var radiusY = ellipse.radiusY();
	     * 
	     * // set radius y
	     * ellipse.radiusY(200);
	     */

	    Kinetic.Collection.mapMethods(Kinetic.Ellipse);

	})();;(function() {
	    // the 0.0001 offset fixes a bug in Chrome 27
	    var PIx2 = (Math.PI * 2) - 0.0001;
	    
	    /**
	     * Ring constructor
	     * @constructor
	     * @augments Kinetic.Shape
	     * @param {Object} config
	     * @param {Number} config.innerRadius
	     * @param {Number} config.outerRadius
	     * @param {Boolean} [config.clockwise]
	     * @param {String} [config.fill] fill color
	     * @param {Integer} [config.fillRed] set fill red component
	     * @param {Integer} [config.fillGreen] set fill green component
	     * @param {Integer} [config.fillBlue] set fill blue component
	     * @param {Integer} [config.fillAlpha] set fill alpha component
	     * @param {Image} [config.fillPatternImage] fill pattern image
	     * @param {Number} [config.fillPatternX]
	     * @param {Number} [config.fillPatternY]
	     * @param {Object} [config.fillPatternOffset] object with x and y component
	     * @param {Number} [config.fillPatternOffsetX] 
	     * @param {Number} [config.fillPatternOffsetY] 
	     * @param {Object} [config.fillPatternScale] object with x and y component
	     * @param {Number} [config.fillPatternScaleX]
	     * @param {Number} [config.fillPatternScaleY]
	     * @param {Number} [config.fillPatternRotation]
	     * @param {String} [config.fillPatternRepeat] can be "repeat", "repeat-x", "repeat-y", or "no-repeat".  The default is "no-repeat"
	     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientStartPointX]
	     * @param {Number} [config.fillLinearGradientStartPointY]
	     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientEndPointX]
	     * @param {Number} [config.fillLinearGradientEndPointY]
	     * @param {Array} [config.fillLinearGradientColorStops] array of color stops
	     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientStartPointX]
	     * @param {Number} [config.fillRadialGradientStartPointY]
	     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientEndPointX] 
	     * @param {Number} [config.fillRadialGradientEndPointY] 
	     * @param {Number} [config.fillRadialGradientStartRadius]
	     * @param {Number} [config.fillRadialGradientEndRadius]
	     * @param {Array} [config.fillRadialGradientColorStops] array of color stops
	     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true
	     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration
	     * @param {String} [config.stroke] stroke color
	     * @param {Integer} [config.strokeRed] set stroke red component
	     * @param {Integer} [config.strokeGreen] set stroke green component
	     * @param {Integer} [config.strokeBlue] set stroke blue component
	     * @param {Integer} [config.strokeAlpha] set stroke alpha component
	     * @param {Number} [config.strokeWidth] stroke width
	     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true
	     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true
	     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default
	     *  is miter
	     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default
	     *  is butt
	     * @param {String} [config.shadowColor]
	     * @param {Integer} [config.shadowRed] set shadow color red component
	     * @param {Integer} [config.shadowGreen] set shadow color green component
	     * @param {Integer} [config.shadowBlue] set shadow color blue component
	     * @param {Integer} [config.shadowAlpha] set shadow color alpha component
	     * @param {Number} [config.shadowBlur]
	     * @param {Object} [config.shadowOffset] object with x and y component
	     * @param {Number} [config.shadowOffsetX]
	     * @param {Number} [config.shadowOffsetY]
	     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number
	     *  between 0 and 1
	     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true
	     * @param {Array} [config.dash]
	     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true
	     * @param {Number} [config.x]
	     * @param {Number} [config.y]
	     * @param {Number} [config.width]
	     * @param {Number} [config.height]
	     * @param {Boolean} [config.visible]
	     * @param {Boolean} [config.listening] whether or not the node is listening for events
	     * @param {String} [config.id] unique id
	     * @param {String} [config.name] non-unique name
	     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1
	     * @param {Object} [config.scale] set scale
	     * @param {Number} [config.scaleX] set scale x
	     * @param {Number} [config.scaleY] set scale y
	     * @param {Number} [config.rotation] rotation in degrees
	     * @param {Object} [config.offset] offset from center point and rotation point
	     * @param {Number} [config.offsetX] set offset x
	     * @param {Number} [config.offsetY] set offset y
	     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop
	     *  the entire stage by dragging any portion of the stage
	     * @param {Number} [config.dragDistance]
	     * @param {Function} [config.dragBoundFunc]
	     * @example
	     * var ring = new Kinetic.Ring({
	     *   innerRadius: 40,
	     *   outerRadius: 80,
	     *   fill: 'red',
	     *   stroke: 'black',
	     *   strokeWidth: 5
	     * });
	     */
	    Kinetic.Ring = function(config) {
	        this.___init(config);
	    };

	    Kinetic.Ring.prototype = {
	        ___init: function(config) {
	            // call super constructor
	            Kinetic.Shape.call(this, config);
	            this.className = 'Ring';
	            this.sceneFunc(this._sceneFunc);
	        },
	        _sceneFunc: function(context) {
	            context.beginPath();
	            context.arc(0, 0, this.getInnerRadius(), 0, PIx2, false);
	            context.moveTo(this.getOuterRadius(), 0);
	            context.arc(0, 0, this.getOuterRadius(), PIx2, 0, true);
	            context.closePath();
	            context.fillStrokeShape(this);
	        },
	        // implements Shape.prototype.getWidth()
	        getWidth: function() {
	            return this.getOuterRadius() * 2;
	        },
	        // implements Shape.prototype.getHeight()
	        getHeight: function() {
	            return this.getOuterRadius() * 2;
	        },
	        // implements Shape.prototype.setWidth()
	        setWidth: function(width) {
	            Kinetic.Node.prototype.setWidth.call(this, width);
	            if (this.outerRadius() !== width / 2) {
	                this.setOuterRadius(width / 2);
	            }
	        },
	        // implements Shape.prototype.setHeight()
	        setHeight: function(height) {
	            Kinetic.Node.prototype.setHeight.call(this, height);
	            if (this.outerRadius() !== height / 2) {
	                this.setOuterRadius(height / 2);
	            }
	        },
	        setOuterRadius : function(val) {
	            this._setAttr('outerRadius', val);
	            this.setWidth(val * 2);
	            this.setHeight(val * 2);
	        }
	    };
	    Kinetic.Util.extend(Kinetic.Ring, Kinetic.Shape);

	    // add getters setters
	    Kinetic.Factory.addGetterSetter(Kinetic.Ring, 'innerRadius', 0);

	    /**
	     * get/set innerRadius
	     * @name innerRadius
	     * @method
	     * @memberof Kinetic.Ring.prototype
	     * @param {Number} innerRadius
	     * @returns {Number}
	     * @example
	     * // get inner radius
	     * var innerRadius = ring.innerRadius();
	     *
	     * // set inner radius
	     * ring.innerRadius(20);
	     */
	     
	    Kinetic.Factory.addGetter(Kinetic.Ring, 'outerRadius', 0);
	    Kinetic.Factory.addOverloadedGetterSetter(Kinetic.Ring, 'outerRadius');

	    /**
	     * get/set outerRadius
	     * @name outerRadius
	     * @method
	     * @memberof Kinetic.Ring.prototype
	     * @param {Number} outerRadius
	     * @returns {Number}
	     * @example
	     * // get outer radius
	     * var outerRadius = ring.outerRadius();
	     *
	     * // set outer radius
	     * ring.outerRadius(20);
	     */

	    Kinetic.Collection.mapMethods(Kinetic.Ring);
	})();
	;(function() {
	    /**
	     * Wedge constructor
	     * @constructor
	     * @augments Kinetic.Shape
	     * @param {Object} config
	     * @param {Number} config.angle in degrees
	     * @param {Number} config.radius
	     * @param {Boolean} [config.clockwise]
	     * @param {String} [config.fill] fill color
	     * @param {Integer} [config.fillRed] set fill red component
	     * @param {Integer} [config.fillGreen] set fill green component
	     * @param {Integer} [config.fillBlue] set fill blue component
	     * @param {Integer} [config.fillAlpha] set fill alpha component
	     * @param {Image} [config.fillPatternImage] fill pattern image
	     * @param {Number} [config.fillPatternX]
	     * @param {Number} [config.fillPatternY]
	     * @param {Object} [config.fillPatternOffset] object with x and y component
	     * @param {Number} [config.fillPatternOffsetX] 
	     * @param {Number} [config.fillPatternOffsetY] 
	     * @param {Object} [config.fillPatternScale] object with x and y component
	     * @param {Number} [config.fillPatternScaleX]
	     * @param {Number} [config.fillPatternScaleY]
	     * @param {Number} [config.fillPatternRotation]
	     * @param {String} [config.fillPatternRepeat] can be "repeat", "repeat-x", "repeat-y", or "no-repeat".  The default is "no-repeat"
	     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientStartPointX]
	     * @param {Number} [config.fillLinearGradientStartPointY]
	     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientEndPointX]
	     * @param {Number} [config.fillLinearGradientEndPointY]
	     * @param {Array} [config.fillLinearGradientColorStops] array of color stops
	     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientStartPointX]
	     * @param {Number} [config.fillRadialGradientStartPointY]
	     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientEndPointX] 
	     * @param {Number} [config.fillRadialGradientEndPointY] 
	     * @param {Number} [config.fillRadialGradientStartRadius]
	     * @param {Number} [config.fillRadialGradientEndRadius]
	     * @param {Array} [config.fillRadialGradientColorStops] array of color stops
	     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true
	     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration
	     * @param {String} [config.stroke] stroke color
	     * @param {Integer} [config.strokeRed] set stroke red component
	     * @param {Integer} [config.strokeGreen] set stroke green component
	     * @param {Integer} [config.strokeBlue] set stroke blue component
	     * @param {Integer} [config.strokeAlpha] set stroke alpha component
	     * @param {Number} [config.strokeWidth] stroke width
	     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true
	     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true
	     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default
	     *  is miter
	     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default
	     *  is butt
	     * @param {String} [config.shadowColor]
	     * @param {Integer} [config.shadowRed] set shadow color red component
	     * @param {Integer} [config.shadowGreen] set shadow color green component
	     * @param {Integer} [config.shadowBlue] set shadow color blue component
	     * @param {Integer} [config.shadowAlpha] set shadow color alpha component
	     * @param {Number} [config.shadowBlur]
	     * @param {Object} [config.shadowOffset] object with x and y component
	     * @param {Number} [config.shadowOffsetX]
	     * @param {Number} [config.shadowOffsetY]
	     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number
	     *  between 0 and 1
	     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true
	     * @param {Array} [config.dash]
	     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true
	     * @param {Number} [config.x]
	     * @param {Number} [config.y]
	     * @param {Number} [config.width]
	     * @param {Number} [config.height]
	     * @param {Boolean} [config.visible]
	     * @param {Boolean} [config.listening] whether or not the node is listening for events
	     * @param {String} [config.id] unique id
	     * @param {String} [config.name] non-unique name
	     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1
	     * @param {Object} [config.scale] set scale
	     * @param {Number} [config.scaleX] set scale x
	     * @param {Number} [config.scaleY] set scale y
	     * @param {Number} [config.rotation] rotation in degrees
	     * @param {Object} [config.offset] offset from center point and rotation point
	     * @param {Number} [config.offsetX] set offset x
	     * @param {Number} [config.offsetY] set offset y
	     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop
	     *  the entire stage by dragging any portion of the stage
	     * @param {Number} [config.dragDistance]
	     * @param {Function} [config.dragBoundFunc]
	     * @example
	     * // draw a wedge that's pointing downwards
	     * var wedge = new Kinetic.Wedge({
	     *   radius: 40,
	     *   fill: 'red',
	     *   stroke: 'black'
	     *   strokeWidth: 5,
	     *   angleDeg: 60,
	     *   rotationDeg: -120
	     * });
	     */
	    Kinetic.Wedge = function(config) {
	        this.___init(config);
	    };

	    Kinetic.Wedge.prototype = {
	        ___init: function(config) {
	            // call super constructor
	            Kinetic.Shape.call(this, config);
	            this.className = 'Wedge';
	            this.sceneFunc(this._sceneFunc);
	        },
	        _sceneFunc: function(context) {
	            context.beginPath();
	            context.arc(0, 0, this.getRadius(), 0, Kinetic.getAngle(this.getAngle()), this.getClockwise());
	            context.lineTo(0, 0);
	            context.closePath();
	            context.fillStrokeShape(this);
	        }
	    };
	    Kinetic.Util.extend(Kinetic.Wedge, Kinetic.Shape);

	    // add getters setters
	    Kinetic.Factory.addGetterSetter(Kinetic.Wedge, 'radius', 0);

	    /**
	     * get/set radius
	     * @name radius
	     * @method
	     * @memberof Kinetic.Wedge.prototype
	     * @param {Number} radius
	     * @returns {Number}
	     * @example
	     * // get radius
	     * var radius = wedge.radius();
	     *
	     * // set radius
	     * wedge.radius(10);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Wedge, 'angle', 0);

	    /**
	     * get/set angle in degrees
	     * @name angle
	     * @method
	     * @memberof Kinetic.Wedge.prototype
	     * @param {Number} angle
	     * @returns {Number}
	     * @example
	     * // get angle
	     * var angle = wedge.angle();
	     *
	     * // set angle
	     * wedge.angle(20);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Wedge, 'clockwise', false);

	    /**
	     * get/set clockwise flag
	     * @name clockwise
	     * @method
	     * @memberof Kinetic.Wedge.prototype
	     * @param {Number} clockwise
	     * @returns {Number}
	     * @example
	     * // get clockwise flag
	     * var clockwise = wedge.clockwise();
	     *
	     * // draw wedge counter-clockwise
	     * wedge.clockwise(false);
	     *
	     * // draw wedge clockwise
	     * wedge.clockwise(true);
	     */

	    Kinetic.Factory.backCompat(Kinetic.Wedge, {
	        angleDeg: 'angle',
	        getAngleDeg: 'getAngle',
	        setAngleDeg: 'setAngle'
	    });

	    Kinetic.Collection.mapMethods(Kinetic.Wedge);
	})();
	;(function() {
	    /**
	     * Arc constructor
	     * @constructor
	     * @augments Kinetic.Shape
	     * @param {Object} config
	     * @param {Number} config.angle in degrees
	     * @param {Number} config.innerRadius
	     * @param {Number} config.outerRadius
	     * @param {Boolean} [config.clockwise]
	     * @param {String} [config.fill] fill color
	     * @param {Integer} [config.fillRed] set fill red component
	     * @param {Integer} [config.fillGreen] set fill green component
	     * @param {Integer} [config.fillBlue] set fill blue component
	     * @param {Integer} [config.fillAlpha] set fill alpha component
	     * @param {Image} [config.fillPatternImage] fill pattern image
	     * @param {Number} [config.fillPatternX]
	     * @param {Number} [config.fillPatternY]
	     * @param {Object} [config.fillPatternOffset] object with x and y component
	     * @param {Number} [config.fillPatternOffsetX] 
	     * @param {Number} [config.fillPatternOffsetY] 
	     * @param {Object} [config.fillPatternScale] object with x and y component
	     * @param {Number} [config.fillPatternScaleX]
	     * @param {Number} [config.fillPatternScaleY]
	     * @param {Number} [config.fillPatternRotation]
	     * @param {String} [config.fillPatternRepeat] can be "repeat", "repeat-x", "repeat-y", or "no-repeat".  The default is "no-repeat"
	     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientStartPointX]
	     * @param {Number} [config.fillLinearGradientStartPointY]
	     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientEndPointX]
	     * @param {Number} [config.fillLinearGradientEndPointY]
	     * @param {Array} [config.fillLinearGradientColorStops] array of color stops
	     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientStartPointX]
	     * @param {Number} [config.fillRadialGradientStartPointY]
	     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientEndPointX] 
	     * @param {Number} [config.fillRadialGradientEndPointY] 
	     * @param {Number} [config.fillRadialGradientStartRadius]
	     * @param {Number} [config.fillRadialGradientEndRadius]
	     * @param {Array} [config.fillRadialGradientColorStops] array of color stops
	     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true
	     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration
	     * @param {String} [config.stroke] stroke color
	     * @param {Integer} [config.strokeRed] set stroke red component
	     * @param {Integer} [config.strokeGreen] set stroke green component
	     * @param {Integer} [config.strokeBlue] set stroke blue component
	     * @param {Integer} [config.strokeAlpha] set stroke alpha component
	     * @param {Number} [config.strokeWidth] stroke width
	     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true
	     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true
	     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default
	     *  is miter
	     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default
	     *  is butt
	     * @param {String} [config.shadowColor]
	     * @param {Integer} [config.shadowRed] set shadow color red component
	     * @param {Integer} [config.shadowGreen] set shadow color green component
	     * @param {Integer} [config.shadowBlue] set shadow color blue component
	     * @param {Integer} [config.shadowAlpha] set shadow color alpha component
	     * @param {Number} [config.shadowBlur]
	     * @param {Object} [config.shadowOffset] object with x and y component
	     * @param {Number} [config.shadowOffsetX]
	     * @param {Number} [config.shadowOffsetY]
	     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number
	     *  between 0 and 1
	     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true
	     * @param {Array} [config.dash]
	     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true
	     * @param {Number} [config.x]
	     * @param {Number} [config.y]
	     * @param {Number} [config.width]
	     * @param {Number} [config.height]
	     * @param {Boolean} [config.visible]
	     * @param {Boolean} [config.listening] whether or not the node is listening for events
	     * @param {String} [config.id] unique id
	     * @param {String} [config.name] non-unique name
	     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1
	     * @param {Object} [config.scale] set scale
	     * @param {Number} [config.scaleX] set scale x
	     * @param {Number} [config.scaleY] set scale y
	     * @param {Number} [config.rotation] rotation in degrees
	     * @param {Object} [config.offset] offset from center point and rotation point
	     * @param {Number} [config.offsetX] set offset x
	     * @param {Number} [config.offsetY] set offset y
	     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop
	     *  the entire stage by dragging any portion of the stage
	     * @param {Number} [config.dragDistance]
	     * @param {Function} [config.dragBoundFunc]
	     * @example
	     * // draw a Arc that's pointing downwards
	     * var arc = new Kinetic.Arc({
	     *   innerRadius: 40,
	     *   outerRadius: 80,
	     *   fill: 'red',
	     *   stroke: 'black'
	     *   strokeWidth: 5,
	     *   angle: 60,
	     *   rotationDeg: -120
	     * });
	     */
	    Kinetic.Arc = function(config) {
	        this.___init(config);
	    };

	    Kinetic.Arc.prototype = {
	        ___init: function(config) {
	            // call super constructor
	            Kinetic.Shape.call(this, config);
	            this.className = 'Arc';
	            this.sceneFunc(this._sceneFunc);
	        },
	        _sceneFunc: function(context) {
	            var angle = Kinetic.getAngle(this.angle()),
	                clockwise = this.clockwise();

	            context.beginPath();
	            context.arc(0, 0, this.getOuterRadius(), 0, angle, clockwise);
	            context.arc(0, 0, this.getInnerRadius(), angle, 0, !clockwise);
	            context.closePath();
	            context.fillStrokeShape(this);
	        }
	    };
	    Kinetic.Util.extend(Kinetic.Arc, Kinetic.Shape);

	    // add getters setters
	    Kinetic.Factory.addGetterSetter(Kinetic.Arc, 'innerRadius', 0);

	    /**
	     * get/set innerRadius
	     * @name innerRadius
	     * @method
	     * @memberof Kinetic.Arc.prototype
	     * @param {Number} innerRadius
	     * @returns {Number}
	     * @example
	     * // get inner radius
	     * var innerRadius = arc.innerRadius();
	     *
	     * // set inner radius
	     * arc.innerRadius(20);
	     */
	     
	    Kinetic.Factory.addGetterSetter(Kinetic.Arc, 'outerRadius', 0);

	    /**
	     * get/set outerRadius
	     * @name outerRadius
	     * @method
	     * @memberof Kinetic.Arc.prototype
	     * @param {Number} outerRadius
	     * @returns {Number}
	     * @example
	     * // get outer radius
	     * var outerRadius = arc.outerRadius();
	     *
	     * // set outer radius
	     * arc.outerRadius(20);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Arc, 'angle', 0);

	    /**
	     * get/set angle in degrees
	     * @name angle
	     * @method
	     * @memberof Kinetic.Arc.prototype
	     * @param {Number} angle
	     * @returns {Number}
	     * @example
	     * // get angle
	     * var angle = arc.angle();
	     *
	     * // set angle
	     * arc.angle(20);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Arc, 'clockwise', false);

	    /**
	     * get/set clockwise flag
	     * @name clockwise
	     * @method
	     * @memberof Kinetic.Arc.prototype
	     * @param {Boolean} clockwise
	     * @returns {Boolean}
	     * @example
	     * // get clockwise flag
	     * var clockwise = arc.clockwise();
	     *
	     * // draw arc counter-clockwise
	     * arc.clockwise(false);
	     *
	     * // draw arc clockwise
	     * arc.clockwise(true);
	     */

	    Kinetic.Collection.mapMethods(Kinetic.Arc);
	})();
	;(function() {

	    // CONSTANTS
	    var IMAGE = 'Image';

	    /**
	     * Image constructor
	     * @constructor
	     * @memberof Kinetic
	     * @augments Kinetic.Shape
	     * @param {Object} config
	     * @param {Image} config.image
	     * @param {Object} [config.crop]
	     * @param {String} [config.fill] fill color
	     * @param {Integer} [config.fillRed] set fill red component
	     * @param {Integer} [config.fillGreen] set fill green component
	     * @param {Integer} [config.fillBlue] set fill blue component
	     * @param {Integer} [config.fillAlpha] set fill alpha component
	     * @param {Image} [config.fillPatternImage] fill pattern image
	     * @param {Number} [config.fillPatternX]
	     * @param {Number} [config.fillPatternY]
	     * @param {Object} [config.fillPatternOffset] object with x and y component
	     * @param {Number} [config.fillPatternOffsetX] 
	     * @param {Number} [config.fillPatternOffsetY] 
	     * @param {Object} [config.fillPatternScale] object with x and y component
	     * @param {Number} [config.fillPatternScaleX]
	     * @param {Number} [config.fillPatternScaleY]
	     * @param {Number} [config.fillPatternRotation]
	     * @param {String} [config.fillPatternRepeat] can be "repeat", "repeat-x", "repeat-y", or "no-repeat".  The default is "no-repeat"
	     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientStartPointX]
	     * @param {Number} [config.fillLinearGradientStartPointY]
	     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientEndPointX]
	     * @param {Number} [config.fillLinearGradientEndPointY]
	     * @param {Array} [config.fillLinearGradientColorStops] array of color stops
	     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientStartPointX]
	     * @param {Number} [config.fillRadialGradientStartPointY]
	     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientEndPointX] 
	     * @param {Number} [config.fillRadialGradientEndPointY] 
	     * @param {Number} [config.fillRadialGradientStartRadius]
	     * @param {Number} [config.fillRadialGradientEndRadius]
	     * @param {Array} [config.fillRadialGradientColorStops] array of color stops
	     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true
	     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration
	     * @param {String} [config.stroke] stroke color
	     * @param {Integer} [config.strokeRed] set stroke red component
	     * @param {Integer} [config.strokeGreen] set stroke green component
	     * @param {Integer} [config.strokeBlue] set stroke blue component
	     * @param {Integer} [config.strokeAlpha] set stroke alpha component
	     * @param {Number} [config.strokeWidth] stroke width
	     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true
	     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true
	     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default
	     *  is miter
	     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default
	     *  is butt
	     * @param {String} [config.shadowColor]
	     * @param {Integer} [config.shadowRed] set shadow color red component
	     * @param {Integer} [config.shadowGreen] set shadow color green component
	     * @param {Integer} [config.shadowBlue] set shadow color blue component
	     * @param {Integer} [config.shadowAlpha] set shadow color alpha component
	     * @param {Number} [config.shadowBlur]
	     * @param {Object} [config.shadowOffset] object with x and y component
	     * @param {Number} [config.shadowOffsetX]
	     * @param {Number} [config.shadowOffsetY]
	     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number
	     *  between 0 and 1
	     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true
	     * @param {Array} [config.dash]
	     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true
	     * @param {Number} [config.x]
	     * @param {Number} [config.y]
	     * @param {Number} [config.width]
	     * @param {Number} [config.height]
	     * @param {Boolean} [config.visible]
	     * @param {Boolean} [config.listening] whether or not the node is listening for events
	     * @param {String} [config.id] unique id
	     * @param {String} [config.name] non-unique name
	     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1
	     * @param {Object} [config.scale] set scale
	     * @param {Number} [config.scaleX] set scale x
	     * @param {Number} [config.scaleY] set scale y
	     * @param {Number} [config.rotation] rotation in degrees
	     * @param {Object} [config.offset] offset from center point and rotation point
	     * @param {Number} [config.offsetX] set offset x
	     * @param {Number} [config.offsetY] set offset y
	     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop
	     *  the entire stage by dragging any portion of the stage
	     * @param {Number} [config.dragDistance]
	     * @param {Function} [config.dragBoundFunc]
	     * @example
	     * var imageObj = new Image();
	     * imageObj.onload = function() {
	     *   var image = new Kinetic.Image({
	     *     x: 200,
	     *     y: 50,
	     *     image: imageObj,
	     *     width: 100,
	     *     height: 100
	     *   });
	     * };
	     * imageObj.src = '/path/to/image.jpg'
	     */
	    Kinetic.Image = function(config) {
	        this.___init(config);
	    };

	    Kinetic.Image.prototype = {
	        ___init: function(config) {
	            // call super constructor
	            Kinetic.Shape.call(this, config);
	            this.className = IMAGE;
	            this.sceneFunc(this._sceneFunc);
	            this.hitFunc(this._hitFunc);
	        },
	        _useBufferCanvas: function() {
	            return (this.hasShadow() || this.getAbsoluteOpacity() !== 1) && this.hasStroke() && this.getStage();
	        },
	        _sceneFunc: function(context) {
	            var width = this.getWidth(),
	                height = this.getHeight(),
	                image = this.getImage(),
	                cropWidth, cropHeight, params;

	            if (image) {
	                cropWidth = this.getCropWidth();
	                cropHeight = this.getCropHeight();
	                if (cropWidth && cropHeight) {
	                    params = [image, this.getCropX(), this.getCropY(), cropWidth, cropHeight, 0, 0, width, height];
	                } else {
	                    params = [image, 0, 0, width, height];
	                }
	            }

	            if (this.hasFill() || this.hasStroke() || this.hasShadow()) {
	                context.beginPath();
	                context.rect(0, 0, width, height);
	                context.closePath();
	                context.fillStrokeShape(this);
	            }

	            if (image) {
	                context.drawImage.apply(context, params);
	            }
	        },
	        _hitFunc: function(context) {
	            var width = this.getWidth(),
	                height = this.getHeight();

	            context.beginPath();
	            context.rect(0, 0, width, height);
	            context.closePath();
	            context.fillStrokeShape(this);
	        },
	        getWidth: function() {
	            var image = this.getImage();
	            return this.attrs.width || (image ? image.width : 0);
	        },
	        getHeight: function() {
	            var image = this.getImage();
	            return this.attrs.height || (image ? image.height : 0);
	        }
	    };
	    Kinetic.Util.extend(Kinetic.Image, Kinetic.Shape);

	    // add getters setters
	    Kinetic.Factory.addGetterSetter(Kinetic.Image, 'image');

	    /**
	     * set image
	     * @name setImage
	     * @method
	     * @memberof Kinetic.Image.prototype
	     * @param {Image} image
	     */

	    /**
	     * get image
	     * @name getImage
	     * @method
	     * @memberof Kinetic.Image.prototype
	     * @returns {Image}
	     */

	    Kinetic.Factory.addComponentsGetterSetter(Kinetic.Image, 'crop', ['x', 'y', 'width', 'height']);
	    /**
	     * get/set crop
	     * @method
	     * @name crop
	     * @memberof Kinetic.Image.prototype
	     * @param {Object} crop 
	     * @param {Number} crop.x
	     * @param {Number} crop.y
	     * @param {Number} crop.width
	     * @param {Number} crop.height
	     * @returns {Object}
	     * @example
	     * // get crop
	     * var crop = image.crop();
	     *
	     * // set crop
	     * image.crop({
	     *   x: 20,
	     *   y: 20,
	     *   width: 20,
	     *   height: 20
	     * });
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Image, 'cropX', 0);
	    /**
	     * get/set crop x
	     * @method
	     * @name cropX
	     * @memberof Kinetic.Image.prototype
	     * @param {Number} x
	     * @returns {Number}
	     * @example
	     * // get crop x
	     * var cropX = image.cropX();
	     *
	     * // set crop x
	     * image.cropX(20);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Image, 'cropY', 0);
	    /**
	     * get/set crop y
	     * @name cropY
	     * @method
	     * @memberof Kinetic.Image.prototype
	     * @param {Number} y
	     * @returns {Number}
	     * @example
	     * // get crop y
	     * var cropY = image.cropY();
	     *
	     * // set crop y
	     * image.cropY(20);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Image, 'cropWidth', 0);
	    /**
	     * get/set crop width
	     * @name cropWidth
	     * @method
	     * @memberof Kinetic.Image.prototype
	     * @param {Number} width
	     * @returns {Number}
	     * @example
	     * // get crop width
	     * var cropWidth = image.cropWidth();
	     *
	     * // set crop width
	     * image.cropWidth(20);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Image, 'cropHeight', 0);
	    /**
	     * get/set crop height
	     * @name cropHeight
	     * @method
	     * @memberof Kinetic.Image.prototype
	     * @param {Number} height
	     * @returns {Number}
	     * @example
	     * // get crop height
	     * var cropHeight = image.cropHeight();
	     *
	     * // set crop height
	     * image.cropHeight(20);
	     */

	    Kinetic.Collection.mapMethods(Kinetic.Image);
	})();
	;(function() {
	    // constants
	    var AUTO = 'auto',
	        //CANVAS = 'canvas',
	        CENTER = 'center',
	        CHANGE_KINETIC = 'Change.kinetic',
	        CONTEXT_2D = '2d',
	        DASH = '-',
	        EMPTY_STRING = '',
	        LEFT = 'left',
	        TEXT = 'text',
	        TEXT_UPPER = 'Text',
	        MIDDLE = 'middle',
	        NORMAL = 'normal',
	        PX_SPACE = 'px ',
	        SPACE = ' ',
	        RIGHT = 'right',
	        WORD = 'word',
	        CHAR = 'char',
	        NONE = 'none',
	        ATTR_CHANGE_LIST = ['fontFamily', 'fontSize', 'fontStyle', 'fontVariant', 'padding', 'align', 'lineHeight', 'text', 'width', 'height', 'wrap'],

	        // cached variables
	        attrChangeListLen = ATTR_CHANGE_LIST.length,
	        dummyContext = Kinetic.Util.createCanvasElement().getContext(CONTEXT_2D);

	    /**
	     * Text constructor
	     * @constructor
	     * @memberof Kinetic
	     * @augments Kinetic.Shape
	     * @param {Object} config
	     * @param {String} [config.fontFamily] default is Arial
	     * @param {Number} [config.fontSize] in pixels.  Default is 12
	     * @param {String} [config.fontStyle] can be normal, bold, or italic.  Default is normal
	     * @param {String} [config.fontVariant] can be normal or small-caps.  Default is normal
	     * @param {String} config.text
	     * @param {String} [config.align] can be left, center, or right
	     * @param {Number} [config.padding]
	     * @param {Number} [config.width] default is auto
	     * @param {Number} [config.height] default is auto
	     * @param {Number} [config.lineHeight] default is 1
	     * @param {String} [config.wrap] can be word, char, or none. Default is word
	     * @param {String} [config.fill] fill color
	     * @param {Integer} [config.fillRed] set fill red component
	     * @param {Integer} [config.fillGreen] set fill green component
	     * @param {Integer} [config.fillBlue] set fill blue component
	     * @param {Integer} [config.fillAlpha] set fill alpha component
	     * @param {Image} [config.fillPatternImage] fill pattern image
	     * @param {Number} [config.fillPatternX]
	     * @param {Number} [config.fillPatternY]
	     * @param {Object} [config.fillPatternOffset] object with x and y component
	     * @param {Number} [config.fillPatternOffsetX] 
	     * @param {Number} [config.fillPatternOffsetY] 
	     * @param {Object} [config.fillPatternScale] object with x and y component
	     * @param {Number} [config.fillPatternScaleX]
	     * @param {Number} [config.fillPatternScaleY]
	     * @param {Number} [config.fillPatternRotation]
	     * @param {String} [config.fillPatternRepeat] can be "repeat", "repeat-x", "repeat-y", or "no-repeat".  The default is "no-repeat"
	     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientStartPointX]
	     * @param {Number} [config.fillLinearGradientStartPointY]
	     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientEndPointX]
	     * @param {Number} [config.fillLinearGradientEndPointY]
	     * @param {Array} [config.fillLinearGradientColorStops] array of color stops
	     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientStartPointX]
	     * @param {Number} [config.fillRadialGradientStartPointY]
	     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientEndPointX] 
	     * @param {Number} [config.fillRadialGradientEndPointY] 
	     * @param {Number} [config.fillRadialGradientStartRadius]
	     * @param {Number} [config.fillRadialGradientEndRadius]
	     * @param {Array} [config.fillRadialGradientColorStops] array of color stops
	     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true
	     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration
	     * @param {String} [config.stroke] stroke color
	     * @param {Integer} [config.strokeRed] set stroke red component
	     * @param {Integer} [config.strokeGreen] set stroke green component
	     * @param {Integer} [config.strokeBlue] set stroke blue component
	     * @param {Integer} [config.strokeAlpha] set stroke alpha component
	     * @param {Number} [config.strokeWidth] stroke width
	     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true
	     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true
	     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default
	     *  is miter
	     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default
	     *  is butt
	     * @param {String} [config.shadowColor]
	     * @param {Integer} [config.shadowRed] set shadow color red component
	     * @param {Integer} [config.shadowGreen] set shadow color green component
	     * @param {Integer} [config.shadowBlue] set shadow color blue component
	     * @param {Integer} [config.shadowAlpha] set shadow color alpha component
	     * @param {Number} [config.shadowBlur]
	     * @param {Object} [config.shadowOffset] object with x and y component
	     * @param {Number} [config.shadowOffsetX]
	     * @param {Number} [config.shadowOffsetY]
	     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number
	     *  between 0 and 1
	     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true
	     * @param {Array} [config.dash]
	     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true
	     * @param {Number} [config.x]
	     * @param {Number} [config.y]
	     * @param {Number} [config.width]
	     * @param {Number} [config.height]
	     * @param {Boolean} [config.visible]
	     * @param {Boolean} [config.listening] whether or not the node is listening for events
	     * @param {String} [config.id] unique id
	     * @param {String} [config.name] non-unique name
	     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1
	     * @param {Object} [config.scale] set scale
	     * @param {Number} [config.scaleX] set scale x
	     * @param {Number} [config.scaleY] set scale y
	     * @param {Number} [config.rotation] rotation in degrees
	     * @param {Object} [config.offset] offset from center point and rotation point
	     * @param {Number} [config.offsetX] set offset x
	     * @param {Number} [config.offsetY] set offset y
	     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop
	     *  the entire stage by dragging any portion of the stage
	     * @param {Number} [config.dragDistance]
	     * @param {Function} [config.dragBoundFunc]
	     * @example
	     * var text = new Kinetic.Text({
	     *   x: 10,
	     *   y: 15,
	     *   text: 'Simple Text',
	     *   fontSize: 30,
	     *   fontFamily: 'Calibri',
	     *   fill: 'green'
	     * });
	     */
	    Kinetic.Text = function(config) {
	        this.___init(config);
	    };
	    function _fillFunc(context) {
	        context.fillText(this.partialText, 0, 0);
	    }
	    function _strokeFunc(context) {
	        context.strokeText(this.partialText, 0, 0);
	    }

	    Kinetic.Text.prototype = {
	        ___init: function(config) {
	            config = config || {};
	            config.fill = config.fill || 'black';

	            if (config.width === undefined) {
	                config.width = AUTO;
	            }
	            if (config.height === undefined) {
	                config.height = AUTO;
	            }

	            // call super constructor
	            Kinetic.Shape.call(this, config);

	            this._fillFunc = _fillFunc;
	            this._strokeFunc = _strokeFunc;
	            this.className = TEXT_UPPER;

	            // update text data for certain attr changes
	            for(var n = 0; n < attrChangeListLen; n++) {
	                this.on(ATTR_CHANGE_LIST[n] + CHANGE_KINETIC, this._setTextData);
	            }

	            this._setTextData();
	            this.sceneFunc(this._sceneFunc);
	            this.hitFunc(this._hitFunc);
	        },
	        _sceneFunc: function(context) {
	            var p = this.getPadding(),
	                textHeight = this.getTextHeight(),
	                lineHeightPx = this.getLineHeight() * textHeight,
	                textArr = this.textArr,
	                textArrLen = textArr.length,
	                totalWidth = this.getWidth(),
	                n;

	            context.setAttr('font', this._getContextFont());
	            context.setAttr('textBaseline', MIDDLE);
	            context.setAttr('textAlign', LEFT);
	            context.save();
	            context.translate(p, 0);
	            context.translate(0, p + textHeight / 2);

	            // draw text lines
	            for(n = 0; n < textArrLen; n++) {
	                var obj = textArr[n],
	                    text = obj.text,
	                    width = obj.width;

	                // horizontal alignment
	                context.save();
	                if(this.getAlign() === RIGHT) {
	                    context.translate(totalWidth - width - p * 2, 0);
	                }
	                else if(this.getAlign() === CENTER) {
	                    context.translate((totalWidth - width - p * 2) / 2, 0);
	                }

	                this.partialText = text;
	                context.fillStrokeShape(this);
	                context.restore();
	                context.translate(0, lineHeightPx);
	            }
	            context.restore();
	        },
	        _hitFunc: function(context) {
	            var width = this.getWidth(),
	                height = this.getHeight();

	            context.beginPath();
	            context.rect(0, 0, width, height);
	            context.closePath();
	            context.fillStrokeShape(this);
	        },
	        setText: function(text) {
	            var str = Kinetic.Util._isString(text) ? text : text.toString();
	            this._setAttr(TEXT, str);
	            return this;
	        },
	        /**
	         * get width of text area, which includes padding
	         * @method
	         * @memberof Kinetic.Text.prototype
	         * @returns {Number}
	         */
	        getWidth: function() {
	            return this.attrs.width === AUTO ? this.getTextWidth() + this.getPadding() * 2 : this.attrs.width;
	        },
	        /**
	         * get the height of the text area, which takes into account multi-line text, line heights, and padding
	         * @method
	         * @memberof Kinetic.Text.prototype
	         * @returns {Number}
	         */
	        getHeight: function() {
	            return this.attrs.height === AUTO ? (this.getTextHeight() * this.textArr.length * this.getLineHeight()) + this.getPadding() * 2 : this.attrs.height;
	        },
	        /**
	         * get text width
	         * @method
	         * @memberof Kinetic.Text.prototype
	         * @returns {Number}
	         */
	        getTextWidth: function() {
	            return this.textWidth;
	        },
	        /**
	         * get text height
	         * @method
	         * @memberof Kinetic.Text.prototype
	         * @returns {Number}
	         */
	        getTextHeight: function() {
	            return this.textHeight;
	        },
	        _getTextSize: function(text) {
	            var _context = dummyContext,
	                fontSize = this.getFontSize(),
	                metrics;

	            _context.save();
	            _context.font = this._getContextFont();

	            metrics = _context.measureText(text);
	            _context.restore();
	            return {
	                width: metrics.width,
	                height: parseInt(fontSize, 10)
	            };
	        },
	        _getContextFont: function() {
	            return this.getFontStyle() + SPACE + this.getFontVariant() + SPACE + this.getFontSize() + PX_SPACE + this.getFontFamily();
	        },
	        _addTextLine: function (line, width) {
	            return this.textArr.push({text: line, width: width});
	        },
	        _getTextWidth: function (text) {
	            return dummyContext.measureText(text).width;
	        },
	        _setTextData: function () {
	            var lines = this.getText().split('\n'),
	                fontSize = +this.getFontSize(),
	                textWidth = 0,
	                lineHeightPx = this.getLineHeight() * fontSize,
	                width = this.attrs.width,
	                height = this.attrs.height,
	                fixedWidth = width !== AUTO,
	                fixedHeight = height !== AUTO,
	                padding = this.getPadding(),
	                maxWidth = width - padding * 2,
	                maxHeightPx = height - padding * 2,
	                currentHeightPx = 0,
	                wrap = this.getWrap(),
	                shouldWrap = wrap !== NONE,
	                wrapAtWord = wrap !==  CHAR && shouldWrap;

	            this.textArr = [];
	            dummyContext.save();
	            dummyContext.font = this._getContextFont();
	            for (var i = 0, max = lines.length; i < max; ++i) {
	                var line = lines[i],
	                    lineWidth = this._getTextWidth(line);
	                if (fixedWidth && lineWidth > maxWidth) {
	                    /*
	                     * if width is fixed and line does not fit entirely
	                     * break the line into multiple fitting lines
	                     */
	                    while (line.length > 0) {
	                        /*
	                         * use binary search to find the longest substring that
	                         * that would fit in the specified width
	                         */
	                        var low = 0, high = line.length,
	                            match = '', matchWidth = 0;
	                        while (low < high) {
	                            var mid = (low + high) >>> 1,
	                                substr = line.slice(0, mid + 1),
	                                substrWidth = this._getTextWidth(substr);
	                            if (substrWidth <= maxWidth) {
	                                low = mid + 1;
	                                match = substr;
	                                matchWidth = substrWidth;
	                            } else {
	                                high = mid;
	                            }
	                        }
	                        /*
	                         * 'low' is now the index of the substring end
	                         * 'match' is the substring
	                         * 'matchWidth' is the substring width in px
	                         */
	                        if (match) {
	                            // a fitting substring was found
	                            if (wrapAtWord) {
	                                // try to find a space or dash where wrapping could be done
	                                var wrapIndex = Math.max(match.lastIndexOf(SPACE),
	                                                          match.lastIndexOf(DASH)) + 1;
	                                if (wrapIndex > 0) {
	                                    // re-cut the substring found at the space/dash position
	                                    low = wrapIndex;
	                                    match = match.slice(0, low);
	                                    matchWidth = this._getTextWidth(match);
	                                }
	                            }
	                            this._addTextLine(match, matchWidth);
	                            textWidth = Math.max(textWidth, matchWidth);
	                            currentHeightPx += lineHeightPx;
	                            if (!shouldWrap ||
	                                (fixedHeight && currentHeightPx + lineHeightPx > maxHeightPx)) {
	                                /*
	                                 * stop wrapping if wrapping is disabled or if adding
	                                 * one more line would overflow the fixed height
	                                 */
	                                break;
	                            }
	                            line = line.slice(low);
	                            if (line.length > 0) {
	                                // Check if the remaining text would fit on one line
	                                lineWidth = this._getTextWidth(line);
	                                if (lineWidth <= maxWidth) {
	                                    // if it does, add the line and break out of the loop
	                                    this._addTextLine(line, lineWidth);
	                                    currentHeightPx += lineHeightPx;
	                                    textWidth = Math.max(textWidth, lineWidth);
	                                    break;
	                                }
	                            }
	                        } else {
	                            // not even one character could fit in the element, abort
	                            break;
	                        }
	                    }
	                } else {
	                    // element width is automatically adjusted to max line width
	                    this._addTextLine(line, lineWidth);
	                    currentHeightPx += lineHeightPx;
	                    textWidth = Math.max(textWidth, lineWidth);
	                }
	                // if element height is fixed, abort if adding one more line would overflow
	                if (fixedHeight && currentHeightPx + lineHeightPx > maxHeightPx) {
	                    break;
	                }
	            }
	            dummyContext.restore();
	            this.textHeight = fontSize;
	            this.textWidth = textWidth;
	        }
	    };
	    Kinetic.Util.extend(Kinetic.Text, Kinetic.Shape);

	    // add getters setters
	    Kinetic.Factory.addGetterSetter(Kinetic.Text, 'fontFamily', 'Arial');

	    /**
	     * get/set font family
	     * @name fontFamily
	     * @method
	     * @memberof Kinetic.Text.prototype
	     * @param {String} fontFamily
	     * @returns {String}
	     * @example
	     * // get font family
	     * var fontFamily = text.fontFamily();
	     *
	     * // set font family
	     * text.fontFamily('Arial');
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Text, 'fontSize', 12);

	    /**
	     * get/set font size in pixels
	     * @name fontSize
	     * @method
	     * @memberof Kinetic.Text.prototype
	     * @param {Number} fontSize
	     * @returns {Number}
	     * @example
	     * // get font size
	     * var fontSize = text.fontSize();
	     *
	     * // set font size to 22px
	     * text.fontSize(22);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Text, 'fontStyle', NORMAL);

	    /**
	     * set font style.  Can be 'normal', 'italic', or 'bold'.  'normal' is the default.
	     * @name fontStyle
	     * @method
	     * @memberof Kinetic.Text.prototype
	     * @param {String} fontStyle
	     * @returns {String}
	     * @example
	     * // get font style
	     * var fontStyle = text.fontStyle();
	     *
	     * // set font style
	     * text.fontStyle('bold');
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Text, 'fontVariant', NORMAL);

	    /**
	     * set font variant.  Can be 'normal' or 'small-caps'.  'normal' is the default.
	     * @name fontVariant
	     * @method
	     * @memberof Kinetic.Text.prototype
	     * @param {String} fontVariant
	     * @returns {String}
	     * @example
	     * // get font variant
	     * var fontVariant = text.fontVariant();
	     *
	     * // set font variant
	     * text.fontVariant('small-caps');
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Text, 'padding', 0);

	    /**
	     * set padding
	     * @name padding
	     * @method
	     * @memberof Kinetic.Text.prototype
	     * @param {Number} padding
	     * @returns {Number}
	     * @example
	     * // get padding
	     * var padding = text.padding();
	     * 
	     * // set padding to 10 pixels
	     * text.padding(10);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Text, 'align', LEFT);

	    /**
	     * get/set horizontal align of text.  Can be 'left', 'center', or 'right'
	     * @name align
	     * @method
	     * @memberof Kinetic.Text.prototype
	     * @param {String} align
	     * @returns {String}
	     * @example
	     * // get text align
	     * var align = text.align();
	     *
	     * // center text
	     * text.align('center');
	     *
	     * // align text to right
	     * text.align('right');
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Text, 'lineHeight', 1);

	    /**
	     * get/set line height.  The default is 1.
	     * @name lineHeight
	     * @method
	     * @memberof Kinetic.Text.prototype
	     * @param {Number} lineHeight
	     * @returns {Number}
	     * @example 
	     * // get line height
	     * var lineHeight = text.lineHeight();
	     *
	     * // set the line height
	     * text.lineHeight(2);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Text, 'wrap', WORD);

	    /**
	     * get/set wrap.  Can be word, char, or none. Default is word.
	     * @name wrap
	     * @method
	     * @memberof Kinetic.Text.prototype
	     * @param {String} wrap
	     * @returns {String}
	     * @example
	     * // get wrap
	     * var wrap = text.wrap();
	     *
	     * // set wrap
	     * text.wrap('word');
	     */

	    Kinetic.Factory.addGetter(Kinetic.Text, 'text', EMPTY_STRING);
	    Kinetic.Factory.addOverloadedGetterSetter(Kinetic.Text, 'text');

	    /**
	     * get/set text
	     * @name getText
	     * @method
	     * @memberof Kinetic.Text.prototype
	     * @param {String} text
	     * @returns {String}
	     * @example
	     * // get text
	     * var text = text.text();
	     * 
	     * // set text
	     * text.text('Hello world!');
	     */

	    Kinetic.Collection.mapMethods(Kinetic.Text);
	})();
	;(function() {
	    /**
	     * Line constructor.&nbsp; Lines are defined by an array of points and
	     *  a tension
	     * @constructor
	     * @memberof Kinetic
	     * @augments Kinetic.Shape
	     * @param {Object} config
	     * @param {Array} config.points
	     * @param {Number} [config.tension] Higher values will result in a more curvy line.  A value of 0 will result in no interpolation.
	     *   The default is 0
	     * @param {Boolean} [config.closed] defines whether or not the line shape is closed, creating a polygon or blob 
	     * @param {String} [config.fill] fill color
	     * @param {Integer} [config.fillRed] set fill red component
	     * @param {Integer} [config.fillGreen] set fill green component
	     * @param {Integer} [config.fillBlue] set fill blue component
	     * @param {Integer} [config.fillAlpha] set fill alpha component
	     * @param {Image} [config.fillPatternImage] fill pattern image
	     * @param {Number} [config.fillPatternX]
	     * @param {Number} [config.fillPatternY]
	     * @param {Object} [config.fillPatternOffset] object with x and y component
	     * @param {Number} [config.fillPatternOffsetX] 
	     * @param {Number} [config.fillPatternOffsetY] 
	     * @param {Object} [config.fillPatternScale] object with x and y component
	     * @param {Number} [config.fillPatternScaleX]
	     * @param {Number} [config.fillPatternScaleY]
	     * @param {Number} [config.fillPatternRotation]
	     * @param {String} [config.fillPatternRepeat] can be "repeat", "repeat-x", "repeat-y", or "no-repeat".  The default is "no-repeat"
	     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientStartPointX]
	     * @param {Number} [config.fillLinearGradientStartPointY]
	     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientEndPointX]
	     * @param {Number} [config.fillLinearGradientEndPointY]
	     * @param {Array} [config.fillLinearGradientColorStops] array of color stops
	     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientStartPointX]
	     * @param {Number} [config.fillRadialGradientStartPointY]
	     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientEndPointX] 
	     * @param {Number} [config.fillRadialGradientEndPointY] 
	     * @param {Number} [config.fillRadialGradientStartRadius]
	     * @param {Number} [config.fillRadialGradientEndRadius]
	     * @param {Array} [config.fillRadialGradientColorStops] array of color stops
	     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true
	     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration
	     * @param {String} [config.stroke] stroke color
	     * @param {Integer} [config.strokeRed] set stroke red component
	     * @param {Integer} [config.strokeGreen] set stroke green component
	     * @param {Integer} [config.strokeBlue] set stroke blue component
	     * @param {Integer} [config.strokeAlpha] set stroke alpha component
	     * @param {Number} [config.strokeWidth] stroke width
	     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true
	     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true
	     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default
	     *  is miter
	     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default
	     *  is butt
	     * @param {String} [config.shadowColor]
	     * @param {Integer} [config.shadowRed] set shadow color red component
	     * @param {Integer} [config.shadowGreen] set shadow color green component
	     * @param {Integer} [config.shadowBlue] set shadow color blue component
	     * @param {Integer} [config.shadowAlpha] set shadow color alpha component
	     * @param {Number} [config.shadowBlur]
	     * @param {Object} [config.shadowOffset] object with x and y component
	     * @param {Number} [config.shadowOffsetX]
	     * @param {Number} [config.shadowOffsetY]
	     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number
	     *  between 0 and 1
	     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true
	     * @param {Array} [config.dash]
	     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true
	     * @param {Number} [config.x]
	     * @param {Number} [config.y]
	     * @param {Number} [config.width]
	     * @param {Number} [config.height]
	     * @param {Boolean} [config.visible]
	     * @param {Boolean} [config.listening] whether or not the node is listening for events
	     * @param {String} [config.id] unique id
	     * @param {String} [config.name] non-unique name
	     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1
	     * @param {Object} [config.scale] set scale
	     * @param {Number} [config.scaleX] set scale x
	     * @param {Number} [config.scaleY] set scale y
	     * @param {Number} [config.rotation] rotation in degrees
	     * @param {Object} [config.offset] offset from center point and rotation point
	     * @param {Number} [config.offsetX] set offset x
	     * @param {Number} [config.offsetY] set offset y
	     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop
	     *  the entire stage by dragging any portion of the stage
	     * @param {Number} [config.dragDistance]
	     * @param {Function} [config.dragBoundFunc]
	     * @example
	     * var line = new Kinetic.Line({
	     *   x: 100,
	     *   y: 50,
	     *   points: [73, 70, 340, 23, 450, 60, 500, 20],
	     *   stroke: 'red',
	     *   tension: 1
	     * });
	     */
	    Kinetic.Line = function(config) {
	        this.___init(config);
	    };

	    Kinetic.Line.prototype = {
	        ___init: function(config) {
	            // call super constructor
	            Kinetic.Shape.call(this, config);
	            this.className = 'Line';

	            this.on('pointsChange.kinetic tensionChange.kinetic closedChange.kinetic', function() {
	                this._clearCache('tensionPoints');
	            });

	            this.sceneFunc(this._sceneFunc);
	        },
	        _sceneFunc: function(context) {
	            var points = this.getPoints(),
	                length = points.length,
	                tension = this.getTension(),
	                closed = this.getClosed(),
	                tp, len, n;

	            if (!length) {
	                return;
	            }

	            context.beginPath();
	            context.moveTo(points[0], points[1]);

	            // tension
	            if(tension !== 0 && length > 4) {
	                tp = this.getTensionPoints();
	                len = tp.length;
	                n = closed ? 0 : 4;

	                if (!closed) {
	                    context.quadraticCurveTo(tp[0], tp[1], tp[2], tp[3]);
	                }

	                while(n < len - 2) {
	                    context.bezierCurveTo(tp[n++], tp[n++], tp[n++], tp[n++], tp[n++], tp[n++]);
	                }

	                if (!closed) {
	                    context.quadraticCurveTo(tp[len-2], tp[len-1], points[length-2], points[length-1]);
	                }
	            }
	            // no tension
	            else {
	                for(n = 2; n < length; n+=2) {
	                    context.lineTo(points[n], points[n+1]);
	                }
	            }

	            // closed e.g. polygons and blobs
	            if (closed) {
	                context.closePath();
	                context.fillStrokeShape(this);
	            }
	            // open e.g. lines and splines
	            else {
	                context.strokeShape(this);
	            }
	        },
	        getTensionPoints: function() {
	            return this._getCache('tensionPoints', this._getTensionPoints);
	        },
	        _getTensionPoints: function() {
	            if (this.getClosed()) {
	                return this._getTensionPointsClosed();
	            }
	            else {
	                return Kinetic.Util._expandPoints(this.getPoints(), this.getTension());
	            }
	        },
	        _getTensionPointsClosed: function() {
	            var p = this.getPoints(),
	                len = p.length,
	                tension = this.getTension(),
	                util = Kinetic.Util,
	                firstControlPoints = util._getControlPoints(
	                    p[len-2],
	                    p[len-1],
	                    p[0],
	                    p[1],
	                    p[2],
	                    p[3],
	                    tension
	                ),
	                lastControlPoints = util._getControlPoints(
	                    p[len-4],
	                    p[len-3],
	                    p[len-2],
	                    p[len-1],
	                    p[0],
	                    p[1],
	                    tension
	                ),
	                middle = Kinetic.Util._expandPoints(p, tension),
	                tp = [
	                    firstControlPoints[2],
	                    firstControlPoints[3]
	                ]
	                .concat(middle)
	                .concat([
	                    lastControlPoints[0],
	                    lastControlPoints[1],
	                    p[len-2],
	                    p[len-1],
	                    lastControlPoints[2],
	                    lastControlPoints[3],
	                    firstControlPoints[0],
	                    firstControlPoints[1],
	                    p[0],
	                    p[1]
	                ]);
	                    
	            return tp;
	        }
	    };
	    Kinetic.Util.extend(Kinetic.Line, Kinetic.Shape);

	    // add getters setters
	    Kinetic.Factory.addGetterSetter(Kinetic.Line, 'closed', false);

	    /**
	     * get/set closed flag.  The default is false
	     * @name closed
	     * @method
	     * @memberof Kinetic.Line.prototype
	     * @param {Boolean} closed
	     * @returns {Boolean}
	     * @example
	     * // get closed flag
	     * var closed = line.closed();
	     *
	     * // close the shape
	     * line.closed(true);
	     *
	     * // open the shape
	     * line.closed(false);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Line, 'tension', 0);

	    /**
	     * get/set tension
	     * @name tension
	     * @method
	     * @memberof Kinetic.Line.prototype
	     * @param {Number} Higher values will result in a more curvy line.  A value of 0 will result in no interpolation.
	     *   The default is 0
	     * @returns {Number}
	     * @example
	     * // get tension
	     * var tension = line.tension();
	     *
	     * // set tension
	     * line.tension(3);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Line, 'points', []);
	    /**
	     * get/set points array
	     * @name points
	     * @method
	     * @memberof Kinetic.Line.prototype
	     * @param {Array} points
	     * @returns {Array}
	     * @example
	     * // get points
	     * var points = line.points();
	     *
	     * // set points
	     * line.points([10, 20, 30, 40, 50, 60]);
	     *
	     * // push a new point
	     * line.points(line.points().concat([70, 80]));
	     */

	    Kinetic.Collection.mapMethods(Kinetic.Line);
	})();;(function() {
	    /**
	     * Sprite constructor
	     * @constructor
	     * @memberof Kinetic
	     * @augments Kinetic.Shape
	     * @param {Object} config
	     * @param {String} config.animation animation key
	     * @param {Object} config.animations animation map
	     * @param {Integer} [config.frameIndex] animation frame index
	     * @param {Image} config.image image object
	     * @param {String} [config.fill] fill color
	     * @param {Integer} [config.fillRed] set fill red component
	     * @param {Integer} [config.fillGreen] set fill green component
	     * @param {Integer} [config.fillBlue] set fill blue component
	     * @param {Integer} [config.fillAlpha] set fill alpha component
	     * @param {Image} [config.fillPatternImage] fill pattern image
	     * @param {Number} [config.fillPatternX]
	     * @param {Number} [config.fillPatternY]
	     * @param {Object} [config.fillPatternOffset] object with x and y component
	     * @param {Number} [config.fillPatternOffsetX] 
	     * @param {Number} [config.fillPatternOffsetY] 
	     * @param {Object} [config.fillPatternScale] object with x and y component
	     * @param {Number} [config.fillPatternScaleX]
	     * @param {Number} [config.fillPatternScaleY]
	     * @param {Number} [config.fillPatternRotation]
	     * @param {String} [config.fillPatternRepeat] can be "repeat", "repeat-x", "repeat-y", or "no-repeat".  The default is "no-repeat"
	     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientStartPointX]
	     * @param {Number} [config.fillLinearGradientStartPointY]
	     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientEndPointX]
	     * @param {Number} [config.fillLinearGradientEndPointY]
	     * @param {Array} [config.fillLinearGradientColorStops] array of color stops
	     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientStartPointX]
	     * @param {Number} [config.fillRadialGradientStartPointY]
	     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientEndPointX] 
	     * @param {Number} [config.fillRadialGradientEndPointY] 
	     * @param {Number} [config.fillRadialGradientStartRadius]
	     * @param {Number} [config.fillRadialGradientEndRadius]
	     * @param {Array} [config.fillRadialGradientColorStops] array of color stops
	     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true
	     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration
	     * @param {String} [config.stroke] stroke color
	     * @param {Integer} [config.strokeRed] set stroke red component
	     * @param {Integer} [config.strokeGreen] set stroke green component
	     * @param {Integer} [config.strokeBlue] set stroke blue component
	     * @param {Integer} [config.strokeAlpha] set stroke alpha component
	     * @param {Number} [config.strokeWidth] stroke width
	     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true
	     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true
	     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default
	     *  is miter
	     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default
	     *  is butt
	     * @param {String} [config.shadowColor]
	     * @param {Integer} [config.shadowRed] set shadow color red component
	     * @param {Integer} [config.shadowGreen] set shadow color green component
	     * @param {Integer} [config.shadowBlue] set shadow color blue component
	     * @param {Integer} [config.shadowAlpha] set shadow color alpha component
	     * @param {Number} [config.shadowBlur]
	     * @param {Object} [config.shadowOffset] object with x and y component
	     * @param {Number} [config.shadowOffsetX]
	     * @param {Number} [config.shadowOffsetY]
	     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number
	     *  between 0 and 1
	     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true
	     * @param {Array} [config.dash]
	     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true
	     * @param {Number} [config.x]
	     * @param {Number} [config.y]
	     * @param {Number} [config.width]
	     * @param {Number} [config.height]
	     * @param {Boolean} [config.visible]
	     * @param {Boolean} [config.listening] whether or not the node is listening for events
	     * @param {String} [config.id] unique id
	     * @param {String} [config.name] non-unique name
	     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1
	     * @param {Object} [config.scale] set scale
	     * @param {Number} [config.scaleX] set scale x
	     * @param {Number} [config.scaleY] set scale y
	     * @param {Number} [config.rotation] rotation in degrees
	     * @param {Object} [config.offset] offset from center point and rotation point
	     * @param {Number} [config.offsetX] set offset x
	     * @param {Number} [config.offsetY] set offset y
	     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop
	     *  the entire stage by dragging any portion of the stage
	     * @param {Number} [config.dragDistance]
	     * @param {Function} [config.dragBoundFunc]
	     * @example
	     * var imageObj = new Image();
	     * imageObj.onload = function() {
	     *   var sprite = new Kinetic.Sprite({
	     *     x: 200,
	     *     y: 100,
	     *     image: imageObj,
	     *     animation: 'standing',
	     *     animations: {
	     *       standing: [
	     *         // x, y, width, height (6 frames)
	     *         0, 0, 49, 109,
	     *         52, 0, 49, 109,
	     *         105, 0, 49, 109,
	     *         158, 0, 49, 109,
	     *         210, 0, 49, 109,
	     *         262, 0, 49, 109
	     *       ],
	     *       kicking: [
	     *         // x, y, width, height (6 frames)
	     *         0, 109, 45, 98,
	     *         45, 109, 45, 98,
	     *         95, 109, 63, 98,
	     *         156, 109, 70, 98,
	     *         229, 109, 60, 98,
	     *         287, 109, 41, 98
	     *       ]          
	     *     },
	     *     frameRate: 7,
	     *     frameIndex: 0
	     *   });
	     * };
	     * imageObj.src = '/path/to/image.jpg'
	     */
	    Kinetic.Sprite = function(config) {
	        this.___init(config);
	    };

	    Kinetic.Sprite.prototype = {
	        ___init: function(config) {
	            // call super constructor
	            Kinetic.Shape.call(this, config);
	            this.className = 'Sprite';

	            this._updated = true;
	            var that = this;
	            this.anim = new Kinetic.Animation(function() {
	                // if we don't need to redraw layer we should return false
	                var updated = that._updated;
	                that._updated = false;
	                return updated;
	            });
	            this.on('animationChange.kinetic', function() {
	                // reset index when animation changes
	                this.frameIndex(0);
	            });
	            this.on('frameIndexChange.kinetic', function() {
	                this._updated = true;
	            });
	            // smooth change for frameRate
	            this.on('frameRateChange.kinetic', function() {
	                if (!this.anim.isRunning()) {
	                    return;
	                }
	                clearInterval(this.interval);
	                this._setInterval();
	            });

	            this.sceneFunc(this._sceneFunc);
	            this.hitFunc(this._hitFunc);
	        },
	        _sceneFunc: function(context) {
	            var anim = this.getAnimation(),
	                index = this.frameIndex(),
	                ix4 = index * 4,
	                set = this.getAnimations()[anim],
	                offsets = this.frameOffsets(),
	                x =      set[ix4 + 0],
	                y =      set[ix4 + 1],
	                width =  set[ix4 + 2],
	                height = set[ix4 + 3],
	                image = this.getImage();

	            if(image) {
	                if (offsets) {
	                    var offset = offsets[anim],
	                    ix2 = index * 2;
	                    context.drawImage(image, x, y, width, height, offset[ix2 + 0], offset[ix2 + 1], width, height);
	                } else {
	                    context.drawImage(image, x, y, width, height, 0, 0, width, height);
	                }
	            }
	        },
	        _hitFunc: function(context) {
	            var anim = this.getAnimation(),
	                index = this.frameIndex(),
	                ix4 = index * 4,
	                set = this.getAnimations()[anim],
	                offsets = this.frameOffsets(),
	                width =  set[ix4 + 2],
	                height = set[ix4 + 3];

	            context.beginPath();
	            if (offsets) {
	                var offset = offsets[anim];
	                var ix2 = index * 2;
	                context.rect(offset[ix2 + 0], offset[ix2 + 1], width, height);
	            } else {
	                context.rect(0, 0, width, height);
	            }
	            context.closePath();
	            context.fillShape(this);
	        },
	        _useBufferCanvas: function() {
	            return (this.hasShadow() || this.getAbsoluteOpacity() !== 1) && this.hasStroke();
	        },
	        _setInterval: function() {
	            var that = this;
	            this.interval = setInterval(function() {
	                that._updateIndex();
	            }, 1000 / this.getFrameRate());
	        },
	        /**
	         * start sprite animation
	         * @method
	         * @memberof Kinetic.Sprite.prototype
	         */
	        start: function() {
	            var layer = this.getLayer();

	            /*
	             * animation object has no executable function because
	             *  the updates are done with a fixed FPS with the setInterval
	             *  below.  The anim object only needs the layer reference for
	             *  redraw
	             */
	            this.anim.setLayers(layer);
	            this._setInterval();
	            this.anim.start();
	        },
	        /**
	         * stop sprite animation
	         * @method
	         * @memberof Kinetic.Sprite.prototype
	         */
	        stop: function() {
	            this.anim.stop();
	            clearInterval(this.interval);
	        },
	        /**
	         * determine if animation of sprite is running or not.  returns true or false
	         * @method
	         * @memberof Kinetic.Animation.prototype
	         * @returns {Boolean}
	         */
	        isRunning: function() {
	            return this.anim.isRunning();
	        },
	        _updateIndex: function() {
	            var index = this.frameIndex(),
	                animation = this.getAnimation(),
	                animations = this.getAnimations(),
	                anim = animations[animation],
	                len = anim.length / 4;

	            if(index < len - 1) {
	                this.frameIndex(index + 1);
	            }
	            else {
	                this.frameIndex(0);
	            }
	        }
	    };
	    Kinetic.Util.extend(Kinetic.Sprite, Kinetic.Shape);

	    // add getters setters
	    Kinetic.Factory.addGetterSetter(Kinetic.Sprite, 'animation');

	    /**
	     * get/set animation key
	     * @name animation
	     * @method
	     * @memberof Kinetic.Sprite.prototype
	     * @param {String} anim animation key
	     * @returns {String}
	     * @example
	     * // get animation key
	     * var animation = sprite.animation();
	     *
	     * // set animation key
	     * sprite.animation('kicking');
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Sprite, 'animations');

	    /**
	     * get/set animations map
	     * @name animations
	     * @method
	     * @memberof Kinetic.Sprite.prototype
	     * @param {Object} animations
	     * @returns {Object}
	     * @example
	     * // get animations map
	     * var animations = sprite.animations();
	     * 
	     * // set animations map
	     * sprite.animations({
	     *   standing: [
	     *     // x, y, width, height (6 frames)
	     *     0, 0, 49, 109,
	     *     52, 0, 49, 109,
	     *     105, 0, 49, 109,
	     *     158, 0, 49, 109,
	     *     210, 0, 49, 109,
	     *     262, 0, 49, 109
	     *   ],
	     *   kicking: [
	     *     // x, y, width, height (6 frames)
	     *     0, 109, 45, 98,
	     *     45, 109, 45, 98,
	     *     95, 109, 63, 98,
	     *     156, 109, 70, 98,
	     *     229, 109, 60, 98,
	     *     287, 109, 41, 98
	     *   ]          
	     * });
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Sprite, 'frameOffsets');

	    /**
	    * get/set offsets map
	    * @name offsets
	    * @method
	    * @memberof Kinetic.Sprite.prototype
	    * @param {Object} offsets
	    * @returns {Object}
	    * @example
	    * // get offsets map
	    * var offsets = sprite.offsets();
	    *
	    * // set offsets map
	    * sprite.offsets({
	    *   standing: [
	    *     // x, y (6 frames)
	    *     0, 0,
	    *     0, 0,
	    *     5, 0,
	    *     0, 0,
	    *     0, 3,
	    *     2, 0
	    *   ],
	    *   kicking: [
	    *     // x, y (6 frames)
	    *     0, 5,
	    *     5, 0,
	    *     10, 0,
	    *     0, 0,
	    *     2, 1,
	    *     0, 0
	    *   ]
	    * });
	    */
	 
	    Kinetic.Factory.addGetterSetter(Kinetic.Sprite, 'image');

	    /**
	     * get/set image
	     * @name image
	     * @method
	     * @memberof Kinetic.Sprite.prototype
	     * @param {Image} image
	     * @returns {Image}
	     * @example
	     * // get image
	     * var image = sprite.image();
	     *
	     * // set image
	     * sprite.image(imageObj);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Sprite, 'frameIndex', 0);

	    /**
	     * set/set animation frame index
	     * @name frameIndex
	     * @method
	     * @memberof Kinetic.Sprite.prototype
	     * @param {Integer} frameIndex
	     * @returns {Integer}
	     * @example
	     * // get animation frame index
	     * var frameIndex = sprite.frameIndex();
	     *
	     * // set animation frame index
	     * sprite.frameIndex(3);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Sprite, 'frameRate', 17);

	    /**
	     * get/set frame rate in frames per second.  Increase this number to make the sprite
	     *  animation run faster, and decrease the number to make the sprite animation run slower
	     *  The default is 17 frames per second
	     * @name frameRate
	     * @method
	     * @memberof Kinetic.Sprite.prototype
	     * @param {Integer} frameRate
	     * @returns {Integer}
	     * @example
	     * // get frame rate
	     * var frameRate = sprite.frameRate();
	     *
	     * // set frame rate to 2 frames per second
	     * sprite.frameRate(2);
	     */

	    Kinetic.Factory.backCompat(Kinetic.Sprite, {
	        index: 'frameIndex',
	        getIndex: 'getFrameIndex',
	        setIndex: 'setFrameIndex'
	    });

	    Kinetic.Collection.mapMethods(Kinetic.Sprite);
	})();
	;(function () {
	    /**
	     * Path constructor.
	     * @author Jason Follas
	     * @constructor
	     * @memberof Kinetic
	     * @augments Kinetic.Shape
	     * @param {Object} config
	     * @param {String} config.data SVG data string
	     * @param {String} [config.fill] fill color
	     * @param {Integer} [config.fillRed] set fill red component
	     * @param {Integer} [config.fillGreen] set fill green component
	     * @param {Integer} [config.fillBlue] set fill blue component
	     * @param {Integer} [config.fillAlpha] set fill alpha component
	     * @param {Image} [config.fillPatternImage] fill pattern image
	     * @param {Number} [config.fillPatternX]
	     * @param {Number} [config.fillPatternY]
	     * @param {Object} [config.fillPatternOffset] object with x and y component
	     * @param {Number} [config.fillPatternOffsetX] 
	     * @param {Number} [config.fillPatternOffsetY] 
	     * @param {Object} [config.fillPatternScale] object with x and y component
	     * @param {Number} [config.fillPatternScaleX]
	     * @param {Number} [config.fillPatternScaleY]
	     * @param {Number} [config.fillPatternRotation]
	     * @param {String} [config.fillPatternRepeat] can be "repeat", "repeat-x", "repeat-y", or "no-repeat".  The default is "no-repeat"
	     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientStartPointX]
	     * @param {Number} [config.fillLinearGradientStartPointY]
	     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientEndPointX]
	     * @param {Number} [config.fillLinearGradientEndPointY]
	     * @param {Array} [config.fillLinearGradientColorStops] array of color stops
	     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientStartPointX]
	     * @param {Number} [config.fillRadialGradientStartPointY]
	     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientEndPointX] 
	     * @param {Number} [config.fillRadialGradientEndPointY] 
	     * @param {Number} [config.fillRadialGradientStartRadius]
	     * @param {Number} [config.fillRadialGradientEndRadius]
	     * @param {Array} [config.fillRadialGradientColorStops] array of color stops
	     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true
	     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration
	     * @param {String} [config.stroke] stroke color
	     * @param {Integer} [config.strokeRed] set stroke red component
	     * @param {Integer} [config.strokeGreen] set stroke green component
	     * @param {Integer} [config.strokeBlue] set stroke blue component
	     * @param {Integer} [config.strokeAlpha] set stroke alpha component
	     * @param {Number} [config.strokeWidth] stroke width
	     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true
	     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true
	     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default
	     *  is miter
	     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default
	     *  is butt
	     * @param {String} [config.shadowColor]
	     * @param {Integer} [config.shadowRed] set shadow color red component
	     * @param {Integer} [config.shadowGreen] set shadow color green component
	     * @param {Integer} [config.shadowBlue] set shadow color blue component
	     * @param {Integer} [config.shadowAlpha] set shadow color alpha component
	     * @param {Number} [config.shadowBlur]
	     * @param {Object} [config.shadowOffset] object with x and y component
	     * @param {Number} [config.shadowOffsetX]
	     * @param {Number} [config.shadowOffsetY]
	     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number
	     *  between 0 and 1
	     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true
	     * @param {Array} [config.dash]
	     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true
	     * @param {Number} [config.x]
	     * @param {Number} [config.y]
	     * @param {Number} [config.width]
	     * @param {Number} [config.height]
	     * @param {Boolean} [config.visible]
	     * @param {Boolean} [config.listening] whether or not the node is listening for events
	     * @param {String} [config.id] unique id
	     * @param {String} [config.name] non-unique name
	     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1
	     * @param {Object} [config.scale] set scale
	     * @param {Number} [config.scaleX] set scale x
	     * @param {Number} [config.scaleY] set scale y
	     * @param {Number} [config.rotation] rotation in degrees
	     * @param {Object} [config.offset] offset from center point and rotation point
	     * @param {Number} [config.offsetX] set offset x
	     * @param {Number} [config.offsetY] set offset y
	     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop
	     *  the entire stage by dragging any portion of the stage
	     * @param {Number} [config.dragDistance]
	     * @param {Function} [config.dragBoundFunc]
	     * @example
	     * var path = new Kinetic.Path({
	     *   x: 240,
	     *   y: 40,
	     *   data: 'M12.582,9.551C3.251,16.237,0.921,29.021,7.08,38.564l-2.36,1.689l4.893,2.262l4.893,2.262l-0.568-5.36l-0.567-5.359l-2.365,1.694c-4.657-7.375-2.83-17.185,4.352-22.33c7.451-5.338,17.817-3.625,23.156,3.824c5.337,7.449,3.625,17.813-3.821,23.152l2.857,3.988c9.617-6.893,11.827-20.277,4.935-29.896C35.591,4.87,22.204,2.658,12.582,9.551z',
	     *   fill: 'green',
	     *   scale: 2
	     * });
	     */
	    Kinetic.Path = function (config) {
	        this.___init(config);
	    };

	    Kinetic.Path.prototype = {
	        ___init: function (config) {
	            this.dataArray = [];
	            var that = this;

	            // call super constructor
	            Kinetic.Shape.call(this, config);
	            this.className = 'Path';

	            this.dataArray = Kinetic.Path.parsePathData(this.getData());
	            this.on('dataChange.kinetic', function () {
	                that.dataArray = Kinetic.Path.parsePathData(this.getData());
	            });

	            this.sceneFunc(this._sceneFunc);
	        },
	        _sceneFunc: function(context) {
	            var ca = this.dataArray,
	                closedPath = false;

	            // context position
	            context.beginPath();
	            for (var n = 0; n < ca.length; n++) {
	                var c = ca[n].command;
	                var p = ca[n].points;
	                switch (c) {
	                    case 'L':
	                        context.lineTo(p[0], p[1]);
	                        break;
	                    case 'M':
	                        context.moveTo(p[0], p[1]);
	                        break;
	                    case 'C':
	                        context.bezierCurveTo(p[0], p[1], p[2], p[3], p[4], p[5]);
	                        break;
	                    case 'Q':
	                        context.quadraticCurveTo(p[0], p[1], p[2], p[3]);
	                        break;
	                    case 'A':
	                        var cx = p[0], cy = p[1], rx = p[2], ry = p[3], theta = p[4], dTheta = p[5], psi = p[6], fs = p[7];

	                        var r = (rx > ry) ? rx : ry;
	                        var scaleX = (rx > ry) ? 1 : rx / ry;
	                        var scaleY = (rx > ry) ? ry / rx : 1;

	                        context.translate(cx, cy);
	                        context.rotate(psi);
	                        context.scale(scaleX, scaleY);
	                        context.arc(0, 0, r, theta, theta + dTheta, 1 - fs);
	                        context.scale(1 / scaleX, 1 / scaleY);
	                        context.rotate(-psi);
	                        context.translate(-cx, -cy);

	                        break;
	                    case 'z':
	                        context.closePath();
	                        closedPath = true;
	                        break;
	                }
	            }

	            if (closedPath) {
	                context.fillStrokeShape(this);
	            }
	            else {
	                context.strokeShape(this);
	            }
	        }
	    };
	    Kinetic.Util.extend(Kinetic.Path, Kinetic.Shape);

	    Kinetic.Path.getLineLength = function(x1, y1, x2, y2) {
	        return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));
	    };
	    Kinetic.Path.getPointOnLine = function(dist, P1x, P1y, P2x, P2y, fromX, fromY) {
	        if(fromX === undefined) {
	            fromX = P1x;
	        }
	        if(fromY === undefined) {
	            fromY = P1y;
	        }

	        var m = (P2y - P1y) / ((P2x - P1x) + 0.00000001);
	        var run = Math.sqrt(dist * dist / (1 + m * m));
	        if(P2x < P1x) {
	            run *= -1;
	        }
	        var rise = m * run;
	        var pt;

	        if (P2x === P1x) { // vertical line
	            pt = {
	                x: fromX,
	                y: fromY + rise
	            };
	        } else if((fromY - P1y) / ((fromX - P1x) + 0.00000001) === m) {
	            pt = {
	                x: fromX + run,
	                y: fromY + rise
	            };
	        }
	        else {
	            var ix, iy;

	            var len = this.getLineLength(P1x, P1y, P2x, P2y);
	            if(len < 0.00000001) {
	                return undefined;
	            }
	            var u = (((fromX - P1x) * (P2x - P1x)) + ((fromY - P1y) * (P2y - P1y)));
	            u = u / (len * len);
	            ix = P1x + u * (P2x - P1x);
	            iy = P1y + u * (P2y - P1y);

	            var pRise = this.getLineLength(fromX, fromY, ix, iy);
	            var pRun = Math.sqrt(dist * dist - pRise * pRise);
	            run = Math.sqrt(pRun * pRun / (1 + m * m));
	            if(P2x < P1x) {
	                run *= -1;
	            }
	            rise = m * run;
	            pt = {
	                x: ix + run,
	                y: iy + rise
	            };
	        }

	        return pt;
	    };

	    Kinetic.Path.getPointOnCubicBezier = function(pct, P1x, P1y, P2x, P2y, P3x, P3y, P4x, P4y) {
	        function CB1(t) {
	            return t * t * t;
	        }
	        function CB2(t) {
	            return 3 * t * t * (1 - t);
	        }
	        function CB3(t) {
	            return 3 * t * (1 - t) * (1 - t);
	        }
	        function CB4(t) {
	            return (1 - t) * (1 - t) * (1 - t);
	        }
	        var x = P4x * CB1(pct) + P3x * CB2(pct) + P2x * CB3(pct) + P1x * CB4(pct);
	        var y = P4y * CB1(pct) + P3y * CB2(pct) + P2y * CB3(pct) + P1y * CB4(pct);

	        return {
	            x: x,
	            y: y
	        };
	    };
	    Kinetic.Path.getPointOnQuadraticBezier = function(pct, P1x, P1y, P2x, P2y, P3x, P3y) {
	        function QB1(t) {
	            return t * t;
	        }
	        function QB2(t) {
	            return 2 * t * (1 - t);
	        }
	        function QB3(t) {
	            return (1 - t) * (1 - t);
	        }
	        var x = P3x * QB1(pct) + P2x * QB2(pct) + P1x * QB3(pct);
	        var y = P3y * QB1(pct) + P2y * QB2(pct) + P1y * QB3(pct);

	        return {
	            x: x,
	            y: y
	        };
	    };
	    Kinetic.Path.getPointOnEllipticalArc = function(cx, cy, rx, ry, theta, psi) {
	        var cosPsi = Math.cos(psi), sinPsi = Math.sin(psi);
	        var pt = {
	            x: rx * Math.cos(theta),
	            y: ry * Math.sin(theta)
	        };
	        return {
	            x: cx + (pt.x * cosPsi - pt.y * sinPsi),
	            y: cy + (pt.x * sinPsi + pt.y * cosPsi)
	        };
	    };
	    /*
	     * get parsed data array from the data
	     *  string.  V, v, H, h, and l data are converted to
	     *  L data for the purpose of high performance Path
	     *  rendering
	     */
	    Kinetic.Path.parsePathData = function(data) {
	        // Path Data Segment must begin with a moveTo
	        //m (x y)+  Relative moveTo (subsequent points are treated as lineTo)
	        //M (x y)+  Absolute moveTo (subsequent points are treated as lineTo)
	        //l (x y)+  Relative lineTo
	        //L (x y)+  Absolute LineTo
	        //h (x)+    Relative horizontal lineTo
	        //H (x)+    Absolute horizontal lineTo
	        //v (y)+    Relative vertical lineTo
	        //V (y)+    Absolute vertical lineTo
	        //z (closepath)
	        //Z (closepath)
	        //c (x1 y1 x2 y2 x y)+ Relative Bezier curve
	        //C (x1 y1 x2 y2 x y)+ Absolute Bezier curve
	        //q (x1 y1 x y)+       Relative Quadratic Bezier
	        //Q (x1 y1 x y)+       Absolute Quadratic Bezier
	        //t (x y)+    Shorthand/Smooth Relative Quadratic Bezier
	        //T (x y)+    Shorthand/Smooth Absolute Quadratic Bezier
	        //s (x2 y2 x y)+       Shorthand/Smooth Relative Bezier curve
	        //S (x2 y2 x y)+       Shorthand/Smooth Absolute Bezier curve
	        //a (rx ry x-axis-rotation large-arc-flag sweep-flag x y)+     Relative Elliptical Arc
	        //A (rx ry x-axis-rotation large-arc-flag sweep-flag x y)+  Absolute Elliptical Arc

	        // return early if data is not defined
	        if(!data) {
	            return [];
	        }

	        // command string
	        var cs = data;

	        // command chars
	        var cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];
	        // convert white spaces to commas
	        cs = cs.replace(new RegExp(' ', 'g'), ',');
	        // create pipes so that we can split the data
	        for(var n = 0; n < cc.length; n++) {
	            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);
	        }
	        // create array
	        var arr = cs.split('|');
	        var ca = [];
	        // init context point
	        var cpx = 0;
	        var cpy = 0;
	        for( n = 1; n < arr.length; n++) {
	            var str = arr[n];
	            var c = str.charAt(0);
	            str = str.slice(1);
	            // remove ,- for consistency
	            str = str.replace(new RegExp(',-', 'g'), '-');
	            // add commas so that it's easy to split
	            str = str.replace(new RegExp('-', 'g'), ',-');
	            str = str.replace(new RegExp('e,-', 'g'), 'e-');
	            var p = str.split(',');
	            if(p.length > 0 && p[0] === '') {
	                p.shift();
	            }
	            // convert strings to floats
	            for(var i = 0; i < p.length; i++) {
	                p[i] = parseFloat(p[i]);
	            }
	            while(p.length > 0) {
	                if(isNaN(p[0])) {// case for a trailing comma before next command
	                    break;
	                }

	                var cmd = null;
	                var points = [];
	                var startX = cpx, startY = cpy;
	                // Move var from within the switch to up here (jshint)
	                var prevCmd, ctlPtx, ctlPty;     // Ss, Tt
	                var rx, ry, psi, fa, fs, x1, y1; // Aa


	                // convert l, H, h, V, and v to L
	                switch (c) {

	                    // Note: Keep the lineTo's above the moveTo's in this switch
	                    case 'l':
	                        cpx += p.shift();
	                        cpy += p.shift();
	                        cmd = 'L';
	                        points.push(cpx, cpy);
	                        break;
	                    case 'L':
	                        cpx = p.shift();
	                        cpy = p.shift();
	                        points.push(cpx, cpy);
	                        break;

	                    // Note: lineTo handlers need to be above this point
	                    case 'm':
	                        var dx = p.shift();
	                        var dy = p.shift();
	                        cpx += dx;
	                        cpy += dy;
	                        cmd = 'M';
	                        // After closing the path move the current position 
	                        // to the the first point of the path (if any). 
	                        if(ca.length>2 && ca[ca.length-1].command==='z'){
	                            for(var idx=ca.length-2;idx>=0;idx--){
	                                if(ca[idx].command==='M'){
	                                    cpx=ca[idx].points[0]+dx;
	                                    cpy=ca[idx].points[1]+dy;
	                                    break;
	                                }
	                            }
	                        }
	                        points.push(cpx, cpy);
	                        c = 'l';
	                        // subsequent points are treated as relative lineTo
	                        break;
	                    case 'M':
	                        cpx = p.shift();
	                        cpy = p.shift();
	                        cmd = 'M';
	                        points.push(cpx, cpy);
	                        c = 'L';
	                        // subsequent points are treated as absolute lineTo
	                        break;

	                    case 'h':
	                        cpx += p.shift();
	                        cmd = 'L';
	                        points.push(cpx, cpy);
	                        break;
	                    case 'H':
	                        cpx = p.shift();
	                        cmd = 'L';
	                        points.push(cpx, cpy);
	                        break;
	                    case 'v':
	                        cpy += p.shift();
	                        cmd = 'L';
	                        points.push(cpx, cpy);
	                        break;
	                    case 'V':
	                        cpy = p.shift();
	                        cmd = 'L';
	                        points.push(cpx, cpy);
	                        break;
	                    case 'C':
	                        points.push(p.shift(), p.shift(), p.shift(), p.shift());
	                        cpx = p.shift();
	                        cpy = p.shift();
	                        points.push(cpx, cpy);
	                        break;
	                    case 'c':
	                        points.push(cpx + p.shift(), cpy + p.shift(), cpx + p.shift(), cpy + p.shift());
	                        cpx += p.shift();
	                        cpy += p.shift();
	                        cmd = 'C';
	                        points.push(cpx, cpy);
	                        break;
	                    case 'S':
	                        ctlPtx = cpx;
	                        ctlPty = cpy;
	                        prevCmd = ca[ca.length - 1];
	                        if(prevCmd.command === 'C') {
	                            ctlPtx = cpx + (cpx - prevCmd.points[2]);
	                            ctlPty = cpy + (cpy - prevCmd.points[3]);
	                        }
	                        points.push(ctlPtx, ctlPty, p.shift(), p.shift());
	                        cpx = p.shift();
	                        cpy = p.shift();
	                        cmd = 'C';
	                        points.push(cpx, cpy);
	                        break;
	                    case 's':
	                        ctlPtx = cpx;
	                        ctlPty = cpy;
	                        prevCmd = ca[ca.length - 1];
	                        if(prevCmd.command === 'C') {
	                            ctlPtx = cpx + (cpx - prevCmd.points[2]);
	                            ctlPty = cpy + (cpy - prevCmd.points[3]);
	                        }
	                        points.push(ctlPtx, ctlPty, cpx + p.shift(), cpy + p.shift());
	                        cpx += p.shift();
	                        cpy += p.shift();
	                        cmd = 'C';
	                        points.push(cpx, cpy);
	                        break;
	                    case 'Q':
	                        points.push(p.shift(), p.shift());
	                        cpx = p.shift();
	                        cpy = p.shift();
	                        points.push(cpx, cpy);
	                        break;
	                    case 'q':
	                        points.push(cpx + p.shift(), cpy + p.shift());
	                        cpx += p.shift();
	                        cpy += p.shift();
	                        cmd = 'Q';
	                        points.push(cpx, cpy);
	                        break;
	                    case 'T':
	                        ctlPtx = cpx;
	                        ctlPty = cpy;
	                        prevCmd = ca[ca.length - 1];
	                        if(prevCmd.command === 'Q') {
	                            ctlPtx = cpx + (cpx - prevCmd.points[0]);
	                            ctlPty = cpy + (cpy - prevCmd.points[1]);
	                        }
	                        cpx = p.shift();
	                        cpy = p.shift();
	                        cmd = 'Q';
	                        points.push(ctlPtx, ctlPty, cpx, cpy);
	                        break;
	                    case 't':
	                        ctlPtx = cpx;
	                        ctlPty = cpy;
	                        prevCmd = ca[ca.length - 1];
	                        if(prevCmd.command === 'Q') {
	                            ctlPtx = cpx + (cpx - prevCmd.points[0]);
	                            ctlPty = cpy + (cpy - prevCmd.points[1]);
	                        }
	                        cpx += p.shift();
	                        cpy += p.shift();
	                        cmd = 'Q';
	                        points.push(ctlPtx, ctlPty, cpx, cpy);
	                        break;
	                    case 'A':
	                        rx = p.shift();
	                        ry = p.shift();
	                        psi = p.shift();
	                        fa = p.shift();
	                        fs = p.shift();
	                        x1 = cpx;
	                        y1 = cpy;
	                        cpx = p.shift();
	                        cpy = p.shift();
	                        cmd = 'A';
	                        points = this.convertEndpointToCenterParameterization(x1, y1, cpx, cpy, fa, fs, rx, ry, psi);
	                        break;
	                    case 'a':
	                        rx = p.shift();
	                        ry = p.shift();
	                        psi = p.shift();
	                        fa = p.shift();
	                        fs = p.shift();
	                        x1 = cpx;
	                        y1 = cpy; cpx += p.shift();
	                        cpy += p.shift();
	                        cmd = 'A';
	                        points = this.convertEndpointToCenterParameterization(x1, y1, cpx, cpy, fa, fs, rx, ry, psi);
	                        break;
	                }

	                ca.push({
	                    command: cmd || c,
	                    points: points,
	                    start: {
	                        x: startX,
	                        y: startY
	                    },
	                    pathLength: this.calcLength(startX, startY, cmd || c, points)
	                });
	            }

	            if(c === 'z' || c === 'Z') {
	                ca.push({
	                    command: 'z',
	                    points: [],
	                    start: undefined,
	                    pathLength: 0
	                });
	            }
	        }

	        return ca;
	    };
	    Kinetic.Path.calcLength = function(x, y, cmd, points) {
	        var len, p1, p2, t;
	        var path = Kinetic.Path;

	        switch (cmd) {
	            case 'L':
	                return path.getLineLength(x, y, points[0], points[1]);
	            case 'C':
	                // Approximates by breaking curve into 100 line segments
	                len = 0.0;
	                p1 = path.getPointOnCubicBezier(0, x, y, points[0], points[1], points[2], points[3], points[4], points[5]);
	                for( t = 0.01; t <= 1; t += 0.01) {
	                    p2 = path.getPointOnCubicBezier(t, x, y, points[0], points[1], points[2], points[3], points[4], points[5]);
	                    len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);
	                    p1 = p2;
	                }
	                return len;
	            case 'Q':
	                // Approximates by breaking curve into 100 line segments
	                len = 0.0;
	                p1 = path.getPointOnQuadraticBezier(0, x, y, points[0], points[1], points[2], points[3]);
	                for( t = 0.01; t <= 1; t += 0.01) {
	                    p2 = path.getPointOnQuadraticBezier(t, x, y, points[0], points[1], points[2], points[3]);
	                    len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);
	                    p1 = p2;
	                }
	                return len;
	            case 'A':
	                // Approximates by breaking curve into line segments
	                len = 0.0;
	                var start = points[4];
	                // 4 = theta
	                var dTheta = points[5];
	                // 5 = dTheta
	                var end = points[4] + dTheta;
	                var inc = Math.PI / 180.0;
	                // 1 degree resolution
	                if(Math.abs(start - end) < inc) {
	                    inc = Math.abs(start - end);
	                }
	                // Note: for purpose of calculating arc length, not going to worry about rotating X-axis by angle psi
	                p1 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], start, 0);
	                if(dTheta < 0) {// clockwise
	                    for( t = start - inc; t > end; t -= inc) {
	                        p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);
	                        len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);
	                        p1 = p2;
	                    }
	                }
	                else {// counter-clockwise
	                    for( t = start + inc; t < end; t += inc) {
	                        p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);
	                        len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);
	                        p1 = p2;
	                    }
	                }
	                p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], end, 0);
	                len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);

	                return len;
	        }

	        return 0;
	    };
	    Kinetic.Path.convertEndpointToCenterParameterization = function(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg) {
	        // Derived from: http://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes
	        var psi = psiDeg * (Math.PI / 180.0);
	        var xp = Math.cos(psi) * (x1 - x2) / 2.0 + Math.sin(psi) * (y1 - y2) / 2.0;
	        var yp = -1 * Math.sin(psi) * (x1 - x2) / 2.0 + Math.cos(psi) * (y1 - y2) / 2.0;

	        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);

	        if(lambda > 1) {
	            rx *= Math.sqrt(lambda);
	            ry *= Math.sqrt(lambda);
	        }

	        var f = Math.sqrt((((rx * rx) * (ry * ry)) - ((rx * rx) * (yp * yp)) - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp) + (ry * ry) * (xp * xp)));

	        if(fa === fs) {
	            f *= -1;
	        }
	        if(isNaN(f)) {
	            f = 0;
	        }

	        var cxp = f * rx * yp / ry;
	        var cyp = f * -ry * xp / rx;

	        var cx = (x1 + x2) / 2.0 + Math.cos(psi) * cxp - Math.sin(psi) * cyp;
	        var cy = (y1 + y2) / 2.0 + Math.sin(psi) * cxp + Math.cos(psi) * cyp;

	        var vMag = function(v) {
	            return Math.sqrt(v[0] * v[0] + v[1] * v[1]);
	        };
	        var vRatio = function(u, v) {
	            return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));
	        };
	        var vAngle = function(u, v) {
	            return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));
	        };
	        var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);
	        var u = [(xp - cxp) / rx, (yp - cyp) / ry];
	        var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];
	        var dTheta = vAngle(u, v);

	        if(vRatio(u, v) <= -1) {
	            dTheta = Math.PI;
	        }
	        if(vRatio(u, v) >= 1) {
	            dTheta = 0;
	        }
	        if(fs === 0 && dTheta > 0) {
	            dTheta = dTheta - 2 * Math.PI;
	        }
	        if(fs === 1 && dTheta < 0) {
	            dTheta = dTheta + 2 * Math.PI;
	        }
	        return [cx, cy, rx, ry, theta, dTheta, psi, fs];
	    };
	    // add getters setters
	    Kinetic.Factory.addGetterSetter(Kinetic.Path, 'data');

	    /**
	     * set SVG path data string.  This method
	     *  also automatically parses the data string
	     *  into a data array.  Currently supported SVG data:
	     *  M, m, L, l, H, h, V, v, Q, q, T, t, C, c, S, s, A, a, Z, z
	     * @name setData
	     * @method
	     * @memberof Kinetic.Path.prototype
	     * @param {String} SVG path command string
	     */

	    /**
	     * get SVG path data string
	     * @name getData
	     * @method
	     * @memberof Kinetic.Path.prototype
	     */

	    Kinetic.Collection.mapMethods(Kinetic.Path);
	})();
	;(function() {
	    var EMPTY_STRING = '',
	        //CALIBRI = 'Calibri',
	        NORMAL = 'normal';

	    /**
	     * Path constructor.
	     * @author Jason Follas
	     * @constructor
	     * @memberof Kinetic
	     * @augments Kinetic.Shape
	     * @param {Object} config
	     * @param {String} [config.fontFamily] default is Calibri
	     * @param {Number} [config.fontSize] default is 12
	     * @param {String} [config.fontStyle] can be normal, bold, or italic.  Default is normal
	     * @param {String} [config.fontVariant] can be normal or small-caps.  Default is normal
	     * @param {String} config.text
	     * @param {String} config.data SVG data string
	     * @param {String} [config.fill] fill color
	     * @param {Integer} [config.fillRed] set fill red component
	     * @param {Integer} [config.fillGreen] set fill green component
	     * @param {Integer} [config.fillBlue] set fill blue component
	     * @param {Integer} [config.fillAlpha] set fill alpha component
	     * @param {Image} [config.fillPatternImage] fill pattern image
	     * @param {Number} [config.fillPatternX]
	     * @param {Number} [config.fillPatternY]
	     * @param {Object} [config.fillPatternOffset] object with x and y component
	     * @param {Number} [config.fillPatternOffsetX] 
	     * @param {Number} [config.fillPatternOffsetY] 
	     * @param {Object} [config.fillPatternScale] object with x and y component
	     * @param {Number} [config.fillPatternScaleX]
	     * @param {Number} [config.fillPatternScaleY]
	     * @param {Number} [config.fillPatternRotation]
	     * @param {String} [config.fillPatternRepeat] can be "repeat", "repeat-x", "repeat-y", or "no-repeat".  The default is "no-repeat"
	     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientStartPointX]
	     * @param {Number} [config.fillLinearGradientStartPointY]
	     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientEndPointX]
	     * @param {Number} [config.fillLinearGradientEndPointY]
	     * @param {Array} [config.fillLinearGradientColorStops] array of color stops
	     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientStartPointX]
	     * @param {Number} [config.fillRadialGradientStartPointY]
	     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientEndPointX] 
	     * @param {Number} [config.fillRadialGradientEndPointY] 
	     * @param {Number} [config.fillRadialGradientStartRadius]
	     * @param {Number} [config.fillRadialGradientEndRadius]
	     * @param {Array} [config.fillRadialGradientColorStops] array of color stops
	     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true
	     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration
	     * @param {String} [config.stroke] stroke color
	     * @param {Integer} [config.strokeRed] set stroke red component
	     * @param {Integer} [config.strokeGreen] set stroke green component
	     * @param {Integer} [config.strokeBlue] set stroke blue component
	     * @param {Integer} [config.strokeAlpha] set stroke alpha component
	     * @param {Number} [config.strokeWidth] stroke width
	     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true
	     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true
	     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default
	     *  is miter
	     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default
	     *  is butt
	     * @param {String} [config.shadowColor]
	     * @param {Integer} [config.shadowRed] set shadow color red component
	     * @param {Integer} [config.shadowGreen] set shadow color green component
	     * @param {Integer} [config.shadowBlue] set shadow color blue component
	     * @param {Integer} [config.shadowAlpha] set shadow color alpha component
	     * @param {Number} [config.shadowBlur]
	     * @param {Object} [config.shadowOffset] object with x and y component
	     * @param {Number} [config.shadowOffsetX]
	     * @param {Number} [config.shadowOffsetY]
	     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number
	     *  between 0 and 1
	     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true
	     * @param {Array} [config.dash]
	     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true
	     * @param {Number} [config.x]
	     * @param {Number} [config.y]
	     * @param {Number} [config.width]
	     * @param {Number} [config.height]
	     * @param {Boolean} [config.visible]
	     * @param {Boolean} [config.listening] whether or not the node is listening for events
	     * @param {String} [config.id] unique id
	     * @param {String} [config.name] non-unique name
	     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1
	     * @param {Object} [config.scale] set scale
	     * @param {Number} [config.scaleX] set scale x
	     * @param {Number} [config.scaleY] set scale y
	     * @param {Number} [config.rotation] rotation in degrees
	     * @param {Object} [config.offset] offset from center point and rotation point
	     * @param {Number} [config.offsetX] set offset x
	     * @param {Number} [config.offsetY] set offset y
	     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop
	     *  the entire stage by dragging any portion of the stage
	     * @param {Number} [config.dragDistance]
	     * @param {Function} [config.dragBoundFunc]
	     * @example
	     * var textpath = new Kinetic.TextPath({
	     *   x: 100,
	     *   y: 50,
	     *   fill: '#333',
	     *   fontSize: '24',
	     *   fontFamily: 'Arial',
	     *   text: 'All the world\'s a stage, and all the men and women merely players.',
	     *   data: 'M10,10 C0,0 10,150 100,100 S300,150 400,50'
	     * });
	     */
	    Kinetic.TextPath = function(config) {
	        this.___init(config);
	    };

	    function _fillFunc(context) {
	        context.fillText(this.partialText, 0, 0);
	    }
	    function _strokeFunc(context) {
	        context.strokeText(this.partialText, 0, 0);
	    }

	    Kinetic.TextPath.prototype = {
	        ___init: function(config) {
	            var that = this;
	            this.dummyCanvas = Kinetic.Util.createCanvasElement();
	            this.dataArray = [];

	            // call super constructor
	            Kinetic.Shape.call(this, config);

	            // overrides
	            // TODO: shouldn't this be on the prototype?
	            this._fillFunc = _fillFunc;
	            this._strokeFunc = _strokeFunc;
	            this._fillFuncHit = _fillFunc;
	            this._strokeFuncHit = _strokeFunc;
	            
	            this.className = 'TextPath';

	            this.dataArray = Kinetic.Path.parsePathData(this.attrs.data);
	            this.on('dataChange.kinetic', function() {
	                that.dataArray = Kinetic.Path.parsePathData(this.attrs.data);
	            });

	            // update text data for certain attr changes
	            this.on('textChange.kinetic textStroke.kinetic textStrokeWidth.kinetic', that._setTextData);
	            that._setTextData();
	            this.sceneFunc(this._sceneFunc);
	        },
	        _sceneFunc: function(context) {
	            context.setAttr('font', this._getContextFont());
	            context.setAttr('textBaseline', 'middle');
	            context.setAttr('textAlign', 'left');
	            context.save();

	            var glyphInfo = this.glyphInfo;
	            for(var i = 0; i < glyphInfo.length; i++) {
	                context.save();

	                var p0 = glyphInfo[i].p0;

	                context.translate(p0.x, p0.y);
	                context.rotate(glyphInfo[i].rotation);
	                this.partialText = glyphInfo[i].text;

	                context.fillStrokeShape(this);
	                context.restore();

	                //// To assist with debugging visually, uncomment following
	                // context.beginPath();
	                // if (i % 2)
	                // context.strokeStyle = 'cyan';
	                // else
	                // context.strokeStyle = 'green';
	                // var p1 = glyphInfo[i].p1;
	                // context.moveTo(p0.x, p0.y);
	                // context.lineTo(p1.x, p1.y);
	                // context.stroke();
	            }
	            context.restore();
	        },
	        /**
	         * get text width in pixels
	         * @method
	         * @memberof Kinetic.TextPath.prototype
	         */
	        getTextWidth: function() {
	            return this.textWidth;
	        },
	        /**
	         * get text height in pixels
	         * @method
	         * @memberof Kinetic.TextPath.prototype
	         */
	        getTextHeight: function() {
	            return this.textHeight;
	        },
	        /**
	         * set text
	         * @method
	         * @memberof Kinetic.TextPath.prototype
	         * @param {String} text
	         */
	        setText: function(text) {
	            Kinetic.Text.prototype.setText.call(this, text);
	        },
	        _getTextSize: function(text) {
	            var dummyCanvas = this.dummyCanvas;
	            var _context = dummyCanvas.getContext('2d');

	            _context.save();

	            _context.font = this._getContextFont();
	            var metrics = _context.measureText(text);

	            _context.restore();

	            return {
	                width: metrics.width,
	                height: parseInt(this.attrs.fontSize, 10)
	            };
	        },
	        _setTextData: function() {

	            var that = this;
	            var size = this._getTextSize(this.attrs.text);
	            this.textWidth = size.width;
	            this.textHeight = size.height;

	            this.glyphInfo = [];

	            var charArr = this.attrs.text.split('');

	            var p0, p1, pathCmd;

	            var pIndex = -1;
	            var currentT = 0;

	            var getNextPathSegment = function() {
	                currentT = 0;
	                var pathData = that.dataArray;

	                for(var i = pIndex + 1; i < pathData.length; i++) {
	                    if(pathData[i].pathLength > 0) {
	                        pIndex = i;

	                        return pathData[i];
	                    }
	                    else if(pathData[i].command == 'M') {
	                        p0 = {
	                            x: pathData[i].points[0],
	                            y: pathData[i].points[1]
	                        };
	                    }
	                }

	                return {};
	            };
	            var findSegmentToFitCharacter = function(c) {

	                var glyphWidth = that._getTextSize(c).width;

	                var currLen = 0;
	                var attempts = 0;

	                p1 = undefined;
	                while(Math.abs(glyphWidth - currLen) / glyphWidth > 0.01 && attempts < 25) {
	                    attempts++;
	                    var cumulativePathLength = currLen;
	                    while(pathCmd === undefined) {
	                        pathCmd = getNextPathSegment();

	                        if(pathCmd && cumulativePathLength + pathCmd.pathLength < glyphWidth) {
	                            cumulativePathLength += pathCmd.pathLength;
	                            pathCmd = undefined;
	                        }
	                    }

	                    if(pathCmd === {} || p0 === undefined) {
	                        return undefined;
	                    }

	                    var needNewSegment = false;

	                    switch (pathCmd.command) {
	                        case 'L':
	                            if(Kinetic.Path.getLineLength(p0.x, p0.y, pathCmd.points[0], pathCmd.points[1]) > glyphWidth) {
	                                p1 = Kinetic.Path.getPointOnLine(glyphWidth, p0.x, p0.y, pathCmd.points[0], pathCmd.points[1], p0.x, p0.y);
	                            }
	                            else {
	                                pathCmd = undefined;
	                            }
	                            break;
	                        case 'A':

	                            var start = pathCmd.points[4];
	                            // 4 = theta
	                            var dTheta = pathCmd.points[5];
	                            // 5 = dTheta
	                            var end = pathCmd.points[4] + dTheta;

	                            if(currentT === 0){
	                                currentT = start + 0.00000001;
	                            }
	                            // Just in case start is 0
	                            else if(glyphWidth > currLen) {
	                                currentT += (Math.PI / 180.0) * dTheta / Math.abs(dTheta);
	                            }
	                            else {
	                                currentT -= Math.PI / 360.0 * dTheta / Math.abs(dTheta);
	                            }

	                            // Credit for bug fix: @therth https://github.com/ericdrowell/KineticJS/issues/249
	                            // Old code failed to render text along arc of this path: "M 50 50 a 150 50 0 0 1 250 50 l 50 0"
	                            if(dTheta < 0 && currentT < end || dTheta >= 0 && currentT > end) {
	                                currentT = end;
	                                needNewSegment = true;
	                            }
	                            p1 = Kinetic.Path.getPointOnEllipticalArc(pathCmd.points[0], pathCmd.points[1], pathCmd.points[2], pathCmd.points[3], currentT, pathCmd.points[6]);
	                            break;
	                        case 'C':
	                            if(currentT === 0) {
	                                if(glyphWidth > pathCmd.pathLength) {
	                                    currentT = 0.00000001;
	                                }
	                                else {
	                                    currentT = glyphWidth / pathCmd.pathLength;
	                                }
	                            }
	                            else if(glyphWidth > currLen) {
	                                currentT += (glyphWidth - currLen) / pathCmd.pathLength;
	                            }
	                            else {
	                                currentT -= (currLen - glyphWidth) / pathCmd.pathLength;
	                            }

	                            if(currentT > 1.0) {
	                                currentT = 1.0;
	                                needNewSegment = true;
	                            }
	                            p1 = Kinetic.Path.getPointOnCubicBezier(currentT, pathCmd.start.x, pathCmd.start.y, pathCmd.points[0], pathCmd.points[1], pathCmd.points[2], pathCmd.points[3], pathCmd.points[4], pathCmd.points[5]);
	                            break;
	                        case 'Q':
	                            if(currentT === 0) {
	                                currentT = glyphWidth / pathCmd.pathLength;
	                            }
	                            else if(glyphWidth > currLen) {
	                                currentT += (glyphWidth - currLen) / pathCmd.pathLength;
	                            }
	                            else {
	                                currentT -= (currLen - glyphWidth) / pathCmd.pathLength;
	                            }

	                            if(currentT > 1.0) {
	                                currentT = 1.0;
	                                needNewSegment = true;
	                            }
	                            p1 = Kinetic.Path.getPointOnQuadraticBezier(currentT, pathCmd.start.x, pathCmd.start.y, pathCmd.points[0], pathCmd.points[1], pathCmd.points[2], pathCmd.points[3]);
	                            break;

	                    }

	                    if(p1 !== undefined) {
	                        currLen = Kinetic.Path.getLineLength(p0.x, p0.y, p1.x, p1.y);
	                    }

	                    if(needNewSegment) {
	                        needNewSegment = false;
	                        pathCmd = undefined;
	                    }
	                }
	            };
	            for(var i = 0; i < charArr.length; i++) {

	                // Find p1 such that line segment between p0 and p1 is approx. width of glyph
	                findSegmentToFitCharacter(charArr[i]);

	                if(p0 === undefined || p1 === undefined) {
	                    break;
	                }

	                var width = Kinetic.Path.getLineLength(p0.x, p0.y, p1.x, p1.y);

	                // Note: Since glyphs are rendered one at a time, any kerning pair data built into the font will not be used.
	                // Can foresee having a rough pair table built in that the developer can override as needed.

	                var kern = 0;
	                // placeholder for future implementation

	                var midpoint = Kinetic.Path.getPointOnLine(kern + width / 2.0, p0.x, p0.y, p1.x, p1.y);

	                var rotation = Math.atan2((p1.y - p0.y), (p1.x - p0.x));
	                this.glyphInfo.push({
	                    transposeX: midpoint.x,
	                    transposeY: midpoint.y,
	                    text: charArr[i],
	                    rotation: rotation,
	                    p0: p0,
	                    p1: p1
	                });
	                p0 = p1;
	            }
	        }
	    };

	    // map TextPath methods to Text
	    Kinetic.TextPath.prototype._getContextFont = Kinetic.Text.prototype._getContextFont;

	    Kinetic.Util.extend(Kinetic.TextPath, Kinetic.Shape);

	    // add setters and getters
	    Kinetic.Factory.addGetterSetter(Kinetic.TextPath, 'fontFamily', 'Arial');

	    /**
	     * set font family
	     * @name setFontFamily
	     * @method
	     * @memberof Kinetic.TextPath.prototype
	     * @param {String} fontFamily
	     */

	     /**
	     * get font family
	     * @name getFontFamily
	     * @method
	     * @memberof Kinetic.TextPath.prototype
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.TextPath, 'fontSize', 12);

	    /**
	     * set font size
	     * @name setFontSize
	     * @method
	     * @memberof Kinetic.TextPath.prototype
	     * @param {int} fontSize
	     */

	     /**
	     * get font size
	     * @name getFontSize
	     * @method
	     * @memberof Kinetic.TextPath.prototype
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.TextPath, 'fontStyle', NORMAL);

	    /**
	     * set font style.  Can be 'normal', 'italic', or 'bold'.  'normal' is the default.
	     * @name setFontStyle
	     * @method
	     * @memberof Kinetic.TextPath.prototype
	     * @param {String} fontStyle
	     */

	     /**
	     * get font style
	     * @name getFontStyle
	     * @method
	     * @memberof Kinetic.TextPath.prototype
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.TextPath, 'fontVariant', NORMAL);

	    /**
	     * set font variant.  Can be 'normal' or 'small-caps'.  'normal' is the default.
	     * @name setFontVariant
	     * @method
	     * @memberof Kinetic.TextPath.prototype
	     * @param {String} fontVariant
	     */

	    /**
	     * @get font variant
	     * @name getFontVariant
	     * @method
	     * @memberof Kinetic.TextPath.prototype
	     */

	    Kinetic.Factory.addGetter(Kinetic.TextPath, 'text', EMPTY_STRING);

	    /**
	     * get text
	     * @name getText
	     * @method
	     * @memberof Kinetic.TextPath.prototype
	     */

	    Kinetic.Collection.mapMethods(Kinetic.TextPath);
	})();
	;(function() {
	    /**
	     * RegularPolygon constructor.&nbsp; Examples include triangles, squares, pentagons, hexagons, etc.
	     * @constructor
	     * @memberof Kinetic
	     * @augments Kinetic.Shape
	     * @param {Object} config
	     * @param {Number} config.sides
	     * @param {Number} config.radius
	     * @param {String} [config.fill] fill color
	     * @param {Integer} [config.fillRed] set fill red component
	     * @param {Integer} [config.fillGreen] set fill green component
	     * @param {Integer} [config.fillBlue] set fill blue component
	     * @param {Integer} [config.fillAlpha] set fill alpha component
	     * @param {Image} [config.fillPatternImage] fill pattern image
	     * @param {Number} [config.fillPatternX]
	     * @param {Number} [config.fillPatternY]
	     * @param {Object} [config.fillPatternOffset] object with x and y component
	     * @param {Number} [config.fillPatternOffsetX] 
	     * @param {Number} [config.fillPatternOffsetY] 
	     * @param {Object} [config.fillPatternScale] object with x and y component
	     * @param {Number} [config.fillPatternScaleX]
	     * @param {Number} [config.fillPatternScaleY]
	     * @param {Number} [config.fillPatternRotation]
	     * @param {String} [config.fillPatternRepeat] can be "repeat", "repeat-x", "repeat-y", or "no-repeat".  The default is "no-repeat"
	     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientStartPointX]
	     * @param {Number} [config.fillLinearGradientStartPointY]
	     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientEndPointX]
	     * @param {Number} [config.fillLinearGradientEndPointY]
	     * @param {Array} [config.fillLinearGradientColorStops] array of color stops
	     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientStartPointX]
	     * @param {Number} [config.fillRadialGradientStartPointY]
	     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientEndPointX] 
	     * @param {Number} [config.fillRadialGradientEndPointY] 
	     * @param {Number} [config.fillRadialGradientStartRadius]
	     * @param {Number} [config.fillRadialGradientEndRadius]
	     * @param {Array} [config.fillRadialGradientColorStops] array of color stops
	     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true
	     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration
	     * @param {String} [config.stroke] stroke color
	     * @param {Integer} [config.strokeRed] set stroke red component
	     * @param {Integer} [config.strokeGreen] set stroke green component
	     * @param {Integer} [config.strokeBlue] set stroke blue component
	     * @param {Integer} [config.strokeAlpha] set stroke alpha component
	     * @param {Number} [config.strokeWidth] stroke width
	     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true
	     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true
	     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default
	     *  is miter
	     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default
	     *  is butt
	     * @param {String} [config.shadowColor]
	     * @param {Integer} [config.shadowRed] set shadow color red component
	     * @param {Integer} [config.shadowGreen] set shadow color green component
	     * @param {Integer} [config.shadowBlue] set shadow color blue component
	     * @param {Integer} [config.shadowAlpha] set shadow color alpha component
	     * @param {Number} [config.shadowBlur]
	     * @param {Object} [config.shadowOffset] object with x and y component
	     * @param {Number} [config.shadowOffsetX]
	     * @param {Number} [config.shadowOffsetY]
	     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number
	     *  between 0 and 1
	     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true
	     * @param {Array} [config.dash]
	     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true
	     * @param {Number} [config.x]
	     * @param {Number} [config.y]
	     * @param {Number} [config.width]
	     * @param {Number} [config.height]
	     * @param {Boolean} [config.visible]
	     * @param {Boolean} [config.listening] whether or not the node is listening for events
	     * @param {String} [config.id] unique id
	     * @param {String} [config.name] non-unique name
	     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1
	     * @param {Object} [config.scale] set scale
	     * @param {Number} [config.scaleX] set scale x
	     * @param {Number} [config.scaleY] set scale y
	     * @param {Number} [config.rotation] rotation in degrees
	     * @param {Object} [config.offset] offset from center point and rotation point
	     * @param {Number} [config.offsetX] set offset x
	     * @param {Number} [config.offsetY] set offset y
	     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop
	     *  the entire stage by dragging any portion of the stage
	     * @param {Number} [config.dragDistance]
	     * @param {Function} [config.dragBoundFunc]
	     * @example
	     * var hexagon = new Kinetic.RegularPolygon({
	     *   x: 100,
	     *   y: 200,
	     *   sides: 6,
	     *   radius: 70,
	     *   fill: 'red',
	     *   stroke: 'black',
	     *   strokeWidth: 4
	     * });
	     */
	    Kinetic.RegularPolygon = function(config) {
	        this.___init(config);
	    };

	    Kinetic.RegularPolygon.prototype = {
	        ___init: function(config) {
	            // call super constructor
	            Kinetic.Shape.call(this, config);
	            this.className = 'RegularPolygon';
	            this.sceneFunc(this._sceneFunc);
	        },
	        _sceneFunc: function(context) {
	            var sides = this.attrs.sides,
	                radius = this.attrs.radius,
	                n, x, y;

	            context.beginPath();
	            context.moveTo(0, 0 - radius);

	            for(n = 1; n < sides; n++) {
	                x = radius * Math.sin(n * 2 * Math.PI / sides);
	                y = -1 * radius * Math.cos(n * 2 * Math.PI / sides);
	                context.lineTo(x, y);
	            }
	            context.closePath();
	            context.fillStrokeShape(this);
	        }
	    };
	    Kinetic.Util.extend(Kinetic.RegularPolygon, Kinetic.Shape);

	    // add getters setters
	    Kinetic.Factory.addGetterSetter(Kinetic.RegularPolygon, 'radius', 0);

	    /**
	     * set radius
	     * @name setRadius
	     * @method
	     * @memberof Kinetic.RegularPolygon.prototype
	     * @param {Number} radius
	     */

	     /**
	     * get radius
	     * @name getRadius
	     * @method
	     * @memberof Kinetic.RegularPolygon.prototype
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.RegularPolygon, 'sides', 0);

	    /**
	     * set number of sides
	     * @name setSides
	     * @method
	     * @memberof Kinetic.RegularPolygon.prototype
	     * @param {int} sides
	     */

	    /**
	     * get number of sides
	     * @name getSides
	     * @method
	     * @memberof Kinetic.RegularPolygon.prototype
	     */

	    Kinetic.Collection.mapMethods(Kinetic.RegularPolygon);
	})();
	;(function() {
	    /**
	     * Star constructor
	     * @constructor
	     * @memberof Kinetic
	     * @augments Kinetic.Shape
	     * @param {Object} config
	     * @param {Integer} config.numPoints
	     * @param {Number} config.innerRadius
	     * @param {Number} config.outerRadius
	     * @param {String} [config.fill] fill color
	     * @param {Integer} [config.fillRed] set fill red component
	     * @param {Integer} [config.fillGreen] set fill green component
	     * @param {Integer} [config.fillBlue] set fill blue component
	     * @param {Integer} [config.fillAlpha] set fill alpha component
	     * @param {Image} [config.fillPatternImage] fill pattern image
	     * @param {Number} [config.fillPatternX]
	     * @param {Number} [config.fillPatternY]
	     * @param {Object} [config.fillPatternOffset] object with x and y component
	     * @param {Number} [config.fillPatternOffsetX] 
	     * @param {Number} [config.fillPatternOffsetY] 
	     * @param {Object} [config.fillPatternScale] object with x and y component
	     * @param {Number} [config.fillPatternScaleX]
	     * @param {Number} [config.fillPatternScaleY]
	     * @param {Number} [config.fillPatternRotation]
	     * @param {String} [config.fillPatternRepeat] can be "repeat", "repeat-x", "repeat-y", or "no-repeat".  The default is "no-repeat"
	     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientStartPointX]
	     * @param {Number} [config.fillLinearGradientStartPointY]
	     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientEndPointX]
	     * @param {Number} [config.fillLinearGradientEndPointY]
	     * @param {Array} [config.fillLinearGradientColorStops] array of color stops
	     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientStartPointX]
	     * @param {Number} [config.fillRadialGradientStartPointY]
	     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientEndPointX] 
	     * @param {Number} [config.fillRadialGradientEndPointY] 
	     * @param {Number} [config.fillRadialGradientStartRadius]
	     * @param {Number} [config.fillRadialGradientEndRadius]
	     * @param {Array} [config.fillRadialGradientColorStops] array of color stops
	     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true
	     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration
	     * @param {String} [config.stroke] stroke color
	     * @param {Integer} [config.strokeRed] set stroke red component
	     * @param {Integer} [config.strokeGreen] set stroke green component
	     * @param {Integer} [config.strokeBlue] set stroke blue component
	     * @param {Integer} [config.strokeAlpha] set stroke alpha component
	     * @param {Number} [config.strokeWidth] stroke width
	     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true
	     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true
	     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default
	     *  is miter
	     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default
	     *  is butt
	     * @param {String} [config.shadowColor]
	     * @param {Integer} [config.shadowRed] set shadow color red component
	     * @param {Integer} [config.shadowGreen] set shadow color green component
	     * @param {Integer} [config.shadowBlue] set shadow color blue component
	     * @param {Integer} [config.shadowAlpha] set shadow color alpha component
	     * @param {Number} [config.shadowBlur]
	     * @param {Object} [config.shadowOffset] object with x and y component
	     * @param {Number} [config.shadowOffsetX]
	     * @param {Number} [config.shadowOffsetY]
	     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number
	     *  between 0 and 1
	     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true
	     * @param {Array} [config.dash]
	     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true
	     * @param {Number} [config.x]
	     * @param {Number} [config.y]
	     * @param {Number} [config.width]
	     * @param {Number} [config.height]
	     * @param {Boolean} [config.visible]
	     * @param {Boolean} [config.listening] whether or not the node is listening for events
	     * @param {String} [config.id] unique id
	     * @param {String} [config.name] non-unique name
	     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1
	     * @param {Object} [config.scale] set scale
	     * @param {Number} [config.scaleX] set scale x
	     * @param {Number} [config.scaleY] set scale y
	     * @param {Number} [config.rotation] rotation in degrees
	     * @param {Object} [config.offset] offset from center point and rotation point
	     * @param {Number} [config.offsetX] set offset x
	     * @param {Number} [config.offsetY] set offset y
	     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop
	     *  the entire stage by dragging any portion of the stage
	     * @param {Number} [config.dragDistance]
	     * @param {Function} [config.dragBoundFunc]
	     * @example
	     * var star = new Kinetic.Star({
	     *   x: 100,
	     *   y: 200,
	     *   numPoints: 5,
	     *   innerRadius: 70,
	     *   outerRadius: 70,
	     *   fill: 'red',
	     *   stroke: 'black',
	     *   strokeWidth: 4
	     * });
	     */
	    Kinetic.Star = function(config) {
	        this.___init(config);
	    };

	    Kinetic.Star.prototype = {
	        ___init: function(config) {
	            // call super constructor
	            Kinetic.Shape.call(this, config);
	            this.className = 'Star';
	            this.sceneFunc(this._sceneFunc);
	        },
	        _sceneFunc: function(context) {
	            var innerRadius = this.innerRadius(),
	                outerRadius = this.outerRadius(),
	                numPoints = this.numPoints();

	            context.beginPath();
	            context.moveTo(0, 0 - outerRadius);

	            for(var n = 1; n < numPoints * 2; n++) {
	                var radius = n % 2 === 0 ? outerRadius : innerRadius;
	                var x = radius * Math.sin(n * Math.PI / numPoints);
	                var y = -1 * radius * Math.cos(n * Math.PI / numPoints);
	                context.lineTo(x, y);
	            }
	            context.closePath();

	            context.fillStrokeShape(this);
	        }
	    };
	    Kinetic.Util.extend(Kinetic.Star, Kinetic.Shape);

	    // add getters setters
	    Kinetic.Factory.addGetterSetter(Kinetic.Star, 'numPoints', 5);

	    /**
	     * set number of points
	     * @name setNumPoints
	     * @method
	     * @memberof Kinetic.Star.prototype
	     * @param {Integer} points
	     */

	     /**
	     * get number of points
	     * @name getNumPoints
	     * @method
	     * @memberof Kinetic.Star.prototype
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Star, 'innerRadius', 0);

	    /**
	     * set inner radius
	     * @name setInnerRadius
	     * @method
	     * @memberof Kinetic.Star.prototype
	     * @param {Number} radius
	     */

	     /**
	     * get inner radius
	     * @name getInnerRadius
	     * @method
	     * @memberof Kinetic.Star.prototype
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Star, 'outerRadius', 0);

	    /**
	     * set outer radius
	     * @name setOuterRadius
	     * @method
	     * @memberof Kinetic.Star.prototype
	     * @param {Number} radius
	     */

	     /**
	     * get outer radius
	     * @name getOuterRadius
	     * @method
	     * @memberof Kinetic.Star.prototype
	     */

	    Kinetic.Collection.mapMethods(Kinetic.Star);
	})();
	;(function() {
	    // constants
	    var ATTR_CHANGE_LIST = ['fontFamily', 'fontSize', 'fontStyle', 'padding', 'lineHeight', 'text'],
	        CHANGE_KINETIC = 'Change.kinetic',
	        NONE = 'none',
	        UP = 'up',
	        RIGHT = 'right',
	        DOWN = 'down',
	        LEFT = 'left',
	        LABEL = 'Label',

	     // cached variables
	     attrChangeListLen = ATTR_CHANGE_LIST.length;

	    /**
	     * Label constructor.&nbsp; Labels are groups that contain a Text and Tag shape
	     * @constructor
	     * @memberof Kinetic
	     * @param {Object} config
	     * @param {Number} [config.x]
	     * @param {Number} [config.y]
	     * @param {Number} [config.width]
	     * @param {Number} [config.height]
	     * @param {Boolean} [config.visible]
	     * @param {Boolean} [config.listening] whether or not the node is listening for events
	     * @param {String} [config.id] unique id
	     * @param {String} [config.name] non-unique name
	     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1
	     * @param {Object} [config.scale] set scale
	     * @param {Number} [config.scaleX] set scale x
	     * @param {Number} [config.scaleY] set scale y
	     * @param {Number} [config.rotation] rotation in degrees
	     * @param {Object} [config.offset] offset from center point and rotation point
	     * @param {Number} [config.offsetX] set offset x
	     * @param {Number} [config.offsetY] set offset y
	     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop
	     *  the entire stage by dragging any portion of the stage
	     * @param {Number} [config.dragDistance]
	     * @param {Function} [config.dragBoundFunc]
	     * @example
	     * // create label
	     * var label = new Kinetic.Label({
	     *   x: 100,
	     *   y: 100, 
	     *   draggable: true
	     * });
	     *
	     * // add a tag to the label
	     * label.add(new Kinetic.Tag({
	     *   fill: '#bbb',
	     *   stroke: '#333',
	     *   shadowColor: 'black',
	     *   shadowBlur: 10,
	     *   shadowOffset: [10, 10],
	     *   shadowOpacity: 0.2,
	     *   lineJoin: 'round',
	     *   pointerDirection: 'up',
	     *   pointerWidth: 20,
	     *   pointerHeight: 20,
	     *   cornerRadius: 5
	     * }));
	     *
	     * // add text to the label
	     * label.add(new Kinetic.Text({
	     *   text: 'Hello World!',
	     *   fontSize: 50,
	     *   lineHeight: 1.2,
	     *   padding: 10,
	     *   fill: 'green'
	     *  }));
	     */
	    Kinetic.Label = function(config) {
	        this.____init(config);
	    };

	    Kinetic.Label.prototype = {
	        ____init: function(config) {
	            var that = this;

	            Kinetic.Group.call(this, config);
	            this.className = LABEL;
	            
	            this.on('add.kinetic', function(evt) {
	                that._addListeners(evt.child);
	                that._sync();
	            });
	        },
	        /**
	         * get Text shape for the label.  You need to access the Text shape in order to update
	         * the text properties
	         * @name getText
	         * @method
	         * @memberof Kinetic.Label.prototype
	         */
	        getText: function() {
	            return this.find('Text')[0];
	        },
	        /**
	         * get Tag shape for the label.  You need to access the Tag shape in order to update
	         * the pointer properties and the corner radius
	         * @name getTag
	         * @method
	         * @memberof Kinetic.Label.prototype
	         */
	        getTag: function() {
	            return this.find('Tag')[0];
	        },
	        _addListeners: function(text) {
	            var that = this,
	                n;
	            var func = function(){
	                    that._sync();
	                };

	            // update text data for certain attr changes
	            for(n = 0; n < attrChangeListLen; n++) {
	                text.on(ATTR_CHANGE_LIST[n] + CHANGE_KINETIC, func);
	            }
	        },
	        getWidth: function() {
	            return this.getText().getWidth();
	        },
	        getHeight: function() {
	            return this.getText().getHeight();
	        },
	        _sync: function() {
	            var text = this.getText(),
	                tag = this.getTag(),
	                width, height, pointerDirection, pointerWidth, x, y, pointerHeight;

	            if (text && tag) {
	                width = text.getWidth();
	                height = text.getHeight();
	                pointerDirection = tag.getPointerDirection();
	                pointerWidth = tag.getPointerWidth();
	                pointerHeight = tag.getPointerHeight();
	                x = 0;
	                y = 0;

	                switch(pointerDirection) {
	                    case UP:
	                        x = width / 2;
	                        y = -1 * pointerHeight;
	                        break;
	                    case RIGHT:
	                        x = width + pointerWidth;
	                        y = height / 2;
	                        break;
	                    case DOWN:
	                        x = width / 2;
	                        y = height + pointerHeight;
	                        break;
	                    case LEFT:
	                        x = -1 * pointerWidth;
	                        y = height / 2;
	                        break;
	                }

	                tag.setAttrs({
	                    x: -1 * x,
	                    y: -1 * y,
	                    width: width,
	                    height: height
	                });

	                text.setAttrs({
	                    x: -1 * x,
	                    y: -1 * y
	                });
	            }
	        }
	    };

	    Kinetic.Util.extend(Kinetic.Label, Kinetic.Group);

	    Kinetic.Collection.mapMethods(Kinetic.Label);

	    /**
	     * Tag constructor.&nbsp; A Tag can be configured
	     *  to have a pointer element that points up, right, down, or left
	     * @constructor
	     * @memberof Kinetic
	     * @param {Object} config
	     * @param {String} [config.pointerDirection] can be up, right, down, left, or none; the default
	     *  is none.  When a pointer is present, the positioning of the label is relative to the tip of the pointer.
	     * @param {Number} [config.pointerWidth]
	     * @param {Number} [config.pointerHeight]
	     * @param {Number} [config.cornerRadius]
	     */
	    Kinetic.Tag = function(config) {
	        this.___init(config);
	    };

	    Kinetic.Tag.prototype = {
	        ___init: function(config) {
	            Kinetic.Shape.call(this, config);
	            this.className = 'Tag';
	            this.sceneFunc(this._sceneFunc);
	        },
	        _sceneFunc: function(context) {
	            var width = this.getWidth(),
	                height = this.getHeight(),
	                pointerDirection = this.getPointerDirection(),
	                pointerWidth = this.getPointerWidth(),
	                pointerHeight = this.getPointerHeight(),
	                cornerRadius = this.getCornerRadius();

	            context.beginPath();
	            context.moveTo(0,0);

	            if (pointerDirection === UP) {
	                context.lineTo((width - pointerWidth)/2, 0);
	                context.lineTo(width/2, -1 * pointerHeight);
	                context.lineTo((width + pointerWidth)/2, 0);
	            }

	            if(!cornerRadius) {
	                context.lineTo(width, 0);
	            } else {
	                context.lineTo(width - cornerRadius, 0);
	                context.arc(width - cornerRadius, cornerRadius, cornerRadius, Math.PI * 3 / 2, 0, false);
	            }
	            
	            if (pointerDirection === RIGHT) {
	                context.lineTo(width, (height - pointerHeight)/2);
	                context.lineTo(width + pointerWidth, height/2);
	                context.lineTo(width, (height + pointerHeight)/2);
	            }
	            
	            if(!cornerRadius) {
	                context.lineTo(width, height);
	            } else {
	                context.lineTo(width, height - cornerRadius);
	                context.arc(width - cornerRadius, height - cornerRadius, cornerRadius, 0, Math.PI / 2, false);
	            }

	            if (pointerDirection === DOWN) {
	                context.lineTo((width + pointerWidth)/2, height);
	                context.lineTo(width/2, height + pointerHeight);
	                context.lineTo((width - pointerWidth)/2, height);
	            }
	            
	            if(!cornerRadius) {
	                context.lineTo(0, height);
	            } else {
	                context.lineTo(cornerRadius, height);
	                context.arc(cornerRadius, height - cornerRadius, cornerRadius, Math.PI / 2, Math.PI, false);
	            }

	            if (pointerDirection === LEFT) {
	                context.lineTo(0, (height + pointerHeight)/2);
	                context.lineTo(-1 * pointerWidth, height/2);
	                context.lineTo(0, (height - pointerHeight)/2);
	            }
	            
	            if(cornerRadius) {
	                context.lineTo(0, cornerRadius);
	                context.arc(cornerRadius, cornerRadius, cornerRadius, Math.PI, Math.PI * 3 / 2, false);
	            }

	            context.closePath();
	            context.fillStrokeShape(this);
	        }
	    };

	    Kinetic.Util.extend(Kinetic.Tag, Kinetic.Shape);
	    Kinetic.Factory.addGetterSetter(Kinetic.Tag, 'pointerDirection', NONE);

	    /**
	     * set pointer Direction
	     * @name setPointerDirection
	     * @method
	     * @memberof Kinetic.Tag.prototype
	     * @param {String} pointerDirection can be up, right, down, left, or none.  The
	     *  default is none
	     */

	     /**
	     * get pointer Direction
	     * @name getPointerDirection
	     * @method
	     * @memberof Kinetic.Tag.prototype
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Tag, 'pointerWidth', 0);

	    /**
	     * set pointer width
	     * @name setPointerWidth
	     * @method
	     * @memberof Kinetic.Tag.prototype
	     * @param {Number} pointerWidth
	     */

	     /**
	     * get pointer width
	     * @name getPointerWidth
	     * @method
	     * @memberof Kinetic.Tag.prototype
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Tag, 'pointerHeight', 0);

	    /**
	     * set pointer height
	     * @name setPointerHeight
	     * @method
	     * @memberof Kinetic.Tag.prototype
	     * @param {Number} pointerHeight
	     */

	     /**
	     * get pointer height
	     * @name getPointerHeight
	     * @method
	     * @memberof Kinetic.Tag.prototype
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Tag, 'cornerRadius', 0);

	    /**
	     * set corner radius
	     * @name setCornerRadius
	     * @method
	     * @memberof Kinetic.Tag.prototype
	     * @param {Number} corner radius
	     */

	    /**
	     * get corner radius
	     * @name getCornerRadius
	     * @method
	     * @memberof Kinetic.Tag.prototype
	     */

	    Kinetic.Collection.mapMethods(Kinetic.Tag);
	})();
	;(function() {
	    /**
	     * Arrow constructor
	     * @constructor
	     * @memberof Kinetic
	     * @augments Kinetic.Shape
	     * @param {Object} config
	     * @param {Array} config.points
	     * @param {Number} [config.tension] Higher values will result in a more curvy line.  A value of 0 will result in no interpolation.
	     *   The default is 0
	     * @param {Number} config.pointerLength
	     * @param {Number} config.pointerWidth
	     * @param {String} [config.fill] fill color
	     * @param {Integer} [config.fillRed] set fill red component
	     * @param {Integer} [config.fillGreen] set fill green component
	     * @param {Integer} [config.fillBlue] set fill blue component
	     * @param {Integer} [config.fillAlpha] set fill alpha component
	     * @param {Image} [config.fillPatternImage] fill pattern image
	     * @param {Number} [config.fillPatternX]
	     * @param {Number} [config.fillPatternY]
	     * @param {Object} [config.fillPatternOffset] object with x and y component
	     * @param {Number} [config.fillPatternOffsetX] 
	     * @param {Number} [config.fillPatternOffsetY] 
	     * @param {Object} [config.fillPatternScale] object with x and y component
	     * @param {Number} [config.fillPatternScaleX]
	     * @param {Number} [config.fillPatternScaleY]
	     * @param {Number} [config.fillPatternRotation]
	     * @param {String} [config.fillPatternRepeat] can be "repeat", "repeat-x", "repeat-y", or "no-repeat".  The default is "no-repeat"
	     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientStartPointX]
	     * @param {Number} [config.fillLinearGradientStartPointY]
	     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillLinearGradientEndPointX]
	     * @param {Number} [config.fillLinearGradientEndPointY]
	     * @param {Array} [config.fillLinearGradientColorStops] array of color stops
	     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientStartPointX]
	     * @param {Number} [config.fillRadialGradientStartPointY]
	     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component
	     * @param {Number} [config.fillRadialGradientEndPointX] 
	     * @param {Number} [config.fillRadialGradientEndPointY] 
	     * @param {Number} [config.fillRadialGradientStartRadius]
	     * @param {Number} [config.fillRadialGradientEndRadius]
	     * @param {Array} [config.fillRadialGradientColorStops] array of color stops
	     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true
	     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration
	     * @param {String} [config.stroke] stroke color
	     * @param {Integer} [config.strokeRed] set stroke red component
	     * @param {Integer} [config.strokeGreen] set stroke green component
	     * @param {Integer} [config.strokeBlue] set stroke blue component
	     * @param {Integer} [config.strokeAlpha] set stroke alpha component
	     * @param {Number} [config.strokeWidth] stroke width
	     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true
	     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true
	     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default
	     *  is miter
	     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default
	     *  is butt
	     * @param {String} [config.shadowColor]
	     * @param {Integer} [config.shadowRed] set shadow color red component
	     * @param {Integer} [config.shadowGreen] set shadow color green component
	     * @param {Integer} [config.shadowBlue] set shadow color blue component
	     * @param {Integer} [config.shadowAlpha] set shadow color alpha component
	     * @param {Number} [config.shadowBlur]
	     * @param {Object} [config.shadowOffset] object with x and y component
	     * @param {Number} [config.shadowOffsetX]
	     * @param {Number} [config.shadowOffsetY]
	     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number
	     *  between 0 and 1
	     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true
	     * @param {Array} [config.dash]
	     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true
	     * @param {Number} [config.x]
	     * @param {Number} [config.y]
	     * @param {Number} [config.width]
	     * @param {Number} [config.height]
	     * @param {Boolean} [config.visible]
	     * @param {Boolean} [config.listening] whether or not the node is listening for events
	     * @param {String} [config.id] unique id
	     * @param {String} [config.name] non-unique name
	     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1
	     * @param {Object} [config.scale] set scale
	     * @param {Number} [config.scaleX] set scale x
	     * @param {Number} [config.scaleY] set scale y
	     * @param {Number} [config.rotation] rotation in degrees
	     * @param {Object} [config.offset] offset from center point and rotation point
	     * @param {Number} [config.offsetX] set offset x
	     * @param {Number} [config.offsetY] set offset y
	     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop
	     *  the entire stage by dragging any portion of the stage
	     * @param {Number} [config.dragDistance]
	     * @param {Function} [config.dragBoundFunc]
	     * @example
	     * var line = new Kinetic.Line({
	     *   points: [73, 70, 340, 23, 450, 60, 500, 20],
	     *   stroke: 'red',
	     *   tension: 1,
	     *   pointerLength : 10,
	     *   pointerWidth : 12
	     * });
	     */
	    Kinetic.Arrow = function(config) {
	        this.____init(config);
	    };

	    Kinetic.Arrow.prototype = {
	        ____init : function(config) {
	            // call super constructor
	            Kinetic.Line.call(this, config);
	            this.className = 'Arrow';
	        },
	        _sceneFunc : function(ctx) {
	            var PI2 = Math.PI * 2;
	            var points = this.points();
	            var n = points.length;
	            var dx = points[n-2] - points[n-4];
	            var dy = points[n-1] - points[n-3];
	            var radians = (Math.atan2(dy, dx) + PI2) % PI2;
	            var length = this.pointerLength();
	            var width = this.pointerWidth();

	            ctx.save();
	            ctx.beginPath();
	            ctx.translate(points[n-2], points[n-1]);
	            ctx.rotate(radians);
	            ctx.moveTo(0, 0);
	            ctx.lineTo(-length, width / 2);
	            ctx.lineTo(-length, -width / 2);
	            ctx.closePath();
	            ctx.restore();

	            if (this.pointerAtBeginning()) {
	                ctx.save();
	                ctx.translate(points[0], points[1]);
	                dx = points[2] - points[0];
	                dy = points[3] - points[1];
	                ctx.rotate((Math.atan2(-dy, -dx) + PI2) % PI2);
	                ctx.moveTo(0, 0);
	                ctx.lineTo(-10, 6);
	                ctx.lineTo(-10, -6);
	                ctx.closePath();
	                ctx.restore();
	            }

	            ctx.fillStrokeShape(this);
	            Kinetic.Line.prototype._sceneFunc.apply(this, arguments);
	        }
	    };

	    Kinetic.Util.extend(Kinetic.Arrow, Kinetic.Line);
	    /**
	     * get/set pointerLength
	     * @name pointerLength
	     * @method
	     * @memberof Kinetic.Arrow.prototype
	     * @param {Number} Length of pointer of arrow.
	     *   The default is 10.
	     * @returns {Number}
	     * @example
	     * // get tension
	     * var pointerLength = line.pointerLength();
	     *
	     * // set tension
	     * line.pointerLength(15);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Arrow, 'pointerLength', 10);
	    /**
	     * get/set pointerWidth
	     * @name pointerWidth
	     * @method
	     * @memberof Kinetic.Arrow.prototype
	     * @param {Number} Width of pointer of arrow.
	     *   The default is 10.
	     * @returns {Number}
	     * @example
	     * // get tension
	     * var pointerWidth = line.pointerWidth();
	     *
	     * // set tension
	     * line.pointerWidth(15);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Arrow, 'pointerWidth', 10);
	    /**
	     * get/set pointerAtBeginning
	     * @name pointerAtBeginning
	     * @method
	     * @memberof Kinetic.Arrow.prototype
	     * @param {Number} Should pointer displayed at beginning of arrow.
	     *   The default is false.
	     * @returns {Boolean}
	     * @example
	     * // get tension
	     * var pointerAtBeginning = line.pointerAtBeginning();
	     *
	     * // set tension
	     * line.pointerAtBeginning(true);
	     */

	    Kinetic.Factory.addGetterSetter(Kinetic.Arrow, 'pointerAtBeginning', false);
	    Kinetic.Collection.mapMethods(Kinetic.Arrow);

	})();


	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 510 */
/***/ function(module, exports) {

	/* (ignored) */

/***/ },
/* 511 */
/***/ function(module, exports) {

	/* (ignored) */

/***/ },
/* 512 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var TradingAnalysis_Beta = __webpack_require__(513).TradingAnalysis_Beta;
	var TradingEvents_Beta = __webpack_require__(521).TradingEvents_Beta;
	var Message_Beta = __webpack_require__(529).Message_Beta;
	var Price_Beta = __webpack_require__(524).Price_Beta;
	var forgetTradingStreams_Beta = __webpack_require__(525).forgetTradingStreams_Beta;
	var displayCurrencies = __webpack_require__(469).displayCurrencies;
	var Defaults = __webpack_require__(457).Defaults;
	var Notifications = __webpack_require__(458).Notifications;
	var Symbols = __webpack_require__(459).Symbols;
	var Content = __webpack_require__(426).Content;
	var Guide = __webpack_require__(507).Guide;
	var japanese_client = __webpack_require__(307).japanese_client;
	var PortfolioWS = __webpack_require__(462).PortfolioWS;
	var ResizeSensor = __webpack_require__(530);
	var State = __webpack_require__(304).State;
	var url_for = __webpack_require__(306).url_for;
	var showPriceOverlay = __webpack_require__(456).showPriceOverlay;
	var showFormOverlay = __webpack_require__(456).showFormOverlay;
	var addEventListenerForm = __webpack_require__(456).addEventListenerForm;
	var chartFrameCleanup = __webpack_require__(456).chartFrameCleanup;

	var TradePage_Beta = function () {
	    var events_initialized = 0;
	    State.remove('is_beta_trading');

	    var onLoad = function onLoad() {
	        var is_japanese_client = japanese_client();
	        if (is_japanese_client && /\/trading(|_beta)\.html/i.test(window.location.pathname)) {
	            window.location.href = url_for('multi_barriers_trading');
	            return;
	        } else if (!is_japanese_client && /\/multi_barriers_trading\.html/.test(window.location.pathname)) {
	            window.location.href = url_for('trading');
	            return;
	        }
	        State.set('is_beta_trading', true);
	        if (sessionStorage.getItem('currencies')) {
	            displayCurrencies();
	        }
	        BinarySocket.init({
	            onmessage: function onmessage(msg) {
	                Message_Beta.process(msg);
	            },
	            onopen: function onopen() {
	                Notifications.hide('CONNECTION_ERROR');
	            }
	        });
	        Price_Beta.clearFormId();
	        if (events_initialized === 0) {
	            events_initialized = 1;
	            TradingEvents_Beta.init();
	        }
	        Content.populate();

	        if (sessionStorage.getItem('currencies')) {
	            displayCurrencies();
	            Symbols.getSymbols(1);
	        } else {
	            BinarySocket.send({ payout_currencies: 1 });
	        }

	        if (document.getElementById('websocket_form')) {
	            addEventListenerForm();
	            if (!is_japanese_client) {
	                new ResizeSensor($('.col-left .content-tab-container, #contract_prices_container'), adjustAnalysisColumnHeight);
	                new ResizeSensor($('.col-right'), moreTabsHandler);
	            }
	        }

	        // Walktrough Guide
	        Guide.init({
	            script: 'trading'
	        });
	        TradingAnalysis_Beta.bindAnalysisTabEvent();
	    };

	    var adjustAnalysisColumnHeight = function adjustAnalysisColumnHeight() {
	        var sumHeight = 0;
	        if (window.innerWidth > 767) {
	            $('.col-left').children().each(function () {
	                if ($(this).is(':visible')) sumHeight += $(this).outerHeight(true);
	            });
	        } else {
	            sumHeight = 'auto';
	        }
	        $('#trading_analysis_content').height(sumHeight);
	    };

	    var moreTabsHandler = function moreTabsHandler($ul) {
	        if (!$ul) $ul = $('#analysis_tabs');
	        var seeMoreClass = 'see-more',
	            moreTabsClass = 'more-tabs',
	            maxWidth = $ul.outerWidth();
	        var totalWidth = 0;

	        // add seeMore tab
	        var $seeMore = $ul.find('li.' + seeMoreClass);
	        if ($seeMore.length === 0) {
	            $seeMore = $('<li class="tm-li ' + seeMoreClass + '"><a class="tm-a" href="javascript:;"><span class="caret-down"></span></a></li>');
	            $ul.append($seeMore);
	        }
	        $seeMore.removeClass('active');

	        // add moreTabs container
	        var $moreTabs = $ul.find('.' + moreTabsClass);
	        if ($moreTabs.length === 0) {
	            $moreTabs = $('<div class="' + moreTabsClass + '" />').appendTo($seeMore);
	        } else {
	            $moreTabs.find('>li').each(function (index, tab) {
	                $(tab).insertBefore($seeMore);
	            });
	        }
	        $moreTabs.css('top', $ul.find('li:visible').outerHeight() - 1).unbind('click').click(function () {
	            hideDropDown('fast');
	        });

	        // move additional tabs to moreTabs
	        var $visibleTabs = $ul.find('>li:visible');
	        $visibleTabs.each(function (index, tab) {
	            totalWidth += $(tab).outerWidth(true);
	        });
	        var resultWidth = totalWidth;
	        while (resultWidth >= maxWidth) {
	            var $thisTab = $ul.find('>li:not(.' + seeMoreClass + '):visible').last();
	            resultWidth -= $thisTab.outerWidth(true);
	            $thisTab.prependTo($moreTabs);
	        }

	        if ($moreTabs.children().length === 0) {
	            $seeMore.hide();
	            return;
	        }

	        $seeMore.show();
	        if ($moreTabs.find('>li.active').length > 0) {
	            $seeMore.addClass('active');
	        }

	        // drop down behaviour
	        var showDropDown = function showDropDown() {
	            $moreTabs.slideDown();
	            if ($seeMore.find('.over').length === 0) {
	                $('<div/>', { class: 'over' }).insertBefore($seeMore.find('>a'));
	                $seeMore.find('.over').width($seeMore.width());
	            }
	            $seeMore.addClass('open');
	        };
	        var hideDropDown = function hideDropDown(duration) {
	            $moreTabs.slideUp(duration || 400, function () {
	                $seeMore.removeClass('open');
	            });
	        };
	        var timeout = void 0;
	        $seeMore.find('>a').unbind('click').on('click', function (e) {
	            e.stopPropagation();
	            if ($moreTabs.is(':visible')) {
	                hideDropDown();
	                clearTimeout(timeout);
	            } else {
	                clearTimeout(timeout);
	                showDropDown();
	                timeout = setTimeout(function () {
	                    hideDropDown();
	                    clearTimeout(timeout);
	                }, 3000);
	            }
	        });
	        $(document).unbind('click').on('click', function () {
	            hideDropDown();
	        });

	        $moreTabs.mouseenter(function () {
	            clearTimeout(timeout);
	        });

	        $moreTabs.mouseleave(function () {
	            clearTimeout(timeout);
	            timeout = setTimeout(function () {
	                hideDropDown();
	            }, 1000);
	        });
	    };

	    var reload = function reload() {
	        sessionStorage.removeItem('underlying');
	        window.location.reload();
	    };

	    var onUnload = function onUnload() {
	        State.remove('is_beta_trading');
	        events_initialized = 0;
	        forgetTradingStreams_Beta();
	        BinarySocket.clear();
	        Defaults.clear();
	        PortfolioWS.onUnload();
	        chartFrameCleanup();
	    };

	    var onDisconnect = function onDisconnect() {
	        showPriceOverlay();
	        showFormOverlay();
	        chartFrameCleanup();
	        onLoad();
	    };

	    return {
	        onLoad: onLoad,
	        reload: reload,
	        onUnload: onUnload,
	        onDisconnect: onDisconnect
	    };
	}();

	module.exports = {
	    TradePage_Beta: TradePage_Beta
	};

/***/ },
/* 513 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var AssetIndexUI = __webpack_require__(514).AssetIndexUI;
	var MarketTimesUI = __webpack_require__(517).MarketTimesUI;
	var japanese_client = __webpack_require__(307).japanese_client;
	var DigitInfoWS_Beta = __webpack_require__(520).DigitInfoWS_Beta;
	var PortfolioWS = __webpack_require__(462).PortfolioWS;
	var State = __webpack_require__(304).State;
	var getLanguage = __webpack_require__(303).getLanguage;
	var Url = __webpack_require__(306).Url;
	var url_for = __webpack_require__(306).url_for;
	var url_for_static = __webpack_require__(306).url_for_static;
	var Client = __webpack_require__(305).Client;
	var showHighchart = __webpack_require__(456).showHighchart;
	var toggleActiveNavMenuElement_Beta = __webpack_require__(456).toggleActiveNavMenuElement_Beta;
	var elementInnerHtml = __webpack_require__(420).elementInnerHtml;

	/*
	 * This file contains the code related to loading of trading page bottom analysis
	 * content. It will contain jquery so as to compatible with old code and less rewrite
	 *
	 * Please note that this will be removed in near future
	 */

	/*
	 * This function is called whenever we change market, form
	 * or underlying to load bet analysis for that particular event
	 */

	var TradingAnalysis_Beta = function () {
	    var trading_digit_info = new DigitInfoWS_Beta();

	    var requestTradeAnalysis = function requestTradeAnalysis() {
	        var formName = State.get('is_mb_trading') ? $('#category').val() : $('#contract_form_name_nav').find('.a-active').attr('id');
	        if (formName === 'matchdiff') {
	            formName = 'digits';
	        }
	        $('#tab_explanation').find('a').attr('href', url_for('trade/bet_explanation_beta', 'underlying_symbol=' + $('#underlying').val() + '&form_name=' + formName));
	        if (formName === 'digits' || formName === 'overunder' || formName === 'evenodd') {
	            $('#tab_last_digit').removeClass('invisible');
	        } else {
	            $('#tab_last_digit').addClass('invisible');
	        }
	        sessionStorage.setItem('currentAnalysisTab_Beta', getActiveTab());
	        loadAnalysisTab();
	    };

	    /*
	     * This function bind event to link elements of bottom content
	     * navigation
	     */
	    var bindAnalysisTabEvent = function bindAnalysisTabEvent() {
	        'use strict';

	        if (Client.get_boolean('is_logged_in')) {
	            $('#tab_portfolio').removeClass('invisible');
	        }
	        if (!japanese_client()) {
	            $('#tab_asset_index').removeClass('invisible');
	            $('#tab_trading_times').removeClass('invisible');
	        }

	        var $analysis_tabs = $('#trading_analysis_content').find('#analysis_tabs');
	        if ($analysis_tabs.length) {
	            $analysis_tabs.find('li a').click(function (e) {
	                e.preventDefault();
	                var $li = $(this).parent();
	                sessionStorage.setItem('currentAnalysisTab_Beta', $li.attr('id'));
	                if (!$li.hasClass('active')) {
	                    loadAnalysisTab();
	                }
	            });
	        }
	    };

	    /*
	     * This function handles all the functionality on how to load
	     * tab according to current paramerted
	     */
	    var loadAnalysisTab = function loadAnalysisTab() {
	        'use strict';

	        var currentTab = getActiveTab(),
	            currentLink = document.querySelector('#' + currentTab + ' a'),
	            contentId = document.getElementById(currentTab + '-content');

	        var analysisNavElement = document.querySelector('#trading_analysis_content #analysis_tabs');
	        toggleActiveNavMenuElement_Beta(analysisNavElement, currentLink.parentElement);
	        toggleActiveAnalysisTabs();

	        switch (currentTab) {
	            case 'tab_graph':
	                showHighchart();
	                break;
	            case 'tab_portfolio':
	                PortfolioWS.onLoad();
	                break;
	            case 'tab_last_digit':
	                {
	                    var underlying = $('[name=underlying] option:selected').val() || $('#underlying').find('option:selected').val();
	                    var tick = $('[name=tick_count]').val() || 100;
	                    BinarySocket.send({ ticks_history: underlying, end: 'latest', count: tick + '', req_id: 1 });
	                    break;
	                }
	            case 'tab_asset_index':
	                AssetIndexUI.init({ framed: true });
	                $('#tab_asset').find('index-content').find('h1').hide();
	                break;
	            case 'tab_trading_times':
	                MarketTimesUI.init({ framed: true });
	                $('#tab_trading').find('times-content').find('h1').hide();
	                break;
	            default:
	                {
	                    var url = currentLink.getAttribute('href');
	                    $.ajax({
	                        method: 'GET',
	                        url: url
	                    }).done(function (data) {
	                        elementInnerHtml(contentId, data);
	                        if (currentTab === 'tab_explanation') {
	                            showExplanation(currentLink.href);
	                        }
	                    });
	                    break;
	                }
	        }
	    };

	    /*
	     * function to toggle the active element for analysis menu
	     */
	    var toggleActiveAnalysisTabs = function toggleActiveAnalysisTabs() {
	        'use strict';

	        var currentTab = getActiveTab(),
	            analysisContainer = document.getElementById('analysis_content');

	        if (analysisContainer) {
	            var childElements = analysisContainer.children,
	                currentTabElement = document.getElementById(currentTab + '-content'),
	                classes = currentTabElement.classList;

	            for (var i = 0, len = childElements.length; i < len; i++) {
	                childElements[i].classList.remove('selectedTab');
	                childElements[i].classList.add('invisible');
	            }

	            classes.add('selectedTab');
	            classes.remove('invisible');
	        }
	    };

	    /*
	     * get the current active tab if its visible i.e allowed for current parameters
	     */
	    var getActiveTab = function getActiveTab() {
	        var selectedTab = sessionStorage.getItem('currentAnalysisTab_Beta') || (State.get('is_mb_trading') ? 'tab_portfolio' : window.chartAllowed ? 'tab_graph' : 'tab_explanation');
	        var selectedElement = document.getElementById(selectedTab);

	        if (selectedElement && selectedElement.classList.contains('invisible')) {
	            selectedTab = window.chartAllowed ? 'tab_graph' : 'tab_explanation';
	            sessionStorage.setItem('currentAnalysisTab_Beta', selectedTab);
	        }

	        return selectedTab;
	    };

	    /*
	     * handle the display of proper explanation based on parameters
	     */
	    var showExplanation = function showExplanation(href) {
	        var options = new Url(href).params_hash();
	        var form_name = options.form_name || 'risefall',
	            show_image = options.show_image ? options.show_image > 0 : true,
	            show_winning = options.show_winning ? options.show_winning > 0 : true,
	            show_explain = true,
	            hidden_class = 'invisible',
	            $Container = $('#tab_explanation-content');

	        if (show_winning) {
	            $Container.find('#explanation_winning, #winning_' + form_name).removeClass(hidden_class);
	        }

	        if (show_explain) {
	            $Container.find('#explanation_explain, #explain_' + form_name).removeClass(hidden_class);
	        }

	        var images = {
	            risefall: {
	                image1: 'rise-fall-1.svg',
	                image2: 'rise-fall-2.svg'
	            },
	            higherlower: {
	                image1: 'higher-lower-1.svg',
	                image2: 'higher-lower-2.svg'
	            },
	            touchnotouch: {
	                image1: 'touch-notouch-1.svg',
	                image2: 'touch-notouch-2.svg'
	            },
	            endsinout: {
	                image1: 'in-out-1.svg',
	                image2: 'in-out-2.svg'
	            },
	            staysinout: {
	                image1: 'in-out-3.svg',
	                image2: 'in-out-4.svg'
	            },
	            updown: {
	                image1: 'up-down-1.svg',
	                image2: 'up-down-2.svg'
	            },
	            spreads: {
	                image1: 'spreads-1.svg',
	                image2: 'spreads-2.svg'
	            },
	            evenodd: {
	                image1: 'evenodd-1.svg',
	                image2: 'evenodd-2.svg'
	            },
	            overunder: {
	                image1: 'overunder-1.svg',
	                image2: 'overunder-2.svg'
	            }
	        };

	        if (show_image && images.hasOwnProperty(form_name)) {
	            var image_path = url_for_static('images/pages/trade-explanation/' + (getLanguage() === 'JA' ? 'ja/' : ''));
	            $Container.find('#explanation_image_1').attr('src', image_path + images[form_name].image1);
	            $Container.find('#explanation_image_2').attr('src', image_path + images[form_name].image2);
	            $Container.find('#explanation_image').removeClass(hidden_class);
	        }
	    };

	    return {
	        request: requestTradeAnalysis,
	        getActiveTab: getActiveTab,
	        digit_info: function digit_info() {
	            return trading_digit_info;
	        },
	        bindAnalysisTabEvent: bindAnalysisTabEvent
	    };
	}();

	module.exports = {
	    TradingAnalysis_Beta: TradingAnalysis_Beta
	};

/***/ },
/* 514 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var showLoadingImage = __webpack_require__(419).showLoadingImage;
	var Table = __webpack_require__(501).Table;
	var jqueryuiTabsToDropdown = __webpack_require__(420).jqueryuiTabsToDropdown;
	var Content = __webpack_require__(426).Content;
	var japanese_client = __webpack_require__(307).japanese_client;
	var AssetIndexData = __webpack_require__(515).AssetIndexData;
	var AssetIndex = __webpack_require__(516).AssetIndex;
	var State = __webpack_require__(304).State;
	var url_for = __webpack_require__(306).url_for;

	var AssetIndexUI = function () {
	    'use strict';

	    var $container = void 0,
	        $tabs = void 0,
	        $contents = void 0,
	        activeSymbols = void 0,
	        assetIndex = void 0,
	        marketColumns = void 0,
	        isFramed = void 0;

	    var init = function init(config) {
	        if (japanese_client()) {
	            if (!State.get('is_beta_trading')) {
	                window.location.href = url_for('resources');
	            }
	            return;
	        }

	        $container = $('#asset-index');
	        assetIndex = marketColumns = undefined;
	        if (!State.get('is_beta_trading')) activeSymbols = undefined;

	        if ($container.contents().length) return;

	        Content.populate();
	        showLoadingImage($container);

	        isFramed = config && config.framed;
	        if (!assetIndex) {
	            initSocket();
	            AssetIndexData.sendRequest(!activeSymbols);
	        }
	        $container.tabs();
	    };

	    var populateTable = function populateTable() {
	        if (!activeSymbols || !assetIndex) return;

	        $('#errorMsg').addClass('hidden');
	        assetIndex = AssetIndex.getAssetIndexData(assetIndex, activeSymbols);
	        marketColumns = AssetIndex.getMarketColumns();
	        $tabs = $('<ul/>');
	        $contents = $('<div/>');

	        for (var i = 0; i < assetIndex.length; i++) {
	            var assetItem = assetIndex[i];
	            var symbolInfo = assetItem[3];
	            if (symbolInfo) {
	                var $submarketTable = getSubmarketTable(assetItem, symbolInfo);
	                $submarketTable.find('tbody').append(createSubmarketTableRow(assetItem, symbolInfo));
	            }
	        }

	        $container.empty().append($tabs).append($contents.children());

	        $container.tabs('destroy').tabs();

	        if (isFramed) {
	            $container.find('ul').hide();
	            $('<div/>', { class: 'center-text' }).append(jqueryuiTabsToDropdown($container)).prependTo($container);
	        }
	    };

	    var getSubmarketTable = function getSubmarketTable(assetItem, symbolInfo) {
	        var marketID = 'market-' + symbolInfo.market;
	        var submarketID = 'submarket-' + symbolInfo.submarket;

	        var $table = $contents.find('#' + submarketID);
	        if ($table.length === 0) {
	            // Create the table for this submarket
	            var $market = $contents.find('#' + marketID);
	            if ($market.length === 0) {
	                // Create the market and tab elements
	                $market = $('<div/>', { id: marketID });
	                $tabs.append($('<li/>').append($('<a/>', { href: '#' + marketID, text: symbolInfo.market_display_name, id: 'outline' })));
	            }
	            $table = createEmptyTable(assetItem, symbolInfo, submarketID);
	            $market.append($table);
	            $contents.append($market);
	        }

	        return $table;
	    };

	    var createSubmarketTableRow = function createSubmarketTableRow(assetItem, symbolInfo) {
	        var cells = [symbolInfo.display_name],
	            columns = ['asset'];

	        var marketCols = marketColumns[symbolInfo.market],
	            assetCells = assetItem[4];
	        for (var i = 1; i < marketCols.columns.length; i++) {
	            var prop = marketCols.columns[i];
	            if (prop.length > 0) {
	                cells.push(prop in assetCells ? assetCells[prop] : '--');
	                columns.push(prop);
	            }
	        }

	        return Table.createFlexTableRow(cells, columns, 'data');
	    };

	    var createEmptyTable = function createEmptyTable(assetItem, symbolInfo, submarketID) {
	        var market = symbolInfo.market;

	        var metadata = {
	            id: submarketID,
	            cols: marketColumns[market].columns
	        };

	        var $submarketTable = Table.createFlexTable([], metadata, marketColumns[market].header);

	        var $submarketHeader = $('<tr/>', { class: 'flex-tr' }).append($('<th/>', { class: 'flex-tr-child submarket-name', colspan: marketColumns[market].columns.length, text: symbolInfo.submarket_display_name }));
	        $submarketTable.find('thead').prepend($submarketHeader);

	        return $submarketTable;
	    };

	    var initSocket = function initSocket() {
	        if (State.get('is_beta_trading')) return;
	        BinarySocket.init({
	            onmessage: function onmessage(msg) {
	                var response = JSON.parse(msg.data);
	                if (response) {
	                    responseHandler(response);
	                }
	            }
	        });
	    };

	    var responseHandler = function responseHandler(response) {
	        var msg_type = response.msg_type;
	        if (msg_type === 'asset_index') {
	            AssetIndexUI.setAssetIndex(response);
	        } else if (msg_type === 'active_symbols') {
	            AssetIndexUI.setActiveSymbols(response);
	        }
	    };

	    return {
	        init: init,
	        setActiveSymbols: function setActiveSymbols(response) {
	            activeSymbols = response.active_symbols.slice(0); // clone
	            if (assetIndex) populateTable();
	        },
	        setAssetIndex: function setAssetIndex(response) {
	            assetIndex = response.asset_index;
	            if (activeSymbols) populateTable();
	        }
	    };
	}();

	module.exports = {
	    AssetIndexUI: AssetIndexUI
	};

/***/ },
/* 515 */
/***/ function(module, exports) {

	'use strict';

	var AssetIndexData = function () {
	    'use strict';

	    var sendRequest = function sendRequest(shouldRequestActiveSymbols) {
	        if (shouldRequestActiveSymbols) {
	            BinarySocket.send({ active_symbols: 'brief' });
	        }
	        BinarySocket.send({ asset_index: 1 });
	    };

	    return {
	        sendRequest: sendRequest
	    };
	}();

	module.exports = {
	    AssetIndexData: AssetIndexData
	};

/***/ },
/* 516 */
/***/ function(module, exports) {

	'use strict';

	var AssetIndex = function () {
	    'use strict';

	    var marketColumns = void 0;

	    // Search and Remove (to decrease the next search count)
	    var getSymbolInfo = function getSymbolInfo(qSymbol, activeSymbols) {
	        return activeSymbols.filter(function (sy, id) {
	            if (sy.symbol === qSymbol) {
	                activeSymbols.splice(id, 1);
	                return true;
	            }
	            return false;
	        });
	    };

	    /*
	     * This method generates headers for all tables of each market
	     * should include headers existed in all assets of each market and its submarkets
	     */
	    var getAssetIndexData = function getAssetIndexData(assetIndex, activeSymbols) {
	        if (!assetIndex || !activeSymbols) return null;

	        marketColumns = {};

	        // index of items in asset_index response
	        var idx = {
	            symbol: 0,
	            displayName: 1,
	            cells: 2,
	            symInfo: 3,
	            values: 4,
	            cellProps: {
	                cellName: 0,
	                cellDisplayName: 1,
	                cellFrom: 2,
	                cellTo: 3
	            }
	        };

	        for (var i = 0; i < assetIndex.length; i++) {
	            var assetItem = assetIndex[i];
	            var symbolInfo = getSymbolInfo(assetItem[idx.symbol], activeSymbols)[0];
	            if (symbolInfo) {
	                var market = symbolInfo.market;

	                assetItem.push(symbolInfo);

	                // Generate market columns to use in all this market's submarket tables
	                if (!(market in marketColumns)) {
	                    marketColumns[market] = {
	                        header: [''],
	                        columns: ['']
	                    };
	                }

	                var assetCells = assetItem[idx.cells],
	                    values = {};
	                for (var j = 0; j < assetCells.length; j++) {
	                    var col = assetCells[j][idx.cellProps.cellName];

	                    values[col] = assetCells[j][idx.cellProps.cellFrom] + ' - ' + assetCells[j][idx.cellProps.cellTo];

	                    var marketCols = marketColumns[market];
	                    if (marketCols.columns.indexOf(col) === -1) {
	                        marketCols.header.push(assetCells[j][idx.cellProps.cellDisplayName]);
	                        marketCols.columns.push(col);
	                    }
	                }
	                assetItem.push(values);
	            }
	        }
	        return assetIndex;
	    };

	    return {
	        getAssetIndexData: getAssetIndexData,
	        getMarketColumns: function getMarketColumns() {
	            return marketColumns;
	        }
	    };
	}();

	module.exports = {
	    AssetIndex: AssetIndex
	};

/***/ },
/* 517 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var showLoadingImage = __webpack_require__(419).showLoadingImage;
	var Table = __webpack_require__(501).Table;
	var jqueryuiTabsToDropdown = __webpack_require__(420).jqueryuiTabsToDropdown;
	var Content = __webpack_require__(426).Content;
	var japanese_client = __webpack_require__(307).japanese_client;
	var MarketTimesData = __webpack_require__(518).MarketTimesData;
	var MarketTimes = __webpack_require__(519).MarketTimes;
	var moment = __webpack_require__(308);
	var State = __webpack_require__(304).State;
	var DatePicker = __webpack_require__(475).DatePicker;
	var toReadableFormat = __webpack_require__(441).toReadableFormat;
	var toISOFormat = __webpack_require__(441).toISOFormat;
	var dateValueChanged = __webpack_require__(420).dateValueChanged;
	var localize = __webpack_require__(423).localize;

	var MarketTimesUI = function () {
	    'use strict';

	    var $date = void 0,
	        $container = void 0,
	        columns = void 0,
	        activeSymbols = void 0,
	        tradingTimes = void 0,
	        isFramed = void 0;

	    var init = function init(config) {
	        $date = $('#trading-date');
	        $container = $('#trading-times');
	        columns = ['Asset', 'Opens', 'Closes', 'Settles', 'UpcomingEvents'];
	        if (!State.get('is_beta_trading')) activeSymbols = tradingTimes = undefined;

	        if ($container.contents().length) return;

	        Content.populate();
	        showLoadingImage($container);

	        isFramed = config && config.framed;
	        if (!tradingTimes) {
	            initSocket();
	            MarketTimesData.sendRequest('today', !(activeSymbols && activeSymbols.length));
	        }

	        var date = moment.utc();
	        $date.val(toReadableFormat(date)).attr('data-value', toISOFormat(date));
	        var datePickerInst = new DatePicker('#trading-date');
	        datePickerInst.show('today', 364);
	        $date.change(function () {
	            if (!dateValueChanged(this, 'date')) {
	                return false;
	            }
	            $container.empty();
	            showLoadingImage($container);
	            tradingTimes = null;
	            MarketTimesData.sendRequest($date.attr('data-value'), !activeSymbols);
	            return true;
	        });

	        $container.tabs();
	    };

	    var populateTable = function populateTable() {
	        if (!activeSymbols || !tradingTimes) return;

	        $('#errorMsg').addClass('hidden');

	        var isJapanTrading = japanese_client();

	        var markets = tradingTimes.markets;

	        var $ul = $('<ul/>', { class: isJapanTrading ? 'hidden' : '' });
	        var $contents = $('<div/>');

	        for (var m = 0; m < markets.length; m++) {
	            var tabID = 'market_' + (m + 1);

	            // tabs
	            if (!isJapanTrading) {
	                $ul.append($('<li/>').append($('<a/>', { href: '#' + tabID, text: markets[m].name, id: 'outline' })));
	            }

	            // contents
	            var $market = $('<div/>', { id: tabID });
	            $market.append(createMarketTables(markets[m], isJapanTrading));
	            $contents.append($market);
	        }

	        $container.empty().append($ul).append($contents.children());

	        $container.tabs('destroy').tabs();

	        if (isFramed) {
	            $container.find('ul').hide();
	            $('<div/>', { class: 'center-text' }).append(jqueryuiTabsToDropdown($container)).prependTo($container);
	        }
	    };

	    var createMarketTables = function createMarketTables(market, isJapanTrading) {
	        var $marketTables = $('<div/>');

	        // submarkets of this market
	        var submarkets = market.submarkets;
	        var shouldPopulate = void 0;
	        for (var s = 0; s < submarkets.length; s++) {
	            shouldPopulate = true;
	            // display only "Major Pairs" for Japan
	            if (isJapanTrading) {
	                var submarketInfo = MarketTimes.getSubmarketInfo(activeSymbols, submarkets[s].name);
	                if (submarketInfo.length === 0 || submarketInfo[0].submarket !== 'major_pairs') {
	                    shouldPopulate = false;
	                }
	            }

	            if (shouldPopulate) {
	                // submarket table
	                var $submarketTable = createEmptyTable(market.name + '-' + s);

	                // submarket name
	                $submarketTable.find('thead').prepend(createSubmarketHeader(submarkets[s].name)).find('th.opens, th.closes').addClass('nowrap');

	                // symbols of this submarket
	                var symbols = submarkets[s].symbols;
	                for (var sy = 0; sy < symbols.length; sy++) {
	                    if (Object.keys(MarketTimes.getSymbolInfo(symbols[sy].symbol, activeSymbols)).length !== 0) {
	                        $submarketTable.find('tbody').append(createSubmarketTableRow(market.name, submarkets[s].name, symbols[sy]));
	                    }
	                }

	                $marketTables.append($submarketTable);
	            }
	        }

	        return $marketTables;
	    };

	    var createSubmarketHeader = function createSubmarketHeader(submarketName) {
	        return $('<tr/>', { class: 'flex-tr' }).append($('<th/>', { class: 'flex-tr-child submarket-name', colspan: columns.length, text: submarketName }));
	    };

	    var createSubmarketTableRow = function createSubmarketTableRow(marketName, submarketName, symbol) {
	        var $tableRow = Table.createFlexTableRow([symbol.name, '', // Opens
	        '', // Closes
	        symbol.times.settlement, ''], columns, 'data');
	        $tableRow.children('.opens').html(symbol.times.open.join('<br />'));
	        $tableRow.children('.closes').html(symbol.times.close.join('<br />'));
	        $tableRow.children('.upcomingevents').html(createEventsText(symbol.events));

	        return $tableRow;
	    };

	    var createEventsText = function createEventsText(events) {
	        var result = '';
	        for (var i = 0; i < events.length; i++) {
	            result += (i > 0 ? '<br />' : '') + localize(events[i].descrip) + ': ' + localize(events[i].dates);
	        }
	        return result.length > 0 ? result : '--';
	    };

	    var createEmptyTable = function createEmptyTable(tableID) {
	        var header = [Content.localize().textAsset, Content.localize().textOpens, Content.localize().textCloses, Content.localize().textSettles, Content.localize().textUpcomingEvents];

	        var metadata = {
	            id: tableID,
	            cols: columns
	        };

	        return Table.createFlexTable([], metadata, header);
	    };

	    var initSocket = function initSocket() {
	        if (State.get('is_beta_trading')) return;
	        BinarySocket.init({
	            onmessage: function onmessage(msg) {
	                var response = JSON.parse(msg.data);
	                if (response) {
	                    responseHandler(response);
	                }
	            }
	        });
	    };

	    var responseHandler = function responseHandler(response) {
	        var msg_type = response.msg_type;
	        if (msg_type === 'trading_times') {
	            MarketTimesUI.setTradingTimes(response);
	        } else if (msg_type === 'active_symbols') {
	            MarketTimesUI.setActiveSymbols(response);
	        }
	    };

	    return {
	        init: init,
	        setActiveSymbols: function setActiveSymbols(response) {
	            activeSymbols = response.active_symbols.slice(0); // clone
	            if (tradingTimes) populateTable();
	        },
	        setTradingTimes: function setTradingTimes(response) {
	            tradingTimes = response.trading_times;
	            if (activeSymbols) populateTable();
	        }
	    };
	}();

	module.exports = {
	    MarketTimesUI: MarketTimesUI
	};

/***/ },
/* 518 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var japanese_client = __webpack_require__(307).japanese_client;

	var MarketTimesData = function () {
	    'use strict';

	    var sendRequest = function sendRequest(date, shouldRequestActiveSymbols) {
	        var req = { active_symbols: 'brief' };
	        if (japanese_client()) {
	            req.landing_company = 'japan';
	        }
	        if (shouldRequestActiveSymbols) {
	            BinarySocket.send(req);
	        }
	        BinarySocket.send({ trading_times: date || 'today' });
	    };

	    return {
	        sendRequest: sendRequest
	    };
	}();

	module.exports = {
	    MarketTimesData: MarketTimesData
	};

/***/ },
/* 519 */
/***/ function(module, exports) {

	'use strict';

	var MarketTimes = function () {
	    'use strict';

	    var getSubmarketInfo = function getSubmarketInfo(activeSymbols, submarketDisplayName) {
	        return activeSymbols.filter(function (sy) {
	            return sy.submarket_display_name === submarketDisplayName;
	        });
	    };

	    var getSymbolInfo = function getSymbolInfo(qSymbol, activeSymbols) {
	        return activeSymbols.filter(function (sy) {
	            return sy.symbol === qSymbol;
	        });
	    };

	    return {
	        getSubmarketInfo: getSubmarketInfo,
	        getSymbolInfo: getSymbolInfo
	    };
	}();

	module.exports = {
	    MarketTimes: MarketTimes
	};

/***/ },
/* 520 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var Symbols = __webpack_require__(459).Symbols;
	var template = __webpack_require__(419).template;
	var localize = __webpack_require__(423).localize;
	var Highcharts = __webpack_require__(460);
	var elementInnerHtml = __webpack_require__(420).elementInnerHtml;

	__webpack_require__(452)(Highcharts);

	var DigitInfoWS_Beta = function DigitInfoWS_Beta() {
	    this.chart_config = {
	        chart: {
	            renderTo: 'last_digit_histo',
	            defaultSeriesType: 'column',
	            backgroundColor: '#eee',
	            borderWidth: 1,
	            borderColor: '#ccc',
	            plotBackgroundColor: '#fff',
	            plotBorderWidth: 1,
	            plotBorderColor: '#ccc',
	            height: 250 },
	        title: { text: '' },
	        credits: { enabled: false },
	        exporting: { enabled: false },
	        legend: {
	            enabled: false
	        },
	        tooltip: {
	            borderWidth: 1,
	            formatter: function formatter() {
	                var that = this,
	                    total = $("select[name='tick_count']").val(),
	                    percentage = that.y / total * 100;
	                return '<b>Digit:</b> ' + that.x + '<br/>' + '<b>Percentage:</b> ' + percentage.toFixed(1) + ' %';
	            }
	        },
	        plotOptions: {
	            column: {
	                shadow: false,
	                borderWidth: 0.5,
	                borderColor: '#666',
	                pointPadding: 0,
	                groupPadding: 0.0,
	                color: '#e1f0fb'
	            },
	            series: {
	                dataLabels: {
	                    enabled: true,
	                    allowOverlap: true,
	                    style: {
	                        textShadow: false,
	                        fontSize: '10px'
	                    },
	                    formatter: function formatter() {
	                        var total = $("select[name='tick_count']").val();
	                        var percentage = this.point.y / total * 100;
	                        return percentage.toFixed(2) + ' %';
	                    }
	                }
	            }
	        },
	        xAxis: {
	            categories: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],
	            lineWidth: 0,
	            lineColor: '#999',
	            tickLength: 10,
	            tickColor: '#ccc'
	        },
	        yAxis: {
	            title: { text: '' },
	            maxPadding: 0,
	            gridLineColor: '#e9e9e9',
	            tickWidth: 1,
	            tickLength: 3,
	            tickColor: '#ccc',
	            lineColor: '#ccc',
	            endOnTick: true,
	            opposite: false,

	            labels: {
	                align: 'left',
	                x: 0,
	                enabled: false,
	                formatter: function formatter() {
	                    var total = $("select[name='tick_count']").val(),
	                        percentage = parseInt(this.value / total * 100);
	                    return percentage + ' %';
	                }
	            }
	        }
	    };

	    this.spots = [];
	    this.stream_id = null;
	    // To avoid too many greens and reds
	    this.prev_min_index = -1;
	    this.prev_max_index = -1;
	};

	DigitInfoWS_Beta.prototype = {
	    add_content: function add_content(underlying) {
	        var domain = document.domain.split('.').slice(-2).join('.'),
	            symbols = Symbols.getAllSymbols();
	        var underlyings = [];
	        Object.keys(symbols).forEach(function (key) {
	            if (/^(R_|RD)/.test(key)) {
	                underlyings.push(key);
	            }
	        });
	        underlyings = underlyings.sort();
	        var elem = '<select class="smallfont" name="underlying">';
	        for (var i = 0; i < underlyings.length; i++) {
	            elem = elem + '<option value="' + underlyings[i] + '">' + localize(symbols[underlyings[i]]) + '</option>';
	        }
	        elem += '</select>';
	        var contentId = document.getElementById('tab_last_digit-content'),
	            content = '<div class="gr-parent">' + '<div id="last_digit_histo_form" class="gr-12 gr-12-m gr-centered">' + '<form class="smallfont gr-row" action="#" method="post">' + '<div class="gr-6 gr-12-m center-text"><div class="gr-padding-10">' + localize('Select market') + ':</div>' + elem + ' </div>' + '<div class="gr-6 gr-12-m center-text"><div class="gr-padding-10">' + localize('Number of ticks') + ':</div><select class="smallfont" name="tick_count"><option value="25">25</option><option value="50">50</option><option selected="selected" value="100">100</option><option value="500">500</option><option value="1000">1000</option></select></div>' + '</form>' + '</div>' + '<div id="last_digit_histo" class="gr-12 gr-12-m gr-centered"></div>' + '<div id="last_digit_title" class="gr-hide">' + (domain.charAt(0).toUpperCase() + domain.slice(1)) + ' - ' + localize('Last digit stats for the latest [_1] ticks on [_2]') + '</div>' + '</div>';
	        elementInnerHtml(contentId, content);
	        $('[name=underlying]').val(underlying);
	    },
	    on_latest: function on_latest() {
	        var that = this;
	        var tab = $('#tab_last_digit-content');
	        var form = tab.find('form:first');
	        form.on('submit', function (event) {
	            event.preventDefault();
	            return false;
	        }).addClass('unbind_later');

	        var get_latest = function get_latest() {
	            var symbol = $('[name=underlying] option:selected').val();
	            var request = {
	                ticks_history: symbol,
	                end: 'latest',
	                count: $('[name=tick_count]', form).val(),
	                req_id: 2 };
	            if (that.chart.series[0].name !== symbol) {
	                if ($('#underlying').find('option:selected').val() !== $('[name=underlying]', form).val()) {
	                    request.subscribe = 1;
	                    request.style = 'ticks';
	                }
	                if (that.stream_id !== null) {
	                    BinarySocket.send({ forget: that.stream_id });
	                    that.stream_id = null;
	                }
	            }
	            BinarySocket.send(request);
	        };
	        $('[name=underlying]', form).on('change', get_latest).addClass('unbind_later');
	        $('[name=tick_count]', form).on('change', get_latest).addClass('unbind_later');
	    },
	    show_chart: function show_chart(underlying, spots) {
	        if (typeof spots === 'undefined' || spots.length <= 0) {
	            console.log('Unexpected error occured in the charts.');
	            return;
	        }
	        var dec = spots[0].split('.')[1].length;
	        for (var i = 0; i < spots.length; i++) {
	            var val = parseFloat(spots[i]).toFixed(dec);
	            spots[i] = val.substr(val.length - 1);
	        }

	        var get_title = function get_title() {
	            return {
	                text: template($('#last_digit_title').html(), [spots.length, $('[name=underlying] option:selected').text()])
	            };
	        };

	        this.spots = spots;
	        if (this.chart && $('#last_digit_histo').html()) {
	            this.chart.xAxis[0].update({ title: get_title() }, true);
	            this.chart.series[0].name = underlying;
	        } else {
	            this.add_content(underlying); // this creates #last_digit_title
	            this.chart_config.xAxis.title = get_title();
	            this.chart = new Highcharts.Chart(this.chart_config);
	            this.chart.addSeries({ name: underlying, data: [] });
	            this.on_latest();
	            this.stream_id = null;
	        }
	        this.update();
	    },
	    update: function update(symbol, latest_spot) {
	        if (typeof this.chart === 'undefined') {
	            return null;
	        }

	        var series = this.chart.series[0]; // Where we put the final data.
	        if (series.name !== symbol) {
	            latest_spot = undefined; // This simplifies the logic a bit later.
	        }

	        if (typeof latest_spot !== 'undefined') {
	            // This is a bit later. :D
	            this.spots.unshift(latest_spot.slice(-1)); // Only last digit matters
	            this.spots.pop();
	        }

	        // Always recompute and draw, even if theres no new data.
	        // This is especially useful on first reuqest, but maybe in other ways.
	        var filtered_spots = [],
	            filterFunc = function filterFunc(el) {
	            return +el === digit;
	        },
	            min_max_counter = [];
	        var digit = 10;
	        while (digit--) {
	            var val = this.spots.filter(filterFunc).length;
	            filtered_spots[digit] = val;
	            if (typeof min_max_counter[val] === 'undefined') {
	                min_max_counter[val] = 0;
	            }
	            min_max_counter[val]++;
	        }
	        var min = Math.min.apply(null, filtered_spots);
	        var max = Math.max.apply(null, filtered_spots);
	        var min_index = filtered_spots.indexOf(min);
	        var max_index = filtered_spots.indexOf(max);
	        // changing color
	        if (min_max_counter[min] >= 1) {
	            filtered_spots[min_index] = { y: min, color: '#CC0000' };
	            if (this.prev_min_index === -1) {
	                this.prev_min_index = min_index;
	            } else if (this.prev_min_index !== min_index) {
	                if (_typeof(filtered_spots[this.prev_min_index]) === 'object') {
	                    filtered_spots[this.prev_min_index] = { y: filtered_spots[this.prev_min_index].y, color: '#e1f0fb' };
	                } else {
	                    filtered_spots[this.prev_min_index] = { y: filtered_spots[this.prev_min_index], color: '#e1f0fb' };
	                }
	                this.prev_min_index = min_index;
	            }
	        }

	        if (min_max_counter[max] >= 1) {
	            filtered_spots[max_index] = { y: max, color: '#2E8836' };
	            if (this.prev_max_index === -1) {
	                this.prev_max_index = max_index;
	            } else if (this.prev_max_index !== max_index) {
	                if (_typeof(filtered_spots[this.prev_max_index]) === 'object') {
	                    filtered_spots[this.prev_max_index] = { y: filtered_spots[this.prev_max_index].y, color: '#e1f0fb' };
	                } else {
	                    filtered_spots[this.prev_max_index] = { y: filtered_spots[this.prev_max_index], color: '#e1f0fb' };
	                }
	                this.prev_max_index = max_index;
	            }
	        }
	        return series.setData(filtered_spots);
	    },
	    update_chart: function update_chart(tick) {
	        if (tick.req_id === 2) {
	            if (this.chart.series[0].name === tick.tick.symbol) {
	                this.stream_id = tick.tick.id || null;
	                this.update(tick.tick.symbol, tick.tick.quote);
	            } else {
	                BinarySocket.send({ forget: tick.tick.id + '' });
	            }
	        } else if (!this.stream_id) {
	            this.update(tick.tick.symbol, tick.tick.quote);
	        }
	    }
	};

	module.exports = {
	    DigitInfoWS_Beta: DigitInfoWS_Beta
	};

/***/ },
/* 521 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var TradingAnalysis_Beta = __webpack_require__(513).TradingAnalysis_Beta;
	var Barriers_Beta = __webpack_require__(522).Barriers_Beta;
	var Contract_Beta = __webpack_require__(480).Contract_Beta;
	var Durations_Beta = __webpack_require__(523).Durations_Beta;
	var Price_Beta = __webpack_require__(524).Price_Beta;
	var processMarket_Beta = __webpack_require__(525).processMarket_Beta;
	var processContractForm_Beta = __webpack_require__(525).processContractForm_Beta;
	var processForgetTicks_Beta = __webpack_require__(525).processForgetTicks_Beta;
	var onExpiryTypeChange = __webpack_require__(525).onExpiryTypeChange;
	var onDurationUnitChange = __webpack_require__(525).onDurationUnitChange;
	var Defaults = __webpack_require__(457).Defaults;
	var Tick = __webpack_require__(454).Tick;
	var onlyNumericOnKeypress = __webpack_require__(481).onlyNumericOnKeypress;
	var moment = __webpack_require__(308);
	var setFormPlaceholderContent_Beta = __webpack_require__(479).setFormPlaceholderContent_Beta;
	var showPriceOverlay = __webpack_require__(456).showPriceOverlay;
	var showFormOverlay = __webpack_require__(456).showFormOverlay;
	var toggleActiveCatMenuElement = __webpack_require__(456).toggleActiveCatMenuElement;
	var debounce = __webpack_require__(456).debounce;
	var submitForm = __webpack_require__(456).submitForm;
	var updateWarmChart = __webpack_require__(456).updateWarmChart;
	var reloadPage = __webpack_require__(456).reloadPage;
	var chartFrameSource = __webpack_require__(456).chartFrameSource;
	var displayTooltip_Beta = __webpack_require__(456).displayTooltip_Beta;
	var timeIsValid = __webpack_require__(456).timeIsValid;
	var getStartDateNode = __webpack_require__(455).getStartDateNode;
	var isVisible = __webpack_require__(420).isVisible;
	var dateValueChanged = __webpack_require__(420).dateValueChanged;
	var TimePicker = __webpack_require__(482).TimePicker;
	var load_with_pjax = __webpack_require__(483).load_with_pjax;
	var Client = __webpack_require__(305).Client;
	var elementTextContent = __webpack_require__(420).elementTextContent;

	/*
	 * TradingEvents object contains all the event handler const required = function for
	 * websocket trading page
	 *
	 * We need it as object so that we can call TradingEvent.init() only on trading
	 * page for pjax to work else it will fire on all pages
	 *
	 */
	var TradingEvents_Beta = function () {
	    'use strict';

	    var initiate = function initiate() {
	        /*
	         * attach event to market list, so when client change market we need to update undelryings
	         * and request for new Contract details to populate the form and request price accordingly
	         */
	        var marketNavElement = document.getElementById('contract_markets');
	        var onMarketChange = function onMarketChange(market) {
	            showPriceOverlay();
	            Defaults.set('market', market);

	            // as different markets have different forms so remove from sessionStorage
	            // it will default to proper one
	            Defaults.remove('formname');
	            Defaults.remove('underlying');
	            processMarket_Beta(1);
	            chartFrameSource();
	        };

	        if (marketNavElement) {
	            marketNavElement.addEventListener('change', function (e) {
	                var clickedMarket = e.target;
	                onMarketChange(clickedMarket.value);
	            });
	        }

	        /*
	         * attach event to form list, so when client click on different form we need to update form
	         * and request for new Contract details to populate the form and request price accordingly
	         */
	        var contractFormEventChange = function contractFormEventChange() {
	            processContractForm_Beta();
	            TradingAnalysis_Beta.request();
	        };

	        var formNavElement = document.getElementById('contract_form_name_nav');
	        if (formNavElement) {
	            formNavElement.addEventListener('click', function (e) {
	                if (e.target && e.target.getAttribute('menuitem')) {
	                    var clickedForm = e.target;
	                    var isFormActive = clickedForm.classList.contains('active') || clickedForm.parentElement.classList.contains('active');
	                    Defaults.set('formname', clickedForm.getAttribute('menuitem'));

	                    setFormPlaceholderContent_Beta();
	                    // if form is already active then no need to send same request again
	                    toggleActiveCatMenuElement(formNavElement, e.target.getAttribute('menuitem'));

	                    if (!isFormActive) {
	                        contractFormEventChange();
	                    }
	                    var contractFormCheckbox = document.getElementById('contract_form_show_menu');
	                    if (contractFormCheckbox) {
	                        contractFormCheckbox.checked = false;
	                    }
	                }
	            });
	        }

	        /*
	         * attach event to underlying change, event need to request new contract details and price
	         */
	        var underlyingElement = document.getElementById('underlying');
	        if (underlyingElement) {
	            underlyingElement.addEventListener('change', function (e) {
	                if (e.target) {
	                    chartFrameSource();
	                    showFormOverlay();
	                    showPriceOverlay();
	                    if (e.target.selectedIndex < 0) {
	                        e.target.selectedIndex = 0;
	                    }
	                    var underlying = e.target.value;
	                    Defaults.remove('barrier', 'barrier_high', 'barrier_low');
	                    Defaults.set('underlying', underlying);
	                    TradingAnalysis_Beta.request();

	                    Tick.clean();

	                    updateWarmChart();

	                    Contract_Beta.getContracts(underlying);

	                    // forget the old tick id i.e. close the old tick stream
	                    processForgetTicks_Beta();
	                    // get ticks for current underlying
	                    Tick.request(underlying);
	                    displayTooltip_Beta(Defaults.get('market'), underlying);
	                }
	            });
	        }

	        /*
	         * bind event to change in duration amount, request new price
	         */
	        var triggerOnDurationChange = function triggerOnDurationChange(e) {
	            if (e.target.value % 1 !== 0) {
	                e.target.value = Math.floor(e.target.value);
	            }
	            Defaults.set('duration_amount', e.target.value);
	            Durations_Beta.select_amount(e.target.value);
	            Price_Beta.processPriceRequest_Beta();
	            submitForm(document.getElementById('websocket_form'));
	        };
	        var durationAmountElement = document.getElementById('duration_amount');
	        var inputEventTriggered = false; // For triggering one of the two events.
	        if (durationAmountElement) {
	            durationAmountElement.addEventListener('keypress', onlyNumericOnKeypress);
	            // jquery needed for datepicker
	            $('#duration_amount').on('input', debounce(function (e) {
	                triggerOnDurationChange(e);
	                Durations_Beta.validateMinDurationAmount();
	                inputEventTriggered = true;
	            })).on('change', debounce(function (e) {
	                // using Defaults, to update the value by datepicker if it was emptied by keyboard (delete)
	                Durations_Beta.validateMinDurationAmount();
	                if (inputEventTriggered === false || !Defaults.get('duration_amount')) {
	                    triggerOnDurationChange(e);
	                } else {
	                    inputEventTriggered = false;
	                }
	            }));
	        }

	        /*
	         * attach event to expiry time change, event need to populate duration
	         * and request new price
	         */
	        var expiryTypeElement = document.getElementById('expiry_type');
	        if (expiryTypeElement) {
	            expiryTypeElement.addEventListener('change', function (e) {
	                Defaults.set('expiry_type', e.target.value);
	                onExpiryTypeChange(e.target.value);
	                if (expiryTypeElement.value !== 'endtime') Price_Beta.processPriceRequest_Beta();
	            });
	        }

	        /*
	         * bind event to change in duration units, populate duration and request price
	         */
	        var durationUnitElement = document.getElementById('duration_units');
	        if (durationUnitElement) {
	            durationUnitElement.addEventListener('change', function (e) {
	                Defaults.remove('barrier', 'barrier_high', 'barrier_low');
	                onDurationUnitChange(e.target.value);
	                Price_Beta.processPriceRequest_Beta();
	            });
	        }

	        /*
	         * bind event to change in endtime date and time
	         */
	        var endDateElement = document.getElementById('expiry_date');
	        if (endDateElement) {
	            // need to use jquery as datepicker is used, if we switch to some other
	            // datepicker we can move back to javascript
	            $('#expiry_date').on('change input', function () {
	                if (!dateValueChanged(this, 'date')) {
	                    return false;
	                }
	                // if start time is less than end time
	                if (timeIsValid($('#expiry_date'))) {
	                    Durations_Beta.selectEndDate(moment(this.getAttribute('data-value')));
	                }
	                return true;
	            });
	        }

	        var endTimeElement = document.getElementById('expiry_time');
	        if (endTimeElement) {
	            /*
	             * attach datepicker and timepicker to end time durations
	             * have to use jquery
	             */
	            attachTimePicker();
	            $('#expiry_time').on('focus, click', attachTimePicker).on('keypress', function (ev) {
	                onlyNumericOnKeypress(ev, [58]);
	            }).on('change input blur', function () {
	                if (!dateValueChanged(this, 'time')) {
	                    return false;
	                }
	                // if start time is less than end time
	                if (timeIsValid($('#expiry_time'))) {
	                    Durations_Beta.setTime(endTimeElement.value);
	                    Price_Beta.processPriceRequest_Beta();
	                }
	                return true;
	            });
	        }

	        /*
	         * attach event to change in amount, request new price only
	         */
	        var amountElement = document.getElementById('amount');
	        if (amountElement) {
	            amountElement.addEventListener('keypress', onlyNumericOnKeypress);

	            amountElement.addEventListener('input', debounce(function (e) {
	                e.target.value = e.target.value.replace(/[^0-9.]/g, '');
	                if (isStandardFloat(e.target.value)) {
	                    e.target.value = parseFloat(e.target.value).toFixed(2);
	                }
	                Defaults.set('amount', e.target.value);
	                Price_Beta.processPriceRequest_Beta();
	                submitForm(document.getElementById('websocket_form'));
	            }));
	        }

	        /*
	         * attach event to start time, display duration based on
	         * whether start time is forward starting or not and request
	         * new price
	         */
	        var dateStartElement = getStartDateNode();
	        if (dateStartElement) {
	            dateStartElement.addEventListener('change', function (e) {
	                Defaults.set('date_start', e.target.value);
	                var r = Durations_Beta.onStartDateChange(e.target.value);
	                if (r >= 0) {
	                    Price_Beta.processPriceRequest_Beta();
	                }
	            });
	        }

	        /*
	         * attach event to change in amount type that is whether its
	         * payout or stake and request new price
	         */
	        var amountTypeElement = document.getElementById('amount_type');
	        if (amountTypeElement) {
	            amountTypeElement.addEventListener('change', function (e) {
	                Defaults.set('amount_type', e.target.value);
	                Price_Beta.processPriceRequest_Beta();
	            });
	        }

	        /*
	         * attach event to change in submarkets. We need to disable
	         * underlyings that are not in selected seubmarkets
	         */
	        var submarketElement = document.getElementById('submarket');
	        if (submarketElement) {
	            submarketElement.addEventListener('change', function (e) {
	                if (e.target) {
	                    var elem = document.getElementById('underlying');
	                    var underlyings = elem.children;

	                    for (var i = 0, len = underlyings.length; i < len; i++) {
	                        underlyings[i].disabled = e.target.value !== 'all' && e.target.value !== underlyings[i].className;
	                    }

	                    // as submarket change has modified the underlying list so we need to manually
	                    // fire change event for underlying
	                    document.querySelectorAll('#underlying option:enabled')[0].selected = 'selected';
	                    var event = new Event('change');
	                    elem.dispatchEvent(event);
	                }
	            });
	        }

	        /*
	         * attach an event to change in currency
	         */
	        var currencyElement = document.getElementById('currency');
	        if (currencyElement) {
	            currencyElement.addEventListener('change', function (e) {
	                Defaults.set('currency', e.target.value);
	                var stopTypeDollarLabel = document.getElementById('stop_type_dollar_label');
	                if (stopTypeDollarLabel && isVisible(stopTypeDollarLabel)) {
	                    elementTextContent(stopTypeDollarLabel, e.target.value);
	                }
	                Price_Beta.processPriceRequest_Beta();
	            });
	        }

	        /*
	         * attach event to purchase buttons to buy the current contract
	         */
	        $('.purchase_button').on('click dblclick', function () {
	            var _this = this;

	            if (!Client.status_detected('unwelcome') && !isVisible(document.getElementById('confirmation_message_container'))) {
	                (function () {
	                    var id = _this.getAttribute('data-purchase-id'),
	                        askPrice = _this.getAttribute('data-ask-price');

	                    var params = { buy: id, price: askPrice, passthrough: {} };
	                    Object.keys(_this.attributes).forEach(function (attr) {
	                        if (attr && this.attributes[attr] && this.attributes[attr].name && !/data\-balloon/.test(this.attributes[attr].name)) {
	                            // do not send tooltip data
	                            var m = this.attributes[attr].name.match(/data\-(.+)/);

	                            if (m && m[1] && m[1] !== 'purchase-id' && m[1] !== 'passthrough') {
	                                params.passthrough[m[1]] = this.attributes[attr].value;
	                            }
	                        }
	                    }, _this);
	                    if (id && askPrice) {
	                        BinarySocket.send(params);
	                        Price_Beta.incrFormId();
	                        Price_Beta.processForgetProposals_Beta();
	                    }
	                })();
	            }
	        });

	        /*
	         * attach event to close icon for purchase container
	         */
	        $('#close_confirmation_container, #contract_purchase_new_trade').on('click', function (e) {
	            if (e.target) {
	                e.preventDefault();
	                document.getElementById('contract_confirmation_container').style.display = 'none';
	                document.getElementById('contracts_list').style.display = 'flex';
	                Price_Beta.processPriceRequest_Beta();
	            }
	        });

	        /*
	         * attach an event to change in barrier
	         */
	        var barrierElement = document.getElementById('barrier');
	        if (barrierElement) {
	            $('#barrier').on('keypress', function (ev) {
	                onlyNumericOnKeypress(ev, [43, 45, 46]);
	            }).on('input', debounce(function (e) {
	                Barriers_Beta.validateBarrier();
	                Defaults.set('barrier', e.target.value);
	                Price_Beta.processPriceRequest_Beta();
	                submitForm(document.getElementById('websocket_form'));
	            }, 1000));
	        }

	        /*
	         * attach an event to change in low barrier
	         */
	        var lowBarrierElement = document.getElementById('barrier_low');
	        if (lowBarrierElement) {
	            lowBarrierElement.addEventListener('input', debounce(function (e) {
	                Defaults.set('barrier_low', e.target.value);
	                Price_Beta.processPriceRequest_Beta();
	                submitForm(document.getElementById('websocket_form'));
	            }));
	        }

	        /*
	         * attach an event to change in high barrier
	         */
	        var highBarrierElement = document.getElementById('barrier_high');
	        if (highBarrierElement) {
	            highBarrierElement.addEventListener('input', debounce(function (e) {
	                Defaults.set('barrier_high', e.target.value);
	                Price_Beta.processPriceRequest_Beta();
	                submitForm(document.getElementById('websocket_form'));
	            }));
	        }

	        /*
	         * attach an event to change in digit prediction input
	         */
	        var predictionElement = document.getElementById('prediction');
	        if (predictionElement) {
	            predictionElement.addEventListener('change', debounce(function (e) {
	                Defaults.set('prediction', e.target.value);
	                Price_Beta.processPriceRequest_Beta();
	                submitForm(document.getElementById('websocket_form'));
	            }));
	        }

	        /*
	         * attach an event to change in amount per point for spreads
	         */
	        var amountPerPointElement = document.getElementById('amount_per_point');
	        if (amountPerPointElement) {
	            amountPerPointElement.addEventListener('input', debounce(function (e) {
	                if (isStandardFloat(e.target.value)) {
	                    e.target.value = parseFloat(e.target.value).toFixed(2);
	                }
	                Defaults.set('amount_per_point', e.target.value);
	                Price_Beta.processPriceRequest_Beta();
	                submitForm(document.getElementById('websocket_form'));
	            }));
	        }

	        /*
	         * attach an event to change in stop type for spreads
	         */
	        var stopTypeEvent = function stopTypeEvent(e) {
	            Defaults.set('stop_type', e.target.value);
	            Price_Beta.processPriceRequest_Beta();
	        };

	        var stopTypeElement = document.querySelectorAll('input[name="stop_type"]');
	        if (stopTypeElement) {
	            for (var i = 0, len = stopTypeElement.length; i < len; i++) {
	                stopTypeElement[i].addEventListener('click', stopTypeEvent);
	            }
	        }

	        /*
	         * attach an event to change in stop loss input value
	         */
	        var stopLossElement = document.getElementById('stop_loss');
	        if (stopLossElement) {
	            stopLossElement.addEventListener('input', debounce(function (e) {
	                if (isStandardFloat(e.target.value)) {
	                    e.target.value = parseFloat(e.target.value).toFixed(2);
	                }
	                Defaults.set('stop_loss', e.target.value);
	                Price_Beta.processPriceRequest_Beta();
	                submitForm(document.getElementById('websocket_form'));
	            }));
	        }

	        /*
	         * attach an event to change in stop profit input value
	         */
	        var stopProfitElement = document.getElementById('stop_profit');
	        if (stopProfitElement) {
	            stopProfitElement.addEventListener('input', debounce(function (e) {
	                if (isStandardFloat(e.target.value)) {
	                    e.target.value = parseFloat(e.target.value).toFixed(2);
	                }
	                Defaults.set('stop_profit', e.target.value);
	                Price_Beta.processPriceRequest_Beta();
	                submitForm(document.getElementById('websocket_form'));
	            }));
	        }

	        // For verifying there are 2 digits after decimal
	        var isStandardFloat = function isStandardFloat(value) {
	            return !isNaN(value) && value % 1 !== 0 && (+parseFloat(value)).toFixed(10).replace(/^-?\d*\.?|0+$/g, '').length > 2;
	        };

	        var init_logo = document.getElementById('trading_init_progress');
	        if (init_logo) {
	            init_logo.addEventListener('click', debounce(function () {
	                reloadPage();
	            }));
	        }

	        var tip = document.getElementById('symbol_tip');
	        if (init_logo) {
	            tip.addEventListener('click', debounce(function (e) {
	                var url = e.target.getAttribute('target');
	                load_with_pjax(url);
	            }));
	        }
	    };

	    var attachTimePicker = function attachTimePicker() {
	        var timePickerInst = new TimePicker('#expiry_time');
	        var date_start = document.getElementById('date_start').value;
	        var now = !date_start || date_start === 'now';
	        var current_moment = now ? window.time ? window.time : moment.utc() : parseInt(date_start) * 1000;
	        timePickerInst.hide();
	        timePickerInst.show(current_moment);
	    };

	    return {
	        init: initiate
	    };
	}();

	module.exports = {
	    TradingEvents_Beta: TradingEvents_Beta
	};

/***/ },
/* 522 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Contract_Beta = __webpack_require__(480).Contract_Beta;
	var Defaults = __webpack_require__(457).Defaults;
	var Tick = __webpack_require__(454).Tick;
	var moment = __webpack_require__(308);
	var isVisible = __webpack_require__(420).isVisible;
	var countDecimalPlaces = __webpack_require__(455).countDecimalPlaces;
	var elementTextContent = __webpack_require__(420).elementTextContent;

	/*
	 * Handles barrier processing and display
	 *
	 * It process `Contract.barriers` and display them if its applicable
	 * for current `Contract.form()
	 */

	var Barriers_Beta = function () {
	    'use strict';

	    var _isBarrierUpdated = false;

	    var display = function display() {
	        var barriers = Contract_Beta.barriers()[Defaults.get('underlying')],
	            formName = Contract_Beta.form();

	        if (barriers && formName && Defaults.get('formname') !== 'risefall') {
	            var barrier = barriers[formName];
	            if (barrier) {
	                var unit = document.getElementById('duration_units'),
	                    end_time = document.getElementById('expiry_date'),
	                    currentTick = Tick.quote(),
	                    indicativeBarrierTooltip = document.getElementById('indicative_barrier_tooltip'),
	                    indicativeHighBarrierTooltip = document.getElementById('indicative_high_barrier_tooltip'),
	                    indicativeLowBarrierTooltip = document.getElementById('indicative_low_barrier_tooltip'),
	                    decimalPlaces = countDecimalPlaces(currentTick);

	                if (barrier.count === 1) {
	                    document.getElementById('high_barrier_row').style.display = 'none';
	                    document.getElementById('low_barrier_row').style.display = 'none';
	                    document.getElementById('barrier_row').setAttribute('style', '');

	                    var defaults_barrier = Defaults.get('barrier'),
	                        elm = document.getElementById('barrier'),
	                        tooltip = document.getElementById('barrier_tooltip'),
	                        span = document.getElementById('barrier_span');
	                    var barrier_def = defaults_barrier && !isNaN(defaults_barrier) ? defaults_barrier : barrier.barrier,
	                        value = void 0;
	                    if (unit && isVisible(unit) && unit.value === 'd' || end_time && isVisible(end_time) && moment(end_time.getAttribute('data-value')).isAfter(moment(), 'day') || !String(barrier.barrier).match(/^[+-]/)) {
	                        if (currentTick && !isNaN(currentTick) && String(barrier_def).match(/^[+-]/)) {
	                            value = (parseFloat(currentTick) + parseFloat(barrier_def)).toFixed(decimalPlaces);
	                        } else {
	                            value = parseFloat(barrier_def);
	                        }
	                        tooltip.style.display = 'none';
	                        span.style.display = 'inherit';
	                        // no need to display indicative barrier in case of absolute barrier
	                        elementTextContent(indicativeBarrierTooltip, '');
	                    } else {
	                        if (!String(barrier_def).match(/^[+-]/)) barrier_def = barrier.barrier; // override Defaults value, because it's changing from absolute to relative barrier
	                        value = barrier_def;
	                        span.style.display = 'none';
	                        tooltip.style.display = 'inherit';
	                        if (currentTick && !isNaN(currentTick)) {
	                            elementTextContent(indicativeBarrierTooltip, (parseFloat(currentTick) + parseFloat(barrier_def)).toFixed(decimalPlaces));
	                        } else {
	                            elementTextContent(indicativeBarrierTooltip, '');
	                        }
	                    }
	                    elm.value = elm.textContent = value;
	                    Defaults.set('barrier', elm.value);
	                    Defaults.remove('barrier_high', 'barrier_low');
	                    Barriers_Beta.validateBarrier();
	                    return;
	                } else if (barrier.count === 2) {
	                    document.getElementById('barrier_row').style.display = 'none';
	                    document.getElementById('high_barrier_row').setAttribute('style', '');
	                    document.getElementById('low_barrier_row').setAttribute('style', '');

	                    var high_elm = document.getElementById('barrier_high'),
	                        low_elm = document.getElementById('barrier_low'),
	                        high_tooltip = document.getElementById('barrier_high_tooltip'),
	                        high_span = document.getElementById('barrier_high_span'),
	                        low_tooltip = document.getElementById('barrier_low_tooltip'),
	                        low_span = document.getElementById('barrier_low_span');

	                    var defaults_barrier_high = Defaults.get('barrier_high'),
	                        defaults_barrier_low = Defaults.get('barrier_low');
	                    var barrier_high = defaults_barrier_high && !isNaN(defaults_barrier_high) ? defaults_barrier_high : barrier.barrier,
	                        barrier_low = defaults_barrier_low && !isNaN(defaults_barrier_low) ? defaults_barrier_low : barrier.barrier1,
	                        value_high = void 0,
	                        value_low = void 0;
	                    if (unit && isVisible(unit) && unit.value === 'd' || end_time && isVisible(end_time) && moment(end_time.getAttribute('data-value')).isAfter(moment(), 'day') || !String(barrier.barrier).match(/^[+-]/)) {
	                        if (currentTick && !isNaN(currentTick) && String(barrier_high).match(/^[+-]/)) {
	                            value_high = (parseFloat(currentTick) + parseFloat(barrier_high)).toFixed(decimalPlaces);
	                            value_low = (parseFloat(currentTick) + parseFloat(barrier_low)).toFixed(decimalPlaces);
	                        } else {
	                            value_high = parseFloat(barrier_high);
	                            value_low = parseFloat(barrier_low);
	                        }

	                        high_tooltip.style.display = 'none';
	                        high_span.style.display = 'inherit';
	                        low_tooltip.style.display = 'none';
	                        low_span.style.display = 'inherit';

	                        elementTextContent(indicativeHighBarrierTooltip, '');
	                        elementTextContent(indicativeLowBarrierTooltip, '');
	                    } else {
	                        // override Defaults value, if it's changing from absolute to relative barrier
	                        if (!String(barrier_high).match(/^[+-]/) || !String(barrier_low).match(/^[+-]/)) {
	                            barrier_high = barrier.barrier;
	                            barrier_low = barrier.barrier1;
	                        }
	                        value_high = barrier_high;
	                        value_low = barrier_low;

	                        high_span.style.display = 'none';
	                        high_tooltip.style.display = 'inherit';
	                        low_span.style.display = 'none';
	                        low_tooltip.style.display = 'inherit';

	                        if (currentTick && !isNaN(currentTick)) {
	                            elementTextContent(indicativeHighBarrierTooltip, (parseFloat(currentTick) + parseFloat(barrier_high)).toFixed(decimalPlaces));
	                            elementTextContent(indicativeLowBarrierTooltip, (parseFloat(currentTick) + parseFloat(barrier_low)).toFixed(decimalPlaces));
	                        } else {
	                            elementTextContent(indicativeHighBarrierTooltip, '');
	                            elementTextContent(indicativeLowBarrierTooltip, '');
	                        }
	                    }
	                    high_elm.value = high_elm.textContent = value_high;
	                    low_elm.value = low_elm.textContent = value_low;

	                    Defaults.set('barrier_high', high_elm.value);
	                    Defaults.set('barrier_low', low_elm.value);
	                    Defaults.remove('barrier');
	                    return;
	                }
	            }
	        }

	        var elements = document.getElementsByClassName('barrier_class');
	        for (var i = 0; i < elements.length; i++) {
	            elements[i].style.display = 'none';
	        }
	        Defaults.remove('barrier', 'barrier_high', 'barrier_low');
	    };

	    var validateBarrier = function validateBarrier() {
	        var barrierElement = document.getElementById('barrier');
	        if (isVisible(barrierElement) && (isNaN(parseFloat(barrierElement.value)) || parseFloat(barrierElement.value) === 0)) {
	            barrierElement.classList.add('error-field');
	        } else {
	            barrierElement.classList.remove('error-field');
	        }
	    };

	    return {
	        display: display,
	        validateBarrier: validateBarrier,
	        isBarrierUpdated: function isBarrierUpdated() {
	            return _isBarrierUpdated;
	        },
	        setBarrierUpdate: function setBarrierUpdate(flag) {
	            _isBarrierUpdated = flag;
	        }
	    };
	}();

	module.exports = {
	    Barriers_Beta: Barriers_Beta
	};

/***/ },
/* 523 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Barriers_Beta = __webpack_require__(522).Barriers_Beta;
	var Contract_Beta = __webpack_require__(480).Contract_Beta;
	var Price_Beta = __webpack_require__(524).Price_Beta;
	var Defaults = __webpack_require__(457).Defaults;
	var moment = __webpack_require__(308);
	var Content = __webpack_require__(426).Content;
	var State = __webpack_require__(304).State;
	var isVisible = __webpack_require__(420).isVisible;
	var durationOrder = __webpack_require__(456).durationOrder;
	var selectOption = __webpack_require__(456).selectOption;
	var timeIsValid = __webpack_require__(456).timeIsValid;
	var showPriceOverlay = __webpack_require__(456).showPriceOverlay;
	var DatePicker = __webpack_require__(475).DatePicker;
	var toReadableFormat = __webpack_require__(441).toReadableFormat;
	var toISOFormat = __webpack_require__(441).toISOFormat;
	var elementTextContent = __webpack_require__(420).elementTextContent;

	/*
	 * Handles duration processing display
	 *
	 * It process `Contract.durations()` and display them according to
	 * the current `Contract.form()` and `Contract.barriers()`
	 *
	 * It also populate expiry type select box i.e Durations and Endtime select
	 *
	 */

	var Durations_Beta = function () {
	    'use strict';

	    var selected_duration = {},
	        has_end_date = 0;

	    var displayDurations = function displayDurations() {
	        var startType = void 0;
	        if (Defaults.get('date_start') !== 'now' && State.get('is_start_dates_displayed') && moment(Defaults.get('date_start') * 1000).isAfter(moment())) {
	            startType = 'forward';
	        } else {
	            startType = 'spot';
	        }

	        var durations = Contract_Beta.durations();
	        if (durations === false) {
	            document.getElementById('expiry_row').style.display = 'none';
	            Defaults.remove('expiry_type', 'duration_amount', 'duration_units', 'expiry_date', 'expiry_time');
	            return false;
	        }

	        var target = document.getElementById('duration_units'),
	            formName = Contract_Beta.form(),
	            barrierCategory = Contract_Beta.barrier(),
	            durationContainer = {};

	        while (target && target.firstChild) {
	            target.removeChild(target.firstChild);
	        }

	        Object.keys(durations).forEach(function (key) {
	            Object.keys(durations[key][formName]).forEach(function (form) {
	                if (durations[key][formName].hasOwnProperty(form)) {
	                    (function () {
	                        var obj = {};
	                        if (barrierCategory) {
	                            obj = durations[key][formName][barrierCategory];
	                        } else {
	                            obj = durations[key][formName][form];
	                        }
	                        Object.keys(obj).forEach(function (type) {
	                            if (startType) {
	                                if (startType === type && !durationContainer.hasOwnProperty(startType)) {
	                                    durationContainer[key] = obj[startType];
	                                }
	                            } else if (!durationContainer.hasOwnProperty(type)) {
	                                durationContainer[key] = obj[type];
	                            }
	                        });
	                    })();
	                }
	            });
	        });

	        var duration_list = {};
	        Object.keys(durationContainer).forEach(function (duration) {
	            var textMappingMin = durationTextValueMappings(durationContainer[duration].min_contract_duration),
	                textMappingMax = durationTextValueMappings(durationContainer[duration].max_contract_duration),
	                minUnit = textMappingMin.unit;

	            if (duration === 'intraday') {
	                switch (minUnit) {
	                    case 's':
	                        duration_list[minUnit] = makeDurationOption(textMappingMin, textMappingMax);
	                        duration_list.m = makeDurationOption(durationTextValueMappings('1m'), textMappingMax, true);
	                        duration_list.h = makeDurationOption(durationTextValueMappings('1h'), textMappingMax);
	                        break;
	                    case 'm':
	                        duration_list[minUnit] = makeDurationOption(textMappingMin, textMappingMax, true);
	                        duration_list.h = makeDurationOption(durationTextValueMappings('1h'), textMappingMax);
	                        break;
	                    case 'h':
	                        duration_list[minUnit] = makeDurationOption(textMappingMin, textMappingMax);
	                        break;
	                    default:
	                        duration_list[minUnit] = makeDurationOption(textMappingMin, textMappingMax);
	                        break;
	                }
	            } else if (duration === 'daily' || duration === 'tick') {
	                duration_list[minUnit] = makeDurationOption(textMappingMin, textMappingMax);
	            }
	        });
	        var list = Object.keys(duration_list).sort(function (a, b) {
	            return durationOrder(a) > durationOrder(b) ? 1 : -1;
	        });
	        has_end_date = 0;
	        for (var k = 0; k < list.length; k++) {
	            var d = list[k];
	            if (d !== 't') {
	                has_end_date = 1;
	            }
	            if (duration_list.hasOwnProperty(d)) {
	                target.appendChild(duration_list[d]);
	            }
	        }

	        if (selected_duration.unit) {
	            if (!selectOption(selected_duration.unit, target)) {
	                selected_duration = {};
	            }
	        }

	        durationPopulate();
	        return true;
	    };

	    var makeDurationOption = function makeDurationOption(mapMin, mapMax, isSelected) {
	        var option = document.createElement('option'),
	            content = document.createTextNode(mapMin.text);
	        option.setAttribute('value', mapMin.unit);
	        option.setAttribute('data-minimum', mapMin.value);
	        if (mapMax.value && mapMax.unit) {
	            var max = convertDurationUnit(mapMax.value, mapMax.unit, mapMin.unit);
	            if (max) {
	                option.setAttribute('data-maximum', max);
	            }
	        }
	        if (isSelected) {
	            option.setAttribute('selected', 'selected');
	        }
	        option.appendChild(content);
	        return option;
	    };

	    var convertDurationUnit = function convertDurationUnit(value, from_unit, to_unit) {
	        if (!value || !from_unit || !to_unit) return null;
	        if (from_unit === to_unit) return value;
	        var seconds = {
	            s: 1,
	            m: 60,
	            h: 3600,
	            d: 3600 * 24
	        };
	        return value * seconds[from_unit] / seconds[to_unit];
	    };

	    var displayEndTime = function displayEndTime() {
	        var date_start = document.getElementById('date_start').value;
	        var now = !date_start || date_start === 'now';
	        var current_moment = moment(now ? window.time : parseInt(date_start) * 1000).add(5, 'minutes').utc();
	        var expiry_date = Defaults.get('expiry_date') ? moment(Defaults.get('expiry_date')) : current_moment,
	            expiry_time = Defaults.get('expiry_time') || current_moment.format('HH:mm'),
	            expiry_date_iso = toISOFormat(expiry_date);

	        if (moment(expiry_date_iso + ' ' + expiry_time).valueOf() < current_moment.valueOf()) {
	            expiry_date = current_moment;
	            expiry_date_iso = toISOFormat(expiry_date);
	            expiry_time = current_moment.format('HH:mm');
	        }

	        var expiry_date_el = document.getElementById('expiry_date'),
	            expiry_time_el = document.getElementById('expiry_time');

	        expiry_date_el.value = toReadableFormat(expiry_date);
	        expiry_date_el.setAttribute('data-value', expiry_date_iso);
	        expiry_time_el.value = expiry_time;
	        expiry_time_el.setAttribute('data-value', expiry_time);
	        Defaults.set('expiry_date', expiry_date_iso);
	        Defaults.set('expiry_time', expiry_time);
	        Durations_Beta.setTime(expiry_time);

	        durationPopulate();
	    };

	    var durationTextValueMappings = function durationTextValueMappings(str) {
	        var mapping = {
	            s: Content.localize().textDurationSeconds,
	            m: Content.localize().textDurationMinutes,
	            h: Content.localize().textDurationHours,
	            d: Content.localize().textDurationDays,
	            t: Content.localize().textDurationTicks
	        };

	        var arry = str ? str.toString().match(/[a-zA-Z]+|[0-9]+/g) : [],
	            obj = {};

	        if (arry.length > 1) {
	            obj.unit = arry[1];
	            obj.text = mapping[arry[1]];
	            obj.value = arry[0];
	        } else {
	            obj.unit = 't';
	            obj.text = mapping.t;
	            obj.value = arry[0];
	        }

	        return obj;
	    };

	    var durationPopulate = function durationPopulate() {
	        var unit = document.getElementById('duration_units');
	        if (!unit.options[unit.selectedIndex]) return;
	        var unitMinValue = unit.options[unit.selectedIndex].getAttribute('data-minimum'),
	            unitMaxValue = unit.options[unit.selectedIndex].getAttribute('data-maximum');
	        var unitValue = Defaults.get('duration_amount') || unitMinValue;
	        unit.value = Defaults.get('duration_units') && document.querySelectorAll('select[id="duration_units"] [value="' + Defaults.get('duration_units') + '"]').length ? Defaults.get('duration_units') : unit.value;
	        elementTextContent(document.getElementById('duration_minimum'), unitMinValue);
	        elementTextContent(document.getElementById('duration_maximum'), unitMaxValue);
	        if (selected_duration.amount && selected_duration.unit > unitValue) {
	            unitValue = selected_duration.amount;
	        }
	        document.getElementById('duration_amount').value = unitValue;
	        Defaults.set('duration_amount', unitValue);
	        displayExpiryType();
	        Defaults.set('duration_units', unit.value);

	        // jquery for datepicker
	        var amountElement = $('#duration_amount'),
	            datePickerDur = new DatePicker('#duration_amount', 'diff'),
	            datePickDate = new DatePicker('#expiry_date');
	        if (unit.value === 'd') {
	            var tomorrow = window.time ? new Date(window.time.valueOf()) : new Date();
	            tomorrow.setDate(tomorrow.getDate() + 1);
	            datePickerDur.show(tomorrow, 364, 'attr', 'noNative');
	            amountElement.change(function (value) {
	                var dayDiff = void 0;
	                var $duration_amount_val = $('#duration_amount').val();
	                if ($duration_amount_val) {
	                    dayDiff = $duration_amount_val;
	                } else {
	                    value = value.target.getAttribute('data-value');
	                    var date = value ? new Date(value) : new Date();
	                    var today = window.time ? window.time.valueOf() : new Date();
	                    dayDiff = Math.ceil((date - today) / (1000 * 60 * 60 * 24));
	                }
	                amountElement.val(dayDiff);
	            });
	        } else {
	            datePickerDur.hide();
	        }

	        if ($('#expiry_date').is(':visible')) {
	            datePickDate.hide();
	            datePickDate.show('today', 364);
	        }

	        validateMinDurationAmount();
	        // we need to call it here as for days we need to show absolute barriers
	        Barriers_Beta.display();
	    };

	    var displayExpiryType = function displayExpiryType() {
	        var target = document.getElementById('expiry_type'),
	            fragment = document.createDocumentFragment();

	        // in case of having endtime as expiry_type and change the form to contract types
	        // which only have duration and do not support endtime, it should change the Default value
	        // to get corrected based on contract situations
	        if ($('#expiry_type').find('option[value=' + Defaults.get('expiry_type') + ']').length === 0 && target.value) {
	            Defaults.set('expiry_type', target.value);
	        }
	        var current_selected = Defaults.get('expiry_type') || target.value || 'duration';
	        var hideId = current_selected === 'duration' ? 'endtime' : 'duration',
	            id = current_selected;

	        id = document.getElementById('expiry_type_' + id);
	        if (id) {
	            id.style.display = 'flex';
	        }
	        // need to hide the non selected one
	        hideId = document.getElementById('expiry_type_' + hideId);
	        if (hideId) {
	            hideId.style.display = 'none';
	        }

	        while (target && target.firstChild) {
	            target.removeChild(target.firstChild);
	        }

	        var option = document.createElement('option'),
	            content = document.createTextNode(Content.localize().textDuration);

	        option.setAttribute('value', 'duration');
	        if (current_selected === 'duration') {
	            option.setAttribute('selected', 'selected');
	        }
	        option.appendChild(content);
	        fragment.appendChild(option);

	        if (has_end_date) {
	            option = document.createElement('option');
	            content = document.createTextNode(Content.localize().textEndTime);
	            option.setAttribute('value', 'endtime');
	            if (current_selected === 'endtime') {
	                option.setAttribute('selected', 'selected');
	            }
	            option.appendChild(content);
	            fragment.appendChild(option);
	        }
	        target.appendChild(fragment);
	    };

	    var selectEndDate = function selectEndDate(end_date) {
	        var expiry_time = document.getElementById('expiry_time'),
	            date_start = document.getElementById('date_start'),
	            end_date_readable = toReadableFormat(end_date),
	            end_date_iso = toISOFormat(end_date);
	        $('#expiry_date').val(end_date_readable).attr('data-value', end_date_iso);
	        Defaults.set('expiry_date', end_date_iso);
	        if (end_date.isAfter(window.time.format('YYYY-MM-DD HH:mm'), 'day')) {
	            Durations_Beta.setTime('');
	            Defaults.remove('expiry_time');
	            setNow(); // start time
	            date_start.setAttribute('disabled', 'disabled');
	            expiry_time.hide();
	            processTradingTimesRequest_Beta(end_date_iso);
	        } else {
	            date_start.removeAttribute('disabled');
	            if (!expiry_time.value) {
	                var new_time = moment(window.time).add(5, 'minutes').utc().format('HH:mm');
	                expiry_time.value = new_time;
	                expiry_time.setAttribute('data-value', new_time);
	            }
	            Durations_Beta.setTime(expiry_time.value);
	            Defaults.set('expiry_time', Defaults.get('expiry_time') || expiry_time.value);
	            expiry_time.show();
	            Price_Beta.processPriceRequest_Beta();
	        }

	        Barriers_Beta.display();
	    };

	    var validateMinDurationAmount = function validateMinDurationAmount() {
	        var durationAmountElement = document.getElementById('duration_amount'),
	            durationMinElement = document.getElementById('duration_minimum'),
	            durationMaxElement = document.getElementById('duration_maximum');
	        if (!isVisible(durationAmountElement) || !isVisible(durationMinElement)) return;
	        if (+durationAmountElement.value < +durationMinElement.textContent || +durationMaxElement.textContent && +durationAmountElement.value > +durationMaxElement.textContent) {
	            durationAmountElement.classList.add('error-field');
	        } else {
	            durationAmountElement.classList.remove('error-field');
	        }
	    };

	    var onStartDateChange = function onStartDateChange(value) {
	        var $dateStartSelect = $('#date_start');
	        if (!value || !$dateStartSelect.find('option[value=' + value + ']').length) {
	            return 0;
	        }

	        var yellowBorder = 'light-yellow-background';
	        if (value !== 'now') {
	            $dateStartSelect.addClass(yellowBorder);
	        } else {
	            $dateStartSelect.removeClass(yellowBorder);
	        }

	        $dateStartSelect.val(value);

	        var make_price_request = 1;
	        var $expiry_time = $('#expiry_time');
	        if (value !== 'now' && Defaults.get('expiry_type') === 'endtime') {
	            make_price_request = -1;
	            var end_time = moment(parseInt(value) * 1000).add(5, 'minutes').utc();
	            Durations_Beta.setTime(timeIsValid($expiry_time) && Defaults.get('expiry_time') ? Defaults.get('expiry_time') : end_time.format('HH:mm'));
	            Durations_Beta.selectEndDate(timeIsValid($expiry_time) && (Defaults.get('expiry_date') ? moment(Defaults.get('expiry_date')) : end_time));
	        }
	        timeIsValid($expiry_time);
	        Durations_Beta.display();
	        return make_price_request;
	    };

	    var setNow = function setNow() {
	        var $date_start = $('#date_start');
	        if ($date_start.find('option[value="now"]').length) {
	            $date_start.val('now').removeClass('light-yellow-background');
	            Defaults.set('date_start', 'now');
	        }
	    };

	    var processTradingTimesRequest_Beta = function processTradingTimesRequest_Beta(date) {
	        var trading_times = Durations_Beta.trading_times();
	        if (trading_times.hasOwnProperty(date)) {
	            Price_Beta.processPriceRequest_Beta();
	        } else {
	            showPriceOverlay();
	            BinarySocket.send({
	                trading_times: date
	            });
	        }
	    };

	    return {
	        display: displayDurations,
	        displayEndTime: displayEndTime,
	        populate: durationPopulate,
	        selectEndDate: selectEndDate,
	        validateMinDurationAmount: validateMinDurationAmount,
	        onStartDateChange: onStartDateChange,

	        setTime: function setTime(time) {
	            $('#expiry_time').val(time);Defaults.set('expiry_time', time);
	        },
	        select_amount: function select_amount(a) {
	            selected_duration.amount = a;
	        },
	        select_unit: function select_unit(u) {
	            selected_duration.unit = u;
	        }
	    };
	}();

	module.exports = {
	    Durations_Beta: Durations_Beta
	};

/***/ },
/* 524 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var Contract_Beta = __webpack_require__(480).Contract_Beta;
	var Content = __webpack_require__(426).Content;
	var format_money = __webpack_require__(440).format_money;
	var moment = __webpack_require__(308);
	var contractTypeDisplayMapping = __webpack_require__(456).contractTypeDisplayMapping;
	var resetPriceMovement = __webpack_require__(456).resetPriceMovement;
	var displayCommentPrice = __webpack_require__(456).displayCommentPrice;
	var displayCommentSpreads = __webpack_require__(456).displayCommentSpreads;
	var showPriceOverlay = __webpack_require__(456).showPriceOverlay;
	var displayPriceMovement = __webpack_require__(455).displayPriceMovement;
	var getTradingTimes = __webpack_require__(455).getTradingTimes;
	var getStartDateNode = __webpack_require__(455).getStartDateNode;
	var Defaults = __webpack_require__(457).Defaults;
	var isVisible = __webpack_require__(420).isVisible;
	var localize = __webpack_require__(423).localize;
	var Client = __webpack_require__(305).Client;
	var elementTextContent = __webpack_require__(420).elementTextContent;

	/*
	 * Price object handles all the functions we need to display prices
	 *
	 * We create Price proposal that we need to send to server to get price,
	 * longcode and all other information that we need to get the price for
	 * current contract
	 *
	 *
	 * Usage:
	 *
	 * `socket.send(Price.proposal())` to send price proposal to sever
	 * `Price.display()` to display the price details returned from server
	 */
	var Price_Beta = function () {
	    'use strict';

	    var typeDisplayIdMapping = {},
	        form_id = 0;

	    var createProposal = function createProposal(typeOfContract) {
	        var proposal = {
	            proposal: 1,
	            subscribe: 1
	        };
	        var underlying = document.getElementById('underlying'),
	            contractType = typeOfContract,
	            amountType = document.getElementById('amount_type'),
	            currency = document.getElementById('currency'),
	            payout = document.getElementById('amount'),
	            startTime = getStartDateNode(),
	            expiryType = document.getElementById('expiry_type'),
	            duration = document.getElementById('duration_amount'),
	            durationUnit = document.getElementById('duration_units'),
	            endDate = document.getElementById('expiry_date'),
	            barrier = document.getElementById('barrier'),
	            highBarrier = document.getElementById('barrier_high'),
	            lowBarrier = document.getElementById('barrier_low'),
	            prediction = document.getElementById('prediction'),
	            amountPerPoint = document.getElementById('amount_per_point'),
	            stopType = document.querySelector('input[name="stop_type"]:checked'),
	            stopLoss = document.getElementById('stop_loss'),
	            stopProfit = document.getElementById('stop_profit');

	        if (payout && isVisible(payout) && payout.value) {
	            proposal.amount = parseFloat(payout.value);
	        }

	        if (amountType && isVisible(amountType) && amountType.value) {
	            proposal.basis = amountType.value;
	        }

	        if (contractType) {
	            proposal.contract_type = typeOfContract;
	        }

	        if (currency && (currency.value || currency.getAttribute('value'))) {
	            proposal.currency = currency.value || currency.getAttribute('value');
	        }

	        if (underlying && underlying.value) {
	            proposal.symbol = underlying.value;
	        }

	        if (startTime && isVisible(startTime) && startTime.value !== 'now') {
	            proposal.date_start = startTime.value;
	        }

	        if (expiryType && isVisible(expiryType) && expiryType.value === 'duration') {
	            proposal.duration = parseInt(duration.value);
	            proposal.duration_unit = durationUnit.value;
	        } else if (expiryType && isVisible(expiryType) && expiryType.value === 'endtime') {
	            var endDate2 = endDate.getAttribute('data-value');
	            var endTime2 = Defaults.get('expiry_time');
	            if (!endTime2) {
	                var trading_times = getTradingTimes();
	                if (trading_times.hasOwnProperty(endDate2) && _typeof(trading_times[endDate2][underlying.value]) === 'object' && trading_times[endDate2][underlying.value].length && trading_times[endDate2][underlying.value][0] !== '--') {
	                    if (trading_times[endDate2][underlying.value].length > 1) {
	                        endTime2 = trading_times[endDate2][underlying.value][1];
	                    } else {
	                        endTime2 = trading_times[endDate2][underlying.value];
	                    }
	                }
	            }

	            proposal.date_expiry = moment.utc(endDate2 + ' ' + endTime2).unix();
	            // For stopping tick trade behaviour
	            proposal.duration_unit = 'm';
	        }

	        if (barrier && isVisible(barrier) && barrier.value) {
	            proposal.barrier = barrier.value;
	        }

	        if (highBarrier && isVisible(highBarrier) && highBarrier.value) {
	            proposal.barrier = highBarrier.value;
	        }

	        if (lowBarrier && isVisible(lowBarrier) && lowBarrier.value) {
	            proposal.barrier2 = lowBarrier.value;
	        }

	        if (prediction && isVisible(prediction)) {
	            proposal.barrier = parseInt(prediction.value);
	        }

	        if (amountPerPoint && isVisible(amountPerPoint)) {
	            proposal.amount_per_point = parseFloat(amountPerPoint.value);
	        }

	        if (stopType && isVisible(stopType)) {
	            proposal.stop_type = stopType.value;
	        }

	        if (stopLoss && isVisible(stopLoss)) {
	            proposal.stop_loss = parseFloat(stopLoss.value);
	        }

	        if (stopProfit && isVisible(stopProfit)) {
	            proposal.stop_profit = parseFloat(stopProfit.value);
	        }

	        if (contractType) {
	            proposal.contract_type = typeOfContract;
	        }

	        proposal.passthrough = {
	            form_id: form_id
	        };

	        resetPriceMovement();

	        return proposal;
	    };

	    var display = function display(details, contractType) {
	        var proposal = details.proposal;
	        var id = proposal ? proposal.id : '';
	        var params = details.echo_req;

	        var type = params.contract_type;
	        if (id && !type) {
	            type = typeDisplayIdMapping[id];
	        }

	        var is_spread = false;
	        if (params.contract_type && (params.contract_type === 'SPREADU' || params.contract_type === 'SPREADD')) {
	            is_spread = true;
	        }

	        if (params && id && Object.getOwnPropertyNames(params).length > 0) {
	            typeDisplayIdMapping[id] = type;
	        }

	        var position = contractTypeDisplayMapping(type);

	        if (!position) {
	            return;
	        }

	        var container = document.getElementById('price_container_' + position);
	        if (!container) return;
	        if (!$(container).is(':visible')) {
	            $(container).fadeIn(200, function () {
	                $(container).css('display', 'flex');
	            });
	        }

	        var h4 = container.getElementsByClassName('contract_heading')[0],
	            amount = container.getElementsByClassName('contract_amount')[0],
	            payoutAmount = container.getElementsByClassName('contract_payout')[0],
	            stake = container.getElementsByClassName('stake')[0],
	            payout = container.getElementsByClassName('payout')[0],
	            purchase = container.getElementsByClassName('purchase_button')[0],
	            description = container.getElementsByClassName('contract_description')[0],
	            comment = container.getElementsByClassName('price_comment')[0],
	            error = container.getElementsByClassName('contract_error')[0],
	            currency = document.getElementById('currency');

	        var display_type = type ? contractType ? contractType[type] : '' : '';
	        if (display_type) {
	            h4.setAttribute('class', 'contract_heading ' + type);
	            if (is_spread) {
	                if (position === 'top') {
	                    elementTextContent(h4, Content.localize().textSpreadTypeLong);
	                } else {
	                    elementTextContent(h4, Content.localize().textSpreadTypeShort);
	                }
	            } else {
	                elementTextContent(h4, display_type);
	            }
	        }

	        var setData = function setData(data) {
	            if (!data) return;
	            if (data.display_value) {
	                if (is_spread) {
	                    $('.stake:visible').hide();
	                    elementTextContent(amount, data.display_value);
	                } else {
	                    $('.stake:hidden').show();
	                    elementTextContent(stake, localize('Stake') + ': ');
	                    elementTextContent(amount, format_money(currency.value || currency.getAttribute('value'), data.display_value));
	                }
	                $('.stake_wrapper:hidden').show();
	            } else {
	                $('.stake_wrapper:visible').hide();
	            }

	            if (data.payout) {
	                elementTextContent(payout, (is_spread ? localize('Payout/point') : localize('Payout')) + ': ');
	                elementTextContent(payoutAmount, format_money(currency.value || currency.getAttribute('value'), +data.payout));
	                $('.payout_wrapper:hidden').show();
	            } else {
	                $('.payout_wrapper:visible').hide();
	            }

	            if (data.longcode && window.innerWidth > 500 && !Client.status_detected('unwelcome')) {
	                description.setAttribute('data-balloon', data.longcode);
	            } else {
	                description.removeAttribute('data-balloon');
	            }
	        };

	        if (details.error) {
	            purchase.hide();
	            comment.hide();
	            setData(details.error.details);
	            error.show();
	            elementTextContent(error, details.error.message);
	        } else {
	            setData(proposal);
	            if ($('#websocket_form').find('.error-field').length > 0) {
	                purchase.hide();
	            } else {
	                purchase.show();
	            }
	            comment.show();
	            error.hide();
	            if (is_spread) {
	                displayCommentSpreads(comment, currency.value || currency.getAttribute('value'), proposal.spread);
	            } else {
	                displayCommentPrice(comment, currency.value || currency.getAttribute('value'), proposal.ask_price, proposal.payout);
	            }
	            var oldprice = purchase.getAttribute('data-display_value'),
	                oldpayout = purchase.getAttribute('data-payout');
	            displayPriceMovement(amount, oldprice, proposal.display_value);
	            displayPriceMovement(payoutAmount, oldpayout, proposal.payout);
	            purchase.setAttribute('data-purchase-id', id);
	            purchase.setAttribute('data-ask-price', proposal.ask_price);
	            purchase.setAttribute('data-display_value', proposal.display_value);
	            purchase.setAttribute('data-payout', proposal.payout);
	            purchase.setAttribute('data-symbol', id);
	            Object.keys(params).forEach(function (key) {
	                if (key && key !== 'proposal') {
	                    purchase.setAttribute('data-' + key, params[key]);
	                }
	            });
	        }
	    };

	    var clearMapping = function clearMapping() {
	        typeDisplayIdMapping = {};
	    };

	    var clearFormId = function clearFormId() {
	        form_id = 0;
	    };

	    /*
	     * Function to request for cancelling the current price proposal
	     */
	    var processForgetProposals_Beta = function processForgetProposals_Beta() {
	        showPriceOverlay();
	        BinarySocket.send({
	            forget_all: 'proposal'
	        });
	        Price_Beta.clearMapping();
	    };

	    /*
	     * Function to process and calculate price based on current form
	     * parameters or change in form parameters
	     */
	    var processPriceRequest_Beta = function processPriceRequest_Beta() {
	        Price_Beta.incrFormId();
	        processForgetProposals_Beta();
	        showPriceOverlay();
	        var types = Contract_Beta.contractType()[Contract_Beta.form()];
	        if (Contract_Beta.form() === 'digits') {
	            switch (sessionStorage.getItem('formname')) {
	                case 'matchdiff':
	                    types = {
	                        DIGITMATCH: 1,
	                        DIGITDIFF: 1
	                    };
	                    break;
	                case 'evenodd':
	                    types = {
	                        DIGITEVEN: 1,
	                        DIGITODD: 1
	                    };
	                    break;
	                case 'overunder':
	                    types = {
	                        DIGITOVER: 1,
	                        DIGITUNDER: 1
	                    };
	                // no default
	            }
	        }
	        Object.keys(types).forEach(function (typeOfContract) {
	            BinarySocket.send(Price_Beta.proposal(typeOfContract));
	        });
	    };

	    return {
	        proposal: createProposal,
	        display: display,
	        clearMapping: clearMapping,
	        clearFormId: clearFormId,
	        idDisplayMapping: function idDisplayMapping() {
	            return typeDisplayIdMapping;
	        },
	        getFormId: function getFormId() {
	            return form_id;
	        },
	        incrFormId: function incrFormId() {
	            form_id++;
	        },

	        processForgetProposals_Beta: processForgetProposals_Beta,
	        processPriceRequest_Beta: processPriceRequest_Beta
	    };
	}();

	module.exports = {
	    Price_Beta: Price_Beta
	};

/***/ },
/* 525 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var TradingAnalysis_Beta = __webpack_require__(513).TradingAnalysis_Beta;
	var Barriers_Beta = __webpack_require__(522).Barriers_Beta;
	var Contract_Beta = __webpack_require__(480).Contract_Beta;
	var Durations_Beta = __webpack_require__(523).Durations_Beta;
	var Price_Beta = __webpack_require__(524).Price_Beta;
	var Purchase_Beta = __webpack_require__(526).Purchase_Beta;
	var StartDates_Beta = __webpack_require__(528).StartDates_Beta;
	var WSTickDisplay_Beta = __webpack_require__(527).WSTickDisplay_Beta;
	var Defaults = __webpack_require__(457).Defaults;
	var Symbols = __webpack_require__(459).Symbols;
	var Tick = __webpack_require__(454).Tick;
	var State = __webpack_require__(304).State;
	var localize = __webpack_require__(423).localize;
	var displayUnderlyings = __webpack_require__(456).displayUnderlyings;
	var setFormPlaceholderContent_Beta = __webpack_require__(479).setFormPlaceholderContent_Beta;
	var hidePriceOverlay = __webpack_require__(456).hidePriceOverlay;
	var hideFormOverlay = __webpack_require__(456).hideFormOverlay;
	var showFormOverlay = __webpack_require__(456).showFormOverlay;
	var hideOverlayContainer = __webpack_require__(456).hideOverlayContainer;
	var getContractCategoryTree = __webpack_require__(456).getContractCategoryTree;
	var getDefaultMarket = __webpack_require__(456).getDefaultMarket;
	var selectOption = __webpack_require__(456).selectOption;
	var updateWarmChart = __webpack_require__(456).updateWarmChart;
	var displayContractForms = __webpack_require__(456).displayContractForms;
	var displayMarkets = __webpack_require__(456).displayMarkets;
	var displayTooltip_Beta = __webpack_require__(456).displayTooltip_Beta;
	var processTradingTimesAnswer = __webpack_require__(455).processTradingTimesAnswer;
	var moment = __webpack_require__(308);
	var elementTextContent = __webpack_require__(420).elementTextContent;
	var elementInnerHtml = __webpack_require__(420).elementInnerHtml;

	/*
	 * This function process the active symbols to get markets
	 * and underlying list
	 */
	function processActiveSymbols_Beta(data) {
	    'use strict';

	    // populate the Symbols object

	    Symbols.details(data);

	    var market = getDefaultMarket();

	    // store the market
	    Defaults.set('market', market);

	    displayMarkets('contract_markets', Symbols.markets(), market);
	    processMarket_Beta();
	    // setTimeout(function(){
	    // if(document.getElementById('underlying')){
	    //     Symbols.getSymbols(0);
	    // }
	    // }, 60*1000);
	}

	/*
	 * Function to call when market has changed
	 */
	function processMarket_Beta(flag) {
	    'use strict';

	    // we can get market from sessionStorage as allowed market
	    // is already set when this function is called

	    var market = Defaults.get('market'),
	        symbol = Defaults.get('underlying');
	    var update_page = Symbols.need_page_update() || flag;

	    // change to default market if query string contains an invalid market
	    if (!market || !Symbols.underlyings()[market]) {
	        market = getDefaultMarket();
	        Defaults.set('market', market);
	    }
	    if (update_page && (!symbol || !Symbols.underlyings()[market][symbol])) {
	        symbol = undefined;
	    }
	    displayUnderlyings('underlying', Symbols.underlyings()[market], symbol);

	    if (update_page) {
	        processMarketUnderlying_Beta();
	    }
	}

	/*
	 * Function to call when underlying has changed
	 */
	function processMarketUnderlying_Beta() {
	    'use strict';

	    var underlyingElement = document.getElementById('underlying');
	    if (!underlyingElement) {
	        return;
	    }

	    if (underlyingElement.selectedIndex < 0) {
	        underlyingElement.selectedIndex = 0;
	    }
	    var underlying = underlyingElement.value;
	    Defaults.set('underlying', underlying);

	    showFormOverlay();

	    // forget the old tick id i.e. close the old tick stream
	    processForgetTicks_Beta();
	    // get ticks for current underlying
	    Tick.request(underlying);

	    Tick.clean();

	    updateWarmChart();

	    BinarySocket.clearTimeouts();

	    Contract_Beta.getContracts(underlying);

	    displayTooltip_Beta(Defaults.get('market'), underlying);
	}

	/*
	 * Function to display contract form for current underlying
	 */
	function processContract_Beta(contracts) {
	    'use strict';

	    if (contracts.hasOwnProperty('error') && contracts.error.code === 'InvalidSymbol') {
	        Price_Beta.processForgetProposals_Beta();
	        var container = document.getElementById('contract_confirmation_container'),
	            message_container = document.getElementById('confirmation_message'),
	            confirmation_error = document.getElementById('confirmation_error'),
	            confirmation_error_contents = document.getElementById('confirmation_error_contents'),
	            contracts_list = document.getElementById('contracts_list');
	        container.style.display = 'block';
	        contracts_list.style.display = 'none';
	        message_container.hide();
	        confirmation_error.show();
	        elementInnerHtml(confirmation_error_contents, contracts.error.message + ' <a href="javascript:;" onclick="sessionStorage.removeItem(\'underlying\'); window.location.reload();">' + localize('Please reload the page') + '</a>');
	        return;
	    }

	    window.chartAllowed = !(contracts.contracts_for && contracts.contracts_for.feed_license && contracts.contracts_for.feed_license === 'chartonly');

	    document.getElementById('trading_socket_container_beta').classList.add('show');
	    var init_logo = document.getElementById('trading_init_progress');
	    if (init_logo.style.display !== 'none') {
	        init_logo.style.display = 'none';
	        Defaults.update();
	    }

	    Contract_Beta.setContracts(contracts);

	    var contract_categories = Contract_Beta.contractForms();
	    var formname = void 0;
	    if (Defaults.get('formname') && contract_categories && contract_categories[Defaults.get('formname')]) {
	        formname = Defaults.get('formname');
	    } else {
	        var tree = getContractCategoryTree(contract_categories);
	        if (tree[0]) {
	            if (_typeof(tree[0]) === 'object') {
	                formname = tree[0][1][0];
	            } else {
	                formname = tree[0];
	            }
	        }
	    }

	    // set form to session storage
	    Defaults.set('formname', formname);

	    // change the form placeholder content as per current form (used for mobile menu)
	    setFormPlaceholderContent_Beta(formname);

	    displayContractForms('contract_form_name_nav', contract_categories, formname);

	    processContractForm_Beta();

	    TradingAnalysis_Beta.request();

	    hideFormOverlay();
	}

	function processContractForm_Beta() {
	    Contract_Beta.details(sessionStorage.getItem('formname'));

	    StartDates_Beta.display();

	    displayPrediction_Beta();

	    displaySpreads_Beta();

	    var r1 = void 0;
	    if (State.get('is_start_dates_displayed') && Defaults.get('date_start') && Defaults.get('date_start') !== 'now') {
	        r1 = Durations_Beta.onStartDateChange(Defaults.get('date_start'));
	        if (!r1 || Defaults.get('expiry_type') === 'endtime') Durations_Beta.display();
	    } else {
	        Durations_Beta.display();
	    }

	    if (Defaults.get('amount')) $('#amount').val(Defaults.get('amount'));else Defaults.set('amount', document.getElementById('amount').value);

	    if (Defaults.get('amount_type')) selectOption(Defaults.get('amount_type'), document.getElementById('amount_type'));else Defaults.set('amount_type', document.getElementById('amount_type').value);

	    if (Defaults.get('currency')) selectOption(Defaults.get('currency'), document.getElementById('currency'));

	    var expiry_type = Defaults.get('expiry_type') || 'duration';
	    var make_price_request = onExpiryTypeChange(expiry_type);

	    if (make_price_request >= 0) {
	        Price_Beta.processPriceRequest_Beta();
	    }

	    if (Defaults.get('formname') === 'spreads') {
	        Defaults.remove('expiry_type', 'duration_amount', 'duration_units', 'expiry_date', 'expiry_time', 'amount', 'amount_type');
	    } else {
	        Defaults.remove('amount_per_point', 'stop_type', 'stop_loss', 'stop_profit');
	    }
	}

	function displayPrediction_Beta() {
	    var predictionElement = document.getElementById('prediction_row');
	    if (Contract_Beta.form() === 'digits' && sessionStorage.getItem('formname') !== 'evenodd') {
	        predictionElement.show();
	        if (Defaults.get('prediction')) {
	            selectOption(Defaults.get('prediction'), document.getElementById('prediction'));
	        } else {
	            Defaults.set('prediction', document.getElementById('prediction').value);
	        }
	    } else {
	        predictionElement.hide();
	        Defaults.remove('prediction');
	    }
	}

	function displaySpreads_Beta() {
	    var amountType = document.getElementById('amount_type'),
	        amountPerPointLabel = document.getElementById('amount_per_point_label'),
	        amount = document.getElementById('amount'),
	        amountPerPoint = document.getElementById('amount_per_point'),
	        spreadContainer = document.getElementById('spread_element_container'),
	        stopTypeDollarLabel = document.getElementById('stop_type_dollar_label'),
	        expiryTypeRow = document.getElementById('expiry_row');

	    if (sessionStorage.getItem('formname') === 'spreads') {
	        amountType.hide();
	        amount.hide();
	        expiryTypeRow.hide();
	        amountPerPointLabel.show();
	        amountPerPoint.show();
	        spreadContainer.show();
	        elementTextContent(stopTypeDollarLabel, document.getElementById('currency').value || Defaults.get('currency'));
	        if (Defaults.get('stop_type')) {
	            var el = document.querySelectorAll('input[name="stop_type"][value="' + Defaults.get('stop_type') + '"]');
	            if (el) {
	                el[0].setAttribute('checked', 'checked');
	            }
	        } else {
	            Defaults.set('stop_type', document.getElementById('stop_type_points').checked ? 'point' : 'dollar');
	        }
	        if (Defaults.get('amount_per_point')) amountPerPoint.value = Defaults.get('amount_per_point');else Defaults.set('amount_per_point', amountPerPoint.value);

	        if (Defaults.get('stop_loss')) document.getElementById('stop_loss').value = Defaults.get('stop_loss');else Defaults.set('stop_loss', document.getElementById('stop_loss').value);

	        if (Defaults.get('stop_profit')) document.getElementById('stop_profit').value = Defaults.get('stop_profit');else Defaults.set('stop_profit', document.getElementById('stop_profit').value);
	    } else {
	        amountPerPointLabel.hide();
	        amountPerPoint.hide();
	        spreadContainer.hide();
	        expiryTypeRow.show();
	        amountType.show();
	        amount.show();
	    }
	}

	function forgetTradingStreams_Beta() {
	    Price_Beta.processForgetProposals_Beta();
	    processForgetTicks_Beta();
	}

	/*
	 * Function to cancel the current tick stream
	 * this need to be invoked before makin
	 */
	function processForgetTicks_Beta() {
	    'use strict';

	    BinarySocket.send({
	        forget_all: 'ticks'
	    });
	}

	/*
	 * Function to process ticks stream
	 */
	function processTick_Beta(tick) {
	    'use strict';

	    var symbol = sessionStorage.getItem('underlying');
	    var digit_info = TradingAnalysis_Beta.digit_info();
	    if (tick.echo_req.ticks === symbol || tick.tick && tick.tick.symbol === symbol) {
	        Tick.details(tick);
	        Tick.display();
	        if (digit_info && tick.tick) {
	            digit_info.update_chart(tick);
	        }
	        WSTickDisplay_Beta.updateChart(tick);
	        Purchase_Beta.update_spot_list();
	        if (!Barriers_Beta.isBarrierUpdated()) {
	            Barriers_Beta.display();
	            Barriers_Beta.setBarrierUpdate(true);
	        }
	        updateWarmChart();
	    } else if (digit_info) {
	        digit_info.update_chart(tick);
	    }
	}

	function processProposal_Beta(response) {
	    'use strict';

	    var form_id = Price_Beta.getFormId();
	    if (response.echo_req && response.echo_req !== null && response.echo_req.passthrough && response.echo_req.passthrough.form_id === form_id) {
	        hideOverlayContainer();
	        Price_Beta.display(response, Contract_Beta.contractType()[Contract_Beta.form()]);
	        hidePriceOverlay();
	    }
	}

	function processTradingTimes_Beta(response) {
	    processTradingTimesAnswer(response);
	    Price_Beta.processPriceRequest_Beta();
	}

	function onExpiryTypeChange(value) {
	    var $expiry_type = $('#expiry_type');
	    if (!value || !$expiry_type.find('option[value=' + value + ']').length) {
	        value = 'duration';
	    }
	    $expiry_type.val(value);

	    var make_price_request = 0;
	    if (value === 'endtime') {
	        Durations_Beta.displayEndTime();
	        if (Defaults.get('expiry_date')) {
	            Durations_Beta.selectEndDate(moment(Defaults.get('expiry_date')));
	            make_price_request = -1;
	        }
	        Defaults.remove('duration_units', 'duration_amount');
	    } else {
	        StartDates_Beta.enable();
	        Durations_Beta.display();
	        if (Defaults.get('duration_units')) {
	            onDurationUnitChange(Defaults.get('duration_units'));
	        }
	        var duration_amount = Defaults.get('duration_amount');
	        if (duration_amount && duration_amount > $('#duration_minimum').text()) {
	            $('#duration_amount').val(duration_amount);
	        }
	        make_price_request = 1;
	        Defaults.remove('expiry_date', 'expiry_time', 'end_date');
	        Durations_Beta.validateMinDurationAmount();
	    }

	    return make_price_request;
	}

	function onDurationUnitChange(value) {
	    var $duration_units = $('#duration_units');
	    if (!value || !$duration_units.find('option[value=' + value + ']').length) {
	        return 0;
	    }

	    $duration_units.val(value);
	    Defaults.set('duration_units', value);

	    Durations_Beta.select_unit(value);
	    Durations_Beta.populate();

	    return 1;
	}

	module.exports = {
	    processActiveSymbols_Beta: processActiveSymbols_Beta,
	    processMarket_Beta: processMarket_Beta,
	    processContract_Beta: processContract_Beta,
	    processContractForm_Beta: processContractForm_Beta,
	    forgetTradingStreams_Beta: forgetTradingStreams_Beta,
	    processForgetTicks_Beta: processForgetTicks_Beta,
	    processTick_Beta: processTick_Beta,
	    processProposal_Beta: processProposal_Beta,
	    processTradingTimes_Beta: processTradingTimes_Beta,
	    onExpiryTypeChange: onExpiryTypeChange,
	    onDurationUnitChange: onDurationUnitChange
	};

/***/ },
/* 526 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Contract_Beta = __webpack_require__(480).Contract_Beta;
	var WSTickDisplay_Beta = __webpack_require__(527).WSTickDisplay_Beta;
	var Symbols = __webpack_require__(459).Symbols;
	var Tick = __webpack_require__(454).Tick;
	var Content = __webpack_require__(426).Content;
	var format_money = __webpack_require__(440).format_money;
	var toTitleCase = __webpack_require__(441).toTitleCase;
	var addComma = __webpack_require__(441).addComma;
	var isVisible = __webpack_require__(420).isVisible;
	var updatePurchaseStatus_Beta = __webpack_require__(456).updatePurchaseStatus_Beta;
	var label_value = __webpack_require__(456).label_value;
	var Client = __webpack_require__(305).Client;
	var elementTextContent = __webpack_require__(420).elementTextContent;
	var elementInnerHtml = __webpack_require__(420).elementInnerHtml;

	/*
	 * Purchase object that handles all the functions related to
	 * contract purchase response
	 */

	var Purchase_Beta = function () {
	    'use strict';

	    var purchase_data = {};

	    var display = function display(details) {
	        purchase_data = details;

	        var receipt = details.buy,
	            passthrough = details.echo_req.passthrough,
	            container = document.getElementById('contract_confirmation_container'),
	            message_container = document.getElementById('confirmation_message'),
	            heading = document.getElementById('contract_purchase_heading'),
	            descr = document.getElementById('contract_purchase_descr'),
	            barrier_element = document.getElementById('contract_purchase_barrier'),
	            chart = document.getElementById('tick_chart'),
	            brief = document.getElementById('contract_purchase_brief'),
	            balance = document.getElementById('contract_purchase_balance'),
	            payout = document.getElementById('contract_purchase_payout'),
	            cost = document.getElementById('contract_purchase_cost'),
	            profit = document.getElementById('contract_purchase_profit'),
	            spots = document.getElementById('contract_purchase_spots'),
	            confirmation_error = document.getElementById('confirmation_error'),
	            confirmation_error_contents = document.getElementById('confirmation_error_contents'),
	            contracts_list = document.getElementById('contracts_list'),
	            button = document.getElementById('contract_purchase_button');

	        var error = details.error;
	        var show_chart = !error && passthrough.duration <= 10 && passthrough.duration_unit === 't' && (sessionStorage.formname === 'risefall' || sessionStorage.formname === 'higherlower' || sessionStorage.formname === 'asian');

	        contracts_list.style.display = 'none';

	        if (error) {
	            container.style.display = 'block';
	            message_container.hide();
	            confirmation_error.show();
	            elementInnerHtml(confirmation_error_contents, error.message);
	        } else {
	            var guideBtn = document.getElementById('guideBtn');
	            if (guideBtn) {
	                guideBtn.style.display = 'none';
	            }
	            container.style.display = 'block';
	            message_container.show();
	            confirmation_error.hide();

	            $('#contract-values').find('td').each(function () {
	                $(this).text('').removeAttr('class', '');
	            });
	            var purchase_passthrough = purchase_data.echo_req.passthrough;
	            elementTextContent(brief, $('#underlying').find('option:selected').text() + ' / ' + toTitleCase(Contract_Beta.contractType()[Contract_Beta.form()][purchase_passthrough.contract_type]) + (Contract_Beta.form() === 'digits' ? ' ' + purchase_passthrough.barrier : ''));

	            var is_spread = Contract_Beta.form() === 'spreads';
	            if (is_spread) {
	                $('#contract_purchase_profit_list, #contract_purchase_description_section').removeClass('gr-4 gr-8').addClass('gr-6');
	            } else {
	                $('#contract_purchase_profit_list').removeClass('gr-6').addClass('gr-4');
	                $('#contract_purchase_description_section').removeClass('gr-6').addClass('gr-8');
	            }
	            elementTextContent(heading, Content.localize().textContractConfirmationHeading);
	            elementTextContent(descr, receipt.longcode);
	            if (barrier_element) label_value(barrier_element, '', '', true);
	            [].forEach.call(document.getElementsByClassName('contract_purchase_reference'), function (ref) {
	                elementTextContent(ref, Content.localize().textRef + ' ' + receipt.transaction_id);
	            });

	            var payout_value = void 0,
	                cost_value = void 0;

	            if (passthrough.basis === 'payout') {
	                payout_value = passthrough.amount;
	                cost_value = passthrough['ask-price'];
	            } else {
	                cost_value = passthrough.amount;
	                payout_value = receipt.payout;
	            }

	            chart.hide();
	            spots.hide();

	            if (is_spread) {
	                label_value(payout, Content.localize().textStopLoss, receipt.stop_loss_level, true);
	                label_value(cost, Content.localize().textAmountPerPoint, receipt.amount_per_point);
	                label_value(profit, Content.localize().textStopProfit, receipt.stop_profit_level, true);
	            } else {
	                label_value(payout, Content.localize().textPayout, addComma(payout_value));
	                label_value(cost, Content.localize().textStake, addComma(cost_value));
	            }

	            elementTextContent(balance, Content.localize().textContractConfirmationBalance + ' ' + format_money(Client.get_value('currency'), receipt.balance_after));

	            if (show_chart) {
	                chart.show();
	            }

	            if (Contract_Beta.form() === 'digits') {
	                [].forEach.call(spots.childNodes, function (child) {
	                    elementInnerHtml(child, '&nbsp;');
	                });
	                spots.show();
	            }

	            if (Contract_Beta.form() !== 'digits' && !show_chart) {
	                button.setAttribute('contract_id', receipt.contract_id);
	                descr.show();
	                button.show();
	                $('#confirmation_message').find('.open_contract_detailsws').attr('contract_id', receipt.contract_id).removeClass('invisible');
	            } else {
	                descr.hide();
	                button.hide();
	                $('#confirmation_message').find('.open_contract_detailsws').addClass('invisible');
	            }
	        }

	        if (show_chart) {
	            var contract_sentiment = void 0;
	            if (passthrough.contract_type === 'CALL' || passthrough.contract_type === 'ASIANU') {
	                contract_sentiment = 'up';
	            } else {
	                contract_sentiment = 'down';
	            }

	            // calculate number of decimals needed to display tick-chart according to the spot
	            // value of the underlying
	            var decimal_points = 2;
	            var tick_spots = Tick.spots();
	            var tick_spot_epochs = Object.keys(tick_spots);
	            if (tick_spot_epochs.length > 0) {
	                var last_quote = tick_spots[tick_spot_epochs[0]].toString();

	                if (last_quote.indexOf('.') !== -1) {
	                    decimal_points = last_quote.split('.')[1].length;
	                }
	            }

	            var barrier = void 0;
	            if (sessionStorage.getItem('formname') === 'higherlower') {
	                barrier = passthrough.barrier;
	            }

	            WSTickDisplay_Beta.initialize({
	                symbol: passthrough.symbol,
	                barrier: barrier,
	                number_of_ticks: passthrough.duration,
	                previous_tick_epoch: receipt.start_time,
	                contract_category: sessionStorage.getItem('formname') === 'asian' ? 'asian' : 'callput',
	                display_symbol: Symbols.getName(passthrough.symbol),
	                contract_start: receipt.start_time,
	                display_decimals: decimal_points,
	                contract_sentiment: contract_sentiment,
	                price: passthrough['ask-price'],
	                payout: receipt.payout,
	                show_contract_result: 1,
	                width: $('#tick_chart').width(),
	                is_trading_page: true
	            });
	            WSTickDisplay_Beta.spots_list = {};
	        }
	    };

	    var update_spot_list = function update_spot_list() {
	        if ($('#contract_purchase_spots:hidden').length) {
	            return;
	        }

	        var duration = purchase_data.echo_req && purchase_data.echo_req.passthrough ? purchase_data.echo_req.passthrough.duration : null;

	        if (!duration) {
	            return;
	        }

	        var container = document.getElementById('contract_purchase_spots'),
	            tick_elem = document.getElementById('current_tick_number'),
	            spot_elem = document.getElementById('current_tick_spot'),
	            list_elem = document.getElementById('last_digits_list');
	        if (container) {
	            tick_elem.innerHTML = spot_elem.innerHTML = list_elem.innerHTML = '&nbsp;';
	        }
	        for (var i = 1; i <= duration; i++) {
	            var fragment = document.createElement('div');
	            fragment.classList.add('gr-grow');

	            var digit_elem = document.createElement('div');
	            digit_elem.classList.add('digit');
	            digit_elem.id = 'tick_digit_' + i;
	            elementInnerHtml(digit_elem, '&nbsp;');
	            fragment.appendChild(digit_elem);

	            var number_elem = document.createElement('div');
	            number_elem.classList.add('number');
	            elementInnerHtml(number_elem, i);
	            fragment.appendChild(number_elem);

	            list_elem.appendChild(fragment);
	        }

	        var spots2 = Tick.spots(),
	            epoches = Object.keys(spots2).sort(function (a, b) {
	            return a - b;
	        });
	        var tick_number = 0;

	        var is_win = function is_win(last_digit) {
	            var contract_type = purchase_data.echo_req.passthrough.contract_type,
	                barrier = purchase_data.echo_req.passthrough.barrier;
	            return contract_type === 'DIGITMATCH' && last_digit === barrier || contract_type === 'DIGITDIFF' && last_digit !== barrier || contract_type === 'DIGITEVEN' && last_digit % 2 === 0 || contract_type === 'DIGITODD' && last_digit % 2 || contract_type === 'DIGITOVER' && last_digit > barrier || contract_type === 'DIGITUNDER' && last_digit < barrier;
	        };
	        var last_digit = null;
	        var replace = function replace(d) {
	            last_digit = d;
	            return '<span class="' + (is_win(d) ? 'profit' : 'loss') + '">' + d + '</span>';
	        };
	        for (var s = 0; s < epoches.length; s++) {
	            var tick_d = {
	                epoch: epoches[s],
	                quote: spots2[epoches[s]]
	            };

	            if (isVisible(container) && tick_d.epoch && tick_d.epoch > purchase_data.buy.start_time) {
	                tick_number++;

	                elementTextContent(tick_elem, Content.localize().textTickResultLabel + ' ' + tick_number);
	                elementInnerHtml(spot_elem, tick_d.quote.replace(/\d$/, replace));

	                var this_digit_elem = document.getElementById('tick_digit_' + tick_number);
	                this_digit_elem.classList.add(is_win(last_digit) ? 'profit' : 'loss');
	                elementTextContent(this_digit_elem, last_digit);

	                if (last_digit && duration === 1) {
	                    var contract_status = void 0,
	                        final_price = void 0,
	                        pnl = void 0;

	                    if (is_win(last_digit)) {
	                        final_price = $('#contract_purchase_payout_value').attr('value');
	                        pnl = $('#contract_purchase_cost_value').attr('value');
	                        contract_status = Content.localize().textContractStatusWon;
	                    } else {
	                        final_price = 0;
	                        pnl = -$('#contract_purchase_cost_value').attr('value');
	                        contract_status = Content.localize().textContractStatusLost;
	                    }

	                    updatePurchaseStatus_Beta(final_price, pnl, contract_status);
	                }

	                duration--;
	                if (!duration) {
	                    purchase_data.echo_req.passthrough.duration = 0;
	                }
	            }
	        }
	    };

	    return {
	        display: display,
	        update_spot_list: update_spot_list
	    };
	}();

	module.exports = {
	    Purchase_Beta: Purchase_Beta
	};

/***/ },
/* 527 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Tick = __webpack_require__(454).Tick;
	var ViewPopupUI = __webpack_require__(448).ViewPopupUI;
	var moment = __webpack_require__(308);
	var Content = __webpack_require__(426).Content;
	var isVisible = __webpack_require__(420).isVisible;
	var addComma = __webpack_require__(441).addComma;
	var updatePurchaseStatus_Beta = __webpack_require__(456).updatePurchaseStatus_Beta;
	var label_value = __webpack_require__(456).label_value;
	var localize = __webpack_require__(423).localize;
	var Highcharts = __webpack_require__(460);
	__webpack_require__(452)(Highcharts);

	var TickDisplay_Beta = function () {
	    return {
	        initialize: function initialize(data) {
	            var $self = this;

	            // setting up globals
	            $self.number_of_ticks = parseInt(data.number_of_ticks);
	            $self.symbol = data.symbol;
	            $self.display_symbol = data.display_symbol;
	            $self.contract_start_ms = parseInt(data.contract_start * 1000);
	            $self.contract_category = data.contract_category;
	            $self.set_barrier = !$self.contract_category.match('digits');
	            $self.barrier = data.barrier;
	            $self.abs_barrier = data.abs_barrier;
	            $self.display_decimals = data.display_decimals || 2;
	            $self.show_contract_result = data.show_contract_result;
	            $self.is_trading_page = data.is_trading_page;
	            $self.contract_sentiment = data.contract_sentiment;
	            var tick_frequency = 5;

	            if (data.show_contract_result) {
	                $self.price = parseFloat(data.price);
	                $self.payout = parseFloat(data.payout);
	            }

	            var minimize = data.show_contract_result;

	            $self.set_x_indicators();
	            $self.initialize_chart({
	                plot_from: data.previous_tick_epoch * 1000,
	                plot_to: new Date((parseInt(data.contract_start) + parseInt(($self.number_of_ticks + 2) * tick_frequency)) * 1000).getTime(),
	                minimize: minimize,
	                width: data.width ? data.width : undefined
	            });
	        },
	        set_x_indicators: function set_x_indicators() {
	            var $self = this;

	            var exit_tick_index = $self.number_of_ticks - 1;
	            if ($self.contract_category.match('asian')) {
	                $self.ticks_needed = $self.number_of_ticks;
	                $self.x_indicators = {
	                    _0: { label: 'Entry Spot', id: 'start_tick' }
	                };
	                $self.x_indicators['_' + exit_tick_index] = {
	                    label: 'Exit Spot',
	                    id: 'exit_tick'
	                };
	            } else if ($self.contract_category.match('callput')) {
	                $self.ticks_needed = $self.number_of_ticks + 1;
	                $self.x_indicators = {
	                    _0: { label: 'Entry Spot', id: 'entry_tick' }
	                };
	                $self.x_indicators['_' + $self.number_of_ticks] = {
	                    label: 'Exit Spot',
	                    id: 'exit_tick'
	                };
	            } else if ($self.contract_category.match('digits')) {
	                $self.ticks_needed = $self.number_of_ticks;
	                $self.x_indicators = {
	                    _0: { label: 'Tick 1', id: 'start_tick' }
	                };
	                $self.x_indicators['_' + exit_tick_index] = {
	                    label: 'Tick ' + $self.number_of_ticks,
	                    id: 'last_tick'
	                };
	            } else {
	                $self.x_indicators = {};
	            }
	        },
	        initialize_chart: function initialize_chart(config) {
	            var $self = this,
	                is_start_on_first_tick = $self.contract_category.match('digits|asian');

	            var chart_options = {
	                chart: {
	                    type: 'line',
	                    renderTo: 'tick_chart',
	                    width: config.width ? config.width : config.minimize ? 394 : null,
	                    height: config.minimize ? 120 : null,
	                    backgroundColor: null,
	                    events: { load: $self.plot(config.plot_from, config.plot_to) },
	                    marginLeft: 20
	                },
	                credits: { enabled: false },
	                tooltip: {
	                    formatter: function formatter() {
	                        var that = this;
	                        var new_y = that.y.toFixed($self.display_decimals);
	                        var mom = moment.utc($self.applicable_ticks[that.x].epoch * 1000).format('dddd, MMM D, HH:mm:ss');
	                        return mom + '<br/>' + $self.display_symbol + ' ' + new_y;
	                    },
	                    crosshairs: [true]
	                },
	                xAxis: {
	                    type: 'linear',
	                    min: 0,
	                    max: $self.ticks_needed - 0.5,
	                    tickInterval: 1,
	                    showFirstLabel: !!is_start_on_first_tick,

	                    labels: {
	                        autoRotation: false,
	                        formatter: function formatter() {
	                            return this.value + (is_start_on_first_tick ? 1 : 0);
	                        }
	                    },
	                    crosshair: {
	                        color: '#E98024',
	                        zIndex: 1
	                    },
	                    title: {
	                        text: localize('Tick')
	                    }
	                },
	                yAxis: {
	                    opposite: false,
	                    title: '',

	                    labels: {
	                        align: 'left',
	                        x: 0
	                    }
	                },
	                series: [{
	                    data: []
	                }],
	                title: '',
	                exporting: { enabled: false, enableImages: false },
	                legend: { enabled: false }
	            };
	            // Trading page's chart
	            var show_values = function show_values(tick, time, price) {
	                $('#contract_purchase_profit_list').find('#chart-values').css('display', 'flex').end().find('#contract-values').css('display', 'none');
	                $('#chart_values_tick_value').text(tick);
	                $('#chart_values_time_value').text(time);
	                $('#chart_values_price_value').text(price);
	            };
	            if ($self.is_trading_page) {
	                $.extend(true, chart_options, {
	                    chart: {
	                        marginBottom: 25
	                    },
	                    tooltip: {
	                        style: { display: 'none' },

	                        formatter: function formatter() {
	                            var that = this,
	                                time = moment.utc($self.applicable_ticks[that.x].epoch * 1000).format('HH:mm:ss'),
	                                price = addComma(that.y, $self.display_decimals);
	                            show_values(+that.x + (is_start_on_first_tick ? 1 : 0), time, price);
	                        },
	                        events: {
	                            hide: function hide() {
	                                $('#contract_purchase_profit_list').find('#chart-values').hide().end().find(' #contract-values').show();
	                            }
	                        }
	                    },
	                    xAxis: {
	                        title: {
	                            text: ''
	                        },
	                        crosshair: {
	                            width: 30
	                        },
	                        tickWidth: 0
	                    },
	                    yAxis: {
	                        gridLineWidth: 0,
	                        labels: {
	                            enabled: false
	                        }
	                    },
	                    series: [{
	                        color: '#2a3052',
	                        lineWidth: 1
	                    }]
	                });
	            }
	            $self.chart = new Highcharts.Chart(chart_options);
	            Highcharts.setOptions({
	                lang: { thousandsSep: ',' }
	            });
	        },
	        apply_chart_background_color: function apply_chart_background_color(tick) {
	            var $self = this;
	            if (!$self.show_contract_result) {
	                return;
	            }
	            var chart_container = $('#tick_chart');
	            if ($self.contract_sentiment === 'up') {
	                if (tick.quote > $self.contract_barrier) {
	                    chart_container.css('background-color', 'rgba(46,136,54,0.198039)');
	                } else {
	                    chart_container.css('background-color', 'rgba(204,0,0,0.098039)');
	                }
	            } else if ($self.contract_sentiment === 'down') {
	                if (tick.quote < $self.contract_barrier) {
	                    chart_container.css('background-color', 'rgba(46,136,54,0.198039)');
	                } else {
	                    chart_container.css('background-color', 'rgba(204,0,0,0.098039)');
	                }
	            }
	        },
	        add_barrier: function add_barrier() {
	            var $self = this;

	            if (!$self.set_barrier) {
	                return;
	            }

	            var barrier_type = $self.contract_category.match('asian') ? 'asian' : 'static',
	                line_color = $self.is_trading_page ? '#6b8fb9' : 'green',
	                line_width = $self.is_trading_page ? 1 : 2;

	            if (barrier_type === 'static') {
	                var barrier_tick = $self.applicable_ticks[0];

	                if ($self.barrier) {
	                    var final_barrier = barrier_tick.quote + parseFloat($self.barrier);
	                    // sometimes due to rounding issues, result is 1.009999 while it should
	                    // be 1.01
	                    final_barrier = Number(Math.round(final_barrier + 'e' + $self.display_decimals) + 'e-' + $self.display_decimals);

	                    barrier_tick.quote = final_barrier;
	                } else if ($self.abs_barrier) {
	                    barrier_tick.quote = parseFloat($self.abs_barrier);
	                }

	                $self.chart.yAxis[0].addPlotLine({
	                    id: 'tick-barrier',
	                    value: barrier_tick.quote,
	                    color: line_color,
	                    width: line_width,
	                    zIndex: 2,
	                    label: {
	                        text: $self.is_trading_page ? '' : 'Barrier (' + barrier_tick.quote + ')',
	                        align: 'center'
	                    }
	                });

	                $self.contract_barrier = barrier_tick.quote;
	                $self.set_barrier = false;
	            }

	            if (barrier_type === 'asian') {
	                var total = 0;
	                for (var i = 0; i < $self.applicable_ticks.length; i++) {
	                    total += parseFloat($self.applicable_ticks[i].quote);
	                }
	                var calc_barrier = total / $self.applicable_ticks.length;
	                calc_barrier = calc_barrier.toFixed(parseInt($self.display_decimals) + 1); // round calculated barrier

	                $self.chart.yAxis[0].removePlotLine('tick-barrier');
	                $self.chart.yAxis[0].addPlotLine({
	                    id: 'tick-barrier',
	                    value: calc_barrier,
	                    color: line_color,
	                    width: line_width,
	                    zIndex: 2,
	                    label: {
	                        text: $self.is_trading_page ? '' : 'Average (' + calc_barrier + ')',
	                        align: 'center'
	                    }
	                });
	                $self.contract_barrier = calc_barrier;
	            }
	            var barrier = document.getElementById('contract_purchase_barrier');
	            if ($self.contract_barrier && barrier) {
	                label_value(barrier, Content.localize().textBarrier, addComma($self.contract_barrier, $self.display_decimals), true);
	            }
	        },
	        add: function add(indicator) {
	            var $self = this;

	            $self.chart.xAxis[0].addPlotLine({
	                value: indicator.index,
	                id: indicator.id,
	                label: { text: indicator.label, x: /start_tick|entry_tick/.test(indicator.id) ? -15 : 5 },
	                color: '#e98024',
	                width: 2,
	                zIndex: 2
	            });
	        },
	        evaluate_contract_outcome: function evaluate_contract_outcome() {
	            var $self = this;

	            if (!$self.contract_barrier) {
	                return; // can't do anything without barrier
	            }

	            var exit_tick_index = $self.applicable_ticks.length - 1;
	            var exit_spot = $self.applicable_ticks[exit_tick_index].quote;

	            if ($self.contract_sentiment === 'up') {
	                if (exit_spot > $self.contract_barrier) {
	                    $self.win();
	                } else {
	                    $self.lose();
	                }
	            } else if ($self.contract_sentiment === 'down') {
	                if (exit_spot < $self.contract_barrier) {
	                    $self.win();
	                } else {
	                    $self.lose();
	                }
	            }
	        },
	        win: function win() {
	            var $self = this;

	            var profit = $self.payout - $self.price;
	            $self.update_ui($self.payout, profit, localize('This contract won'));
	        },
	        lose: function lose() {
	            var $self = this;
	            $self.update_ui(0, -$self.price, localize('This contract lost'));
	        },
	        to_monetary_format: function to_monetary_format(number) {
	            return number.toFixed(2);
	        }
	    };
	}();

	var WSTickDisplay_Beta = Object.create(TickDisplay_Beta);
	WSTickDisplay_Beta.plot = function () {
	    var $self = this;
	    $self.contract_start_moment = moment($self.contract_start_ms).utc();
	    $self.counter = 0;
	    $self.applicable_ticks = [];
	};
	WSTickDisplay_Beta.update_ui = function (final_price, pnl, contract_status) {
	    updatePurchaseStatus_Beta(final_price, final_price - pnl, contract_status);
	};
	WSTickDisplay_Beta.socketSend = function (req) {
	    if (!req.hasOwnProperty('passthrough')) {
	        req.passthrough = {};
	    }
	    req.passthrough.dispatch_to = 'ViewTickDisplayWS';
	    BinarySocket.send(req);
	};
	WSTickDisplay_Beta.dispatch = function (data) {
	    var $self = this;
	    var chart = document.getElementById('tick_chart');

	    if (!chart || !isVisible(chart) || !data || !data.tick && !data.history) {
	        return;
	    }

	    if (window.subscribe && data.tick && document.getElementById('sell_content_wrapper')) {
	        if (data.echo_req.hasOwnProperty('passthrough') && data.echo_req.passthrough.dispatch_to === 'ViewChartWS') return;
	        window.responseID = data.tick.id;
	        ViewPopupUI.storeSubscriptionID(window.responseID);
	    }

	    var epoches = void 0,
	        spots2 = void 0,
	        display_decimals = void 0;
	    if (document.getElementById('sell_content_wrapper')) {
	        if (data.tick && document.getElementById('sell_content_wrapper')) {
	            Tick.details(data);
	            if (!display_decimals) {
	                display_decimals = data.tick.quote.split('.')[1].length || 2;
	            }
	        } else if (data.history && document.getElementById('sell_content_wrapper')) {
	            if (!display_decimals) {
	                display_decimals = data.history.prices[0].split('.')[1].length || 2;
	            }
	        }
	        if (!window.tick_init || window.tick_init === '') {
	            WSTickDisplay_Beta.initialize({
	                symbol: window.tick_underlying,
	                number_of_ticks: window.tick_count,
	                contract_category: /asian/i.test(window.tick_shortcode) ? 'asian' : /digit/i.test(window.tick_shortcode) ? 'digits' : 'callput',
	                longcode: window.tick_longcode,
	                display_symbol: window.tick_display_name,
	                contract_start: window.tick_date_start,
	                abs_barrier: window.abs_barrier,
	                display_decimals: display_decimals,
	                contract_sentiment: window.contract_type === 'CALL' || window.contract_type === 'ASIANU' ? 'up' : 'down',
	                show_contract_result: 0
	            });
	            WSTickDisplay_Beta.spots_list = {};
	            window.tick_init = 'initialized';
	        }
	    }
	    if (data.tick) {
	        spots2 = Tick.spots();
	        epoches = Object.keys(spots2).sort(function (a, b) {
	            return a - b;
	        });
	    } else if (data.history) {
	        epoches = data.history.times;
	    }
	    if ($self.applicable_ticks && $self.ticks_needed && $self.applicable_ticks.length >= $self.ticks_needed) {
	        $self.evaluate_contract_outcome();
	        if (window.responseID) {
	            BinarySocket.send({ forget: window.responseID });
	        }
	    } else {
	        for (var d = 0; d < epoches.length; d++) {
	            var tick = void 0;
	            if (data.tick) {
	                tick = {
	                    epoch: parseInt(epoches[d]),
	                    quote: parseFloat(spots2[epoches[d]])
	                };
	            } else if (data.history) {
	                tick = {
	                    epoch: parseInt(data.history.times[d]),
	                    quote: parseFloat(data.history.prices[d])
	                };
	            }
	            if (tick.epoch > $self.contract_start_moment.unix() && !$self.spots_list[tick.epoch]) {
	                if (!$self.chart) return;
	                if (!$self.chart.series) return;
	                $self.chart.series[0].addPoint([$self.counter, tick.quote], true, false);
	                $self.applicable_ticks.push(tick);
	                $self.spots_list[tick.epoch] = tick.quote;
	                var indicator_key = '_' + $self.counter;
	                if (typeof $self.x_indicators[indicator_key] !== 'undefined') {
	                    $self.x_indicators[indicator_key].index = $self.counter;
	                    $self.add($self.x_indicators[indicator_key]);
	                }
	                $self.add_barrier();
	                $self.apply_chart_background_color(tick);
	                $self.counter++;
	            }
	        }

	        if ($self.is_trading_page) {
	            var is_up = $self.contract_sentiment === 'up',
	                min = $self.chart.yAxis[0].getExtremes().min,
	                max = $self.chart.yAxis[0].getExtremes().max,
	                barrier = $self.contract_barrier;
	            $self.chart.yAxis[0].removePlotBand('win-area');
	            $self.chart.yAxis[0].addPlotBand({
	                id: 'win-area',
	                from: is_up ? barrier : min,
	                to: is_up ? max : barrier,
	                color: '#f5f8fb'
	            });
	            $self.chart.yAxis[0].removePlotBand('lose-area');
	            $self.chart.yAxis[0].addPlotBand({
	                id: 'lose-area',
	                from: is_up ? min : barrier,
	                to: is_up ? barrier : max,
	                color: '#ffffff'
	            });
	        }
	    }
	};
	WSTickDisplay_Beta.updateChart = function (data, contract) {
	    window.subscribe = 'false';
	    if (contract) {
	        window.tick_underlying = contract.underlying;
	        window.tick_count = contract.tick_count;
	        window.tick_longcode = contract.longcode;
	        window.tick_display_name = contract.display_name;
	        window.tick_date_start = contract.date_start;
	        window.abs_barrier = contract.barrier;
	        window.tick_shortcode = contract.shortcode;
	        window.contract_type = contract.contract_type;
	        window.tick_init = '';
	        var request = {
	            ticks_history: contract.underlying,
	            start: contract.date_start,
	            end: 'latest'
	        };
	        if (contract.current_spot_time < contract.date_expiry) {
	            request.subscribe = 1;
	            window.subscribe = 'true';
	        } else {
	            request.end = contract.date_expiry;
	        }
	        WSTickDisplay_Beta.socketSend(request);
	    } else {
	        WSTickDisplay_Beta.dispatch(data);
	    }
	};

	// add tooltip events to highcharts
	Highcharts.wrap(Highcharts.Tooltip.prototype, 'hide', function (proceed) {
	    var tooltip = this.chart.options.tooltip;

	    // Run the original proceed method
	    proceed.apply(this, Array.prototype.slice.call(arguments, 1));

	    if (!this.isHidden && tooltip.events && tooltip.events.hide) {
	        tooltip.events.hide();
	    }
	});

	Highcharts.wrap(Highcharts.Tooltip.prototype, 'refresh', function (proceed) {
	    var tooltip = this.chart.options.tooltip;

	    // Run the original proceed method
	    proceed.apply(this, Array.prototype.slice.call(arguments, 1));

	    if (tooltip.events && tooltip.events.show) {
	        tooltip.events.show(this.chart.hoverPoints);
	    }
	});

	module.exports = {
	    WSTickDisplay_Beta: WSTickDisplay_Beta
	};

/***/ },
/* 528 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Contract_Beta = __webpack_require__(480).Contract_Beta;
	var Durations_Beta = __webpack_require__(523).Durations;
	var Defaults = __webpack_require__(457).Defaults;
	var getStartDateNode = __webpack_require__(455).getStartDateNode;
	var moment = __webpack_require__(308);
	var Content = __webpack_require__(426).Content;
	var State = __webpack_require__(304).State;

	/*
	 * Handles start time display
	 *
	 * It process `Contract.startDates` in case of forward
	 * starting contracts and populate the start time select
	 * box
	 */

	var StartDates_Beta = function () {
	    'use strict';

	    var hasNow = 0;
	    State.remove('is_start_dates_displayed');

	    var compareStartDate = function compareStartDate(a, b) {
	        return a.date < b.date ? -1 : a.date > b.date ? 1 : 0;
	    };

	    var displayStartDates = function displayStartDates() {
	        var startDates = Contract_Beta.startDates();

	        if (startDates && startDates.list && startDates.list.length) {
	            (function () {
	                var target = getStartDateNode(),
	                    fragment = document.createDocumentFragment(),
	                    row = document.getElementById('date_start_row');
	                var option = void 0,
	                    content = void 0;

	                row.style.display = 'flex';

	                while (target && target.firstChild) {
	                    target.removeChild(target.firstChild);
	                }

	                if (startDates.has_spot) {
	                    option = document.createElement('option');
	                    content = document.createTextNode(Content.localize().textNow);
	                    option.setAttribute('value', 'now');
	                    $('#date_start').removeClass('light-yellow-background');
	                    option.appendChild(content);
	                    fragment.appendChild(option);
	                    hasNow = 1;
	                } else {
	                    hasNow = 0;
	                }

	                startDates.list.sort(compareStartDate);

	                var first = void 0;
	                startDates.list.forEach(function (start_date) {
	                    var a = moment.unix(start_date.open).utc();
	                    var b = moment.unix(start_date.close).utc();

	                    var ROUNDING = 5 * 60 * 1000;
	                    var start = moment.utc();

	                    if (moment(start).isAfter(moment(a))) {
	                        a = start;
	                    }

	                    a = moment(Math.ceil(+a / ROUNDING) * ROUNDING).utc();

	                    while (a.isBefore(b)) {
	                        if (a.unix() - start.unix() > 5 * 60) {
	                            option = document.createElement('option');
	                            option.setAttribute('value', a.utc().unix());
	                            if (typeof first === 'undefined' && !hasNow) {
	                                first = a.utc().unix();
	                            }
	                            content = document.createTextNode(a.format('HH:mm ddd').replace(' ', ' GMT, '));
	                            if (option.value === Defaults.get('date_start')) {
	                                option.setAttribute('selected', 'selected');
	                            }
	                            option.appendChild(content);
	                            fragment.appendChild(option);
	                        }
	                        a.add(5, 'minutes');
	                    }
	                });
	                target.appendChild(fragment);
	                Defaults.set('date_start', target.value);
	                State.set('is_start_dates_displayed', true);
	                if (first) {
	                    Durations_Beta.onStartDateChange(first);
	                }
	            })();
	        } else {
	            State.remove('is_start_dates_displayed');
	            document.getElementById('date_start_row').style.display = 'none';
	            Defaults.remove('date_start');
	        }
	    };

	    return {
	        display: displayStartDates,
	        disable: function disable() {
	            getStartDateNode().setAttribute('disabled', 'disabled');
	        },
	        enable: function enable() {
	            getStartDateNode().removeAttribute('disabled');
	        }
	    };
	}();

	module.exports = {
	    StartDates_Beta: StartDates_Beta
	};

/***/ },
/* 529 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var TradingAnalysis_Beta = __webpack_require__(513).TradingAnalysis_Beta;
	var Purchase_Beta = __webpack_require__(526).Purchase_Beta;
	var processActiveSymbols_Beta = __webpack_require__(525).processActiveSymbols_Beta;
	var processContract_Beta = __webpack_require__(525).processContract_Beta;
	var forgetTradingStreams_Beta = __webpack_require__(525).forgetTradingStreams_Beta;
	var processTick_Beta = __webpack_require__(525).processTick_Beta;
	var processProposal_Beta = __webpack_require__(525).processProposal_Beta;
	var processTradingTimes_Beta = __webpack_require__(525).processTradingTimes_Beta;
	var displayCurrencies = __webpack_require__(469).displayCurrencies;
	var Notifications = __webpack_require__(458).Notifications;
	var Symbols = __webpack_require__(459).Symbols;
	var Tick = __webpack_require__(454).Tick;
	var AssetIndexUI = __webpack_require__(514).AssetIndexUI;
	var MarketTimesUI = __webpack_require__(517).MarketTimesUI;
	var PortfolioWS = __webpack_require__(462).PortfolioWS;
	var ProfitTableWS = __webpack_require__(498).ProfitTableWS;
	var StatementWS = __webpack_require__(504).StatementWS;
	var State = __webpack_require__(304).State;
	var GTM = __webpack_require__(430).GTM;
	var Client = __webpack_require__(305).Client;

	/*
	 * This Message object process the response from server and fire
	 * events based on type of response
	 */
	var Message_Beta = function () {
	    'use strict';

	    var process = function process(msg) {
	        var response = JSON.parse(msg.data);
	        if (!State.get('is_beta_trading')) {
	            forgetTradingStreams_Beta();
	            return;
	        }
	        if (response) {
	            var type = response.msg_type;
	            if (type === 'active_symbols') {
	                processActiveSymbols_Beta(response);
	                AssetIndexUI.setActiveSymbols(response);
	                MarketTimesUI.setActiveSymbols(response);
	            } else if (type === 'contracts_for') {
	                Notifications.hide('CONNECTION_ERROR');
	                processContract_Beta(response);
	                window.contracts_for = response;
	            } else if (type === 'payout_currencies' && response.hasOwnProperty('echo_req') && (!response.echo_req.hasOwnProperty('passthrough') || !response.echo_req.passthrough.hasOwnProperty('handler'))) {
	                Client.set_value('currencies', response.payout_currencies.join(','));
	                displayCurrencies();
	                Symbols.getSymbols(1);
	            } else if (type === 'proposal') {
	                processProposal_Beta(response);
	            } else if (type === 'buy') {
	                Purchase_Beta.display(response);
	                GTM.push_purchase_data(response);
	            } else if (type === 'tick') {
	                processTick_Beta(response);
	            } else if (type === 'history') {
	                var digit_info = TradingAnalysis_Beta.digit_info();
	                if (response.req_id === 1 || response.req_id === 2) {
	                    digit_info.show_chart(response.echo_req.ticks_history, response.history.prices);
	                } else {
	                    Tick.processHistory(response);
	                }
	            } else if (type === 'asset_index') {
	                AssetIndexUI.setAssetIndex(response);
	            } else if (type === 'trading_times') {
	                processTradingTimes_Beta(response);
	                MarketTimesUI.setTradingTimes(response);
	            } else if (type === 'statement') {
	                StatementWS.statementHandler(response);
	            } else if (type === 'profit_table') {
	                ProfitTableWS.profitTableHandler(response);
	            } else if (type === 'error') {
	                $('.error-msg').text(response.error.message);
	            } else if (type === 'portfolio') {
	                PortfolioWS.updatePortfolio(response);
	            } else if (type === 'proposal_open_contract') {
	                PortfolioWS.updateIndicative(response);
	            } else if (type === 'transaction') {
	                PortfolioWS.transactionResponseHandler(response);
	            } else if (type === 'oauth_apps') {
	                PortfolioWS.updateOAuthApps(response);
	            }
	        } else {
	            console.log('some error occured');
	        }
	    };

	    return {
	        process: process
	    };
	}();

	module.exports = {
	    Message_Beta: Message_Beta
	};

/***/ },
/* 530 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;"use strict";

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	/**
	 * Copyright Marc J. Schmidt. See the LICENSE file at the top-level
	 * directory of this distribution and at
	 * https://github.com/marcj/css-element-queries/blob/master/LICENSE.
	 */
	;
	(function (root, factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	    } else if ((typeof exports === "undefined" ? "undefined" : _typeof(exports)) === "object") {
	        module.exports = factory();
	    } else {
	        root.ResizeSensor = factory();
	    }
	})(undefined, function () {

	    // Only used for the dirty checking, so the event callback count is limted to max 1 call per fps per sensor.
	    // In combination with the event based resize sensor this saves cpu time, because the sensor is too fast and
	    // would generate too many unnecessary events.
	    var requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || function (fn) {
	        return window.setTimeout(fn, 20);
	    };

	    /**
	     * Iterate over each of the provided element(s).
	     *
	     * @param {HTMLElement|HTMLElement[]} elements
	     * @param {Function}                  callback
	     */
	    function forEachElement(elements, callback) {
	        var elementsType = Object.prototype.toString.call(elements);
	        var isCollectionTyped = '[object Array]' === elementsType || '[object NodeList]' === elementsType || '[object HTMLCollection]' === elementsType || 'undefined' !== typeof jQuery && elements instanceof jQuery //jquery
	        || 'undefined' !== typeof Elements && elements instanceof Elements //mootools
	        ;
	        var i = 0,
	            j = elements.length;
	        if (isCollectionTyped) {
	            for (; i < j; i++) {
	                callback(elements[i]);
	            }
	        } else {
	            callback(elements);
	        }
	    }

	    /**
	     * Class for dimension change detection.
	     *
	     * @param {Element|Element[]|Elements|jQuery} element
	     * @param {Function} callback
	     *
	     * @constructor
	     */
	    var ResizeSensor = function ResizeSensor(element, callback) {
	        /**
	         *
	         * @constructor
	         */
	        function EventQueue() {
	            var q = [];
	            this.add = function (ev) {
	                q.push(ev);
	            };

	            var i, j;
	            this.call = function () {
	                for (i = 0, j = q.length; i < j; i++) {
	                    q[i].call();
	                }
	            };

	            this.remove = function (ev) {
	                var newQueue = [];
	                for (i = 0, j = q.length; i < j; i++) {
	                    if (q[i] !== ev) newQueue.push(q[i]);
	                }
	                q = newQueue;
	            };

	            this.length = function () {
	                return q.length;
	            };
	        }

	        /**
	         * @param {HTMLElement} element
	         * @param {String}      prop
	         * @returns {String|Number}
	         */
	        function getComputedStyle(element, prop) {
	            if (element.currentStyle) {
	                return element.currentStyle[prop];
	            } else if (window.getComputedStyle) {
	                return window.getComputedStyle(element, null).getPropertyValue(prop);
	            } else {
	                return element.style[prop];
	            }
	        }

	        /**
	         *
	         * @param {HTMLElement} element
	         * @param {Function}    resized
	         */
	        function attachResizeEvent(element, resized) {
	            if (!element.resizedAttached) {
	                element.resizedAttached = new EventQueue();
	                element.resizedAttached.add(resized);
	            } else if (element.resizedAttached) {
	                element.resizedAttached.add(resized);
	                return;
	            }

	            element.resizeSensor = document.createElement('div');
	            element.resizeSensor.className = 'resize-sensor';
	            var style = 'position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;';
	            var styleChild = 'position: absolute; left: 0; top: 0; transition: 0s;';

	            element.resizeSensor.style.cssText = style;
	            element.resizeSensor.innerHTML = '<div class="resize-sensor-expand" style="' + style + '">' + '<div style="' + styleChild + '"></div>' + '</div>' + '<div class="resize-sensor-shrink" style="' + style + '">' + '<div style="' + styleChild + ' width: 200%; height: 200%"></div>' + '</div>';
	            element.appendChild(element.resizeSensor);

	            if (getComputedStyle(element, 'position') == 'static') {
	                element.style.position = 'relative';
	            }

	            var expand = element.resizeSensor.childNodes[0];
	            var expandChild = expand.childNodes[0];
	            var shrink = element.resizeSensor.childNodes[1];

	            var reset = function reset() {
	                expandChild.style.width = 100000 + 'px';
	                expandChild.style.height = 100000 + 'px';

	                expand.scrollLeft = 100000;
	                expand.scrollTop = 100000;

	                shrink.scrollLeft = 100000;
	                shrink.scrollTop = 100000;
	            };

	            reset();
	            var dirty = false;

	            var dirtyChecking = function dirtyChecking() {
	                if (!element.resizedAttached) return;

	                if (dirty) {
	                    element.resizedAttached.call();
	                    dirty = false;
	                }

	                requestAnimationFrame(dirtyChecking);
	            };

	            requestAnimationFrame(dirtyChecking);
	            var lastWidth, lastHeight;
	            var cachedWidth, cachedHeight; //useful to not query offsetWidth twice

	            var onScroll = function onScroll() {
	                if ((cachedWidth = element.offsetWidth) != lastWidth || (cachedHeight = element.offsetHeight) != lastHeight) {
	                    dirty = true;

	                    lastWidth = cachedWidth;
	                    lastHeight = cachedHeight;
	                }
	                reset();
	            };

	            var addEvent = function addEvent(el, name, cb) {
	                if (el.attachEvent) {
	                    el.attachEvent('on' + name, cb);
	                } else {
	                    el.addEventListener(name, cb);
	                }
	            };

	            addEvent(expand, 'scroll', onScroll);
	            addEvent(shrink, 'scroll', onScroll);
	        }

	        forEachElement(element, function (elem) {
	            attachResizeEvent(elem, callback);
	        });

	        this.detach = function (ev) {
	            ResizeSensor.detach(element, ev);
	        };
	    };

	    ResizeSensor.detach = function (element, ev) {
	        forEachElement(element, function (elem) {
	            if (elem.resizedAttached && typeof ev == "function") {
	                elem.resizedAttached.remove(ev);
	                if (elem.resizedAttached.length()) return;
	            }
	            if (elem.resizeSensor) {
	                if (elem.contains(elem.resizeSensor)) {
	                    elem.removeChild(elem.resizeSensor);
	                }
	                delete elem.resizeSensor;
	                delete elem.resizedAttached;
	            }
	        });
	    };

	    return ResizeSensor;
	});

/***/ },
/* 531 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var MBContract = __webpack_require__(443).MBContract;
	var MBDisplayCurrencies = __webpack_require__(532).MBDisplayCurrencies;
	var MBTradingEvents = __webpack_require__(533).MBTradingEvents;
	var MBMessage = __webpack_require__(536).MBMessage;
	var MBSymbols = __webpack_require__(445).MBSymbols;
	var TradingAnalysis = __webpack_require__(466).TradingAnalysis;
	var forgetTradingStreams = __webpack_require__(476).forgetTradingStreams;
	var JapanPortfolio = __webpack_require__(468).JapanPortfolio;
	var State = __webpack_require__(304).State;
	var Content = __webpack_require__(426).Content;
	var MBProcess = __webpack_require__(534).MBProcess;
	var MBNotifications = __webpack_require__(447).MBNotifications;
	var MBPrice = __webpack_require__(442).MBPrice;
	var chartFrameCleanup = __webpack_require__(456).chartFrameCleanup;
	var localize = __webpack_require__(423).localize;

	var MBTradePage = function () {
	    var events_initialized = 0;
	    State.remove('is_mb_trading');

	    var onLoad = function onLoad() {
	        State.set('is_mb_trading', true);
	        if (sessionStorage.getItem('currencies')) {
	            MBDisplayCurrencies('', false);
	        }
	        BinarySocket.init({
	            onmessage: function onmessage(msg) {
	                MBMessage.process(msg);
	            },
	            onopen: function onopen() {
	                MBNotifications.hide('CONNECTION_ERROR');
	            }
	        });

	        if (events_initialized === 0) {
	            events_initialized = 1;
	            MBTradingEvents.init();
	        }
	        Content.populate();

	        if (sessionStorage.getItem('currencies')) {
	            MBDisplayCurrencies('', false);
	            MBSymbols.getSymbols(1);
	        } else {
	            BinarySocket.send({ payout_currencies: 1 });
	        }

	        TradingAnalysis.bindAnalysisTabEvent();
	        $('#tab_portfolio').find('a').text(localize('Portfolio'));
	        $('#tab_graph').find('a').text(localize('Chart'));
	        $('#tab_explanation').find('a').text(localize('Explanation'));
	        $('#remaining-time-label').text(localize('Remaining time'));
	        window.chartAllowed = true;
	    };

	    var reload = function reload() {
	        window.location.reload();
	    };

	    var onUnload = function onUnload() {
	        chartFrameCleanup();
	        window.chartAllowed = false;
	        JapanPortfolio.hide();
	        State.remove('is_mb_trading');
	        events_initialized = 0;
	        MBContract.onUnload();
	        MBPrice.onUnload();
	        MBProcess.onUnload();
	        forgetTradingStreams();
	        BinarySocket.clear();
	    };

	    var onDisconnect = function onDisconnect() {
	        MBPrice.showPriceOverlay();
	        chartFrameCleanup();
	        onLoad();
	    };

	    return {
	        onLoad: onLoad,
	        reload: reload,
	        onUnload: onUnload,
	        onDisconnect: onDisconnect
	    };
	}();

	module.exports = {
	    MBTradePage: MBTradePage
	};

/***/ },
/* 532 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var format_currency = __webpack_require__(440).format_currency;
	var MBDefaults = __webpack_require__(444).MBDefaults;
	var japanese_client = __webpack_require__(307).japanese_client;
	var State = __webpack_require__(304).State;
	var Client = __webpack_require__(305).Client;

	/*
	 * Handles currency display
	 *
	 * It process 'socket.send({payout_currencies:1})` response
	 * and display them
	 */
	function MBDisplayCurrencies(selected, showClass) {
	    'use strict';

	    var target = document.getElementById('currency'),
	        fragment = document.createDocumentFragment(),
	        currencies = Client.get_value('currencies').split(',');

	    if (!target) {
	        return;
	    }

	    while (target && target.firstChild) {
	        target.removeChild(target.firstChild);
	    }

	    if (currencies.length > 1 && !japanese_client()) {
	        currencies.forEach(function (currency) {
	            var option = document.createElement('option'),
	                content = document.createTextNode(currency);

	            option.setAttribute('value', currency);
	            /* if (selected && selected == key) {
	                option.setAttribute('selected', 'selected');
	            }*/

	            option.appendChild(content);
	            fragment.appendChild(option);
	        });

	        target.appendChild(fragment);
	        MBDefaults.set('currency', target.value);
	    } else {
	        $('#currency').replaceWith('<span id="' + target.getAttribute('id') + '" class="' + (showClass ? target.getAttribute('class') : '') + '" value="' + currencies[0] + '">' + (State.get('is_mb_trading') && japanese_client() ? '✕' : format_currency(currencies[0])) + '</span>');
	        if ($('.payout-mult:visible').length === 0) $('#payout').width(40); // wider when there is free space
	        MBDefaults.set('currency', currencies[0]);
	    }
	}

	module.exports = {
	    MBDisplayCurrencies: MBDisplayCurrencies
	};

/***/ },
/* 533 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var MBContract = __webpack_require__(443).MBContract;
	var MBDefaults = __webpack_require__(444).MBDefaults;
	var MBNotifications = __webpack_require__(447).MBNotifications;
	var MBProcess = __webpack_require__(534).MBProcess;
	var MBTick = __webpack_require__(535).MBTick;
	var TradingAnalysis = __webpack_require__(466).TradingAnalysis;
	var japanese_client = __webpack_require__(307).japanese_client;
	var debounce = __webpack_require__(456).debounce;
	var processForgetTicks = __webpack_require__(476).processForgetTicks;

	/*
	 * TradingEvents object contains all the event handler function required for
	 * websocket trading page
	 *
	 * We need it as object so that we can call TradingEvent.init() only on trading
	 * page for pjax to work else it will fire on all pages
	 *
	 */
	var MBTradingEvents = function () {
	    'use strict';

	    var initiate = function initiate() {
	        /*
	         * attach event to underlying change, event need to request new contract details and price
	         */
	        var underlyingElement = document.getElementById('underlying');
	        if (underlyingElement) {
	            underlyingElement.addEventListener('change', function (e) {
	                if (e.target) {
	                    // chartFrameSource();
	                    // showFormOverlay();
	                    // showPriceOverlay();
	                    if (e.target.selectedIndex < 0) {
	                        e.target.selectedIndex = 0;
	                    }
	                    var underlying = e.target.value;
	                    MBDefaults.set('underlying', underlying);
	                    MBNotifications.hide('SYMBOL_INACTIVE');

	                    MBTick.clean();

	                    MBTick.updateWarmChart();

	                    MBContract.getContracts(underlying);

	                    // forget the old tick id i.e. close the old tick stream
	                    processForgetTicks();
	                    // get ticks for current underlying
	                    MBTick.request(underlying);
	                    MBContract.displayDescriptions();
	                }
	            });
	        }

	        var categoryElement = document.getElementById('category');
	        if (categoryElement) {
	            categoryElement.addEventListener('change', function (e) {
	                MBDefaults.set('category', e.target.value);
	                MBContract.populatePeriods('rebuild');
	                MBProcess.processPriceRequest();
	                TradingAnalysis.request();
	            });
	        }

	        var periodElement = document.getElementById('period');
	        if (periodElement) {
	            periodElement.addEventListener('change', function (e) {
	                MBDefaults.set('period', e.target.value);
	                MBProcess.processPriceRequest();
	                $('.countdown-timer').removeClass('alert');
	                MBContract.displayRemainingTime('recalculate');
	                MBContract.displayDescriptions();
	            });
	        }

	        var payoutOnKeypress = function payoutOnKeypress(ev) {
	            var key = ev.keyCode,
	                char = String.fromCharCode(ev.which);
	            var isOK = true;
	            if (char === '.' && ev.target.value.indexOf(char) >= 0 || !/[0-9\.]/.test(char) && [8, 37, 39, 46].indexOf(key) < 0 || // delete, backspace, arrow keys
	            /['%]/.test(char)) {
	                // similarity to arrows key code in some browsers
	                isOK = false;
	            }
	            if (japanese_client()) {
	                var result = payoutElement.value.substring(0, ev.target.selectionStart) + char + payoutElement.value.substring(ev.target.selectionEnd);
	                if (char === '.' || result[0] === '0' || +result < 1 || +result > 100) {
	                    isOK = false;
	                }
	            }

	            if (!isOK) {
	                ev.returnValue = false;
	                ev.preventDefault();
	            }
	        };

	        var payoutElement = document.getElementById('payout');
	        if (payoutElement) {
	            if (!payoutElement.value) {
	                var payout_def = MBDefaults.get('payout') || (japanese_client() ? 1 : 10);
	                payoutElement.value = payout_def;
	                MBDefaults.set('payout', payout_def);
	            }
	            payoutElement.addEventListener('keypress', payoutOnKeypress);
	            payoutElement.addEventListener('input', debounce(function (e) {
	                var payout = e.target.value;
	                if (japanese_client()) {
	                    var $payoutElement = $('#payout'),
	                        $tableElement = $('.japan-table');
	                    if (payout < 1 || payout > 100 || isNaN(payout)) {
	                        $payoutElement.addClass('error-field');
	                        $tableElement.addClass('invisible');
	                        return false;
	                    }
	                    $payoutElement.removeClass('error-field');
	                    $tableElement.removeClass('invisible');
	                } else {
	                    payout = payout.replace(/[^0-9.]/g, '');
	                    if (isStandardFloat(payout)) {
	                        payout = parseFloat(payout).toFixed(2);
	                    }
	                    e.target.value = payout;
	                }
	                MBDefaults.set('payout', payout);
	                MBProcess.processPriceRequest();
	                MBContract.displayDescriptions();
	                return true;
	            }));
	            payoutElement.addEventListener('click', function () {
	                this.select();
	            });
	        }

	        // For verifying there are 2 digits after decimal
	        var isStandardFloat = function isStandardFloat(value) {
	            return !isNaN(value) && value % 1 !== 0 && (+parseFloat(value)).toFixed(10).replace(/^-?\d*\.?|0+$/g, '').length > 2;
	        };

	        var currencyElement = document.getElementById('currency');
	        if (currencyElement) {
	            currencyElement.addEventListener('change', function () {
	                MBProcess.processPriceRequest();
	                MBContract.displayDescriptions();
	            });
	        }
	    };

	    return {
	        init: initiate
	    };
	}();

	module.exports = {
	    MBTradingEvents: MBTradingEvents
	};

/***/ },
/* 534 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var MBContract = __webpack_require__(443).MBContract;
	var MBDefaults = __webpack_require__(444).MBDefaults;
	var MBNotifications = __webpack_require__(447).MBNotifications;
	var MBPrice = __webpack_require__(442).MBPrice;
	var MBSymbols = __webpack_require__(445).MBSymbols;
	var MBTick = __webpack_require__(535).MBTick;
	var TradingAnalysis = __webpack_require__(466).TradingAnalysis;
	var japanese_client = __webpack_require__(307).japanese_client;
	var displayUnderlyings = __webpack_require__(456).displayUnderlyings;
	var showFormOverlay = __webpack_require__(456).showFormOverlay;
	var processForgetTicks = __webpack_require__(476).processForgetTicks;
	var localize = __webpack_require__(423).localize;

	var MBProcess = function () {
	    var market_status = '',
	        symbols_timeout = void 0;
	    /*
	     * This function processes the active symbols to get markets
	     * and underlying list
	     */
	    var processActiveSymbols = function processActiveSymbols(data) {
	        'use strict';

	        if (data.hasOwnProperty('error')) {
	            MBNotifications.show({ text: data.error.message, uid: 'ACTIVE_SYMBOLS' });
	            return;
	        }

	        // populate the Symbols object
	        MBSymbols.details(data);

	        var market = 'major_pairs',
	            symbols_list = MBSymbols.underlyings()[market],
	            update_page = MBSymbols.need_page_update();
	        var symbol = MBDefaults.get('underlying');

	        if (update_page && (!symbol || !symbols_list[symbol])) {
	            symbol = undefined;
	        }
	        // check if all symbols are inactive
	        var is_market_closed = true;
	        Object.keys(symbols_list).forEach(function (s) {
	            if (symbols_list[s].is_active) {
	                is_market_closed = false;
	            }
	        });
	        clearSymbolTimeout();
	        if (is_market_closed) {
	            handleMarketClosed();
	        } else {
	            handleMarketOpen();
	            displayUnderlyings('underlying', symbols_list, symbol);

	            if (symbol && !symbols_list[symbol].is_active) {
	                MBNotifications.show({ text: localize('This symbol is not active. Please try another symbol.'), uid: 'SYMBOL_INACTIVE' });
	            } else if (update_page) {
	                MBProcess.processMarketUnderlying();
	            }
	        }
	    };

	    var handleMarketClosed = function handleMarketClosed() {
	        $('.japan-form, .japan-table, #trading_bottom_content').addClass('invisible');
	        MBNotifications.show({ text: localize('Market is closed. Please try again later.'), uid: 'MARKET_CLOSED' });
	        symbols_timeout = setTimeout(function () {
	            MBSymbols.getSymbols(1);
	        }, 30000);
	    };

	    var handleMarketOpen = function handleMarketOpen() {
	        $('.japan-form, .japan-table, #trading_bottom_content').removeClass('invisible');
	        MBNotifications.hide('MARKET_CLOSED');
	    };

	    var clearSymbolTimeout = function clearSymbolTimeout() {
	        clearTimeout(symbols_timeout);
	    };

	    /*
	     * Function to call when underlying has changed
	     */
	    var processMarketUnderlying = function processMarketUnderlying() {
	        'use strict';

	        var underlyingElement = document.getElementById('underlying');
	        if (!underlyingElement) {
	            return;
	        }

	        if (underlyingElement.selectedIndex < 0) {
	            underlyingElement.selectedIndex = 0;
	        }
	        var underlying = underlyingElement.value;
	        MBDefaults.set('underlying', underlying);

	        showFormOverlay();

	        // forget the old tick id i.e. close the old tick stream
	        processForgetTicks();
	        // get ticks for current underlying
	        MBTick.request(underlying);

	        MBTick.clean();

	        MBTick.updateWarmChart();

	        BinarySocket.clearTimeouts();

	        MBContract.getContracts(underlying);
	    };

	    /*
	     * Function to process ticks stream
	     */
	    var processTick = function processTick(tick) {
	        'use strict';

	        if (tick.hasOwnProperty('error')) {
	            MBNotifications.show({ text: tick.error.message, uid: 'TICK_ERROR' });
	            return;
	        }
	        var symbol = MBDefaults.get('underlying');
	        if (tick.echo_req.ticks === symbol || tick.tick && tick.tick.symbol === symbol) {
	            MBTick.details(tick);
	            MBTick.display();
	            MBTick.updateWarmChart();
	        }
	    };

	    /*
	     * Function to display contract form for current underlying
	     */
	    var processContract = function processContract(contracts) {
	        'use strict';

	        if (contracts.hasOwnProperty('error')) {
	            MBNotifications.show({ text: contracts.error.message, uid: contracts.error.code });
	            return;
	        }

	        window.chartAllowed = !(contracts.contracts_for && contracts.contracts_for.feed_license && contracts.contracts_for.feed_license === 'chartonly');

	        checkMarketStatus(contracts.contracts_for.close);

	        var noRebuild = contracts.hasOwnProperty('passthrough') && contracts.passthrough.hasOwnProperty('action') && contracts.passthrough.action === 'no-proposal';
	        MBContract.populateOptions(noRebuild ? null : 'rebuild');
	        if (noRebuild) {
	            processExpiredBarriers();
	            return;
	        }
	        processPriceRequest();
	        TradingAnalysis.request();
	    };

	    var checkMarketStatus = function checkMarketStatus(close) {
	        var now = window.time.unix();

	        // if market is closed, else if market is open
	        if (now > close) {
	            if (market_status === 'open') {
	                handleMarketClosed();
	            }
	            market_status = 'closed';
	        } else {
	            if (market_status === 'closed') {
	                MBSymbols.getSymbols(1);
	                handleMarketOpen();
	            }
	            market_status = 'open';
	        }
	    };

	    var processForgetProposals = function processForgetProposals() {
	        'use strict';

	        MBPrice.showPriceOverlay();
	        BinarySocket.send({
	            forget_all: 'proposal'
	        });
	        MBPrice.cleanup();
	    };

	    var processPriceRequest = function processPriceRequest() {
	        'use strict';

	        MBPrice.increaseReqId();
	        processForgetProposals();
	        MBPrice.showPriceOverlay();
	        var available_contracts = MBContract.getCurrentContracts(),
	            durations = MBDefaults.get('period').split('_');
	        var req = {
	            proposal: 1,
	            subscribe: 1,
	            basis: 'payout',
	            amount: japanese_client() ? (parseInt(MBDefaults.get('payout')) || 1) * 1000 : MBDefaults.get('payout'),
	            currency: MBContract.getCurrency(),
	            symbol: MBDefaults.get('underlying'),
	            req_id: MBPrice.getReqId(),
	            date_expiry: durations[1],

	            trading_period_start: durations[0]
	        };
	        var barriers_array = void 0,
	            all_expired = true;
	        for (var i = 0; i < available_contracts.length; i++) {
	            req.contract_type = available_contracts[i].contract_type;
	            barriers_array = available_contracts[i].available_barriers;
	            for (var j = 0; j < barriers_array.length; j++) {
	                if (+available_contracts[i].barriers === 2) {
	                    req.barrier = barriers_array[j][1];
	                    req.barrier2 = barriers_array[j][0];
	                } else {
	                    req.barrier = barriers_array[j];
	                }
	                if (!barrierHasExpired(available_contracts[i].expired_barriers, req.barrier, req.barrier2)) {
	                    all_expired = false;
	                    MBPrice.addPriceObj(req);
	                    BinarySocket.send(req);
	                }
	            }
	        }
	        if (all_expired) {
	            MBNotifications.show({ text: localize('All barriers in this trading window are expired') + '.', uid: 'ALL_EXPIRED' });
	            MBPrice.hidePriceOverlay();
	        } else {
	            MBNotifications.hide('ALL_EXPIRED');
	        }
	    };

	    var processProposal = function processProposal(response) {
	        'use strict';

	        var req_id = MBPrice.getReqId();
	        if (response.req_id === req_id) {
	            MBPrice.display(response);
	            // MBPrice.hidePriceOverlay();
	        }
	    };

	    var processExpiredBarriers = function processExpiredBarriers() {
	        var contracts = MBContract.getCurrentContracts();
	        var expired_barrier = void 0,
	            $expired_barrier_element = void 0;
	        contracts.forEach(function (c) {
	            var expired_barriers = c.expired_barriers;
	            for (var i = 0; i < expired_barriers.length; i++) {
	                if (+c.barriers === 2) {
	                    expired_barrier = expired_barriers[i][0] + '_' + expired_barriers[i][1];
	                } else {
	                    expired_barrier = expired_barriers[i];
	                }
	                $expired_barrier_element = $('div [data-barrier="' + expired_barrier + '"]');
	                if ($expired_barrier_element.length > 0) {
	                    processForgetProposal(expired_barrier);
	                    $expired_barrier_element.remove();
	                }
	            }
	        });
	    };

	    var barrierHasExpired = function barrierHasExpired(expired_barriers, barrier, barrier2) {
	        if (barrier2) {
	            return containsArray(expired_barriers, [[barrier2, barrier]]);
	        }
	        return expired_barriers.indexOf(barrier.toString()) > -1;
	    };

	    var processForgetProposal = function processForgetProposal(expired_barrier) {
	        var prices = MBPrice.getPrices();
	        Object.keys(prices[expired_barrier]).forEach(function (c) {
	            if (!prices[expired_barrier][c].hasOwnProperty('error')) {
	                BinarySocket.send({ forget: prices[expired_barrier][c].proposal.id });
	            }
	        });
	    };

	    var containsArray = function containsArray(array, val) {
	        var hash = {};
	        for (var i = 0; i < array.length; i++) {
	            hash[array[i]] = i;
	        }
	        return hash.hasOwnProperty(val);
	    };

	    return {
	        processActiveSymbols: processActiveSymbols,
	        processMarketUnderlying: processMarketUnderlying,
	        processTick: processTick,
	        processContract: processContract,
	        processPriceRequest: processPriceRequest,
	        processProposal: processProposal,
	        onUnload: function onUnload() {
	            clearSymbolTimeout();MBSymbols.clearData();
	        }
	    };
	}();

	module.exports = {
	    MBProcess: MBProcess
	};

/***/ },
/* 535 */
/***/ function(module, exports) {

	'use strict';

	/*
	 * MBTick object handles all the process/display related to tick streaming
	 *
	 * We request tick stream for particular underlying to update current spot
	 *
	 *
	 * Usage:
	 * use `MBTick.detail` to populate this object
	 *
	 * then use
	 *
	 * `MBTick.quote()` to get current spot quote
	 * `MBTick.id()` to get the unique for current stream
	 * `MBTick.epoch()` to get the tick epoch time
	 * 'MBTick.display()` to display current spot
	 */

	var MBTick = function () {
	    'use strict';

	    var _quote = '',
	        _id = '',
	        _epoch = '',
	        _spots = {},
	        _errorMessage = '';
	    var keep_number = 60;

	    var details = function details(data) {
	        _errorMessage = '';

	        if (data) {
	            if (data.error) {
	                _errorMessage = data.error.message;
	            } else {
	                var tick = data.tick;
	                _quote = tick.quote;
	                _id = tick.id;
	                _epoch = tick.epoch;

	                _spots[_epoch] = _quote;
	                var epoches = Object.keys(_spots).sort(function (a, b) {
	                    return a - b;
	                });
	                if (epoches.length > keep_number) {
	                    delete _spots[epoches[0]];
	                }
	            }
	        }
	    };

	    var display = function display() {
	        $('#spot').fadeIn(200);
	        var spotElement = document.getElementById('spot');
	        if (!spotElement) return;
	        var message = '';
	        if (_errorMessage) {
	            message = _errorMessage;
	        } else {
	            message = _quote;
	        }

	        if (parseFloat(message) !== +message) {
	            spotElement.className = 'error';
	        } else {
	            spotElement.classList.remove('error');
	            MBTick.displayPriceMovement(parseFloat(spotElement.textContent), parseFloat(message));
	        }

	        spotElement.textContent = message;
	    };

	    /*
	     * Display price/spot movement variation to depict price moved up or down
	     */
	    var displayPriceMovement = function displayPriceMovement(oldValue, currentValue) {
	        var className = currentValue > oldValue ? 'up' : currentValue < oldValue ? 'down' : 'still';
	        $('#spot-dyn').attr('class', 'dynamics ' + className);
	    };

	    var updateWarmChart = function updateWarmChart() {
	        var $chart = $('#trading_worm_chart'),
	            spots_array = Object.keys(MBTick.spots()).sort(function (a, b) {
	            return a - b;
	        }).map(function (v) {
	            return MBTick.spots()[v];
	        }),
	            chart_config = {
	            type: 'line',
	            lineColor: '#606060',
	            fillColor: false,
	            spotColor: '#00f000',
	            minSpotColor: '#f00000',
	            maxSpotColor: '#0000f0',
	            highlightSpotColor: '#ffff00',
	            highlightLineColor: '#000000',
	            spotRadius: 1.25,
	            width: 200,
	            height: 25
	        };
	        if ($chart && typeof $chart.sparkline === 'function') {
	            $chart.sparkline(spots_array, chart_config);
	            if (spots_array.length) {
	                $chart.show();
	            } else {
	                $chart.hide();
	            }
	        }
	    };

	    var request = function request(symbol) {
	        BinarySocket.send({
	            ticks_history: symbol,
	            style: 'ticks',
	            end: 'latest',
	            count: keep_number,
	            subscribe: 1
	        });
	    };

	    var processHistory = function processHistory(res) {
	        if (res.history && res.history.times && res.history.prices) {
	            for (var i = 0; i < res.history.times.length; i++) {
	                details({
	                    tick: {
	                        epoch: res.history.times[i],
	                        quote: res.history.prices[i]
	                    }
	                });
	            }
	        }
	    };

	    return {
	        details: details,
	        display: display,
	        updateWarmChart: updateWarmChart,
	        request: request,
	        processHistory: processHistory,
	        quote: function quote() {
	            return _quote;
	        },
	        id: function id() {
	            return _id;
	        },
	        epoch: function epoch() {
	            return _epoch;
	        },
	        errorMessage: function errorMessage() {
	            return _errorMessage;
	        },
	        spots: function spots() {
	            return _spots;
	        },
	        setQuote: function setQuote(q) {
	            _quote = q;
	        },
	        clean: function clean() {
	            _spots = {};
	            _quote = '';
	            $('#spot').fadeOut(200, function () {
	                // resets spot movement coloring, will continue on the next tick responses
	                $('#spot-dyn').removeAttr('class').text('');
	            });
	        },
	        displayPriceMovement: displayPriceMovement
	    };
	}();

	module.exports = {
	    MBTick: MBTick
	};

/***/ },
/* 536 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var MBContract = __webpack_require__(443).MBContract;
	var MBDisplayCurrencies = __webpack_require__(532).MBDisplayCurrencies;
	var MBNotifications = __webpack_require__(447).MBNotifications;
	var MBProcess = __webpack_require__(534).MBProcess;
	var MBPurchase = __webpack_require__(537).MBPurchase;
	var MBSymbols = __webpack_require__(445).MBSymbols;
	var MBTick = __webpack_require__(535).MBTick;
	var PortfolioWS = __webpack_require__(462).PortfolioWS;
	var State = __webpack_require__(304).State;
	var GTM = __webpack_require__(430).GTM;
	var Client = __webpack_require__(305).Client;
	var processTradingTimes = __webpack_require__(476).processTradingTimes;
	var forgetTradingStreams = __webpack_require__(476).forgetTradingStreams;

	/*
	 * This Message object process the response from server and fire
	 * events based on type of response
	 */
	var MBMessage = function () {
	    'use strict';

	    var process = function process(msg) {
	        var response = JSON.parse(msg.data);
	        if (!State.get('is_mb_trading')) {
	            forgetTradingStreams();
	            return;
	        }
	        if (response) {
	            var type = response.msg_type;
	            if (type === 'active_symbols') {
	                MBProcess.processActiveSymbols(response);
	            } else if (type === 'contracts_for') {
	                MBNotifications.hide('CONNECTION_ERROR');
	                MBContract.setContractsResponse(response);
	                MBProcess.processContract(response);
	            } else if (type === 'payout_currencies' && response.hasOwnProperty('echo_req') && (!response.echo_req.hasOwnProperty('passthrough') || !response.echo_req.passthrough.hasOwnProperty('handler'))) {
	                Client.set_value('currencies', response.payout_currencies.join(','));
	                MBDisplayCurrencies('', false);
	                MBSymbols.getSymbols(1);
	            } else if (type === 'proposal') {
	                MBProcess.processProposal(response);
	            } else if (type === 'buy') {
	                MBPurchase.display(response);
	                GTM.push_purchase_data(response);
	            } else if (type === 'tick') {
	                MBProcess.processTick(response);
	            } else if (type === 'history') {
	                MBTick.processHistory(response);
	            } else if (type === 'trading_times') {
	                processTradingTimes(response);
	            } else if (type === 'portfolio') {
	                PortfolioWS.updatePortfolio(response);
	            } else if (type === 'proposal_open_contract') {
	                PortfolioWS.updateIndicative(response);
	            } else if (type === 'transaction') {
	                PortfolioWS.transactionResponseHandler(response);
	            }
	        }
	    };

	    return {
	        process: process
	    };
	}();

	module.exports = {
	    MBMessage: MBMessage
	};

/***/ },
/* 537 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var MBNotifications = __webpack_require__(447).MBNotifications;
	var MBPrice = __webpack_require__(442).MBPrice;
	var ViewPopupWS = __webpack_require__(438).ViewPopupWS;

	/*
	 * Purchase object that handles all the functions related to
	 * contract purchase response
	 */

	var MBPurchase = function () {
	    'use strict';

	    var display = function display(response) {
	        if (response.error) {
	            MBPrice.hidePriceOverlay();
	            MBNotifications.show({ text: response.error.message, uid: 'BUY_ERROR', dismissible: true });
	        } else {
	            MBNotifications.hide('BUY_ERROR');
	            ViewPopupWS.init($('<div />', { contract_id: response.buy.contract_id }).get(0));
	        }
	    };

	    return {
	        display: display
	    };
	}();

	module.exports = {
	    MBPurchase: MBPurchase
	};

/***/ },
/* 538 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var CashierJP = __webpack_require__(434).CashierJP;
	var MBPrice = __webpack_require__(442).MBPrice;

	var HandleClick = function HandleClick(param) {
	    switch (param) {
	        case 'CashierJP':
	            return CashierJP.error_handler();
	        case 'MBPrice':
	            for (var _len = arguments.length, values = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	                values[_key - 1] = arguments[_key];
	            }

	            return values && MBPrice.processBuy(values[0], values[1]);
	        // no default
	    }
	    return function () {
	        return null;
	    };
	};

	module.exports = {
	    HandleClick: HandleClick
	};

/***/ },
/* 539 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var url_for_static = __webpack_require__(306).url_for_static;
	var moment = __webpack_require__(308);

	var check_new_release = function check_new_release() {
	    // calling this method is handled by GTM tags
	    var last_reload = localStorage.getItem('new_release_reload_time');
	    // prevent reload in less than 10 minutes
	    if (last_reload && +last_reload + 10 * 60 * 1000 > moment().valueOf()) return;
	    var currect_hash = $('script[src*="binary.min.js"],script[src*="binary.js"]').attr('src').split('?')[1];
	    var xhttp = new XMLHttpRequest();
	    xhttp.onreadystatechange = function () {
	        if (+xhttp.readyState === 4 && +xhttp.status === 200) {
	            var latest_hash = xhttp.responseText;
	            if (latest_hash && latest_hash !== currect_hash) {
	                localStorage.setItem('new_release_reload_time', moment().valueOf());
	                window.location.reload(true);
	            }
	        }
	    };
	    xhttp.open('GET', url_for_static() + 'version?' + Math.random().toString(36).slice(2), true);
	    xhttp.send();
	};

	module.exports = {
	    check_new_release: check_new_release
	};

/***/ },
/* 540 */
/***/ function(module, exports) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	/*
	 * jQuery UI Timepicker
	 *
	 * Copyright 2010-2013, Francois Gelinas
	 * Dual licensed under the MIT or GPL Version 2 licenses.
	 * http://jquery.org/license
	 *
	 * http://fgelinas.com/code/timepicker
	 *
	 * Depends:
	 *	jquery.ui.core.js
	 *  jquery.ui.position.js (only if position settings are used)
	 *
	 * Change version 0.1.0 - moved the t-rex up here
	 *
	                                                  ____
	       ___                                      .-~. /_"-._
	      `-._~-.                                  / /_ "~o\  :Y
	          \  \                                / : \~x.  ` ')
	           ]  Y                              /  |  Y< ~-.__j
	          /   !                        _.--~T : l  l<  /.-~
	         /   /                 ____.--~ .   ` l /~\ \<|Y
	        /   /             .-~~"        /| .    ',-~\ \L|
	       /   /             /     .^   \ Y~Y \.^>/l_   "--'
	      /   Y           .-"(  .  l__  j_j l_/ /~_.-~    .
	     Y    l          /    \  )    ~~~." / `/"~ / \.__/l_
	     |     \     _.-"      ~-{__     l  :  l._Z~-.___.--~
	     |      ~---~           /   ~~"---\_  ' __[>
	     l  .                _.^   ___     _>-y~
	      \  \     .      .-~   .-~   ~>--"  /
	       \  ~---"            /     ./  _.-'
	        "-.,_____.,_  _.--~\     _.-~
	                    ~~     (   _}       -Row
	                           `. ~(
	                             )  \
	                            /,`--'~\--'~\
	                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	                             ->T-Rex<-
	*/

	(function ($) {

	    $.extend($.ui, { timepicker: { version: "0.3.3" } });

	    var PROP_NAME = 'timepicker',
	        tpuuid = new Date().getTime();

	    /* Time picker manager.
	    Use the singleton instance of this class, $.timepicker, to interact with the time picker.
	    Settings for (groups of) time pickers are maintained in an instance object,
	    allowing multiple different settings on the same page. */

	    function Timepicker() {
	        this.debug = true; // Change this to true to start debugging
	        this._curInst = null; // The current instance in use
	        this._disabledInputs = []; // List of time picker inputs that have been disabled
	        this._timepickerShowing = false; // True if the popup picker is showing , false if not
	        this._inDialog = false; // True if showing within a "dialog", false if not
	        this._dialogClass = 'ui-timepicker-dialog'; // The name of the dialog marker class
	        this._mainDivId = 'ui-timepicker-div'; // The ID of the main timepicker division
	        this._inlineClass = 'ui-timepicker-inline'; // The name of the inline marker class
	        this._currentClass = 'ui-timepicker-current'; // The name of the current hour / minutes marker class
	        this._dayOverClass = 'ui-timepicker-days-cell-over'; // The name of the day hover marker class

	        this.regional = []; // Available regional settings, indexed by language code
	        this.regional[''] = { // Default regional settings
	            hourText: 'Hour', // Display text for hours section
	            minuteText: 'Minute', // Display text for minutes link
	            amPmText: ['AM', 'PM'], // Display text for AM PM
	            closeButtonText: 'Done', // Text for the confirmation button (ok button)
	            nowButtonText: 'Now', // Text for the now button
	            deselectButtonText: 'Deselect' // Text for the deselect button
	        };
	        this._defaults = { // Global defaults for all the time picker instances
	            showOn: 'focus', // 'focus' for popup on focus,
	            // 'button' for trigger button, or 'both' for either (not yet implemented)
	            button: null, // 'button' element that will trigger the timepicker
	            showAnim: 'fadeIn', // Name of jQuery animation for popup
	            showOptions: {}, // Options for enhanced animations
	            appendText: '', // Display text following the input box, e.g. showing the format

	            beforeShow: null, // Define a callback function executed before the timepicker is shown
	            onSelect: null, // Define a callback function when a hour / minutes is selected
	            onClose: null, // Define a callback function when the timepicker is closed

	            timeSeparator: ':', // The character to use to separate hours and minutes.
	            periodSeparator: ' ', // The character to use to separate the time from the time period.
	            showPeriod: false, // Define whether or not to show AM/PM with selected time
	            showPeriodLabels: true, // Show the AM/PM labels on the left of the time picker
	            showLeadingZero: true, // Define whether or not to show a leading zero for hours < 10. [true/false]
	            showMinutesLeadingZero: true, // Define whether or not to show a leading zero for minutes < 10.
	            altField: '', // Selector for an alternate field to store selected time into
	            defaultTime: 'now', // Used as default time when input field is empty or for inline timePicker
	            // (set to 'now' for the current time, '' for no highlighted time)
	            myPosition: 'left top', // Position of the dialog relative to the input.
	            // see the position utility for more info : http://jqueryui.com/demos/position/
	            atPosition: 'left bottom', // Position of the input element to match
	            // Note : if the position utility is not loaded, the timepicker will attach left top to left bottom
	            //NEW: 2011-02-03
	            onHourShow: null, // callback for enabling / disabling on selectable hours  ex : function(hour) { return true; }
	            onMinuteShow: null, // callback for enabling / disabling on time selection  ex : function(hour,minute) { return true; }

	            hours: {
	                starts: 0, // first displayed hour
	                ends: 23 // last displayed hour
	            },
	            minutes: {
	                starts: 0, // first displayed minute
	                ends: 55, // last displayed minute
	                interval: 5, // interval of displayed minutes
	                manual: [] // optional extra manual entries for minutes
	            },
	            rows: 4, // number of rows for the input tables, minimum 2, makes more sense if you use multiple of 2
	            // 2011-08-05 0.2.4
	            showHours: true, // display the hours section of the dialog
	            showMinutes: true, // display the minute section of the dialog
	            optionalMinutes: false, // optionally parse inputs of whole hours with minutes omitted

	            // buttons
	            showCloseButton: false, // shows an OK button to confirm the edit
	            showNowButton: false, // Shows the 'now' button
	            showDeselectButton: false, // Shows the deselect time button

	            maxTime: {
	                hour: null,
	                minute: null
	            },
	            minTime: {
	                hour: null,
	                minute: null
	            }

	        };
	        $.extend(this._defaults, this.regional['']);

	        this.tpDiv = $('<div id="' + this._mainDivId + '" class="ui-timepicker ui-widget ui-helper-clearfix ui-corner-all " style="display: none"></div>');
	    }

	    $.extend(Timepicker.prototype, {
	        /* Class name added to elements to indicate already configured with a time picker. */
	        markerClassName: 'hasTimepicker',

	        /* Debug logging (if enabled). */
	        log: function log() {
	            if (this.debug) console.log.apply('', arguments);
	        },

	        _widgetTimepicker: function _widgetTimepicker() {
	            return this.tpDiv;
	        },

	        /* Override the default settings for all instances of the time picker.
	        @param  settings  object - the new settings to use as defaults (anonymous object)
	        @return the manager object */
	        setDefaults: function setDefaults(settings) {
	            extendRemove(this._defaults, settings || {});
	            return this;
	        },

	        /* Attach the time picker to a jQuery selection.
	        @param  target    element - the target input field or division or span
	        @param  settings  object - the new settings to use for this time picker instance (anonymous) */
	        _attachTimepicker: function _attachTimepicker(target, settings) {
	            // check for settings on the control itself - in namespace 'time:'
	            var inlineSettings = null;
	            for (var attrName in this._defaults) {
	                var attrValue = target.getAttribute('time:' + attrName);
	                if (attrValue) {
	                    inlineSettings = inlineSettings || {};
	                    try {
	                        inlineSettings[attrName] = eval(attrValue);
	                    } catch (err) {
	                        inlineSettings[attrName] = attrValue;
	                    }
	                }
	            }
	            var nodeName = target.nodeName.toLowerCase();
	            var inline = nodeName == 'div' || nodeName == 'span';

	            if (!target.id) {
	                this.uuid += 1;
	                target.id = 'tp' + this.uuid;
	            }
	            var inst = this._newInst($(target), inline);
	            inst.settings = $.extend({}, settings || {}, inlineSettings || {});
	            if (nodeName == 'input') {
	                this._connectTimepicker(target, inst);
	                // init inst.hours and inst.minutes from the input value
	                this._setTimeFromField(inst);
	            } else if (inline) {
	                this._inlineTimepicker(target, inst);
	            }
	        },

	        /* Create a new instance object. */
	        _newInst: function _newInst(target, inline) {
	            var id = target[0].id.replace(/([^A-Za-z0-9_-])/g, '\\\\$1'); // escape jQuery meta chars
	            return {
	                id: id, input: target, // associated target
	                inline: inline, // is timepicker inline or not :
	                tpDiv: !inline ? this.tpDiv : // presentation div
	                $('<div class="' + this._inlineClass + ' ui-timepicker ui-widget  ui-helper-clearfix"></div>')
	            };
	        },

	        /* Attach the time picker to an input field. */
	        _connectTimepicker: function _connectTimepicker(target, inst) {
	            var input = $(target);
	            inst.append = $([]);
	            inst.trigger = $([]);
	            if (input.hasClass(this.markerClassName)) {
	                return;
	            }
	            this._attachments(input, inst);
	            input.addClass(this.markerClassName).keydown(this._doKeyDown).keyup(this._doKeyUp).bind("setData.timepicker", function (event, key, value) {
	                inst.settings[key] = value;
	            }).bind("getData.timepicker", function (event, key) {
	                return this._get(inst, key);
	            });
	            $.data(target, PROP_NAME, inst);
	        },

	        /* Handle keystrokes. */
	        _doKeyDown: function _doKeyDown(event) {
	            var inst = $.timepicker._getInst(event.target);
	            var handled = true;
	            inst._keyEvent = true;
	            if ($.timepicker._timepickerShowing) {
	                switch (event.keyCode) {
	                    case 9:
	                        $.timepicker._hideTimepicker();
	                        handled = false;
	                        break; // hide on tab out
	                    case 13:
	                        $.timepicker._updateSelectedValue(inst);
	                        $.timepicker._hideTimepicker();

	                        return false; // don't submit the form
	                        break; // select the value on enter
	                    case 27:
	                        $.timepicker._hideTimepicker();
	                        break; // hide on escape
	                    default:
	                        handled = false;
	                }
	            } else if (event.keyCode == 36 && event.ctrlKey) {
	                // display the time picker on ctrl+home
	                $.timepicker._showTimepicker(this);
	            } else {
	                handled = false;
	            }
	            if (handled) {
	                event.preventDefault();
	                event.stopPropagation();
	            }
	        },

	        /* Update selected time on keyUp */
	        /* Added verion 0.0.5 */
	        _doKeyUp: function _doKeyUp(event) {
	            var inst = $.timepicker._getInst(event.target);
	            $.timepicker._setTimeFromField(inst);
	            $.timepicker._updateTimepicker(inst);
	        },

	        /* Make attachments based on settings. */
	        _attachments: function _attachments(input, inst) {
	            var appendText = this._get(inst, 'appendText');
	            var isRTL = this._get(inst, 'isRTL');
	            if (inst.append) {
	                inst.append.remove();
	            }
	            if (appendText) {
	                inst.append = $('<span class="' + this._appendClass + '">' + appendText + '</span>');
	                input[isRTL ? 'before' : 'after'](inst.append);
	            }
	            input.unbind('focus.timepicker', this._showTimepicker);
	            input.unbind('click.timepicker', this._adjustZIndex);

	            if (inst.trigger) {
	                inst.trigger.remove();
	            }

	            var showOn = this._get(inst, 'showOn');
	            if (showOn == 'focus' || showOn == 'both') {
	                // pop-up time picker when in the marked field
	                input.bind("focus.timepicker", this._showTimepicker);
	                input.bind("click.timepicker", this._adjustZIndex);
	            }
	            if (showOn == 'button' || showOn == 'both') {
	                // pop-up time picker when 'button' element is clicked
	                var button = this._get(inst, 'button');

	                // Add button if button element is not set
	                if (button == null) {
	                    button = $('<button class="ui-timepicker-trigger" type="button">...</button>');
	                    input.after(button);
	                }

	                $(button).bind("click.timepicker", function () {
	                    if ($.timepicker._timepickerShowing && $.timepicker._lastInput == input[0]) {
	                        $.timepicker._hideTimepicker();
	                    } else if (!inst.input.is(':disabled')) {
	                        $.timepicker._showTimepicker(input[0]);
	                    }
	                    return false;
	                });
	            }
	        },

	        /* Attach an inline time picker to a div. */
	        _inlineTimepicker: function _inlineTimepicker(target, inst) {
	            var divSpan = $(target);
	            if (divSpan.hasClass(this.markerClassName)) return;
	            divSpan.addClass(this.markerClassName).append(inst.tpDiv).bind("setData.timepicker", function (event, key, value) {
	                inst.settings[key] = value;
	            }).bind("getData.timepicker", function (event, key) {
	                return this._get(inst, key);
	            });
	            $.data(target, PROP_NAME, inst);

	            this._setTimeFromField(inst);
	            this._updateTimepicker(inst);
	            inst.tpDiv.show();
	        },

	        _adjustZIndex: function _adjustZIndex(input) {
	            input = input.target || input;
	            var inst = $.timepicker._getInst(input);
	            inst.tpDiv.css('zIndex', $.timepicker._getZIndex(input) + 1);
	        },

	        /* Pop-up the time picker for a given input field.
	        @param  input  element - the input field attached to the time picker or
	        event - if triggered by focus */
	        _showTimepicker: function _showTimepicker(input) {
	            input = input.target || input;
	            if (input.nodeName.toLowerCase() != 'input') {
	                input = $('input', input.parentNode)[0];
	            } // find from button/image trigger

	            if ($.timepicker._isDisabledTimepicker(input) || $.timepicker._lastInput == input) {
	                return;
	            } // already here

	            // fix v 0.0.8 - close current timepicker before showing another one
	            $.timepicker._hideTimepicker();

	            var inst = $.timepicker._getInst(input);
	            if ($.timepicker._curInst && $.timepicker._curInst != inst) {
	                $.timepicker._curInst.tpDiv.stop(true, true);
	            }
	            var beforeShow = $.timepicker._get(inst, 'beforeShow');
	            extendRemove(inst.settings, beforeShow ? beforeShow.apply(input, [input, inst]) : {});
	            inst.lastVal = null;
	            $.timepicker._lastInput = input;

	            $.timepicker._setTimeFromField(inst);

	            // calculate default position
	            if ($.timepicker._inDialog) {
	                input.value = '';
	            } // hide cursor
	            if (!$.timepicker._pos) {
	                // position below input
	                $.timepicker._pos = $.timepicker._findPos(input);
	                $.timepicker._pos[1] += input.offsetHeight; // add the height
	            }
	            var isFixed = false;
	            $(input).parents().each(function () {
	                isFixed |= $(this).css('position') == 'fixed';
	                return !isFixed;
	            });

	            var offset = { left: $.timepicker._pos[0], top: $.timepicker._pos[1] };

	            $.timepicker._pos = null;
	            // determine sizing offscreen
	            inst.tpDiv.css({ position: 'absolute', display: 'block', top: '-1000px' });
	            $.timepicker._updateTimepicker(inst);

	            // position with the ui position utility, if loaded
	            if (!inst.inline && _typeof($.ui.position) == 'object') {
	                inst.tpDiv.position({
	                    of: inst.input,
	                    my: $.timepicker._get(inst, 'myPosition'),
	                    at: $.timepicker._get(inst, 'atPosition'),
	                    // offset: $( "#offset" ).val(),
	                    // using: using,
	                    collision: 'flip'
	                });
	                var offset = inst.tpDiv.offset();
	                $.timepicker._pos = [offset.top, offset.left];
	            }

	            // reset clicked state
	            inst._hoursClicked = false;
	            inst._minutesClicked = false;

	            // fix width for dynamic number of time pickers
	            // and adjust position before showing
	            offset = $.timepicker._checkOffset(inst, offset, isFixed);
	            inst.tpDiv.css({ position: $.timepicker._inDialog && $.blockUI ? 'static' : isFixed ? 'fixed' : 'absolute', display: 'none',
	                left: offset.left + 'px', top: offset.top + 'px'
	            });
	            if (!inst.inline) {
	                var showAnim = $.timepicker._get(inst, 'showAnim');
	                var duration = $.timepicker._get(inst, 'duration');

	                var postProcess = function postProcess() {
	                    $.timepicker._timepickerShowing = true;
	                    var borders = $.timepicker._getBorders(inst.tpDiv);
	                    inst.tpDiv.find('iframe.ui-timepicker-cover'). // IE6- only
	                    css({ left: -borders[0], top: -borders[1],
	                        width: inst.tpDiv.outerWidth(), height: inst.tpDiv.outerHeight()
	                    });
	                };

	                // Fixed the zIndex problem for real (I hope) - FG - v 0.2.9
	                $.timepicker._adjustZIndex(input);
	                //inst.tpDiv.css('zIndex', $.timepicker._getZIndex(input) +1);

	                if ($.effects && $.effects[showAnim]) {
	                    inst.tpDiv.show(showAnim, $.timepicker._get(inst, 'showOptions'), duration, postProcess);
	                } else {
	                    inst.tpDiv.show(showAnim ? duration : null, postProcess);
	                }
	                if (!showAnim || !duration) {
	                    postProcess();
	                }
	                if (inst.input.is(':visible') && !inst.input.is(':disabled')) {
	                    inst.input.focus();
	                }
	                $.timepicker._curInst = inst;
	            }
	        },

	        // This is an enhanced copy of the zIndex function of UI core 1.8.?? For backward compatibility.
	        // Enhancement returns maximum zindex value discovered while traversing parent elements,
	        // rather than the first zindex value found. Ensures the timepicker popup will be in front,
	        // even in funky scenarios like non-jq dialog containers with large fixed zindex values and
	        // nested zindex-influenced elements of their own.
	        _getZIndex: function _getZIndex(target) {
	            var elem = $(target);
	            var maxValue = 0;
	            var position, value;
	            while (elem.length && elem[0] !== document) {
	                position = elem.css("position");
	                if (position === "absolute" || position === "relative" || position === "fixed") {
	                    value = parseInt(elem.css("zIndex"), 10);
	                    if (!isNaN(value) && value !== 0) {
	                        if (value > maxValue) {
	                            maxValue = value;
	                        }
	                    }
	                }
	                elem = elem.parent();
	            }

	            return maxValue;
	        },

	        /* Refresh the time picker
	           @param   target  element - The target input field or inline container element. */
	        _refreshTimepicker: function _refreshTimepicker(target) {
	            var inst = this._getInst(target);
	            if (inst) {
	                this._updateTimepicker(inst);
	            }
	        },

	        /* Generate the time picker content. */
	        _updateTimepicker: function _updateTimepicker(inst) {
	            inst.tpDiv.empty().append(this._generateHTML(inst));
	            this._rebindDialogEvents(inst);
	        },

	        _rebindDialogEvents: function _rebindDialogEvents(inst) {
	            var borders = $.timepicker._getBorders(inst.tpDiv),
	                self = this;
	            inst.tpDiv.find('iframe.ui-timepicker-cover') // IE6- only
	            .css({ left: -borders[0], top: -borders[1],
	                width: inst.tpDiv.outerWidth(), height: inst.tpDiv.outerHeight()
	            }).end()
	            // after the picker html is appended bind the click & double click events (faster in IE this way
	            // then letting the browser interpret the inline events)
	            // the binding for the minute cells also exists in _updateMinuteDisplay
	            .find('.ui-timepicker-minute-cell').unbind().bind("click", { fromDoubleClick: false }, $.proxy($.timepicker.selectMinutes, this)).bind("dblclick", { fromDoubleClick: true }, $.proxy($.timepicker.selectMinutes, this)).end().find('.ui-timepicker-hour-cell').unbind().bind("click", { fromDoubleClick: false }, $.proxy($.timepicker.selectHours, this)).bind("dblclick", { fromDoubleClick: true }, $.proxy($.timepicker.selectHours, this)).end().find('.ui-timepicker td a').unbind().bind('mouseout', function () {
	                $(this).removeClass('ui-state-hover');
	                if (this.className.indexOf('ui-timepicker-prev') != -1) $(this).removeClass('ui-timepicker-prev-hover');
	                if (this.className.indexOf('ui-timepicker-next') != -1) $(this).removeClass('ui-timepicker-next-hover');
	            }).bind('mouseover', function () {
	                if (!self._isDisabledTimepicker(inst.inline ? inst.tpDiv.parent()[0] : inst.input[0])) {
	                    $(this).parents('.ui-timepicker-calendar').find('a').removeClass('ui-state-hover');
	                    $(this).addClass('ui-state-hover');
	                    if (this.className.indexOf('ui-timepicker-prev') != -1) $(this).addClass('ui-timepicker-prev-hover');
	                    if (this.className.indexOf('ui-timepicker-next') != -1) $(this).addClass('ui-timepicker-next-hover');
	                }
	            }).end().find('.' + this._dayOverClass + ' a').trigger('mouseover').end().find('.ui-timepicker-now').bind("click", function (e) {
	                $.timepicker.selectNow(e);
	            }).end().find('.ui-timepicker-deselect').bind("click", function (e) {
	                $.timepicker.deselectTime(e);
	            }).end().find('.ui-timepicker-close').bind("click", function (e) {
	                $.timepicker._hideTimepicker();
	            }).end();
	        },

	        /* Generate the HTML for the current state of the time picker. */
	        _generateHTML: function _generateHTML(inst) {

	            var h,
	                m,
	                row,
	                col,
	                html,
	                hoursHtml,
	                minutesHtml = '',
	                showPeriod = this._get(inst, 'showPeriod') == true,
	                showPeriodLabels = this._get(inst, 'showPeriodLabels') == true,
	                showLeadingZero = this._get(inst, 'showLeadingZero') == true,
	                showHours = this._get(inst, 'showHours') == true,
	                showMinutes = this._get(inst, 'showMinutes') == true,
	                amPmText = this._get(inst, 'amPmText'),
	                rows = this._get(inst, 'rows'),
	                amRows = 0,
	                pmRows = 0,
	                amItems = 0,
	                pmItems = 0,
	                amFirstRow = 0,
	                pmFirstRow = 0,
	                hours = Array(),
	                hours_options = this._get(inst, 'hours'),
	                hoursPerRow = null,
	                hourCounter = 0,
	                hourLabel = this._get(inst, 'hourText'),
	                showCloseButton = this._get(inst, 'showCloseButton'),
	                closeButtonText = this._get(inst, 'closeButtonText'),
	                showNowButton = this._get(inst, 'showNowButton'),
	                nowButtonText = this._get(inst, 'nowButtonText'),
	                showDeselectButton = this._get(inst, 'showDeselectButton'),
	                deselectButtonText = this._get(inst, 'deselectButtonText'),
	                showButtonPanel = showCloseButton || showNowButton || showDeselectButton;

	            // prepare all hours and minutes, makes it easier to distribute by rows
	            for (h = hours_options.starts; h <= hours_options.ends; h++) {
	                hours.push(h);
	            }
	            hoursPerRow = Math.ceil(hours.length / rows); // always round up

	            if (showPeriodLabels) {
	                for (hourCounter = 0; hourCounter < hours.length; hourCounter++) {
	                    if (hours[hourCounter] < 12) {
	                        amItems++;
	                    } else {
	                        pmItems++;
	                    }
	                }
	                hourCounter = 0;

	                amRows = Math.floor(amItems / hours.length * rows);
	                pmRows = Math.floor(pmItems / hours.length * rows);

	                // assign the extra row to the period that is more densely populated
	                if (rows != amRows + pmRows) {
	                    // Make sure: AM Has Items and either PM Does Not, AM has no rows yet, or AM is more dense
	                    if (amItems && (!pmItems || !amRows || pmRows && amItems / amRows >= pmItems / pmRows)) {
	                        amRows++;
	                    } else {
	                        pmRows++;
	                    }
	                }
	                amFirstRow = Math.min(amRows, 1);
	                pmFirstRow = amRows + 1;

	                if (amRows == 0) {
	                    hoursPerRow = Math.ceil(pmItems / pmRows);
	                } else if (pmRows == 0) {
	                    hoursPerRow = Math.ceil(amItems / amRows);
	                } else {
	                    hoursPerRow = Math.ceil(Math.max(amItems / amRows, pmItems / pmRows));
	                }
	            }

	            html = '<table class="ui-timepicker-table ui-widget-content ui-corner-all"><tr>';

	            if (showHours) {

	                html += '<td class="ui-timepicker-hours">' + '<div class="ui-timepicker-title ui-widget-header ui-helper-clearfix ui-corner-all">' + hourLabel + '</div>' + '<table class="ui-timepicker">';

	                for (row = 1; row <= rows; row++) {
	                    html += '<tr>';
	                    // AM
	                    if (row == amFirstRow && showPeriodLabels) {
	                        html += '<th rowspan="' + amRows.toString() + '" class="periods" scope="row">' + amPmText[0] + '</th>';
	                    }
	                    // PM
	                    if (row == pmFirstRow && showPeriodLabels) {
	                        html += '<th rowspan="' + pmRows.toString() + '" class="periods" scope="row">' + amPmText[1] + '</th>';
	                    }
	                    for (col = 1; col <= hoursPerRow; col++) {
	                        if (showPeriodLabels && row < pmFirstRow && hours[hourCounter] >= 12) {
	                            html += this._generateHTMLHourCell(inst, undefined, showPeriod, showLeadingZero);
	                        } else {
	                            html += this._generateHTMLHourCell(inst, hours[hourCounter], showPeriod, showLeadingZero);
	                            hourCounter++;
	                        }
	                    }
	                    html += '</tr>';
	                }
	                html += '</table>' + // Close the hours cells table
	                '</td>'; // Close the Hour td
	            }

	            if (showMinutes) {
	                html += '<td class="ui-timepicker-minutes">';
	                html += this._generateHTMLMinutes(inst);
	                html += '</td>';
	            }

	            html += '</tr>';

	            if (showButtonPanel) {
	                var buttonPanel = '<tr><td colspan="3"><div class="ui-timepicker-buttonpane ui-widget-content">';
	                if (showNowButton) {
	                    buttonPanel += '<button type="button" class="ui-timepicker-now ui-state-default ui-corner-all" ' + ' data-timepicker-instance-id="#' + inst.id.replace(/\\\\/g, "\\") + '" >' + nowButtonText + '</button>';
	                }
	                if (showDeselectButton) {
	                    buttonPanel += '<button type="button" class="ui-timepicker-deselect ui-state-default ui-corner-all" ' + ' data-timepicker-instance-id="#' + inst.id.replace(/\\\\/g, "\\") + '" >' + deselectButtonText + '</button>';
	                }
	                if (showCloseButton) {
	                    buttonPanel += '<button type="button" class="ui-timepicker-close ui-state-default ui-corner-all" ' + ' data-timepicker-instance-id="#' + inst.id.replace(/\\\\/g, "\\") + '" >' + closeButtonText + '</button>';
	                }

	                html += buttonPanel + '</div></td></tr>';
	            }
	            html += '</table>';

	            return html;
	        },

	        /* Special function that update the minutes selection in currently visible timepicker
	         * called on hour selection when onMinuteShow is defined  */
	        _updateMinuteDisplay: function _updateMinuteDisplay(inst) {
	            var newHtml = this._generateHTMLMinutes(inst);
	            inst.tpDiv.find('td.ui-timepicker-minutes').html(newHtml);
	            this._rebindDialogEvents(inst);
	            // after the picker html is appended bind the click & double click events (faster in IE this way
	            // then letting the browser interpret the inline events)
	            // yes I know, duplicate code, sorry
	            /*                .find('.ui-timepicker-minute-cell')
	                                .bind("click", { fromDoubleClick:false }, $.proxy($.timepicker.selectMinutes, this))
	                                .bind("dblclick", { fromDoubleClick:true }, $.proxy($.timepicker.selectMinutes, this));
	            */
	        },

	        /*
	         * Generate the minutes table
	         * This is separated from the _generateHTML function because is can be called separately (when hours changes)
	         */
	        _generateHTMLMinutes: function _generateHTMLMinutes(inst) {

	            var m,
	                row,
	                html = '',
	                rows = this._get(inst, 'rows'),
	                minutes = Array(),
	                minutes_options = this._get(inst, 'minutes'),
	                minutesPerRow = null,
	                minuteCounter = 0,
	                showMinutesLeadingZero = this._get(inst, 'showMinutesLeadingZero') == true,
	                onMinuteShow = this._get(inst, 'onMinuteShow'),
	                minuteLabel = this._get(inst, 'minuteText');

	            if (!minutes_options.starts) {
	                minutes_options.starts = 0;
	            }
	            if (!minutes_options.ends) {
	                minutes_options.ends = 59;
	            }
	            if (!minutes_options.manual) {
	                minutes_options.manual = [];
	            }
	            for (m = minutes_options.starts; m <= minutes_options.ends; m += minutes_options.interval) {
	                minutes.push(m);
	            }
	            for (var i = 0; i < minutes_options.manual.length; i++) {
	                var currMin = minutes_options.manual[i];

	                // Validate & filter duplicates of manual minute input
	                if (typeof currMin != 'number' || currMin < 0 || currMin > 59 || $.inArray(currMin, minutes) >= 0) {
	                    continue;
	                }
	                minutes.push(currMin);
	            }

	            // Sort to get correct order after adding manual minutes
	            // Use compare function to sort by number, instead of string (default)
	            minutes.sort(function (a, b) {
	                return a - b;
	            });

	            minutesPerRow = Math.round(minutes.length / rows + 0.49); // always round up

	            /*
	             * The minutes table
	             */
	            // if currently selected minute is not enabled, we have a problem and need to select a new minute.
	            if (onMinuteShow && onMinuteShow.apply(inst.input ? inst.input[0] : null, [inst.hours, inst.minutes]) == false) {
	                // loop minutes and select first available
	                for (minuteCounter = 0; minuteCounter < minutes.length; minuteCounter += 1) {
	                    m = minutes[minuteCounter];
	                    if (onMinuteShow.apply(inst.input ? inst.input[0] : null, [inst.hours, m])) {
	                        inst.minutes = m;
	                        break;
	                    }
	                }
	            }

	            html += '<div class="ui-timepicker-title ui-widget-header ui-helper-clearfix ui-corner-all">' + minuteLabel + '</div>' + '<table class="ui-timepicker">';

	            minuteCounter = 0;
	            for (row = 1; row <= rows; row++) {
	                html += '<tr>';
	                while (minuteCounter < row * minutesPerRow) {
	                    var m = minutes[minuteCounter];
	                    var displayText = '';
	                    if (m !== undefined) {
	                        displayText = m < 10 && showMinutesLeadingZero ? "0" + m.toString() : m.toString();
	                    }
	                    html += this._generateHTMLMinuteCell(inst, m, displayText);
	                    minuteCounter++;
	                }
	                html += '</tr>';
	            }

	            html += '</table>';

	            return html;
	        },

	        /* Generate the content of a "Hour" cell */
	        _generateHTMLHourCell: function _generateHTMLHourCell(inst, hour, showPeriod, showLeadingZero) {

	            var displayHour = hour;
	            if (hour > 12 && showPeriod) {
	                displayHour = hour - 12;
	            }
	            if (displayHour == 0 && showPeriod) {
	                displayHour = 12;
	            }
	            if (displayHour < 10 && showLeadingZero) {
	                displayHour = '0' + displayHour;
	            }

	            var html = "";
	            var enabled = true;
	            var onHourShow = this._get(inst, 'onHourShow'); //custom callback
	            var maxTime = this._get(inst, 'maxTime');
	            var minTime = this._get(inst, 'minTime');

	            if (hour == undefined) {
	                html = '<td><span class="ui-state-default ui-state-disabled">&nbsp;</span></td>';
	                return html;
	            }

	            if (onHourShow) {
	                enabled = onHourShow.apply(inst.input ? inst.input[0] : null, [hour]);
	            }

	            if (enabled) {
	                if (!isNaN(parseInt(maxTime.hour)) && hour > maxTime.hour) enabled = false;
	                if (!isNaN(parseInt(minTime.hour)) && hour < minTime.hour) enabled = false;
	            }

	            if (enabled) {
	                html = '<td class="ui-timepicker-hour-cell" data-timepicker-instance-id="#' + inst.id.replace(/\\\\/g, "\\") + '" data-hour="' + hour.toString() + '">' + '<a class="ui-state-default ' + (hour == inst.hours ? 'ui-state-active' : '') + '">' + displayHour.toString() + '</a></td>';
	            } else {
	                html = '<td>' + '<span class="ui-state-default ui-state-disabled ' + (hour == inst.hours ? ' ui-state-active ' : ' ') + '">' + displayHour.toString() + '</span>' + '</td>';
	            }
	            return html;
	        },

	        /* Generate the content of a "Hour" cell */
	        _generateHTMLMinuteCell: function _generateHTMLMinuteCell(inst, minute, displayText) {
	            var html = "";
	            var enabled = true;
	            var hour = inst.hours;
	            var onMinuteShow = this._get(inst, 'onMinuteShow'); //custom callback
	            var maxTime = this._get(inst, 'maxTime');
	            var minTime = this._get(inst, 'minTime');

	            if (onMinuteShow) {
	                //NEW: 2011-02-03  we should give the hour as a parameter as well!
	                enabled = onMinuteShow.apply(inst.input ? inst.input[0] : null, [inst.hours, minute]); //trigger callback
	            }

	            if (minute == undefined) {
	                html = '<td><span class="ui-state-default ui-state-disabled">&nbsp;</span></td>';
	                return html;
	            }

	            if (enabled && hour !== null) {
	                if (!isNaN(parseInt(maxTime.hour)) && !isNaN(parseInt(maxTime.minute)) && hour >= maxTime.hour && minute > maxTime.minute) enabled = false;
	                if (!isNaN(parseInt(minTime.hour)) && !isNaN(parseInt(minTime.minute)) && hour <= minTime.hour && minute < minTime.minute) enabled = false;
	            }

	            if (enabled) {
	                html = '<td class="ui-timepicker-minute-cell" data-timepicker-instance-id="#' + inst.id.replace(/\\\\/g, "\\") + '" data-minute="' + minute.toString() + '" >' + '<a class="ui-state-default ' + (minute == inst.minutes ? 'ui-state-active' : '') + '" >' + displayText + '</a></td>';
	            } else {

	                html = '<td>' + '<span class="ui-state-default ui-state-disabled" >' + displayText + '</span>' + '</td>';
	            }
	            return html;
	        },

	        /* Detach a timepicker from its control.
	           @param  target    element - the target input field or division or span */
	        _destroyTimepicker: function _destroyTimepicker(target) {
	            var $target = $(target);
	            var inst = $.data(target, PROP_NAME);
	            if (!$target.hasClass(this.markerClassName)) {
	                return;
	            }
	            var nodeName = target.nodeName.toLowerCase();
	            $.removeData(target, PROP_NAME);
	            if (nodeName == 'input') {
	                inst.append.remove();
	                inst.trigger.remove();
	                $target.removeClass(this.markerClassName).unbind('focus.timepicker', this._showTimepicker).unbind('click.timepicker', this._adjustZIndex);
	            } else if (nodeName == 'div' || nodeName == 'span') $target.removeClass(this.markerClassName).empty();
	        },

	        /* Enable the date picker to a jQuery selection.
	           @param  target    element - the target input field or division or span */
	        _enableTimepicker: function _enableTimepicker(target) {
	            var $target = $(target),
	                target_id = $target.attr('id'),
	                inst = $.data(target, PROP_NAME);

	            if (!$target.hasClass(this.markerClassName)) {
	                return;
	            }
	            var nodeName = target.nodeName.toLowerCase();
	            if (nodeName == 'input') {
	                target.disabled = false;
	                var button = this._get(inst, 'button');
	                $(button).removeClass('ui-state-disabled').disabled = false;
	                inst.trigger.filter('button').each(function () {
	                    this.disabled = false;
	                }).end();
	            } else if (nodeName == 'div' || nodeName == 'span') {
	                var inline = $target.children('.' + this._inlineClass);
	                inline.children().removeClass('ui-state-disabled');
	                inline.find('button').each(function () {
	                    this.disabled = false;
	                });
	            }
	            this._disabledInputs = $.map(this._disabledInputs, function (value) {
	                return value == target_id ? null : value;
	            }); // delete entry
	        },

	        /* Disable the time picker to a jQuery selection.
	           @param  target    element - the target input field or division or span */
	        _disableTimepicker: function _disableTimepicker(target) {
	            var $target = $(target);
	            var inst = $.data(target, PROP_NAME);
	            if (!$target.hasClass(this.markerClassName)) {
	                return;
	            }
	            var nodeName = target.nodeName.toLowerCase();
	            if (nodeName == 'input') {
	                var button = this._get(inst, 'button');

	                $(button).addClass('ui-state-disabled').disabled = true;
	                target.disabled = true;

	                inst.trigger.filter('button').each(function () {
	                    this.disabled = true;
	                }).end();
	            } else if (nodeName == 'div' || nodeName == 'span') {
	                var inline = $target.children('.' + this._inlineClass);
	                inline.children().addClass('ui-state-disabled');
	                inline.find('button').each(function () {
	                    this.disabled = true;
	                });
	            }
	            this._disabledInputs = $.map(this._disabledInputs, function (value) {
	                return value == target ? null : value;
	            }); // delete entry
	            this._disabledInputs[this._disabledInputs.length] = $target.attr('id');
	        },

	        /* Is the first field in a jQuery collection disabled as a timepicker?
	        @param  target_id element - the target input field or division or span
	        @return boolean - true if disabled, false if enabled */
	        _isDisabledTimepicker: function _isDisabledTimepicker(target_id) {
	            if (!target_id) {
	                return false;
	            }
	            for (var i = 0; i < this._disabledInputs.length; i++) {
	                if (this._disabledInputs[i] == target_id) {
	                    return true;
	                }
	            }
	            return false;
	        },

	        /* Check positioning to remain on screen. */
	        _checkOffset: function _checkOffset(inst, offset, isFixed) {
	            var tpWidth = inst.tpDiv.outerWidth();
	            var tpHeight = inst.tpDiv.outerHeight();
	            var inputWidth = inst.input ? inst.input.outerWidth() : 0;
	            var inputHeight = inst.input ? inst.input.outerHeight() : 0;
	            var viewWidth = document.documentElement.clientWidth + $(document).scrollLeft();
	            var viewHeight = document.documentElement.clientHeight + $(document).scrollTop();

	            offset.left -= this._get(inst, 'isRTL') ? tpWidth - inputWidth : 0;
	            offset.left -= isFixed && offset.left == inst.input.offset().left ? $(document).scrollLeft() : 0;
	            offset.top -= isFixed && offset.top == inst.input.offset().top + inputHeight ? $(document).scrollTop() : 0;

	            // now check if timepicker is showing outside window viewport - move to a better place if so.
	            offset.left -= Math.min(offset.left, offset.left + tpWidth > viewWidth && viewWidth > tpWidth ? Math.abs(offset.left + tpWidth - viewWidth) : 0);
	            offset.top -= Math.min(offset.top, offset.top + tpHeight > viewHeight && viewHeight > tpHeight ? Math.abs(tpHeight + inputHeight) : 0);

	            return offset;
	        },

	        /* Find an object's position on the screen. */
	        _findPos: function _findPos(obj) {
	            var inst = this._getInst(obj);
	            var isRTL = this._get(inst, 'isRTL');
	            while (obj && (obj.type == 'hidden' || obj.nodeType != 1)) {
	                obj = obj[isRTL ? 'previousSibling' : 'nextSibling'];
	            }
	            var position = $(obj).offset();
	            return [position.left, position.top];
	        },

	        /* Retrieve the size of left and top borders for an element.
	        @param  elem  (jQuery object) the element of interest
	        @return  (number[2]) the left and top borders */
	        _getBorders: function _getBorders(elem) {
	            var convert = function convert(value) {
	                return { thin: 1, medium: 2, thick: 3 }[value] || value;
	            };
	            return [parseFloat(convert(elem.css('border-left-width'))), parseFloat(convert(elem.css('border-top-width')))];
	        },

	        /* Close time picker if clicked elsewhere. */
	        _checkExternalClick: function _checkExternalClick(event) {
	            if (!$.timepicker._curInst) {
	                return;
	            }
	            var $target = $(event.target);
	            if ($target[0].id != $.timepicker._mainDivId && $target.parents('#' + $.timepicker._mainDivId).length == 0 && !$target.hasClass($.timepicker.markerClassName) && !$target.hasClass($.timepicker._triggerClass) && $.timepicker._timepickerShowing && !($.timepicker._inDialog && $.blockUI)) $.timepicker._hideTimepicker();
	        },

	        /* Hide the time picker from view.
	        @param  input  element - the input field attached to the time picker */
	        _hideTimepicker: function _hideTimepicker(input) {
	            var inst = this._curInst;
	            if (!inst || input && inst != $.data(input, PROP_NAME)) {
	                return;
	            }
	            if (this._timepickerShowing) {
	                var showAnim = this._get(inst, 'showAnim');
	                var duration = this._get(inst, 'duration');
	                var postProcess = function postProcess() {
	                    $.timepicker._tidyDialog(inst);
	                    this._curInst = null;
	                };
	                if ($.effects && $.effects[showAnim]) {
	                    inst.tpDiv.hide(showAnim, $.timepicker._get(inst, 'showOptions'), duration, postProcess);
	                } else {
	                    inst.tpDiv[showAnim == 'slideDown' ? 'slideUp' : showAnim == 'fadeIn' ? 'fadeOut' : 'hide'](showAnim ? duration : null, postProcess);
	                }
	                if (!showAnim) {
	                    postProcess();
	                }

	                this._timepickerShowing = false;

	                this._lastInput = null;
	                if (this._inDialog) {
	                    this._dialogInput.css({ position: 'absolute', left: '0', top: '-100px' });
	                    if ($.blockUI) {
	                        $.unblockUI();
	                        $('body').append(this.tpDiv);
	                    }
	                }
	                this._inDialog = false;

	                var onClose = this._get(inst, 'onClose');
	                if (onClose) {
	                    onClose.apply(inst.input ? inst.input[0] : null, [inst.input ? inst.input.val() : '', inst]); // trigger custom callback
	                }
	            }
	        },

	        /* Tidy up after a dialog display. */
	        _tidyDialog: function _tidyDialog(inst) {
	            inst.tpDiv.removeClass(this._dialogClass).unbind('.ui-timepicker');
	        },

	        /* Retrieve the instance data for the target control.
	        @param  target  element - the target input field or division or span
	        @return  object - the associated instance data
	        @throws  error if a jQuery problem getting data */
	        _getInst: function _getInst(target) {
	            try {
	                return $.data(target, PROP_NAME);
	            } catch (err) {
	                throw 'Missing instance data for this timepicker';
	            }
	        },

	        /* Get a setting value, defaulting if necessary. */
	        _get: function _get(inst, name) {
	            return inst.settings[name] !== undefined ? inst.settings[name] : this._defaults[name];
	        },

	        /* Parse existing time and initialise time picker. */
	        _setTimeFromField: function _setTimeFromField(inst) {
	            if (inst.input.val() == inst.lastVal) {
	                return;
	            }
	            var defaultTime = this._get(inst, 'defaultTime');

	            var timeToParse = defaultTime == 'now' ? this._getCurrentTimeRounded(inst) : defaultTime;
	            if (inst.inline == false && inst.input.val() != '') {
	                timeToParse = inst.input.val();
	            }

	            if (timeToParse instanceof Date) {
	                inst.hours = timeToParse.getHours();
	                inst.minutes = timeToParse.getMinutes();
	            } else {
	                var timeVal = inst.lastVal = timeToParse;
	                if (timeToParse == '') {
	                    inst.hours = -1;
	                    inst.minutes = -1;
	                } else {
	                    var time = this.parseTime(inst, timeVal);
	                    inst.hours = time.hours;
	                    inst.minutes = time.minutes;
	                }
	            }

	            $.timepicker._updateTimepicker(inst);
	        },

	        /* Update or retrieve the settings for an existing time picker.
	           @param  target  element - the target input field or division or span
	           @param  name    object - the new settings to update or
	                           string - the name of the setting to change or retrieve,
	                           when retrieving also 'all' for all instance settings or
	                           'defaults' for all global defaults
	           @param  value   any - the new value for the setting
	                       (omit if above is an object or to retrieve a value) */
	        _optionTimepicker: function _optionTimepicker(target, name, value) {
	            var inst = this._getInst(target);
	            if (arguments.length == 2 && typeof name == 'string') {
	                return name == 'defaults' ? $.extend({}, $.timepicker._defaults) : inst ? name == 'all' ? $.extend({}, inst.settings) : this._get(inst, name) : null;
	            }
	            var settings = name || {};
	            if (typeof name == 'string') {
	                settings = {};
	                settings[name] = value;
	            }
	            if (inst) {
	                extendRemove(inst.settings, settings);
	                if (this._curInst == inst) {
	                    this._hideTimepicker();
	                    this._updateTimepicker(inst);
	                }
	                if (inst.inline) {
	                    this._updateTimepicker(inst);
	                }
	            }
	        },

	        /* Set the time for a jQuery selection.
	        @param  target  element - the target input field or division or span
	        @param  time    String - the new time */
	        _setTimeTimepicker: function _setTimeTimepicker(target, time, noChange) {
	            var inst = this._getInst(target);
	            if (inst) {
	                this._setTime(inst, time, noChange);
	                this._updateTimepicker(inst);
	                this._updateAlternate(inst, time);
	            }
	        },

	        /* Set the time directly. */
	        _setTime: function _setTime(inst, time, noChange) {
	            var origHours = inst.hours;
	            var origMinutes = inst.minutes;
	            if (time instanceof Date) {
	                inst.hours = time.getHours();
	                inst.minutes = time.getMinutes();
	            } else {
	                var time = this.parseTime(inst, time);
	                inst.hours = time.hours;
	                inst.minutes = time.minutes;
	            }

	            if ((origHours != inst.hours || origMinutes != inst.minutes) && !noChange) {
	                inst.input.trigger('change');
	            }
	            this._updateTimepicker(inst);
	            this._updateSelectedValue(inst);
	        },

	        /* Return the current time, ready to be parsed, rounded to the closest minute by interval */
	        _getCurrentTimeRounded: function _getCurrentTimeRounded(inst) {
	            var currentTime = new Date(),
	                currentMinutes = currentTime.getMinutes(),
	                minutes_options = this._get(inst, 'minutes'),

	            // round to closest interval
	            adjustedMinutes = Math.round(currentMinutes / minutes_options.interval) * minutes_options.interval;
	            currentTime.setMinutes(adjustedMinutes);
	            return currentTime;
	        },

	        /*
	        * Parse a time string into hours and minutes
	        */
	        parseTime: function parseTime(inst, timeVal) {
	            var retVal = new Object();
	            retVal.hours = -1;
	            retVal.minutes = -1;

	            if (!timeVal) return '';

	            var timeSeparator = this._get(inst, 'timeSeparator'),
	                amPmText = this._get(inst, 'amPmText'),
	                showHours = this._get(inst, 'showHours'),
	                showMinutes = this._get(inst, 'showMinutes'),
	                optionalMinutes = this._get(inst, 'optionalMinutes'),
	                showPeriod = this._get(inst, 'showPeriod') == true,
	                p = timeVal.indexOf(timeSeparator);

	            // check if time separator found
	            if (p != -1) {
	                retVal.hours = parseInt(timeVal.substr(0, p), 10);
	                retVal.minutes = parseInt(timeVal.substr(p + 1), 10);
	            }
	            // check for hours only
	            else if (showHours && (!showMinutes || optionalMinutes)) {
	                    retVal.hours = parseInt(timeVal, 10);
	                }
	                // check for minutes only
	                else if (!showHours && showMinutes) {
	                        retVal.minutes = parseInt(timeVal, 10);
	                    }

	            if (showHours) {
	                var timeValUpper = timeVal.toUpperCase();
	                if (retVal.hours < 12 && showPeriod && timeValUpper.indexOf(amPmText[1].toUpperCase()) != -1) {
	                    retVal.hours += 12;
	                }
	                // fix for 12 AM
	                if (retVal.hours == 12 && showPeriod && timeValUpper.indexOf(amPmText[0].toUpperCase()) != -1) {
	                    retVal.hours = 0;
	                }
	            }

	            return retVal;
	        },

	        selectNow: function selectNow(event) {
	            var id = $(event.target).attr("data-timepicker-instance-id"),
	                $target = $(id),
	                inst = this._getInst($target[0]);
	            //if (!inst || (input && inst != $.data(input, PROP_NAME))) { return; }
	            var currentTime = new Date();
	            inst.hours = currentTime.getHours();
	            inst.minutes = currentTime.getMinutes();
	            this._updateSelectedValue(inst);
	            this._updateTimepicker(inst);
	            this._hideTimepicker();
	        },

	        deselectTime: function deselectTime(event) {
	            var id = $(event.target).attr("data-timepicker-instance-id"),
	                $target = $(id),
	                inst = this._getInst($target[0]);
	            inst.hours = -1;
	            inst.minutes = -1;
	            this._updateSelectedValue(inst);
	            this._hideTimepicker();
	        },

	        selectHours: function selectHours(event) {
	            var $td = $(event.currentTarget),
	                id = $td.attr("data-timepicker-instance-id"),
	                newHours = parseInt($td.attr("data-hour")),
	                fromDoubleClick = event.data.fromDoubleClick,
	                $target = $(id),
	                inst = this._getInst($target[0]),
	                showMinutes = this._get(inst, 'showMinutes') == true;

	            // don't select if disabled
	            if ($.timepicker._isDisabledTimepicker($target.attr('id'))) {
	                return false;
	            }

	            $td.parents('.ui-timepicker-hours:first').find('a').removeClass('ui-state-active');
	            $td.children('a').addClass('ui-state-active');
	            inst.hours = newHours;

	            // added for onMinuteShow callback
	            var onMinuteShow = this._get(inst, 'onMinuteShow'),
	                maxTime = this._get(inst, 'maxTime'),
	                minTime = this._get(inst, 'minTime');
	            if (onMinuteShow || maxTime.minute || minTime.minute) {
	                // this will trigger a callback on selected hour to make sure selected minute is allowed.
	                this._updateMinuteDisplay(inst);
	            }

	            this._updateSelectedValue(inst);

	            inst._hoursClicked = true;
	            if (inst._minutesClicked || fromDoubleClick || showMinutes == false) {
	                $.timepicker._hideTimepicker();
	            }
	            // return false because if used inline, prevent the url to change to a hashtag
	            return false;
	        },

	        selectMinutes: function selectMinutes(event) {
	            var $td = $(event.currentTarget),
	                id = $td.attr("data-timepicker-instance-id"),
	                newMinutes = parseInt($td.attr("data-minute")),
	                fromDoubleClick = event.data.fromDoubleClick,
	                $target = $(id),
	                inst = this._getInst($target[0]),
	                showHours = this._get(inst, 'showHours') == true;

	            // don't select if disabled
	            if ($.timepicker._isDisabledTimepicker($target.attr('id'))) {
	                return false;
	            }

	            $td.parents('.ui-timepicker-minutes:first').find('a').removeClass('ui-state-active');
	            $td.children('a').addClass('ui-state-active');

	            inst.minutes = newMinutes;
	            this._updateSelectedValue(inst);

	            inst._minutesClicked = true;
	            if (inst._hoursClicked || fromDoubleClick || showHours == false) {
	                $.timepicker._hideTimepicker();
	                // return false because if used inline, prevent the url to change to a hashtag
	                return false;
	            }

	            // return false because if used inline, prevent the url to change to a hashtag
	            return false;
	        },

	        _updateSelectedValue: function _updateSelectedValue(inst) {
	            var newTime = this._getParsedTime(inst);
	            if (inst.input) {
	                inst.input.val(newTime);
	                inst.input.trigger('change');
	            }
	            var onSelect = this._get(inst, 'onSelect');
	            if (onSelect) {
	                onSelect.apply(inst.input ? inst.input[0] : null, [newTime, inst]);
	            } // trigger custom callback
	            this._updateAlternate(inst, newTime);
	            return newTime;
	        },

	        /* this function process selected time and return it parsed according to instance options */
	        _getParsedTime: function _getParsedTime(inst) {

	            if (inst.hours == -1 && inst.minutes == -1) {
	                return '';
	            }

	            // default to 0 AM if hours is not valid
	            if (inst.hours < inst.hours.starts || inst.hours > inst.hours.ends) {
	                inst.hours = 0;
	            }
	            // default to 0 minutes if minute is not valid
	            if (inst.minutes < inst.minutes.starts || inst.minutes > inst.minutes.ends) {
	                inst.minutes = 0;
	            }

	            var period = "",
	                showPeriod = this._get(inst, 'showPeriod') == true,
	                showLeadingZero = this._get(inst, 'showLeadingZero') == true,
	                showHours = this._get(inst, 'showHours') == true,
	                showMinutes = this._get(inst, 'showMinutes') == true,
	                optionalMinutes = this._get(inst, 'optionalMinutes') == true,
	                amPmText = this._get(inst, 'amPmText'),
	                selectedHours = inst.hours ? inst.hours : 0,
	                selectedMinutes = inst.minutes ? inst.minutes : 0,
	                displayHours = selectedHours ? selectedHours : 0,
	                parsedTime = '';

	            // fix some display problem when hours or minutes are not selected yet
	            if (displayHours == -1) {
	                displayHours = 0;
	            }
	            if (selectedMinutes == -1) {
	                selectedMinutes = 0;
	            }

	            if (showPeriod) {
	                if (inst.hours == 0) {
	                    displayHours = 12;
	                }
	                if (inst.hours < 12) {
	                    period = amPmText[0];
	                } else {
	                    period = amPmText[1];
	                    if (displayHours > 12) {
	                        displayHours -= 12;
	                    }
	                }
	            }

	            var h = displayHours.toString();
	            if (showLeadingZero && displayHours < 10) {
	                h = '0' + h;
	            }

	            var m = selectedMinutes.toString();
	            if (selectedMinutes < 10) {
	                m = '0' + m;
	            }

	            if (showHours) {
	                parsedTime += h;
	            }
	            if (showHours && showMinutes && (!optionalMinutes || m != 0)) {
	                parsedTime += this._get(inst, 'timeSeparator');
	            }
	            if (showMinutes && (!optionalMinutes || m != 0)) {
	                parsedTime += m;
	            }
	            if (showHours) {
	                if (period.length > 0) {
	                    parsedTime += this._get(inst, 'periodSeparator') + period;
	                }
	            }

	            return parsedTime;
	        },

	        /* Update any alternate field to synchronise with the main field. */
	        _updateAlternate: function _updateAlternate(inst, newTime) {
	            var altField = this._get(inst, 'altField');
	            if (altField) {
	                // update alternate field too
	                $(altField).each(function (i, e) {
	                    $(e).val(newTime);
	                });
	            }
	        },

	        _getTimeAsDateTimepicker: function _getTimeAsDateTimepicker(input) {
	            var inst = this._getInst(input);
	            if (inst.hours == -1 && inst.minutes == -1) {
	                return '';
	            }

	            // default to 0 AM if hours is not valid
	            if (inst.hours < inst.hours.starts || inst.hours > inst.hours.ends) {
	                inst.hours = 0;
	            }
	            // default to 0 minutes if minute is not valid
	            if (inst.minutes < inst.minutes.starts || inst.minutes > inst.minutes.ends) {
	                inst.minutes = 0;
	            }

	            return new Date(0, 0, 0, inst.hours, inst.minutes, 0);
	        },
	        /* This might look unused but it's called by the $.fn.timepicker function with param getTime */
	        /* added v 0.2.3 - gitHub issue #5 - Thanks edanuff */
	        _getTimeTimepicker: function _getTimeTimepicker(input) {
	            var inst = this._getInst(input);
	            return this._getParsedTime(inst);
	        },
	        _getHourTimepicker: function _getHourTimepicker(input) {
	            var inst = this._getInst(input);
	            if (inst == undefined) {
	                return -1;
	            }
	            return inst.hours;
	        },
	        _getMinuteTimepicker: function _getMinuteTimepicker(input) {
	            var inst = this._getInst(input);
	            if (inst == undefined) {
	                return -1;
	            }
	            return inst.minutes;
	        }

	    });

	    /* Invoke the timepicker functionality.
	    @param  options  string - a command, optionally followed by additional parameters or
	    Object - settings for attaching new timepicker functionality
	    @return  jQuery object */
	    $.fn.timepicker = function (options) {
	        /* Initialise the time picker. */
	        if (!$.timepicker.initialized) {
	            $(document).mousedown($.timepicker._checkExternalClick);
	            $.timepicker.initialized = true;
	        }

	        /* Append timepicker main container to body if not exist. */
	        if ($("#" + $.timepicker._mainDivId).length === 0) {
	            $('body').append($.timepicker.tpDiv);
	        }

	        var otherArgs = Array.prototype.slice.call(arguments, 1);
	        if (typeof options == 'string' && (options == 'getTime' || options == 'getTimeAsDate' || options == 'getHour' || options == 'getMinute')) return $.timepicker['_' + options + 'Timepicker'].apply($.timepicker, [this[0]].concat(otherArgs));
	        if (options == 'option' && arguments.length == 2 && typeof arguments[1] == 'string') return $.timepicker['_' + options + 'Timepicker'].apply($.timepicker, [this[0]].concat(otherArgs));
	        return this.each(function () {
	            typeof options == 'string' ? $.timepicker['_' + options + 'Timepicker'].apply($.timepicker, [this].concat(otherArgs)) : $.timepicker._attachTimepicker(this, options);
	        });
	    };

	    /* jQuery extend now ignores nulls! */
	    function extendRemove(target, props) {
	        $.extend(target, props);
	        for (var name in props) {
	            if (props[name] == null || props[name] == undefined) target[name] = props[name];
	        }return target;
	    };

	    $.timepicker = new Timepicker(); // singleton instance
	    $.timepicker.initialized = false;
	    $.timepicker.uuid = new Date().getTime();
	    $.timepicker.version = "0.3.3";

	    // Workaround for #4055
	    // Add another global to avoid noConflict issues with inline event handlers
	    window['TP_jQuery_' + tpuuid] = $;
	})(jQuery);

/***/ },
/* 541 */
/***/ function(module, exports) {

	/** @license
	 * eventsource.js
	 * Available under MIT License (MIT)
	 * https://github.com/Yaffle/EventSource/
	 */

	/*jslint indent: 2, vars: true, plusplus: true */
	/*global setTimeout, clearTimeout */

	(function (global) {
	  "use strict";

	  var setTimeout = global.setTimeout;
	  var clearTimeout = global.clearTimeout;

	  function Map() {
	    this.data = {};
	  }

	  Map.prototype.get = function (key) {
	    return this.data[key + "~"];
	  };
	  Map.prototype.set = function (key, value) {
	    this.data[key + "~"] = value;
	  };
	  Map.prototype["delete"] = function (key) {
	    delete this.data[key + "~"];
	  };

	  function EventTarget() {
	    this.listeners = new Map();
	  }

	  function throwError(e) {
	    setTimeout(function () {
	      throw e;
	    }, 0);
	  }

	  EventTarget.prototype.dispatchEvent = function (event) {
	    event.target = this;
	    var type = event.type.toString();
	    var listeners = this.listeners;
	    var typeListeners = listeners.get(type);
	    if (typeListeners == undefined) {
	      return;
	    }
	    var length = typeListeners.length;
	    var i = -1;
	    var listener = undefined;
	    while (++i < length) {
	      listener = typeListeners[i];
	      try {
	        listener.call(this, event);
	      } catch (e) {
	        throwError(e);
	      }
	    }
	  };
	  EventTarget.prototype.addEventListener = function (type, callback) {
	    type = type.toString();
	    var listeners = this.listeners;
	    var typeListeners = listeners.get(type);
	    if (typeListeners == undefined) {
	      typeListeners = [];
	      listeners.set(type, typeListeners);
	    }
	    var i = typeListeners.length;
	    while (--i >= 0) {
	      if (typeListeners[i] === callback) {
	        return;
	      }
	    }
	    typeListeners.push(callback);
	  };
	  EventTarget.prototype.removeEventListener = function (type, callback) {
	    type = type.toString();
	    var listeners = this.listeners;
	    var typeListeners = listeners.get(type);
	    if (typeListeners == undefined) {
	      return;
	    }
	    var length = typeListeners.length;
	    var filtered = [];
	    var i = -1;
	    while (++i < length) {
	      if (typeListeners[i] !== callback) {
	        filtered.push(typeListeners[i]);
	      }
	    }
	    if (filtered.length === 0) {
	      listeners["delete"](type);
	    } else {
	      listeners.set(type, filtered);
	    }
	  };

	  function Event(type) {
	    this.type = type;
	    this.target = undefined;
	  }

	  function MessageEvent(type, options) {
	    Event.call(this, type);
	    this.data = options.data;
	    this.lastEventId = options.lastEventId;
	  }

	  MessageEvent.prototype = Event.prototype;

	  var XHR = global.XMLHttpRequest;
	  var XDR = global.XDomainRequest;
	  var isCORSSupported = XHR != undefined && (new XHR()).withCredentials != undefined;
	  var Transport = isCORSSupported || (XHR != undefined && XDR == undefined) ? XHR : XDR;

	  var WAITING = -1;
	  var CONNECTING = 0;
	  var OPEN = 1;
	  var CLOSED = 2;
	  var AFTER_CR = 3;
	  var FIELD_START = 4;
	  var FIELD = 5;
	  var VALUE_START = 6;
	  var VALUE = 7;
	  var contentTypeRegExp = /^text\/event\-stream;?(\s*charset\=utf\-8)?$/i;

	  var MINIMUM_DURATION = 1000;
	  var MAXIMUM_DURATION = 18000000;

	  function getDuration(value, def) {
	    var n = value;
	    if (n !== n) {
	      n = def;
	    }
	    return (n < MINIMUM_DURATION ? MINIMUM_DURATION : (n > MAXIMUM_DURATION ? MAXIMUM_DURATION : n));
	  }

	  function fire(that, f, event) {
	    try {
	      if (typeof f === "function") {
	        f.call(that, event);
	      }
	    } catch (e) {
	      throwError(e);
	    }
	  }

	  function EventSource(url, options) {
	    url = url.toString();

	    var withCredentials = isCORSSupported && options != undefined && Boolean(options.withCredentials);
	    var initialRetry = getDuration(1000, 0);
	    var heartbeatTimeout = getDuration(45000, 0);

	    var lastEventId = "";
	    var that = this;
	    var retry = initialRetry;
	    var wasActivity = false;
	    var CurrentTransport = options != undefined && options.Transport != undefined ? options.Transport : Transport;
	    var xhr = new CurrentTransport();
	    var timeout = 0;
	    var timeout0 = 0;
	    var charOffset = 0;
	    var currentState = WAITING;
	    var dataBuffer = [];
	    var lastEventIdBuffer = "";
	    var eventTypeBuffer = "";
	    var onTimeout = undefined;

	    var state = FIELD_START;
	    var field = "";
	    var value = "";

	    function close() {
	      currentState = CLOSED;
	      if (xhr != undefined) {
	        xhr.abort();
	        xhr = undefined;
	      }
	      if (timeout !== 0) {
	        clearTimeout(timeout);
	        timeout = 0;
	      }
	      if (timeout0 !== 0) {
	        clearTimeout(timeout0);
	        timeout0 = 0;
	      }
	      that.readyState = CLOSED;
	    }

	    function onEvent(type) {
	      var responseText = "";
	      if (currentState === OPEN || currentState === CONNECTING) {
	        try {
	          responseText = xhr.responseText;
	        } catch (error) {
	          // IE 8 - 9 with XMLHttpRequest
	        }
	      }
	      var event = undefined;
	      var isWrongStatusCodeOrContentType = false;

	      if (currentState === CONNECTING) {
	        var status = 0;
	        var statusText = "";
	        var contentType = undefined;
	        if (!("contentType" in xhr)) {
	          try {
	            status = xhr.status;
	            statusText = xhr.statusText;
	            contentType = xhr.getResponseHeader("Content-Type");
	          } catch (error) {
	            // https://bugs.webkit.org/show_bug.cgi?id=29121
	            status = 0;
	            statusText = "";
	            contentType = undefined;
	            // FF < 14, WebKit
	            // https://bugs.webkit.org/show_bug.cgi?id=29658
	            // https://bugs.webkit.org/show_bug.cgi?id=77854
	          }
	        } else if (type !== "" && type !== "error") {
	          status = 200;
	          statusText = "OK";
	          contentType = xhr.contentType;
	        }
	        if (contentType == undefined) {
	          contentType = "";
	        }
	        if (status === 0 && statusText === "" && type === "load" && responseText !== "") {
	          status = 200;
	          statusText = "OK";
	          if (contentType === "") { // Opera 12
	            var tmp = (/^data\:([^,]*?)(?:;base64)?,[\S]*$/).exec(url);
	            if (tmp != undefined) {
	              contentType = tmp[1];
	            }
	          }
	        }
	        if (status === 200 && contentTypeRegExp.test(contentType)) {
	          currentState = OPEN;
	          wasActivity = true;
	          retry = initialRetry;
	          that.readyState = OPEN;
	          event = new Event("open");
	          that.dispatchEvent(event);
	          fire(that, that.onopen, event);
	          if (currentState === CLOSED) {
	            return;
	          }
	        } else {
	          // Opera 12
	          if (status !== 0 && (status !== 200 || contentType !== "")) {
	            var message = "";
	            if (status !== 200) {
	              message = "EventSource's response has a status " + status + " " + statusText.replace(/\s+/g, " ") + " that is not 200. Aborting the connection.";
	            } else {
	              message = "EventSource's response has a Content-Type specifying an unsupported type: " + contentType.replace(/\s+/g, " ") + ". Aborting the connection.";
	            }
	            setTimeout(function () {
	              throw new Error(message);
	            }, 0);
	            isWrongStatusCodeOrContentType = true;
	          }
	        }
	      }

	      if (currentState === OPEN) {
	        if (responseText.length > charOffset) {
	          wasActivity = true;
	        }
	        var i = charOffset - 1;
	        var length = responseText.length;
	        var c = "\n";
	        while (++i < length) {
	          c = responseText.charAt(i);
	          if (state === AFTER_CR && c === "\n") {
	            state = FIELD_START;
	          } else {
	            if (state === AFTER_CR) {
	              state = FIELD_START;
	            }
	            if (c === "\r" || c === "\n") {
	              if (field === "data") {
	                dataBuffer.push(value);
	              } else if (field === "id") {
	                lastEventIdBuffer = value;
	              } else if (field === "event") {
	                eventTypeBuffer = value;
	              } else if (field === "retry") {
	                initialRetry = getDuration(Number(value), initialRetry);
	                retry = initialRetry;
	              } else if (field === "heartbeatTimeout") {
	                heartbeatTimeout = getDuration(Number(value), heartbeatTimeout);
	                if (timeout !== 0) {
	                  clearTimeout(timeout);
	                  timeout = setTimeout(onTimeout, heartbeatTimeout);
	                }
	              }
	              value = "";
	              field = "";
	              if (state === FIELD_START) {
	                if (dataBuffer.length !== 0) {
	                  lastEventId = lastEventIdBuffer;
	                  if (eventTypeBuffer === "") {
	                    eventTypeBuffer = "message";
	                  }
	                  event = new MessageEvent(eventTypeBuffer, {
	                    data: dataBuffer.join("\n"),
	                    lastEventId: lastEventIdBuffer
	                  });
	                  that.dispatchEvent(event);
	                  if (eventTypeBuffer === "message") {
	                    fire(that, that.onmessage, event);
	                  }
	                  if (currentState === CLOSED) {
	                    return;
	                  }
	                }
	                dataBuffer.length = 0;
	                eventTypeBuffer = "";
	              }
	              state = c === "\r" ? AFTER_CR : FIELD_START;
	            } else {
	              if (state === FIELD_START) {
	                state = FIELD;
	              }
	              if (state === FIELD) {
	                if (c === ":") {
	                  state = VALUE_START;
	                } else {
	                  field += c;
	                }
	              } else if (state === VALUE_START) {
	                if (c !== " ") {
	                  value += c;
	                }
	                state = VALUE;
	              } else if (state === VALUE) {
	                value += c;
	              }
	            }
	          }
	        }
	        charOffset = length;
	      }

	      if ((currentState === OPEN || currentState === CONNECTING) &&
	          (type === "load" || type === "error" || isWrongStatusCodeOrContentType || (charOffset > 1024 * 1024) || (timeout === 0 && !wasActivity))) {
	        if (isWrongStatusCodeOrContentType) {
	          close();
	        } else {
	          if (type === "" && timeout === 0 && !wasActivity) {
	            setTimeout(function () {
	              throw new Error("No activity within " + heartbeatTimeout + " milliseconds. Reconnecting.");
	            }, 0);
	          }
	          currentState = WAITING;
	          xhr.abort();
	          if (timeout !== 0) {
	            clearTimeout(timeout);
	            timeout = 0;
	          }
	          if (retry > initialRetry * 16) {
	            retry = initialRetry * 16;
	          }
	          if (retry > MAXIMUM_DURATION) {
	            retry = MAXIMUM_DURATION;
	          }
	          timeout = setTimeout(onTimeout, retry);
	          retry = retry * 2 + 1;

	          that.readyState = CONNECTING;
	        }
	        event = new Event("error");
	        that.dispatchEvent(event);
	        fire(that, that.onerror, event);
	      } else {
	        if (timeout === 0) {
	          wasActivity = false;
	          timeout = setTimeout(onTimeout, heartbeatTimeout);
	        }
	      }
	    }

	    function onProgress() {
	      onEvent("progress");
	    }

	    function onLoad() {
	      onEvent("load");
	    }

	    function onError() {
	      onEvent("error");
	    }

	    function onReadyStateChange() {
	      if (xhr.readyState === 4) {
	        if (xhr.status === 0) {
	          onEvent("error");
	        } else {
	          onEvent("load");
	        }
	      } else {
	        onEvent("progress");
	      }
	    }

	    if (("readyState" in xhr) && global.opera != undefined) {
	      // workaround for Opera issue with "progress" events
	      timeout0 = setTimeout(function f() {
	        if (xhr.readyState === 3) {
	          onEvent("progress");
	        }
	        timeout0 = setTimeout(f, 500);
	      }, 0);
	    }

	    onTimeout = function () {
	      timeout = 0;
	      if (currentState !== WAITING) {
	        onEvent("");
	        return;
	      }

	      // loading indicator in Safari, Chrome < 14
	      // loading indicator in Firefox
	      // https://bugzilla.mozilla.org/show_bug.cgi?id=736723
	      if ((!("ontimeout" in xhr) || ("sendAsBinary" in xhr) || ("mozAnon" in xhr)) && global.document != undefined && global.document.readyState != undefined && global.document.readyState !== "complete") {
	        timeout = setTimeout(onTimeout, 4);
	        return;
	      }

	      // XDomainRequest#abort removes onprogress, onerror, onload
	      xhr.onload = onLoad;
	      xhr.onerror = onError;

	      if ("onabort" in xhr) {
	        // improper fix to match Firefox behaviour, but it is better than just ignore abort
	        // see https://bugzilla.mozilla.org/show_bug.cgi?id=768596
	        // https://bugzilla.mozilla.org/show_bug.cgi?id=880200
	        // https://code.google.com/p/chromium/issues/detail?id=153570
	        xhr.onabort = onError;
	      }

	      if ("onprogress" in xhr) {
	        xhr.onprogress = onProgress;
	      }
	      // IE 8-9 (XMLHTTPRequest)
	      // Firefox 3.5 - 3.6 - ? < 9.0
	      // onprogress is not fired sometimes or delayed
	      // see also #64
	      if ("onreadystatechange" in xhr) {
	        xhr.onreadystatechange = onReadyStateChange;
	      }

	      wasActivity = false;
	      timeout = setTimeout(onTimeout, heartbeatTimeout);

	      charOffset = 0;
	      currentState = CONNECTING;
	      dataBuffer.length = 0;
	      eventTypeBuffer = "";
	      lastEventIdBuffer = lastEventId;
	      value = "";
	      field = "";
	      state = FIELD_START;

	      var s = url.slice(0, 5);
	      if (s !== "data:" && s !== "blob:") {
	        s = url + ((url.indexOf("?", 0) === -1 ? "?" : "&") + "lastEventId=" + encodeURIComponent(lastEventId) + "&r=" + (Math.random() + 1).toString().slice(2));
	      } else {
	        s = url;
	      }
	      xhr.open("GET", s, true);

	      if ("withCredentials" in xhr) {
	        // withCredentials should be set after "open" for Safari and Chrome (< 19 ?)
	        xhr.withCredentials = withCredentials;
	      }

	      if ("responseType" in xhr) {
	        xhr.responseType = "text";
	      }

	      if ("setRequestHeader" in xhr) {
	        // Request header field Cache-Control is not allowed by Access-Control-Allow-Headers.
	        // "Cache-control: no-cache" are not honored in Chrome and Firefox
	        // https://bugzilla.mozilla.org/show_bug.cgi?id=428916
	        //xhr.setRequestHeader("Cache-Control", "no-cache");
	        xhr.setRequestHeader("Accept", "text/event-stream");
	        // Request header field Last-Event-ID is not allowed by Access-Control-Allow-Headers.
	        //xhr.setRequestHeader("Last-Event-ID", lastEventId);
	      }

	      xhr.send(undefined);
	    };

	    EventTarget.call(this);
	    this.close = close;
	    this.url = url;
	    this.readyState = CONNECTING;
	    this.withCredentials = withCredentials;

	    this.onopen = undefined;
	    this.onmessage = undefined;
	    this.onerror = undefined;

	    onTimeout();
	  }

	  function F() {
	    this.CONNECTING = CONNECTING;
	    this.OPEN = OPEN;
	    this.CLOSED = CLOSED;
	  }
	  F.prototype = EventTarget.prototype;

	  EventSource.prototype = new F();
	  F.call(EventSource);
	  if (isCORSSupported) {
	    EventSource.prototype.withCredentials = undefined;
	  }

	  var isEventSourceSupported = function () {
	    // Opera 12 fails this test, but this is fine.
	    return global.EventSource != undefined && ("withCredentials" in global.EventSource.prototype);
	  };

	  if (Transport != undefined && (global.EventSource == undefined || (isCORSSupported && !isEventSourceSupported()))) {
	    // Why replace a native EventSource ?
	    // https://bugzilla.mozilla.org/show_bug.cgi?id=444328
	    // https://bugzilla.mozilla.org/show_bug.cgi?id=831392
	    // https://code.google.com/p/chromium/issues/detail?id=260144
	    // https://code.google.com/p/chromium/issues/detail?id=225654
	    // ...
	    global.NativeEventSource = global.EventSource;
	    global.EventSource = EventSource;
	  }

	}(typeof window !== 'undefined' ? window : this));


/***/ },
/* 542 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;"use strict";

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	/*! jQuery UI - v1.11.0 - 2014-08-11
	* http://jqueryui.com
	* Includes: core.js, widget.js, mouse.js, draggable.js, datepicker.js, tabs.js
	* Copyright 2014 jQuery Foundation and other contributors; Licensed MIT */

	(function (factory) {
		if (true) {

			// AMD. Register as an anonymous module.
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {

			// Browser globals
			factory(jQuery);
		}
	})(function ($) {
		/*!
	  * jQuery UI Core 1.11.0
	  * http://jqueryui.com
	  *
	  * Copyright 2014 jQuery Foundation and other contributors
	  * Released under the MIT license.
	  * http://jquery.org/license
	  *
	  * http://api.jqueryui.com/category/ui-core/
	  */

		// $.ui might exist from components with no dependencies, e.g., $.ui.position
		$.ui = $.ui || {};

		$.extend($.ui, {
			version: "1.11.0",

			keyCode: {
				BACKSPACE: 8,
				COMMA: 188,
				DELETE: 46,
				DOWN: 40,
				END: 35,
				ENTER: 13,
				ESCAPE: 27,
				HOME: 36,
				LEFT: 37,
				PAGE_DOWN: 34,
				PAGE_UP: 33,
				PERIOD: 190,
				RIGHT: 39,
				SPACE: 32,
				TAB: 9,
				UP: 38
			}
		});

		// plugins
		$.fn.extend({
			scrollParent: function scrollParent() {
				var position = this.css("position"),
				    excludeStaticParent = position === "absolute",
				    scrollParent = this.parents().filter(function () {
					var parent = $(this);
					if (excludeStaticParent && parent.css("position") === "static") {
						return false;
					}
					return (/(auto|scroll)/.test(parent.css("overflow") + parent.css("overflow-y") + parent.css("overflow-x"))
					);
				}).eq(0);

				return position === "fixed" || !scrollParent.length ? $(this[0].ownerDocument || document) : scrollParent;
			},

			uniqueId: function () {
				var uuid = 0;

				return function () {
					return this.each(function () {
						if (!this.id) {
							this.id = "ui-id-" + ++uuid;
						}
					});
				};
			}(),

			removeUniqueId: function removeUniqueId() {
				return this.each(function () {
					if (/^ui-id-\d+$/.test(this.id)) {
						$(this).removeAttr("id");
					}
				});
			}
		});

		// selectors
		function _focusable(element, isTabIndexNotNaN) {
			var map,
			    mapName,
			    img,
			    nodeName = element.nodeName.toLowerCase();
			if ("area" === nodeName) {
				map = element.parentNode;
				mapName = map.name;
				if (!element.href || !mapName || map.nodeName.toLowerCase() !== "map") {
					return false;
				}
				img = $("img[usemap=#" + mapName + "]")[0];
				return !!img && visible(img);
			}
			return (/input|select|textarea|button|object/.test(nodeName) ? !element.disabled : "a" === nodeName ? element.href || isTabIndexNotNaN : isTabIndexNotNaN) &&
			// the element and all of its ancestors must be visible
			visible(element);
		}

		function visible(element) {
			return $.expr.filters.visible(element) && !$(element).parents().addBack().filter(function () {
				return $.css(this, "visibility") === "hidden";
			}).length;
		}

		$.extend($.expr[":"], {
			data: $.expr.createPseudo ? $.expr.createPseudo(function (dataName) {
				return function (elem) {
					return !!$.data(elem, dataName);
				};
			}) :
			// support: jQuery <1.8
			function (elem, i, match) {
				return !!$.data(elem, match[3]);
			},

			focusable: function focusable(element) {
				return _focusable(element, !isNaN($.attr(element, "tabindex")));
			},

			tabbable: function tabbable(element) {
				var tabIndex = $.attr(element, "tabindex"),
				    isTabIndexNaN = isNaN(tabIndex);
				return (isTabIndexNaN || tabIndex >= 0) && _focusable(element, !isTabIndexNaN);
			}
		});

		// support: jQuery <1.8
		if (!$("<a>").outerWidth(1).jquery) {
			$.each(["Width", "Height"], function (i, name) {
				var side = name === "Width" ? ["Left", "Right"] : ["Top", "Bottom"],
				    type = name.toLowerCase(),
				    orig = {
					innerWidth: $.fn.innerWidth,
					innerHeight: $.fn.innerHeight,
					outerWidth: $.fn.outerWidth,
					outerHeight: $.fn.outerHeight
				};

				function reduce(elem, size, border, margin) {
					$.each(side, function () {
						size -= parseFloat($.css(elem, "padding" + this)) || 0;
						if (border) {
							size -= parseFloat($.css(elem, "border" + this + "Width")) || 0;
						}
						if (margin) {
							size -= parseFloat($.css(elem, "margin" + this)) || 0;
						}
					});
					return size;
				}

				$.fn["inner" + name] = function (size) {
					if (size === undefined) {
						return orig["inner" + name].call(this);
					}

					return this.each(function () {
						$(this).css(type, reduce(this, size) + "px");
					});
				};

				$.fn["outer" + name] = function (size, margin) {
					if (typeof size !== "number") {
						return orig["outer" + name].call(this, size);
					}

					return this.each(function () {
						$(this).css(type, reduce(this, size, true, margin) + "px");
					});
				};
			});
		}

		// support: jQuery <1.8
		if (!$.fn.addBack) {
			$.fn.addBack = function (selector) {
				return this.add(selector == null ? this.prevObject : this.prevObject.filter(selector));
			};
		}

		// support: jQuery 1.6.1, 1.6.2 (http://bugs.jquery.com/ticket/9413)
		if ($("<a>").data("a-b", "a").removeData("a-b").data("a-b")) {
			$.fn.removeData = function (removeData) {
				return function (key) {
					if (arguments.length) {
						return removeData.call(this, $.camelCase(key));
					} else {
						return removeData.call(this);
					}
				};
			}($.fn.removeData);
		}

		// deprecated
		$.ui.ie = !!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase());

		$.fn.extend({
			focus: function (orig) {
				return function (delay, fn) {
					return typeof delay === "number" ? this.each(function () {
						var elem = this;
						setTimeout(function () {
							$(elem).focus();
							if (fn) {
								fn.call(elem);
							}
						}, delay);
					}) : orig.apply(this, arguments);
				};
			}($.fn.focus),

			disableSelection: function () {
				var eventType = "onselectstart" in document.createElement("div") ? "selectstart" : "mousedown";

				return function () {
					return this.bind(eventType + ".ui-disableSelection", function (event) {
						event.preventDefault();
					});
				};
			}(),

			enableSelection: function enableSelection() {
				return this.unbind(".ui-disableSelection");
			},

			zIndex: function zIndex(_zIndex) {
				if (_zIndex !== undefined) {
					return this.css("zIndex", _zIndex);
				}

				if (this.length) {
					var elem = $(this[0]),
					    position,
					    value;
					while (elem.length && elem[0] !== document) {
						// Ignore z-index if position is set to a value where z-index is ignored by the browser
						// This makes behavior of this function consistent across browsers
						// WebKit always returns auto if the element is positioned
						position = elem.css("position");
						if (position === "absolute" || position === "relative" || position === "fixed") {
							// IE returns 0 when zIndex is not specified
							// other browsers return a string
							// we ignore the case of nested elements with an explicit value of 0
							// <div style="z-index: -10;"><div style="z-index: 0;"></div></div>
							value = parseInt(elem.css("zIndex"), 10);
							if (!isNaN(value) && value !== 0) {
								return value;
							}
						}
						elem = elem.parent();
					}
				}

				return 0;
			}
		});

		// $.ui.plugin is deprecated. Use $.widget() extensions instead.
		$.ui.plugin = {
			add: function add(module, option, set) {
				var i,
				    proto = $.ui[module].prototype;
				for (i in set) {
					proto.plugins[i] = proto.plugins[i] || [];
					proto.plugins[i].push([option, set[i]]);
				}
			},
			call: function call(instance, name, args, allowDisconnected) {
				var i,
				    set = instance.plugins[name];

				if (!set) {
					return;
				}

				if (!allowDisconnected && (!instance.element[0].parentNode || instance.element[0].parentNode.nodeType === 11)) {
					return;
				}

				for (i = 0; i < set.length; i++) {
					if (instance.options[set[i][0]]) {
						set[i][1].apply(instance.element, args);
					}
				}
			}
		};

		/*!
	  * jQuery UI Widget 1.11.0
	  * http://jqueryui.com
	  *
	  * Copyright 2014 jQuery Foundation and other contributors
	  * Released under the MIT license.
	  * http://jquery.org/license
	  *
	  * http://api.jqueryui.com/jQuery.widget/
	  */

		var widget_uuid = 0,
		    widget_slice = Array.prototype.slice;

		$.cleanData = function (orig) {
			return function (elems) {
				for (var i = 0, elem; (elem = elems[i]) != null; i++) {
					try {
						$(elem).triggerHandler("remove");
						// http://bugs.jquery.com/ticket/8235
					} catch (e) {}
				}
				orig(elems);
			};
		}($.cleanData);

		$.widget = function (name, base, prototype) {
			var fullName,
			    existingConstructor,
			    constructor,
			    basePrototype,

			// proxiedPrototype allows the provided prototype to remain unmodified
			// so that it can be used as a mixin for multiple widgets (#8876)
			proxiedPrototype = {},
			    namespace = name.split(".")[0];

			name = name.split(".")[1];
			fullName = namespace + "-" + name;

			if (!prototype) {
				prototype = base;
				base = $.Widget;
			}

			// create selector for plugin
			$.expr[":"][fullName.toLowerCase()] = function (elem) {
				return !!$.data(elem, fullName);
			};

			$[namespace] = $[namespace] || {};
			existingConstructor = $[namespace][name];
			constructor = $[namespace][name] = function (options, element) {
				// allow instantiation without "new" keyword
				if (!this._createWidget) {
					return new constructor(options, element);
				}

				// allow instantiation without initializing for simple inheritance
				// must use "new" keyword (the code above always passes args)
				if (arguments.length) {
					this._createWidget(options, element);
				}
			};
			// extend with the existing constructor to carry over any static properties
			$.extend(constructor, existingConstructor, {
				version: prototype.version,
				// copy the object used to create the prototype in case we need to
				// redefine the widget later
				_proto: $.extend({}, prototype),
				// track widgets that inherit from this widget in case this widget is
				// redefined after a widget inherits from it
				_childConstructors: []
			});

			basePrototype = new base();
			// we need to make the options hash a property directly on the new instance
			// otherwise we'll modify the options hash on the prototype that we're
			// inheriting from
			basePrototype.options = $.widget.extend({}, basePrototype.options);
			$.each(prototype, function (prop, value) {
				if (!$.isFunction(value)) {
					proxiedPrototype[prop] = value;
					return;
				}
				proxiedPrototype[prop] = function () {
					var _super = function _super() {
						return base.prototype[prop].apply(this, arguments);
					},
					    _superApply = function _superApply(args) {
						return base.prototype[prop].apply(this, args);
					};
					return function () {
						var __super = this._super,
						    __superApply = this._superApply,
						    returnValue;

						this._super = _super;
						this._superApply = _superApply;

						returnValue = value.apply(this, arguments);

						this._super = __super;
						this._superApply = __superApply;

						return returnValue;
					};
				}();
			});
			constructor.prototype = $.widget.extend(basePrototype, {
				// TODO: remove support for widgetEventPrefix
				// always use the name + a colon as the prefix, e.g., draggable:start
				// don't prefix for widgets that aren't DOM-based
				widgetEventPrefix: existingConstructor ? basePrototype.widgetEventPrefix || name : name
			}, proxiedPrototype, {
				constructor: constructor,
				namespace: namespace,
				widgetName: name,
				widgetFullName: fullName
			});

			// If this widget is being redefined then we need to find all widgets that
			// are inheriting from it and redefine all of them so that they inherit from
			// the new version of this widget. We're essentially trying to replace one
			// level in the prototype chain.
			if (existingConstructor) {
				$.each(existingConstructor._childConstructors, function (i, child) {
					var childPrototype = child.prototype;

					// redefine the child widget using the same prototype that was
					// originally used, but inherit from the new version of the base
					$.widget(childPrototype.namespace + "." + childPrototype.widgetName, constructor, child._proto);
				});
				// remove the list of existing child constructors from the old constructor
				// so the old child constructors can be garbage collected
				delete existingConstructor._childConstructors;
			} else {
				base._childConstructors.push(constructor);
			}

			$.widget.bridge(name, constructor);

			return constructor;
		};

		$.widget.extend = function (target) {
			var input = widget_slice.call(arguments, 1),
			    inputIndex = 0,
			    inputLength = input.length,
			    key,
			    value;
			for (; inputIndex < inputLength; inputIndex++) {
				for (key in input[inputIndex]) {
					value = input[inputIndex][key];
					if (input[inputIndex].hasOwnProperty(key) && value !== undefined) {
						// Clone objects
						if ($.isPlainObject(value)) {
							target[key] = $.isPlainObject(target[key]) ? $.widget.extend({}, target[key], value) :
							// Don't extend strings, arrays, etc. with objects
							$.widget.extend({}, value);
							// Copy everything else by reference
						} else {
							target[key] = value;
						}
					}
				}
			}
			return target;
		};

		$.widget.bridge = function (name, object) {
			var fullName = object.prototype.widgetFullName || name;
			$.fn[name] = function (options) {
				var isMethodCall = typeof options === "string",
				    args = widget_slice.call(arguments, 1),
				    returnValue = this;

				// allow multiple hashes to be passed on init
				options = !isMethodCall && args.length ? $.widget.extend.apply(null, [options].concat(args)) : options;

				if (isMethodCall) {
					this.each(function () {
						var methodValue,
						    instance = $.data(this, fullName);
						if (options === "instance") {
							returnValue = instance;
							return false;
						}
						if (!instance) {
							return $.error("cannot call methods on " + name + " prior to initialization; " + "attempted to call method '" + options + "'");
						}
						if (!$.isFunction(instance[options]) || options.charAt(0) === "_") {
							return $.error("no such method '" + options + "' for " + name + " widget instance");
						}
						methodValue = instance[options].apply(instance, args);
						if (methodValue !== instance && methodValue !== undefined) {
							returnValue = methodValue && methodValue.jquery ? returnValue.pushStack(methodValue.get()) : methodValue;
							return false;
						}
					});
				} else {
					this.each(function () {
						var instance = $.data(this, fullName);
						if (instance) {
							instance.option(options || {});
							if (instance._init) {
								instance._init();
							}
						} else {
							$.data(this, fullName, new object(options, this));
						}
					});
				}

				return returnValue;
			};
		};

		$.Widget = function () /* options, element */{};
		$.Widget._childConstructors = [];

		$.Widget.prototype = {
			widgetName: "widget",
			widgetEventPrefix: "",
			defaultElement: "<div>",
			options: {
				disabled: false,

				// callbacks
				create: null
			},
			_createWidget: function _createWidget(options, element) {
				element = $(element || this.defaultElement || this)[0];
				this.element = $(element);
				this.uuid = widget_uuid++;
				this.eventNamespace = "." + this.widgetName + this.uuid;
				this.options = $.widget.extend({}, this.options, this._getCreateOptions(), options);

				this.bindings = $();
				this.hoverable = $();
				this.focusable = $();

				if (element !== this) {
					$.data(element, this.widgetFullName, this);
					this._on(true, this.element, {
						remove: function remove(event) {
							if (event.target === element) {
								this.destroy();
							}
						}
					});
					this.document = $(element.style ?
					// element within the document
					element.ownerDocument :
					// element is window or document
					element.document || element);
					this.window = $(this.document[0].defaultView || this.document[0].parentWindow);
				}

				this._create();
				this._trigger("create", null, this._getCreateEventData());
				this._init();
			},
			_getCreateOptions: $.noop,
			_getCreateEventData: $.noop,
			_create: $.noop,
			_init: $.noop,

			destroy: function destroy() {
				this._destroy();
				// we can probably remove the unbind calls in 2.0
				// all event bindings should go through this._on()
				this.element.unbind(this.eventNamespace).removeData(this.widgetFullName)
				// support: jquery <1.6.3
				// http://bugs.jquery.com/ticket/9413
				.removeData($.camelCase(this.widgetFullName));
				this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName + "-disabled " + "ui-state-disabled");

				// clean up events and states
				this.bindings.unbind(this.eventNamespace);
				this.hoverable.removeClass("ui-state-hover");
				this.focusable.removeClass("ui-state-focus");
			},
			_destroy: $.noop,

			widget: function widget() {
				return this.element;
			},

			option: function option(key, value) {
				var options = key,
				    parts,
				    curOption,
				    i;

				if (arguments.length === 0) {
					// don't return a reference to the internal hash
					return $.widget.extend({}, this.options);
				}

				if (typeof key === "string") {
					// handle nested keys, e.g., "foo.bar" => { foo: { bar: ___ } }
					options = {};
					parts = key.split(".");
					key = parts.shift();
					if (parts.length) {
						curOption = options[key] = $.widget.extend({}, this.options[key]);
						for (i = 0; i < parts.length - 1; i++) {
							curOption[parts[i]] = curOption[parts[i]] || {};
							curOption = curOption[parts[i]];
						}
						key = parts.pop();
						if (arguments.length === 1) {
							return curOption[key] === undefined ? null : curOption[key];
						}
						curOption[key] = value;
					} else {
						if (arguments.length === 1) {
							return this.options[key] === undefined ? null : this.options[key];
						}
						options[key] = value;
					}
				}

				this._setOptions(options);

				return this;
			},
			_setOptions: function _setOptions(options) {
				var key;

				for (key in options) {
					this._setOption(key, options[key]);
				}

				return this;
			},
			_setOption: function _setOption(key, value) {
				this.options[key] = value;

				if (key === "disabled") {
					this.widget().toggleClass(this.widgetFullName + "-disabled", !!value);

					// If the widget is becoming disabled, then nothing is interactive
					if (value) {
						this.hoverable.removeClass("ui-state-hover");
						this.focusable.removeClass("ui-state-focus");
					}
				}

				return this;
			},

			enable: function enable() {
				return this._setOptions({ disabled: false });
			},
			disable: function disable() {
				return this._setOptions({ disabled: true });
			},

			_on: function _on(suppressDisabledCheck, element, handlers) {
				var delegateElement,
				    instance = this;

				// no suppressDisabledCheck flag, shuffle arguments
				if (typeof suppressDisabledCheck !== "boolean") {
					handlers = element;
					element = suppressDisabledCheck;
					suppressDisabledCheck = false;
				}

				// no element argument, shuffle and use this.element
				if (!handlers) {
					handlers = element;
					element = this.element;
					delegateElement = this.widget();
				} else {
					element = delegateElement = $(element);
					this.bindings = this.bindings.add(element);
				}

				$.each(handlers, function (event, handler) {
					function handlerProxy() {
						// allow widgets to customize the disabled handling
						// - disabled as an array instead of boolean
						// - disabled class as method for disabling individual parts
						if (!suppressDisabledCheck && (instance.options.disabled === true || $(this).hasClass("ui-state-disabled"))) {
							return;
						}
						return (typeof handler === "string" ? instance[handler] : handler).apply(instance, arguments);
					}

					// copy the guid so direct unbinding works
					if (typeof handler !== "string") {
						handlerProxy.guid = handler.guid = handler.guid || handlerProxy.guid || $.guid++;
					}

					var match = event.match(/^([\w:-]*)\s*(.*)$/),
					    eventName = match[1] + instance.eventNamespace,
					    selector = match[2];
					if (selector) {
						delegateElement.delegate(selector, eventName, handlerProxy);
					} else {
						element.bind(eventName, handlerProxy);
					}
				});
			},

			_off: function _off(element, eventName) {
				eventName = (eventName || "").split(" ").join(this.eventNamespace + " ") + this.eventNamespace;
				element.unbind(eventName).undelegate(eventName);
			},

			_delay: function _delay(handler, delay) {
				function handlerProxy() {
					return (typeof handler === "string" ? instance[handler] : handler).apply(instance, arguments);
				}
				var instance = this;
				return setTimeout(handlerProxy, delay || 0);
			},

			_hoverable: function _hoverable(element) {
				this.hoverable = this.hoverable.add(element);
				this._on(element, {
					mouseenter: function mouseenter(event) {
						$(event.currentTarget).addClass("ui-state-hover");
					},
					mouseleave: function mouseleave(event) {
						$(event.currentTarget).removeClass("ui-state-hover");
					}
				});
			},

			_focusable: function _focusable(element) {
				this.focusable = this.focusable.add(element);
				this._on(element, {
					focusin: function focusin(event) {
						$(event.currentTarget).addClass("ui-state-focus");
					},
					focusout: function focusout(event) {
						$(event.currentTarget).removeClass("ui-state-focus");
					}
				});
			},

			_trigger: function _trigger(type, event, data) {
				var prop,
				    orig,
				    callback = this.options[type];

				data = data || {};
				event = $.Event(event);
				event.type = (type === this.widgetEventPrefix ? type : this.widgetEventPrefix + type).toLowerCase();
				// the original event may come from any element
				// so we need to reset the target on the new event
				event.target = this.element[0];

				// copy original event properties over to the new event
				orig = event.originalEvent;
				if (orig) {
					for (prop in orig) {
						if (!(prop in event)) {
							event[prop] = orig[prop];
						}
					}
				}

				this.element.trigger(event, data);
				return !($.isFunction(callback) && callback.apply(this.element[0], [event].concat(data)) === false || event.isDefaultPrevented());
			}
		};

		$.each({ show: "fadeIn", hide: "fadeOut" }, function (method, defaultEffect) {
			$.Widget.prototype["_" + method] = function (element, options, callback) {
				if (typeof options === "string") {
					options = { effect: options };
				}
				var hasOptions,
				    effectName = !options ? method : options === true || typeof options === "number" ? defaultEffect : options.effect || defaultEffect;
				options = options || {};
				if (typeof options === "number") {
					options = { duration: options };
				}
				hasOptions = !$.isEmptyObject(options);
				options.complete = callback;
				if (options.delay) {
					element.delay(options.delay);
				}
				if (hasOptions && $.effects && $.effects.effect[effectName]) {
					element[method](options);
				} else if (effectName !== method && element[effectName]) {
					element[effectName](options.duration, options.easing, callback);
				} else {
					element.queue(function (next) {
						$(this)[method]();
						if (callback) {
							callback.call(element[0]);
						}
						next();
					});
				}
			};
		});

		var widget = $.widget;

		/*!
	  * jQuery UI Mouse 1.11.0
	  * http://jqueryui.com
	  *
	  * Copyright 2014 jQuery Foundation and other contributors
	  * Released under the MIT license.
	  * http://jquery.org/license
	  *
	  * http://api.jqueryui.com/mouse/
	  */

		var mouseHandled = false;
		$(document).mouseup(function () {
			mouseHandled = false;
		});

		var mouse = $.widget("ui.mouse", {
			version: "1.11.0",
			options: {
				cancel: "input,textarea,button,select,option",
				distance: 1,
				delay: 0
			},
			_mouseInit: function _mouseInit() {
				var that = this;

				this.element.bind("mousedown." + this.widgetName, function (event) {
					return that._mouseDown(event);
				}).bind("click." + this.widgetName, function (event) {
					if (true === $.data(event.target, that.widgetName + ".preventClickEvent")) {
						$.removeData(event.target, that.widgetName + ".preventClickEvent");
						event.stopImmediatePropagation();
						return false;
					}
				});

				this.started = false;
			},

			// TODO: make sure destroying one instance of mouse doesn't mess with
			// other instances of mouse
			_mouseDestroy: function _mouseDestroy() {
				this.element.unbind("." + this.widgetName);
				if (this._mouseMoveDelegate) {
					this.document.unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate);
				}
			},

			_mouseDown: function _mouseDown(event) {
				// don't let more than one widget handle mouseStart
				if (mouseHandled) {
					return;
				}

				// we may have missed mouseup (out of window)
				this._mouseStarted && this._mouseUp(event);

				this._mouseDownEvent = event;

				var that = this,
				    btnIsLeft = event.which === 1,

				// event.target.nodeName works around a bug in IE 8 with
				// disabled inputs (#7620)
				elIsCancel = typeof this.options.cancel === "string" && event.target.nodeName ? $(event.target).closest(this.options.cancel).length : false;
				if (!btnIsLeft || elIsCancel || !this._mouseCapture(event)) {
					return true;
				}

				this.mouseDelayMet = !this.options.delay;
				if (!this.mouseDelayMet) {
					this._mouseDelayTimer = setTimeout(function () {
						that.mouseDelayMet = true;
					}, this.options.delay);
				}

				if (this._mouseDistanceMet(event) && this._mouseDelayMet(event)) {
					this._mouseStarted = this._mouseStart(event) !== false;
					if (!this._mouseStarted) {
						event.preventDefault();
						return true;
					}
				}

				// Click event may never have fired (Gecko & Opera)
				if (true === $.data(event.target, this.widgetName + ".preventClickEvent")) {
					$.removeData(event.target, this.widgetName + ".preventClickEvent");
				}

				// these delegates are required to keep context
				this._mouseMoveDelegate = function (event) {
					return that._mouseMove(event);
				};
				this._mouseUpDelegate = function (event) {
					return that._mouseUp(event);
				};

				this.document.bind("mousemove." + this.widgetName, this._mouseMoveDelegate).bind("mouseup." + this.widgetName, this._mouseUpDelegate);

				event.preventDefault();

				mouseHandled = true;
				return true;
			},

			_mouseMove: function _mouseMove(event) {
				// IE mouseup check - mouseup happened when mouse was out of window
				if ($.ui.ie && (!document.documentMode || document.documentMode < 9) && !event.button) {
					return this._mouseUp(event);

					// Iframe mouseup check - mouseup occurred in another document
				} else if (!event.which) {
					return this._mouseUp(event);
				}

				if (this._mouseStarted) {
					this._mouseDrag(event);
					return event.preventDefault();
				}

				if (this._mouseDistanceMet(event) && this._mouseDelayMet(event)) {
					this._mouseStarted = this._mouseStart(this._mouseDownEvent, event) !== false;
					this._mouseStarted ? this._mouseDrag(event) : this._mouseUp(event);
				}

				return !this._mouseStarted;
			},

			_mouseUp: function _mouseUp(event) {
				this.document.unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate);

				if (this._mouseStarted) {
					this._mouseStarted = false;

					if (event.target === this._mouseDownEvent.target) {
						$.data(event.target, this.widgetName + ".preventClickEvent", true);
					}

					this._mouseStop(event);
				}

				mouseHandled = false;
				return false;
			},

			_mouseDistanceMet: function _mouseDistanceMet(event) {
				return Math.max(Math.abs(this._mouseDownEvent.pageX - event.pageX), Math.abs(this._mouseDownEvent.pageY - event.pageY)) >= this.options.distance;
			},

			_mouseDelayMet: function _mouseDelayMet() /* event */{
				return this.mouseDelayMet;
			},

			// These are placeholder methods, to be overriden by extending plugin
			_mouseStart: function _mouseStart() /* event */{},
			_mouseDrag: function _mouseDrag() /* event */{},
			_mouseStop: function _mouseStop() /* event */{},
			_mouseCapture: function _mouseCapture() /* event */{
				return true;
			}
		});

		/*!
	  * jQuery UI Draggable 1.11.0
	  * http://jqueryui.com
	  *
	  * Copyright 2014 jQuery Foundation and other contributors
	  * Released under the MIT license.
	  * http://jquery.org/license
	  *
	  * http://api.jqueryui.com/draggable/
	  */

		$.widget("ui.draggable", $.ui.mouse, {
			version: "1.11.0",
			widgetEventPrefix: "drag",
			options: {
				addClasses: true,
				appendTo: "parent",
				axis: false,
				connectToSortable: false,
				containment: false,
				cursor: "auto",
				cursorAt: false,
				grid: false,
				handle: false,
				helper: "original",
				iframeFix: false,
				opacity: false,
				refreshPositions: false,
				revert: false,
				revertDuration: 500,
				scope: "default",
				scroll: true,
				scrollSensitivity: 20,
				scrollSpeed: 20,
				snap: false,
				snapMode: "both",
				snapTolerance: 20,
				stack: false,
				zIndex: false,

				// callbacks
				drag: null,
				start: null,
				stop: null
			},
			_create: function _create() {

				if (this.options.helper === "original" && !/^(?:r|a|f)/.test(this.element.css("position"))) {
					this.element[0].style.position = "relative";
				}
				if (this.options.addClasses) {
					this.element.addClass("ui-draggable");
				}
				if (this.options.disabled) {
					this.element.addClass("ui-draggable-disabled");
				}
				this._setHandleClassName();

				this._mouseInit();
			},

			_setOption: function _setOption(key, value) {
				this._super(key, value);
				if (key === "handle") {
					this._setHandleClassName();
				}
			},

			_destroy: function _destroy() {
				if ((this.helper || this.element).is(".ui-draggable-dragging")) {
					this.destroyOnClear = true;
					return;
				}
				this.element.removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled");
				this._removeHandleClassName();
				this._mouseDestroy();
			},

			_mouseCapture: function _mouseCapture(event) {

				var document = this.document[0],
				    o = this.options;

				// support: IE9
				// IE9 throws an "Unspecified error" accessing document.activeElement from an <iframe>
				try {
					// Support: IE9+
					// If the <body> is blurred, IE will switch windows, see #9520
					if (document.activeElement && document.activeElement.nodeName.toLowerCase() !== "body") {
						// Blur any element that currently has focus, see #4261
						$(document.activeElement).blur();
					}
				} catch (error) {}

				// among others, prevent a drag on a resizable-handle
				if (this.helper || o.disabled || $(event.target).closest(".ui-resizable-handle").length > 0) {
					return false;
				}

				//Quit if we're not on a valid handle
				this.handle = this._getHandle(event);
				if (!this.handle) {
					return false;
				}

				$(o.iframeFix === true ? "iframe" : o.iframeFix).each(function () {
					$("<div class='ui-draggable-iframeFix' style='background: #fff;'></div>").css({
						width: this.offsetWidth + "px", height: this.offsetHeight + "px",
						position: "absolute", opacity: "0.001", zIndex: 1000
					}).css($(this).offset()).appendTo("body");
				});

				return true;
			},

			_mouseStart: function _mouseStart(event) {

				var o = this.options;

				//Create and append the visible helper
				this.helper = this._createHelper(event);

				this.helper.addClass("ui-draggable-dragging");

				//Cache the helper size
				this._cacheHelperProportions();

				//If ddmanager is used for droppables, set the global draggable
				if ($.ui.ddmanager) {
					$.ui.ddmanager.current = this;
				}

				/*
	    * - Position generation -
	    * This block generates everything position related - it's the core of draggables.
	    */

				//Cache the margins of the original element
				this._cacheMargins();

				//Store the helper's css position
				this.cssPosition = this.helper.css("position");
				this.scrollParent = this.helper.scrollParent();
				this.offsetParent = this.helper.offsetParent();
				this.offsetParentCssPosition = this.offsetParent.css("position");

				//The element's absolute position on the page minus margins
				this.offset = this.positionAbs = this.element.offset();
				this.offset = {
					top: this.offset.top - this.margins.top,
					left: this.offset.left - this.margins.left
				};

				//Reset scroll cache
				this.offset.scroll = false;

				$.extend(this.offset, {
					click: { //Where the click happened, relative to the element
						left: event.pageX - this.offset.left,
						top: event.pageY - this.offset.top
					},
					parent: this._getParentOffset(),
					relative: this._getRelativeOffset() //This is a relative to absolute position minus the actual position calculation - only used for relative positioned helper
				});

				//Generate the original position
				this.originalPosition = this.position = this._generatePosition(event, false);
				this.originalPageX = event.pageX;
				this.originalPageY = event.pageY;

				//Adjust the mouse offset relative to the helper if "cursorAt" is supplied
				o.cursorAt && this._adjustOffsetFromHelper(o.cursorAt);

				//Set a containment if given in the options
				this._setContainment();

				//Trigger event + callbacks
				if (this._trigger("start", event) === false) {
					this._clear();
					return false;
				}

				//Recache the helper size
				this._cacheHelperProportions();

				//Prepare the droppable offsets
				if ($.ui.ddmanager && !o.dropBehaviour) {
					$.ui.ddmanager.prepareOffsets(this, event);
				}

				this._mouseDrag(event, true); //Execute the drag once - this causes the helper not to be visible before getting its correct position

				//If the ddmanager is used for droppables, inform the manager that dragging has started (see #5003)
				if ($.ui.ddmanager) {
					$.ui.ddmanager.dragStart(this, event);
				}

				return true;
			},

			_mouseDrag: function _mouseDrag(event, noPropagation) {
				// reset any necessary cached properties (see #5009)
				if (this.offsetParentCssPosition === "fixed") {
					this.offset.parent = this._getParentOffset();
				}

				//Compute the helpers position
				this.position = this._generatePosition(event, true);
				this.positionAbs = this._convertPositionTo("absolute");

				//Call plugins and callbacks and use the resulting position if something is returned
				if (!noPropagation) {
					var ui = this._uiHash();
					if (this._trigger("drag", event, ui) === false) {
						this._mouseUp({});
						return false;
					}
					this.position = ui.position;
				}

				this.helper[0].style.left = this.position.left + "px";
				this.helper[0].style.top = this.position.top + "px";

				if ($.ui.ddmanager) {
					$.ui.ddmanager.drag(this, event);
				}

				return false;
			},

			_mouseStop: function _mouseStop(event) {

				//If we are using droppables, inform the manager about the drop
				var that = this,
				    dropped = false;
				if ($.ui.ddmanager && !this.options.dropBehaviour) {
					dropped = $.ui.ddmanager.drop(this, event);
				}

				//if a drop comes from outside (a sortable)
				if (this.dropped) {
					dropped = this.dropped;
					this.dropped = false;
				}

				if (this.options.revert === "invalid" && !dropped || this.options.revert === "valid" && dropped || this.options.revert === true || $.isFunction(this.options.revert) && this.options.revert.call(this.element, dropped)) {
					$(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10), function () {
						if (that._trigger("stop", event) !== false) {
							that._clear();
						}
					});
				} else {
					if (this._trigger("stop", event) !== false) {
						this._clear();
					}
				}

				return false;
			},

			_mouseUp: function _mouseUp(event) {
				//Remove frame helpers
				$("div.ui-draggable-iframeFix").each(function () {
					this.parentNode.removeChild(this);
				});

				//If the ddmanager is used for droppables, inform the manager that dragging has stopped (see #5003)
				if ($.ui.ddmanager) {
					$.ui.ddmanager.dragStop(this, event);
				}

				// The interaction is over; whether or not the click resulted in a drag, focus the element
				this.element.focus();

				return $.ui.mouse.prototype._mouseUp.call(this, event);
			},

			cancel: function cancel() {

				if (this.helper.is(".ui-draggable-dragging")) {
					this._mouseUp({});
				} else {
					this._clear();
				}

				return this;
			},

			_getHandle: function _getHandle(event) {
				return this.options.handle ? !!$(event.target).closest(this.element.find(this.options.handle)).length : true;
			},

			_setHandleClassName: function _setHandleClassName() {
				this._removeHandleClassName();
				$(this.options.handle || this.element).addClass("ui-draggable-handle");
			},

			_removeHandleClassName: function _removeHandleClassName() {
				this.element.find(".ui-draggable-handle").addBack().removeClass("ui-draggable-handle");
			},

			_createHelper: function _createHelper(event) {

				var o = this.options,
				    helper = $.isFunction(o.helper) ? $(o.helper.apply(this.element[0], [event])) : o.helper === "clone" ? this.element.clone().removeAttr("id") : this.element;

				if (!helper.parents("body").length) {
					helper.appendTo(o.appendTo === "parent" ? this.element[0].parentNode : o.appendTo);
				}

				if (helper[0] !== this.element[0] && !/(fixed|absolute)/.test(helper.css("position"))) {
					helper.css("position", "absolute");
				}

				return helper;
			},

			_adjustOffsetFromHelper: function _adjustOffsetFromHelper(obj) {
				if (typeof obj === "string") {
					obj = obj.split(" ");
				}
				if ($.isArray(obj)) {
					obj = { left: +obj[0], top: +obj[1] || 0 };
				}
				if ("left" in obj) {
					this.offset.click.left = obj.left + this.margins.left;
				}
				if ("right" in obj) {
					this.offset.click.left = this.helperProportions.width - obj.right + this.margins.left;
				}
				if ("top" in obj) {
					this.offset.click.top = obj.top + this.margins.top;
				}
				if ("bottom" in obj) {
					this.offset.click.top = this.helperProportions.height - obj.bottom + this.margins.top;
				}
			},

			_isRootNode: function _isRootNode(element) {
				return (/(html|body)/i.test(element.tagName) || element === this.document[0]
				);
			},

			_getParentOffset: function _getParentOffset() {

				//Get the offsetParent and cache its position
				var po = this.offsetParent.offset(),
				    document = this.document[0];

				// This is a special case where we need to modify a offset calculated on start, since the following happened:
				// 1. The position of the helper is absolute, so it's position is calculated based on the next positioned parent
				// 2. The actual offset parent is a child of the scroll parent, and the scroll parent isn't the document, which means that
				//    the scroll is included in the initial calculation of the offset of the parent, and never recalculated upon drag
				if (this.cssPosition === "absolute" && this.scrollParent[0] !== document && $.contains(this.scrollParent[0], this.offsetParent[0])) {
					po.left += this.scrollParent.scrollLeft();
					po.top += this.scrollParent.scrollTop();
				}

				if (this._isRootNode(this.offsetParent[0])) {
					po = { top: 0, left: 0 };
				}

				return {
					top: po.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
					left: po.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
				};
			},

			_getRelativeOffset: function _getRelativeOffset() {
				if (this.cssPosition !== "relative") {
					return { top: 0, left: 0 };
				}

				var p = this.element.position(),
				    scrollIsRootNode = this._isRootNode(this.scrollParent[0]);

				return {
					top: p.top - (parseInt(this.helper.css("top"), 10) || 0) + (!scrollIsRootNode ? this.scrollParent.scrollTop() : 0),
					left: p.left - (parseInt(this.helper.css("left"), 10) || 0) + (!scrollIsRootNode ? this.scrollParent.scrollLeft() : 0)
				};
			},

			_cacheMargins: function _cacheMargins() {
				this.margins = {
					left: parseInt(this.element.css("marginLeft"), 10) || 0,
					top: parseInt(this.element.css("marginTop"), 10) || 0,
					right: parseInt(this.element.css("marginRight"), 10) || 0,
					bottom: parseInt(this.element.css("marginBottom"), 10) || 0
				};
			},

			_cacheHelperProportions: function _cacheHelperProportions() {
				this.helperProportions = {
					width: this.helper.outerWidth(),
					height: this.helper.outerHeight()
				};
			},

			_setContainment: function _setContainment() {

				var over,
				    c,
				    ce,
				    o = this.options,
				    document = this.document[0];

				this.relative_container = null;

				if (!o.containment) {
					this.containment = null;
					return;
				}

				if (o.containment === "window") {
					this.containment = [$(window).scrollLeft() - this.offset.relative.left - this.offset.parent.left, $(window).scrollTop() - this.offset.relative.top - this.offset.parent.top, $(window).scrollLeft() + $(window).width() - this.helperProportions.width - this.margins.left, $(window).scrollTop() + ($(window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top];
					return;
				}

				if (o.containment === "document") {
					this.containment = [0, 0, $(document).width() - this.helperProportions.width - this.margins.left, ($(document).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top];
					return;
				}

				if (o.containment.constructor === Array) {
					this.containment = o.containment;
					return;
				}

				if (o.containment === "parent") {
					o.containment = this.helper[0].parentNode;
				}

				c = $(o.containment);
				ce = c[0];

				if (!ce) {
					return;
				}

				over = c.css("overflow") !== "hidden";

				this.containment = [(parseInt(c.css("borderLeftWidth"), 10) || 0) + (parseInt(c.css("paddingLeft"), 10) || 0), (parseInt(c.css("borderTopWidth"), 10) || 0) + (parseInt(c.css("paddingTop"), 10) || 0), (over ? Math.max(ce.scrollWidth, ce.offsetWidth) : ce.offsetWidth) - (parseInt(c.css("borderRightWidth"), 10) || 0) - (parseInt(c.css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left - this.margins.right, (over ? Math.max(ce.scrollHeight, ce.offsetHeight) : ce.offsetHeight) - (parseInt(c.css("borderBottomWidth"), 10) || 0) - (parseInt(c.css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top - this.margins.bottom];
				this.relative_container = c;
			},

			_convertPositionTo: function _convertPositionTo(d, pos) {

				if (!pos) {
					pos = this.position;
				}

				var mod = d === "absolute" ? 1 : -1,
				    scrollIsRootNode = this._isRootNode(this.scrollParent[0]);

				return {
					top: pos.top + // The absolute mouse position
					this.offset.relative.top * mod + // Only for relative positioned nodes: Relative offset from element to offset parent
					this.offset.parent.top * mod - // The offsetParent's offset without borders (offset + border)
					(this.cssPosition === "fixed" ? -this.offset.scroll.top : scrollIsRootNode ? 0 : this.offset.scroll.top) * mod,
					left: pos.left + // The absolute mouse position
					this.offset.relative.left * mod + // Only for relative positioned nodes: Relative offset from element to offset parent
					this.offset.parent.left * mod - // The offsetParent's offset without borders (offset + border)
					(this.cssPosition === "fixed" ? -this.offset.scroll.left : scrollIsRootNode ? 0 : this.offset.scroll.left) * mod
				};
			},

			_generatePosition: function _generatePosition(event, constrainPosition) {

				var containment,
				    co,
				    top,
				    left,
				    o = this.options,
				    scrollIsRootNode = this._isRootNode(this.scrollParent[0]),
				    pageX = event.pageX,
				    pageY = event.pageY;

				// Cache the scroll
				if (!scrollIsRootNode || !this.offset.scroll) {
					this.offset.scroll = {
						top: this.scrollParent.scrollTop(),
						left: this.scrollParent.scrollLeft()
					};
				}

				/*
	    * - Position constraining -
	    * Constrain the position to a mix of grid, containment.
	    */

				// If we are not dragging yet, we won't check for options
				if (constrainPosition) {
					if (this.containment) {
						if (this.relative_container) {
							co = this.relative_container.offset();
							containment = [this.containment[0] + co.left, this.containment[1] + co.top, this.containment[2] + co.left, this.containment[3] + co.top];
						} else {
							containment = this.containment;
						}

						if (event.pageX - this.offset.click.left < containment[0]) {
							pageX = containment[0] + this.offset.click.left;
						}
						if (event.pageY - this.offset.click.top < containment[1]) {
							pageY = containment[1] + this.offset.click.top;
						}
						if (event.pageX - this.offset.click.left > containment[2]) {
							pageX = containment[2] + this.offset.click.left;
						}
						if (event.pageY - this.offset.click.top > containment[3]) {
							pageY = containment[3] + this.offset.click.top;
						}
					}

					if (o.grid) {
						//Check for grid elements set to 0 to prevent divide by 0 error causing invalid argument errors in IE (see ticket #6950)
						top = o.grid[1] ? this.originalPageY + Math.round((pageY - this.originalPageY) / o.grid[1]) * o.grid[1] : this.originalPageY;
						pageY = containment ? top - this.offset.click.top >= containment[1] || top - this.offset.click.top > containment[3] ? top : top - this.offset.click.top >= containment[1] ? top - o.grid[1] : top + o.grid[1] : top;

						left = o.grid[0] ? this.originalPageX + Math.round((pageX - this.originalPageX) / o.grid[0]) * o.grid[0] : this.originalPageX;
						pageX = containment ? left - this.offset.click.left >= containment[0] || left - this.offset.click.left > containment[2] ? left : left - this.offset.click.left >= containment[0] ? left - o.grid[0] : left + o.grid[0] : left;
					}

					if (o.axis === "y") {
						pageX = this.originalPageX;
					}

					if (o.axis === "x") {
						pageY = this.originalPageY;
					}
				}

				return {
					top: pageY - // The absolute mouse position
					this.offset.click.top - // Click offset (relative to the element)
					this.offset.relative.top - // Only for relative positioned nodes: Relative offset from element to offset parent
					this.offset.parent.top + ( // The offsetParent's offset without borders (offset + border)
					this.cssPosition === "fixed" ? -this.offset.scroll.top : scrollIsRootNode ? 0 : this.offset.scroll.top),
					left: pageX - // The absolute mouse position
					this.offset.click.left - // Click offset (relative to the element)
					this.offset.relative.left - // Only for relative positioned nodes: Relative offset from element to offset parent
					this.offset.parent.left + ( // The offsetParent's offset without borders (offset + border)
					this.cssPosition === "fixed" ? -this.offset.scroll.left : scrollIsRootNode ? 0 : this.offset.scroll.left)
				};
			},

			_clear: function _clear() {
				this.helper.removeClass("ui-draggable-dragging");
				if (this.helper[0] !== this.element[0] && !this.cancelHelperRemoval) {
					this.helper.remove();
				}
				this.helper = null;
				this.cancelHelperRemoval = false;
				if (this.destroyOnClear) {
					this.destroy();
				}
			},

			// From now on bulk stuff - mainly helpers

			_trigger: function _trigger(type, event, ui) {
				ui = ui || this._uiHash();
				$.ui.plugin.call(this, type, [event, ui, this], true);
				//The absolute position has to be recalculated after plugins
				if (type === "drag") {
					this.positionAbs = this._convertPositionTo("absolute");
				}
				return $.Widget.prototype._trigger.call(this, type, event, ui);
			},

			plugins: {},

			_uiHash: function _uiHash() {
				return {
					helper: this.helper,
					position: this.position,
					originalPosition: this.originalPosition,
					offset: this.positionAbs
				};
			}

		});

		$.ui.plugin.add("draggable", "connectToSortable", {
			start: function start(event, ui, inst) {

				var o = inst.options,
				    uiSortable = $.extend({}, ui, { item: inst.element });
				inst.sortables = [];
				$(o.connectToSortable).each(function () {
					var sortable = $(this).sortable("instance");
					if (sortable && !sortable.options.disabled) {
						inst.sortables.push({
							instance: sortable,
							shouldRevert: sortable.options.revert
						});
						sortable.refreshPositions(); // Call the sortable's refreshPositions at drag start to refresh the containerCache since the sortable container cache is used in drag and needs to be up to date (this will ensure it's initialised as well as being kept in step with any changes that might have happened on the page).
						sortable._trigger("activate", event, uiSortable);
					}
				});
			},
			stop: function stop(event, ui, inst) {

				//If we are still over the sortable, we fake the stop event of the sortable, but also remove helper
				var uiSortable = $.extend({}, ui, {
					item: inst.element
				});

				$.each(inst.sortables, function () {
					if (this.instance.isOver) {

						this.instance.isOver = 0;

						inst.cancelHelperRemoval = true; //Don't remove the helper in the draggable instance
						this.instance.cancelHelperRemoval = false; //Remove it in the sortable instance (so sortable plugins like revert still work)

						//The sortable revert is supported, and we have to set a temporary dropped variable on the draggable to support revert: "valid/invalid"
						if (this.shouldRevert) {
							this.instance.options.revert = this.shouldRevert;
						}

						//Trigger the stop of the sortable
						this.instance._mouseStop(event);

						this.instance.options.helper = this.instance.options._helper;

						//If the helper has been the original item, restore properties in the sortable
						if (inst.options.helper === "original") {
							this.instance.currentItem.css({ top: "auto", left: "auto" });
						}
					} else {
						this.instance.cancelHelperRemoval = false; //Remove the helper in the sortable instance
						this.instance._trigger("deactivate", event, uiSortable);
					}
				});
			},
			drag: function drag(event, ui, inst) {

				var that = this;

				$.each(inst.sortables, function () {

					var innermostIntersecting = false,
					    thisSortable = this;

					//Copy over some variables to allow calling the sortable's native _intersectsWith
					this.instance.positionAbs = inst.positionAbs;
					this.instance.helperProportions = inst.helperProportions;
					this.instance.offset.click = inst.offset.click;

					if (this.instance._intersectsWith(this.instance.containerCache)) {
						innermostIntersecting = true;
						$.each(inst.sortables, function () {
							this.instance.positionAbs = inst.positionAbs;
							this.instance.helperProportions = inst.helperProportions;
							this.instance.offset.click = inst.offset.click;
							if (this !== thisSortable && this.instance._intersectsWith(this.instance.containerCache) && $.contains(thisSortable.instance.element[0], this.instance.element[0])) {
								innermostIntersecting = false;
							}
							return innermostIntersecting;
						});
					}

					if (innermostIntersecting) {
						//If it intersects, we use a little isOver variable and set it once, so our move-in stuff gets fired only once
						if (!this.instance.isOver) {

							this.instance.isOver = 1;
							//Now we fake the start of dragging for the sortable instance,
							//by cloning the list group item, appending it to the sortable and using it as inst.currentItem
							//We can then fire the start event of the sortable with our passed browser event, and our own helper (so it doesn't create a new one)
							this.instance.currentItem = $(that).clone().removeAttr("id").appendTo(this.instance.element).data("ui-sortable-item", true);
							this.instance.options._helper = this.instance.options.helper; //Store helper option to later restore it
							this.instance.options.helper = function () {
								return ui.helper[0];
							};

							event.target = this.instance.currentItem[0];
							this.instance._mouseCapture(event, true);
							this.instance._mouseStart(event, true, true);

							//Because the browser event is way off the new appended portlet, we modify a couple of variables to reflect the changes
							this.instance.offset.click.top = inst.offset.click.top;
							this.instance.offset.click.left = inst.offset.click.left;
							this.instance.offset.parent.left -= inst.offset.parent.left - this.instance.offset.parent.left;
							this.instance.offset.parent.top -= inst.offset.parent.top - this.instance.offset.parent.top;

							inst._trigger("toSortable", event);
							inst.dropped = this.instance.element; //draggable revert needs that
							//hack so receive/update callbacks work (mostly)
							inst.currentItem = inst.element;
							this.instance.fromOutside = inst;
						}

						//Provided we did all the previous steps, we can fire the drag event of the sortable on every draggable drag, when it intersects with the sortable
						if (this.instance.currentItem) {
							this.instance._mouseDrag(event);
						}
					} else {

						//If it doesn't intersect with the sortable, and it intersected before,
						//we fake the drag stop of the sortable, but make sure it doesn't remove the helper by using cancelHelperRemoval
						if (this.instance.isOver) {

							this.instance.isOver = 0;
							this.instance.cancelHelperRemoval = true;

							//Prevent reverting on this forced stop
							this.instance.options.revert = false;

							// The out event needs to be triggered independently
							this.instance._trigger("out", event, this.instance._uiHash(this.instance));

							this.instance._mouseStop(event, true);
							this.instance.options.helper = this.instance.options._helper;

							//Now we remove our currentItem, the list group clone again, and the placeholder, and animate the helper back to it's original size
							this.instance.currentItem.remove();
							if (this.instance.placeholder) {
								this.instance.placeholder.remove();
							}

							inst._trigger("fromSortable", event);
							inst.dropped = false; //draggable revert needs that
						}
					}
				});
			}
		});

		$.ui.plugin.add("draggable", "cursor", {
			start: function start(event, ui, instance) {
				var t = $("body"),
				    o = instance.options;

				if (t.css("cursor")) {
					o._cursor = t.css("cursor");
				}
				t.css("cursor", o.cursor);
			},
			stop: function stop(event, ui, instance) {
				var o = instance.options;
				if (o._cursor) {
					$("body").css("cursor", o._cursor);
				}
			}
		});

		$.ui.plugin.add("draggable", "opacity", {
			start: function start(event, ui, instance) {
				var t = $(ui.helper),
				    o = instance.options;
				if (t.css("opacity")) {
					o._opacity = t.css("opacity");
				}
				t.css("opacity", o.opacity);
			},
			stop: function stop(event, ui, instance) {
				var o = instance.options;
				if (o._opacity) {
					$(ui.helper).css("opacity", o._opacity);
				}
			}
		});

		$.ui.plugin.add("draggable", "scroll", {
			start: function start(event, ui, i) {
				if (i.scrollParent[0] !== i.document[0] && i.scrollParent[0].tagName !== "HTML") {
					i.overflowOffset = i.scrollParent.offset();
				}
			},
			drag: function drag(event, ui, i) {

				var o = i.options,
				    scrolled = false,
				    document = i.document[0];

				if (i.scrollParent[0] !== document && i.scrollParent[0].tagName !== "HTML") {
					if (!o.axis || o.axis !== "x") {
						if (i.overflowOffset.top + i.scrollParent[0].offsetHeight - event.pageY < o.scrollSensitivity) {
							i.scrollParent[0].scrollTop = scrolled = i.scrollParent[0].scrollTop + o.scrollSpeed;
						} else if (event.pageY - i.overflowOffset.top < o.scrollSensitivity) {
							i.scrollParent[0].scrollTop = scrolled = i.scrollParent[0].scrollTop - o.scrollSpeed;
						}
					}

					if (!o.axis || o.axis !== "y") {
						if (i.overflowOffset.left + i.scrollParent[0].offsetWidth - event.pageX < o.scrollSensitivity) {
							i.scrollParent[0].scrollLeft = scrolled = i.scrollParent[0].scrollLeft + o.scrollSpeed;
						} else if (event.pageX - i.overflowOffset.left < o.scrollSensitivity) {
							i.scrollParent[0].scrollLeft = scrolled = i.scrollParent[0].scrollLeft - o.scrollSpeed;
						}
					}
				} else {

					if (!o.axis || o.axis !== "x") {
						if (event.pageY - $(document).scrollTop() < o.scrollSensitivity) {
							scrolled = $(document).scrollTop($(document).scrollTop() - o.scrollSpeed);
						} else if ($(window).height() - (event.pageY - $(document).scrollTop()) < o.scrollSensitivity) {
							scrolled = $(document).scrollTop($(document).scrollTop() + o.scrollSpeed);
						}
					}

					if (!o.axis || o.axis !== "y") {
						if (event.pageX - $(document).scrollLeft() < o.scrollSensitivity) {
							scrolled = $(document).scrollLeft($(document).scrollLeft() - o.scrollSpeed);
						} else if ($(window).width() - (event.pageX - $(document).scrollLeft()) < o.scrollSensitivity) {
							scrolled = $(document).scrollLeft($(document).scrollLeft() + o.scrollSpeed);
						}
					}
				}

				if (scrolled !== false && $.ui.ddmanager && !o.dropBehaviour) {
					$.ui.ddmanager.prepareOffsets(i, event);
				}
			}
		});

		$.ui.plugin.add("draggable", "snap", {
			start: function start(event, ui, i) {

				var o = i.options;

				i.snapElements = [];

				$(o.snap.constructor !== String ? o.snap.items || ":data(ui-draggable)" : o.snap).each(function () {
					var $t = $(this),
					    $o = $t.offset();
					if (this !== i.element[0]) {
						i.snapElements.push({
							item: this,
							width: $t.outerWidth(), height: $t.outerHeight(),
							top: $o.top, left: $o.left
						});
					}
				});
			},
			drag: function drag(event, ui, inst) {

				var ts,
				    bs,
				    ls,
				    rs,
				    l,
				    r,
				    t,
				    b,
				    i,
				    first,
				    o = inst.options,
				    d = o.snapTolerance,
				    x1 = ui.offset.left,
				    x2 = x1 + inst.helperProportions.width,
				    y1 = ui.offset.top,
				    y2 = y1 + inst.helperProportions.height;

				for (i = inst.snapElements.length - 1; i >= 0; i--) {

					l = inst.snapElements[i].left;
					r = l + inst.snapElements[i].width;
					t = inst.snapElements[i].top;
					b = t + inst.snapElements[i].height;

					if (x2 < l - d || x1 > r + d || y2 < t - d || y1 > b + d || !$.contains(inst.snapElements[i].item.ownerDocument, inst.snapElements[i].item)) {
						if (inst.snapElements[i].snapping) {
							inst.options.snap.release && inst.options.snap.release.call(inst.element, event, $.extend(inst._uiHash(), { snapItem: inst.snapElements[i].item }));
						}
						inst.snapElements[i].snapping = false;
						continue;
					}

					if (o.snapMode !== "inner") {
						ts = Math.abs(t - y2) <= d;
						bs = Math.abs(b - y1) <= d;
						ls = Math.abs(l - x2) <= d;
						rs = Math.abs(r - x1) <= d;
						if (ts) {
							ui.position.top = inst._convertPositionTo("relative", { top: t - inst.helperProportions.height, left: 0 }).top - inst.margins.top;
						}
						if (bs) {
							ui.position.top = inst._convertPositionTo("relative", { top: b, left: 0 }).top - inst.margins.top;
						}
						if (ls) {
							ui.position.left = inst._convertPositionTo("relative", { top: 0, left: l - inst.helperProportions.width }).left - inst.margins.left;
						}
						if (rs) {
							ui.position.left = inst._convertPositionTo("relative", { top: 0, left: r }).left - inst.margins.left;
						}
					}

					first = ts || bs || ls || rs;

					if (o.snapMode !== "outer") {
						ts = Math.abs(t - y1) <= d;
						bs = Math.abs(b - y2) <= d;
						ls = Math.abs(l - x1) <= d;
						rs = Math.abs(r - x2) <= d;
						if (ts) {
							ui.position.top = inst._convertPositionTo("relative", { top: t, left: 0 }).top - inst.margins.top;
						}
						if (bs) {
							ui.position.top = inst._convertPositionTo("relative", { top: b - inst.helperProportions.height, left: 0 }).top - inst.margins.top;
						}
						if (ls) {
							ui.position.left = inst._convertPositionTo("relative", { top: 0, left: l }).left - inst.margins.left;
						}
						if (rs) {
							ui.position.left = inst._convertPositionTo("relative", { top: 0, left: r - inst.helperProportions.width }).left - inst.margins.left;
						}
					}

					if (!inst.snapElements[i].snapping && (ts || bs || ls || rs || first)) {
						inst.options.snap.snap && inst.options.snap.snap.call(inst.element, event, $.extend(inst._uiHash(), { snapItem: inst.snapElements[i].item }));
					}
					inst.snapElements[i].snapping = ts || bs || ls || rs || first;
				}
			}
		});

		$.ui.plugin.add("draggable", "stack", {
			start: function start(event, ui, instance) {
				var min,
				    o = instance.options,
				    group = $.makeArray($(o.stack)).sort(function (a, b) {
					return (parseInt($(a).css("zIndex"), 10) || 0) - (parseInt($(b).css("zIndex"), 10) || 0);
				});

				if (!group.length) {
					return;
				}

				min = parseInt($(group[0]).css("zIndex"), 10) || 0;
				$(group).each(function (i) {
					$(this).css("zIndex", min + i);
				});
				this.css("zIndex", min + group.length);
			}
		});

		$.ui.plugin.add("draggable", "zIndex", {
			start: function start(event, ui, instance) {
				var t = $(ui.helper),
				    o = instance.options;

				if (t.css("zIndex")) {
					o._zIndex = t.css("zIndex");
				}
				t.css("zIndex", o.zIndex);
			},
			stop: function stop(event, ui, instance) {
				var o = instance.options;

				if (o._zIndex) {
					$(ui.helper).css("zIndex", o._zIndex);
				}
			}
		});

		var draggable = $.ui.draggable;

		/*!
	  * jQuery UI Datepicker 1.11.0
	  * http://jqueryui.com
	  *
	  * Copyright 2014 jQuery Foundation and other contributors
	  * Released under the MIT license.
	  * http://jquery.org/license
	  *
	  * http://api.jqueryui.com/datepicker/
	  */

		$.extend($.ui, { datepicker: { version: "1.11.0" } });

		var datepicker_instActive;

		function datepicker_getZindex(elem) {
			var position, value;
			while (elem.length && elem[0] !== document) {
				// Ignore z-index if position is set to a value where z-index is ignored by the browser
				// This makes behavior of this function consistent across browsers
				// WebKit always returns auto if the element is positioned
				position = elem.css("position");
				if (position === "absolute" || position === "relative" || position === "fixed") {
					// IE returns 0 when zIndex is not specified
					// other browsers return a string
					// we ignore the case of nested elements with an explicit value of 0
					// <div style="z-index: -10;"><div style="z-index: 0;"></div></div>
					value = parseInt(elem.css("zIndex"), 10);
					if (!isNaN(value) && value !== 0) {
						return value;
					}
				}
				elem = elem.parent();
			}

			return 0;
		}
		/* Date picker manager.
	    Use the singleton instance of this class, $.datepicker, to interact with the date picker.
	    Settings for (groups of) date pickers are maintained in an instance object,
	    allowing multiple different settings on the same page. */

		function Datepicker() {
			this._curInst = null; // The current instance in use
			this._keyEvent = false; // If the last event was a key event
			this._disabledInputs = []; // List of date picker inputs that have been disabled
			this._datepickerShowing = false; // True if the popup picker is showing , false if not
			this._inDialog = false; // True if showing within a "dialog", false if not
			this._mainDivId = "ui-datepicker-div"; // The ID of the main datepicker division
			this._inlineClass = "ui-datepicker-inline"; // The name of the inline marker class
			this._appendClass = "ui-datepicker-append"; // The name of the append marker class
			this._triggerClass = "ui-datepicker-trigger"; // The name of the trigger marker class
			this._dialogClass = "ui-datepicker-dialog"; // The name of the dialog marker class
			this._disableClass = "ui-datepicker-disabled"; // The name of the disabled covering marker class
			this._unselectableClass = "ui-datepicker-unselectable"; // The name of the unselectable cell marker class
			this._currentClass = "ui-datepicker-current-day"; // The name of the current day marker class
			this._dayOverClass = "ui-datepicker-days-cell-over"; // The name of the day hover marker class
			this.regional = []; // Available regional settings, indexed by language code
			this.regional[""] = { // Default regional settings
				closeText: "Done", // Display text for close link
				prevText: "Prev", // Display text for previous month link
				nextText: "Next", // Display text for next month link
				currentText: "Today", // Display text for current month link
				monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], // Names of months for drop-down and formatting
				monthNamesShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], // For formatting
				dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], // For formatting
				dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], // For formatting
				dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"], // Column headings for days starting at Sunday
				weekHeader: "Wk", // Column header for week of the year
				dateFormat: "mm/dd/yy", // See format options on parseDate
				firstDay: 0, // The first day of the week, Sun = 0, Mon = 1, ...
				isRTL: false, // True if right-to-left language, false if left-to-right
				showMonthAfterYear: false, // True if the year select precedes month, false for month then year
				yearSuffix: "" // Additional text to append to the year in the month headers
			};
			this._defaults = { // Global defaults for all the date picker instances
				showOn: "focus", // "focus" for popup on focus,
				// "button" for trigger button, or "both" for either
				showAnim: "fadeIn", // Name of jQuery animation for popup
				showOptions: {}, // Options for enhanced animations
				defaultDate: null, // Used when field is blank: actual date,
				// +/-number for offset from today, null for today
				appendText: "", // Display text following the input box, e.g. showing the format
				buttonText: "...", // Text for trigger button
				buttonImage: "", // URL for trigger button image
				buttonImageOnly: false, // True if the image appears alone, false if it appears on a button
				hideIfNoPrevNext: false, // True to hide next/previous month links
				// if not applicable, false to just disable them
				navigationAsDateFormat: false, // True if date formatting applied to prev/today/next links
				gotoCurrent: false, // True if today link goes back to current selection instead
				changeMonth: false, // True if month can be selected directly, false if only prev/next
				changeYear: false, // True if year can be selected directly, false if only prev/next
				yearRange: "c-10:c+10", // Range of years to display in drop-down,
				// either relative to today's year (-nn:+nn), relative to currently displayed year
				// (c-nn:c+nn), absolute (nnnn:nnnn), or a combination of the above (nnnn:-n)
				showOtherMonths: false, // True to show dates in other months, false to leave blank
				selectOtherMonths: false, // True to allow selection of dates in other months, false for unselectable
				showWeek: false, // True to show week of the year, false to not show it
				calculateWeek: this.iso8601Week, // How to calculate the week of the year,
				// takes a Date and returns the number of the week for it
				shortYearCutoff: "+10", // Short year values < this are in the current century,
				// > this are in the previous century,
				// string value starting with "+" for current year + value
				minDate: null, // The earliest selectable date, or null for no limit
				maxDate: null, // The latest selectable date, or null for no limit
				duration: "fast", // Duration of display/closure
				beforeShowDay: null, // Function that takes a date and returns an array with
				// [0] = true if selectable, false if not, [1] = custom CSS class name(s) or "",
				// [2] = cell title (optional), e.g. $.datepicker.noWeekends
				beforeShow: null, // Function that takes an input field and
				// returns a set of custom settings for the date picker
				onSelect: null, // Define a callback function when a date is selected
				onChangeMonthYear: null, // Define a callback function when the month or year is changed
				onClose: null, // Define a callback function when the datepicker is closed
				numberOfMonths: 1, // Number of months to show at a time
				showCurrentAtPos: 0, // The position in multipe months at which to show the current month (starting at 0)
				stepMonths: 1, // Number of months to step back/forward
				stepBigMonths: 12, // Number of months to step back/forward for the big links
				altField: "", // Selector for an alternate field to store selected dates into
				altFormat: "", // The date format to use for the alternate field
				constrainInput: true, // The input is constrained by the current date format
				showButtonPanel: false, // True to show button panel, false to not show it
				autoSize: false, // True to size the input for the date format, false to leave as is
				disabled: false // The initial disabled state
			};
			$.extend(this._defaults, this.regional[""]);
			this.regional.en = $.extend(true, {}, this.regional[""]);
			this.regional["en-US"] = $.extend(true, {}, this.regional.en);
			this.dpDiv = datepicker_bindHover($("<div id='" + this._mainDivId + "' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"));
		}

		$.extend(Datepicker.prototype, {
			/* Class name added to elements to indicate already configured with a date picker. */
			markerClassName: "hasDatepicker",

			//Keep track of the maximum number of rows displayed (see #7043)
			maxRows: 4,

			// TODO rename to "widget" when switching to widget factory
			_widgetDatepicker: function _widgetDatepicker() {
				return this.dpDiv;
			},

			/* Override the default settings for all instances of the date picker.
	   * @param  settings  object - the new settings to use as defaults (anonymous object)
	   * @return the manager object
	   */
			setDefaults: function setDefaults(settings) {
				datepicker_extendRemove(this._defaults, settings || {});
				return this;
			},

			/* Attach the date picker to a jQuery selection.
	   * @param  target	element - the target input field or division or span
	   * @param  settings  object - the new settings to use for this date picker instance (anonymous)
	   */
			_attachDatepicker: function _attachDatepicker(target, settings) {
				var nodeName, inline, inst;
				nodeName = target.nodeName.toLowerCase();
				inline = nodeName === "div" || nodeName === "span";
				if (!target.id) {
					this.uuid += 1;
					target.id = "dp" + this.uuid;
				}
				inst = this._newInst($(target), inline);
				inst.settings = $.extend({}, settings || {});
				if (nodeName === "input") {
					this._connectDatepicker(target, inst);
				} else if (inline) {
					this._inlineDatepicker(target, inst);
				}
			},

			/* Create a new instance object. */
			_newInst: function _newInst(target, inline) {
				var id = target[0].id.replace(/([^A-Za-z0-9_\-])/g, "\\\\$1"); // escape jQuery meta chars
				return { id: id, input: target, // associated target
					selectedDay: 0, selectedMonth: 0, selectedYear: 0, // current selection
					drawMonth: 0, drawYear: 0, // month being drawn
					inline: inline, // is datepicker inline or not
					dpDiv: !inline ? this.dpDiv : // presentation div
					datepicker_bindHover($("<div class='" + this._inlineClass + " ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>")) };
			},

			/* Attach the date picker to an input field. */
			_connectDatepicker: function _connectDatepicker(target, inst) {
				var input = $(target);
				inst.append = $([]);
				inst.trigger = $([]);
				if (input.hasClass(this.markerClassName)) {
					return;
				}
				this._attachments(input, inst);
				input.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp);
				this._autoSize(inst);
				$.data(target, "datepicker", inst);
				//If disabled option is true, disable the datepicker once it has been attached to the input (see ticket #5665)
				if (inst.settings.disabled) {
					this._disableDatepicker(target);
				}
			},

			/* Make attachments based on settings. */
			_attachments: function _attachments(input, inst) {
				var showOn,
				    buttonText,
				    buttonImage,
				    appendText = this._get(inst, "appendText"),
				    isRTL = this._get(inst, "isRTL");

				if (inst.append) {
					inst.append.remove();
				}
				if (appendText) {
					inst.append = $("<span class='" + this._appendClass + "'>" + appendText + "</span>");
					input[isRTL ? "before" : "after"](inst.append);
				}

				input.unbind("focus", this._showDatepicker);

				if (inst.trigger) {
					inst.trigger.remove();
				}

				showOn = this._get(inst, "showOn");
				if (showOn === "focus" || showOn === "both") {
					// pop-up date picker when in the marked field
					input.focus(this._showDatepicker);
				}
				if (showOn === "button" || showOn === "both") {
					// pop-up date picker when button clicked
					buttonText = this._get(inst, "buttonText");
					buttonImage = this._get(inst, "buttonImage");
					inst.trigger = $(this._get(inst, "buttonImageOnly") ? $("<img/>").addClass(this._triggerClass).attr({ src: buttonImage, alt: buttonText, title: buttonText }) : $("<button type='button'></button>").addClass(this._triggerClass).html(!buttonImage ? buttonText : $("<img/>").attr({ src: buttonImage, alt: buttonText, title: buttonText })));
					input[isRTL ? "before" : "after"](inst.trigger);
					inst.trigger.click(function () {
						if ($.datepicker._datepickerShowing && $.datepicker._lastInput === input[0]) {
							$.datepicker._hideDatepicker();
						} else if ($.datepicker._datepickerShowing && $.datepicker._lastInput !== input[0]) {
							$.datepicker._hideDatepicker();
							$.datepicker._showDatepicker(input[0]);
						} else {
							$.datepicker._showDatepicker(input[0]);
						}
						return false;
					});
				}
			},

			/* Apply the maximum length for the date format. */
			_autoSize: function _autoSize(inst) {
				if (this._get(inst, "autoSize") && !inst.inline) {
					var findMax,
					    max,
					    maxI,
					    i,
					    date = new Date(2009, 12 - 1, 20),
					    // Ensure double digits
					dateFormat = this._get(inst, "dateFormat");

					if (dateFormat.match(/[DM]/)) {
						findMax = function findMax(names) {
							max = 0;
							maxI = 0;
							for (i = 0; i < names.length; i++) {
								if (names[i].length > max) {
									max = names[i].length;
									maxI = i;
								}
							}
							return maxI;
						};
						date.setMonth(findMax(this._get(inst, dateFormat.match(/MM/) ? "monthNames" : "monthNamesShort")));
						date.setDate(findMax(this._get(inst, dateFormat.match(/DD/) ? "dayNames" : "dayNamesShort")) + 20 - date.getDay());
					}
					inst.input.attr("size", this._formatDate(inst, date).length);
				}
			},

			/* Attach an inline date picker to a div. */
			_inlineDatepicker: function _inlineDatepicker(target, inst) {
				var divSpan = $(target);
				if (divSpan.hasClass(this.markerClassName)) {
					return;
				}
				divSpan.addClass(this.markerClassName).append(inst.dpDiv);
				$.data(target, "datepicker", inst);
				this._setDate(inst, this._getDefaultDate(inst), true);
				this._updateDatepicker(inst);
				this._updateAlternate(inst);
				//If disabled option is true, disable the datepicker before showing it (see ticket #5665)
				if (inst.settings.disabled) {
					this._disableDatepicker(target);
				}
				// Set display:block in place of inst.dpDiv.show() which won't work on disconnected elements
				// http://bugs.jqueryui.com/ticket/7552 - A Datepicker created on a detached div has zero height
				inst.dpDiv.css("display", "block");
			},

			/* Pop-up the date picker in a "dialog" box.
	   * @param  input element - ignored
	   * @param  date	string or Date - the initial date to display
	   * @param  onSelect  function - the function to call when a date is selected
	   * @param  settings  object - update the dialog date picker instance's settings (anonymous object)
	   * @param  pos int[2] - coordinates for the dialog's position within the screen or
	   *					event - with x/y coordinates or
	   *					leave empty for default (screen centre)
	   * @return the manager object
	   */
			_dialogDatepicker: function _dialogDatepicker(input, date, onSelect, settings, pos) {
				var id,
				    browserWidth,
				    browserHeight,
				    scrollX,
				    scrollY,
				    inst = this._dialogInst; // internal instance

				if (!inst) {
					this.uuid += 1;
					id = "dp" + this.uuid;
					this._dialogInput = $("<input type='text' id='" + id + "' style='position: absolute; top: -100px; width: 0;'/>");
					this._dialogInput.keydown(this._doKeyDown);
					$("body").append(this._dialogInput);
					inst = this._dialogInst = this._newInst(this._dialogInput, false);
					inst.settings = {};
					$.data(this._dialogInput[0], "datepicker", inst);
				}
				datepicker_extendRemove(inst.settings, settings || {});
				date = date && date.constructor === Date ? this._formatDate(inst, date) : date;
				this._dialogInput.val(date);

				this._pos = pos ? pos.length ? pos : [pos.pageX, pos.pageY] : null;
				if (!this._pos) {
					browserWidth = document.documentElement.clientWidth;
					browserHeight = document.documentElement.clientHeight;
					scrollX = document.documentElement.scrollLeft || document.body.scrollLeft;
					scrollY = document.documentElement.scrollTop || document.body.scrollTop;
					this._pos = // should use actual width/height below
					[browserWidth / 2 - 100 + scrollX, browserHeight / 2 - 150 + scrollY];
				}

				// move input on screen for focus, but hidden behind dialog
				this._dialogInput.css("left", this._pos[0] + 20 + "px").css("top", this._pos[1] + "px");
				inst.settings.onSelect = onSelect;
				this._inDialog = true;
				this.dpDiv.addClass(this._dialogClass);
				this._showDatepicker(this._dialogInput[0]);
				if ($.blockUI) {
					$.blockUI(this.dpDiv);
				}
				$.data(this._dialogInput[0], "datepicker", inst);
				return this;
			},

			/* Detach a datepicker from its control.
	   * @param  target	element - the target input field or division or span
	   */
			_destroyDatepicker: function _destroyDatepicker(target) {
				var nodeName,
				    $target = $(target),
				    inst = $.data(target, "datepicker");

				if (!$target.hasClass(this.markerClassName)) {
					return;
				}

				nodeName = target.nodeName.toLowerCase();
				$.removeData(target, "datepicker");
				if (nodeName === "input") {
					inst.append.remove();
					inst.trigger.remove();
					$target.removeClass(this.markerClassName).unbind("focus", this._showDatepicker).unbind("keydown", this._doKeyDown).unbind("keypress", this._doKeyPress).unbind("keyup", this._doKeyUp);
				} else if (nodeName === "div" || nodeName === "span") {
					$target.removeClass(this.markerClassName).empty();
				}
			},

			/* Enable the date picker to a jQuery selection.
	   * @param  target	element - the target input field or division or span
	   */
			_enableDatepicker: function _enableDatepicker(target) {
				var nodeName,
				    inline,
				    $target = $(target),
				    inst = $.data(target, "datepicker");

				if (!$target.hasClass(this.markerClassName)) {
					return;
				}

				nodeName = target.nodeName.toLowerCase();
				if (nodeName === "input") {
					target.disabled = false;
					inst.trigger.filter("button").each(function () {
						this.disabled = false;
					}).end().filter("img").css({ opacity: "1.0", cursor: "" });
				} else if (nodeName === "div" || nodeName === "span") {
					inline = $target.children("." + this._inlineClass);
					inline.children().removeClass("ui-state-disabled");
					inline.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled", false);
				}
				this._disabledInputs = $.map(this._disabledInputs, function (value) {
					return value === target ? null : value;
				}); // delete entry
			},

			/* Disable the date picker to a jQuery selection.
	   * @param  target	element - the target input field or division or span
	   */
			_disableDatepicker: function _disableDatepicker(target) {
				var nodeName,
				    inline,
				    $target = $(target),
				    inst = $.data(target, "datepicker");

				if (!$target.hasClass(this.markerClassName)) {
					return;
				}

				nodeName = target.nodeName.toLowerCase();
				if (nodeName === "input") {
					target.disabled = true;
					inst.trigger.filter("button").each(function () {
						this.disabled = true;
					}).end().filter("img").css({ opacity: "0.5", cursor: "default" });
				} else if (nodeName === "div" || nodeName === "span") {
					inline = $target.children("." + this._inlineClass);
					inline.children().addClass("ui-state-disabled");
					inline.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled", true);
				}
				this._disabledInputs = $.map(this._disabledInputs, function (value) {
					return value === target ? null : value;
				}); // delete entry
				this._disabledInputs[this._disabledInputs.length] = target;
			},

			/* Is the first field in a jQuery collection disabled as a datepicker?
	   * @param  target	element - the target input field or division or span
	   * @return boolean - true if disabled, false if enabled
	   */
			_isDisabledDatepicker: function _isDisabledDatepicker(target) {
				if (!target) {
					return false;
				}
				for (var i = 0; i < this._disabledInputs.length; i++) {
					if (this._disabledInputs[i] === target) {
						return true;
					}
				}
				return false;
			},

			/* Retrieve the instance data for the target control.
	   * @param  target  element - the target input field or division or span
	   * @return  object - the associated instance data
	   * @throws  error if a jQuery problem getting data
	   */
			_getInst: function _getInst(target) {
				try {
					return $.data(target, "datepicker");
				} catch (err) {
					throw "Missing instance data for this datepicker";
				}
			},

			/* Update or retrieve the settings for a date picker attached to an input field or division.
	   * @param  target  element - the target input field or division or span
	   * @param  name	object - the new settings to update or
	   *				string - the name of the setting to change or retrieve,
	   *				when retrieving also "all" for all instance settings or
	   *				"defaults" for all global defaults
	   * @param  value   any - the new value for the setting
	   *				(omit if above is an object or to retrieve a value)
	   */
			_optionDatepicker: function _optionDatepicker(target, name, value) {
				var settings,
				    date,
				    minDate,
				    maxDate,
				    inst = this._getInst(target);

				if (arguments.length === 2 && typeof name === "string") {
					return name === "defaults" ? $.extend({}, $.datepicker._defaults) : inst ? name === "all" ? $.extend({}, inst.settings) : this._get(inst, name) : null;
				}

				settings = name || {};
				if (typeof name === "string") {
					settings = {};
					settings[name] = value;
				}

				if (inst) {
					if (this._curInst === inst) {
						this._hideDatepicker();
					}

					date = this._getDateDatepicker(target, true);
					minDate = this._getMinMaxDate(inst, "min");
					maxDate = this._getMinMaxDate(inst, "max");
					datepicker_extendRemove(inst.settings, settings);
					// reformat the old minDate/maxDate values if dateFormat changes and a new minDate/maxDate isn't provided
					if (minDate !== null && settings.dateFormat !== undefined && settings.minDate === undefined) {
						inst.settings.minDate = this._formatDate(inst, minDate);
					}
					if (maxDate !== null && settings.dateFormat !== undefined && settings.maxDate === undefined) {
						inst.settings.maxDate = this._formatDate(inst, maxDate);
					}
					if ("disabled" in settings) {
						if (settings.disabled) {
							this._disableDatepicker(target);
						} else {
							this._enableDatepicker(target);
						}
					}
					this._attachments($(target), inst);
					this._autoSize(inst);
					this._setDate(inst, date);
					this._updateAlternate(inst);
					this._updateDatepicker(inst);
				}
			},

			// change method deprecated
			_changeDatepicker: function _changeDatepicker(target, name, value) {
				this._optionDatepicker(target, name, value);
			},

			/* Redraw the date picker attached to an input field or division.
	   * @param  target  element - the target input field or division or span
	   */
			_refreshDatepicker: function _refreshDatepicker(target) {
				var inst = this._getInst(target);
				if (inst) {
					this._updateDatepicker(inst);
				}
			},

			/* Set the dates for a jQuery selection.
	   * @param  target element - the target input field or division or span
	   * @param  date	Date - the new date
	   */
			_setDateDatepicker: function _setDateDatepicker(target, date) {
				var inst = this._getInst(target);
				if (inst) {
					this._setDate(inst, date);
					this._updateDatepicker(inst);
					this._updateAlternate(inst);
				}
			},

			/* Get the date(s) for the first entry in a jQuery selection.
	   * @param  target element - the target input field or division or span
	   * @param  noDefault boolean - true if no default date is to be used
	   * @return Date - the current date
	   */
			_getDateDatepicker: function _getDateDatepicker(target, noDefault) {
				var inst = this._getInst(target);
				if (inst && !inst.inline) {
					this._setDateFromField(inst, noDefault);
				}
				return inst ? this._getDate(inst) : null;
			},

			/* Handle keystrokes. */
			_doKeyDown: function _doKeyDown(event) {
				var onSelect,
				    dateStr,
				    sel,
				    inst = $.datepicker._getInst(event.target),
				    handled = true,
				    isRTL = inst.dpDiv.is(".ui-datepicker-rtl");

				inst._keyEvent = true;
				if ($.datepicker._datepickerShowing) {
					switch (event.keyCode) {
						case 9:
							$.datepicker._hideDatepicker();
							handled = false;
							break; // hide on tab out
						case 13:
							sel = $("td." + $.datepicker._dayOverClass + ":not(." + $.datepicker._currentClass + ")", inst.dpDiv);
							if (sel[0]) {
								$.datepicker._selectDay(event.target, inst.selectedMonth, inst.selectedYear, sel[0]);
							}

							onSelect = $.datepicker._get(inst, "onSelect");
							if (onSelect) {
								dateStr = $.datepicker._formatDate(inst);

								// trigger custom callback
								onSelect.apply(inst.input ? inst.input[0] : null, [dateStr, inst]);
							} else {
								$.datepicker._hideDatepicker();
							}

							return false; // don't submit the form
						case 27:
							$.datepicker._hideDatepicker();
							break; // hide on escape
						case 33:
							$.datepicker._adjustDate(event.target, event.ctrlKey ? -$.datepicker._get(inst, "stepBigMonths") : -$.datepicker._get(inst, "stepMonths"), "M");
							break; // previous month/year on page up/+ ctrl
						case 34:
							$.datepicker._adjustDate(event.target, event.ctrlKey ? +$.datepicker._get(inst, "stepBigMonths") : +$.datepicker._get(inst, "stepMonths"), "M");
							break; // next month/year on page down/+ ctrl
						case 35:
							if (event.ctrlKey || event.metaKey) {
								$.datepicker._clearDate(event.target);
							}
							handled = event.ctrlKey || event.metaKey;
							break; // clear on ctrl or command +end
						case 36:
							if (event.ctrlKey || event.metaKey) {
								$.datepicker._gotoToday(event.target);
							}
							handled = event.ctrlKey || event.metaKey;
							break; // current on ctrl or command +home
						case 37:
							if (event.ctrlKey || event.metaKey) {
								$.datepicker._adjustDate(event.target, isRTL ? +1 : -1, "D");
							}
							handled = event.ctrlKey || event.metaKey;
							// -1 day on ctrl or command +left
							if (event.originalEvent.altKey) {
								$.datepicker._adjustDate(event.target, event.ctrlKey ? -$.datepicker._get(inst, "stepBigMonths") : -$.datepicker._get(inst, "stepMonths"), "M");
							}
							// next month/year on alt +left on Mac
							break;
						case 38:
							if (event.ctrlKey || event.metaKey) {
								$.datepicker._adjustDate(event.target, -7, "D");
							}
							handled = event.ctrlKey || event.metaKey;
							break; // -1 week on ctrl or command +up
						case 39:
							if (event.ctrlKey || event.metaKey) {
								$.datepicker._adjustDate(event.target, isRTL ? -1 : +1, "D");
							}
							handled = event.ctrlKey || event.metaKey;
							// +1 day on ctrl or command +right
							if (event.originalEvent.altKey) {
								$.datepicker._adjustDate(event.target, event.ctrlKey ? +$.datepicker._get(inst, "stepBigMonths") : +$.datepicker._get(inst, "stepMonths"), "M");
							}
							// next month/year on alt +right
							break;
						case 40:
							if (event.ctrlKey || event.metaKey) {
								$.datepicker._adjustDate(event.target, +7, "D");
							}
							handled = event.ctrlKey || event.metaKey;
							break; // +1 week on ctrl or command +down
						default:
							handled = false;
					}
				} else if (event.keyCode === 36 && event.ctrlKey) {
					// display the date picker on ctrl+home
					$.datepicker._showDatepicker(this);
				} else {
					handled = false;
				}

				if (handled) {
					event.preventDefault();
					event.stopPropagation();
				}
			},

			/* Filter entered characters - based on date format. */
			_doKeyPress: function _doKeyPress(event) {
				var chars,
				    chr,
				    inst = $.datepicker._getInst(event.target);

				if ($.datepicker._get(inst, "constrainInput")) {
					chars = $.datepicker._possibleChars($.datepicker._get(inst, "dateFormat"));
					chr = String.fromCharCode(event.charCode == null ? event.keyCode : event.charCode);
					return event.ctrlKey || event.metaKey || chr < " " || !chars || chars.indexOf(chr) > -1;
				}
			},

			/* Synchronise manual entry and field/alternate field. */
			_doKeyUp: function _doKeyUp(event) {
				var date,
				    inst = $.datepicker._getInst(event.target);

				if (inst.input.val() !== inst.lastVal) {
					try {
						date = $.datepicker.parseDate($.datepicker._get(inst, "dateFormat"), inst.input ? inst.input.val() : null, $.datepicker._getFormatConfig(inst));

						if (date) {
							// only if valid
							$.datepicker._setDateFromField(inst);
							$.datepicker._updateAlternate(inst);
							$.datepicker._updateDatepicker(inst);
						}
					} catch (err) {}
				}
				return true;
			},

			/* Pop-up the date picker for a given input field.
	   * If false returned from beforeShow event handler do not show.
	   * @param  input  element - the input field attached to the date picker or
	   *					event - if triggered by focus
	   */
			_showDatepicker: function _showDatepicker(input) {
				input = input.target || input;
				if (input.nodeName.toLowerCase() !== "input") {
					// find from button/image trigger
					input = $("input", input.parentNode)[0];
				}

				if ($.datepicker._isDisabledDatepicker(input) || $.datepicker._lastInput === input) {
					// already here
					return;
				}

				var inst, beforeShow, beforeShowSettings, isFixed, offset, showAnim, duration;

				inst = $.datepicker._getInst(input);
				if ($.datepicker._curInst && $.datepicker._curInst !== inst) {
					$.datepicker._curInst.dpDiv.stop(true, true);
					if (inst && $.datepicker._datepickerShowing) {
						$.datepicker._hideDatepicker($.datepicker._curInst.input[0]);
					}
				}

				beforeShow = $.datepicker._get(inst, "beforeShow");
				beforeShowSettings = beforeShow ? beforeShow.apply(input, [input, inst]) : {};
				if (beforeShowSettings === false) {
					return;
				}
				datepicker_extendRemove(inst.settings, beforeShowSettings);

				inst.lastVal = null;
				$.datepicker._lastInput = input;
				$.datepicker._setDateFromField(inst);

				if ($.datepicker._inDialog) {
					// hide cursor
					input.value = "";
				}
				if (!$.datepicker._pos) {
					// position below input
					$.datepicker._pos = $.datepicker._findPos(input);
					$.datepicker._pos[1] += input.offsetHeight; // add the height
				}

				isFixed = false;
				$(input).parents().each(function () {
					isFixed |= $(this).css("position") === "fixed";
					return !isFixed;
				});

				offset = { left: $.datepicker._pos[0], top: $.datepicker._pos[1] };
				$.datepicker._pos = null;
				//to avoid flashes on Firefox
				inst.dpDiv.empty();
				// determine sizing offscreen
				inst.dpDiv.css({ position: "absolute", display: "block", top: "-1000px" });
				$.datepicker._updateDatepicker(inst);
				// fix width for dynamic number of date pickers
				// and adjust position before showing
				offset = $.datepicker._checkOffset(inst, offset, isFixed);
				inst.dpDiv.css({ position: $.datepicker._inDialog && $.blockUI ? "static" : isFixed ? "fixed" : "absolute", display: "none",
					left: offset.left + "px", top: offset.top + "px" });

				if (!inst.inline) {
					showAnim = $.datepicker._get(inst, "showAnim");
					duration = $.datepicker._get(inst, "duration");
					inst.dpDiv.css("z-index", datepicker_getZindex($(input)) + 1);
					$.datepicker._datepickerShowing = true;

					if ($.effects && $.effects.effect[showAnim]) {
						inst.dpDiv.show(showAnim, $.datepicker._get(inst, "showOptions"), duration);
					} else {
						inst.dpDiv[showAnim || "show"](showAnim ? duration : null);
					}

					if ($.datepicker._shouldFocusInput(inst)) {
						inst.input.focus();
					}

					$.datepicker._curInst = inst;
				}
			},

			/* Generate the date picker content. */
			_updateDatepicker: function _updateDatepicker(inst) {
				this.maxRows = 4; //Reset the max number of rows being displayed (see #7043)
				datepicker_instActive = inst; // for delegate hover events
				inst.dpDiv.empty().append(this._generateHTML(inst));
				this._attachHandlers(inst);
				inst.dpDiv.find("." + this._dayOverClass + " a");

				var origyearshtml,
				    numMonths = this._getNumberOfMonths(inst),
				    cols = numMonths[1],
				    width = 17;

				inst.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width("");
				if (cols > 1) {
					inst.dpDiv.addClass("ui-datepicker-multi-" + cols).css("width", width * cols + "em");
				}
				inst.dpDiv[(numMonths[0] !== 1 || numMonths[1] !== 1 ? "add" : "remove") + "Class"]("ui-datepicker-multi");
				inst.dpDiv[(this._get(inst, "isRTL") ? "add" : "remove") + "Class"]("ui-datepicker-rtl");

				if (inst === $.datepicker._curInst && $.datepicker._datepickerShowing && $.datepicker._shouldFocusInput(inst)) {
					inst.input.focus();
				}

				// deffered render of the years select (to avoid flashes on Firefox)
				if (inst.yearshtml) {
					origyearshtml = inst.yearshtml;
					setTimeout(function () {
						//assure that inst.yearshtml didn't change.
						if (origyearshtml === inst.yearshtml && inst.yearshtml) {
							inst.dpDiv.find("select.ui-datepicker-year:first").replaceWith(inst.yearshtml);
						}
						origyearshtml = inst.yearshtml = null;
					}, 0);
				}
			},

			// #6694 - don't focus the input if it's already focused
			// this breaks the change event in IE
			// Support: IE and jQuery <1.9
			_shouldFocusInput: function _shouldFocusInput(inst) {
				return inst.input && inst.input.is(":visible") && !inst.input.is(":disabled") && !inst.input.is(":focus");
			},

			/* Check positioning to remain on screen. */
			_checkOffset: function _checkOffset(inst, offset, isFixed) {
				var dpWidth = inst.dpDiv.outerWidth(),
				    dpHeight = inst.dpDiv.outerHeight(),
				    inputWidth = inst.input ? inst.input.outerWidth() : 0,
				    inputHeight = inst.input ? inst.input.outerHeight() : 0,
				    viewWidth = document.documentElement.clientWidth + (isFixed ? 0 : $(document).scrollLeft()),
				    viewHeight = document.documentElement.clientHeight + (isFixed ? 0 : $(document).scrollTop());

				offset.left -= this._get(inst, "isRTL") ? dpWidth - inputWidth : 0;
				offset.left -= isFixed && offset.left === inst.input.offset().left ? $(document).scrollLeft() : 0;
				offset.top -= isFixed && offset.top === inst.input.offset().top + inputHeight ? $(document).scrollTop() : 0;

				// now check if datepicker is showing outside window viewport - move to a better place if so.
				offset.left -= Math.min(offset.left, offset.left + dpWidth > viewWidth && viewWidth > dpWidth ? Math.abs(offset.left + dpWidth - viewWidth) : 0);
				offset.top -= Math.min(offset.top, offset.top + dpHeight > viewHeight && viewHeight > dpHeight ? Math.abs(dpHeight + inputHeight) : 0);

				return offset;
			},

			/* Find an object's position on the screen. */
			_findPos: function _findPos(obj) {
				var position,
				    inst = this._getInst(obj),
				    isRTL = this._get(inst, "isRTL");

				while (obj && (obj.type === "hidden" || obj.nodeType !== 1 || $.expr.filters.hidden(obj))) {
					obj = obj[isRTL ? "previousSibling" : "nextSibling"];
				}

				position = $(obj).offset();
				return [position.left, position.top];
			},

			/* Hide the date picker from view.
	   * @param  input  element - the input field attached to the date picker
	   */
			_hideDatepicker: function _hideDatepicker(input) {
				var showAnim,
				    duration,
				    postProcess,
				    onClose,
				    inst = this._curInst;

				if (!inst || input && inst !== $.data(input, "datepicker")) {
					return;
				}

				if (this._datepickerShowing) {
					showAnim = this._get(inst, "showAnim");
					duration = this._get(inst, "duration");
					postProcess = function postProcess() {
						$.datepicker._tidyDialog(inst);
					};

					// DEPRECATED: after BC for 1.8.x $.effects[ showAnim ] is not needed
					if ($.effects && ($.effects.effect[showAnim] || $.effects[showAnim])) {
						inst.dpDiv.hide(showAnim, $.datepicker._get(inst, "showOptions"), duration, postProcess);
					} else {
						inst.dpDiv[showAnim === "slideDown" ? "slideUp" : showAnim === "fadeIn" ? "fadeOut" : "hide"](showAnim ? duration : null, postProcess);
					}

					if (!showAnim) {
						postProcess();
					}
					this._datepickerShowing = false;

					onClose = this._get(inst, "onClose");
					if (onClose) {
						onClose.apply(inst.input ? inst.input[0] : null, [inst.input ? inst.input.val() : "", inst]);
					}

					this._lastInput = null;
					if (this._inDialog) {
						this._dialogInput.css({ position: "absolute", left: "0", top: "-100px" });
						if ($.blockUI) {
							$.unblockUI();
							$("body").append(this.dpDiv);
						}
					}
					this._inDialog = false;
				}
			},

			/* Tidy up after a dialog display. */
			_tidyDialog: function _tidyDialog(inst) {
				inst.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar");
			},

			/* Close date picker if clicked elsewhere. */
			_checkExternalClick: function _checkExternalClick(event) {
				if (!$.datepicker._curInst) {
					return;
				}

				var $target = $(event.target),
				    inst = $.datepicker._getInst($target[0]);

				if ($target[0].id !== $.datepicker._mainDivId && $target.parents("#" + $.datepicker._mainDivId).length === 0 && !$target.hasClass($.datepicker.markerClassName) && !$target.closest("." + $.datepicker._triggerClass).length && $.datepicker._datepickerShowing && !($.datepicker._inDialog && $.blockUI) || $target.hasClass($.datepicker.markerClassName) && $.datepicker._curInst !== inst) {
					$.datepicker._hideDatepicker();
				}
			},

			/* Adjust one of the date sub-fields. */
			_adjustDate: function _adjustDate(id, offset, period) {
				var target = $(id),
				    inst = this._getInst(target[0]);

				if (this._isDisabledDatepicker(target[0])) {
					return;
				}
				this._adjustInstDate(inst, offset + (period === "M" ? this._get(inst, "showCurrentAtPos") : 0), // undo positioning
				period);
				this._updateDatepicker(inst);
			},

			/* Action for current link. */
			_gotoToday: function _gotoToday(id) {
				var date,
				    target = $(id),
				    inst = this._getInst(target[0]);

				if (this._get(inst, "gotoCurrent") && inst.currentDay) {
					inst.selectedDay = inst.currentDay;
					inst.drawMonth = inst.selectedMonth = inst.currentMonth;
					inst.drawYear = inst.selectedYear = inst.currentYear;
				} else {
					date = new Date();
					inst.selectedDay = date.getDate();
					inst.drawMonth = inst.selectedMonth = date.getMonth();
					inst.drawYear = inst.selectedYear = date.getFullYear();
				}
				this._notifyChange(inst);
				this._adjustDate(target);
			},

			/* Action for selecting a new month/year. */
			_selectMonthYear: function _selectMonthYear(id, select, period) {
				var target = $(id),
				    inst = this._getInst(target[0]);

				inst["selected" + (period === "M" ? "Month" : "Year")] = inst["draw" + (period === "M" ? "Month" : "Year")] = parseInt(select.options[select.selectedIndex].value, 10);

				this._notifyChange(inst);
				this._adjustDate(target);
			},

			/* Action for selecting a day. */
			_selectDay: function _selectDay(id, month, year, td) {
				var inst,
				    target = $(id);

				if ($(td).hasClass(this._unselectableClass) || this._isDisabledDatepicker(target[0])) {
					return;
				}

				inst = this._getInst(target[0]);
				inst.selectedDay = inst.currentDay = $("a", td).html();
				inst.selectedMonth = inst.currentMonth = month;
				inst.selectedYear = inst.currentYear = year;
				this._selectDate(id, this._formatDate(inst, inst.currentDay, inst.currentMonth, inst.currentYear));
			},

			/* Erase the input field and hide the date picker. */
			_clearDate: function _clearDate(id) {
				var target = $(id);
				this._selectDate(target, "");
			},

			/* Update the input field with the selected date. */
			_selectDate: function _selectDate(id, dateStr) {
				var onSelect,
				    target = $(id),
				    inst = this._getInst(target[0]);

				dateStr = dateStr != null ? dateStr : this._formatDate(inst);
				if (inst.input) {
					inst.input.val(dateStr);
				}
				this._updateAlternate(inst);

				onSelect = this._get(inst, "onSelect");
				if (onSelect) {
					onSelect.apply(inst.input ? inst.input[0] : null, [dateStr, inst]); // trigger custom callback
				} else if (inst.input) {
					inst.input.trigger("change"); // fire the change event
				}

				if (inst.inline) {
					this._updateDatepicker(inst);
				} else {
					this._hideDatepicker();
					this._lastInput = inst.input[0];
					if (_typeof(inst.input[0]) !== "object") {
						inst.input.focus(); // restore focus
					}
					this._lastInput = null;
				}
			},

			/* Update any alternate field to synchronise with the main field. */
			_updateAlternate: function _updateAlternate(inst) {
				var altFormat,
				    date,
				    dateStr,
				    altField = this._get(inst, "altField");

				if (altField) {
					// update alternate field too
					altFormat = this._get(inst, "altFormat") || this._get(inst, "dateFormat");
					date = this._getDate(inst);
					dateStr = this.formatDate(altFormat, date, this._getFormatConfig(inst));
					$(altField).each(function () {
						$(this).val(dateStr);
					});
				}
			},

			/* Set as beforeShowDay function to prevent selection of weekends.
	   * @param  date  Date - the date to customise
	   * @return [boolean, string] - is this date selectable?, what is its CSS class?
	   */
			noWeekends: function noWeekends(date) {
				var day = date.getDay();
				return [day > 0 && day < 6, ""];
			},

			/* Set as calculateWeek to determine the week of the year based on the ISO 8601 definition.
	   * @param  date  Date - the date to get the week for
	   * @return  number - the number of the week within the year that contains this date
	   */
			iso8601Week: function iso8601Week(date) {
				var time,
				    checkDate = new Date(date.getTime());

				// Find Thursday of this week starting on Monday
				checkDate.setDate(checkDate.getDate() + 4 - (checkDate.getDay() || 7));

				time = checkDate.getTime();
				checkDate.setMonth(0); // Compare with Jan 1
				checkDate.setDate(1);
				return Math.floor(Math.round((time - checkDate) / 86400000) / 7) + 1;
			},

			/* Parse a string value into a date object.
	   * See formatDate below for the possible formats.
	   *
	   * @param  format string - the expected format of the date
	   * @param  value string - the date in the above format
	   * @param  settings Object - attributes include:
	   *					shortYearCutoff  number - the cutoff year for determining the century (optional)
	   *					dayNamesShort	string[7] - abbreviated names of the days from Sunday (optional)
	   *					dayNames		string[7] - names of the days from Sunday (optional)
	   *					monthNamesShort string[12] - abbreviated names of the months (optional)
	   *					monthNames		string[12] - names of the months (optional)
	   * @return  Date - the extracted date value or null if value is blank
	   */
			parseDate: function parseDate(format, value, settings) {
				if (format == null || value == null) {
					throw "Invalid arguments";
				}

				value = (typeof value === "undefined" ? "undefined" : _typeof(value)) === "object" ? value.toString() : value + "";
				if (value === "") {
					return null;
				}

				var iFormat,
				    dim,
				    extra,
				    iValue = 0,
				    shortYearCutoffTemp = (settings ? settings.shortYearCutoff : null) || this._defaults.shortYearCutoff,
				    shortYearCutoff = typeof shortYearCutoffTemp !== "string" ? shortYearCutoffTemp : new Date().getFullYear() % 100 + parseInt(shortYearCutoffTemp, 10),
				    dayNamesShort = (settings ? settings.dayNamesShort : null) || this._defaults.dayNamesShort,
				    dayNames = (settings ? settings.dayNames : null) || this._defaults.dayNames,
				    monthNamesShort = (settings ? settings.monthNamesShort : null) || this._defaults.monthNamesShort,
				    monthNames = (settings ? settings.monthNames : null) || this._defaults.monthNames,
				    year = -1,
				    month = -1,
				    day = -1,
				    doy = -1,
				    literal = false,
				    date,

				// Check whether a format character is doubled
				lookAhead = function lookAhead(match) {
					var matches = iFormat + 1 < format.length && format.charAt(iFormat + 1) === match;
					if (matches) {
						iFormat++;
					}
					return matches;
				},

				// Extract a number from the string value
				getNumber = function getNumber(match) {
					var isDoubled = lookAhead(match),
					    size = match === "@" ? 14 : match === "!" ? 20 : match === "y" && isDoubled ? 4 : match === "o" ? 3 : 2,
					    digits = new RegExp("^\\d{1," + size + "}"),
					    num = value.substring(iValue).match(digits);
					if (!num) {
						throw "Missing number at position " + iValue;
					}
					iValue += num[0].length;
					return parseInt(num[0], 10);
				},

				// Extract a name from the string value and convert to an index
				getName = function getName(match, shortNames, longNames) {
					var index = -1,
					    names = $.map(lookAhead(match) ? longNames : shortNames, function (v, k) {
						return [[k, v]];
					}).sort(function (a, b) {
						return -(a[1].length - b[1].length);
					});

					$.each(names, function (i, pair) {
						var name = pair[1];
						if (value.substr(iValue, name.length).toLowerCase() === name.toLowerCase()) {
							index = pair[0];
							iValue += name.length;
							return false;
						}
					});
					if (index !== -1) {
						return index + 1;
					} else {
						throw "Unknown name at position " + iValue;
					}
				},

				// Confirm that a literal character matches the string value
				checkLiteral = function checkLiteral() {
					if (value.charAt(iValue) !== format.charAt(iFormat)) {
						throw "Unexpected literal at position " + iValue;
					}
					iValue++;
				};

				for (iFormat = 0; iFormat < format.length; iFormat++) {
					if (literal) {
						if (format.charAt(iFormat) === "'" && !lookAhead("'")) {
							literal = false;
						} else {
							checkLiteral();
						}
					} else {
						switch (format.charAt(iFormat)) {
							case "d":
								day = getNumber("d");
								break;
							case "D":
								getName("D", dayNamesShort, dayNames);
								break;
							case "o":
								doy = getNumber("o");
								break;
							case "m":
								month = getNumber("m");
								break;
							case "M":
								month = getName("M", monthNamesShort, monthNames);
								break;
							case "y":
								year = getNumber("y");
								break;
							case "@":
								date = new Date(getNumber("@"));
								year = date.getFullYear();
								month = date.getMonth() + 1;
								day = date.getDate();
								break;
							case "!":
								date = new Date((getNumber("!") - this._ticksTo1970) / 10000);
								year = date.getFullYear();
								month = date.getMonth() + 1;
								day = date.getDate();
								break;
							case "'":
								if (lookAhead("'")) {
									checkLiteral();
								} else {
									literal = true;
								}
								break;
							default:
								checkLiteral();
						}
					}
				}

				if (iValue < value.length) {
					extra = value.substr(iValue);
					if (!/^\s+/.test(extra)) {
						throw "Extra/unparsed characters found in date: " + extra;
					}
				}

				if (year === -1) {
					year = new Date().getFullYear();
				} else if (year < 100) {
					year += new Date().getFullYear() - new Date().getFullYear() % 100 + (year <= shortYearCutoff ? 0 : -100);
				}

				if (doy > -1) {
					month = 1;
					day = doy;
					do {
						dim = this._getDaysInMonth(year, month - 1);
						if (day <= dim) {
							break;
						}
						month++;
						day -= dim;
					} while (true);
				}

				date = this._daylightSavingAdjust(new Date(year, month - 1, day));
				if (date.getFullYear() !== year || date.getMonth() + 1 !== month || date.getDate() !== day) {
					throw "Invalid date"; // E.g. 31/02/00
				}
				return date;
			},

			/* Standard date formats. */
			ATOM: "yy-mm-dd", // RFC 3339 (ISO 8601)
			COOKIE: "D, dd M yy",
			ISO_8601: "yy-mm-dd",
			RFC_822: "D, d M y",
			RFC_850: "DD, dd-M-y",
			RFC_1036: "D, d M y",
			RFC_1123: "D, d M yy",
			RFC_2822: "D, d M yy",
			RSS: "D, d M y", // RFC 822
			TICKS: "!",
			TIMESTAMP: "@",
			W3C: "yy-mm-dd", // ISO 8601

			_ticksTo1970: ((1970 - 1) * 365 + Math.floor(1970 / 4) - Math.floor(1970 / 100) + Math.floor(1970 / 400)) * 24 * 60 * 60 * 10000000,

			/* Format a date object into a string value.
	   * The format can be combinations of the following:
	   * d  - day of month (no leading zero)
	   * dd - day of month (two digit)
	   * o  - day of year (no leading zeros)
	   * oo - day of year (three digit)
	   * D  - day name short
	   * DD - day name long
	   * m  - month of year (no leading zero)
	   * mm - month of year (two digit)
	   * M  - month name short
	   * MM - month name long
	   * y  - year (two digit)
	   * yy - year (four digit)
	   * @ - Unix timestamp (ms since 01/01/1970)
	   * ! - Windows ticks (100ns since 01/01/0001)
	   * "..." - literal text
	   * '' - single quote
	   *
	   * @param  format string - the desired format of the date
	   * @param  date Date - the date value to format
	   * @param  settings Object - attributes include:
	   *					dayNamesShort	string[7] - abbreviated names of the days from Sunday (optional)
	   *					dayNames		string[7] - names of the days from Sunday (optional)
	   *					monthNamesShort string[12] - abbreviated names of the months (optional)
	   *					monthNames		string[12] - names of the months (optional)
	   * @return  string - the date in the above format
	   */
			formatDate: function formatDate(format, date, settings) {
				if (!date) {
					return "";
				}

				var iFormat,
				    dayNamesShort = (settings ? settings.dayNamesShort : null) || this._defaults.dayNamesShort,
				    dayNames = (settings ? settings.dayNames : null) || this._defaults.dayNames,
				    monthNamesShort = (settings ? settings.monthNamesShort : null) || this._defaults.monthNamesShort,
				    monthNames = (settings ? settings.monthNames : null) || this._defaults.monthNames,

				// Check whether a format character is doubled
				lookAhead = function lookAhead(match) {
					var matches = iFormat + 1 < format.length && format.charAt(iFormat + 1) === match;
					if (matches) {
						iFormat++;
					}
					return matches;
				},

				// Format a number, with leading zero if necessary
				formatNumber = function formatNumber(match, value, len) {
					var num = "" + value;
					if (lookAhead(match)) {
						while (num.length < len) {
							num = "0" + num;
						}
					}
					return num;
				},

				// Format a name, short or long as requested
				formatName = function formatName(match, value, shortNames, longNames) {
					return lookAhead(match) ? longNames[value] : shortNames[value];
				},
				    output = "",
				    literal = false;

				if (date) {
					for (iFormat = 0; iFormat < format.length; iFormat++) {
						if (literal) {
							if (format.charAt(iFormat) === "'" && !lookAhead("'")) {
								literal = false;
							} else {
								output += format.charAt(iFormat);
							}
						} else {
							switch (format.charAt(iFormat)) {
								case "d":
									output += formatNumber("d", date.getDate(), 2);
									break;
								case "D":
									output += formatName("D", date.getDay(), dayNamesShort, dayNames);
									break;
								case "o":
									output += formatNumber("o", Math.round((new Date(date.getFullYear(), date.getMonth(), date.getDate()).getTime() - new Date(date.getFullYear(), 0, 0).getTime()) / 86400000), 3);
									break;
								case "m":
									output += formatNumber("m", date.getMonth() + 1, 2);
									break;
								case "M":
									output += formatName("M", date.getMonth(), monthNamesShort, monthNames);
									break;
								case "y":
									output += lookAhead("y") ? date.getFullYear() : (date.getYear() % 100 < 10 ? "0" : "") + date.getYear() % 100;
									break;
								case "@":
									output += date.getTime();
									break;
								case "!":
									output += date.getTime() * 10000 + this._ticksTo1970;
									break;
								case "'":
									if (lookAhead("'")) {
										output += "'";
									} else {
										literal = true;
									}
									break;
								default:
									output += format.charAt(iFormat);
							}
						}
					}
				}
				return output;
			},

			/* Extract all possible characters from the date format. */
			_possibleChars: function _possibleChars(format) {
				var iFormat,
				    chars = "",
				    literal = false,

				// Check whether a format character is doubled
				lookAhead = function lookAhead(match) {
					var matches = iFormat + 1 < format.length && format.charAt(iFormat + 1) === match;
					if (matches) {
						iFormat++;
					}
					return matches;
				};

				for (iFormat = 0; iFormat < format.length; iFormat++) {
					if (literal) {
						if (format.charAt(iFormat) === "'" && !lookAhead("'")) {
							literal = false;
						} else {
							chars += format.charAt(iFormat);
						}
					} else {
						switch (format.charAt(iFormat)) {
							case "d":case "m":case "y":case "@":
								chars += "0123456789";
								break;
							case "D":case "M":
								return null; // Accept anything
							case "'":
								if (lookAhead("'")) {
									chars += "'";
								} else {
									literal = true;
								}
								break;
							default:
								chars += format.charAt(iFormat);
						}
					}
				}
				return chars;
			},

			/* Get a setting value, defaulting if necessary. */
			_get: function _get(inst, name) {
				return inst.settings[name] !== undefined ? inst.settings[name] : this._defaults[name];
			},

			/* Parse existing date and initialise date picker. */
			_setDateFromField: function _setDateFromField(inst, noDefault) {
				if (inst.input.val() === inst.lastVal) {
					return;
				}

				var dateFormat = this._get(inst, "dateFormat"),
				    dates = inst.lastVal = inst.input ? inst.input.val() : null,
				    defaultDate = this._getDefaultDate(inst),
				    date = defaultDate,
				    settings = this._getFormatConfig(inst);

				try {
					date = this.parseDate(dateFormat, dates, settings) || defaultDate;
				} catch (event) {
					dates = noDefault ? "" : dates;
				}
				inst.selectedDay = date.getDate();
				inst.drawMonth = inst.selectedMonth = date.getMonth();
				inst.drawYear = inst.selectedYear = date.getFullYear();
				inst.currentDay = dates ? date.getDate() : 0;
				inst.currentMonth = dates ? date.getMonth() : 0;
				inst.currentYear = dates ? date.getFullYear() : 0;
				this._adjustInstDate(inst);
			},

			/* Retrieve the default date shown on opening. */
			_getDefaultDate: function _getDefaultDate(inst) {
				return this._restrictMinMax(inst, this._determineDate(inst, this._get(inst, "defaultDate"), new Date()));
			},

			/* A date may be specified as an exact value or a relative one. */
			_determineDate: function _determineDate(inst, date, defaultDate) {
				var offsetNumeric = function offsetNumeric(offset) {
					var date = new Date();
					date.setDate(date.getDate() + offset);
					return date;
				},
				    offsetString = function offsetString(offset) {
					try {
						return $.datepicker.parseDate($.datepicker._get(inst, "dateFormat"), offset, $.datepicker._getFormatConfig(inst));
					} catch (e) {
						// Ignore
					}

					var date = (offset.toLowerCase().match(/^c/) ? $.datepicker._getDate(inst) : null) || new Date(),
					    year = date.getFullYear(),
					    month = date.getMonth(),
					    day = date.getDate(),
					    pattern = /([+\-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,
					    matches = pattern.exec(offset);

					while (matches) {
						switch (matches[2] || "d") {
							case "d":case "D":
								day += parseInt(matches[1], 10);break;
							case "w":case "W":
								day += parseInt(matches[1], 10) * 7;break;
							case "m":case "M":
								month += parseInt(matches[1], 10);
								day = Math.min(day, $.datepicker._getDaysInMonth(year, month));
								break;
							case "y":case "Y":
								year += parseInt(matches[1], 10);
								day = Math.min(day, $.datepicker._getDaysInMonth(year, month));
								break;
						}
						matches = pattern.exec(offset);
					}
					return new Date(year, month, day);
				},
				    newDate = date == null || date === "" ? defaultDate : typeof date === "string" ? offsetString(date) : typeof date === "number" ? isNaN(date) ? defaultDate : offsetNumeric(date) : new Date(date.getTime());

				newDate = newDate && newDate.toString() === "Invalid Date" ? defaultDate : newDate;
				if (newDate) {
					newDate.setHours(0);
					newDate.setMinutes(0);
					newDate.setSeconds(0);
					newDate.setMilliseconds(0);
				}
				return this._daylightSavingAdjust(newDate);
			},

			/* Handle switch to/from daylight saving.
	   * Hours may be non-zero on daylight saving cut-over:
	   * > 12 when midnight changeover, but then cannot generate
	   * midnight datetime, so jump to 1AM, otherwise reset.
	   * @param  date  (Date) the date to check
	   * @return  (Date) the corrected date
	   */
			_daylightSavingAdjust: function _daylightSavingAdjust(date) {
				if (!date) {
					return null;
				}
				date.setHours(date.getHours() > 12 ? date.getHours() + 2 : 0);
				return date;
			},

			/* Set the date(s) directly. */
			_setDate: function _setDate(inst, date, noChange) {
				var clear = !date,
				    origMonth = inst.selectedMonth,
				    origYear = inst.selectedYear,
				    newDate = this._restrictMinMax(inst, this._determineDate(inst, date, new Date()));

				inst.selectedDay = inst.currentDay = newDate.getDate();
				inst.drawMonth = inst.selectedMonth = inst.currentMonth = newDate.getMonth();
				inst.drawYear = inst.selectedYear = inst.currentYear = newDate.getFullYear();
				if ((origMonth !== inst.selectedMonth || origYear !== inst.selectedYear) && !noChange) {
					this._notifyChange(inst);
				}
				this._adjustInstDate(inst);
				if (inst.input) {
					inst.input.val(clear ? "" : this._formatDate(inst));
				}
			},

			/* Retrieve the date(s) directly. */
			_getDate: function _getDate(inst) {
				var startDate = !inst.currentYear || inst.input && inst.input.val() === "" ? null : this._daylightSavingAdjust(new Date(inst.currentYear, inst.currentMonth, inst.currentDay));
				return startDate;
			},

			/* Attach the onxxx handlers.  These are declared statically so
	   * they work with static code transformers like Caja.
	   */
			_attachHandlers: function _attachHandlers(inst) {
				var stepMonths = this._get(inst, "stepMonths"),
				    id = "#" + inst.id.replace(/\\\\/g, "\\");
				inst.dpDiv.find("[data-handler]").map(function () {
					var handler = {
						prev: function prev() {
							$.datepicker._adjustDate(id, -stepMonths, "M");
						},
						next: function next() {
							$.datepicker._adjustDate(id, +stepMonths, "M");
						},
						hide: function hide() {
							$.datepicker._hideDatepicker();
						},
						today: function today() {
							$.datepicker._gotoToday(id);
						},
						selectDay: function selectDay() {
							$.datepicker._selectDay(id, +this.getAttribute("data-month"), +this.getAttribute("data-year"), this);
							return false;
						},
						selectMonth: function selectMonth() {
							$.datepicker._selectMonthYear(id, this, "M");
							return false;
						},
						selectYear: function selectYear() {
							$.datepicker._selectMonthYear(id, this, "Y");
							return false;
						}
					};
					$(this).bind(this.getAttribute("data-event"), handler[this.getAttribute("data-handler")]);
				});
			},

			/* Generate the HTML for the current state of the date picker. */
			_generateHTML: function _generateHTML(inst) {
				var maxDraw,
				    prevText,
				    prev,
				    nextText,
				    next,
				    currentText,
				    gotoDate,
				    controls,
				    buttonPanel,
				    firstDay,
				    showWeek,
				    dayNames,
				    dayNamesMin,
				    monthNames,
				    monthNamesShort,
				    beforeShowDay,
				    showOtherMonths,
				    selectOtherMonths,
				    defaultDate,
				    html,
				    dow,
				    row,
				    group,
				    col,
				    selectedDate,
				    cornerClass,
				    calender,
				    thead,
				    day,
				    daysInMonth,
				    leadDays,
				    curRows,
				    numRows,
				    printDate,
				    dRow,
				    tbody,
				    daySettings,
				    otherMonth,
				    unselectable,
				    tempDate = new Date(),
				    today = this._daylightSavingAdjust(new Date(tempDate.getFullYear(), tempDate.getMonth(), tempDate.getDate())),
				    // clear time
				isRTL = this._get(inst, "isRTL"),
				    showButtonPanel = this._get(inst, "showButtonPanel"),
				    hideIfNoPrevNext = this._get(inst, "hideIfNoPrevNext"),
				    navigationAsDateFormat = this._get(inst, "navigationAsDateFormat"),
				    numMonths = this._getNumberOfMonths(inst),
				    showCurrentAtPos = this._get(inst, "showCurrentAtPos"),
				    stepMonths = this._get(inst, "stepMonths"),
				    isMultiMonth = numMonths[0] !== 1 || numMonths[1] !== 1,
				    currentDate = this._daylightSavingAdjust(!inst.currentDay ? new Date(9999, 9, 9) : new Date(inst.currentYear, inst.currentMonth, inst.currentDay)),
				    minDate = this._getMinMaxDate(inst, "min"),
				    maxDate = this._getMinMaxDate(inst, "max"),
				    drawMonth = inst.drawMonth - showCurrentAtPos,
				    drawYear = inst.drawYear;

				if (drawMonth < 0) {
					drawMonth += 12;
					drawYear--;
				}
				if (maxDate) {
					maxDraw = this._daylightSavingAdjust(new Date(maxDate.getFullYear(), maxDate.getMonth() - numMonths[0] * numMonths[1] + 1, maxDate.getDate()));
					maxDraw = minDate && maxDraw < minDate ? minDate : maxDraw;
					while (this._daylightSavingAdjust(new Date(drawYear, drawMonth, 1)) > maxDraw) {
						drawMonth--;
						if (drawMonth < 0) {
							drawMonth = 11;
							drawYear--;
						}
					}
				}
				inst.drawMonth = drawMonth;
				inst.drawYear = drawYear;

				prevText = this._get(inst, "prevText");
				prevText = !navigationAsDateFormat ? prevText : this.formatDate(prevText, this._daylightSavingAdjust(new Date(drawYear, drawMonth - stepMonths, 1)), this._getFormatConfig(inst));

				prev = this._canAdjustMonth(inst, -1, drawYear, drawMonth) ? "<a class='ui-datepicker-prev ui-corner-all' data-handler='prev' data-event='click'" + " title='" + prevText + "'><span class='ui-icon ui-icon-circle-triangle-" + (isRTL ? "e" : "w") + "'>" + prevText + "</span></a>" : hideIfNoPrevNext ? "" : "<a class='ui-datepicker-prev ui-corner-all ui-state-disabled' title='" + prevText + "'><span class='ui-icon ui-icon-circle-triangle-" + (isRTL ? "e" : "w") + "'>" + prevText + "</span></a>";

				nextText = this._get(inst, "nextText");
				nextText = !navigationAsDateFormat ? nextText : this.formatDate(nextText, this._daylightSavingAdjust(new Date(drawYear, drawMonth + stepMonths, 1)), this._getFormatConfig(inst));

				next = this._canAdjustMonth(inst, +1, drawYear, drawMonth) ? "<a class='ui-datepicker-next ui-corner-all' data-handler='next' data-event='click'" + " title='" + nextText + "'><span class='ui-icon ui-icon-circle-triangle-" + (isRTL ? "w" : "e") + "'>" + nextText + "</span></a>" : hideIfNoPrevNext ? "" : "<a class='ui-datepicker-next ui-corner-all ui-state-disabled' title='" + nextText + "'><span class='ui-icon ui-icon-circle-triangle-" + (isRTL ? "w" : "e") + "'>" + nextText + "</span></a>";

				currentText = this._get(inst, "currentText");
				gotoDate = this._get(inst, "gotoCurrent") && inst.currentDay ? currentDate : today;
				currentText = !navigationAsDateFormat ? currentText : this.formatDate(currentText, gotoDate, this._getFormatConfig(inst));

				controls = !inst.inline ? "<button type='button' class='ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all' data-handler='hide' data-event='click'>" + this._get(inst, "closeText") + "</button>" : "";

				buttonPanel = showButtonPanel ? "<div class='ui-datepicker-buttonpane ui-widget-content'>" + (isRTL ? controls : "") + (this._isInRange(inst, gotoDate) ? "<button type='button' class='ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all' data-handler='today' data-event='click'" + ">" + currentText + "</button>" : "") + (isRTL ? "" : controls) + "</div>" : "";

				firstDay = parseInt(this._get(inst, "firstDay"), 10);
				firstDay = isNaN(firstDay) ? 0 : firstDay;

				showWeek = this._get(inst, "showWeek");
				dayNames = this._get(inst, "dayNames");
				dayNamesMin = this._get(inst, "dayNamesMin");
				monthNames = this._get(inst, "monthNames");
				monthNamesShort = this._get(inst, "monthNamesShort");
				beforeShowDay = this._get(inst, "beforeShowDay");
				showOtherMonths = this._get(inst, "showOtherMonths");
				selectOtherMonths = this._get(inst, "selectOtherMonths");
				defaultDate = this._getDefaultDate(inst);
				html = "";
				dow;
				for (row = 0; row < numMonths[0]; row++) {
					group = "";
					this.maxRows = 4;
					for (col = 0; col < numMonths[1]; col++) {
						selectedDate = this._daylightSavingAdjust(new Date(drawYear, drawMonth, inst.selectedDay));
						cornerClass = " ui-corner-all";
						calender = "";
						if (isMultiMonth) {
							calender += "<div class='ui-datepicker-group";
							if (numMonths[1] > 1) {
								switch (col) {
									case 0:
										calender += " ui-datepicker-group-first";
										cornerClass = " ui-corner-" + (isRTL ? "right" : "left");break;
									case numMonths[1] - 1:
										calender += " ui-datepicker-group-last";
										cornerClass = " ui-corner-" + (isRTL ? "left" : "right");break;
									default:
										calender += " ui-datepicker-group-middle";cornerClass = "";break;
								}
							}
							calender += "'>";
						}
						calender += "<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix" + cornerClass + "'>" + (/all|left/.test(cornerClass) && row === 0 ? isRTL ? next : prev : "") + (/all|right/.test(cornerClass) && row === 0 ? isRTL ? prev : next : "") + this._generateMonthYearHeader(inst, drawMonth, drawYear, minDate, maxDate, row > 0 || col > 0, monthNames, monthNamesShort) + // draw month headers
						"</div><table class='ui-datepicker-calendar'><thead>" + "<tr>";
						thead = showWeek ? "<th class='ui-datepicker-week-col'>" + this._get(inst, "weekHeader") + "</th>" : "";
						for (dow = 0; dow < 7; dow++) {
							// days of the week
							day = (dow + firstDay) % 7;
							thead += "<th scope='col'" + ((dow + firstDay + 6) % 7 >= 5 ? " class='ui-datepicker-week-end'" : "") + ">" + "<span title='" + dayNames[day] + "'>" + dayNamesMin[day] + "</span></th>";
						}
						calender += thead + "</tr></thead><tbody>";
						daysInMonth = this._getDaysInMonth(drawYear, drawMonth);
						if (drawYear === inst.selectedYear && drawMonth === inst.selectedMonth) {
							inst.selectedDay = Math.min(inst.selectedDay, daysInMonth);
						}
						leadDays = (this._getFirstDayOfMonth(drawYear, drawMonth) - firstDay + 7) % 7;
						curRows = Math.ceil((leadDays + daysInMonth) / 7); // calculate the number of rows to generate
						numRows = isMultiMonth ? this.maxRows > curRows ? this.maxRows : curRows : curRows; //If multiple months, use the higher number of rows (see #7043)
						this.maxRows = numRows;
						printDate = this._daylightSavingAdjust(new Date(drawYear, drawMonth, 1 - leadDays));
						for (dRow = 0; dRow < numRows; dRow++) {
							// create date picker rows
							calender += "<tr>";
							tbody = !showWeek ? "" : "<td class='ui-datepicker-week-col'>" + this._get(inst, "calculateWeek")(printDate) + "</td>";
							for (dow = 0; dow < 7; dow++) {
								// create date picker days
								daySettings = beforeShowDay ? beforeShowDay.apply(inst.input ? inst.input[0] : null, [printDate]) : [true, ""];
								otherMonth = printDate.getMonth() !== drawMonth;
								unselectable = otherMonth && !selectOtherMonths || !daySettings[0] || minDate && printDate < minDate || maxDate && printDate > maxDate;
								tbody += "<td class='" + ((dow + firstDay + 6) % 7 >= 5 ? " ui-datepicker-week-end" : "") + ( // highlight weekends
								otherMonth ? " ui-datepicker-other-month" : "") + ( // highlight days from other months
								printDate.getTime() === selectedDate.getTime() && drawMonth === inst.selectedMonth && inst._keyEvent || // user pressed key
								defaultDate.getTime() === printDate.getTime() && defaultDate.getTime() === selectedDate.getTime() ?
								// or defaultDate is current printedDate and defaultDate is selectedDate
								" " + this._dayOverClass : "") + ( // highlight selected day
								unselectable ? " " + this._unselectableClass + " ui-state-disabled" : "") + ( // highlight unselectable days
								otherMonth && !showOtherMonths ? "" : " " + daySettings[1] + ( // highlight custom dates
								printDate.getTime() === currentDate.getTime() ? " " + this._currentClass : "") + ( // highlight selected day
								printDate.getTime() === today.getTime() ? " ui-datepicker-today" : "")) + "'" + ( // highlight today (if different)
								(!otherMonth || showOtherMonths) && daySettings[2] ? " title='" + daySettings[2].replace(/'/g, "&#39;") + "'" : "") + ( // cell title
								unselectable ? "" : " data-handler='selectDay' data-event='click' data-month='" + printDate.getMonth() + "' data-year='" + printDate.getFullYear() + "'") + ">" + ( // actions
								otherMonth && !showOtherMonths ? "&#xa0;" : // display for other months
								unselectable ? "<span class='ui-state-default'>" + printDate.getDate() + "</span>" : "<a class='ui-state-default" + (printDate.getTime() === today.getTime() ? " ui-state-highlight" : "") + (printDate.getTime() === currentDate.getTime() ? " ui-state-active" : "") + ( // highlight selected day
								otherMonth ? " ui-priority-secondary" : "") + // distinguish dates from other months
								"' href='#'>" + printDate.getDate() + "</a>") + "</td>"; // display selectable date
								printDate.setDate(printDate.getDate() + 1);
								printDate = this._daylightSavingAdjust(printDate);
							}
							calender += tbody + "</tr>";
						}
						drawMonth++;
						if (drawMonth > 11) {
							drawMonth = 0;
							drawYear++;
						}
						calender += "</tbody></table>" + (isMultiMonth ? "</div>" + (numMonths[0] > 0 && col === numMonths[1] - 1 ? "<div class='ui-datepicker-row-break'></div>" : "") : "");
						group += calender;
					}
					html += group;
				}
				html += buttonPanel;
				inst._keyEvent = false;
				return html;
			},

			/* Generate the month and year header. */
			_generateMonthYearHeader: function _generateMonthYearHeader(inst, drawMonth, drawYear, minDate, maxDate, secondary, monthNames, monthNamesShort) {

				var inMinYear,
				    inMaxYear,
				    month,
				    years,
				    thisYear,
				    determineYear,
				    year,
				    endYear,
				    changeMonth = this._get(inst, "changeMonth"),
				    changeYear = this._get(inst, "changeYear"),
				    showMonthAfterYear = this._get(inst, "showMonthAfterYear"),
				    html = "<div class='ui-datepicker-title'>",
				    monthHtml = "";

				// month selection
				if (secondary || !changeMonth) {
					monthHtml += "<span class='ui-datepicker-month'>" + monthNames[drawMonth] + "</span>";
				} else {
					inMinYear = minDate && minDate.getFullYear() === drawYear;
					inMaxYear = maxDate && maxDate.getFullYear() === drawYear;
					monthHtml += "<select class='ui-datepicker-month' data-handler='selectMonth' data-event='change'>";
					for (month = 0; month < 12; month++) {
						if ((!inMinYear || month >= minDate.getMonth()) && (!inMaxYear || month <= maxDate.getMonth())) {
							monthHtml += "<option value='" + month + "'" + (month === drawMonth ? " selected='selected'" : "") + ">" + monthNamesShort[month] + "</option>";
						}
					}
					monthHtml += "</select>";
				}

				if (!showMonthAfterYear) {
					html += monthHtml + (secondary || !(changeMonth && changeYear) ? "&#xa0;" : "");
				}

				// year selection
				if (!inst.yearshtml) {
					inst.yearshtml = "";
					if (secondary || !changeYear) {
						html += "<span class='ui-datepicker-year'>" + drawYear + "</span>";
					} else {
						// determine range of years to display
						years = this._get(inst, "yearRange").split(":");
						thisYear = new Date().getFullYear();
						determineYear = function determineYear(value) {
							var year = value.match(/c[+\-].*/) ? drawYear + parseInt(value.substring(1), 10) : value.match(/[+\-].*/) ? thisYear + parseInt(value, 10) : parseInt(value, 10);
							return isNaN(year) ? thisYear : year;
						};
						year = determineYear(years[0]);
						endYear = Math.max(year, determineYear(years[1] || ""));
						year = minDate ? Math.max(year, minDate.getFullYear()) : year;
						endYear = maxDate ? Math.min(endYear, maxDate.getFullYear()) : endYear;
						inst.yearshtml += "<select class='ui-datepicker-year' data-handler='selectYear' data-event='change'>";
						for (; year <= endYear; year++) {
							inst.yearshtml += "<option value='" + year + "'" + (year === drawYear ? " selected='selected'" : "") + ">" + year + "</option>";
						}
						inst.yearshtml += "</select>";

						html += inst.yearshtml;
						inst.yearshtml = null;
					}
				}

				html += this._get(inst, "yearSuffix");
				if (showMonthAfterYear) {
					html += (secondary || !(changeMonth && changeYear) ? "&#xa0;" : "") + monthHtml;
				}
				html += "</div>"; // Close datepicker_header
				return html;
			},

			/* Adjust one of the date sub-fields. */
			_adjustInstDate: function _adjustInstDate(inst, offset, period) {
				var year = inst.drawYear + (period === "Y" ? offset : 0),
				    month = inst.drawMonth + (period === "M" ? offset : 0),
				    day = Math.min(inst.selectedDay, this._getDaysInMonth(year, month)) + (period === "D" ? offset : 0),
				    date = this._restrictMinMax(inst, this._daylightSavingAdjust(new Date(year, month, day)));

				inst.selectedDay = date.getDate();
				inst.drawMonth = inst.selectedMonth = date.getMonth();
				inst.drawYear = inst.selectedYear = date.getFullYear();
				if (period === "M" || period === "Y") {
					this._notifyChange(inst);
				}
			},

			/* Ensure a date is within any min/max bounds. */
			_restrictMinMax: function _restrictMinMax(inst, date) {
				var minDate = this._getMinMaxDate(inst, "min"),
				    maxDate = this._getMinMaxDate(inst, "max"),
				    newDate = minDate && date < minDate ? minDate : date;
				return maxDate && newDate > maxDate ? maxDate : newDate;
			},

			/* Notify change of month/year. */
			_notifyChange: function _notifyChange(inst) {
				var onChange = this._get(inst, "onChangeMonthYear");
				if (onChange) {
					onChange.apply(inst.input ? inst.input[0] : null, [inst.selectedYear, inst.selectedMonth + 1, inst]);
				}
			},

			/* Determine the number of months to show. */
			_getNumberOfMonths: function _getNumberOfMonths(inst) {
				var numMonths = this._get(inst, "numberOfMonths");
				return numMonths == null ? [1, 1] : typeof numMonths === "number" ? [1, numMonths] : numMonths;
			},

			/* Determine the current maximum date - ensure no time components are set. */
			_getMinMaxDate: function _getMinMaxDate(inst, minMax) {
				return this._determineDate(inst, this._get(inst, minMax + "Date"), null);
			},

			/* Find the number of days in a given month. */
			_getDaysInMonth: function _getDaysInMonth(year, month) {
				return 32 - this._daylightSavingAdjust(new Date(year, month, 32)).getDate();
			},

			/* Find the day of the week of the first of a month. */
			_getFirstDayOfMonth: function _getFirstDayOfMonth(year, month) {
				return new Date(year, month, 1).getDay();
			},

			/* Determines if we should allow a "next/prev" month display change. */
			_canAdjustMonth: function _canAdjustMonth(inst, offset, curYear, curMonth) {
				var numMonths = this._getNumberOfMonths(inst),
				    date = this._daylightSavingAdjust(new Date(curYear, curMonth + (offset < 0 ? offset : numMonths[0] * numMonths[1]), 1));

				if (offset < 0) {
					date.setDate(this._getDaysInMonth(date.getFullYear(), date.getMonth()));
				}
				return this._isInRange(inst, date);
			},

			/* Is the given date in the accepted range? */
			_isInRange: function _isInRange(inst, date) {
				var yearSplit,
				    currentYear,
				    minDate = this._getMinMaxDate(inst, "min"),
				    maxDate = this._getMinMaxDate(inst, "max"),
				    minYear = null,
				    maxYear = null,
				    years = this._get(inst, "yearRange");
				if (years) {
					yearSplit = years.split(":");
					currentYear = new Date().getFullYear();
					minYear = parseInt(yearSplit[0], 10);
					maxYear = parseInt(yearSplit[1], 10);
					if (yearSplit[0].match(/[+\-].*/)) {
						minYear += currentYear;
					}
					if (yearSplit[1].match(/[+\-].*/)) {
						maxYear += currentYear;
					}
				}

				return (!minDate || date.getTime() >= minDate.getTime()) && (!maxDate || date.getTime() <= maxDate.getTime()) && (!minYear || date.getFullYear() >= minYear) && (!maxYear || date.getFullYear() <= maxYear);
			},

			/* Provide the configuration settings for formatting/parsing. */
			_getFormatConfig: function _getFormatConfig(inst) {
				var shortYearCutoff = this._get(inst, "shortYearCutoff");
				shortYearCutoff = typeof shortYearCutoff !== "string" ? shortYearCutoff : new Date().getFullYear() % 100 + parseInt(shortYearCutoff, 10);
				return { shortYearCutoff: shortYearCutoff,
					dayNamesShort: this._get(inst, "dayNamesShort"), dayNames: this._get(inst, "dayNames"),
					monthNamesShort: this._get(inst, "monthNamesShort"), monthNames: this._get(inst, "monthNames") };
			},

			/* Format the given date for display. */
			_formatDate: function _formatDate(inst, day, month, year) {
				if (!day) {
					inst.currentDay = inst.selectedDay;
					inst.currentMonth = inst.selectedMonth;
					inst.currentYear = inst.selectedYear;
				}
				var date = day ? (typeof day === "undefined" ? "undefined" : _typeof(day)) === "object" ? day : this._daylightSavingAdjust(new Date(year, month, day)) : this._daylightSavingAdjust(new Date(inst.currentYear, inst.currentMonth, inst.currentDay));
				return this.formatDate(this._get(inst, "dateFormat"), date, this._getFormatConfig(inst));
			}
		});

		/*
	  * Bind hover events for datepicker elements.
	  * Done via delegate so the binding only occurs once in the lifetime of the parent div.
	  * Global datepicker_instActive, set by _updateDatepicker allows the handlers to find their way back to the active picker.
	  */
		function datepicker_bindHover(dpDiv) {
			var selector = "button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";
			return dpDiv.delegate(selector, "mouseout", function () {
				$(this).removeClass("ui-state-hover");
				if (this.className.indexOf("ui-datepicker-prev") !== -1) {
					$(this).removeClass("ui-datepicker-prev-hover");
				}
				if (this.className.indexOf("ui-datepicker-next") !== -1) {
					$(this).removeClass("ui-datepicker-next-hover");
				}
			}).delegate(selector, "mouseover", function () {
				if (!$.datepicker._isDisabledDatepicker(datepicker_instActive.inline ? dpDiv.parent()[0] : datepicker_instActive.input[0])) {
					$(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover");
					$(this).addClass("ui-state-hover");
					if (this.className.indexOf("ui-datepicker-prev") !== -1) {
						$(this).addClass("ui-datepicker-prev-hover");
					}
					if (this.className.indexOf("ui-datepicker-next") !== -1) {
						$(this).addClass("ui-datepicker-next-hover");
					}
				}
			});
		}

		/* jQuery extend now ignores nulls! */
		function datepicker_extendRemove(target, props) {
			$.extend(target, props);
			for (var name in props) {
				if (props[name] == null) {
					target[name] = props[name];
				}
			}
			return target;
		}

		/* Invoke the datepicker functionality.
	    @param  options  string - a command, optionally followed by additional parameters or
	 					Object - settings for attaching new datepicker functionality
	    @return  jQuery object */
		$.fn.datepicker = function (options) {

			/* Verify an empty collection wasn't passed - Fixes #6976 */
			if (!this.length) {
				return this;
			}

			/* Initialise the date picker. */
			if (!$.datepicker.initialized) {
				$(document).mousedown($.datepicker._checkExternalClick);
				$.datepicker.initialized = true;
			}

			/* Append datepicker main container to body if not exist. */
			if ($("#" + $.datepicker._mainDivId).length === 0) {
				$("body").append($.datepicker.dpDiv);
			}

			var otherArgs = Array.prototype.slice.call(arguments, 1);
			if (typeof options === "string" && (options === "isDisabled" || options === "getDate" || options === "widget")) {
				return $.datepicker["_" + options + "Datepicker"].apply($.datepicker, [this[0]].concat(otherArgs));
			}
			if (options === "option" && arguments.length === 2 && typeof arguments[1] === "string") {
				return $.datepicker["_" + options + "Datepicker"].apply($.datepicker, [this[0]].concat(otherArgs));
			}
			return this.each(function () {
				typeof options === "string" ? $.datepicker["_" + options + "Datepicker"].apply($.datepicker, [this].concat(otherArgs)) : $.datepicker._attachDatepicker(this, options);
			});
		};

		$.datepicker = new Datepicker(); // singleton instance
		$.datepicker.initialized = false;
		$.datepicker.uuid = new Date().getTime();
		$.datepicker.version = "1.11.0";

		var datepicker = $.datepicker;

		/*!
	  * jQuery UI Tabs 1.11.0
	  * http://jqueryui.com
	  *
	  * Copyright 2014 jQuery Foundation and other contributors
	  * Released under the MIT license.
	  * http://jquery.org/license
	  *
	  * http://api.jqueryui.com/tabs/
	  */

		var tabs = $.widget("ui.tabs", {
			version: "1.11.0",
			delay: 300,
			options: {
				active: null,
				collapsible: false,
				event: "click",
				heightStyle: "content",
				hide: null,
				show: null,

				// callbacks
				activate: null,
				beforeActivate: null,
				beforeLoad: null,
				load: null
			},

			_isLocal: function () {
				var rhash = /#.*$/;

				return function (anchor) {
					var anchorUrl, locationUrl;

					// support: IE7
					// IE7 doesn't normalize the href property when set via script (#9317)
					anchor = anchor.cloneNode(false);

					anchorUrl = anchor.href.replace(rhash, "");
					locationUrl = location.href.replace(rhash, "");

					// decoding may throw an error if the URL isn't UTF-8 (#9518)
					try {
						anchorUrl = decodeURIComponent(anchorUrl);
					} catch (error) {}
					try {
						locationUrl = decodeURIComponent(locationUrl);
					} catch (error) {}

					return anchor.hash.length > 1 && anchorUrl === locationUrl;
				};
			}(),

			_create: function _create() {
				var that = this,
				    options = this.options;

				this.running = false;

				this.element.addClass("ui-tabs ui-widget ui-widget-content ui-corner-all").toggleClass("ui-tabs-collapsible", options.collapsible)
				// Prevent users from focusing disabled tabs via click
				.delegate(".ui-tabs-nav > li", "mousedown" + this.eventNamespace, function (event) {
					if ($(this).is(".ui-state-disabled")) {
						event.preventDefault();
					}
				})
				// support: IE <9
				// Preventing the default action in mousedown doesn't prevent IE
				// from focusing the element, so if the anchor gets focused, blur.
				// We don't have to worry about focusing the previously focused
				// element since clicking on a non-focusable element should focus
				// the body anyway.
				.delegate(".ui-tabs-anchor", "focus" + this.eventNamespace, function () {
					if ($(this).closest("li").is(".ui-state-disabled")) {
						this.blur();
					}
				});

				this._processTabs();
				options.active = this._initialActive();

				// Take disabling tabs via class attribute from HTML
				// into account and update option properly.
				if ($.isArray(options.disabled)) {
					options.disabled = $.unique(options.disabled.concat($.map(this.tabs.filter(".ui-state-disabled"), function (li) {
						return that.tabs.index(li);
					}))).sort();
				}

				// check for length avoids error when initializing empty list
				if (this.options.active !== false && this.anchors.length) {
					this.active = this._findActive(options.active);
				} else {
					this.active = $();
				}

				this._refresh();

				if (this.active.length) {
					this.load(options.active);
				}
			},

			_initialActive: function _initialActive() {
				var active = this.options.active,
				    collapsible = this.options.collapsible,
				    locationHash = location.hash.substring(1);

				if (active === null) {
					// check the fragment identifier in the URL
					if (locationHash) {
						this.tabs.each(function (i, tab) {
							if ($(tab).attr("aria-controls") === locationHash) {
								active = i;
								return false;
							}
						});
					}

					// check for a tab marked active via a class
					if (active === null) {
						active = this.tabs.index(this.tabs.filter(".ui-tabs-active"));
					}

					// no active tab, set to false
					if (active === null || active === -1) {
						active = this.tabs.length ? 0 : false;
					}
				}

				// handle numbers: negative, out of range
				if (active !== false) {
					active = this.tabs.index(this.tabs.eq(active));
					if (active === -1) {
						active = collapsible ? false : 0;
					}
				}

				// don't allow collapsible: false and active: false
				if (!collapsible && active === false && this.anchors.length) {
					active = 0;
				}

				return active;
			},

			_getCreateEventData: function _getCreateEventData() {
				return {
					tab: this.active,
					panel: !this.active.length ? $() : this._getPanelForTab(this.active)
				};
			},

			_tabKeydown: function _tabKeydown(event) {
				var focusedTab = $(this.document[0].activeElement).closest("li"),
				    selectedIndex = this.tabs.index(focusedTab),
				    goingForward = true;

				if (this._handlePageNav(event)) {
					return;
				}

				switch (event.keyCode) {
					case $.ui.keyCode.RIGHT:
					case $.ui.keyCode.DOWN:
						selectedIndex++;
						break;
					case $.ui.keyCode.UP:
					case $.ui.keyCode.LEFT:
						goingForward = false;
						selectedIndex--;
						break;
					case $.ui.keyCode.END:
						selectedIndex = this.anchors.length - 1;
						break;
					case $.ui.keyCode.HOME:
						selectedIndex = 0;
						break;
					case $.ui.keyCode.SPACE:
						// Activate only, no collapsing
						event.preventDefault();
						clearTimeout(this.activating);
						this._activate(selectedIndex);
						return;
					case $.ui.keyCode.ENTER:
						// Toggle (cancel delayed activation, allow collapsing)
						event.preventDefault();
						clearTimeout(this.activating);
						// Determine if we should collapse or activate
						this._activate(selectedIndex === this.options.active ? false : selectedIndex);
						return;
					default:
						return;
				}

				// Focus the appropriate tab, based on which key was pressed
				event.preventDefault();
				clearTimeout(this.activating);
				selectedIndex = this._focusNextTab(selectedIndex, goingForward);

				// Navigating with control key will prevent automatic activation
				if (!event.ctrlKey) {
					// Update aria-selected immediately so that AT think the tab is already selected.
					// Otherwise AT may confuse the user by stating that they need to activate the tab,
					// but the tab will already be activated by the time the announcement finishes.
					focusedTab.attr("aria-selected", "false");
					this.tabs.eq(selectedIndex).attr("aria-selected", "true");

					this.activating = this._delay(function () {
						this.option("active", selectedIndex);
					}, this.delay);
				}
			},

			_panelKeydown: function _panelKeydown(event) {
				if (this._handlePageNav(event)) {
					return;
				}

				// Ctrl+up moves focus to the current tab
				if (event.ctrlKey && event.keyCode === $.ui.keyCode.UP) {
					event.preventDefault();
					this.active.focus();
				}
			},

			// Alt+page up/down moves focus to the previous/next tab (and activates)
			_handlePageNav: function _handlePageNav(event) {
				if (event.altKey && event.keyCode === $.ui.keyCode.PAGE_UP) {
					this._activate(this._focusNextTab(this.options.active - 1, false));
					return true;
				}
				if (event.altKey && event.keyCode === $.ui.keyCode.PAGE_DOWN) {
					this._activate(this._focusNextTab(this.options.active + 1, true));
					return true;
				}
			},

			_findNextTab: function _findNextTab(index, goingForward) {
				var lastTabIndex = this.tabs.length - 1;

				function constrain() {
					if (index > lastTabIndex) {
						index = 0;
					}
					if (index < 0) {
						index = lastTabIndex;
					}
					return index;
				}

				while ($.inArray(constrain(), this.options.disabled) !== -1) {
					index = goingForward ? index + 1 : index - 1;
				}

				return index;
			},

			_focusNextTab: function _focusNextTab(index, goingForward) {
				index = this._findNextTab(index, goingForward);
				this.tabs.eq(index).focus();
				return index;
			},

			_setOption: function _setOption(key, value) {
				if (key === "active") {
					// _activate() will handle invalid values and update this.options
					this._activate(value);
					return;
				}

				if (key === "disabled") {
					// don't use the widget factory's disabled handling
					this._setupDisabled(value);
					return;
				}

				this._super(key, value);

				if (key === "collapsible") {
					this.element.toggleClass("ui-tabs-collapsible", value);
					// Setting collapsible: false while collapsed; open first panel
					if (!value && this.options.active === false) {
						this._activate(0);
					}
				}

				if (key === "event") {
					this._setupEvents(value);
				}

				if (key === "heightStyle") {
					this._setupHeightStyle(value);
				}
			},

			_sanitizeSelector: function _sanitizeSelector(hash) {
				return hash ? hash.replace(/[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g, "\\$&") : "";
			},

			refresh: function refresh() {
				var options = this.options,
				    lis = this.tablist.children(":has(a[href])");

				// get disabled tabs from class attribute from HTML
				// this will get converted to a boolean if needed in _refresh()
				options.disabled = $.map(lis.filter(".ui-state-disabled"), function (tab) {
					return lis.index(tab);
				});

				this._processTabs();

				// was collapsed or no tabs
				if (options.active === false || !this.anchors.length) {
					options.active = false;
					this.active = $();
					// was active, but active tab is gone
				} else if (this.active.length && !$.contains(this.tablist[0], this.active[0])) {
					// all remaining tabs are disabled
					if (this.tabs.length === options.disabled.length) {
						options.active = false;
						this.active = $();
						// activate previous tab
					} else {
						this._activate(this._findNextTab(Math.max(0, options.active - 1), false));
					}
					// was active, active tab still exists
				} else {
					// make sure active index is correct
					options.active = this.tabs.index(this.active);
				}

				this._refresh();
			},

			_refresh: function _refresh() {
				this._setupDisabled(this.options.disabled);
				this._setupEvents(this.options.event);
				this._setupHeightStyle(this.options.heightStyle);

				this.tabs.not(this.active).attr({
					"aria-selected": "false",
					"aria-expanded": "false",
					tabIndex: -1
				});
				this.panels.not(this._getPanelForTab(this.active)).hide().attr({
					"aria-hidden": "true"
				});

				// Make sure one tab is in the tab order
				if (!this.active.length) {
					this.tabs.eq(0).attr("tabIndex", 0);
				} else {
					this.active.addClass("ui-tabs-active ui-state-active").attr({
						"aria-selected": "true",
						"aria-expanded": "true",
						tabIndex: 0
					});
					this._getPanelForTab(this.active).show().attr({
						"aria-hidden": "false"
					});
				}
			},

			_processTabs: function _processTabs() {
				var that = this;

				this.tablist = this._getList().addClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all").attr("role", "tablist");

				this.tabs = this.tablist.find("> li:has(a[href])").addClass("ui-state-default ui-corner-top").attr({
					role: "tab",
					tabIndex: -1
				});

				this.anchors = this.tabs.map(function () {
					return $("a", this)[0];
				}).addClass("ui-tabs-anchor").attr({
					role: "presentation",
					tabIndex: -1
				});

				this.panels = $();

				this.anchors.each(function (i, anchor) {
					var selector,
					    panel,
					    panelId,
					    anchorId = $(anchor).uniqueId().attr("id"),
					    tab = $(anchor).closest("li"),
					    originalAriaControls = tab.attr("aria-controls");

					// inline tab
					if (that._isLocal(anchor)) {
						selector = anchor.hash;
						panelId = selector.substring(1);
						panel = that.element.find(that._sanitizeSelector(selector));
						// remote tab
					} else {
						// If the tab doesn't already have aria-controls,
						// generate an id by using a throw-away element
						panelId = tab.attr("aria-controls") || $({}).uniqueId()[0].id;
						selector = "#" + panelId;
						panel = that.element.find(selector);
						if (!panel.length) {
							panel = that._createPanel(panelId);
							panel.insertAfter(that.panels[i - 1] || that.tablist);
						}
						panel.attr("aria-live", "polite");
					}

					if (panel.length) {
						that.panels = that.panels.add(panel);
					}
					if (originalAriaControls) {
						tab.data("ui-tabs-aria-controls", originalAriaControls);
					}
					tab.attr({
						"aria-controls": panelId,
						"aria-labelledby": anchorId
					});
					panel.attr("aria-labelledby", anchorId);
				});

				this.panels.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").attr("role", "tabpanel");
			},

			// allow overriding how to find the list for rare usage scenarios (#7715)
			_getList: function _getList() {
				return this.tablist || this.element.find("ol,ul").eq(0);
			},

			_createPanel: function _createPanel(id) {
				return $("<div>").attr("id", id).addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").data("ui-tabs-destroy", true);
			},

			_setupDisabled: function _setupDisabled(disabled) {
				if ($.isArray(disabled)) {
					if (!disabled.length) {
						disabled = false;
					} else if (disabled.length === this.anchors.length) {
						disabled = true;
					}
				}

				// disable tabs
				for (var i = 0, li; li = this.tabs[i]; i++) {
					if (disabled === true || $.inArray(i, disabled) !== -1) {
						$(li).addClass("ui-state-disabled").attr("aria-disabled", "true");
					} else {
						$(li).removeClass("ui-state-disabled").removeAttr("aria-disabled");
					}
				}

				this.options.disabled = disabled;
			},

			_setupEvents: function _setupEvents(event) {
				var events = {};
				if (event) {
					$.each(event.split(" "), function (index, eventName) {
						events[eventName] = "_eventHandler";
					});
				}

				this._off(this.anchors.add(this.tabs).add(this.panels));
				// Always prevent the default action, even when disabled
				this._on(true, this.anchors, {
					click: function click(event) {
						event.preventDefault();
					}
				});
				this._on(this.anchors, events);
				this._on(this.tabs, { keydown: "_tabKeydown" });
				this._on(this.panels, { keydown: "_panelKeydown" });

				this._focusable(this.tabs);
				this._hoverable(this.tabs);
			},

			_setupHeightStyle: function _setupHeightStyle(heightStyle) {
				var maxHeight,
				    parent = this.element.parent();

				if (heightStyle === "fill") {
					maxHeight = parent.height();
					maxHeight -= this.element.outerHeight() - this.element.height();

					this.element.siblings(":visible").each(function () {
						var elem = $(this),
						    position = elem.css("position");

						if (position === "absolute" || position === "fixed") {
							return;
						}
						maxHeight -= elem.outerHeight(true);
					});

					this.element.children().not(this.panels).each(function () {
						maxHeight -= $(this).outerHeight(true);
					});

					this.panels.each(function () {
						$(this).height(Math.max(0, maxHeight - $(this).innerHeight() + $(this).height()));
					}).css("overflow", "auto");
				} else if (heightStyle === "auto") {
					maxHeight = 0;
					this.panels.each(function () {
						maxHeight = Math.max(maxHeight, $(this).height("").height());
					}).height(maxHeight);
				}
			},

			_eventHandler: function _eventHandler(event) {
				var options = this.options,
				    active = this.active,
				    anchor = $(event.currentTarget),
				    tab = anchor.closest("li"),
				    clickedIsActive = tab[0] === active[0],
				    collapsing = clickedIsActive && options.collapsible,
				    toShow = collapsing ? $() : this._getPanelForTab(tab),
				    toHide = !active.length ? $() : this._getPanelForTab(active),
				    eventData = {
					oldTab: active,
					oldPanel: toHide,
					newTab: collapsing ? $() : tab,
					newPanel: toShow
				};

				event.preventDefault();

				if (tab.hasClass("ui-state-disabled") ||
				// tab is already loading
				tab.hasClass("ui-tabs-loading") ||
				// can't switch durning an animation
				this.running ||
				// click on active header, but not collapsible
				clickedIsActive && !options.collapsible ||
				// allow canceling activation
				this._trigger("beforeActivate", event, eventData) === false) {
					return;
				}

				options.active = collapsing ? false : this.tabs.index(tab);

				this.active = clickedIsActive ? $() : tab;
				if (this.xhr) {
					this.xhr.abort();
				}

				if (!toHide.length && !toShow.length) {
					$.error("jQuery UI Tabs: Mismatching fragment identifier.");
				}

				if (toShow.length) {
					this.load(this.tabs.index(tab), event);
				}
				this._toggle(event, eventData);
			},

			// handles show/hide for selecting tabs
			_toggle: function _toggle(event, eventData) {
				var that = this,
				    toShow = eventData.newPanel,
				    toHide = eventData.oldPanel;

				this.running = true;

				function complete() {
					that.running = false;
					that._trigger("activate", event, eventData);
				}

				function show() {
					eventData.newTab.closest("li").addClass("ui-tabs-active ui-state-active");

					if (toShow.length && that.options.show) {
						that._show(toShow, that.options.show, complete);
					} else {
						toShow.show();
						complete();
					}
				}

				// start out by hiding, then showing, then completing
				if (toHide.length && this.options.hide) {
					this._hide(toHide, this.options.hide, function () {
						eventData.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active");
						show();
					});
				} else {
					eventData.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active");
					toHide.hide();
					show();
				}

				toHide.attr("aria-hidden", "true");
				eventData.oldTab.attr({
					"aria-selected": "false",
					"aria-expanded": "false"
				});
				// If we're switching tabs, remove the old tab from the tab order.
				// If we're opening from collapsed state, remove the previous tab from the tab order.
				// If we're collapsing, then keep the collapsing tab in the tab order.
				if (toShow.length && toHide.length) {
					eventData.oldTab.attr("tabIndex", -1);
				} else if (toShow.length) {
					this.tabs.filter(function () {
						return $(this).attr("tabIndex") === 0;
					}).attr("tabIndex", -1);
				}

				toShow.attr("aria-hidden", "false");
				eventData.newTab.attr({
					"aria-selected": "true",
					"aria-expanded": "true",
					tabIndex: 0
				});
			},

			_activate: function _activate(index) {
				var anchor,
				    active = this._findActive(index);

				// trying to activate the already active panel
				if (active[0] === this.active[0]) {
					return;
				}

				// trying to collapse, simulate a click on the current active header
				if (!active.length) {
					active = this.active;
				}

				anchor = active.find(".ui-tabs-anchor")[0];
				this._eventHandler({
					target: anchor,
					currentTarget: anchor,
					preventDefault: $.noop
				});
			},

			_findActive: function _findActive(index) {
				return index === false ? $() : this.tabs.eq(index);
			},

			_getIndex: function _getIndex(index) {
				// meta-function to give users option to provide a href string instead of a numerical index.
				if (typeof index === "string") {
					index = this.anchors.index(this.anchors.filter("[href$='" + index + "']"));
				}

				return index;
			},

			_destroy: function _destroy() {
				if (this.xhr) {
					this.xhr.abort();
				}

				this.element.removeClass("ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible");

				this.tablist.removeClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all").removeAttr("role");

				this.anchors.removeClass("ui-tabs-anchor").removeAttr("role").removeAttr("tabIndex").removeUniqueId();

				this.tabs.add(this.panels).each(function () {
					if ($.data(this, "ui-tabs-destroy")) {
						$(this).remove();
					} else {
						$(this).removeClass("ui-state-default ui-state-active ui-state-disabled " + "ui-corner-top ui-corner-bottom ui-widget-content ui-tabs-active ui-tabs-panel").removeAttr("tabIndex").removeAttr("aria-live").removeAttr("aria-busy").removeAttr("aria-selected").removeAttr("aria-labelledby").removeAttr("aria-hidden").removeAttr("aria-expanded").removeAttr("role");
					}
				});

				this.tabs.each(function () {
					var li = $(this),
					    prev = li.data("ui-tabs-aria-controls");
					if (prev) {
						li.attr("aria-controls", prev).removeData("ui-tabs-aria-controls");
					} else {
						li.removeAttr("aria-controls");
					}
				});

				this.panels.show();

				if (this.options.heightStyle !== "content") {
					this.panels.css("height", "");
				}
			},

			enable: function enable(index) {
				var disabled = this.options.disabled;
				if (disabled === false) {
					return;
				}

				if (index === undefined) {
					disabled = false;
				} else {
					index = this._getIndex(index);
					if ($.isArray(disabled)) {
						disabled = $.map(disabled, function (num) {
							return num !== index ? num : null;
						});
					} else {
						disabled = $.map(this.tabs, function (li, num) {
							return num !== index ? num : null;
						});
					}
				}
				this._setupDisabled(disabled);
			},

			disable: function disable(index) {
				var disabled = this.options.disabled;
				if (disabled === true) {
					return;
				}

				if (index === undefined) {
					disabled = true;
				} else {
					index = this._getIndex(index);
					if ($.inArray(index, disabled) !== -1) {
						return;
					}
					if ($.isArray(disabled)) {
						disabled = $.merge([index], disabled).sort();
					} else {
						disabled = [index];
					}
				}
				this._setupDisabled(disabled);
			},

			load: function load(index, event) {
				index = this._getIndex(index);
				var that = this,
				    tab = this.tabs.eq(index),
				    anchor = tab.find(".ui-tabs-anchor"),
				    panel = this._getPanelForTab(tab),
				    eventData = {
					tab: tab,
					panel: panel
				};

				// not remote
				if (this._isLocal(anchor[0])) {
					return;
				}

				this.xhr = $.ajax(this._ajaxSettings(anchor, event, eventData));

				// support: jQuery <1.8
				// jQuery <1.8 returns false if the request is canceled in beforeSend,
				// but as of 1.8, $.ajax() always returns a jqXHR object.
				if (this.xhr && this.xhr.statusText !== "canceled") {
					tab.addClass("ui-tabs-loading");
					panel.attr("aria-busy", "true");

					this.xhr.success(function (response) {
						// support: jQuery <1.8
						// http://bugs.jquery.com/ticket/11778
						setTimeout(function () {
							panel.html(response);
							that._trigger("load", event, eventData);
						}, 1);
					}).complete(function (jqXHR, status) {
						// support: jQuery <1.8
						// http://bugs.jquery.com/ticket/11778
						setTimeout(function () {
							if (status === "abort") {
								that.panels.stop(false, true);
							}

							tab.removeClass("ui-tabs-loading");
							panel.removeAttr("aria-busy");

							if (jqXHR === that.xhr) {
								delete that.xhr;
							}
						}, 1);
					});
				}
			},

			_ajaxSettings: function _ajaxSettings(anchor, event, eventData) {
				var that = this;
				return {
					url: anchor.attr("href"),
					beforeSend: function beforeSend(jqXHR, settings) {
						return that._trigger("beforeLoad", event, $.extend({ jqXHR: jqXHR, ajaxSettings: settings }, eventData));
					}
				};
			},

			_getPanelForTab: function _getPanelForTab(tab) {
				var id = $(tab).attr("aria-controls");
				return this.element.find(this._sanitizeSelector("#" + id));
			}
		});

		/*!
	  * jQuery UI Accordion 1.11.4
	  * http://jqueryui.com
	  *
	  * Copyright jQuery Foundation and other contributors
	  * Released under the MIT license.
	  * http://jquery.org/license
	  *
	  * http://api.jqueryui.com/accordion/
	  */

		var accordion = $.widget("ui.accordion", {
			version: "1.11.4",
			options: {
				active: 0,
				animate: {},
				collapsible: false,
				event: "click",
				header: "> li > :first-child,> :not(li):even",
				heightStyle: "auto",
				icons: {
					activeHeader: "ui-icon-triangle-1-s",
					header: "ui-icon-triangle-1-e"
				},

				// callbacks
				activate: null,
				beforeActivate: null
			},

			hideProps: {
				borderTopWidth: "hide",
				borderBottomWidth: "hide",
				paddingTop: "hide",
				paddingBottom: "hide",
				height: "hide"
			},

			showProps: {
				borderTopWidth: "show",
				borderBottomWidth: "show",
				paddingTop: "show",
				paddingBottom: "show",
				height: "show"
			},

			_create: function _create() {
				var options = this.options;
				this.prevShow = this.prevHide = $();
				this.element.addClass("ui-accordion ui-widget ui-helper-reset")
				// ARIA
				.attr("role", "tablist");

				// don't allow collapsible: false and active: false / null
				if (!options.collapsible && (options.active === false || options.active == null)) {
					options.active = 0;
				}

				this._processPanels();
				// handle negative values
				if (options.active < 0) {
					options.active += this.headers.length;
				}
				this._refresh();
			},

			_getCreateEventData: function _getCreateEventData() {
				return {
					header: this.active,
					panel: !this.active.length ? $() : this.active.next()
				};
			},

			_createIcons: function _createIcons() {
				var icons = this.options.icons;
				if (icons) {
					$("<span>").addClass("ui-accordion-header-icon ui-icon " + icons.header).prependTo(this.headers);
					this.active.children(".ui-accordion-header-icon").removeClass(icons.header).addClass(icons.activeHeader);
					this.headers.addClass("ui-accordion-icons");
				}
			},

			_destroyIcons: function _destroyIcons() {
				this.headers.removeClass("ui-accordion-icons").children(".ui-accordion-header-icon").remove();
			},

			_destroy: function _destroy() {
				var contents;

				// clean up main element
				this.element.removeClass("ui-accordion ui-widget ui-helper-reset").removeAttr("role");

				// clean up headers
				this.headers.removeClass("ui-accordion-header ui-accordion-header-active ui-state-default " + "ui-corner-all ui-state-active ui-state-disabled ui-corner-top").removeAttr("role").removeAttr("aria-expanded").removeAttr("aria-selected").removeAttr("aria-controls").removeAttr("tabIndex").removeUniqueId();

				this._destroyIcons();

				// clean up content panels
				contents = this.headers.next().removeClass("ui-helper-reset ui-widget-content ui-corner-bottom " + "ui-accordion-content ui-accordion-content-active ui-state-disabled").css("display", "").removeAttr("role").removeAttr("aria-hidden").removeAttr("aria-labelledby").removeUniqueId();

				if (this.options.heightStyle !== "content") {
					contents.css("height", "");
				}
			},

			_setOption: function _setOption(key, value) {
				if (key === "active") {
					// _activate() will handle invalid values and update this.options
					this._activate(value);
					return;
				}

				if (key === "event") {
					if (this.options.event) {
						this._off(this.headers, this.options.event);
					}
					this._setupEvents(value);
				}

				this._super(key, value);

				// setting collapsible: false while collapsed; open first panel
				if (key === "collapsible" && !value && this.options.active === false) {
					this._activate(0);
				}

				if (key === "icons") {
					this._destroyIcons();
					if (value) {
						this._createIcons();
					}
				}

				// #5332 - opacity doesn't cascade to positioned elements in IE
				// so we need to add the disabled class to the headers and panels
				if (key === "disabled") {
					this.element.toggleClass("ui-state-disabled", !!value).attr("aria-disabled", value);
					this.headers.add(this.headers.next()).toggleClass("ui-state-disabled", !!value);
				}
			},

			_keydown: function _keydown(event) {
				if (event.altKey || event.ctrlKey) {
					return;
				}

				var keyCode = $.ui.keyCode,
				    length = this.headers.length,
				    currentIndex = this.headers.index(event.target),
				    toFocus = false;

				switch (event.keyCode) {
					case keyCode.RIGHT:
					case keyCode.DOWN:
						toFocus = this.headers[(currentIndex + 1) % length];
						break;
					case keyCode.LEFT:
					case keyCode.UP:
						toFocus = this.headers[(currentIndex - 1 + length) % length];
						break;
					case keyCode.SPACE:
					case keyCode.ENTER:
						this._eventHandler(event);
						break;
					case keyCode.HOME:
						toFocus = this.headers[0];
						break;
					case keyCode.END:
						toFocus = this.headers[length - 1];
						break;
				}

				if (toFocus) {
					$(event.target).attr("tabIndex", -1);
					$(toFocus).attr("tabIndex", 0);
					toFocus.focus();
					event.preventDefault();
				}
			},

			_panelKeyDown: function _panelKeyDown(event) {
				if (event.keyCode === $.ui.keyCode.UP && event.ctrlKey) {
					$(event.currentTarget).prev().focus();
				}
			},

			refresh: function refresh() {
				var options = this.options;
				this._processPanels();

				// was collapsed or no panel
				if (options.active === false && options.collapsible === true || !this.headers.length) {
					options.active = false;
					this.active = $();
					// active false only when collapsible is true
				} else if (options.active === false) {
					this._activate(0);
					// was active, but active panel is gone
				} else if (this.active.length && !$.contains(this.element[0], this.active[0])) {
					// all remaining panel are disabled
					if (this.headers.length === this.headers.find(".ui-state-disabled").length) {
						options.active = false;
						this.active = $();
						// activate previous panel
					} else {
						this._activate(Math.max(0, options.active - 1));
					}
					// was active, active panel still exists
				} else {
					// make sure active index is correct
					options.active = this.headers.index(this.active);
				}

				this._destroyIcons();

				this._refresh();
			},

			_processPanels: function _processPanels() {
				var prevHeaders = this.headers,
				    prevPanels = this.panels;

				this.headers = this.element.find(this.options.header).addClass("ui-accordion-header ui-state-default ui-corner-all");

				this.panels = this.headers.next().addClass("ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom").filter(":not(.ui-accordion-content-active)").hide();

				// Avoid memory leaks (#10056)
				if (prevPanels) {
					this._off(prevHeaders.not(this.headers));
					this._off(prevPanels.not(this.panels));
				}
			},

			_refresh: function _refresh() {
				var maxHeight,
				    options = this.options,
				    heightStyle = options.heightStyle,
				    parent = this.element.parent();

				this.active = this._findActive(options.active).addClass("ui-accordion-header-active ui-state-active ui-corner-top").removeClass("ui-corner-all");
				this.active.next().addClass("ui-accordion-content-active").show();

				this.headers.attr("role", "tab").each(function () {
					var header = $(this),
					    headerId = header.uniqueId().attr("id"),
					    panel = header.next(),
					    panelId = panel.uniqueId().attr("id");
					header.attr("aria-controls", panelId);
					panel.attr("aria-labelledby", headerId);
				}).next().attr("role", "tabpanel");

				this.headers.not(this.active).attr({
					"aria-selected": "false",
					"aria-expanded": "false",
					tabIndex: -1
				}).next().attr({
					"aria-hidden": "true"
				}).hide();

				// make sure at least one header is in the tab order
				if (!this.active.length) {
					this.headers.eq(0).attr("tabIndex", 0);
				} else {
					this.active.attr({
						"aria-selected": "true",
						"aria-expanded": "true",
						tabIndex: 0
					}).next().attr({
						"aria-hidden": "false"
					});
				}

				this._createIcons();

				this._setupEvents(options.event);

				if (heightStyle === "fill") {
					maxHeight = parent.height();
					this.element.siblings(":visible").each(function () {
						var elem = $(this),
						    position = elem.css("position");

						if (position === "absolute" || position === "fixed") {
							return;
						}
						maxHeight -= elem.outerHeight(true);
					});

					this.headers.each(function () {
						maxHeight -= $(this).outerHeight(true);
					});

					this.headers.next().each(function () {
						$(this).height(Math.max(0, maxHeight - $(this).innerHeight() + $(this).height()));
					}).css("overflow", "auto");
				} else if (heightStyle === "auto") {
					maxHeight = 0;
					this.headers.next().each(function () {
						maxHeight = Math.max(maxHeight, $(this).css("height", "").height());
					}).height(maxHeight);
				}
			},

			_activate: function _activate(index) {
				var active = this._findActive(index)[0];

				// trying to activate the already active panel
				if (active === this.active[0]) {
					return;
				}

				// trying to collapse, simulate a click on the currently active header
				active = active || this.active[0];

				this._eventHandler({
					target: active,
					currentTarget: active,
					preventDefault: $.noop
				});
			},

			_findActive: function _findActive(selector) {
				return typeof selector === "number" ? this.headers.eq(selector) : $();
			},

			_setupEvents: function _setupEvents(event) {
				var events = {
					keydown: "_keydown"
				};
				if (event) {
					$.each(event.split(" "), function (index, eventName) {
						events[eventName] = "_eventHandler";
					});
				}

				this._off(this.headers.add(this.headers.next()));
				this._on(this.headers, events);
				this._on(this.headers.next(), { keydown: "_panelKeyDown" });
				this._hoverable(this.headers);
				this._focusable(this.headers);
			},

			_eventHandler: function _eventHandler(event) {
				var options = this.options,
				    active = this.active,
				    clicked = $(event.currentTarget),
				    clickedIsActive = clicked[0] === active[0],
				    collapsing = clickedIsActive && options.collapsible,
				    toShow = collapsing ? $() : clicked.next(),
				    toHide = active.next(),
				    eventData = {
					oldHeader: active,
					oldPanel: toHide,
					newHeader: collapsing ? $() : clicked,
					newPanel: toShow
				};

				event.preventDefault();

				if (
				// click on active header, but not collapsible
				clickedIsActive && !options.collapsible ||
				// allow canceling activation
				this._trigger("beforeActivate", event, eventData) === false) {
					return;
				}

				options.active = collapsing ? false : this.headers.index(clicked);

				// when the call to ._toggle() comes after the class changes
				// it causes a very odd bug in IE 8 (see #6720)
				this.active = clickedIsActive ? $() : clicked;
				this._toggle(eventData);

				// switch classes
				// corner classes on the previously active header stay after the animation
				active.removeClass("ui-accordion-header-active ui-state-active");
				if (options.icons) {
					active.children(".ui-accordion-header-icon").removeClass(options.icons.activeHeader).addClass(options.icons.header);
				}

				if (!clickedIsActive) {
					clicked.removeClass("ui-corner-all").addClass("ui-accordion-header-active ui-state-active ui-corner-top");
					if (options.icons) {
						clicked.children(".ui-accordion-header-icon").removeClass(options.icons.header).addClass(options.icons.activeHeader);
					}

					clicked.next().addClass("ui-accordion-content-active");
				}
			},

			_toggle: function _toggle(data) {
				var toShow = data.newPanel,
				    toHide = this.prevShow.length ? this.prevShow : data.oldPanel;

				// handle activating a panel during the animation for another activation
				this.prevShow.add(this.prevHide).stop(true, true);
				this.prevShow = toShow;
				this.prevHide = toHide;

				if (this.options.animate) {
					this._animate(toShow, toHide, data);
				} else {
					toHide.hide();
					toShow.show();
					this._toggleComplete(data);
				}

				toHide.attr({
					"aria-hidden": "true"
				});
				toHide.prev().attr({
					"aria-selected": "false",
					"aria-expanded": "false"
				});
				// if we're switching panels, remove the old header from the tab order
				// if we're opening from collapsed state, remove the previous header from the tab order
				// if we're collapsing, then keep the collapsing header in the tab order
				if (toShow.length && toHide.length) {
					toHide.prev().attr({
						"tabIndex": -1,
						"aria-expanded": "false"
					});
				} else if (toShow.length) {
					this.headers.filter(function () {
						return parseInt($(this).attr("tabIndex"), 10) === 0;
					}).attr("tabIndex", -1);
				}

				toShow.attr("aria-hidden", "false").prev().attr({
					"aria-selected": "true",
					"aria-expanded": "true",
					tabIndex: 0
				});
			},

			_animate: function _animate(toShow, toHide, data) {
				var total,
				    easing,
				    duration,
				    that = this,
				    adjust = 0,
				    boxSizing = toShow.css("box-sizing"),
				    down = toShow.length && (!toHide.length || toShow.index() < toHide.index()),
				    animate = this.options.animate || {},
				    options = down && animate.down || animate,
				    complete = function complete() {
					that._toggleComplete(data);
				};

				if (typeof options === "number") {
					duration = options;
				}
				if (typeof options === "string") {
					easing = options;
				}
				// fall back from options to animation in case of partial down settings
				easing = easing || options.easing || animate.easing;
				duration = duration || options.duration || animate.duration;

				if (!toHide.length) {
					return toShow.animate(this.showProps, duration, easing, complete);
				}
				if (!toShow.length) {
					return toHide.animate(this.hideProps, duration, easing, complete);
				}

				total = toShow.show().outerHeight();
				toHide.animate(this.hideProps, {
					duration: duration,
					easing: easing,
					step: function step(now, fx) {
						fx.now = Math.round(now);
					}
				});
				toShow.hide().animate(this.showProps, {
					duration: duration,
					easing: easing,
					complete: complete,
					step: function step(now, fx) {
						fx.now = Math.round(now);
						if (fx.prop !== "height") {
							if (boxSizing === "content-box") {
								adjust += fx.now;
							}
						} else if (that.options.heightStyle !== "content") {
							fx.now = Math.round(total - toHide.outerHeight() - adjust);
							adjust = 0;
						}
					}
				});
			},

			_toggleComplete: function _toggleComplete(data) {
				var toHide = data.oldPanel;

				toHide.removeClass("ui-accordion-content-active").prev().removeClass("ui-corner-top").addClass("ui-corner-all");

				// Work around for rendering bug in IE (#5421)
				if (toHide.length) {
					toHide.parent()[0].className = toHide.parent()[0].className;
				}
				this._trigger("activate", null, data);
			}
		});
	});

/***/ },
/* 543 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	/**
	*
	* jquery.sparkline.js
	*
	* v@VERSION@
	* (c) Splunk, Inc
	* Contact: Gareth Watts (gareth@splunk.com)
	* http://omnipotent.net/jquery.sparkline/
	*
	* Generates inline sparkline charts from data supplied either to the method
	* or inline in HTML
	*
	* Compatible with Internet Explorer 6.0+ and modern browsers equipped with the canvas tag
	* (Firefox 2.0+, Safari, Opera, etc)
	*
	* License: New BSD License
	*
	* Copyright (c) 2012, Splunk Inc.
	* All rights reserved.
	*
	* Redistribution and use in source and binary forms, with or without modification,
	* are permitted provided that the following conditions are met:
	*
	*     * Redistributions of source code must retain the above copyright notice,
	*       this list of conditions and the following disclaimer.
	*     * Redistributions in binary form must reproduce the above copyright notice,
	*       this list of conditions and the following disclaimer in the documentation
	*       and/or other materials provided with the distribution.
	*     * Neither the name of Splunk Inc nor the names of its contributors may
	*       be used to endorse or promote products derived from this software without
	*       specific prior written permission.
	*
	* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
	* EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
	* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
	* SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
	* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
	* OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	* HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
	* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
	* SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	*
	*
	* Usage:
	*  $(selector).sparkline(values, options)
	*
	* If values is undefined or set to 'html' then the data values are read from the specified tag:
	*   <p>Sparkline: <span class="sparkline">1,4,6,6,8,5,3,5</span></p>
	*   $('.sparkline').sparkline();
	* There must be no spaces in the enclosed data set
	*
	* Otherwise values must be an array of numbers or null values
	*    <p>Sparkline: <span id="sparkline1">This text replaced if the browser is compatible</span></p>
	*    $('#sparkline1').sparkline([1,4,6,6,8,5,3,5])
	*    $('#sparkline2').sparkline([1,4,6,null,null,5,3,5])
	*
	* Values can also be specified in an HTML comment, or as a values attribute:
	*    <p>Sparkline: <span class="sparkline"><!--1,4,6,6,8,5,3,5 --></span></p>
	*    <p>Sparkline: <span class="sparkline" values="1,4,6,6,8,5,3,5"></span></p>
	*    $('.sparkline').sparkline();
	*
	* For line charts, x values can also be specified:
	*   <p>Sparkline: <span class="sparkline">1:1,2.7:4,3.4:6,5:6,6:8,8.7:5,9:3,10:5</span></p>
	*    $('#sparkline1').sparkline([ [1,1], [2.7,4], [3.4,6], [5,6], [6,8], [8.7,5], [9,3], [10,5] ])
	*
	* By default, options should be passed in as the second argument to the sparkline function:
	*   $('.sparkline').sparkline([1,2,3,4], {type: 'bar'})
	*
	* Options can also be set by passing them on the tag itself.  This feature is disabled by default though
	* as there's a slight performance overhead:
	*   $('.sparkline').sparkline([1,2,3,4], {enableTagOptions: true})
	*   <p>Sparkline: <span class="sparkline" sparkType="bar" sparkBarColor="red">loading</span></p>
	* Prefix all options supplied as tag attribute with "spark" (configurable by setting tagOptionsPrefix)
	*
	* Supported options:
	*   lineColor - Color of the line used for the chart
	*   fillColor - Color used to fill in the chart - Set to '' or false for a transparent chart
	*   width - Width of the chart - Defaults to 3 times the number of values in pixels
	*   height - Height of the chart - Defaults to the height of the containing element
	*   chartRangeMin - Specify the minimum value to use for the Y range of the chart - Defaults to the minimum value supplied
	*   chartRangeMax - Specify the maximum value to use for the Y range of the chart - Defaults to the maximum value supplied
	*   chartRangeClip - Clip out of range values to the max/min specified by chartRangeMin and chartRangeMax
	*   chartRangeMinX - Specify the minimum value to use for the X range of the chart - Defaults to the minimum value supplied
	*   chartRangeMaxX - Specify the maximum value to use for the X range of the chart - Defaults to the maximum value supplied
	*   composite - If true then don't erase any existing chart attached to the tag, but draw
	*           another chart over the top - Note that width and height are ignored if an
	*           existing chart is detected.
	*   tagValuesAttribute - Name of tag attribute to check for data values - Defaults to 'values'
	*   enableTagOptions - Whether to check tags for sparkline options
	*   tagOptionsPrefix - Prefix used for options supplied as tag attributes - Defaults to 'spark'
	*   disableHiddenCheck - If set to true, then the plugin will assume that charts will never be drawn into a
	*           hidden dom element, avoding a browser reflow
	*   disableInteraction - If set to true then all mouseover/click interaction behaviour will be disabled,
	*       making the plugin perform much like it did in 1.x
	*   disableTooltips - If set to true then tooltips will be disabled - Defaults to false (tooltips enabled)
	*   disableHighlight - If set to true then highlighting of selected chart elements on mouseover will be disabled
	*       defaults to false (highlights enabled)
	*   highlightLighten - Factor to lighten/darken highlighted chart values by - Defaults to 1.4 for a 40% increase
	*   tooltipContainer - Specify which DOM element the tooltip should be rendered into - defaults to document.body
	*   tooltipClassname - Optional CSS classname to apply to tooltips - If not specified then a default style will be applied
	*   tooltipOffsetX - How many pixels away from the mouse pointer to render the tooltip on the X axis
	*   tooltipOffsetY - How many pixels away from the mouse pointer to render the tooltip on the r axis
	*   tooltipFormatter  - Optional callback that allows you to override the HTML displayed in the tooltip
	*       callback is given arguments of (sparkline, options, fields)
	*   tooltipChartTitle - If specified then the tooltip uses the string specified by this setting as a title
	*   tooltipFormat - A format string or SPFormat object  (or an array thereof for multiple entries)
	*       to control the format of the tooltip
	*   tooltipPrefix - A string to prepend to each field displayed in a tooltip
	*   tooltipSuffix - A string to append to each field displayed in a tooltip
	*   tooltipSkipNull - If true then null values will not have a tooltip displayed (defaults to true)
	*   tooltipValueLookups - An object or range map to map field values to tooltip strings
	*       (eg. to map -1 to "Lost", 0 to "Draw", and 1 to "Win")
	*   numberFormatter - Optional callback for formatting numbers in tooltips
	*   numberDigitGroupSep - Character to use for group separator in numbers "1,234" - Defaults to ","
	*   numberDecimalMark - Character to use for the decimal point when formatting numbers - Defaults to "."
	*   numberDigitGroupCount - Number of digits between group separator - Defaults to 3
	*
	* There are 7 types of sparkline, selected by supplying a "type" option of 'line' (default),
	* 'bar', 'tristate', 'bullet', 'discrete', 'pie' or 'box'
	*    line - Line chart.  Options:
	*       spotColor - Set to '' to not end each line in a circular spot
	*       minSpotColor - If set, color of spot at minimum value
	*       maxSpotColor - If set, color of spot at maximum value
	*       spotRadius - Radius in pixels
	*       lineWidth - Width of line in pixels
	*       normalRangeMin
	*       normalRangeMax - If set draws a filled horizontal bar between these two values marking the "normal"
	*                      or expected range of values
	*       normalRangeColor - Color to use for the above bar
	*       drawNormalOnTop - Draw the normal range above the chart fill color if true
	*       defaultPixelsPerValue - Defaults to 3 pixels of width for each value in the chart
	*       highlightSpotColor - The color to use for drawing a highlight spot on mouseover - Set to null to disable
	*       highlightLineColor - The color to use for drawing a highlight line on mouseover - Set to null to disable
	*       valueSpots - Specify which points to draw spots on, and in which color.  Accepts a range map
	*
	*   bar - Bar chart.  Options:
	*       barColor - Color of bars for postive values
	*       negBarColor - Color of bars for negative values
	*       zeroColor - Color of bars with zero values
	*       nullColor - Color of bars with null values - Defaults to omitting the bar entirely
	*       barWidth - Width of bars in pixels
	*       colorMap - Optional mappnig of values to colors to override the *BarColor values above
	*                  can be an Array of values to control the color of individual bars or a range map
	*                  to specify colors for individual ranges of values
	*       barSpacing - Gap between bars in pixels
	*       zeroAxis - Centers the y-axis around zero if true
	*
	*   tristate - Charts values of win (>0), lose (<0) or draw (=0)
	*       posBarColor - Color of win values
	*       negBarColor - Color of lose values
	*       zeroBarColor - Color of draw values
	*       barWidth - Width of bars in pixels
	*       barSpacing - Gap between bars in pixels
	*       colorMap - Optional mappnig of values to colors to override the *BarColor values above
	*                  can be an Array of values to control the color of individual bars or a range map
	*                  to specify colors for individual ranges of values
	*
	*   discrete - Options:
	*       lineHeight - Height of each line in pixels - Defaults to 30% of the graph height
	*       thesholdValue - Values less than this value will be drawn using thresholdColor instead of lineColor
	*       thresholdColor
	*
	*   bullet - Values for bullet graphs msut be in the order: target, performance, range1, range2, range3, ...
	*       options:
	*       targetColor - The color of the vertical target marker
	*       targetWidth - The width of the target marker in pixels
	*       performanceColor - The color of the performance measure horizontal bar
	*       rangeColors - Colors to use for each qualitative range background color
	*
	*   pie - Pie chart. Options:
	*       sliceColors - An array of colors to use for pie slices
	*       offset - Angle in degrees to offset the first slice - Try -90 or +90
	*       borderWidth - Width of border to draw around the pie chart, in pixels - Defaults to 0 (no border)
	*       borderColor - Color to use for the pie chart border - Defaults to #000
	*
	*   box - Box plot. Options:
	*       raw - Set to true to supply pre-computed plot points as values
	*             values should be: low_outlier, low_whisker, q1, median, q3, high_whisker, high_outlier
	*             When set to false you can supply any number of values and the box plot will
	*             be computed for you.  Default is false.
	*       showOutliers - Set to true (default) to display outliers as circles
	*       outlierIQR - Interquartile range used to determine outliers.  Default 1.5
	*       boxLineColor - Outline color of the box
	*       boxFillColor - Fill color for the box
	*       whiskerColor - Line color used for whiskers
	*       outlierLineColor - Outline color of outlier circles
	*       outlierFillColor - Fill color of the outlier circles
	*       spotRadius - Radius of outlier circles
	*       medianColor - Line color of the median line
	*       target - Draw a target cross hair at the supplied value (default undefined)
	*
	*
	*
	*   Examples:
	*   $('#sparkline1').sparkline(myvalues, { lineColor: '#f00', fillColor: false });
	*   $('.barsparks').sparkline('html', { type:'bar', height:'40px', barWidth:5 });
	*   $('#tristate').sparkline([1,1,-1,1,0,0,-1], { type:'tristate' }):
	*   $('#discrete').sparkline([1,3,4,5,5,3,4,5], { type:'discrete' });
	*   $('#bullet').sparkline([10,12,12,9,7], { type:'bullet' });
	*   $('#pie').sparkline([1,1,2], { type:'pie' });
	*/

	/*jslint regexp: true, browser: true, jquery: true, white: true, nomen: false, plusplus: false, maxerr: 500, indent: 4 */

	(function (document, Math, undefined) {
	    // performance/minified-size optimization
	    (function (factory) {
	        if (true) {
	            !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	        } else if (jQuery && !jQuery.fn.sparkline) {
	            factory(jQuery);
	        }
	    })(function ($) {
	        'use strict';

	        var UNSET_OPTION = {},
	            getDefaults,
	            createClass,
	            SPFormat,
	            clipval,
	            quartile,
	            normalizeValue,
	            normalizeValues,
	            remove,
	            isNumber,
	            all,
	            sum,
	            addCSS,
	            ensureArray,
	            formatNumber,
	            RangeMap,
	            MouseHandler,
	            Tooltip,
	            barHighlightMixin,
	            line,
	            bar,
	            tristate,
	            discrete,
	            bullet,
	            pie,
	            box,
	            defaultStyles,
	            initStyles,
	            VShape,
	            VCanvas_base,
	            VCanvas_canvas,
	            VCanvas_vml,
	            pending,
	            shapeCount = 0;

	        /**
	         * Default configuration settings
	         */
	        getDefaults = function getDefaults() {
	            return {
	                // Settings common to most/all chart types
	                common: {
	                    type: 'line',
	                    lineColor: '#00f',
	                    fillColor: '#cdf',
	                    defaultPixelsPerValue: 3,
	                    width: 'auto',
	                    height: 'auto',
	                    composite: false,
	                    tagValuesAttribute: 'values',
	                    tagOptionsPrefix: 'spark',
	                    enableTagOptions: false,
	                    enableHighlight: true,
	                    highlightLighten: 1.4,
	                    tooltipSkipNull: true,
	                    tooltipPrefix: '',
	                    tooltipSuffix: '',
	                    disableHiddenCheck: false,
	                    numberFormatter: false,
	                    numberDigitGroupCount: 3,
	                    numberDigitGroupSep: ',',
	                    numberDecimalMark: '.',
	                    disableTooltips: false,
	                    disableInteraction: false
	                },
	                // Defaults for line charts
	                line: {
	                    spotColor: '#f80',
	                    highlightSpotColor: '#5f5',
	                    highlightLineColor: '#f22',
	                    spotRadius: 1.5,
	                    minSpotColor: '#f80',
	                    maxSpotColor: '#f80',
	                    lineWidth: 1,
	                    normalRangeMin: undefined,
	                    normalRangeMax: undefined,
	                    normalRangeColor: '#ccc',
	                    drawNormalOnTop: false,
	                    chartRangeMin: undefined,
	                    chartRangeMax: undefined,
	                    chartRangeMinX: undefined,
	                    chartRangeMaxX: undefined,
	                    tooltipFormat: new SPFormat('<span style="color: {{color}}">&#9679;</span> {{prefix}}{{y}}{{suffix}}')
	                },
	                // Defaults for bar charts
	                bar: {
	                    barColor: '#3366cc',
	                    negBarColor: '#f44',
	                    stackedBarColor: ['#3366cc', '#dc3912', '#ff9900', '#109618', '#66aa00', '#dd4477', '#0099c6', '#990099'],
	                    zeroColor: undefined,
	                    nullColor: undefined,
	                    zeroAxis: true,
	                    barWidth: 4,
	                    barSpacing: 1,
	                    chartRangeMax: undefined,
	                    chartRangeMin: undefined,
	                    chartRangeClip: false,
	                    colorMap: undefined,
	                    tooltipFormat: new SPFormat('<span style="color: {{color}}">&#9679;</span> {{prefix}}{{value}}{{suffix}}')
	                },
	                // Defaults for tristate charts
	                tristate: {
	                    barWidth: 4,
	                    barSpacing: 1,
	                    posBarColor: '#6f6',
	                    negBarColor: '#f44',
	                    zeroBarColor: '#999',
	                    colorMap: {},
	                    tooltipFormat: new SPFormat('<span style="color: {{color}}">&#9679;</span> {{value:map}}'),
	                    tooltipValueLookups: { map: { '-1': 'Loss', '0': 'Draw', '1': 'Win' } }
	                },
	                // Defaults for discrete charts
	                discrete: {
	                    lineHeight: 'auto',
	                    thresholdColor: undefined,
	                    thresholdValue: 0,
	                    chartRangeMax: undefined,
	                    chartRangeMin: undefined,
	                    chartRangeClip: false,
	                    tooltipFormat: new SPFormat('{{prefix}}{{value}}{{suffix}}')
	                },
	                // Defaults for bullet charts
	                bullet: {
	                    targetColor: '#f33',
	                    targetWidth: 3, // width of the target bar in pixels
	                    performanceColor: '#33f',
	                    rangeColors: ['#d3dafe', '#a8b6ff', '#7f94ff'],
	                    base: undefined, // set this to a number to change the base start number
	                    tooltipFormat: new SPFormat('{{fieldkey:fields}} - {{value}}'),
	                    tooltipValueLookups: { fields: { r: 'Range', p: 'Performance', t: 'Target' } }
	                },
	                // Defaults for pie charts
	                pie: {
	                    offset: 0,
	                    sliceColors: ['#3366cc', '#dc3912', '#ff9900', '#109618', '#66aa00', '#dd4477', '#0099c6', '#990099'],
	                    borderWidth: 0,
	                    borderColor: '#000',
	                    tooltipFormat: new SPFormat('<span style="color: {{color}}">&#9679;</span> {{value}} ({{percent.1}}%)')
	                },
	                // Defaults for box plots
	                box: {
	                    raw: false,
	                    boxLineColor: '#000',
	                    boxFillColor: '#cdf',
	                    whiskerColor: '#000',
	                    outlierLineColor: '#333',
	                    outlierFillColor: '#fff',
	                    medianColor: '#f00',
	                    showOutliers: true,
	                    outlierIQR: 1.5,
	                    spotRadius: 1.5,
	                    target: undefined,
	                    targetColor: '#4a2',
	                    chartRangeMax: undefined,
	                    chartRangeMin: undefined,
	                    tooltipFormat: new SPFormat('{{field:fields}}: {{value}}'),
	                    tooltipFormatFieldlistKey: 'field',
	                    tooltipValueLookups: { fields: { lq: 'Lower Quartile', med: 'Median',
	                            uq: 'Upper Quartile', lo: 'Left Outlier', ro: 'Right Outlier',
	                            lw: 'Left Whisker', rw: 'Right Whisker' } }
	                }
	            };
	        };

	        // You can have tooltips use a css class other than jqstooltip by specifying tooltipClassname
	        defaultStyles = '.jqstooltip { ' + 'position: absolute;' + 'left: 0;' + 'top: 0;' + 'visibility: hidden;' + 'background: rgb(0, 0, 0) transparent;' + 'background-color: rgba(0,0,0,0.6);' + 'filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#99000000, endColorstr=#99000000);' + '-ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr=#99000000, endColorstr=#99000000)";' + 'color: white;' + 'font: 10px arial, san serif;' + 'text-align: left;' + 'white-space: nowrap;' + 'padding: 5px;' + 'border: 1px solid white;' + 'box-sizing: content-box;' + 'z-index: 10000;' + '}' + '.jqsfield { ' + 'color: white;' + 'font: 10px arial, san serif;' + 'text-align: left;' + '}';

	        /**
	         * Utilities
	         */

	        createClass = function createClass() /* [baseclass, [mixin, ...]], definition */{
	            var Class, args;
	            Class = function Class() {
	                this.init.apply(this, arguments);
	            };
	            if (arguments.length > 1) {
	                if (arguments[0]) {
	                    Class.prototype = $.extend(new arguments[0](), arguments[arguments.length - 1]);
	                    Class._super = arguments[0].prototype;
	                } else {
	                    Class.prototype = arguments[arguments.length - 1];
	                }
	                if (arguments.length > 2) {
	                    args = Array.prototype.slice.call(arguments, 1, -1);
	                    args.unshift(Class.prototype);
	                    $.extend.apply($, args);
	                }
	            } else {
	                Class.prototype = arguments[0];
	            }
	            Class.prototype.cls = Class;
	            return Class;
	        };

	        /**
	         * Wraps a format string for tooltips
	         * {{x}}
	         * {{x.2}
	         * {{x:months}}
	         */
	        $.SPFormatClass = SPFormat = createClass({
	            fre: /\{\{([\w.]+?)(:(.+?))?\}\}/g,
	            precre: /(\w+)\.(\d+)/,

	            init: function init(format, fclass) {
	                this.format = format;
	                this.fclass = fclass;
	            },

	            render: function render(fieldset, lookups, options) {
	                var self = this,
	                    fields = fieldset,
	                    match,
	                    token,
	                    lookupkey,
	                    fieldvalue,
	                    prec;
	                return this.format.replace(this.fre, function () {
	                    var lookup;
	                    token = arguments[1];
	                    lookupkey = arguments[3];
	                    match = self.precre.exec(token);
	                    if (match) {
	                        prec = match[2];
	                        token = match[1];
	                    } else {
	                        prec = false;
	                    }
	                    fieldvalue = fields[token];
	                    if (fieldvalue === undefined) {
	                        return '';
	                    }
	                    if (lookupkey && lookups && lookups[lookupkey]) {
	                        lookup = lookups[lookupkey];
	                        if (lookup.get) {
	                            // RangeMap
	                            return lookups[lookupkey].get(fieldvalue) || fieldvalue;
	                        } else {
	                            return lookups[lookupkey][fieldvalue] || fieldvalue;
	                        }
	                    }
	                    if (isNumber(fieldvalue)) {
	                        if (options.get('numberFormatter')) {
	                            fieldvalue = options.get('numberFormatter')(fieldvalue);
	                        } else {
	                            fieldvalue = formatNumber(fieldvalue, prec, options.get('numberDigitGroupCount'), options.get('numberDigitGroupSep'), options.get('numberDecimalMark'));
	                        }
	                    }
	                    return fieldvalue;
	                });
	            }
	        });

	        // convience method to avoid needing the new operator
	        $.spformat = function (format, fclass) {
	            return new SPFormat(format, fclass);
	        };

	        clipval = function clipval(val, min, max) {
	            if (val < min) {
	                return min;
	            }
	            if (val > max) {
	                return max;
	            }
	            return val;
	        };

	        quartile = function quartile(values, q) {
	            var vl;
	            if (q === 2) {
	                vl = Math.floor(values.length / 2);
	                return values.length % 2 ? values[vl] : (values[vl - 1] + values[vl]) / 2;
	            } else {
	                if (values.length % 2) {
	                    // odd
	                    vl = (values.length * q + q) / 4;
	                    return vl % 1 ? (values[Math.floor(vl)] + values[Math.floor(vl) - 1]) / 2 : values[vl - 1];
	                } else {
	                    //even
	                    vl = (values.length * q + 2) / 4;
	                    return vl % 1 ? (values[Math.floor(vl)] + values[Math.floor(vl) - 1]) / 2 : values[vl - 1];
	                }
	            }
	        };

	        normalizeValue = function normalizeValue(val) {
	            var nf;
	            switch (val) {
	                case 'undefined':
	                    val = undefined;
	                    break;
	                case 'null':
	                    val = null;
	                    break;
	                case 'true':
	                    val = true;
	                    break;
	                case 'false':
	                    val = false;
	                    break;
	                default:
	                    nf = parseFloat(val);
	                    if (val == nf) {
	                        val = nf;
	                    }
	            }
	            return val;
	        };

	        normalizeValues = function normalizeValues(vals) {
	            var i,
	                result = [];
	            for (i = vals.length; i--;) {
	                result[i] = normalizeValue(vals[i]);
	            }
	            return result;
	        };

	        remove = function remove(vals, filter) {
	            var i,
	                vl,
	                result = [];
	            for (i = 0, vl = vals.length; i < vl; i++) {
	                if (vals[i] !== filter) {
	                    result.push(vals[i]);
	                }
	            }
	            return result;
	        };

	        isNumber = function isNumber(num) {
	            return !isNaN(parseFloat(num)) && isFinite(num);
	        };

	        formatNumber = function formatNumber(num, prec, groupsize, groupsep, decsep) {
	            var p, i;
	            num = (prec === false ? parseFloat(num).toString() : num.toFixed(prec)).split('');
	            p = (p = $.inArray('.', num)) < 0 ? num.length : p;
	            if (p < num.length) {
	                num[p] = decsep;
	            }
	            for (i = p - groupsize; i > 0; i -= groupsize) {
	                num.splice(i, 0, groupsep);
	            }
	            return num.join('');
	        };

	        // determine if all values of an array match a value
	        // returns true if the array is empty
	        all = function all(val, arr, ignoreNull) {
	            var i;
	            for (i = arr.length; i--;) {
	                if (ignoreNull && arr[i] === null) continue;
	                if (arr[i] !== val) {
	                    return false;
	                }
	            }
	            return true;
	        };

	        // sums the numeric values in an array, ignoring other values
	        sum = function sum(vals) {
	            var total = 0,
	                i;
	            for (i = vals.length; i--;) {
	                total += typeof vals[i] === 'number' ? vals[i] : 0;
	            }
	            return total;
	        };

	        ensureArray = function ensureArray(val) {
	            return $.isArray(val) ? val : [val];
	        };

	        // http://paulirish.com/2008/bookmarklet-inject-new-css-rules/
	        addCSS = function addCSS(css) {
	            var tag, iefail;
	            if (document.createStyleSheet) {
	                try {
	                    document.createStyleSheet().cssText = css;
	                    return;
	                } catch (e) {
	                    // IE <= 9 maxes out at 31 stylesheets; inject into page instead.
	                    iefail = true;
	                }
	            }
	            tag = document.createElement('style');
	            tag.type = 'text/css';
	            document.getElementsByTagName('head')[0].appendChild(tag);
	            if (iefail) {
	                document.styleSheets[document.styleSheets.length - 1].cssText = css;
	            } else {
	                tag[typeof document.body.style.WebkitAppearance == 'string' ? /* webkit only */'innerText' : 'innerHTML'] = css;
	            }
	        };

	        // Provide a cross-browser interface to a few simple drawing primitives
	        $.fn.simpledraw = function (width, height, useExisting, interact) {
	            var target, mhandler;
	            if (useExisting && (target = this.data('_jqs_vcanvas'))) {
	                return target;
	            }

	            if ($.fn.sparkline.canvas === false) {
	                // We've already determined that neither Canvas nor VML are available
	                return false;
	            } else if ($.fn.sparkline.canvas === undefined) {
	                // No function defined yet -- need to see if we support Canvas or VML
	                var el = document.createElement('canvas');
	                if (!!(el.getContext && el.getContext('2d'))) {
	                    // Canvas is available
	                    $.fn.sparkline.canvas = function (width, height, target, interact) {
	                        return new VCanvas_canvas(width, height, target, interact);
	                    };
	                } else if (document.namespaces && !document.namespaces.v) {
	                    // VML is available
	                    document.namespaces.add('v', 'urn:schemas-microsoft-com:vml', '#default#VML');
	                    $.fn.sparkline.canvas = function (width, height, target, interact) {
	                        return new VCanvas_vml(width, height, target);
	                    };
	                } else {
	                    // Neither Canvas nor VML are available
	                    $.fn.sparkline.canvas = false;
	                    return false;
	                }
	            }

	            if (width === undefined) {
	                width = $(this).innerWidth();
	            }
	            if (height === undefined) {
	                height = $(this).innerHeight();
	            }

	            target = $.fn.sparkline.canvas(width, height, this, interact);

	            mhandler = $(this).data('_jqs_mhandler');
	            if (mhandler) {
	                mhandler.registerCanvas(target);
	            }
	            return target;
	        };

	        $.fn.cleardraw = function () {
	            var target = this.data('_jqs_vcanvas');
	            if (target) {
	                target.reset();
	            }
	        };

	        $.RangeMapClass = RangeMap = createClass({
	            init: function init(map) {
	                var key,
	                    range,
	                    rangelist = [];
	                for (key in map) {
	                    if (map.hasOwnProperty(key) && typeof key === 'string' && key.indexOf(':') > -1) {
	                        range = key.split(':');
	                        range[0] = range[0].length === 0 ? -Infinity : parseFloat(range[0]);
	                        range[1] = range[1].length === 0 ? Infinity : parseFloat(range[1]);
	                        range[2] = map[key];
	                        rangelist.push(range);
	                    }
	                }
	                this.map = map;
	                this.rangelist = rangelist || false;
	            },

	            get: function get(value) {
	                var rangelist = this.rangelist,
	                    i,
	                    range,
	                    result;
	                if ((result = this.map[value]) !== undefined) {
	                    return result;
	                }
	                if (rangelist) {
	                    for (i = rangelist.length; i--;) {
	                        range = rangelist[i];
	                        if (range[0] <= value && range[1] >= value) {
	                            return range[2];
	                        }
	                    }
	                }
	                return undefined;
	            }
	        });

	        // Convenience function
	        $.range_map = function (map) {
	            return new RangeMap(map);
	        };

	        MouseHandler = createClass({
	            init: function init(el, options) {
	                var $el = $(el);
	                this.$el = $el;
	                this.options = options;
	                this.currentPageX = 0;
	                this.currentPageY = 0;
	                this.el = el;
	                this.splist = [];
	                this.tooltip = null;
	                this.over = false;
	                this.displayTooltips = !options.get('disableTooltips');
	                this.highlightEnabled = !options.get('disableHighlight');
	            },

	            registerSparkline: function registerSparkline(sp) {
	                this.splist.push(sp);
	                if (this.over) {
	                    this.updateDisplay();
	                }
	            },

	            registerCanvas: function registerCanvas(canvas) {
	                var $canvas = $(canvas.canvas);
	                this.canvas = canvas;
	                this.$canvas = $canvas;
	                $canvas.mouseenter($.proxy(this.mouseenter, this));
	                $canvas.mouseleave($.proxy(this.mouseleave, this));
	                $canvas.click($.proxy(this.mouseclick, this));
	            },

	            reset: function reset(removeTooltip) {
	                this.splist = [];
	                if (this.tooltip && removeTooltip) {
	                    this.tooltip.remove();
	                    this.tooltip = undefined;
	                }
	            },

	            mouseclick: function mouseclick(e) {
	                var clickEvent = $.Event('sparklineClick');
	                clickEvent.originalEvent = e;
	                clickEvent.sparklines = this.splist;
	                this.$el.trigger(clickEvent);
	            },

	            mouseenter: function mouseenter(e) {
	                $(document.body).unbind('mousemove.jqs');
	                $(document.body).bind('mousemove.jqs', $.proxy(this.mousemove, this));
	                this.over = true;
	                this.currentPageX = e.pageX;
	                this.currentPageY = e.pageY;
	                this.currentEl = e.target;
	                if (!this.tooltip && this.displayTooltips) {
	                    this.tooltip = new Tooltip(this.options);
	                    this.tooltip.updatePosition(e.pageX, e.pageY);
	                }
	                this.updateDisplay();
	            },

	            mouseleave: function mouseleave() {
	                $(document.body).unbind('mousemove.jqs');
	                var splist = this.splist,
	                    spcount = splist.length,
	                    needsRefresh = false,
	                    sp,
	                    i;
	                this.over = false;
	                this.currentEl = null;

	                if (this.tooltip) {
	                    this.tooltip.remove();
	                    this.tooltip = null;
	                }

	                for (i = 0; i < spcount; i++) {
	                    sp = splist[i];
	                    if (sp.clearRegionHighlight()) {
	                        needsRefresh = true;
	                    }
	                }

	                if (needsRefresh) {
	                    this.canvas.render();
	                }
	            },

	            mousemove: function mousemove(e) {
	                this.currentPageX = e.pageX;
	                this.currentPageY = e.pageY;
	                this.currentEl = e.target;
	                if (this.tooltip) {
	                    this.tooltip.updatePosition(e.pageX, e.pageY);
	                }
	                this.updateDisplay();
	            },

	            updateDisplay: function updateDisplay() {
	                var splist = this.splist,
	                    spcount = splist.length,
	                    needsRefresh = false,
	                    offset = this.$canvas.offset(),
	                    localX = this.currentPageX - offset.left,
	                    localY = this.currentPageY - offset.top,
	                    tooltiphtml,
	                    sp,
	                    i,
	                    result,
	                    changeEvent;
	                if (!this.over) {
	                    return;
	                }
	                for (i = 0; i < spcount; i++) {
	                    sp = splist[i];
	                    result = sp.setRegionHighlight(this.currentEl, localX, localY);
	                    if (result) {
	                        needsRefresh = true;
	                    }
	                }
	                if (needsRefresh) {
	                    changeEvent = $.Event('sparklineRegionChange');
	                    changeEvent.sparklines = this.splist;
	                    this.$el.trigger(changeEvent);
	                    if (this.tooltip) {
	                        tooltiphtml = '';
	                        for (i = 0; i < spcount; i++) {
	                            sp = splist[i];
	                            tooltiphtml += sp.getCurrentRegionTooltip();
	                        }
	                        this.tooltip.setContent(tooltiphtml);
	                    }
	                    if (!this.disableHighlight) {
	                        this.canvas.render();
	                    }
	                }
	                if (result === null) {
	                    this.mouseleave();
	                }
	            }
	        });

	        Tooltip = createClass({
	            sizeStyle: 'position: static !important;' + 'display: block !important;' + 'visibility: hidden !important;' + 'float: left !important;',

	            init: function init(options) {
	                var tooltipClassname = options.get('tooltipClassname', 'jqstooltip'),
	                    sizetipStyle = this.sizeStyle,
	                    offset;
	                this.container = options.get('tooltipContainer') || document.body;
	                this.tooltipOffsetX = options.get('tooltipOffsetX', 10);
	                this.tooltipOffsetY = options.get('tooltipOffsetY', 12);
	                // remove any previous lingering tooltip
	                $('#jqssizetip').remove();
	                $('#jqstooltip').remove();
	                this.sizetip = $('<div/>', {
	                    id: 'jqssizetip',
	                    style: sizetipStyle,
	                    'class': tooltipClassname
	                });
	                this.tooltip = $('<div/>', {
	                    id: 'jqstooltip',
	                    'class': tooltipClassname
	                }).appendTo(this.container);
	                // account for the container's location
	                offset = this.tooltip.offset();
	                this.offsetLeft = offset.left;
	                this.offsetTop = offset.top;
	                this.hidden = true;
	                $(window).unbind('resize.jqs scroll.jqs');
	                $(window).bind('resize.jqs scroll.jqs', $.proxy(this.updateWindowDims, this));
	                this.updateWindowDims();
	            },

	            updateWindowDims: function updateWindowDims() {
	                this.scrollTop = $(window).scrollTop();
	                this.scrollLeft = $(window).scrollLeft();
	                this.scrollRight = this.scrollLeft + $(window).width();
	                this.updatePosition();
	            },

	            getSize: function getSize(content) {
	                this.sizetip.html(content).appendTo(this.container);
	                this.width = this.sizetip.width() + 1;
	                this.height = this.sizetip.height();
	                this.sizetip.remove();
	            },

	            setContent: function setContent(content) {
	                if (!content) {
	                    this.tooltip.css('visibility', 'hidden');
	                    this.hidden = true;
	                    return;
	                }
	                this.getSize(content);
	                this.tooltip.html(content).css({
	                    'width': this.width,
	                    'height': this.height,
	                    'visibility': 'visible'
	                });
	                if (this.hidden) {
	                    this.hidden = false;
	                    this.updatePosition();
	                }
	            },

	            updatePosition: function updatePosition(x, y) {
	                if (x === undefined) {
	                    if (this.mousex === undefined) {
	                        return;
	                    }
	                    x = this.mousex - this.offsetLeft;
	                    y = this.mousey - this.offsetTop;
	                } else {
	                    this.mousex = x = x - this.offsetLeft;
	                    this.mousey = y = y - this.offsetTop;
	                }
	                if (!this.height || !this.width || this.hidden) {
	                    return;
	                }

	                y -= this.height + this.tooltipOffsetY;
	                x += this.tooltipOffsetX;

	                if (y < this.scrollTop) {
	                    y = this.scrollTop;
	                }
	                if (x < this.scrollLeft) {
	                    x = this.scrollLeft;
	                } else if (x + this.width > this.scrollRight) {
	                    x = this.scrollRight - this.width;
	                }

	                this.tooltip.css({
	                    'left': x,
	                    'top': y
	                });
	            },

	            remove: function remove() {
	                this.tooltip.remove();
	                this.sizetip.remove();
	                this.sizetip = this.tooltip = undefined;
	                $(window).unbind('resize.jqs scroll.jqs');
	            }
	        });

	        initStyles = function initStyles() {
	            addCSS(defaultStyles);
	        };

	        $(initStyles);

	        pending = [];
	        $.fn.sparkline = function (userValues, userOptions) {
	            return this.each(function () {
	                var options = new $.fn.sparkline.options(this, userOptions),
	                    $this = $(this),
	                    render,
	                    i;
	                render = function render() {
	                    var values, width, height, tmp, mhandler, sp, vals;
	                    if (userValues === 'html' || userValues === undefined) {
	                        vals = this.getAttribute(options.get('tagValuesAttribute'));
	                        if (vals === undefined || vals === null) {
	                            vals = $this.html();
	                        }
	                        values = vals.replace(/(^\s*<!--)|(-->\s*$)|\s+/g, '').split(',');
	                    } else {
	                        values = userValues;
	                    }

	                    width = options.get('width') === 'auto' ? values.length * options.get('defaultPixelsPerValue') : options.get('width');
	                    if (options.get('height') === 'auto') {
	                        if (!options.get('composite') || !$.data(this, '_jqs_vcanvas')) {
	                            // must be a better way to get the line height
	                            tmp = document.createElement('span');
	                            tmp.innerHTML = 'a';
	                            $this.html(tmp);
	                            height = $(tmp).innerHeight() || $(tmp).height();
	                            $(tmp).remove();
	                            tmp = null;
	                        }
	                    } else {
	                        height = options.get('height');
	                    }

	                    if (!options.get('disableInteraction')) {
	                        mhandler = $.data(this, '_jqs_mhandler');
	                        if (!mhandler) {
	                            mhandler = new MouseHandler(this, options);
	                            $.data(this, '_jqs_mhandler', mhandler);
	                        } else if (!options.get('composite')) {
	                            mhandler.reset();
	                        }
	                    } else {
	                        mhandler = false;
	                    }

	                    if (options.get('composite') && !$.data(this, '_jqs_vcanvas')) {
	                        if (!$.data(this, '_jqs_errnotify')) {
	                            window.alert('Attempted to attach a composite sparkline to an element with no existing sparkline');
	                            $.data(this, '_jqs_errnotify', true);
	                        }
	                        return;
	                    }

	                    sp = new $.fn.sparkline[options.get('type')](this, values, options, width, height);

	                    sp.render();

	                    if (mhandler) {
	                        mhandler.registerSparkline(sp);
	                    }
	                };
	                if ($(this).html() && !options.get('disableHiddenCheck') && $(this).is(':hidden') || !$(this).parents('body').length) {
	                    if (!options.get('composite') && $.data(this, '_jqs_pending')) {
	                        // remove any existing references to the element
	                        for (i = pending.length; i; i--) {
	                            if (pending[i - 1][0] == this) {
	                                pending.splice(i - 1, 1);
	                            }
	                        }
	                    }
	                    pending.push([this, render]);
	                    $.data(this, '_jqs_pending', true);
	                } else {
	                    render.call(this);
	                }
	            });
	        };

	        $.fn.sparkline.defaults = getDefaults();

	        $.sparkline_display_visible = function () {
	            var el, i, pl;
	            var done = [];
	            for (i = 0, pl = pending.length; i < pl; i++) {
	                el = pending[i][0];
	                if ($(el).is(':visible') && !$(el).parents().is(':hidden')) {
	                    pending[i][1].call(el);
	                    $.data(pending[i][0], '_jqs_pending', false);
	                    done.push(i);
	                } else if (!$(el).closest('html').length && !$.data(el, '_jqs_pending')) {
	                    // element has been inserted and removed from the DOM
	                    // If it was not yet inserted into the dom then the .data request
	                    // will return true.
	                    // removing from the dom causes the data to be removed.
	                    $.data(pending[i][0], '_jqs_pending', false);
	                    done.push(i);
	                }
	            }
	            for (i = done.length; i; i--) {
	                pending.splice(done[i - 1], 1);
	            }
	        };

	        /**
	         * User option handler
	         */
	        $.fn.sparkline.options = createClass({
	            init: function init(tag, userOptions) {
	                var extendedOptions, defaults, base, tagOptionType;
	                this.userOptions = userOptions = userOptions || {};
	                this.tag = tag;
	                this.tagValCache = {};
	                defaults = $.fn.sparkline.defaults;
	                base = defaults.common;
	                this.tagOptionsPrefix = userOptions.enableTagOptions && (userOptions.tagOptionsPrefix || base.tagOptionsPrefix);

	                tagOptionType = this.getTagSetting('type');
	                if (tagOptionType === UNSET_OPTION) {
	                    extendedOptions = defaults[userOptions.type || base.type];
	                } else {
	                    extendedOptions = defaults[tagOptionType];
	                }
	                this.mergedOptions = $.extend({}, base, extendedOptions, userOptions);
	            },

	            getTagSetting: function getTagSetting(key) {
	                var prefix = this.tagOptionsPrefix,
	                    val,
	                    i,
	                    pairs,
	                    keyval;
	                if (prefix === false || prefix === undefined) {
	                    return UNSET_OPTION;
	                }
	                if (this.tagValCache.hasOwnProperty(key)) {
	                    val = this.tagValCache.key;
	                } else {
	                    val = this.tag.getAttribute(prefix + key);
	                    if (val === undefined || val === null) {
	                        val = UNSET_OPTION;
	                    } else if (val.substr(0, 1) === '[') {
	                        val = val.substr(1, val.length - 2).split(',');
	                        for (i = val.length; i--;) {
	                            val[i] = normalizeValue(val[i].replace(/(^\s*)|(\s*$)/g, ''));
	                        }
	                    } else if (val.substr(0, 1) === '{') {
	                        pairs = val.substr(1, val.length - 2).split(',');
	                        val = {};
	                        for (i = pairs.length; i--;) {
	                            keyval = pairs[i].split(':', 2);
	                            val[keyval[0].replace(/(^\s*)|(\s*$)/g, '')] = normalizeValue(keyval[1].replace(/(^\s*)|(\s*$)/g, ''));
	                        }
	                    } else {
	                        val = normalizeValue(val);
	                    }
	                    this.tagValCache.key = val;
	                }
	                return val;
	            },

	            get: function get(key, defaultval) {
	                var tagOption = this.getTagSetting(key),
	                    result;
	                if (tagOption !== UNSET_OPTION) {
	                    return tagOption;
	                }
	                return (result = this.mergedOptions[key]) === undefined ? defaultval : result;
	            }
	        });

	        $.fn.sparkline._base = createClass({
	            disabled: false,

	            init: function init(el, values, options, width, height) {
	                this.el = el;
	                this.$el = $(el);
	                this.values = values;
	                this.options = options;
	                this.width = width;
	                this.height = height;
	                this.currentRegion = undefined;
	            },

	            /**
	             * Setup the canvas
	             */
	            initTarget: function initTarget() {
	                var interactive = !this.options.get('disableInteraction');
	                if (!(this.target = this.$el.simpledraw(this.width, this.height, this.options.get('composite'), interactive))) {
	                    this.disabled = true;
	                } else {
	                    this.canvasWidth = this.target.pixelWidth;
	                    this.canvasHeight = this.target.pixelHeight;
	                }
	            },

	            /**
	             * Actually render the chart to the canvas
	             */
	            render: function render() {
	                if (this.disabled) {
	                    this.el.innerHTML = '';
	                    return false;
	                }
	                return true;
	            },

	            /**
	             * Return a region id for a given x/y co-ordinate
	             */
	            getRegion: function getRegion(x, y) {},

	            /**
	             * Highlight an item based on the moused-over x,y co-ordinate
	             */
	            setRegionHighlight: function setRegionHighlight(el, x, y) {
	                var currentRegion = this.currentRegion,
	                    highlightEnabled = !this.options.get('disableHighlight'),
	                    newRegion;
	                if (x > this.canvasWidth || y > this.canvasHeight || x < 0 || y < 0) {
	                    return null;
	                }
	                newRegion = this.getRegion(el, x, y);
	                if (currentRegion !== newRegion) {
	                    if (currentRegion !== undefined && highlightEnabled) {
	                        this.removeHighlight();
	                    }
	                    this.currentRegion = newRegion;
	                    if (newRegion !== undefined && highlightEnabled) {
	                        this.renderHighlight();
	                    }
	                    return true;
	                }
	                return false;
	            },

	            /**
	             * Reset any currently highlighted item
	             */
	            clearRegionHighlight: function clearRegionHighlight() {
	                if (this.currentRegion !== undefined) {
	                    this.removeHighlight();
	                    this.currentRegion = undefined;
	                    return true;
	                }
	                return false;
	            },

	            renderHighlight: function renderHighlight() {
	                this.changeHighlight(true);
	            },

	            removeHighlight: function removeHighlight() {
	                this.changeHighlight(false);
	            },

	            changeHighlight: function changeHighlight(highlight) {},

	            /**
	             * Fetch the HTML to display as a tooltip
	             */
	            getCurrentRegionTooltip: function getCurrentRegionTooltip() {
	                var options = this.options,
	                    header = '',
	                    entries = [],
	                    fields,
	                    formats,
	                    formatlen,
	                    fclass,
	                    text,
	                    i,
	                    showFields,
	                    showFieldsKey,
	                    newFields,
	                    fv,
	                    formatter,
	                    format,
	                    fieldlen,
	                    j;
	                if (this.currentRegion === undefined) {
	                    return '';
	                }
	                fields = this.getCurrentRegionFields();
	                formatter = options.get('tooltipFormatter');
	                if (formatter) {
	                    return formatter(this, options, fields);
	                }
	                if (options.get('tooltipChartTitle')) {
	                    header += '<div class="jqs jqstitle">' + options.get('tooltipChartTitle') + '</div>\n';
	                }
	                formats = this.options.get('tooltipFormat');
	                if (!formats) {
	                    return '';
	                }
	                if (!$.isArray(formats)) {
	                    formats = [formats];
	                }
	                if (!$.isArray(fields)) {
	                    fields = [fields];
	                }
	                showFields = this.options.get('tooltipFormatFieldlist');
	                showFieldsKey = this.options.get('tooltipFormatFieldlistKey');
	                if (showFields && showFieldsKey) {
	                    // user-selected ordering of fields
	                    newFields = [];
	                    for (i = fields.length; i--;) {
	                        fv = fields[i][showFieldsKey];
	                        if ((j = $.inArray(fv, showFields)) != -1) {
	                            newFields[j] = fields[i];
	                        }
	                    }
	                    fields = newFields;
	                }
	                formatlen = formats.length;
	                fieldlen = fields.length;
	                for (i = 0; i < formatlen; i++) {
	                    format = formats[i];
	                    if (typeof format === 'string') {
	                        format = new SPFormat(format);
	                    }
	                    fclass = format.fclass || 'jqsfield';
	                    for (j = 0; j < fieldlen; j++) {
	                        if (!fields[j].isNull || !options.get('tooltipSkipNull')) {
	                            $.extend(fields[j], {
	                                prefix: options.get('tooltipPrefix'),
	                                suffix: options.get('tooltipSuffix')
	                            });
	                            text = format.render(fields[j], options.get('tooltipValueLookups'), options);
	                            entries.push('<div class="' + fclass + '">' + text + '</div>');
	                        }
	                    }
	                }
	                if (entries.length) {
	                    return header + entries.join('\n');
	                }
	                return '';
	            },

	            getCurrentRegionFields: function getCurrentRegionFields() {},

	            calcHighlightColor: function calcHighlightColor(color, options) {
	                var highlightColor = options.get('highlightColor'),
	                    lighten = options.get('highlightLighten'),
	                    parse,
	                    mult,
	                    rgbnew,
	                    i;
	                if (highlightColor) {
	                    return highlightColor;
	                }
	                if (lighten) {
	                    // extract RGB values
	                    parse = /^#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(color) || /^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i.exec(color);
	                    if (parse) {
	                        rgbnew = [];
	                        mult = color.length === 4 ? 16 : 1;
	                        for (i = 0; i < 3; i++) {
	                            rgbnew[i] = clipval(Math.round(parseInt(parse[i + 1], 16) * mult * lighten), 0, 255);
	                        }
	                        return 'rgb(' + rgbnew.join(',') + ')';
	                    }
	                }
	                return color;
	            }

	        });

	        barHighlightMixin = {
	            changeHighlight: function changeHighlight(highlight) {
	                var currentRegion = this.currentRegion,
	                    target = this.target,
	                    shapeids = this.regionShapes[currentRegion],
	                    newShapes;
	                // will be null if the region value was null
	                if (shapeids) {
	                    newShapes = this.renderRegion(currentRegion, highlight);
	                    if ($.isArray(newShapes) || $.isArray(shapeids)) {
	                        target.replaceWithShapes(shapeids, newShapes);
	                        this.regionShapes[currentRegion] = $.map(newShapes, function (newShape) {
	                            return newShape.id;
	                        });
	                    } else {
	                        target.replaceWithShape(shapeids, newShapes);
	                        this.regionShapes[currentRegion] = newShapes.id;
	                    }
	                }
	            },

	            render: function render() {
	                var values = this.values,
	                    target = this.target,
	                    regionShapes = this.regionShapes,
	                    shapes,
	                    ids,
	                    i,
	                    j;

	                if (!this.cls._super.render.call(this)) {
	                    return;
	                }
	                for (i = values.length; i--;) {
	                    shapes = this.renderRegion(i);
	                    if (shapes) {
	                        if ($.isArray(shapes)) {
	                            ids = [];
	                            for (j = shapes.length; j--;) {
	                                shapes[j].append();
	                                ids.push(shapes[j].id);
	                            }
	                            regionShapes[i] = ids;
	                        } else {
	                            shapes.append();
	                            regionShapes[i] = shapes.id; // store just the shapeid
	                        }
	                    } else {
	                        // null value
	                        regionShapes[i] = null;
	                    }
	                }
	                target.render();
	            }
	        };

	        /**
	         * Line charts
	         */
	        $.fn.sparkline.line = line = createClass($.fn.sparkline._base, {
	            type: 'line',

	            init: function init(el, values, options, width, height) {
	                line._super.init.call(this, el, values, options, width, height);
	                this.vertices = [];
	                this.regionMap = [];
	                this.xvalues = [];
	                this.yvalues = [];
	                this.yminmax = [];
	                this.hightlightSpotId = null;
	                this.lastShapeId = null;
	                this.initTarget();
	            },

	            getRegion: function getRegion(el, x, y) {
	                var i,
	                    regionMap = this.regionMap; // maps regions to value positions
	                for (i = regionMap.length; i--;) {
	                    if (regionMap[i] !== null && x >= regionMap[i][0] && x <= regionMap[i][1]) {
	                        return regionMap[i][2];
	                    }
	                }
	                return undefined;
	            },

	            getCurrentRegionFields: function getCurrentRegionFields() {
	                var currentRegion = this.currentRegion;
	                return {
	                    isNull: this.yvalues[currentRegion] === null,
	                    x: this.xvalues[currentRegion],
	                    y: this.yvalues[currentRegion],
	                    color: this.options.get('lineColor'),
	                    fillColor: this.options.get('fillColor'),
	                    offset: currentRegion
	                };
	            },

	            renderHighlight: function renderHighlight() {
	                var currentRegion = this.currentRegion,
	                    target = this.target,
	                    vertex = this.vertices[currentRegion],
	                    options = this.options,
	                    spotRadius = options.get('spotRadius'),
	                    highlightSpotColor = options.get('highlightSpotColor'),
	                    highlightLineColor = options.get('highlightLineColor'),
	                    highlightSpot,
	                    highlightLine;

	                if (!vertex) {
	                    return;
	                }
	                if (spotRadius && highlightSpotColor) {
	                    highlightSpot = target.drawCircle(vertex[0], vertex[1], spotRadius, undefined, highlightSpotColor);
	                    this.highlightSpotId = highlightSpot.id;
	                    target.insertAfterShape(this.lastShapeId, highlightSpot);
	                }
	                if (highlightLineColor) {
	                    highlightLine = target.drawLine(vertex[0], this.canvasTop, vertex[0], this.canvasTop + this.canvasHeight, highlightLineColor);
	                    this.highlightLineId = highlightLine.id;
	                    target.insertAfterShape(this.lastShapeId, highlightLine);
	                }
	            },

	            removeHighlight: function removeHighlight() {
	                var target = this.target;
	                if (this.highlightSpotId) {
	                    target.removeShapeId(this.highlightSpotId);
	                    this.highlightSpotId = null;
	                }
	                if (this.highlightLineId) {
	                    target.removeShapeId(this.highlightLineId);
	                    this.highlightLineId = null;
	                }
	            },

	            scanValues: function scanValues() {
	                var values = this.values,
	                    valcount = values.length,
	                    xvalues = this.xvalues,
	                    yvalues = this.yvalues,
	                    yminmax = this.yminmax,
	                    i,
	                    val,
	                    isStr,
	                    isArray,
	                    sp;
	                for (i = 0; i < valcount; i++) {
	                    val = values[i];
	                    isStr = typeof values[i] === 'string';
	                    isArray = _typeof(values[i]) === 'object' && values[i] instanceof Array;
	                    sp = isStr && values[i].split(':');
	                    if (isStr && sp.length === 2) {
	                        // x:y
	                        xvalues.push(Number(sp[0]));
	                        yvalues.push(Number(sp[1]));
	                        yminmax.push(Number(sp[1]));
	                    } else if (isArray) {
	                        xvalues.push(val[0]);
	                        yvalues.push(val[1]);
	                        yminmax.push(val[1]);
	                    } else {
	                        xvalues.push(i);
	                        if (values[i] === null || values[i] === 'null') {
	                            yvalues.push(null);
	                        } else {
	                            yvalues.push(Number(val));
	                            yminmax.push(Number(val));
	                        }
	                    }
	                }
	                if (this.options.get('xvalues')) {
	                    xvalues = this.options.get('xvalues');
	                }

	                this.maxy = this.maxyorg = Math.max.apply(Math, yminmax);
	                this.miny = this.minyorg = Math.min.apply(Math, yminmax);

	                this.maxx = Math.max.apply(Math, xvalues);
	                this.minx = Math.min.apply(Math, xvalues);

	                this.xvalues = xvalues;
	                this.yvalues = yvalues;
	                this.yminmax = yminmax;
	            },

	            processRangeOptions: function processRangeOptions() {
	                var options = this.options,
	                    normalRangeMin = options.get('normalRangeMin'),
	                    normalRangeMax = options.get('normalRangeMax');

	                if (normalRangeMin !== undefined) {
	                    if (normalRangeMin < this.miny) {
	                        this.miny = normalRangeMin;
	                    }
	                    if (normalRangeMax > this.maxy) {
	                        this.maxy = normalRangeMax;
	                    }
	                }
	                if (options.get('chartRangeMin') !== undefined && (options.get('chartRangeClip') || options.get('chartRangeMin') < this.miny)) {
	                    this.miny = options.get('chartRangeMin');
	                }
	                if (options.get('chartRangeMax') !== undefined && (options.get('chartRangeClip') || options.get('chartRangeMax') > this.maxy)) {
	                    this.maxy = options.get('chartRangeMax');
	                }
	                if (options.get('chartRangeMinX') !== undefined && (options.get('chartRangeClipX') || options.get('chartRangeMinX') < this.minx)) {
	                    this.minx = options.get('chartRangeMinX');
	                }
	                if (options.get('chartRangeMaxX') !== undefined && (options.get('chartRangeClipX') || options.get('chartRangeMaxX') > this.maxx)) {
	                    this.maxx = options.get('chartRangeMaxX');
	                }
	            },

	            drawNormalRange: function drawNormalRange(canvasLeft, canvasTop, canvasHeight, canvasWidth, rangey) {
	                var normalRangeMin = this.options.get('normalRangeMin'),
	                    normalRangeMax = this.options.get('normalRangeMax'),
	                    ytop = canvasTop + Math.round(canvasHeight - canvasHeight * ((normalRangeMax - this.miny) / rangey)),
	                    height = Math.round(canvasHeight * (normalRangeMax - normalRangeMin) / rangey);
	                this.target.drawRect(canvasLeft, ytop, canvasWidth, height, undefined, this.options.get('normalRangeColor')).append();
	            },

	            render: function render() {
	                var options = this.options,
	                    target = this.target,
	                    canvasWidth = this.canvasWidth,
	                    canvasHeight = this.canvasHeight,
	                    vertices = this.vertices,
	                    spotRadius = options.get('spotRadius'),
	                    regionMap = this.regionMap,
	                    rangex,
	                    rangey,
	                    yvallast,
	                    canvasTop,
	                    canvasLeft,
	                    vertex,
	                    path,
	                    paths,
	                    x,
	                    y,
	                    xnext,
	                    xpos,
	                    xposnext,
	                    last,
	                    next,
	                    yvalcount,
	                    lineShapes,
	                    fillShapes,
	                    plen,
	                    valueSpots,
	                    hlSpotsEnabled,
	                    color,
	                    xvalues,
	                    yvalues,
	                    i;

	                if (!line._super.render.call(this)) {
	                    return;
	                }

	                this.scanValues();
	                this.processRangeOptions();

	                xvalues = this.xvalues;
	                yvalues = this.yvalues;

	                if (!this.yminmax.length || this.yvalues.length < 2) {
	                    // empty or all null valuess
	                    return;
	                }

	                canvasTop = canvasLeft = 0;

	                rangex = this.maxx - this.minx === 0 ? 1 : this.maxx - this.minx;
	                rangey = this.maxy - this.miny === 0 ? 1 : this.maxy - this.miny;
	                yvallast = this.yvalues.length - 1;

	                if (spotRadius && (canvasWidth < spotRadius * 4 || canvasHeight < spotRadius * 4)) {
	                    spotRadius = 0;
	                }
	                if (spotRadius) {
	                    // adjust the canvas size as required so that spots will fit
	                    hlSpotsEnabled = options.get('highlightSpotColor') && !options.get('disableInteraction');
	                    if (hlSpotsEnabled || options.get('minSpotColor') || options.get('spotColor') && yvalues[yvallast] === this.miny) {
	                        canvasHeight -= Math.ceil(spotRadius);
	                    }
	                    if (hlSpotsEnabled || options.get('maxSpotColor') || options.get('spotColor') && yvalues[yvallast] === this.maxy) {
	                        canvasHeight -= Math.ceil(spotRadius);
	                        canvasTop += Math.ceil(spotRadius);
	                    }
	                    if (hlSpotsEnabled || (options.get('minSpotColor') || options.get('maxSpotColor')) && (yvalues[0] === this.miny || yvalues[0] === this.maxy)) {
	                        canvasLeft += Math.ceil(spotRadius);
	                        canvasWidth -= Math.ceil(spotRadius);
	                    }
	                    if (hlSpotsEnabled || options.get('spotColor') || options.get('minSpotColor') || options.get('maxSpotColor') && (yvalues[yvallast] === this.miny || yvalues[yvallast] === this.maxy)) {
	                        canvasWidth -= Math.ceil(spotRadius);
	                    }
	                }

	                canvasHeight--;

	                if (options.get('normalRangeMin') !== undefined && !options.get('drawNormalOnTop')) {
	                    this.drawNormalRange(canvasLeft, canvasTop, canvasHeight, canvasWidth, rangey);
	                }

	                path = [];
	                paths = [path];
	                last = next = null;
	                yvalcount = yvalues.length;
	                for (i = 0; i < yvalcount; i++) {
	                    x = xvalues[i];
	                    xnext = xvalues[i + 1];
	                    y = yvalues[i];
	                    xpos = canvasLeft + Math.round((x - this.minx) * (canvasWidth / rangex));
	                    xposnext = i < yvalcount - 1 ? canvasLeft + Math.round((xnext - this.minx) * (canvasWidth / rangex)) : canvasWidth;
	                    next = xpos + (xposnext - xpos) / 2;
	                    regionMap[i] = [last || 0, next, i];
	                    last = next;
	                    if (y === null) {
	                        if (i) {
	                            if (yvalues[i - 1] !== null) {
	                                path = [];
	                                paths.push(path);
	                            }
	                            vertices.push(null);
	                        }
	                    } else {
	                        if (y < this.miny) {
	                            y = this.miny;
	                        }
	                        if (y > this.maxy) {
	                            y = this.maxy;
	                        }
	                        if (!path.length) {
	                            // previous value was null
	                            path.push([xpos, canvasTop + canvasHeight]);
	                        }
	                        vertex = [xpos, canvasTop + Math.round(canvasHeight - canvasHeight * ((y - this.miny) / rangey))];
	                        path.push(vertex);
	                        vertices.push(vertex);
	                    }
	                }

	                lineShapes = [];
	                fillShapes = [];
	                plen = paths.length;
	                for (i = 0; i < plen; i++) {
	                    path = paths[i];
	                    if (path.length) {
	                        if (options.get('fillColor')) {
	                            path.push([path[path.length - 1][0], canvasTop + canvasHeight]);
	                            fillShapes.push(path.slice(0));
	                            path.pop();
	                        }
	                        // if there's only a single point in this path, then we want to display it
	                        // as a vertical line which means we keep path[0]  as is
	                        if (path.length > 2) {
	                            // else we want the first value
	                            path[0] = [path[0][0], path[1][1]];
	                        }
	                        lineShapes.push(path);
	                    }
	                }

	                // draw the fill first, then optionally the normal range, then the line on top of that
	                plen = fillShapes.length;
	                for (i = 0; i < plen; i++) {
	                    target.drawShape(fillShapes[i], options.get('fillColor'), options.get('fillColor')).append();
	                }

	                if (options.get('normalRangeMin') !== undefined && options.get('drawNormalOnTop')) {
	                    this.drawNormalRange(canvasLeft, canvasTop, canvasHeight, canvasWidth, rangey);
	                }

	                plen = lineShapes.length;
	                for (i = 0; i < plen; i++) {
	                    target.drawShape(lineShapes[i], options.get('lineColor'), undefined, options.get('lineWidth')).append();
	                }

	                if (spotRadius && options.get('valueSpots')) {
	                    valueSpots = options.get('valueSpots');
	                    if (valueSpots.get === undefined) {
	                        valueSpots = new RangeMap(valueSpots);
	                    }
	                    for (i = 0; i < yvalcount; i++) {
	                        color = valueSpots.get(yvalues[i]);
	                        if (color) {
	                            target.drawCircle(canvasLeft + Math.round((xvalues[i] - this.minx) * (canvasWidth / rangex)), canvasTop + Math.round(canvasHeight - canvasHeight * ((yvalues[i] - this.miny) / rangey)), spotRadius, undefined, color).append();
	                        }
	                    }
	                }
	                if (spotRadius && options.get('spotColor') && yvalues[yvallast] !== null) {
	                    target.drawCircle(canvasLeft + Math.round((xvalues[xvalues.length - 1] - this.minx) * (canvasWidth / rangex)), canvasTop + Math.round(canvasHeight - canvasHeight * ((yvalues[yvallast] - this.miny) / rangey)), spotRadius, undefined, options.get('spotColor')).append();
	                }
	                if (this.maxy !== this.minyorg) {
	                    if (spotRadius && options.get('minSpotColor')) {
	                        x = xvalues[$.inArray(this.minyorg, yvalues)];
	                        target.drawCircle(canvasLeft + Math.round((x - this.minx) * (canvasWidth / rangex)), canvasTop + Math.round(canvasHeight - canvasHeight * ((this.minyorg - this.miny) / rangey)), spotRadius, undefined, options.get('minSpotColor')).append();
	                    }
	                    if (spotRadius && options.get('maxSpotColor')) {
	                        x = xvalues[$.inArray(this.maxyorg, yvalues)];
	                        target.drawCircle(canvasLeft + Math.round((x - this.minx) * (canvasWidth / rangex)), canvasTop + Math.round(canvasHeight - canvasHeight * ((this.maxyorg - this.miny) / rangey)), spotRadius, undefined, options.get('maxSpotColor')).append();
	                    }
	                }

	                this.lastShapeId = target.getLastShapeId();
	                this.canvasTop = canvasTop;
	                target.render();
	            }
	        });

	        /**
	         * Bar charts
	         */
	        $.fn.sparkline.bar = bar = createClass($.fn.sparkline._base, barHighlightMixin, {
	            type: 'bar',

	            init: function init(el, values, options, width, height) {
	                var barWidth = parseInt(options.get('barWidth'), 10),
	                    barSpacing = parseInt(options.get('barSpacing'), 10),
	                    chartRangeMin = options.get('chartRangeMin'),
	                    chartRangeMax = options.get('chartRangeMax'),
	                    chartRangeClip = options.get('chartRangeClip'),
	                    stackMin = Infinity,
	                    stackMax = -Infinity,
	                    isStackString,
	                    groupMin,
	                    groupMax,
	                    stackRanges,
	                    numValues,
	                    i,
	                    vlen,
	                    range,
	                    zeroAxis,
	                    xaxisOffset,
	                    min,
	                    max,
	                    clipMin,
	                    clipMax,
	                    stacked,
	                    vlist,
	                    j,
	                    slen,
	                    svals,
	                    val,
	                    yoffset,
	                    yMaxCalc,
	                    canvasHeightEf;
	                bar._super.init.call(this, el, values, options, width, height);

	                // scan values to determine whether to stack bars
	                for (i = 0, vlen = values.length; i < vlen; i++) {
	                    val = values[i];
	                    isStackString = typeof val === 'string' && val.indexOf(':') > -1;
	                    if (isStackString || $.isArray(val)) {
	                        stacked = true;
	                        if (isStackString) {
	                            val = values[i] = normalizeValues(val.split(':'));
	                        }
	                        val = remove(val, null); // min/max will treat null as zero
	                        groupMin = Math.min.apply(Math, val);
	                        groupMax = Math.max.apply(Math, val);
	                        if (groupMin < stackMin) {
	                            stackMin = groupMin;
	                        }
	                        if (groupMax > stackMax) {
	                            stackMax = groupMax;
	                        }
	                    }
	                }

	                this.stacked = stacked;
	                this.regionShapes = {};
	                this.barWidth = barWidth;
	                this.barSpacing = barSpacing;
	                this.totalBarWidth = barWidth + barSpacing;
	                this.width = width = values.length * barWidth + (values.length - 1) * barSpacing;

	                this.initTarget();

	                if (chartRangeClip) {
	                    clipMin = chartRangeMin === undefined ? -Infinity : chartRangeMin;
	                    clipMax = chartRangeMax === undefined ? Infinity : chartRangeMax;
	                }

	                numValues = [];
	                stackRanges = stacked ? [] : numValues;
	                var stackTotals = [];
	                var stackRangesNeg = [];
	                for (i = 0, vlen = values.length; i < vlen; i++) {
	                    if (stacked) {
	                        vlist = values[i];
	                        values[i] = svals = [];
	                        stackTotals[i] = 0;
	                        stackRanges[i] = stackRangesNeg[i] = 0;
	                        for (j = 0, slen = vlist.length; j < slen; j++) {
	                            val = svals[j] = chartRangeClip ? clipval(vlist[j], clipMin, clipMax) : vlist[j];
	                            if (val !== null) {
	                                if (val > 0) {
	                                    stackTotals[i] += val;
	                                }
	                                if (stackMin < 0 && stackMax > 0) {
	                                    if (val < 0) {
	                                        stackRangesNeg[i] += Math.abs(val);
	                                    } else {
	                                        stackRanges[i] += val;
	                                    }
	                                } else {
	                                    stackRanges[i] += Math.abs(val - (val < 0 ? stackMax : stackMin));
	                                }
	                                numValues.push(val);
	                            }
	                        }
	                    } else {
	                        val = chartRangeClip ? clipval(values[i], clipMin, clipMax) : values[i];
	                        val = values[i] = normalizeValue(val);
	                        if (val !== null) {
	                            numValues.push(val);
	                        }
	                    }
	                }
	                this.max = max = Math.max.apply(Math, numValues);
	                this.min = min = Math.min.apply(Math, numValues);
	                this.stackMax = stackMax = stacked ? Math.max.apply(Math, stackTotals) : max;
	                this.stackMin = stackMin = stacked ? Math.min.apply(Math, numValues) : min;

	                if (options.get('chartRangeMin') !== undefined && (options.get('chartRangeClip') || options.get('chartRangeMin') < min)) {
	                    min = options.get('chartRangeMin');
	                }
	                if (options.get('chartRangeMax') !== undefined && (options.get('chartRangeClip') || options.get('chartRangeMax') > max)) {
	                    max = options.get('chartRangeMax');
	                }

	                this.zeroAxis = zeroAxis = options.get('zeroAxis', true);
	                if (min <= 0 && max >= 0 && zeroAxis) {
	                    xaxisOffset = 0;
	                } else if (zeroAxis == false) {
	                    xaxisOffset = min;
	                } else if (min > 0) {
	                    xaxisOffset = min;
	                } else {
	                    xaxisOffset = max;
	                }
	                this.xaxisOffset = xaxisOffset;

	                range = stacked ? Math.max.apply(Math, stackRanges) + Math.max.apply(Math, stackRangesNeg) : max - min;

	                // as we plot zero/min values a single pixel line, we add a pixel to all other
	                // values - Reduce the effective canvas size to suit
	                this.canvasHeightEf = zeroAxis && min < 0 ? this.canvasHeight - 2 : this.canvasHeight - 1;

	                if (min < xaxisOffset) {
	                    yMaxCalc = stacked && max >= 0 ? stackMax : max;
	                    yoffset = (yMaxCalc - xaxisOffset) / range * this.canvasHeight;
	                    if (yoffset !== Math.ceil(yoffset)) {
	                        this.canvasHeightEf -= 2;
	                        yoffset = Math.ceil(yoffset);
	                    }
	                } else {
	                    yoffset = this.canvasHeight;
	                }
	                this.yoffset = yoffset;

	                if ($.isArray(options.get('colorMap'))) {
	                    this.colorMapByIndex = options.get('colorMap');
	                    this.colorMapByValue = null;
	                } else {
	                    this.colorMapByIndex = null;
	                    this.colorMapByValue = options.get('colorMap');
	                    if (this.colorMapByValue && this.colorMapByValue.get === undefined) {
	                        this.colorMapByValue = new RangeMap(this.colorMapByValue);
	                    }
	                }

	                this.range = range;
	            },

	            getRegion: function getRegion(el, x, y) {
	                var result = Math.floor(x / this.totalBarWidth);
	                return result < 0 || result >= this.values.length ? undefined : result;
	            },

	            getCurrentRegionFields: function getCurrentRegionFields() {
	                var currentRegion = this.currentRegion,
	                    values = ensureArray(this.values[currentRegion]),
	                    result = [],
	                    value,
	                    i;
	                for (i = values.length; i--;) {
	                    value = values[i];
	                    result.push({
	                        isNull: value === null,
	                        value: value,
	                        color: this.calcColor(i, value, currentRegion),
	                        offset: currentRegion
	                    });
	                }
	                return result;
	            },

	            calcColor: function calcColor(stacknum, value, valuenum) {
	                var colorMapByIndex = this.colorMapByIndex,
	                    colorMapByValue = this.colorMapByValue,
	                    options = this.options,
	                    color,
	                    newColor;
	                if (this.stacked) {
	                    color = options.get('stackedBarColor');
	                } else {
	                    color = value < 0 ? options.get('negBarColor') : options.get('barColor');
	                }
	                if (value === 0 && options.get('zeroColor') !== undefined) {
	                    color = options.get('zeroColor');
	                }
	                if (colorMapByValue && (newColor = colorMapByValue.get(value))) {
	                    color = newColor;
	                } else if (colorMapByIndex && colorMapByIndex.length > valuenum) {
	                    color = colorMapByIndex[valuenum];
	                }
	                return $.isArray(color) ? color[stacknum % color.length] : color;
	            },

	            /**
	             * Render bar(s) for a region
	             */
	            renderRegion: function renderRegion(valuenum, highlight) {
	                var vals = this.values[valuenum],
	                    options = this.options,
	                    xaxisOffset = this.xaxisOffset,
	                    result = [],
	                    range = this.range,
	                    stacked = this.stacked,
	                    target = this.target,
	                    x = valuenum * this.totalBarWidth,
	                    canvasHeightEf = this.canvasHeightEf,
	                    yoffset = this.yoffset,
	                    y,
	                    height,
	                    color,
	                    isNull,
	                    yoffsetNeg,
	                    i,
	                    valcount,
	                    val,
	                    minPlotted,
	                    allMin;

	                vals = $.isArray(vals) ? vals : [vals];
	                valcount = vals.length;
	                val = vals[0];
	                isNull = all(null, vals);
	                allMin = all(xaxisOffset, vals, true);

	                if (isNull) {
	                    if (options.get('nullColor')) {
	                        color = highlight ? options.get('nullColor') : this.calcHighlightColor(options.get('nullColor'), options);
	                        y = yoffset > 0 ? yoffset - 1 : yoffset;
	                        return target.drawRect(x, y, this.barWidth - 1, 0, color, color);
	                    } else {
	                        return undefined;
	                    }
	                }
	                yoffsetNeg = yoffset;
	                for (i = 0; i < valcount; i++) {
	                    val = vals[i];

	                    if (stacked && val === xaxisOffset) {
	                        if (!allMin || minPlotted) {
	                            continue;
	                        }
	                        minPlotted = true;
	                    }

	                    if (range > 0) {
	                        height = Math.floor(canvasHeightEf * (Math.abs(val - xaxisOffset) / range)) + 1;
	                    } else {
	                        height = 1;
	                    }
	                    if (val < xaxisOffset || val === xaxisOffset && yoffset === 0) {
	                        y = yoffsetNeg;
	                        yoffsetNeg += height;
	                    } else {
	                        y = yoffset - height;
	                        yoffset -= height;
	                    }
	                    color = this.calcColor(i, val, valuenum);
	                    if (highlight) {
	                        color = this.calcHighlightColor(color, options);
	                    }
	                    result.push(target.drawRect(x, y, this.barWidth - 1, height - 1, color, color));
	                }
	                if (result.length === 1) {
	                    return result[0];
	                }
	                return result;
	            }
	        });

	        /**
	         * Tristate charts
	         */
	        $.fn.sparkline.tristate = tristate = createClass($.fn.sparkline._base, barHighlightMixin, {
	            type: 'tristate',

	            init: function init(el, values, options, width, height) {
	                var barWidth = parseInt(options.get('barWidth'), 10),
	                    barSpacing = parseInt(options.get('barSpacing'), 10);
	                tristate._super.init.call(this, el, values, options, width, height);

	                this.regionShapes = {};
	                this.barWidth = barWidth;
	                this.barSpacing = barSpacing;
	                this.totalBarWidth = barWidth + barSpacing;
	                this.values = $.map(values, Number);
	                this.width = width = values.length * barWidth + (values.length - 1) * barSpacing;

	                if ($.isArray(options.get('colorMap'))) {
	                    this.colorMapByIndex = options.get('colorMap');
	                    this.colorMapByValue = null;
	                } else {
	                    this.colorMapByIndex = null;
	                    this.colorMapByValue = options.get('colorMap');
	                    if (this.colorMapByValue && this.colorMapByValue.get === undefined) {
	                        this.colorMapByValue = new RangeMap(this.colorMapByValue);
	                    }
	                }
	                this.initTarget();
	            },

	            getRegion: function getRegion(el, x, y) {
	                return Math.floor(x / this.totalBarWidth);
	            },

	            getCurrentRegionFields: function getCurrentRegionFields() {
	                var currentRegion = this.currentRegion;
	                return {
	                    isNull: this.values[currentRegion] === undefined,
	                    value: this.values[currentRegion],
	                    color: this.calcColor(this.values[currentRegion], currentRegion),
	                    offset: currentRegion
	                };
	            },

	            calcColor: function calcColor(value, valuenum) {
	                var values = this.values,
	                    options = this.options,
	                    colorMapByIndex = this.colorMapByIndex,
	                    colorMapByValue = this.colorMapByValue,
	                    color,
	                    newColor;

	                if (colorMapByValue && (newColor = colorMapByValue.get(value))) {
	                    color = newColor;
	                } else if (colorMapByIndex && colorMapByIndex.length > valuenum) {
	                    color = colorMapByIndex[valuenum];
	                } else if (values[valuenum] < 0) {
	                    color = options.get('negBarColor');
	                } else if (values[valuenum] > 0) {
	                    color = options.get('posBarColor');
	                } else {
	                    color = options.get('zeroBarColor');
	                }
	                return color;
	            },

	            renderRegion: function renderRegion(valuenum, highlight) {
	                var values = this.values,
	                    options = this.options,
	                    target = this.target,
	                    canvasHeight,
	                    height,
	                    halfHeight,
	                    x,
	                    y,
	                    color;

	                canvasHeight = target.pixelHeight;
	                halfHeight = Math.round(canvasHeight / 2);

	                x = valuenum * this.totalBarWidth;
	                if (values[valuenum] < 0) {
	                    y = halfHeight;
	                    height = halfHeight - 1;
	                } else if (values[valuenum] > 0) {
	                    y = 0;
	                    height = halfHeight - 1;
	                } else {
	                    y = halfHeight - 1;
	                    height = 2;
	                }
	                color = this.calcColor(values[valuenum], valuenum);
	                if (color === null) {
	                    return;
	                }
	                if (highlight) {
	                    color = this.calcHighlightColor(color, options);
	                }
	                return target.drawRect(x, y, this.barWidth - 1, height - 1, color, color);
	            }
	        });

	        /**
	         * Discrete charts
	         */
	        $.fn.sparkline.discrete = discrete = createClass($.fn.sparkline._base, barHighlightMixin, {
	            type: 'discrete',

	            init: function init(el, values, options, width, height) {
	                discrete._super.init.call(this, el, values, options, width, height);

	                this.regionShapes = {};
	                this.values = values = $.map(values, Number);
	                this.min = Math.min.apply(Math, values);
	                this.max = Math.max.apply(Math, values);
	                this.range = this.max - this.min;
	                this.width = width = options.get('width') === 'auto' ? values.length * 2 : this.width;
	                this.interval = Math.floor(width / values.length);
	                this.itemWidth = width / values.length;
	                if (options.get('chartRangeMin') !== undefined && (options.get('chartRangeClip') || options.get('chartRangeMin') < this.min)) {
	                    this.min = options.get('chartRangeMin');
	                }
	                if (options.get('chartRangeMax') !== undefined && (options.get('chartRangeClip') || options.get('chartRangeMax') > this.max)) {
	                    this.max = options.get('chartRangeMax');
	                }
	                this.initTarget();
	                if (this.target) {
	                    this.lineHeight = options.get('lineHeight') === 'auto' ? Math.round(this.canvasHeight * 0.3) : options.get('lineHeight');
	                }
	            },

	            getRegion: function getRegion(el, x, y) {
	                return Math.floor(x / this.itemWidth);
	            },

	            getCurrentRegionFields: function getCurrentRegionFields() {
	                var currentRegion = this.currentRegion;
	                return {
	                    isNull: this.values[currentRegion] === undefined,
	                    value: this.values[currentRegion],
	                    offset: currentRegion
	                };
	            },

	            renderRegion: function renderRegion(valuenum, highlight) {
	                var values = this.values,
	                    options = this.options,
	                    min = this.min,
	                    max = this.max,
	                    range = this.range,
	                    interval = this.interval,
	                    target = this.target,
	                    canvasHeight = this.canvasHeight,
	                    lineHeight = this.lineHeight,
	                    pheight = canvasHeight - lineHeight,
	                    ytop,
	                    val,
	                    color,
	                    x;

	                val = clipval(values[valuenum], min, max);
	                x = valuenum * interval;
	                ytop = Math.round(pheight - pheight * ((val - min) / range));
	                color = options.get('thresholdColor') && val < options.get('thresholdValue') ? options.get('thresholdColor') : options.get('lineColor');
	                if (highlight) {
	                    color = this.calcHighlightColor(color, options);
	                }
	                return target.drawLine(x, ytop, x, ytop + lineHeight, color);
	            }
	        });

	        /**
	         * Bullet charts
	         */
	        $.fn.sparkline.bullet = bullet = createClass($.fn.sparkline._base, {
	            type: 'bullet',

	            init: function init(el, values, options, width, height) {
	                var min, max, vals;
	                bullet._super.init.call(this, el, values, options, width, height);

	                // values: target, performance, range1, range2, range3
	                this.values = values = normalizeValues(values);
	                // target or performance could be null
	                vals = values.slice();
	                vals[0] = vals[0] === null ? vals[2] : vals[0];
	                vals[1] = values[1] === null ? vals[2] : vals[1];
	                min = Math.min.apply(Math, values);
	                max = Math.max.apply(Math, values);
	                if (options.get('base') === undefined) {
	                    min = min < 0 ? min : 0;
	                } else {
	                    min = options.get('base');
	                }
	                this.min = min;
	                this.max = max;
	                this.range = max - min;
	                this.shapes = {};
	                this.valueShapes = {};
	                this.regiondata = {};
	                this.width = width = options.get('width') === 'auto' ? '4.0em' : width;
	                this.target = this.$el.simpledraw(width, height, options.get('composite'));
	                if (!values.length) {
	                    this.disabled = true;
	                }
	                this.initTarget();
	            },

	            getRegion: function getRegion(el, x, y) {
	                var shapeid = this.target.getShapeAt(el, x, y);
	                return shapeid !== undefined && this.shapes[shapeid] !== undefined ? this.shapes[shapeid] : undefined;
	            },

	            getCurrentRegionFields: function getCurrentRegionFields() {
	                var currentRegion = this.currentRegion;
	                return {
	                    fieldkey: currentRegion.substr(0, 1),
	                    value: this.values[currentRegion.substr(1)],
	                    region: currentRegion
	                };
	            },

	            changeHighlight: function changeHighlight(highlight) {
	                var currentRegion = this.currentRegion,
	                    shapeid = this.valueShapes[currentRegion],
	                    shape;
	                delete this.shapes[shapeid];
	                switch (currentRegion.substr(0, 1)) {
	                    case 'r':
	                        shape = this.renderRange(currentRegion.substr(1), highlight);
	                        break;
	                    case 'p':
	                        shape = this.renderPerformance(highlight);
	                        break;
	                    case 't':
	                        shape = this.renderTarget(highlight);
	                        break;
	                }
	                this.valueShapes[currentRegion] = shape.id;
	                this.shapes[shape.id] = currentRegion;
	                this.target.replaceWithShape(shapeid, shape);
	            },

	            renderRange: function renderRange(rn, highlight) {
	                var rangeval = this.values[rn],
	                    rangewidth = Math.round(this.canvasWidth * ((rangeval - this.min) / this.range)),
	                    color = this.options.get('rangeColors')[rn - 2];
	                if (highlight) {
	                    color = this.calcHighlightColor(color, this.options);
	                }
	                return this.target.drawRect(0, 0, rangewidth - 1, this.canvasHeight - 1, color, color);
	            },

	            renderPerformance: function renderPerformance(highlight) {
	                var perfval = this.values[1],
	                    perfwidth = Math.round(this.canvasWidth * ((perfval - this.min) / this.range)),
	                    color = this.options.get('performanceColor');
	                if (highlight) {
	                    color = this.calcHighlightColor(color, this.options);
	                }
	                return this.target.drawRect(0, Math.round(this.canvasHeight * 0.3), perfwidth - 1, Math.round(this.canvasHeight * 0.4) - 1, color, color);
	            },

	            renderTarget: function renderTarget(highlight) {
	                var targetval = this.values[0],
	                    x = Math.round(this.canvasWidth * ((targetval - this.min) / this.range) - this.options.get('targetWidth') / 2),
	                    targettop = Math.round(this.canvasHeight * 0.10),
	                    targetheight = this.canvasHeight - targettop * 2,
	                    color = this.options.get('targetColor');
	                if (highlight) {
	                    color = this.calcHighlightColor(color, this.options);
	                }
	                return this.target.drawRect(x, targettop, this.options.get('targetWidth') - 1, targetheight - 1, color, color);
	            },

	            render: function render() {
	                var vlen = this.values.length,
	                    target = this.target,
	                    i,
	                    shape;
	                if (!bullet._super.render.call(this)) {
	                    return;
	                }
	                for (i = 2; i < vlen; i++) {
	                    shape = this.renderRange(i).append();
	                    this.shapes[shape.id] = 'r' + i;
	                    this.valueShapes['r' + i] = shape.id;
	                }
	                if (this.values[1] !== null) {
	                    shape = this.renderPerformance().append();
	                    this.shapes[shape.id] = 'p1';
	                    this.valueShapes.p1 = shape.id;
	                }
	                if (this.values[0] !== null) {
	                    shape = this.renderTarget().append();
	                    this.shapes[shape.id] = 't0';
	                    this.valueShapes.t0 = shape.id;
	                }
	                target.render();
	            }
	        });

	        /**
	         * Pie charts
	         */
	        $.fn.sparkline.pie = pie = createClass($.fn.sparkline._base, {
	            type: 'pie',

	            init: function init(el, values, options, width, height) {
	                var total = 0,
	                    i;

	                pie._super.init.call(this, el, values, options, width, height);

	                this.shapes = {}; // map shape ids to value offsets
	                this.valueShapes = {}; // maps value offsets to shape ids
	                this.values = values = $.map(values, Number);

	                if (options.get('width') === 'auto') {
	                    this.width = this.height;
	                }

	                if (values.length > 0) {
	                    for (i = values.length; i--;) {
	                        total += values[i];
	                    }
	                }
	                this.total = total;
	                this.initTarget();
	                this.radius = Math.floor(Math.min(this.canvasWidth, this.canvasHeight) / 2);
	            },

	            getRegion: function getRegion(el, x, y) {
	                var shapeid = this.target.getShapeAt(el, x, y);
	                return shapeid !== undefined && this.shapes[shapeid] !== undefined ? this.shapes[shapeid] : undefined;
	            },

	            getCurrentRegionFields: function getCurrentRegionFields() {
	                var currentRegion = this.currentRegion;
	                return {
	                    isNull: this.values[currentRegion] === undefined,
	                    value: this.values[currentRegion],
	                    percent: this.values[currentRegion] / this.total * 100,
	                    color: this.options.get('sliceColors')[currentRegion % this.options.get('sliceColors').length],
	                    offset: currentRegion
	                };
	            },

	            changeHighlight: function changeHighlight(highlight) {
	                var currentRegion = this.currentRegion,
	                    newslice = this.renderSlice(currentRegion, highlight),
	                    shapeid = this.valueShapes[currentRegion];
	                delete this.shapes[shapeid];
	                this.target.replaceWithShape(shapeid, newslice);
	                this.valueShapes[currentRegion] = newslice.id;
	                this.shapes[newslice.id] = currentRegion;
	            },

	            renderSlice: function renderSlice(valuenum, highlight) {
	                var target = this.target,
	                    options = this.options,
	                    radius = this.radius,
	                    borderWidth = options.get('borderWidth'),
	                    offset = options.get('offset'),
	                    circle = 2 * Math.PI,
	                    values = this.values,
	                    total = this.total,
	                    next = offset ? 2 * Math.PI * (offset / 360) : 0,
	                    start,
	                    end,
	                    i,
	                    vlen,
	                    color;

	                vlen = values.length;
	                for (i = 0; i < vlen; i++) {
	                    start = next;
	                    end = next;
	                    if (total > 0) {
	                        // avoid divide by zero
	                        end = next + circle * (values[i] / total);
	                    }
	                    if (valuenum === i) {
	                        color = options.get('sliceColors')[i % options.get('sliceColors').length];
	                        if (highlight) {
	                            color = this.calcHighlightColor(color, options);
	                        }

	                        return target.drawPieSlice(radius, radius, radius - borderWidth, start, end, undefined, color);
	                    }
	                    next = end;
	                }
	            },

	            render: function render() {
	                var target = this.target,
	                    values = this.values,
	                    options = this.options,
	                    radius = this.radius,
	                    borderWidth = options.get('borderWidth'),
	                    shape,
	                    i;

	                if (!pie._super.render.call(this)) {
	                    return;
	                }
	                if (borderWidth) {
	                    target.drawCircle(radius, radius, Math.floor(radius - borderWidth / 2), options.get('borderColor'), undefined, borderWidth).append();
	                }
	                for (i = values.length; i--;) {
	                    if (values[i]) {
	                        // don't render zero values
	                        shape = this.renderSlice(i).append();
	                        this.valueShapes[i] = shape.id; // store just the shapeid
	                        this.shapes[shape.id] = i;
	                    }
	                }
	                target.render();
	            }
	        });

	        /**
	         * Box plots
	         */
	        $.fn.sparkline.box = box = createClass($.fn.sparkline._base, {
	            type: 'box',

	            init: function init(el, values, options, width, height) {
	                box._super.init.call(this, el, values, options, width, height);
	                this.values = $.map(values, Number);
	                this.width = options.get('width') === 'auto' ? '4.0em' : width;
	                this.initTarget();
	                if (!this.values.length) {
	                    this.disabled = 1;
	                }
	            },

	            /**
	             * Simulate a single region
	             */
	            getRegion: function getRegion() {
	                return 1;
	            },

	            getCurrentRegionFields: function getCurrentRegionFields() {
	                var result = [{ field: 'lq', value: this.quartiles[0] }, { field: 'med', value: this.quartiles[1] }, { field: 'uq', value: this.quartiles[2] }];
	                if (this.loutlier !== undefined) {
	                    result.push({ field: 'lo', value: this.loutlier });
	                }
	                if (this.routlier !== undefined) {
	                    result.push({ field: 'ro', value: this.routlier });
	                }
	                if (this.lwhisker !== undefined) {
	                    result.push({ field: 'lw', value: this.lwhisker });
	                }
	                if (this.rwhisker !== undefined) {
	                    result.push({ field: 'rw', value: this.rwhisker });
	                }
	                return result;
	            },

	            render: function render() {
	                var target = this.target,
	                    values = this.values,
	                    vlen = values.length,
	                    options = this.options,
	                    canvasWidth = this.canvasWidth,
	                    canvasHeight = this.canvasHeight,
	                    minValue = options.get('chartRangeMin') === undefined ? Math.min.apply(Math, values) : options.get('chartRangeMin'),
	                    maxValue = options.get('chartRangeMax') === undefined ? Math.max.apply(Math, values) : options.get('chartRangeMax'),
	                    canvasLeft = 0,
	                    lwhisker,
	                    loutlier,
	                    iqr,
	                    q1,
	                    q2,
	                    q3,
	                    rwhisker,
	                    routlier,
	                    i,
	                    size,
	                    unitSize;

	                if (!box._super.render.call(this)) {
	                    return;
	                }

	                if (options.get('raw')) {
	                    if (options.get('showOutliers') && values.length > 5) {
	                        loutlier = values[0];
	                        lwhisker = values[1];
	                        q1 = values[2];
	                        q2 = values[3];
	                        q3 = values[4];
	                        rwhisker = values[5];
	                        routlier = values[6];
	                    } else {
	                        lwhisker = values[0];
	                        q1 = values[1];
	                        q2 = values[2];
	                        q3 = values[3];
	                        rwhisker = values[4];
	                    }
	                } else {
	                    values.sort(function (a, b) {
	                        return a - b;
	                    });
	                    q1 = quartile(values, 1);
	                    q2 = quartile(values, 2);
	                    q3 = quartile(values, 3);
	                    iqr = q3 - q1;
	                    if (options.get('showOutliers')) {
	                        lwhisker = rwhisker = undefined;
	                        for (i = 0; i < vlen; i++) {
	                            if (lwhisker === undefined && values[i] > q1 - iqr * options.get('outlierIQR')) {
	                                lwhisker = values[i];
	                            }
	                            if (values[i] < q3 + iqr * options.get('outlierIQR')) {
	                                rwhisker = values[i];
	                            }
	                        }
	                        loutlier = values[0];
	                        routlier = values[vlen - 1];
	                    } else {
	                        lwhisker = values[0];
	                        rwhisker = values[vlen - 1];
	                    }
	                }
	                this.quartiles = [q1, q2, q3];
	                this.lwhisker = lwhisker;
	                this.rwhisker = rwhisker;
	                this.loutlier = loutlier;
	                this.routlier = routlier;

	                unitSize = canvasWidth / (maxValue - minValue + 1);
	                if (options.get('showOutliers')) {
	                    canvasLeft = Math.ceil(options.get('spotRadius'));
	                    canvasWidth -= 2 * Math.ceil(options.get('spotRadius'));
	                    unitSize = canvasWidth / (maxValue - minValue + 1);
	                    if (loutlier < lwhisker) {
	                        target.drawCircle((loutlier - minValue) * unitSize + canvasLeft, canvasHeight / 2, options.get('spotRadius'), options.get('outlierLineColor'), options.get('outlierFillColor')).append();
	                    }
	                    if (routlier > rwhisker) {
	                        target.drawCircle((routlier - minValue) * unitSize + canvasLeft, canvasHeight / 2, options.get('spotRadius'), options.get('outlierLineColor'), options.get('outlierFillColor')).append();
	                    }
	                }

	                // box
	                target.drawRect(Math.round((q1 - minValue) * unitSize + canvasLeft), Math.round(canvasHeight * 0.1), Math.round((q3 - q1) * unitSize), Math.round(canvasHeight * 0.8), options.get('boxLineColor'), options.get('boxFillColor')).append();
	                // left whisker
	                target.drawLine(Math.round((lwhisker - minValue) * unitSize + canvasLeft), Math.round(canvasHeight / 2), Math.round((q1 - minValue) * unitSize + canvasLeft), Math.round(canvasHeight / 2), options.get('lineColor')).append();
	                target.drawLine(Math.round((lwhisker - minValue) * unitSize + canvasLeft), Math.round(canvasHeight / 4), Math.round((lwhisker - minValue) * unitSize + canvasLeft), Math.round(canvasHeight - canvasHeight / 4), options.get('whiskerColor')).append();
	                // right whisker
	                target.drawLine(Math.round((rwhisker - minValue) * unitSize + canvasLeft), Math.round(canvasHeight / 2), Math.round((q3 - minValue) * unitSize + canvasLeft), Math.round(canvasHeight / 2), options.get('lineColor')).append();
	                target.drawLine(Math.round((rwhisker - minValue) * unitSize + canvasLeft), Math.round(canvasHeight / 4), Math.round((rwhisker - minValue) * unitSize + canvasLeft), Math.round(canvasHeight - canvasHeight / 4), options.get('whiskerColor')).append();
	                // median line
	                target.drawLine(Math.round((q2 - minValue) * unitSize + canvasLeft), Math.round(canvasHeight * 0.1), Math.round((q2 - minValue) * unitSize + canvasLeft), Math.round(canvasHeight * 0.9), options.get('medianColor')).append();
	                if (options.get('target')) {
	                    size = Math.ceil(options.get('spotRadius'));
	                    target.drawLine(Math.round((options.get('target') - minValue) * unitSize + canvasLeft), Math.round(canvasHeight / 2 - size), Math.round((options.get('target') - minValue) * unitSize + canvasLeft), Math.round(canvasHeight / 2 + size), options.get('targetColor')).append();
	                    target.drawLine(Math.round((options.get('target') - minValue) * unitSize + canvasLeft - size), Math.round(canvasHeight / 2), Math.round((options.get('target') - minValue) * unitSize + canvasLeft + size), Math.round(canvasHeight / 2), options.get('targetColor')).append();
	                }
	                target.render();
	            }
	        });

	        // Setup a very simple "virtual canvas" to make drawing the few shapes we need easier
	        // This is accessible as $(foo).simpledraw()

	        VShape = createClass({
	            init: function init(target, id, type, args) {
	                this.target = target;
	                this.id = id;
	                this.type = type;
	                this.args = args;
	            },
	            append: function append() {
	                this.target.appendShape(this);
	                return this;
	            }
	        });

	        VCanvas_base = createClass({
	            _pxregex: /(\d+)(px)?\s*$/i,

	            init: function init(width, height, target) {
	                if (!width) {
	                    return;
	                }
	                this.width = width;
	                this.height = height;
	                this.target = target;
	                this.lastShapeId = null;
	                if (target[0]) {
	                    target = target[0];
	                }
	                $.data(target, '_jqs_vcanvas', this);
	            },

	            drawLine: function drawLine(x1, y1, x2, y2, lineColor, lineWidth) {
	                return this.drawShape([[x1, y1], [x2, y2]], lineColor, lineWidth);
	            },

	            drawShape: function drawShape(path, lineColor, fillColor, lineWidth) {
	                return this._genShape('Shape', [path, lineColor, fillColor, lineWidth]);
	            },

	            drawCircle: function drawCircle(x, y, radius, lineColor, fillColor, lineWidth) {
	                return this._genShape('Circle', [x, y, radius, lineColor, fillColor, lineWidth]);
	            },

	            drawPieSlice: function drawPieSlice(x, y, radius, startAngle, endAngle, lineColor, fillColor) {
	                return this._genShape('PieSlice', [x, y, radius, startAngle, endAngle, lineColor, fillColor]);
	            },

	            drawRect: function drawRect(x, y, width, height, lineColor, fillColor) {
	                return this._genShape('Rect', [x, y, width, height, lineColor, fillColor]);
	            },

	            getElement: function getElement() {
	                return this.canvas;
	            },

	            /**
	             * Return the most recently inserted shape id
	             */
	            getLastShapeId: function getLastShapeId() {
	                return this.lastShapeId;
	            },

	            /**
	             * Clear and reset the canvas
	             */
	            reset: function reset() {
	                window.alert('reset not implemented');
	            },

	            _insert: function _insert(el, target) {
	                $(target).html(el);
	            },

	            /**
	             * Calculate the pixel dimensions of the canvas
	             */
	            _calculatePixelDims: function _calculatePixelDims(width, height, canvas) {
	                // XXX This should probably be a configurable option
	                var match;
	                match = this._pxregex.exec(height);
	                if (match) {
	                    this.pixelHeight = match[1];
	                } else {
	                    this.pixelHeight = $(canvas).height();
	                }
	                match = this._pxregex.exec(width);
	                if (match) {
	                    this.pixelWidth = match[1];
	                } else {
	                    this.pixelWidth = $(canvas).width();
	                }
	            },

	            /**
	             * Generate a shape object and id for later rendering
	             */
	            _genShape: function _genShape(shapetype, shapeargs) {
	                var id = shapeCount++;
	                shapeargs.unshift(id);
	                return new VShape(this, id, shapetype, shapeargs);
	            },

	            /**
	             * Add a shape to the end of the render queue
	             */
	            appendShape: function appendShape(shape) {
	                window.alert('appendShape not implemented');
	            },

	            /**
	             * Replace one shape with another
	             */
	            replaceWithShape: function replaceWithShape(shapeid, shape) {
	                window.alert('replaceWithShape not implemented');
	            },

	            /**
	             * Insert one shape after another in the render queue
	             */
	            insertAfterShape: function insertAfterShape(shapeid, shape) {
	                window.alert('insertAfterShape not implemented');
	            },

	            /**
	             * Remove a shape from the queue
	             */
	            removeShapeId: function removeShapeId(shapeid) {
	                window.alert('removeShapeId not implemented');
	            },

	            /**
	             * Find a shape at the specified x/y co-ordinates
	             */
	            getShapeAt: function getShapeAt(el, x, y) {
	                window.alert('getShapeAt not implemented');
	            },

	            /**
	             * Render all queued shapes onto the canvas
	             */
	            render: function render() {
	                window.alert('render not implemented');
	            }
	        });

	        VCanvas_canvas = createClass(VCanvas_base, {
	            init: function init(width, height, target, interact) {
	                VCanvas_canvas._super.init.call(this, width, height, target);
	                this.canvas = document.createElement('canvas');
	                if (target[0]) {
	                    target = target[0];
	                }
	                this.context = this.canvas.getContext('2d');
	                var devicePixelRatio = window.devicePixelRatio || 1,
	                    backingStoreRatio = this.context.webkitBackingStorePixelRatio || this.context.mozBackingStorePixelRatio || this.context.msBackingStorePixelRatio || this.context.oBackingStorePixelRatio || this.context.backingStorePixelRatio || 1,
	                    ratio = devicePixelRatio / backingStoreRatio;
	                $.data(target, '_jqs_vcanvas', this);
	                $(this.canvas).css({ display: 'inline-block', width: width, height: height, verticalAlign: 'top' });
	                this._insert(this.canvas, target);
	                this._calculatePixelDims(width, height, this.canvas);
	                this.canvas.width = this.pixelWidth * ratio;
	                this.canvas.height = this.pixelHeight * ratio;
	                this.context.scale(ratio, ratio);
	                this.interact = interact;
	                this.shapes = {};
	                this.shapeseq = [];
	                this.currentTargetShapeId = undefined;
	                $(this.canvas).css({ width: this.pixelWidth, height: this.pixelHeight });
	            },

	            _getContext: function _getContext(lineColor, fillColor, lineWidth) {
	                var context = this.canvas.getContext('2d');
	                if (lineColor !== undefined) {
	                    context.strokeStyle = lineColor;
	                }
	                context.lineWidth = lineWidth === undefined ? 1 : lineWidth;
	                if (fillColor !== undefined) {
	                    context.fillStyle = fillColor;
	                }
	                return context;
	            },

	            reset: function reset() {
	                var context = this._getContext();
	                context.clearRect(0, 0, this.pixelWidth, this.pixelHeight);
	                this.shapes = {};
	                this.shapeseq = [];
	                this.currentTargetShapeId = undefined;
	            },

	            _drawShape: function _drawShape(shapeid, path, lineColor, fillColor, lineWidth) {
	                var context = this._getContext(lineColor, fillColor, lineWidth),
	                    i,
	                    plen;
	                context.beginPath();
	                context.moveTo(path[0][0] + 0.5, path[0][1] + 0.5);
	                for (i = 1, plen = path.length; i < plen; i++) {
	                    context.lineTo(path[i][0] + 0.5, path[i][1] + 0.5); // the 0.5 offset gives us crisp pixel-width lines
	                }
	                if (lineColor !== undefined) {
	                    context.stroke();
	                }
	                if (fillColor !== undefined) {
	                    context.fill();
	                }
	                if (this.targetX !== undefined && this.targetY !== undefined && context.isPointInPath(this.targetX, this.targetY)) {
	                    this.currentTargetShapeId = shapeid;
	                }
	            },

	            _drawCircle: function _drawCircle(shapeid, x, y, radius, lineColor, fillColor, lineWidth) {
	                var context = this._getContext(lineColor, fillColor, lineWidth);
	                context.beginPath();
	                context.arc(x, y, radius, 0, 2 * Math.PI, false);
	                if (this.targetX !== undefined && this.targetY !== undefined && context.isPointInPath(this.targetX, this.targetY)) {
	                    this.currentTargetShapeId = shapeid;
	                }
	                if (lineColor !== undefined) {
	                    context.stroke();
	                }
	                if (fillColor !== undefined) {
	                    context.fill();
	                }
	            },

	            _drawPieSlice: function _drawPieSlice(shapeid, x, y, radius, startAngle, endAngle, lineColor, fillColor) {
	                var context = this._getContext(lineColor, fillColor);
	                context.beginPath();
	                context.moveTo(x, y);
	                context.arc(x, y, radius, startAngle, endAngle, false);
	                context.lineTo(x, y);
	                context.closePath();
	                if (lineColor !== undefined) {
	                    context.stroke();
	                }
	                if (fillColor) {
	                    context.fill();
	                }
	                if (this.targetX !== undefined && this.targetY !== undefined && context.isPointInPath(this.targetX, this.targetY)) {
	                    this.currentTargetShapeId = shapeid;
	                }
	            },

	            _drawRect: function _drawRect(shapeid, x, y, width, height, lineColor, fillColor) {
	                return this._drawShape(shapeid, [[x, y], [x + width, y], [x + width, y + height], [x, y + height], [x, y]], lineColor, fillColor);
	            },

	            appendShape: function appendShape(shape) {
	                this.shapes[shape.id] = shape;
	                this.shapeseq.push(shape.id);
	                this.lastShapeId = shape.id;
	                return shape.id;
	            },

	            replaceWithShape: function replaceWithShape(shapeid, shape) {
	                var shapeseq = this.shapeseq,
	                    i;
	                this.shapes[shape.id] = shape;
	                for (i = shapeseq.length; i--;) {
	                    if (shapeseq[i] == shapeid) {
	                        shapeseq[i] = shape.id;
	                    }
	                }
	                delete this.shapes[shapeid];
	            },

	            replaceWithShapes: function replaceWithShapes(shapeids, shapes) {
	                var shapeseq = this.shapeseq,
	                    shapemap = {},
	                    sid,
	                    i,
	                    first;

	                for (i = shapeids.length; i--;) {
	                    shapemap[shapeids[i]] = true;
	                }
	                for (i = shapeseq.length; i--;) {
	                    sid = shapeseq[i];
	                    if (shapemap[sid]) {
	                        shapeseq.splice(i, 1);
	                        delete this.shapes[sid];
	                        first = i;
	                    }
	                }
	                for (i = shapes.length; i--;) {
	                    shapeseq.splice(first, 0, shapes[i].id);
	                    this.shapes[shapes[i].id] = shapes[i];
	                }
	            },

	            insertAfterShape: function insertAfterShape(shapeid, shape) {
	                var shapeseq = this.shapeseq,
	                    i;
	                for (i = shapeseq.length; i--;) {
	                    if (shapeseq[i] === shapeid) {
	                        shapeseq.splice(i + 1, 0, shape.id);
	                        this.shapes[shape.id] = shape;
	                        return;
	                    }
	                }
	            },

	            removeShapeId: function removeShapeId(shapeid) {
	                var shapeseq = this.shapeseq,
	                    i;
	                for (i = shapeseq.length; i--;) {
	                    if (shapeseq[i] === shapeid) {
	                        shapeseq.splice(i, 1);
	                        break;
	                    }
	                }
	                delete this.shapes[shapeid];
	            },

	            getShapeAt: function getShapeAt(el, x, y) {
	                this.targetX = x;
	                this.targetY = y;
	                this.render();
	                return this.currentTargetShapeId;
	            },

	            render: function render() {
	                var shapeseq = this.shapeseq,
	                    shapes = this.shapes,
	                    shapeCount = shapeseq.length,
	                    context = this._getContext(),
	                    shapeid,
	                    shape,
	                    i;
	                context.clearRect(0, 0, this.pixelWidth, this.pixelHeight);
	                for (i = 0; i < shapeCount; i++) {
	                    shapeid = shapeseq[i];
	                    shape = shapes[shapeid];
	                    this['_draw' + shape.type].apply(this, shape.args);
	                }
	                if (!this.interact) {
	                    // not interactive so no need to keep the shapes array
	                    this.shapes = {};
	                    this.shapeseq = [];
	                }
	            }

	        });

	        VCanvas_vml = createClass(VCanvas_base, {
	            init: function init(width, height, target) {
	                var groupel;
	                VCanvas_vml._super.init.call(this, width, height, target);
	                if (target[0]) {
	                    target = target[0];
	                }
	                $.data(target, '_jqs_vcanvas', this);
	                this.canvas = document.createElement('span');
	                $(this.canvas).css({ display: 'inline-block', position: 'relative', overflow: 'hidden', width: width, height: height, margin: '0', padding: '0', verticalAlign: 'top' });
	                this._insert(this.canvas, target);
	                this._calculatePixelDims(width, height, this.canvas);
	                this.canvas.width = this.pixelWidth;
	                this.canvas.height = this.pixelHeight;
	                groupel = '<v:group coordorigin="0 0" coordsize="' + this.pixelWidth + ' ' + this.pixelHeight + '"' + ' style="position:absolute;top:0;left:0;width:' + this.pixelWidth + 'px;height=' + this.pixelHeight + 'px;"></v:group>';
	                this.canvas.insertAdjacentHTML('beforeEnd', groupel);
	                this.group = $(this.canvas).children()[0];
	                this.rendered = false;
	                this.prerender = '';
	            },

	            _drawShape: function _drawShape(shapeid, path, lineColor, fillColor, lineWidth) {
	                var vpath = [],
	                    initial,
	                    stroke,
	                    fill,
	                    closed,
	                    vel,
	                    plen,
	                    i;
	                for (i = 0, plen = path.length; i < plen; i++) {
	                    vpath[i] = '' + path[i][0] + ',' + path[i][1];
	                }
	                initial = vpath.splice(0, 1);
	                lineWidth = lineWidth === undefined ? 1 : lineWidth;
	                stroke = lineColor === undefined ? ' stroked="false" ' : ' strokeWeight="' + lineWidth + 'px" strokeColor="' + lineColor + '" ';
	                fill = fillColor === undefined ? ' filled="false"' : ' fillColor="' + fillColor + '" filled="true" ';
	                closed = vpath[0] === vpath[vpath.length - 1] ? 'x ' : '';
	                vel = '<v:shape coordorigin="0 0" coordsize="' + this.pixelWidth + ' ' + this.pixelHeight + '" ' + ' id="jqsshape' + shapeid + '" ' + stroke + fill + ' style="position:absolute;left:0;top:0;height:' + this.pixelHeight + 'px;width:' + this.pixelWidth + 'px;padding:0;margin:0;" ' + ' path="m ' + initial + ' l ' + vpath.join(', ') + ' ' + closed + 'e">' + ' </v:shape>';
	                return vel;
	            },

	            _drawCircle: function _drawCircle(shapeid, x, y, radius, lineColor, fillColor, lineWidth) {
	                var stroke, fill, vel;
	                x -= radius;
	                y -= radius;
	                stroke = lineColor === undefined ? ' stroked="false" ' : ' strokeWeight="' + lineWidth + 'px" strokeColor="' + lineColor + '" ';
	                fill = fillColor === undefined ? ' filled="false"' : ' fillColor="' + fillColor + '" filled="true" ';
	                vel = '<v:oval ' + ' id="jqsshape' + shapeid + '" ' + stroke + fill + ' style="position:absolute;top:' + y + 'px; left:' + x + 'px; width:' + radius * 2 + 'px; height:' + radius * 2 + 'px"></v:oval>';
	                return vel;
	            },

	            _drawPieSlice: function _drawPieSlice(shapeid, x, y, radius, startAngle, endAngle, lineColor, fillColor) {
	                var vpath, startx, starty, endx, endy, stroke, fill, vel;
	                if (startAngle === endAngle) {
	                    return ''; // VML seems to have problem when start angle equals end angle.
	                }
	                if (endAngle - startAngle === 2 * Math.PI) {
	                    startAngle = 0.0; // VML seems to have a problem when drawing a full circle that doesn't start 0
	                    endAngle = 2 * Math.PI;
	                }

	                startx = x + Math.round(Math.cos(startAngle) * radius);
	                starty = y + Math.round(Math.sin(startAngle) * radius);
	                endx = x + Math.round(Math.cos(endAngle) * radius);
	                endy = y + Math.round(Math.sin(endAngle) * radius);

	                if (startx === endx && starty === endy) {
	                    if (endAngle - startAngle < Math.PI) {
	                        // Prevent very small slices from being mistaken as a whole pie
	                        return '';
	                    }
	                    // essentially going to be the entire circle, so ignore startAngle
	                    startx = endx = x + radius;
	                    starty = endy = y;
	                }

	                if (startx === endx && starty === endy && endAngle - startAngle < Math.PI) {
	                    return '';
	                }

	                vpath = [x - radius, y - radius, x + radius, y + radius, startx, starty, endx, endy];
	                stroke = lineColor === undefined ? ' stroked="false" ' : ' strokeWeight="1px" strokeColor="' + lineColor + '" ';
	                fill = fillColor === undefined ? ' filled="false"' : ' fillColor="' + fillColor + '" filled="true" ';
	                vel = '<v:shape coordorigin="0 0" coordsize="' + this.pixelWidth + ' ' + this.pixelHeight + '" ' + ' id="jqsshape' + shapeid + '" ' + stroke + fill + ' style="position:absolute;left:0;top:0;height:' + this.pixelHeight + 'px;width:' + this.pixelWidth + 'px;padding:0;margin:0;" ' + ' path="m ' + x + ',' + y + ' wa ' + vpath.join(', ') + ' x e">' + ' </v:shape>';
	                return vel;
	            },

	            _drawRect: function _drawRect(shapeid, x, y, width, height, lineColor, fillColor) {
	                return this._drawShape(shapeid, [[x, y], [x, y + height], [x + width, y + height], [x + width, y], [x, y]], lineColor, fillColor);
	            },

	            reset: function reset() {
	                this.group.innerHTML = '';
	            },

	            appendShape: function appendShape(shape) {
	                var vel = this['_draw' + shape.type].apply(this, shape.args);
	                if (this.rendered) {
	                    this.group.insertAdjacentHTML('beforeEnd', vel);
	                } else {
	                    this.prerender += vel;
	                }
	                this.lastShapeId = shape.id;
	                return shape.id;
	            },

	            replaceWithShape: function replaceWithShape(shapeid, shape) {
	                var existing = $('#jqsshape' + shapeid),
	                    vel = this['_draw' + shape.type].apply(this, shape.args);
	                existing[0].outerHTML = vel;
	            },

	            replaceWithShapes: function replaceWithShapes(shapeids, shapes) {
	                // replace the first shapeid with all the new shapes then toast the remaining old shapes
	                var existing = $('#jqsshape' + shapeids[0]),
	                    replace = '',
	                    slen = shapes.length,
	                    i;
	                for (i = 0; i < slen; i++) {
	                    replace += this['_draw' + shapes[i].type].apply(this, shapes[i].args);
	                }
	                existing[0].outerHTML = replace;
	                for (i = 1; i < shapeids.length; i++) {
	                    $('#jqsshape' + shapeids[i]).remove();
	                }
	            },

	            insertAfterShape: function insertAfterShape(shapeid, shape) {
	                var existing = $('#jqsshape' + shapeid),
	                    vel = this['_draw' + shape.type].apply(this, shape.args);
	                existing[0].insertAdjacentHTML('afterEnd', vel);
	            },

	            removeShapeId: function removeShapeId(shapeid) {
	                var existing = $('#jqsshape' + shapeid);
	                this.group.removeChild(existing[0]);
	            },

	            getShapeAt: function getShapeAt(el, x, y) {
	                var shapeid = el.id.substr(8);
	                return shapeid;
	            },

	            render: function render() {
	                if (!this.rendered) {
	                    // batch the intial render into a single repaint
	                    this.group.innerHTML = this.prerender;
	                    this.rendered = true;
	                }
	            }
	        });
	    });
	})(document, Math);

/***/ },
/* 544 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	 * jQuery.scrollTo
	 * Copyright (c) 2007-2015 Ariel Flesler - aflesler<a>gmail<d>com | http://flesler.blogspot.com
	 * Licensed under MIT
	 * http://flesler.blogspot.com/2007/10/jqueryscrollto.html
	 * @projectDescription Lightweight, cross-browser and highly customizable animated scrolling with jQuery
	 * @author Ariel Flesler
	 * @version 2.1.2
	 */
	;(function(factory) {
		'use strict';
		if (true) {
			// AMD
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else if (typeof module !== 'undefined' && module.exports) {
			// CommonJS
			module.exports = factory(require('jquery'));
		} else {
			// Global
			factory(jQuery);
		}
	})(function($) {
		'use strict';

		var $scrollTo = $.scrollTo = function(target, duration, settings) {
			return $(window).scrollTo(target, duration, settings);
		};

		$scrollTo.defaults = {
			axis:'xy',
			duration: 0,
			limit:true
		};

		function isWin(elem) {
			return !elem.nodeName ||
				$.inArray(elem.nodeName.toLowerCase(), ['iframe','#document','html','body']) !== -1;
		}		

		$.fn.scrollTo = function(target, duration, settings) {
			if (typeof duration === 'object') {
				settings = duration;
				duration = 0;
			}
			if (typeof settings === 'function') {
				settings = { onAfter:settings };
			}
			if (target === 'max') {
				target = 9e9;
			}

			settings = $.extend({}, $scrollTo.defaults, settings);
			// Speed is still recognized for backwards compatibility
			duration = duration || settings.duration;
			// Make sure the settings are given right
			var queue = settings.queue && settings.axis.length > 1;
			if (queue) {
				// Let's keep the overall duration
				duration /= 2;
			}
			settings.offset = both(settings.offset);
			settings.over = both(settings.over);

			return this.each(function() {
				// Null target yields nothing, just like jQuery does
				if (target === null) return;

				var win = isWin(this),
					elem = win ? this.contentWindow || window : this,
					$elem = $(elem),
					targ = target, 
					attr = {},
					toff;

				switch (typeof targ) {
					// A number will pass the regex
					case 'number':
					case 'string':
						if (/^([+-]=?)?\d+(\.\d+)?(px|%)?$/.test(targ)) {
							targ = both(targ);
							// We are done
							break;
						}
						// Relative/Absolute selector
						targ = win ? $(targ) : $(targ, elem);
						/* falls through */
					case 'object':
						if (targ.length === 0) return;
						// DOMElement / jQuery
						if (targ.is || targ.style) {
							// Get the real position of the target
							toff = (targ = $(targ)).offset();
						}
				}

				var offset = $.isFunction(settings.offset) && settings.offset(elem, targ) || settings.offset;

				$.each(settings.axis.split(''), function(i, axis) {
					var Pos	= axis === 'x' ? 'Left' : 'Top',
						pos = Pos.toLowerCase(),
						key = 'scroll' + Pos,
						prev = $elem[key](),
						max = $scrollTo.max(elem, axis);

					if (toff) {// jQuery / DOMElement
						attr[key] = toff[pos] + (win ? 0 : prev - $elem.offset()[pos]);

						// If it's a dom element, reduce the margin
						if (settings.margin) {
							attr[key] -= parseInt(targ.css('margin'+Pos), 10) || 0;
							attr[key] -= parseInt(targ.css('border'+Pos+'Width'), 10) || 0;
						}

						attr[key] += offset[pos] || 0;

						if (settings.over[pos]) {
							// Scroll to a fraction of its width/height
							attr[key] += targ[axis === 'x'?'width':'height']() * settings.over[pos];
						}
					} else {
						var val = targ[pos];
						// Handle percentage values
						attr[key] = val.slice && val.slice(-1) === '%' ?
							parseFloat(val) / 100 * max
							: val;
					}

					// Number or 'number'
					if (settings.limit && /^\d+$/.test(attr[key])) {
						// Check the limits
						attr[key] = attr[key] <= 0 ? 0 : Math.min(attr[key], max);
					}

					// Don't waste time animating, if there's no need.
					if (!i && settings.axis.length > 1) {
						if (prev === attr[key]) {
							// No animation needed
							attr = {};
						} else if (queue) {
							// Intermediate animation
							animate(settings.onAfterFirst);
							// Don't animate this axis again in the next iteration.
							attr = {};
						}
					}
				});

				animate(settings.onAfter);

				function animate(callback) {
					var opts = $.extend({}, settings, {
						// The queue setting conflicts with animate()
						// Force it to always be true
						queue: true,
						duration: duration,
						complete: callback && function() {
							callback.call(elem, targ, settings);
						}
					});
					$elem.animate(attr, opts);
				}
			});
		};

		// Max scrolling position, works on quirks mode
		// It only fails (not too badly) on IE, quirks mode.
		$scrollTo.max = function(elem, axis) {
			var Dim = axis === 'x' ? 'Width' : 'Height',
				scroll = 'scroll'+Dim;

			if (!isWin(elem))
				return elem[scroll] - $(elem)[Dim.toLowerCase()]();

			var size = 'client' + Dim,
				doc = elem.ownerDocument || elem.document,
				html = doc.documentElement,
				body = doc.body;

			return Math.max(html[scroll], body[scroll]) - Math.min(html[size], body[size]);
		};

		function both(val) {
			return $.isFunction(val) || $.isPlainObject(val) ? val : { top:val, left:val };
		}

		// Add special hooks so that window scroll properties can be animated
		$.Tween.propHooks.scrollLeft = 
		$.Tween.propHooks.scrollTop = {
			get: function(t) {
				return $(t.elem)[t.prop]();
			},
			set: function(t) {
				var curr = this.get(t);
				// If interrupt is true and user scrolled, stop animating
				if (t.options.interrupt && t._last && t._last !== curr) {
					return $(t.elem).stop();
				}
				var next = Math.round(t.now);
				// Don't waste CPU
				// Browsers don't render floating point scroll
				if (curr !== next) {
					$(t.elem)[t.prop](next);
					t._last = this.get(t);
				}
			}
		};

		// AMD requirement
		return $scrollTo;
	});


/***/ },
/* 545 */
/***/ function(module, exports) {

	'use strict';

	window._trackJs = {
	    onError: function onError(payload) {
	        var itemExistInList = function itemExistInList(item, list) {
	            for (var i = 0; i < list.length; i++) {
	                if (item.indexOf(list[i]) > -1) {
	                    return true;
	                }
	            }
	            return false;
	        };

	        var ignorableErrors = [
	        // General script error, not actionable
	        '[object Event]',
	        // General script error, not actionable
	        'Script error.',
	        // error when user  interrupts script loading, nothing to fix
	        'Error loading script',
	        // an error caused by DealPly (http://www.dealply.com/) chrome extension
	        'DealPly',
	        // this error is reported when a post request returns error, i.e. html body
	        // the details provided in this case are completely useless, thus discarded
	        'Unexpected token <'];

	        if (itemExistInList(payload.message, ignorableErrors)) {
	            return false;
	        }

	        payload.network = payload.network.filter(function (item) {
	            // ignore random errors from Intercom
	            return !(item.statusCode === 403 && payload.message.indexOf('intercom') > -1);
	        });

	        return true;
	    }
	};

	// if Track:js is already loaded, we need to initialize it
	if (typeof trackJs !== 'undefined') trackJs.configure(window._trackJs);

/***/ },
/* 546 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Endpoint = __webpack_require__(547).Endpoint;
	var GetStartedJP = __webpack_require__(548).GetStartedJP;
	var JobDetails = __webpack_require__(549).JobDetails;
	var Platforms = __webpack_require__(550).Platforms;
	var Regulation = __webpack_require__(551).Regulation;
	var Scroll = __webpack_require__(552).Scroll;
	var GetStarted = __webpack_require__(553).GetStarted;
	var Contact = __webpack_require__(554).Contact;
	var Careers = __webpack_require__(557).Careers;
	var Home = __webpack_require__(558).Home;
	var WhyUs = __webpack_require__(565).WhyUs;
	var CharityPage = __webpack_require__(566).CharityPage;
	var TermsAndConditions = __webpack_require__(567).TermsAndConditions;
	var CashierJP = __webpack_require__(434).CashierJP;
	var LoggedInHandler = __webpack_require__(568).LoggedInHandler;
	var pjax_config_page_require_auth = __webpack_require__(483).pjax_config_page_require_auth;
	var pjax_config_page = __webpack_require__(483).pjax_config_page;

	pjax_config_page('/home', function () {
	    return {
	        onLoad: function onLoad() {
	            Home.init();
	        }
	    };
	});

	pjax_config_page('/why-us', function () {
	    return {
	        onLoad: function onLoad() {
	            WhyUs.init();
	        },
	        onUnload: function onUnload() {
	            Scroll.offScroll();
	        }
	    };
	});

	pjax_config_page('/volidx-markets', function () {
	    return {
	        onLoad: function onLoad() {
	            Scroll.goToHashSection();
	        },
	        onUnload: function onUnload() {
	            Scroll.offScroll();
	        }
	    };
	});

	pjax_config_page('/open-source-projects', function () {
	    return {
	        onLoad: function onLoad() {
	            Scroll.sidebar_scroll($('.open-source-projects'));
	        },
	        onUnload: function onUnload() {
	            Scroll.offScroll();
	        }
	    };
	});

	pjax_config_page('/payment-agent', function () {
	    return {
	        onLoad: function onLoad() {
	            Scroll.sidebar_scroll($('.payment-agent'));
	        },
	        onUnload: function onUnload() {
	            Scroll.offScroll();
	        }
	    };
	});

	pjax_config_page('/get-started', function () {
	    return {
	        onLoad: function onLoad() {
	            GetStarted.get_started_behaviour();
	        },
	        onUnload: function onUnload() {
	            Scroll.offScroll();
	        }
	    };
	});

	pjax_config_page('/contact', function () {
	    return {
	        onLoad: function onLoad() {
	            Contact.init();
	        }
	    };
	});

	pjax_config_page('/careers', function () {
	    return {
	        onLoad: function onLoad() {
	            Careers.display_career_email();
	        }
	    };
	});

	pjax_config_page('/charity', function () {
	    return {
	        onLoad: CharityPage.onLoad,
	        onUnload: CharityPage.onUnload
	    };
	});

	pjax_config_page('/terms-and-conditions', function () {
	    return {
	        onLoad: function onLoad() {
	            TermsAndConditions.init();
	        }
	    };
	});

	pjax_config_page('/platforms', function () {
	    return {
	        onLoad: function onLoad() {
	            Platforms.init();
	        },
	        onUnload: function onUnload() {
	            Platforms.unload();
	        }
	    };
	});

	pjax_config_page_require_auth('/cashier/deposit-jp', function () {
	    return {
	        onLoad: function onLoad() {
	            CashierJP.init('deposit');
	        }
	    };
	});

	pjax_config_page_require_auth('/cashier/withdraw-jp', function () {
	    return {
	        onLoad: function onLoad() {
	            CashierJP.init('withdraw');
	        }
	    };
	});

	pjax_config_page('/endpoint', function () {
	    return {
	        onLoad: function onLoad() {
	            Endpoint.init();
	        }
	    };
	});

	pjax_config_page('/get-started-jp', function () {
	    return {
	        onLoad: function onLoad() {
	            GetStartedJP.init();
	        },
	        onUnload: function onUnload() {
	            GetStartedJP.unload();
	        }
	    };
	});

	pjax_config_page('/open-positions', function () {
	    return {
	        onLoad: function onLoad() {
	            if (/\/open-positions\.html/.test(window.location.pathname)) Scroll.scrollToHashSection();
	        }
	    };
	});

	pjax_config_page('/open-positions/job-details', function () {
	    return {
	        onLoad: function onLoad() {
	            JobDetails.init();
	            JobDetails.addEventListeners();
	        },
	        onUnload: function onUnload() {
	            JobDetails.removeEventListeners();
	        }
	    };
	});

	pjax_config_page('/regulation', function () {
	    return {
	        onLoad: function onLoad() {
	            Regulation.init();
	        }
	    };
	});

	pjax_config_page('/logged_inws', function () {
	    return {
	        onLoad: function onLoad() {
	            LoggedInHandler.init();
	        }
	    };
	});

/***/ },
/* 547 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var getAppId = __webpack_require__(300).getAppId;
	var getSocketURL = __webpack_require__(300).getSocketURL;

	var Endpoint = function () {
	    var init = function init() {
	        $('#server_url').val(getSocketURL().split('/')[2]);
	        $('#app_id').val(getAppId());

	        $('#frm_endpoint').on('submit', function (e) {
	            e.preventDefault();
	            var server_url = ($('#server_url').val() || '').trim().toLowerCase().replace(/[><()\"\']/g, ''),
	                app_id = ($('#app_id').val() || '').trim();
	            if (server_url) {
	                localStorage.setItem('config.server_url', server_url);
	            }
	            if (app_id && !isNaN(app_id)) localStorage.setItem('config.app_id', parseInt(app_id));
	            window.location.reload();
	        });

	        $('#reset_endpoint').on('click', function () {
	            localStorage.removeItem('config.server_url');
	            localStorage.removeItem('config.app_id');
	            window.location.reload();
	        });
	    };

	    return {
	        init: init
	    };
	}();

	module.exports = {
	    Endpoint: Endpoint
	};

/***/ },
/* 548 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var japanese_client = __webpack_require__(307).japanese_client;
	var url_for = __webpack_require__(306).url_for;

	var GetStartedJP = function () {
	    var init = function init() {
	        if (!japanese_client()) {
	            window.location.href = url_for('get-started');
	        }
	        var showSelectedTab = function showSelectedTab() {
	            var updatedTab = window.location.hash;
	            $('.contents div').hide();
	            if (updatedTab && updatedTab !== '') {
	                $('#index').hide();
	                $('.contents div[id=content-' + updatedTab.slice(1, updatedTab.length) + ']').show();
	                $('.contents div[id=content-' + updatedTab.slice(1, updatedTab.length) + '] div').show();
	                $('.sidebar-left ul li').removeClass('selected');
	                $('.sidebar-left ul li.' + updatedTab.slice(1, updatedTab.length)).addClass('selected');
	                $('.contents').show();
	            } else {
	                $('.contents').hide();
	                $('.sidebar-left ul li').removeClass('selected');
	                $('#index').show();
	            }
	        };
	        var tab = window.location.hash;
	        if (tab && tab !== '') {
	            $('#index').hide();
	            $('.sidebar-left ul li.' + tab.slice(1, tab.length)).addClass('selected');
	            showSelectedTab();
	        }
	        $(window).on('hashchange', function () {
	            showSelectedTab();
	        });
	        $('.sidebar-left ul li').click(function () {
	            $('.sidebar-left ul li').removeClass('selected');
	            $(this).addClass('selected');
	        });
	    };

	    var unload = function unload() {
	        $(window).off('hashchange');
	    };

	    return {
	        init: init,
	        unload: unload
	    };
	}();

	module.exports = {
	    GetStartedJP: GetStartedJP
	};

/***/ },
/* 549 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var localize = __webpack_require__(423).localize;
	var url_for = __webpack_require__(306).url_for;
	var url = __webpack_require__(306).url;

	var JobDetails = function () {
	    var dept = void 0,
	        depts = void 0,
	        sections = void 0;

	    var showSelectedDiv = function showSelectedDiv() {
	        if ($('.job-details').find('#title').text() === '') {
	            init();
	        } else {
	            $('.sections div').hide();
	            $('.sections div[id=' + dept + '-' + url.location.hash.substring(1) + ']').show();
	            $('.title-sections').html($('.sidebar li[class="selected"]').text());
	            if (dept === 'Information_Technology' && url.location.hash.substring(1) === 'section-three') {
	                $('.senior_perl_message').removeClass('invisible');
	            } else if (!$('.senior_perl_message').hasClass('invisible')) {
	                $('.senior_perl_message').addClass('invisible');
	            }
	        }
	    };

	    var check_url = function check_url() {
	        var replace_dept = void 0,
	            replace_section = void 0;
	        if (!dept || $.inArray(dept, depts) === -1) {
	            replace_dept = '?dept=Information_Technology';
	        }
	        if (!url.location.hash || $.inArray(url.location.hash.substring(1), sections) === -1) {
	            replace_section = '#section-one';
	        }
	        if (replace_dept || replace_section) {
	            window.location = replace_dept && replace_section ? url_for('open-positions/job-details') + replace_dept + replace_section : replace_dept ? url_for('open-positions/job-details') + replace_dept + url.location.hash : url_for('open-positions/job-details') + '?dept=' + dept + replace_section;
	            return false;
	        }
	        return true;
	    };

	    var init = function init() {
	        dept = url.params_hash().dept;
	        depts = ['Information_Technology', 'Quality_Assurance', 'Quantitative_Analysis', 'Marketing', 'Accounting', 'Compliance', 'Customer_Support', 'Human_Resources', 'Administrator', 'Internal_Audit'];
	        sections = ['section-one', 'section-two', 'section-three', 'section-four', 'section-five', 'section-six', 'section-seven', 'section-eight'];
	        if (check_url()) {
	            $('.job-details').find('#title').html(localize(dept.replace(/_/g, ' ')));
	            var deptImage = $('.dept-image'),
	                sourceImage = deptImage.attr('src').replace('Information_Technology', dept);
	            deptImage.attr('src', sourceImage).show();
	            var deptContent = $('#content-' + dept + ' div'),
	                $sidebar_nav = $('#sidebar-nav');
	            var section = void 0;
	            $sidebar_nav.find('li').slice(deptContent.length).hide();
	            for (var i = 0; i < deptContent.length; i++) {
	                section = $('#' + dept + '-' + sections[i]);
	                section.insertAfter('.sections div:last-child');
	                if (section.attr('class')) {
	                    $sidebar_nav.find('a[href="#' + sections[i] + '"]').html(localize(section.attr('class').replace(/_/g, ' ')));
	                }
	            }
	            var $sidebar = $('.sidebar');
	            $sidebar.show();
	            if ($sidebar.find('li:visible').length === 1) {
	                $sidebar.hide();
	            }
	            $('#' + url.location.hash.substring(9)).addClass('selected');
	            showSelectedDiv();
	            $('#back-button').attr('href', url_for('open-positions') + '#' + dept);
	        }
	    };

	    var addEventListeners = function addEventListeners() {
	        var sidebarListItem = $('#sidebar-nav').find('li');
	        sidebarListItem.click(function () {
	            sidebarListItem.removeClass('selected');
	            $(this).addClass('selected');
	        });

	        $(window).on('hashchange', function () {
	            if (JobDetails.check_url()) {
	                JobDetails.showSelectedDiv();
	            }
	        });
	    };

	    var removeEventListeners = function removeEventListeners() {
	        $(window).off('hashchange');
	    };

	    return {
	        showSelectedDiv: showSelectedDiv,
	        check_url: check_url,
	        init: init,

	        addEventListeners: addEventListeners,
	        removeEventListeners: removeEventListeners
	    };
	}();

	module.exports = {
	    JobDetails: JobDetails
	};

/***/ },
/* 550 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var url = __webpack_require__(306).url;

	var Platforms = function () {
	    var sections = [];
	    var init = function init() {
	        sections = ['more-tools', 'trading-platforms'];
	        var sidebarListItem = $('.sidebar-nav li');
	        sidebarListItem.click(function () {
	            sidebarListItem.removeClass('selected');
	            $(this).addClass('selected');
	        });
	        $(window).on('hashchange', function () {
	            showSelectedDiv();
	        });
	        checkWidth();
	        $(window).resize(checkWidth);
	        $('.inner').scroll(checkScroll);
	        setHeights();
	    };
	    var setHeights = function setHeights() {
	        $('.inner tr').each(function () {
	            var $td = $(this).find('td:first');
	            var $th = $(this).find('th');
	            if ($th.height() > $td.height()) {
	                $(this).find('td').height($th.height());
	            }
	        });
	    };
	    var checkScroll = function checkScroll() {
	        var $elem = $('.inner'),
	            $fadeL = $('.fade-to-left'),
	            $fadeR = $('.fade-to-right');
	        var newScrollLeft = $elem.scrollLeft(),
	            width = $elem.width(),
	            scrollWidth = $elem.get(0).scrollWidth;
	        $fadeL.css('opacity', newScrollLeft === 0 ? '0' : '100');
	        $fadeR.css('opacity', scrollWidth === newScrollLeft + width ? '0' : '100');
	    };
	    var checkWidth = function checkWidth() {
	        if ($('.sidebar-left').is(':visible')) {
	            showSelectedDiv();
	        } else {
	            $('.sections').removeClass('invisible');
	        }
	        $('.inner th').hide().fadeIn(1); // force to refresh in order to maintain correct positions
	    };
	    var get_hash = function get_hash() {
	        return url.location.hash && $.inArray(url.location.hash.substring(1), sections) !== -1 ? url.location.hash : '#trading-platforms';
	    };
	    var showSelectedDiv = function showSelectedDiv() {
	        var $sections_with_hash = $('.sections[id="' + get_hash().substring(1) + '"]');
	        if ($sections_with_hash.is(':visible') && $('.sections:visible').length === 1) return;
	        $('.sections').addClass('invisible');
	        $sections_with_hash.removeClass('invisible');
	        $('.sidebar-nav a[href="' + get_hash() + '"]').parent().addClass('selected');
	    };
	    var unload = function unload() {
	        $(window).off('resize');
	        $(window).off('hashchange');
	    };
	    return {
	        init: init,
	        unload: unload
	    };
	}();

	module.exports = {
	    Platforms: Platforms
	};

/***/ },
/* 551 */
/***/ function(module, exports) {

	'use strict';

	var Regulation = function () {
	    var init = function init() {
	        $(function () {
	            $('#accordion').accordion({
	                heightStyle: 'content',
	                collapsible: true,
	                active: 0
	            });
	        });

	        var coords = [],
	            $map_area = $('#planetmap').find('area'),
	            $selector = $('img[usemap="#planetmap"]');
	        if (coords.length === 0) {
	            $map_area.each(function () {
	                coords.push($(this).attr('coords'));
	            });
	        }
	        function relocate_links() {
	            $map_area.each(function (index) {
	                var c = '';
	                var new_width = $selector[0].getBoundingClientRect().width.toFixed(2);
	                coords[index].split(',').map(function (v) {
	                    c += (c ? ',' : '') + (v * new_width / 900).toFixed(2);
	                });
	                $(this).attr('coords', c);
	            });
	        }
	        $(document).ready(relocate_links);
	        $(window).resize(relocate_links);
	    };

	    return {
	        init: init
	    };
	}();

	module.exports = {
	    Regulation: Regulation
	};

/***/ },
/* 552 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var url = __webpack_require__(306).url;

	var Scroll = function () {
	    var sidebar_scroll = function sidebar_scroll(elm_selector) {
	        elm_selector.on('click', '#sidebar-nav li', function () {
	            var clicked_li = $(this);
	            $.scrollTo($('.section:eq(' + clicked_li.index() + ')'), 500);
	            return false;
	        }).addClass('unbind_later');

	        if (elm_selector.length) {
	            (function () {
	                // grab the initial top offset of the navigation
	                var selector = elm_selector.find('.sidebar');
	                var width = selector.width();
	                var sticky_navigation_offset_top = selector.offset().top;
	                // With thanks:
	                // http://www.backslash.gr/content/blog/webdevelopment/6-navigation-menu-that-stays-on-top-with-jquery

	                // our function that decides weather the navigation bar should have "fixed" css position or not.
	                var sticky_navigation = function sticky_navigation() {
	                    var scroll_top = $(window).scrollTop(); // our current vertical position from the top

	                    // if we've scrolled more than the navigation, change its position to fixed to stick to top,
	                    // otherwise change it back to relative
	                    if (scroll_top > sticky_navigation_offset_top && scroll_top + selector[0].offsetHeight < document.getElementById('footer').offsetTop) {
	                        selector.css({ position: 'fixed', top: 0, width: width });
	                    } else if (scroll_top + selector[0].offsetHeight > document.getElementById('footer').offsetTop) {
	                        selector.css({ position: 'absolute', bottom: document.getElementById('footer').offsetHeight + 'px', top: '', width: width });
	                    } else {
	                        selector.css({ position: 'relative' });
	                    }
	                };

	                // run our function on load
	                sticky_navigation();

	                var sidebar_nav = selector.find('#sidebar-nav');
	                var length = elm_selector.find('.section').length;
	                $(window).on('scroll', function () {
	                    // and run it again every time you scroll
	                    sticky_navigation();

	                    for (var i = 0; i < length; i++) {
	                        var section = $('.section:eq(' + i + ')'),
	                            sectionOffset = section.offset(),
	                            isOffsetTop = sectionOffset && $(this).scrollTop() >= sectionOffset.top - 5;
	                        if (($(window).scrollTop() === 0 || isOffsetTop) && section.css('display') !== 'none') {
	                            // ignore hidden elements
	                            sidebar_nav.find('li').removeClass('selected');

	                            if ($(window).scrollTop() === 0) {
	                                // We're at the top of the screen, so highlight first nav item
	                                sidebar_nav.find('li:first-child').addClass('selected');
	                            } else if ($(window).scrollTop() + $(window).height() >= $(document).height()) {
	                                // We're at bottom of screen so highlight last nav item.
	                                sidebar_nav.find('li:last-child').addClass('selected');
	                            } else {
	                                sidebar_nav.find('li:eq(' + i + ')').addClass('selected');
	                            }
	                        }
	                    }
	                });
	            })();
	        }
	    };

	    var goToHashSection = function goToHashSection() {
	        if (url.location.hash !== '') {
	            $('a[href="' + url.location.hash + '"]').click();
	        }
	    };

	    var scrollToHashSection = function scrollToHashSection() {
	        if (url.location.hash) {
	            $.scrollTo($(url.location.hash));
	        }
	    };

	    return {
	        sidebar_scroll: sidebar_scroll,
	        offScroll: function offScroll() {
	            $(window).off('scroll');
	        },
	        goToHashSection: goToHashSection,
	        scrollToHashSection: scrollToHashSection
	    };
	}();

	module.exports = {
	    Scroll: Scroll
	};

/***/ },
/* 553 */
/***/ function(module, exports) {

	'use strict';

	var GetStarted = function () {
	    var select_nav_element = function select_nav_element() {
	        var $navLink = $('.nav li a');
	        var $navList = $('.nav li');
	        $navList.removeClass('selected');
	        for (var i = 0; i < $navLink.length; i++) {
	            if ($navLink[i].href.match(window.location.pathname)) {
	                document.getElementsByClassName('nav')[0].getElementsByTagName('li')[i].setAttribute('class', 'selected');
	                break;
	            }
	        }
	    };

	    var get_started_behaviour = function get_started_behaviour() {
	        if (/get-started-jp/.test(window.location.pathname)) return;
	        var update_active_subsection = function update_active_subsection(to_show) {
	            var subsection = $('.subsection');
	            subsection.addClass('hidden');
	            to_show.removeClass('hidden');
	            var nav_back = $('.subsection-navigation .back');
	            var nav_next = $('.subsection-navigation .next');

	            if (to_show.hasClass('first')) {
	                nav_back.addClass('button-disabled');
	                nav_next.removeClass('button-disabled');
	            } else if (to_show.hasClass('last')) {
	                nav_back.removeClass('button-disabled');
	                nav_next.addClass('button-disabled');
	            } else {
	                nav_back.removeClass('button-disabled');
	                nav_next.removeClass('button-disabled');
	            }

	            document.location.hash = to_show.find('a[name]').attr('name').slice(0, -8);

	            return false;
	        };

	        var to_show = void 0,
	            fragment = void 0;
	        var nav = $('.get-started').find('.subsection-navigation');
	        var len = nav.length;

	        if (len) {
	            nav.on('click', 'a', function () {
	                var button = $(this);
	                if (button.hasClass('button-disabled')) {
	                    return false;
	                }
	                var now_showing = $('.subsection:not(.hidden)');
	                var show = button.hasClass('next') ? now_showing.next('.subsection') : now_showing.prev('.subsection');
	                return update_active_subsection(show);
	            });

	            fragment = location.href.split('#')[1];
	            to_show = fragment ? $('a[name=' + fragment + '-section]').parent().parent('.subsection') : $('.subsection.first');
	            update_active_subsection(to_show);
	        }
	        select_nav_element();
	    };

	    return {
	        get_started_behaviour: get_started_behaviour
	    };
	}();

	module.exports = {
	    GetStarted: GetStarted
	};

/***/ },
/* 554 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var email_rot13 = __webpack_require__(420).email_rot13;
	var loadCSS = __webpack_require__(555).loadCSS;
	var loadJS = __webpack_require__(556).loadJS;
	var getLanguage = __webpack_require__(303).getLanguage;
	var url_for_static = __webpack_require__(306).url_for_static;

	var Contact = function () {
	    var init = function init() {
	        $('#faq_url').attr('href', 'https://binary.desk.com/customer/' + getLanguage() + '/portal/articles');
	        display_cs_contacts();
	        show_live_chat_icon();
	    };

	    var display_cs_contacts = function display_cs_contacts() {
	        $('.contact-content').on('change', '#cs_telephone_number', function () {
	            var val = $(this).val().split(',');
	            $('#display_cs_telephone').html(val[0] + (val.length > 1 ? '<br />' + val[1] : ''));
	        });
	        $('#cs_contact_eaddress').html(email_rot13('<n uers=\"znvygb:fhccbeg@ovanel.pbz\" ery=\"absbyybj\">fhccbeg@ovanel.pbz</n>'));
	    };

	    var show_live_chat_icon = function show_live_chat_icon() {
	        if (typeof DESK === 'undefined') {
	            loadCSS('https://d3jyn100am7dxp.cloudfront.net/assets/widget_embed_191.cssgz?1367387331');
	            loadJS('https://d3jyn100am7dxp.cloudfront.net/assets/widget_embed_libraries_191.jsgz?1367387332');
	        }

	        var desk_load = setInterval(function () {
	            if (typeof DESK !== 'undefined') {
	                render_desk_widget();
	                change_chat_icon();
	                clearInterval(desk_load);
	            }
	        }, 80);
	    };

	    var render_desk_widget = function render_desk_widget() {
	        new DESK.Widget({
	            version: 1,
	            site: 'binary.desk.com',
	            port: '80',
	            type: 'chat',
	            id: 'live-chat-icon',
	            displayMode: 0, // 0 for popup, 1 for lightbox
	            features: {
	                offerAlways: true,
	                offerAgentsOnline: false,
	                offerRoutingAgentsAvailable: false,
	                offerEmailIfChatUnavailable: false
	            },
	            fields: {
	                ticket: {
	                    // desc: &#x27;&#x27;,
	                    // labels_new: &#x27;&#x27;,
	                    // priority: &#x27;&#x27;,
	                    // subject: &#x27;&#x27;,
	                    // custom_loginid: &#x27;&#x27;
	                },
	                interaction: {
	                    // email: &#x27;&#x27;,
	                    // name: &#x27;&#x27;
	                },
	                chat: {
	                    // subject: ''
	                },
	                customer: {
	                    // company: &#x27;&#x27;,
	                    // desc: &#x27;&#x27;,
	                    // first_name: &#x27;&#x27;,
	                    // last_name: &#x27;&#x27;,
	                    // locale_code: &#x27;&#x27;,
	                    // title: &#x27;&#x27;,
	                    // custom_loginid: &#x27;&#x27;
	                }
	            }
	        }).render();
	    };

	    var change_chat_icon = function change_chat_icon() {
	        // desk.com change icon - crude way
	        var len = $('#live-chat-icon').length;
	        if (len > 0) {
	            (function () {
	                var timer = null;
	                var updateIcon = function updateIcon() {
	                    var image_url = url_for_static('images/pages/contact/chat-icon.svg');
	                    var desk_widget = $('.a-desk-widget');
	                    var image_str = desk_widget.css('background-image');
	                    if (image_str) {
	                        desk_widget.css({
	                            'background-image': 'url("' + image_url + '")',
	                            'background-size': 'contain',
	                            'min-width': 50,
	                            'min-height': 50,
	                            width: 'auto'
	                        });

	                        if (image_str.match(/live-chat-icon/g)) {
	                            clearInterval(timer);
	                        }
	                    }
	                    desk_widget.removeAttr('onmouseover onmouseout');
	                };
	                timer = setInterval(updateIcon, 500);
	            })();
	        }
	    };

	    return {
	        init: init
	    };
	}();

	module.exports = {
	    Contact: Contact
	};

/***/ },
/* 555 */
/***/ function(module, exports) {

	"use strict";

	/*!
	loadCSS: load a CSS file asynchronously.
	[c]2014 @scottjehl, Filament Group, Inc.
	Licensed MIT
	*/
	function loadCSS(href, before, media) {
		"use strict";
		// Arguments explained:
		// `href` is the URL for your CSS file.
		// `before` optionally defines the element we'll use as a reference for injecting our <link>
		// By default, `before` uses the first <script> element in the page.
		// However, since the order in which stylesheets are referenced matters, you might need a more specific location in your document.
		// If so, pass a different reference element to the `before` argument and it'll insert before that instead
		// note: `insertBefore` is used instead of `appendChild`, for safety re: http://www.paulirish.com/2011/surefire-dom-element-insertion/

		var ss = window.document.createElement("link");
		var ref = before || window.document.getElementsByTagName("script")[0];
		ss.rel = "stylesheet";
		ss.href = href;
		// temporarily, set media to something non-matching to ensure it'll fetch without blocking render
		ss.media = "only x";
		// inject link
		ref.parentNode.insertBefore(ss, ref);
		// set media back to `all` so that the styleshet applies once it loads
		setTimeout(function () {
			ss.media = media || "all";
		});
		return ss;
	}

	module.exports = {
		loadCSS: loadCSS
	};

/***/ },
/* 556 */
/***/ function(module, exports) {

	"use strict";

	/*! loadJS: load a JS file asynchronously. [c]2014 @scottjehl, Filament Group, Inc. (Based on http://goo.gl/REQGQ by Paul Irish). Licensed MIT */
	function loadJS(src) {
		"use strict";

		var ref = window.document.getElementsByTagName("script")[0];
		var script = window.document.createElement("script");
		script.src = src;
		ref.parentNode.insertBefore(script, ref);
		return script;
	}

	module.exports = {
		loadJS: loadJS
	};

/***/ },
/* 557 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var email_rot13 = __webpack_require__(420).email_rot13;

	var Careers = function () {
	    var display_career_email = function display_career_email() {
	        $('#hr_contact_eaddress').html(email_rot13('<n uers=\"znvygb:ue@ovanel.pbz\" ery=\"absbyybj\">ue@ovanel.pbz</n>'));
	    };
	    return {
	        display_career_email: display_career_email
	    };
	}();

	module.exports = {
	    Careers: Careers
	};

/***/ },
/* 558 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var VerifyEmail = __webpack_require__(559).VerifyEmail;
	var Client = __webpack_require__(305).Client;

	var Home = function () {
	    var init = function init() {
	        if (!Client.redirect_if_login()) {
	            check_login_hide_signup();
	            VerifyEmail();
	        }
	    };
	    var check_login_hide_signup = function check_login_hide_signup() {
	        if (Client.get_boolean('is_logged_in')) {
	            $('#verify-email-form').remove();
	            $('.break').attr('style', 'margin-bottom:1em');
	        }
	    };
	    return {
	        init: init
	    };
	}();

	module.exports = {
	    Home: Home
	};

/***/ },
/* 559 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Content = __webpack_require__(426).Content;
	var ValidateV2 = __webpack_require__(560).ValidateV2;
	var url_for = __webpack_require__(306).url_for;
	var bind_validation = __webpack_require__(562).bind_validation;
	var localize = __webpack_require__(423).localize;

	var VerifyEmail = function VerifyEmail() {
	    Content.populate();
	    var clients_country = localStorage.getItem('clients_country');

	    var form = $('#verify-email-form')[0];
	    if (!form) {
	        return;
	    }

	    var handler = function handler(msg) {
	        var response = JSON.parse(msg.data);
	        if (!response) return;

	        var type = response.msg_type;
	        var error = response.error;
	        if (type === 'verify_email' && !error) {
	            window.location.href = url_for('new_account/virtualws');
	            return;
	        }
	        if (!error || !error.message) return;
	        $('#signup_error').css({ display: 'inline-block' }).text(error.message);
	    };

	    var openAccount = function openAccount(email) {
	        BinarySocket.init({ onmessage: handler });
	        BinarySocket.send({ verify_email: email, type: 'account_opening' });
	    };

	    bind_validation.simple(form, {
	        schema: {
	            email: [ValidateV2.required, ValidateV2.email]
	        },
	        stop: function stop(info) {
	            $('#signup_error').text('');
	            info.errors.forEach(function (err) {
	                $('#signup_error').css({ display: 'block' }).text(err.err);
	            });
	        },
	        submit: function submit(ev, info) {
	            ev.preventDefault();
	            if (info.errors.length) return;
	            if (clients_country !== 'my' || /@binary\.com$/.test(info.values.email)) {
	                openAccount(info.values.email);
	            } else {
	                $('#verify-email-form > div').html('<p class="notice-msg center-text">' + localize('Sorry, account signup is not available in your country. Please contact <a href="[_1]">customer support</a> for more information.', [url_for('contact')]) + '</p>');
	            }
	        }
	    });
	};

	module.exports = {
	    VerifyEmail: VerifyEmail
	};

/***/ },
/* 560 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

	var template = __webpack_require__(419).template;
	var moment = __webpack_require__(308);
	var dv = __webpack_require__(561);
	var Content = __webpack_require__(426).Content;
	var localize = __webpack_require__(423).localize;

	var ValidateV2 = function () {
	    var err = function err() {
	        return Content.errorMessage.apply(Content, arguments);
	    };

	    // We don't have access to the localised messages at the init-time
	    // of this module. Solution: delay execution with 'unwrappables'.
	    // Objects that have an `.unwrap` method.
	    //
	    // unwrap({unwrap: () => 1}) == 1
	    // unwrap(1) == 1
	    //
	    var _unwrap = function _unwrap(a) {
	        return a.unwrap ? a.unwrap() : a;
	    };

	    var local = function local(value) {
	        return { unwrap: function unwrap() {
	                return localize(value);
	            } };
	    };

	    var localKey = function localKey(value) {
	        return { unwrap: function unwrap() {
	                return Content.localize()[value];
	            } };
	    };

	    var msg = function msg() {
	        var args = [].slice.call(arguments);
	        return { unwrap: function unwrap() {
	                return err.apply(undefined, _toConsumableArray(args.map(_unwrap)));
	            } };
	    };

	    var check = function check(fn, error) {
	        return function (value) {
	            return fn(value) ? dv.ok(value) : dv.fail(_unwrap(error));
	        };
	    };

	    // TEST THESE
	    var validEmail = function validEmail(email) {
	        var regexp = /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,63}$/;
	        return regexp.test(email);
	    };

	    var notEmpty = function notEmpty(value) {
	        return value.length > 0;
	    };

	    var validPasswordLength = function validPasswordLength(value) {
	        return value.length >= 6 && value.length <= 25;
	    };

	    var validPasswordChars = function validPasswordChars(value) {
	        return (/[0-9]+/.test(value) && /[A-Z]+/.test(value) && /[a-z]+/.test(value)
	        );
	    };

	    var noSymbolsInPassword = function noSymbolsInPassword(value) {
	        return (/^[!-~]+$/.test(value)
	        );
	    };

	    var validToken = function validToken(value) {
	        return value.length === 48;
	    };

	    // CAN BE USED IN UI
	    var required = check(notEmpty, msg('req'));
	    var email = check(validEmail, msg('valid', local('email address')));
	    var token = check(validToken, msg('valid', local('verification token')));
	    var password = function password(value) {
	        return dv.first(value, [password.len, password.allowed, password.symbols]);
	    };

	    password.len = check(validPasswordLength, msg('range', '6-25'));
	    password.allowed = check(validPasswordChars, local('Password should have lower and uppercase letters with numbers.'));
	    password.symbols = check(noSymbolsInPassword, msg('valid', localKey('textPassword')));

	    var regex = function regex(regexp, allowed) {
	        return function (str) {
	            return regexp.test(str) ? dv.ok(str) : dv.fail(err('reg', allowed));
	        };
	    };

	    var lengthRange = function lengthRange(start, end) {
	        var range = template('([_1]-[_2])', [start, end]);
	        return function (str) {
	            var len = str.length;
	            return len >= start && len <= end ? dv.ok(str) : dv.fail(err('range', range));
	        };
	    };

	    var momentFmt = function momentFmt(format, error) {
	        return function (str) {
	            var date = moment(str, format, true);
	            return date.isValid() ? dv.ok(date) : dv.fail(error);
	        };
	    };

	    return {
	        err: err,
	        momentFmt: momentFmt,
	        required: required,
	        password: password,
	        email: email,
	        token: token,
	        regex: regex,
	        lengthRange: lengthRange
	    };
	}();

	module.exports = {
	    ValidateV2: ValidateV2
	};

/***/ },
/* 561 */
/***/ function(module, exports) {

	"use strict";

	var dv = function () {
	  function ok(v) {
	    if (!(this instanceof ok)) return new ok(v);
	    this.value = v;
	  }

	  ok.prototype = {
	    isOk: true,
	    then: function then(f) {
	      return f(this.value);
	    },
	    fmap: function fmap(f) {
	      return this;
	    },
	    ap: function ap(o) {
	      return o.isOk ? this : o;
	    }
	  };

	  function fail(v) {
	    if (!(this instanceof fail)) return new fail(v);
	    this.value = [v];
	  }

	  fail.of = function (v) {
	    var f = fail();
	    f.value = v;
	    return f;
	  };

	  fail.prototype = {
	    isOk: false,
	    then: function then(f) {
	      return this;
	    },
	    fmap: function fmap(f) {
	      return fail.of(this.value.map(f));
	    },
	    ap: function ap(o) {
	      return o.isOk ? this : fail.of(this.value.concat(o.value));
	    }
	  };

	  function combine(v, xs) {
	    return xs.reduce(function (prev, curr) {
	      return prev.ap(curr);
	    }, ok(v));
	  }

	  function check(fn, err) {
	    return function (v) {
	      return fn.apply(this, arguments) ? ok(v) : fail(err);
	    };
	  }

	  function first(v, xs) {
	    var u = ok(v);
	    for (var i = 0; i < xs.length; i++) {
	      u = u.then(xs[i]);
	      if (!u.isOk) break;
	    }
	    return u;
	  }

	  return {
	    ok: ok,
	    fail: fail,
	    combine: combine,
	    check: check,
	    first: first
	  };
	}();

	module.exports = dv;

/***/ },
/* 562 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var done_typing = __webpack_require__(563).done_typing;
	var formToObj = __webpack_require__(564).formToObj;
	var dv = __webpack_require__(561);
	var localize = __webpack_require__(423).localize;

	var ValidationUI = {
	    clear: function clear() {
	        $('.errorfield[data-is-error-field]').remove();
	    },
	    draw: function draw(selector, message) {
	        var $parent = $(selector).parent();
	        var $p = $('<p/>', {
	            class: 'errorfield',
	            text: localize(message)
	        });
	        $p.attr('data-is-error-field', true);
	        $parent.append($p);
	    }
	};

	/**
	 * Replaces error messages returned by a validator by the given
	 * error message `err`. Only use this on validators with one
	 * error message.
	 */
	function customError(fn, err) {
	    return function (value) {
	        var rv = fn(value);
	        if (!rv.isOk) rv.value = [err];
	        return rv;
	    };
	}

	function withContext(ctx) {
	    return function (msg) {
	        return {
	            ctx: ctx,
	            err: msg
	        };
	    };
	}

	/**
	 * Validates data given a schema.
	 *
	 * @param data    An object.
	 * @param schema  An object in the form {key: Array}, where the Array
	 *                contains functions which accept two arguments- the current
	 *                value and the objet being validated, and return either dv.ok
	 *                or dv.fail.
	 * @returns {Object}  {errors: errors, values: values, raw: data} where
	 *                    errors is an array of {ctx: key, err: message} objects,
	 *                    values is an object with the collected successful values,
	 *                    raw is the data passed in.
	 */
	function validate_object(data, schema) {
	    var keys = Object.keys(schema),
	        values = {};
	    var rv = dv.combine([], keys.map(function (ctx) {
	        var res = dv.ok(data[ctx]);
	        var fns = schema[ctx];
	        for (var i = 0; i < fns.length; i++) {
	            res = fns[i](res.value, data);
	            if (!res.isOk) return res.fmap(withContext(ctx));
	        }
	        values[ctx] = res.value;
	        return res;
	    }));
	    return {
	        errors: rv.value,
	        values: values,
	        raw: data
	    };
	}

	function stripTrailing(name) {
	    return (name || '').replace(/\[]$/, '');
	}

	/**
	 * Helper for enabling form validation when the user starts and stops typing.
	 *
	 * @param form             A form Element (not JQuery object).
	 * @param config           Configuration object.
	 * @param config.extract   Returns the current data on the form.
	 * @param config.validate  Receives the current data returns an object with
	 *                         {values: Object, errors: [{ctx: key, err: msg}...]}.
	 * @param config.stop      Called when the user stops typing with the return
	 *                         value of `config.validate`.
	 * @param config.submit    Called on submit event with event and validation state.
	 */
	function bind_validation(form, config) {
	    var extract = config.extract,
	        validate = config.validate,
	        stop = config.stop,
	        submit = config.submit,
	        seen = {};

	    var onStart = function onStart(ev) {
	        seen[stripTrailing(ev.target.name)] = true;
	    };

	    var onStop = function onStop() {
	        var data = extract(),
	            validation = validate(data);
	        validation.errors = validation.errors.filter(function (err) {
	            return seen[err.ctx];
	        });
	        stop(validation);
	    };

	    form.addEventListener('submit', function (ev) {
	        var data = extract(),
	            validation = validate(data);
	        stop(validation);
	        submit(ev, validation);
	    });

	    form.addEventListener('change', function (ev) {
	        onStart(ev);
	        onStop();
	    });
	    done_typing(form, {
	        start: onStart,
	        stop: onStop
	    });
	}

	/**
	 * Generates (and binds) a config for the given form.
	 *
	 * @param form  Form element.
	 * @param opts  Config object.
	 * @param opts.extract   Optional. Defaults to `formToObj(form)`.
	 * @param opts.submit    Required.
	 * @param opts.validate  Optional. If you do not specify this then opts.schema
	 *                       is required.
	 * @param opts.schema    See above.
	 * @param opts.stop      Optional.
	 *
	 */
	bind_validation.simple = function (form, opts) {
	    bind_validation(form, {
	        submit: opts.submit,
	        extract: opts.extract || function () {
	            return formToObj(form);
	        },
	        validate: opts.validate || function (data) {
	            return validate_object(data, opts.schema);
	        },
	        stop: opts.stop || function (validation) {
	            ValidationUI.clear();
	            validation.errors.forEach(function (err) {
	                var sel = '[name=' + stripTrailing(err.ctx) + ']';
	                ValidationUI.draw(sel, err.err);
	            });
	        }
	    });
	};

	module.exports = {
	    ValidationUI: ValidationUI,
	    customError: customError,
	    validate_object: validate_object,
	    bind_validation: bind_validation
	};

/***/ },
/* 563 */
/***/ function(module, exports) {

	'use strict';

	function done_typing(elem, config) {
	    var onStart = config.start || function () {};
	    var onStop = config.stop || function () {};
	    var delay = config.delay || 200;

	    var stopped = true;
	    var timeout = null;

	    function down(ev) {
	        if (stopped) {
	            onStart(ev);
	            stopped = false;
	        }
	        clearTimeout(timeout);
	    }

	    function up(ev) {
	        timeout = setTimeout(function () {
	            timeout = null;
	            stopped = true;
	            onStop(ev);
	        }, delay);
	    }

	    elem.addEventListener('keydown', down);
	    elem.addEventListener('keyup', up);
	};

	module.exports = {
	    done_typing: done_typing
	};

/***/ },
/* 564 */
/***/ function(module, exports) {

	'use strict';

	function formToObj(form) {
	  var fields = formToArr(form);

	  fields.sort(function (a, b) {
	    return a.name.localeCompare(b.name);
	  });

	  return fields.reduce(function (obj, field) {
	    addProp(obj, field.name, field.value);
	    return obj;
	  }, {});

	  function formToArr(form) {
	    var inputs = form.querySelectorAll('input, textarea, select, [contenteditable=true]');
	    var arr = [];

	    for (var i = 0; i < inputs.length; ++i) {
	      var input = inputs[i],
	          name = input.name || input.getAttribute('data-name'),
	          val = input.value;

	      if (!name || (input.type === 'checkbox' || input.type === 'radio') && !input.checked) {
	        continue;
	      }

	      if (input.getAttribute('contenteditable') === 'true') {
	        val = input.innerHTML;
	      }

	      arr.push({
	        name: name,
	        value: val
	      });
	    }

	    return arr;
	  }

	  function addProp(o, prop, val) {
	    var props = prop.split('.');
	    var lastProp = props.length - 1;

	    props.reduce(function (obj, prop, i) {
	      return setProp(obj, prop, i === lastProp ? val : {});
	    }, o);
	  }

	  function setProp(obj, name, val) {
	    if (name.slice(-2) === '[]') {
	      makeArr(obj, name).push(val);
	    } else if (obj[name]) {
	      return obj[name];
	    } else if (name[name.length - 1] === ']') {
	      var arr = makeArr(obj, name);

	      if (arr.prevName === name) {
	        return arr[arr.length - 1];
	      }

	      arr.push(val);
	      arr.prevName = name;
	    } else {
	      obj[name] = val;
	    }

	    return val;
	  }

	  function makeArr(obj, name) {
	    var arrName = name.replace(/\[\d*\]/, '');
	    return obj[arrName] || (obj[arrName] = []);
	  }
	}

	module.exports = {
	  formToObj: formToObj
	};

/***/ },
/* 565 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Scroll = __webpack_require__(552).Scroll;
	var Client = __webpack_require__(305).Client;

	var WhyUs = function () {
	    var init = function init() {
	        Scroll.sidebar_scroll($('.why-us'));
	        hide_if_logged_in();
	    };

	    var hide_if_logged_in = function hide_if_logged_in() {
	        if (Client.get_boolean('is_logged_in')) {
	            $('.client_logged_out').remove();
	        }
	    };

	    return {
	        init: init
	    };
	}();

	module.exports = {
	    WhyUs: WhyUs
	};

/***/ },
/* 566 */
/***/ function(module, exports) {

	'use strict';

	var CharityPage = function () {
	    var timeout = 5000;
	    var gallery = void 0,
	        images = void 0,
	        interval = null;
	    var onLoad = function onLoad() {
	        var switchPicture = function switchPicture() {
	            images = gallery.find('img');
	            if (images.length > 1) {
	                images.eq(images.length - 1).prependTo(gallery);
	            }
	        };
	        gallery = $('.gallery');
	        interval = window.setInterval(switchPicture, timeout);
	    };
	    var onUnload = function onUnload() {
	        if (interval) {
	            window.clearInterval(interval);
	            interval = null;
	        }
	    };
	    return {
	        onLoad: onLoad,
	        onUnload: onUnload
	    };
	}();

	module.exports = {
	    CharityPage: CharityPage
	};

/***/ },
/* 567 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var url = __webpack_require__(306).url;

	var TermsAndConditions = function () {
	    var init = function init() {
	        var selected_tab = url.params_hash().selected_tab;
	        if (selected_tab) {
	            $('li#' + selected_tab + ' a').click();
	        }
	        var year = document.getElementsByClassName('currentYear');
	        for (var i = 0; i < year.length; i++) {
	            year[i].innerHTML = new Date().getFullYear();
	        }
	    };

	    return {
	        init: init
	    };
	}();

	module.exports = {
	    TermsAndConditions: TermsAndConditions
	};

/***/ },
/* 568 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var objectNotEmpty = __webpack_require__(419).objectNotEmpty;
	var Cookies = __webpack_require__(301);
	var getLanguage = __webpack_require__(303).getLanguage;
	var GTM = __webpack_require__(430).GTM;
	var Client = __webpack_require__(305).Client;
	var url_for = __webpack_require__(306).url_for;
	var default_redirect_url = __webpack_require__(306).default_redirect_url;

	var LoggedInHandler = function () {
	    'use strict';

	    var init = function init() {
	        parent.window.is_logging_in = 1; // this flag is used in base.js to prevent auto-reloading this page
	        var redirect_url = void 0;
	        try {
	            var tokens = storeTokens();
	            var loginid = Cookies.get('loginid');

	            if (!loginid) {
	                (function () {
	                    // redirected to another domain (e.g. github.io) so those cookie are not accessible here
	                    var loginids = Object.keys(tokens);
	                    var loginid_list = '';
	                    loginids.map(function (id) {
	                        loginid_list += (loginid_list ? '+' : '') + id + ':' + (/^V/i.test(id) ? 'V' : 'R') + ':E'; // since there is not any data source to check, so assume all are enabled, disabled accounts will be handled on authorize
	                    });
	                    loginid = loginids[0];
	                    // set cookies
	                    Client.set_cookie('loginid', loginid);
	                    Client.set_cookie('loginid_list', loginid_list);
	                })();
	            }
	            Client.set_cookie('login', tokens[loginid]);

	            // set flags
	            if (!$('body').hasClass('BlueTopBack')) localStorage.setItem('risk_classification', 'check');
	            Client.set_check_tnc();
	            GTM.set_login_flag();

	            // redirect url
	            redirect_url = sessionStorage.getItem('redirect_url');
	            sessionStorage.removeItem('redirect_url');
	        } catch (e) {
	            console.log('storage is not supported');
	        }

	        // redirect back
	        var set_default = true;
	        if (redirect_url) {
	            var do_not_redirect = ['reset_passwordws', 'lost_passwordws', 'change_passwordws', 'home'];
	            var reg = new RegExp(do_not_redirect.join('|'), 'i');
	            if (!reg.test(redirect_url) && url_for('') !== redirect_url) {
	                set_default = false;
	            }
	        }
	        if (set_default) {
	            redirect_url = default_redirect_url();
	            var lang_cookie = Cookies.get('language'),
	                language = getLanguage();
	            if (lang_cookie && lang_cookie !== language) {
	                redirect_url = redirect_url.replace(new RegExp('\/' + language + '\/', 'i'), '/' + lang_cookie.toLowerCase() + '/');
	            }
	        }
	        document.getElementById('loading_link').setAttribute('href', redirect_url);
	        window.location.href = redirect_url;
	    };

	    var storeTokens = function storeTokens() {
	        // Parse hash for loginids and tokens returned by OAuth
	        var hash = (/acct1/i.test(window.location.hash) ? window.location.hash : window.location.search).substr(1).split('&'); // to maintain compatibility till backend change released
	        var tokens = {};
	        for (var i = 0; i < hash.length; i += 2) {
	            var loginid = getHashValue(hash[i], 'acct'),
	                token = getHashValue(hash[i + 1], 'token');
	            if (loginid && token) {
	                tokens[loginid] = token;
	            }
	        }
	        if (objectNotEmpty(tokens)) {
	            Client.set_value('tokens', JSON.stringify(tokens));
	        }
	        return tokens;
	    };

	    var getHashValue = function getHashValue(source, key) {
	        var match = new RegExp('^' + key);
	        return source && source.length > 0 ? match.test(source.split('=')[0]) ? source.split('=')[1] : '' : '';
	    };

	    return {
	        init: init
	    };
	}();

	module.exports = {
	    LoggedInHandler: LoggedInHandler
	};

/***/ },
/* 569 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var AccountTransferWS = __webpack_require__(570).AccountTransferWS;
	var Cashier = __webpack_require__(428).Cashier;
	var ForwardWS = __webpack_require__(571).ForwardWS;
	var PaymentAgentListWS = __webpack_require__(572).PaymentAgentListWS;
	var PaymentAgentWithdrawWS = __webpack_require__(435).PaymentAgentWithdrawWS;
	var AssetIndexUI = __webpack_require__(514).AssetIndexUI;
	var MarketTimesUI = __webpack_require__(517).MarketTimesUI;
	var AuthenticateWS = __webpack_require__(573).AuthenticateWS;
	var PasswordWS = __webpack_require__(574).PasswordWS;
	var PaymentAgentTransferSocket = __webpack_require__(575).PaymentAgentTransferSocket;
	var PortfolioWS = __webpack_require__(462).PortfolioWS;
	var ProfitTableWS = __webpack_require__(498).ProfitTableWS;
	var APITokenWS = __webpack_require__(579).APITokenWS;
	var AuthorisedApps = __webpack_require__(581).AuthorisedApps;
	var UserConnections = __webpack_require__(585).UserConnections;
	var FinancialAssessmentws = __webpack_require__(433).FinancialAssessmentws;
	var IPHistoryWS = __webpack_require__(589).IPHistoryWS;
	var Limits = __webpack_require__(593).Limits;
	var SelfExclusionWS = __webpack_require__(596).SelfExclusionWS;
	var SettingsDetailsWS = __webpack_require__(597).SettingsDetailsWS;
	var SecurityWS = __webpack_require__(598).SecurityWS;
	var SettingsWS = __webpack_require__(599).SettingsWS;
	var StatementWS = __webpack_require__(504).StatementWS;
	var TopUpVirtualWS = __webpack_require__(600).TopUpVirtualWS;
	var LostPasswordWS = __webpack_require__(601).LostPasswordWS;
	var FinancialAccOpening = __webpack_require__(603).FinancialAccOpening;
	var JapanAccOpening = __webpack_require__(607).JapanAccOpening;
	var RealAccOpening = __webpack_require__(610).RealAccOpening;
	var VirtualAccOpening = __webpack_require__(613).VirtualAccOpening;
	var ResetPasswordWS = __webpack_require__(615).ResetPasswordWS;
	var TNCApproval = __webpack_require__(437).TNCApproval;
	var TradePage = __webpack_require__(465).TradePage;
	var TradePage_Beta = __webpack_require__(512).TradePage_Beta;
	var MBTradePage = __webpack_require__(531).MBTradePage;
	var ViewPopupWS = __webpack_require__(438).ViewPopupWS;
	var KnowledgeTest = __webpack_require__(617).KnowledgeTest;
	var pjax_config_page_require_auth = __webpack_require__(483).pjax_config_page_require_auth;
	var pjax_config_page = __webpack_require__(483).pjax_config_page;

	pjax_config_page('/trading', function () {
	    return {
	        onLoad: function onLoad() {
	            if (/\/trading\.html/.test(window.location.pathname)) TradePage.onLoad();
	        },
	        onUnload: function onUnload() {
	            if (/\/trading\.html/.test(window.location.pathname)) TradePage.onUnload();
	        }
	    };
	});

	pjax_config_page('/trading_beta', function () {
	    return {
	        onLoad: function onLoad() {
	            TradePage_Beta.onLoad();
	        },
	        onUnload: function onUnload() {
	            TradePage_Beta.onUnload();
	        }
	    };
	});

	pjax_config_page('/multi_barriers_trading', function () {
	    return {
	        onLoad: function onLoad() {
	            MBTradePage.onLoad();
	        },
	        onUnload: function onUnload() {
	            MBTradePage.onUnload();
	        }
	    };
	});

	pjax_config_page_require_auth('user/profit_table', function () {
	    return {
	        onLoad: function onLoad() {
	            ProfitTableWS.init();
	        },
	        onUnload: function onUnload() {
	            ProfitTableWS.clean();
	        }
	    };
	});

	pjax_config_page_require_auth('user/statement', function () {
	    return {
	        onLoad: function onLoad() {
	            StatementWS.init();
	            StatementWS.attachDatePicker();
	        },
	        onUnload: function onUnload() {
	            StatementWS.clean();
	        }
	    };
	});

	pjax_config_page('resources/asset_indexws', function () {
	    return {
	        onLoad: function onLoad() {
	            AssetIndexUI.init();
	        }
	    };
	});

	pjax_config_page('resources/market_timesws', function () {
	    return {
	        onLoad: function onLoad() {
	            MarketTimesUI.init();
	        }
	    };
	});

	pjax_config_page_require_auth('user/portfoliows', function () {
	    return {
	        onLoad: function onLoad() {
	            PortfolioWS.onLoad();
	        },
	        onUnload: function onUnload() {
	            PortfolioWS.onUnload();
	        }
	    };
	});

	pjax_config_page_require_auth('user/security/api_tokenws', function () {
	    return {
	        onLoad: function onLoad() {
	            APITokenWS.init();
	        }
	    };
	});

	pjax_config_page_require_auth('user/security/self_exclusionws', function () {
	    return {
	        onLoad: function onLoad() {
	            SelfExclusionWS.init();
	        }
	    };
	});

	pjax_config_page_require_auth('user/security/cashier_passwordws', function () {
	    return {
	        onLoad: function onLoad() {
	            SecurityWS.init();
	        }
	    };
	});

	pjax_config_page_require_auth('account/account_transferws', function () {
	    return {
	        onLoad: function onLoad() {
	            AccountTransferWS.onLoad();
	        }
	    };
	});

	pjax_config_page('/cashier', function () {
	    return {
	        onLoad: function onLoad() {
	            Cashier.onLoad();
	        }
	    };
	});

	pjax_config_page('/cashier/payment_methods', function () {
	    return {
	        onLoad: function onLoad() {
	            Cashier.onLoadPaymentMethods();
	        }
	    };
	});

	pjax_config_page_require_auth('cashier/forwardws|cashier/epg_forwardws', function () {
	    return {
	        onLoad: function onLoad() {
	            ForwardWS.checkOnLoad();
	        }
	    };
	});

	pjax_config_page('payment_agent_listws', function () {
	    return {
	        onLoad: function onLoad() {
	            PaymentAgentListWS.onLoad();
	        }
	    };
	});

	pjax_config_page_require_auth('paymentagent/withdrawws', function () {
	    return {
	        onLoad: function onLoad() {
	            PaymentAgentWithdrawWS.checkOnLoad();
	        }
	    };
	});

	pjax_config_page_require_auth('user/authenticatews', function () {
	    return {
	        onLoad: function onLoad() {
	            AuthenticateWS.init();
	        }
	    };
	});

	pjax_config_page_require_auth('user/security/change_password', function () {
	    return {
	        onLoad: function onLoad() {
	            PasswordWS.initSocket();
	        }
	    };
	});

	pjax_config_page_require_auth('paymentagent/transferws', function () {
	    return {
	        onLoad: function onLoad() {
	            PaymentAgentTransferSocket.initSocket();
	        }
	    };
	});

	pjax_config_page_require_auth('user/security/authorised_appsws', function () {
	    return {
	        onLoad: function onLoad() {
	            AuthorisedApps.onLoad();
	        },
	        onUnload: function onUnload() {
	            AuthorisedApps.onUnload();
	        }
	    };
	});

	pjax_config_page_require_auth('user/security/connections', function () {
	    return {
	        onLoad: function onLoad() {
	            UserConnections.onLoad();
	        },
	        onUnload: function onUnload() {
	            UserConnections.onUnload();
	        }
	    };
	});

	pjax_config_page_require_auth('user/settings/assessmentws', function () {
	    return {
	        onLoad: function onLoad() {
	            FinancialAssessmentws.onLoad();
	        }
	    };
	});

	pjax_config_page_require_auth('user/security/iphistoryws', function () {
	    return {
	        onLoad: function onLoad() {
	            IPHistoryWS.onLoad();
	        },
	        onUnload: function onUnload() {
	            IPHistoryWS.onUnload();
	        }
	    };
	});

	pjax_config_page_require_auth('limitsws', function () {
	    return {
	        onLoad: function onLoad() {
	            Limits.onLoad();
	        },
	        onUnload: function onUnload() {
	            Limits.onUnload();
	        }
	    };
	});

	pjax_config_page_require_auth('settings/detailsws', function () {
	    return {
	        onLoad: function onLoad() {
	            SettingsDetailsWS.onLoad();
	        }
	    };
	});

	pjax_config_page_require_auth('settingsws|securityws', function () {
	    return {
	        onLoad: function onLoad() {
	            SettingsWS.onLoad();
	        }
	    };
	});

	pjax_config_page_require_auth('top_up_virtualws', function () {
	    return {
	        onLoad: function onLoad() {
	            TopUpVirtualWS.onLoad();
	        }
	    };
	});

	pjax_config_page('user/lost_passwordws', function () {
	    return {
	        onLoad: function onLoad() {
	            LostPasswordWS.onLoad();
	        }
	    };
	});

	pjax_config_page_require_auth('new_account/maltainvestws', function () {
	    return {
	        onLoad: function onLoad() {
	            FinancialAccOpening.init();
	        }
	    };
	});

	pjax_config_page('new_account/japanws', function () {
	    return {
	        onLoad: function onLoad() {
	            JapanAccOpening.init();
	        }
	    };
	});

	pjax_config_page('new_account/realws', function () {
	    return {
	        onLoad: function onLoad() {
	            RealAccOpening.init();
	        }
	    };
	});

	pjax_config_page('new_account/virtualws', function () {
	    return {
	        onLoad: function onLoad() {
	            VirtualAccOpening.onLoad();
	        }
	    };
	});

	pjax_config_page('user/reset_passwordws', function () {
	    return {
	        onLoad: function onLoad() {
	            ResetPasswordWS.init();
	        }
	    };
	});

	pjax_config_page_require_auth('tnc_approvalws', function () {
	    return {
	        onLoad: function onLoad() {
	            TNCApproval.onLoad();
	        }
	    };
	});

	pjax_config_page('profit_tablews|statementws|portfoliows|trading', function () {
	    return {
	        onLoad: function onLoad() {
	            $('#profit-table-ws-container, #statement-ws-container, #portfolio-table, #contract_confirmation_container').on('click', '.open_contract_detailsws', function (e) {
	                e.preventDefault();
	                ViewPopupWS.init(this);
	            });
	        }
	    };
	});

	pjax_config_page_require_auth('new_account/knowledge_testws', function () {
	    return {
	        onLoad: function onLoad() {
	            KnowledgeTest.init();
	        }
	    };
	});

/***/ },
/* 570 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var localize = __webpack_require__(423).localize;
	var Client = __webpack_require__(305).Client;

	var AccountTransferWS = function () {
	    'use strict';

	    var availableCurr = [];
	    var $form = void 0,
	        account_from = void 0,
	        account_to = void 0,
	        currType = void 0,
	        account_bal = void 0;

	    var init = function init() {
	        if (Client.redirect_if_is_virtual()) {
	            return;
	        }

	        $form = $('#account_transfer');
	        account_bal = 0;

	        BinarySocket.send({ transfer_between_accounts: '1', req_id: 4 });

	        $form.find('button').on('click', function (e) {
	            e.preventDefault();
	            e.stopPropagation();

	            if (!validateForm()) {
	                return;
	            }

	            var amt = $form.find('#acc_transfer_amount').val();
	            BinarySocket.send({
	                transfer_between_accounts: '1',
	                account_from: account_from,
	                account_to: account_to,
	                currency: currType,
	                amount: amt
	            });
	        });

	        $form.find('#transfer_account_transfer').on('change', function () {
	            $form.find('#invalid_amount').text('');
	            set_account_from_to();

	            BinarySocket.send({ payout_currencies: '1' });
	        });

	        $form.find('#acc_transfer_submit').on('click', function () {
	            var amount = $('#acc_transfer_amount').val();
	            if (!/^[0-9]+\.?[0-9]{0,2}$/.test(amount) || amount < 0.1) {
	                $('#invalid_amount').removeClass('invisible').show();
	                return false;
	            }
	            $('#acc_transfer_submit').submit();
	            return true;
	        });
	    };
	    var set_account_from_to = function set_account_from_to() {
	        var accounts = $('#transfer_account_transfer').find('option:selected').text();
	        var matches = accounts.split('(').filter(function (v) {
	            return v.indexOf(')') > -1;
	        }).map(function (value) {
	            return value.split(')')[0];
	        });

	        account_from = matches[0];
	        account_to = matches[1];

	        $.each(availableCurr, function (index, value) {
	            if (value.account === account_from) {
	                currType = value.currency;
	                account_bal = value.balance;
	            }
	        });

	        $form.find('#currencyType').html(currType);
	    };
	    var validateForm = function validateForm() {
	        var amt = $form.find('#acc_transfer_amount').val();
	        var isValid = true;

	        if (amt.length <= 0) {
	            $form.find('#invalid_amount').text(localize('Invalid amount. Minimum transfer amount is 0.10, and up to 2 decimal places.'));
	            isValid = false;
	        }

	        return isValid;
	    };

	    var apiResponse = function apiResponse(response) {
	        var type = response.msg_type;
	        if (type === 'authorize') {
	            init();
	        } else if (type === 'transfer_between_accounts' || type === 'error' && 'transfer_between_accounts' in response.echo_req) {
	            responseMessage(response);
	        } else if (type === 'payout_currencies' || type === 'error' && 'payout_currencies' in response.echo_req) {
	            responseMessage(response);
	        }
	    };

	    var responseMessage = function responseMessage(response) {
	        if ('error' in response) {
	            if ('message' in response.error) {
	                if ($('#transfer_account_transfer').find('option').length > 0) {
	                    $form.removeClass('invisible');
	                    $form.find('#invalid_amount').text(localize(response.error.message));
	                } else {
	                    $('#client_message').removeClass('invisible').find('p').html(localize(response.error.message));
	                    $('#success_form').addClass('invisible');
	                    $form.addClass('invisible');
	                }
	                return false;
	            }

	            return false;
	        } else if ('transfer_between_accounts' in response) {
	            if (response.req_id === 5) {
	                $.each(response.accounts, function (key, value) {
	                    $form.addClass('invisible');
	                    $('#success_form').removeClass('invisible');
	                    $('#client_message').addClass('invisible');

	                    if (value.loginid === account_from) {
	                        $('#loginid_1').html(value.loginid);
	                        $('#balance_1').html(value.balance);
	                    } else if (value.loginid === account_to) {
	                        $('#loginid_2').html(value.loginid);
	                        $('#balance_2').html(value.balance);
	                    }
	                });
	            } else if (response.req_id === 4) {
	                var _ret = function () {
	                    $form.removeClass('invisible');
	                    var secondacct = void 0,
	                        firstacct = void 0,
	                        str = void 0,
	                        optionValue = void 0,
	                        selectedIndex = -1;

	                    $.each(response.accounts, function (index, value) {
	                        var currObj = {};

	                        if ($.isEmptyObject(firstacct)) {
	                            firstacct = value.loginid;
	                            currObj.account = value.loginid;
	                            currObj.currency = value.currency;
	                            currObj.balance = value.balance;

	                            if (value.balance > 0 && selectedIndex < 0) {
	                                selectedIndex = index;
	                            }

	                            availableCurr.push(currObj);
	                        } else {
	                            secondacct = value.loginid;
	                            str = localize('from account (' + firstacct + ') to account (' + secondacct + ')');
	                            optionValue = firstacct + '_to_' + secondacct;
	                            $form.find('#transfer_account_transfer').append($('<option></option>').attr('value', optionValue).text(str));
	                            str = localize('from account (' + secondacct + ') to account (' + firstacct + ')');
	                            optionValue = secondacct + '_to_' + firstacct;
	                            $form.find('#transfer_account_transfer').append($('<option></option>').attr('value', optionValue).text(str));

	                            currObj.account = value.loginid;
	                            currObj.currency = value.currency;
	                            currObj.balance = value.balance;

	                            availableCurr.push(currObj);

	                            firstacct = {};

	                            if (selectedIndex < 0 && value.balance) {
	                                selectedIndex = index;
	                            }
	                        }

	                        if ($.isEmptyObject(firstacct) === false && $.isEmptyObject(secondacct) === false) {
	                            str = localize('from account (' + secondacct + ') to account (' + firstacct + ')');
	                            optionValue = secondacct + '_to_' + firstacct;
	                            $form.find('#transfer_account_transfer').append($('<option></option>').attr('value', optionValue).text(str));
	                        }
	                        secondacct = {};

	                        if (value.balance <= 0) {
	                            $form.find('#transfer_account_transfer option:last').remove();
	                        } else if (selectedIndex < 0) {
	                            selectedIndex = index;
	                        }
	                    });

	                    for (var i = 0; i < selectedIndex; i++) {
	                        $form.find('#transfer_account_transfer option').eq(i).remove();
	                    }

	                    if (selectedIndex >= 0) {
	                        $form.find('#transfer_account_transfer option').eq(selectedIndex).attr('selected', 'selected');
	                    }

	                    set_account_from_to();

	                    if (account_bal <= 0 && response.accounts.length > 1) {
	                        $('#client_message').removeClass('invisible');
	                        $('#success_form').addClass('invisible');
	                        $form.addClass('invisible');
	                        return {
	                            v: false
	                        };
	                    } else if (account_to === undefined || account_from === undefined || $.isEmptyObject(account_to)) {
	                        $('#client_message').removeClass('invisible').find('p').html(localize('The account transfer is unavailable for your account.'));
	                        $('#success_form').addClass('invisible');
	                        $form.addClass('invisible');
	                        return {
	                            v: false
	                        };
	                    }

	                    BinarySocket.send({ payout_currencies: '1' });
	                }();

	                if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
	            } else {
	                BinarySocket.send({
	                    transfer_between_accounts: '1',
	                    req_id: 5
	                });
	            }
	        }
	        return true;
	    };

	    var onLoad = function onLoad() {
	        BinarySocket.init({
	            onmessage: function onmessage(msg) {
	                var response = JSON.parse(msg.data);
	                if (response) {
	                    AccountTransferWS.apiResponse(response);
	                }
	            }
	        });

	        if (Client.get_boolean('is_virtual')) {
	            AccountTransferWS.init();
	        }
	    };

	    return {
	        init: init,
	        apiResponse: apiResponse,
	        onLoad: onLoad
	    };
	}();

	module.exports = {
	    AccountTransferWS: AccountTransferWS
	};

/***/ },
/* 571 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var template = __webpack_require__(419).template;
	var Validate = __webpack_require__(425).Validate;
	var Content = __webpack_require__(426).Content;
	var localize = __webpack_require__(423).localize;
	var Client = __webpack_require__(305).Client;
	var url_for = __webpack_require__(306).url_for;
	var appendTextValueChild = __webpack_require__(420).appendTextValueChild;
	var elementInnerHtml = __webpack_require__(420).elementInnerHtml;

	var ForwardWS = function () {
	    var init = function init(cashier_password) {
	        Content.populate();

	        var submit_currency = document.getElementById('submit-currency'),
	            submit_verification = document.getElementById('submit-verification'),
	            submit_ukgc_funds_protection = document.getElementById('submit-ukgc-funds-protection');

	        submit_currency.addEventListener('click', function () {
	            submit_currency.setAttribute('disabled', 'disabled');
	            BinarySocket.send({ set_account_currency: $('#select-currency').val() });
	        });

	        submit_verification.addEventListener('click', function () {
	            var verification_token = document.getElementById('verification-token').value,
	                verification_error = document.getElementById('verification-error');
	            if (!Validate.errorMessageToken(verification_token, verification_error)) {
	                submit_verification.setAttribute('disabled', 'disabled');
	                getCashierURL(verification_token);
	            }
	        });

	        submit_ukgc_funds_protection.addEventListener('click', function () {
	            submit_ukgc_funds_protection.setAttribute('disabled', 'disabled');
	            BinarySocket.send({
	                tnc_approval: 1,
	                ukgc_funds_protection: 1
	            });
	        });

	        initDepositOrWithdraw(cashier_password);
	    };

	    var initDepositOrWithdraw = function initDepositOrWithdraw(cashier_password) {
	        if (cashier_password === 1) {
	            ForwardWS.showMessage('cashier-locked-message');
	            sessionStorage.setItem('cashier_lock_redirect', window.location.href);
	            return;
	        }
	        var cashier_type = ForwardWS.getCashierType();
	        if (cashier_type === 'withdraw') {
	            initWithdrawForm();
	        } else if (cashier_type === 'deposit') {
	            initDepositForm();
	        }
	    };

	    var initWithdrawForm = function initWithdrawForm() {
	        BinarySocket.send({
	            verify_email: Client.get_value('email'),
	            type: 'payment_withdraw'
	        });
	        ForwardWS.showMessage('check-email-message');
	        $('#withdraw-form').removeClass('invisible');
	    };

	    var initDepositForm = function initDepositForm() {
	        if (Client.get_value('currency')) {
	            ForwardWS.getCashierURL();
	        } else {
	            ForwardWS.showCurrency();
	        }
	    };

	    var showCurrency = function showCurrency() {
	        var currencies = Client.get_value('currencies').split(',');
	        currencies.forEach(function (c) {
	            appendTextValueChild('select-currency', c, c);
	        });
	        ForwardWS.showMessage('choose-currency-message');
	        $('#currency-form').removeClass('invisible');
	    };

	    var getCashierType = function getCashierType() {
	        var cashier_type = void 0;
	        var deposit_withdraw_heading = document.getElementById('deposit-withdraw-heading'),
	            hash_value = window.location.hash;
	        if (/withdraw/.test(hash_value)) {
	            cashier_type = 'withdraw';
	            elementInnerHtml(deposit_withdraw_heading, localize('Withdraw'));
	        } else if (/deposit/.test(hash_value)) {
	            cashier_type = 'deposit';
	            elementInnerHtml(deposit_withdraw_heading, localize('Deposit'));
	        }
	        return cashier_type;
	    };

	    var getCashierURL = function getCashierURL(verification_token) {
	        var req = { cashier: getCashierType() };
	        if (verification_token) req.verification_code = verification_token;
	        if (/epg/.test(window.location.pathname)) req.provider = 'epg';
	        BinarySocket.send(req);
	    };

	    var hideAll = function hideAll(option) {
	        $('#withdraw-form, #currency-form, #ukgc-funds-protection, #deposit-withdraw-error').addClass('invisible');
	        if (option) {
	            $(option).addClass('invisible');
	        }
	    };

	    var showError = function showError(error, id) {
	        hideAll();
	        if (!id) {
	            $('#custom-error').html(error || localize('Sorry, an error occurred while processing your request.'));
	        }
	        hideParentShowChild('#deposit-withdraw-error', '.error_messages', id || 'custom-error');
	    };

	    var showErrorMessage = function showErrorMessage(id) {
	        hideAll();
	        hideParentShowChild('#deposit-withdraw-error', '.error_messages', id);
	    };

	    var showMessage = function showMessage(id) {
	        hideParentShowChild('#deposit-withdraw-message', '.messages', id);
	    };

	    var hideParentShowChild = function hideParentShowChild(parent, children, id) {
	        $(parent).find(children).addClass('invisible').end().find('#' + id).removeClass('invisible').end().removeClass('invisible');
	    };

	    var showPersonalDetailsError = function showPersonalDetailsError(details) {
	        var msgID = 'personal-details-message';
	        var errorFields = void 0;
	        if (details) {
	            errorFields = {
	                province: 'State/Province',
	                country: 'Country',
	                city: 'Town/City',
	                street: 'First line of home address',
	                pcode: 'Postal Code / ZIP',
	                phone: 'Telephone',
	                email: 'Email address'
	            };
	        }
	        var $el = $('#' + msgID),
	            errMsg = template($el.html(), [localize(details ? errorFields[details] : 'details')]);
	        $el.html(errMsg);
	        ForwardWS.showMessage(msgID);
	    };

	    var checkOnLoad = function checkOnLoad() {
	        var clientIsVirtual = function clientIsVirtual() {
	            Content.populate();
	            var is_virtual = Client.get_boolean('is_virtual');
	            if (is_virtual) {
	                getCashierType();
	                ForwardWS.showError(Content.localize().featureNotRelevantToVirtual);
	            }
	            return is_virtual;
	        };
	        if (clientIsVirtual()) return;
	        BinarySocket.init({
	            onmessage: function onmessage(msg) {
	                var response = JSON.parse(msg.data);
	                if (!response || clientIsVirtual()) return;
	                var type = response.msg_type,
	                    error = response.error;

	                if (error) {
	                    switch (type) {
	                        case 'cashier_password':
	                        case 'set_account_currency':
	                        case 'tnc_approval':
	                            ForwardWS.showError(error.message);
	                            break;
	                        case 'cashier':
	                            ForwardWS.hideAll('#deposit-withdraw-message');
	                            if (error.code) {
	                                switch (error.code) {
	                                    case 'ASK_TNC_APPROVAL':
	                                        window.location.href = url_for('user/tnc_approvalws');
	                                        break;
	                                    case 'ASK_FIX_DETAILS':
	                                        ForwardWS.showPersonalDetailsError(error.details);
	                                        break;
	                                    case 'ASK_UK_FUNDS_PROTECTION':
	                                        $('#ukgc-funds-protection').removeClass('invisible');
	                                        break;
	                                    case 'ASK_AUTHENTICATE':
	                                        ForwardWS.showMessage('not-authenticated-message');
	                                        break;
	                                    case 'ASK_FINANCIAL_RISK_APPROVAL':
	                                        showErrorMessage('financial-risk-error');
	                                        break;
	                                    case 'ASK_JP_KNOWLEDGE_TEST':
	                                        showErrorMessage('knowledge-test-error');
	                                        break;
	                                    case 'JP_NOT_ACTIVATION':
	                                        showErrorMessage('activation-error');
	                                        break;
	                                    case 'ASK_AGE_VERIFICATION':
	                                        showErrorMessage('age-error');
	                                        break;
	                                    default:
	                                        ForwardWS.showError(error.message);
	                                }
	                            } else {
	                                ForwardWS.showError(error.message);
	                            }
	                            break;
	                        default:
	                            ForwardWS.showError(error.message);
	                    }
	                    return;
	                }
	                // if we are here we can assume there was no error
	                switch (type) {
	                    case 'cashier_password':
	                        ForwardWS.init(response.cashier_password);
	                        break;
	                    case 'cashier':
	                        ForwardWS.hideAll('#deposit-withdraw-message');
	                        $('#deposit-withdraw-iframe-container').find('iframe').attr('src', response.cashier).end().removeClass('invisible');
	                        break;
	                    case 'set_account_currency':
	                    case 'tnc_approval':
	                        ForwardWS.getCashierURL();
	                        break;
	                    default:
	                        break;
	                }
	            }
	        });
	        var hash = window.location.hash,
	            deposit_locked = /deposit/.test(hash) && Client.status_detected('cashier_locked, unwelcome', 'any'),
	            withdraw_locked = /withdraw/.test(hash) && Client.status_detected('cashier_locked, withdrawal_locked', 'any');
	        if (sessionStorage.getItem('client_status') === null) {
	            BinarySocket.send({
	                get_account_status: 1,
	                passthrough: { dispatch_to: 'ForwardWS' }
	            });
	        } else if (!deposit_locked && !withdraw_locked) {
	            BinarySocket.send({ cashier_password: 1 });
	        }
	    };
	    return {
	        init: init,
	        getCashierType: getCashierType,
	        getCashierURL: getCashierURL,
	        hideAll: hideAll,
	        showError: showError,
	        showMessage: showMessage,
	        checkOnLoad: checkOnLoad,
	        showPersonalDetailsError: showPersonalDetailsError,
	        showCurrency: showCurrency
	    };
	}();

	module.exports = {
	    ForwardWS: ForwardWS
	};

/***/ },
/* 572 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var showLoadingImage = __webpack_require__(419).showLoadingImage;
	var Cookies = __webpack_require__(301);
	var Content = __webpack_require__(426).Content;
	var url_for_static = __webpack_require__(306).url_for_static;

	var PaymentAgentListWS = function () {
	    'use strict';

	    var hiddenClass = void 0,
	        ddlCountriesID = void 0,
	        $paListContainer = void 0,
	        residence = void 0,
	        agentTemplate = void 0;

	    var init = function init() {
	        $(function () {
	            $('#accordion').accordion({
	                heightStyle: 'content',
	                collapsible: true,
	                active: false
	            });
	        });

	        hiddenClass = 'hidden';
	        ddlCountriesID = '#target_country';
	        $paListContainer = $('#pa_list');
	        agentTemplate = $paListContainer.find('#accordion').html();

	        residence = Cookies.get('residence');
	        if (!residence || residence.length === 0) {
	            residence = '00'; // just to get a list of payment agent Countries
	        }

	        sendRequest(residence, true);
	    };

	    var sendRequest = function sendRequest(country, isList) {
	        BinarySocket.send({
	            paymentagent_list: country || $(ddlCountriesID).val(),
	            passthrough: isList ? { countries_list: '1' } : {}
	        });
	    };

	    var responseHandler = function responseHandler(response) {
	        if (response.echo_req.passthrough && response.echo_req.passthrough.countries_list === '1') {
	            populateCountriesList(response);
	        } else {
	            populateAgentsList(response.paymentagent_list.list);
	        }
	    };

	    // --------------------------
	    // ----- Countries List -----
	    // --------------------------
	    var populateCountriesList = function populateCountriesList(response) {
	        var $ddlCountries = $(ddlCountriesID);
	        $ddlCountries.empty();

	        var cList = response.paymentagent_list.available_countries;
	        if (cList.length === 0) {
	            $ddlCountries.parent().addClass(hiddenClass);
	            showEmptyListMsg();
	            return;
	        }

	        var requestedCountry = response.echo_req.paymentagent_list;
	        var found = false;
	        cList.map(function (country) {
	            if (country === requestedCountry) {
	                found = true;
	            }
	            insertListOption($ddlCountries, country[1], country[0]);
	        });

	        if (found) {
	            $ddlCountries.val(requestedCountry);
	            populateAgentsList(response.paymentagent_list.list);
	        } else {
	            sendRequest();
	        }

	        $ddlCountries.change(function () {
	            sendRequest();
	        });
	    };

	    var insertListOption = function insertListOption($ddlObject, itemText, itemValue) {
	        $ddlObject.append($('<option/>', { value: itemValue, text: itemText }));
	    };

	    // -----------------------
	    // ----- Agents List -----
	    // -----------------------
	    var populateAgentsList = function populateAgentsList(list) {
	        if (!list || list.length === 0) {
	            showEmptyListMsg();
	            return;
	        }

	        showLoadingImage($paListContainer);

	        var $accordion = $('<div/>', { id: 'accordion' });

	        list.map(function (agent) {
	            var supported_banks = '';
	            if (agent.supported_banks && agent.supported_banks.length > 0) {
	                var banks = agent.supported_banks.split(',');
	                banks.map(function (bank) {
	                    supported_banks += bank.length === 0 ? '' : '<img src="' + url_for_static('images/pages/payment_agent/banks/' + bank.toLowerCase() + '.png') + '" alt="' + bank + '" title="' + bank + '" />';
	                });
	            }

	            $accordion.append(agentTemplate.replace(/%name/g, agent.name).replace(/%summary/g, agent.summary).replace(/%deposit_commission/g, agent.deposit_commission).replace(/%withdrawal_commission/g, agent.withdrawal_commission).replace(/%url/g, agent.url).replace(/%email/g, agent.email).replace(/%telephone/g, agent.telephone).replace(/%further_information/g, agent.further_information).replace(/%supported_banks/g, supported_banks));
	        });

	        $paListContainer.empty().append($accordion);

	        $('#accordion').accordion({
	            heightStyle: 'content',
	            collapsible: true,
	            active: false
	        });
	    };

	    var showEmptyListMsg = function showEmptyListMsg() {
	        $('#no_paymentagent').removeClass(hiddenClass);
	    };

	    var onLoad = function onLoad() {
	        BinarySocket.init({
	            onmessage: function onmessage(msg) {
	                var response = JSON.parse(msg.data);
	                if (response) {
	                    if (response.msg_type === 'paymentagent_list') {
	                        PaymentAgentListWS.responseHandler(response);
	                    }
	                }
	            }
	        });
	        Content.populate();
	        PaymentAgentListWS.init();
	    };

	    return {
	        init: init,
	        responseHandler: responseHandler,
	        onLoad: onLoad
	    };
	}();

	module.exports = {
	    PaymentAgentListWS: PaymentAgentListWS
	};

/***/ },
/* 573 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Content = __webpack_require__(426).Content;
	var japanese_client = __webpack_require__(307).japanese_client;
	var Client = __webpack_require__(305).Client;
	var url_for = __webpack_require__(306).url_for;

	var AuthenticateWS = function () {
	    var init = function init() {
	        if (japanese_client()) {
	            window.location.href = url_for('trading');
	        }
	        Content.populate();

	        var show_error = function show_error(error) {
	            $('#error_message').removeClass('invisible').text(error);
	            return true;
	        };

	        var check_virtual = function check_virtual() {
	            return Client.get_boolean('is_virtual') && show_error(Content.localize().featureNotRelevantToVirtual);
	        };
	        if (!check_virtual()) {
	            BinarySocket.init({
	                onmessage: function onmessage(msg) {
	                    var response = JSON.parse(msg.data);
	                    if (response) {
	                        var error = response.error;
	                        if (response.msg_type === 'get_account_status' && !check_virtual() && !error) {
	                            if ($.inArray('authenticated', response.get_account_status.status) > -1) {
	                                $('#fully-authenticated').removeClass('invisible');
	                            } else {
	                                $('#not-authenticated').removeClass('invisible');
	                            }
	                        } else if (error) {
	                            show_error(error.message);
	                        }
	                    }
	                }
	            });
	            BinarySocket.send({ get_account_status: 1 });
	        }
	    };
	    return {
	        init: init
	    };
	}();

	module.exports = {
	    AuthenticateWS: AuthenticateWS
	};

/***/ },
/* 574 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Content = __webpack_require__(426).Content;
	var ValidateV2 = __webpack_require__(560).ValidateV2;
	var ValidationUI = __webpack_require__(562).ValidationUI;
	var customError = __webpack_require__(562).customError;
	var bind_validation = __webpack_require__(562).bind_validation;
	var dv = __webpack_require__(561);
	var localize = __webpack_require__(423).localize;
	var Client = __webpack_require__(305).Client;

	var PasswordWS = function () {
	    var $form = void 0,
	        $result = void 0;

	    var init = function init() {
	        var $container = $('#change-password');
	        $container.removeClass('invisible');
	        $form = $container.find(' > form');
	        $result = $container.find(' > div[data-id="success-result"]');
	        bind_validation.simple($form[0], {
	            stop: displayErrors,
	            schema: getSchema(),
	            submit: function submit(ev, info) {
	                ev.preventDefault();
	                ev.stopPropagation();
	                if (info.errors.length > 0) return;
	                sendRequest(info.values);
	            }
	        });
	    };

	    var IS_EMPTY = { q: 'old-blank' };
	    var MATCHES_OLD = { q: 'same-as-old' };

	    var displayErrors = function displayErrors(info) {
	        ValidationUI.clear();
	        $form.find('p[data-error]').addClass('hidden');
	        info.errors.forEach(function (err) {
	            switch (err.err) {
	                case MATCHES_OLD:
	                case IS_EMPTY:
	                    $form.find('p[data-error="' + err.err.q + '"]').removeClass('hidden');
	                    break;
	                default:
	                    ValidationUI.draw('input[name=' + err.ctx + ']', err.err);
	            }
	        });
	    };

	    var getSchema = function getSchema() {
	        var V2 = ValidateV2;
	        var err = Content.localize().textPasswordsNotMatching;

	        var notMatchingOld = function notMatchingOld(value, data) {
	            return value !== data.old_password;
	        };

	        var match = function match(value, data) {
	            return value === data.new_password;
	        };
	        return {
	            old_password: [customError(V2.required, IS_EMPTY)],
	            new_password: [V2.required, dv.check(notMatchingOld, MATCHES_OLD), V2.password],
	            repeat_password: [V2.required, dv.check(match, err)]
	        };
	    };

	    var sendRequest = function sendRequest(data) {
	        BinarySocket.send({
	            change_password: '1',
	            old_password: data.old_password,
	            new_password: data.new_password
	        });
	    };

	    var handler = function handler(response) {
	        if ('error' in response) {
	            var errorMsg = localize('Old password is wrong.');
	            if ('message' in response.error) {
	                if (response.error.message.indexOf('old_password') === -1) {
	                    errorMsg = response.error.message;
	                }
	            }
	            $form.find('p[data-error="server-sent-error"]').text(errorMsg).removeClass('hidden');
	            return;
	        }

	        $form.addClass('hidden');
	        $result.removeClass('hidden');
	        setTimeout(function () {
	            Client.send_logout_request(true);
	        }, 5000);
	    };

	    var initSocket = function initSocket() {
	        Content.populate();

	        BinarySocket.init({
	            onmessage: function onmessage(msg) {
	                var response = JSON.parse(msg.data);
	                if (!response) return;
	                var type = response.msg_type;
	                if (type === 'change_password' || type === 'error' && 'change_password' in response.echo_req) {
	                    PasswordWS.handler(response);
	                }
	            }
	        });
	        PasswordWS.init();
	    };

	    return {
	        init: init,
	        handler: handler,
	        initSocket: initSocket
	    };
	}();

	module.exports = {
	    PasswordWS: PasswordWS
	};

/***/ },
/* 575 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var PaymentAgentTransfer = __webpack_require__(576).PaymentAgentTransfer;
	var Content = __webpack_require__(426).Content;
	var Client = __webpack_require__(305).Client;

	var PaymentAgentTransferSocket = function () {
	    var initSocket = function initSocket() {
	        BinarySocket.init({
	            onmessage: function onmessage(msg) {
	                var response = JSON.parse(msg.data);

	                if (response) {
	                    PaymentAgentTransfer.handleResponse(response);
	                }
	            }
	        });
	        Content.populate();
	        PaymentAgentTransfer.init_variable();
	        if (Client.get_value('email')) {
	            PaymentAgentTransfer.init();
	        }
	    };
	    return {
	        initSocket: initSocket
	    };
	}();

	module.exports = {
	    PaymentAgentTransferSocket: PaymentAgentTransferSocket
	};

/***/ },
/* 576 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var onlyNumericOnKeypress = __webpack_require__(481).onlyNumericOnKeypress;
	var Client = __webpack_require__(305).Client;
	var PaymentAgentTransferData = __webpack_require__(577).PaymentAgentTransferData;
	var PaymentAgentTransferUI = __webpack_require__(578).PaymentAgentTransferUI;

	var PaymentAgentTransfer = function () {
	    var hiddenClass = 'invisible';
	    var paymentagent = void 0;

	    var init_variable = function init_variable() {
	        paymentagent = false;
	    };

	    var paymentAgentTransferHandler = function paymentAgentTransferHandler(response) {
	        var req = response.echo_req;

	        if (response.error) {
	            if (req.dry_run === 1) {
	                $('#transfer_error_client_id').removeClass(hiddenClass).text(response.error.message);
	                return;
	            }
	            PaymentAgentTransferUI.showTransferError(response.error.message);
	        }

	        if (response.paymentagent_transfer === 2) {
	            PaymentAgentTransferUI.hideForm();
	            PaymentAgentTransferUI.hideDone();
	            PaymentAgentTransferUI.hideNotes();

	            PaymentAgentTransferUI.showConfirmation();

	            PaymentAgentTransferUI.updateConfirmView(response.client_to_full_name, req.transfer_to, req.amount, req.currency);
	        }

	        if (response.paymentagent_transfer === 1) {
	            PaymentAgentTransferUI.hideForm();
	            PaymentAgentTransferUI.hideConfirmation();
	            PaymentAgentTransferUI.hideNotes();

	            PaymentAgentTransferUI.showDone();

	            PaymentAgentTransferUI.updateDoneView(Client.get_value('loginid'), req.transfer_to, req.amount, req.currency);
	        }
	    };

	    var init = function init(auth) {
	        var $pa_form = $('#paymentagent_transfer'),
	            $no_bal_err = $('#no_balance_error'),
	            currency = Client.get_value('currency');

	        if (auth && !currency) {
	            $no_bal_err.removeClass(hiddenClass);
	            $pa_form.addClass(hiddenClass);

	            return;
	        }

	        $no_bal_err.addClass(hiddenClass);
	        $pa_form.removeClass(hiddenClass);
	        $('#paymentagent_transfer_notes').removeClass('invisible');

	        PaymentAgentTransferUI.updateFormView(currency);

	        var $submitFormButton = $pa_form.find('button#submit');
	        var $clientIDInput = $pa_form.find('input#client_id');
	        var $amountInput = $pa_form.find('input[name="amount"]');

	        var $clientIDError = $('#transfer_error_client_id');
	        var $amountError = $('#transfer_error_amount');
	        var $insufficientBalError = $('#insufficient-balance-error');

	        var $paConfirmTransferButton = $('#pa_confirm_transfer').find('#confirm_transfer');
	        var $paConfirmBackButton = $('#back_transfer');

	        $submitFormButton.off('click').click(function () {
	            var clientID = $clientIDInput.val();
	            var amount = $amountInput.val();

	            if (!clientID) {
	                $clientIDError.removeClass(hiddenClass);
	                $clientIDError.text('Please enter the Login ID to transfer funds.');
	                return;
	            }

	            if (!/^\w+\d+$/.test(clientID)) {
	                $clientIDError.removeClass(hiddenClass);
	                $clientIDError.text('Please enter a valid Login ID.');
	                return;
	            }

	            if (!amount) {
	                $amountError.removeClass(hiddenClass);
	                return;
	            }

	            if (amount > 2000 || amount < 10) {
	                $amountError.removeClass(hiddenClass);
	                return;
	            }

	            var bal = +Client.get_value('balance');
	            if (amount > bal) {
	                $insufficientBalError.removeClass(hiddenClass);
	                return;
	            }

	            PaymentAgentTransferData.transfer(clientID, currency, amount, true);
	        });

	        $paConfirmTransferButton.off('click').click(function () {
	            $paConfirmTransferButton.attr('disabled', 'disabled');
	            var clientID = $clientIDInput.val();
	            var amount = $amountInput.val();
	            PaymentAgentTransferData.transfer(clientID, currency, amount, false);
	        });

	        $paConfirmBackButton.off('click').click(function () {
	            PaymentAgentTransferUI.showForm();
	            PaymentAgentTransferUI.showNotes();
	            PaymentAgentTransferUI.hideConfirmation();
	            PaymentAgentTransferUI.hideDone();
	        });

	        $clientIDInput.keyup(function (ev) {
	            $clientIDError.addClass(hiddenClass);

	            if (ev.which === 13) {
	                $submitFormButton.click();
	            }
	        });

	        $amountInput.keypress(onlyNumericOnKeypress);

	        $amountInput.keyup(function (ev) {
	            $amountError.addClass(hiddenClass);
	            $insufficientBalError.addClass(hiddenClass);

	            if (ev.which === 13) {
	                $submitFormButton.click();
	            }
	        });
	    };

	    var error_if_virtual = function error_if_virtual() {
	        if (Client.get_boolean('is_virtual')) {
	            $('#virtual_error').removeClass('invisible');
	            return true;
	        }
	        return false;
	    };

	    var error_if_not_pa = function error_if_not_pa(response) {
	        if (response.get_settings.hasOwnProperty('is_authenticated_payment_agent') && response.get_settings.is_authenticated_payment_agent === 0) {
	            $('#not_pa_error').removeClass('invisible');
	        } else if (!error_if_virtual() && response.get_settings.is_authenticated_payment_agent) {
	            $('#paymentagent_transfer').removeClass('invisible');
	            $('#paymentagent_transfer_notes').removeClass('invisible');
	            paymentagent = true;
	            PaymentAgentTransfer.init(true);
	        }
	    };

	    var handleResponse = function handleResponse(response) {
	        var type = response.msg_type;
	        if (type === 'get_settings') {
	            error_if_not_pa(response);
	        }

	        if (type === 'authorize' && paymentagent) {
	            PaymentAgentTransfer.init(true);
	        }

	        if (type === 'paymentagent_transfer') {
	            PaymentAgentTransfer.paymentAgentTransferHandler(response);
	        }
	    };

	    return {
	        init: init,
	        init_variable: init_variable,
	        handleResponse: handleResponse,
	        paymentAgentTransferHandler: paymentAgentTransferHandler
	    };
	}();

	module.exports = {
	    PaymentAgentTransfer: PaymentAgentTransfer
	};

/***/ },
/* 577 */
/***/ function(module, exports) {

	'use strict';

	var PaymentAgentTransferData = function () {
	    'use strict';

	    var transfer = function transfer(transferTo, currency, amount, toDryRun) {
	        var dryRun = toDryRun ? 1 : 0;
	        BinarySocket.send({
	            paymentagent_transfer: 1,
	            transfer_to: transferTo,
	            currency: currency,
	            amount: amount,
	            dry_run: dryRun
	        });
	    };

	    return {
	        transfer: transfer
	    };
	}();

	module.exports = {
	    PaymentAgentTransferData: PaymentAgentTransferData
	};

/***/ },
/* 578 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var localize = __webpack_require__(423).localize;

	var PaymentAgentTransferUI = function () {
	    'use strict';

	    var hiddenClass = 'invisible';

	    var hideForm = function hideForm() {
	        $('#paymentagent_transfer').addClass(hiddenClass);
	    };
	    var showForm = function showForm() {
	        $('#paymentagent_transfer').removeClass(hiddenClass);
	    };

	    var hideConfirmation = function hideConfirmation() {
	        $('#pa_confirm_transfer').addClass(hiddenClass);
	    };
	    var showConfirmation = function showConfirmation() {
	        $('#pa_confirm_transfer').removeClass(hiddenClass).find('.errorfield').addClass(hiddenClass);
	    };

	    var hideDone = function hideDone() {
	        $('#pa_transfer_done').addClass(hiddenClass);
	    };
	    var showDone = function showDone() {
	        $('#pa_transfer_done').removeClass(hiddenClass);
	    };

	    var hideNotes = function hideNotes() {
	        $('#paymentagent_transfer_notes').addClass(hiddenClass);
	    };
	    var showNotes = function showNotes() {
	        $('#paymentagent_transfer_notes').removeClass(hiddenClass);
	    };
	    var updateFormView = function updateFormView(currency) {
	        $('#paymentagent_transfer').find('label[for="amount"]').text(localize('Amount') + ' ' + currency);
	    };

	    var updateConfirmView = function updateConfirmView(username, loginid, amount, currency) {
	        $('#pa_confirm_transfer').find('td#user-name').empty().text(username).end().find('td#login-id').empty().text(loginid).end().find('td#amount').empty().text(currency + ' ' + amount);
	    };

	    var showTransferError = function showTransferError(err) {
	        $('#pa_confirm_transfer').find('.errorfield').removeClass(hiddenClass).text(localize(err));
	    };

	    var updateDoneView = function updateDoneView(fromID, toID, amount, currency) {
	        var templateString = 'Your request to transfer [_1] [_2] from [_3] to [_4] has been successfully processed.';
	        var confirmMsg = localize(templateString, [amount, currency, fromID, toID]);

	        $('#pa_transfer_done').find(' > #confirm-msg').text(confirmMsg).removeClass(hiddenClass);
	    };

	    return {
	        hideForm: hideForm,
	        showForm: showForm,
	        hideConfirmation: hideConfirmation,
	        showConfirmation: showConfirmation,
	        hideDone: hideDone,
	        showDone: showDone,
	        hideNotes: hideNotes,
	        showNotes: showNotes,
	        showTransferError: showTransferError,
	        updateFormView: updateFormView,
	        updateConfirmView: updateConfirmView,
	        updateDoneView: updateDoneView
	    };
	}();

	module.exports = {
	    PaymentAgentTransferUI: PaymentAgentTransferUI
	};

/***/ },
/* 579 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var showLoadingImage = __webpack_require__(419).showLoadingImage;
	var showLocalTimeOnHover = __webpack_require__(439).Clock.showLocalTimeOnHover;
	var Content = __webpack_require__(426).Content;
	var FlexTableUI = __webpack_require__(580).FlexTableUI;
	var ValidateV2 = __webpack_require__(560).ValidateV2;
	var japanese_client = __webpack_require__(307).japanese_client;
	var ValidationUI = __webpack_require__(562).ValidationUI;
	var customError = __webpack_require__(562).customError;
	var bind_validation = __webpack_require__(562).bind_validation;
	var dv = __webpack_require__(561);
	var localize = __webpack_require__(423).localize;
	var url_for = __webpack_require__(306).url_for;

	var APITokenWS = function () {
	    'use strict';

	    var errorClass = 'errorfield';
	    var hideClass = 'invisible';
	    var tableContainer = '#tokens_list';
	    var maxTokens = 30;

	    var hide = function hide(s) {
	        return function () {
	            $(s).addClass(hideClass);
	        };
	    };
	    var show = function show(s) {
	        return function () {
	            $(s).removeClass(hideClass);
	        };
	    };

	    var hideForm = hide('#token_form');
	    var showForm = show('#token_form');
	    var hideTable = hide(tableContainer);
	    var showTable = show(tableContainer);

	    var init = function init() {
	        if (japanese_client()) {
	            window.location.href = url_for('user/settingsws');
	            return;
	        }

	        Content.populate();
	        BinarySocket.init({
	            onmessage: function onmessage(msg) {
	                var response = JSON.parse(msg.data);
	                if (response.msg_type === 'api_token') {
	                    responseHandler(response);
	                }
	            }
	        });

	        showLoadingImage($(tableContainer));
	        BinarySocket.send({ api_token: 1 });
	        bind_validation.simple($('#token_form')[0], {
	            schema: getSchema(),
	            stop: function stop(info) {
	                ValidationUI.clear();
	                displayErrors(info.errors);
	            },
	            submit: function submit(e, info) {
	                e.preventDefault();
	                e.stopPropagation();
	                if (info.errors.length > 0) {
	                    return;
	                }
	                createToken(info.values);
	            }
	        });
	    };

	    var getSchema = function getSchema() {
	        var V2 = ValidateV2;
	        var letters = Content.localize().textLetters;
	        var numbers = Content.localize().textNumbers;
	        return {
	            scopes: [function (v) {
	                return dv.ok(v || []);
	            }, customError(V2.required, localize('Please select at least one scope'))],
	            name: [function (v) {
	                return dv.ok(v.trim());
	            }, V2.required, V2.lengthRange(2, 32), V2.regex(/^\w+$/, [letters, numbers, '_'])]
	        };
	    };

	    var responseHandler = function responseHandler(response) {
	        if ('error' in response) {
	            showErrorMessage(response.error.message);
	            return;
	        }

	        clearMessages();

	        var api_token = response.api_token,
	            tokens = api_token.tokens;
	        var newToken = void 0;

	        if (tokens.length >= maxTokens) {
	            hideForm();
	            showErrorMessage(localize('The maximum number of tokens ([_1]) has been reached.', [maxTokens]));
	        } else {
	            showForm();
	        }

	        if ('new_token' in api_token) {
	            showSubmitSuccess('New token created.');
	            $('#txtName').val('');
	            newToken = response.echo_req.new_token;
	        } else if ('delete_token' in api_token) {
	            var deleted = response.echo_req.delete_token;
	            $('#' + deleted).removeClass('new').addClass('deleting').fadeOut(700, function () {
	                $(this).remove();
	                populateTokensList(tokens);
	            });
	            return;
	        }

	        populateTokensList(tokens, newToken);
	    };

	    // -----------------------
	    // ----- Tokens List -----
	    // -----------------------
	    var populateTokensList = function populateTokensList(tokens, newToken) {
	        var $tableContainer = $(tableContainer);
	        if (tokens.length === 0) {
	            hideTable();
	            return;
	        }
	        showTable();
	        $tableContainer.empty();

	        var headers = ['Name', 'Token', 'Scopes', 'Last Used', 'Action'];
	        var columns = ['name', 'token', 'scopes', 'last-used', 'action'];
	        new FlexTableUI({
	            id: 'tokens_table',
	            container: tableContainer,
	            header: headers.map(function (s) {
	                return localize(s);
	            }),
	            cols: columns,
	            data: tokens,
	            formatter: formatToken,
	            style: function style($row, token) {
	                if (token.display_name === newToken) {
	                    $row.addClass('new');
	                }
	                $row.attr('id', token.token);
	                createDeleteButton($row, token);
	            }
	        });
	        showLocalTimeOnHover('td.last-used');
	    };

	    var createDeleteButton = function createDeleteButton($row, token) {
	        var message = localize('Are you sure that you want to permanently delete token');
	        var $button = $('<button/>', { class: 'button btnDelete', text: localize('Delete') });
	        $button.click(function (e) {
	            e.preventDefault();
	            e.stopPropagation();
	            if (!window.confirm(message + ': "' + token.display_name + '"?')) {
	                return;
	            }
	            deleteToken(token.token);
	        });
	        $row.children('.action').html($('<span/>', { class: 'button' }).append($button));
	    };

	    var capitalise = function capitalise(v) {
	        return v.charAt(0).toUpperCase() + v.slice(1);
	    };

	    var formatToken = function formatToken(token) {
	        var lastUsed = token.last_used ? token.last_used + ' GMT' : localize('Never Used');
	        var scopes = token.scopes.map(capitalise);
	        return [token.display_name, token.token, scopes.join(', '), lastUsed, ''];
	    };

	    var displayErrors = function displayErrors(errors) {
	        errors.forEach(function (err) {
	            var sel = err.ctx === 'name' ? '#txtName' : '#scopes';
	            ValidationUI.draw(sel, err.err);
	        });
	    };

	    // ---------------------------
	    // ----- Actions Process -----
	    // ---------------------------
	    var createToken = function createToken(params) {
	        BinarySocket.send({
	            api_token: 1,
	            new_token: params.name,
	            new_token_scopes: params.scopes
	        });
	    };

	    var deleteToken = function deleteToken(token) {
	        BinarySocket.send({
	            api_token: 1,
	            delete_token: token
	        });
	    };

	    // -----------------------------
	    // ----- Message Functions -----
	    // -----------------------------
	    var showErrorMessage = function showErrorMessage(msg) {
	        $('#token_message').removeClass(hideClass).find('p').attr('class', errorClass).html(localize(msg));
	    };

	    var showSubmitSuccess = function showSubmitSuccess(msg) {
	        $('#formMessage').attr('class', 'success-msg').html('<ul class="checked"><li>' + localize(msg) + '</li></ul>').css('display', 'block').delay(3000).fadeOut(1000);
	    };

	    var clearMessages = function clearMessages() {
	        $('#token_message').addClass(hideClass);
	        $('#formMessage').html('');
	    };

	    return {
	        init: init
	    };
	}();

	module.exports = {
	    APITokenWS: APITokenWS
	};

/***/ },
/* 580 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Table = __webpack_require__(501).Table;

	var FlexTableUI = function FlexTableUI(config) {
	    this.config = config;
	    this.id = config.id;
	    var $tableContainer = Table.createFlexTable([], this.getMetadata(), config.header, config.footer);
	    // Table.appendTablebody expects the table to already
	    // exist in the DOM, so we need to append first
	    $tableContainer.appendTo(config.container);
	    this.extend(config.data);
	};

	FlexTableUI.prototype = {
	    getMetadata: function getMetadata() {
	        return {
	            id: this.config.id,
	            tableClass: this.config.class,
	            cols: this.config.cols
	        };
	    },

	    extend: function extend(data) {
	        var cols = this.config.cols;
	        var formatter = this.config.formatter;
	        var style = this.config.style;
	        Table.appendTableBody(this.id, data, function (datum) {
	            var $row = Table.createFlexTableRow(formatter(datum), cols, 'data');
	            if (style) {
	                style($row, datum);
	            }
	            return $row[0];
	        });
	    },

	    displayError: function displayError(message, colspan) {
	        var $tr = $('<tr/>', { class: 'flex-tr' });
	        var $td = $('<td/>', { colspan: colspan });
	        var $p = $('<p/>', { class: 'notice-msg center-text', text: message });
	        return $('#' + this.id + ' tbody').append($tr.append($td.append($p)));
	    },

	    replace: function replace(data) {
	        Table.clearTableBody(this.id);
	        this.extend(data);
	    },

	    clear: function clear() {
	        this.replace([]);
	        $('#' + this.id + '> tfoot').hide();
	    }
	};

	module.exports = {
	    FlexTableUI: FlexTableUI
	};

/***/ },
/* 581 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Content = __webpack_require__(426).Content;
	var japanese_client = __webpack_require__(307).japanese_client;
	var url_for = __webpack_require__(306).url_for;
	var Applications = __webpack_require__(582).Applications;

	var AuthorisedApps = function () {
	    var onLoad = function onLoad() {
	        if (japanese_client()) {
	            window.location.href = url_for('user/settingsws');
	        }
	        Content.populate();
	        Applications.init();
	    };

	    var onUnload = function onUnload() {
	        Applications.clean();
	    };

	    return {
	        onLoad: onLoad,
	        onUnload: onUnload
	    };
	}();

	module.exports = {
	    AuthorisedApps: AuthorisedApps
	};

/***/ },
/* 582 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var ApplicationsUI = __webpack_require__(583).ApplicationsUI;
	var ApplicationsData = __webpack_require__(584).ApplicationsData;

	var Applications = function () {
	    'use strict';

	    var responseHandler = function responseHandler(response) {
	        if (response.error && response.error.message) {
	            return ApplicationsUI.displayError(response.error.message);
	        }
	        var apps = response.oauth_apps.map(ApplicationsData.parse);
	        return ApplicationsUI.update(apps);
	    };

	    var init = function init() {
	        ApplicationsUI.init();
	        BinarySocket.init({
	            onmessage: ApplicationsData.calls(responseHandler)
	        });
	        ApplicationsData.list();
	    };

	    var clean = function clean() {
	        ApplicationsUI.clean();
	    };

	    return {
	        init: init,
	        clean: clean
	    };
	}();

	module.exports = {
	    Applications: Applications
	};

/***/ },
/* 583 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var showLoadingImage = __webpack_require__(419).showLoadingImage;
	var showLocalTimeOnHover = __webpack_require__(439).Clock.showLocalTimeOnHover;
	var localize = __webpack_require__(423).localize;
	var Button = __webpack_require__(500).Button;
	var FlexTableUI = __webpack_require__(580).FlexTableUI;
	var ApplicationsData = __webpack_require__(584).ApplicationsData;

	var ApplicationsUI = function () {
	    'use strict';

	    var containerSelector = '#applications-ws-container';
	    var messages = {
	        no_apps: 'You have not granted access to any applications.',
	        revoke_confirm: 'Are you sure that you want to permanently revoke access to application',
	        revoke_access: 'Revoke access'
	    };
	    var flexTable = void 0;

	    var formatApp = function formatApp(app) {
	        var last_used = app.last_used ? app.last_used.format('YYYY-MM-DD HH:mm:ss') : localize('Never');
	        return [app.name, app.scopes.join(', '), last_used, ''];
	    };

	    var createRevokeButton = function createRevokeButton(container, app) {
	        var $buttonSpan = Button.createBinaryStyledButton();
	        var $button = $buttonSpan.children('.button').first();
	        $button.text(localize(messages.revoke_access));
	        $button.on('click', function () {
	            if (window.confirm(localize(messages.revoke_confirm) + ": '" + app.name + "'?")) {
	                ApplicationsData.revoke(app.id);
	                container.css({ opacity: 0.5 });
	            }
	        });
	        return $buttonSpan;
	    };

	    var createTable = function createTable(data) {
	        if (flexTable) {
	            return flexTable.replace(data);
	        }
	        var headers = ['Name', 'Permissions', 'Last Used', 'Action'];
	        var columns = ['name', 'permissions', 'last_used', 'action'];
	        flexTable = new FlexTableUI({
	            container: containerSelector,
	            header: headers.map(function (s) {
	                return localize(s);
	            }),
	            id: 'applications-table',
	            cols: columns,
	            data: data,
	            style: function style($row, app) {
	                $row.children('.action').first().append(createRevokeButton($row, app));
	            },
	            formatter: formatApp
	        });
	        return showLocalTimeOnHover('td.last_used');
	    };

	    var update = function update(apps) {
	        $('#loading').remove();
	        createTable(apps);
	        if (!apps.length) {
	            flexTable.displayError(localize(messages.no_apps), 7);
	        }
	    };

	    var displayError = function displayError(message) {
	        $(containerSelector + ' .error-msg').text(message);
	    };

	    var init = function init() {
	        showLoadingImage($('<div/>', { id: 'loading' }).insertAfter('#applications-title'));
	        var $title = $('#applications-title').children().first();
	        var $desc = $('#description');
	        $title.text(localize($title.text()));
	        $desc.text(localize($desc.text()));
	    };

	    var clean = function clean() {
	        $(containerSelector + ' .error-msg').text('');
	        flexTable.clear();
	        flexTable = null;
	    };

	    return {
	        init: init,
	        clean: clean,
	        update: update,
	        displayError: displayError
	    };
	}();

	module.exports = {
	    ApplicationsUI: ApplicationsUI
	};

/***/ },
/* 584 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var moment = __webpack_require__(308);

	var ApplicationsData = function () {
	    'use strict';

	    var calls = function calls(callback) {
	        return function (msg) {
	            var response = JSON.parse(msg.data);
	            if (!response || response.msg_type !== 'oauth_apps') {
	                return;
	            }
	            callback(response);
	        };
	    };

	    var list = function list() {
	        BinarySocket.send({ oauth_apps: 1 });
	    };

	    var revoke = function revoke(id) {
	        if (!id) return;
	        BinarySocket.send({ oauth_apps: 1, revoke_app: id });
	    };

	    var parse = function parse(app) {
	        var last = app.last_used ? moment.utc(app.last_used) : null;
	        return {
	            name: app.name,
	            scopes: app.scopes,
	            last_used: last,
	            id: app.app_id
	        };
	    };

	    return {
	        parse: parse,
	        calls: calls,
	        revoke: revoke,
	        list: list
	    };
	}();

	module.exports = {
	    ApplicationsData: ApplicationsData
	};

/***/ },
/* 585 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Content = __webpack_require__(426).Content;
	var Connections = __webpack_require__(586).Connections;

	var UserConnections = function () {
	    var onLoad = function onLoad() {
	        Content.populate();
	        Connections.init();
	    };

	    var onUnload = function onUnload() {
	        Connections.clean();
	    };

	    return {
	        onLoad: onLoad,
	        onUnload: onUnload
	    };
	}();

	module.exports = {
	    UserConnections: UserConnections
	};

/***/ },
/* 586 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var ConnectionsUI = __webpack_require__(587).ConnectionsUI;
	var ConnectionsData = __webpack_require__(588).ConnectionsData;
	var url = __webpack_require__(306).url;

	var Connections = function () {
	    'use strict';

	    var responseHandler = function responseHandler(response) {
	        if (response.error && response.error.message) {
	            return ConnectionsUI.displayError(response.error.message);
	        }
	        if (response.connection_add) {
	            // call list on finish
	            return ConnectionsData.list();
	        }
	        return ConnectionsUI.update(response.connect_list);
	    };

	    var init = function init() {
	        ConnectionsUI.init();
	        BinarySocket.init({
	            onmessage: ConnectionsData.calls(responseHandler)
	        });
	        var connection_token = url.param('connection_token');
	        if (typeof connection_token !== 'undefined') {
	            ConnectionsData.add(connection_token);
	        } else {
	            ConnectionsData.list();
	        }
	    };

	    var clean = function clean() {
	        ConnectionsUI.clean();
	    };

	    return {
	        init: init,
	        clean: clean
	    };
	}();

	module.exports = {
	    Connections: Connections
	};

/***/ },
/* 587 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var showLoadingImage = __webpack_require__(419).showLoadingImage;
	var showLocalTimeOnHover = __webpack_require__(439).Clock.showLocalTimeOnHover;
	var localize = __webpack_require__(423).localize;
	var Button = __webpack_require__(500).Button;
	var FlexTableUI = __webpack_require__(580).FlexTableUI;
	var ConnectionsData = __webpack_require__(588).ConnectionsData;

	var ConnectionsUI = function () {
	    'use strict';

	    var containerSelector = '#connections-ws-container';
	    var messages = {
	        no_connect_list: 'You do not have any connection.'
	    };
	    var flexTable = void 0;

	    var formatConnect = function formatConnect(connect) {
	        return [connect.provider, ''];
	    };

	    var createDelButton = function createDelButton(container, connect) {
	        var $buttonSpan = Button.createBinaryStyledButton();
	        var $button = $buttonSpan.children('.button').first();
	        $button.text('Delete Connection');
	        $button.on('click', function () {
	            if (window.confirm("Confirm: '" + connect.provider + "'?")) {
	                ConnectionsData.del(connect.provider);
	                container.css({ opacity: 0.5 });
	            }
	        });
	        return $buttonSpan;
	    };

	    var createTable = function createTable(data) {
	        if (flexTable) {
	            return flexTable.replace(data);
	        }
	        var headers = ['Provider', 'Action'];
	        var columns = ['provider', 'action'];
	        flexTable = new FlexTableUI({
	            container: containerSelector,
	            header: headers.map(function (s) {
	                return localize(s);
	            }),
	            id: 'connections-table',
	            cols: columns,
	            data: data,
	            style: function style($row, connect) {
	                $row.children('.action').first().append(createDelButton($row, connect));
	            },
	            formatter: formatConnect
	        });
	        return showLocalTimeOnHover('td.last_used');
	    };

	    var update = function update(connect_list) {
	        $('#loading').remove();
	        createTable(connect_list);
	        if (!connect_list.length) {
	            flexTable.displayError(localize(messages.no_connect_list), 7);
	        }
	    };

	    var displayError = function displayError(message) {
	        $(containerSelector + ' .error-msg').text(message);
	    };

	    var init = function init() {
	        showLoadingImage($('<div/>', { id: 'loading' }).insertAfter('#connections-title'));
	        var $title = $('#connections-title').children().first();
	        var $desc = $('#description');
	        $title.text(localize($title.text()));
	        $desc.text(localize($desc.text()));
	    };

	    var clean = function clean() {
	        $(containerSelector + ' .error-msg').text('');
	        flexTable.clear();
	        flexTable = null;
	    };

	    return {
	        init: init,
	        clean: clean,
	        update: update,
	        displayError: displayError
	    };
	}();

	module.exports = {
	    ConnectionsUI: ConnectionsUI
	};

/***/ },
/* 588 */
/***/ function(module, exports) {

	'use strict';

	var ConnectionsData = function () {
	    'use strict';

	    var calls = function calls(callback) {
	        return function (msg) {
	            var response = JSON.parse(msg.data);
	            if (!response || response.msg_type !== 'connect_list') {
	                return;
	            }
	            callback(response);
	        };
	    };

	    var list = function list() {
	        BinarySocket.send({ connect_list: 1 });
	    };

	    var add = function add(connection_token) {
	        BinarySocket.send({ connection_add: 1, connection_token: connection_token });
	    };

	    var del = function del(provider) {
	        if (!provider) return;
	        BinarySocket.send({ connect_del: 1, provider: provider });
	    };

	    return {
	        calls: calls,
	        add: add,
	        del: del,
	        list: list
	    };
	}();

	module.exports = {
	    ConnectionsData: ConnectionsData
	};

/***/ },
/* 589 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Content = __webpack_require__(426).Content;
	var japanese_client = __webpack_require__(307).japanese_client;
	var url_for = __webpack_require__(306).url_for;
	var IPHistory = __webpack_require__(590).IPHistory;

	var IPHistoryWS = function () {
	    var onLoad = function onLoad() {
	        if (japanese_client()) {
	            window.location.href = url_for('user/settingsws');
	        }
	        Content.populate();
	        IPHistory.init();
	    };

	    var onUnload = function onUnload() {
	        IPHistory.clean();
	    };

	    return {
	        onLoad: onLoad,
	        onUnload: onUnload
	    };
	}();

	module.exports = {
	    IPHistoryWS: IPHistoryWS
	};

/***/ },
/* 590 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var IPHistoryUI = __webpack_require__(591).IPHistoryUI;
	var IPHistoryData = __webpack_require__(592).IPHistoryData;

	var IPHistory = function () {
	    'use strict';

	    var responseHandler = function responseHandler(response) {
	        if (response.error && response.error.message) {
	            return IPHistoryUI.displayError(response.error.message);
	        }
	        var parsed = response.login_history.map(IPHistoryData.parse);
	        return IPHistoryUI.update(parsed);
	    };

	    var init = function init() {
	        IPHistoryUI.init();
	        BinarySocket.init({
	            onmessage: IPHistoryData.calls(responseHandler)
	        });
	        IPHistoryData.get(50);
	    };

	    var clean = function clean() {
	        IPHistoryUI.clean();
	    };

	    return {
	        init: init,
	        clean: clean
	    };
	}();

	module.exports = {
	    IPHistory: IPHistory
	};

/***/ },
/* 591 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var showLocalTimeOnHover = __webpack_require__(439).Clock.showLocalTimeOnHover;
	var FlexTableUI = __webpack_require__(580).FlexTableUI;
	var moment = __webpack_require__(308);
	var localize = __webpack_require__(423).localize;

	var IPHistoryUI = function () {
	    'use strict';

	    var containerSelector = '#login_history-ws-container';
	    var no_messages_error = 'Your account has no Login/Logout activity.';
	    var flexTable = void 0;

	    var init = function init() {
	        var $title = $('#login_history-title').children().first();
	        $title.text(localize($title.text()));
	    };

	    var formatRow = function formatRow(data) {
	        var timestamp = moment.unix(data.time).utc().format('YYYY-MM-DD HH:mm:ss').replace(' ', '\n') + ' GMT';
	        var status = localize(data.success ? 'Successful' : 'Failed');
	        var browser = data.browser;
	        var browserString = browser ? browser.name + ' v' + browser.version : 'Unknown';
	        var patt = /^(opera|chrome|safari|firefox|IE|Edge|SeaMonkey|Chromium) v[0-9.]+$/i;
	        if (!patt.test(browserString) && browserString !== 'Unknown') {
	            browserString = 'Error';
	        }
	        return [timestamp, data.action, browserString, data.ip_addr, status];
	    };

	    var update = function update(history) {
	        if (flexTable) {
	            return flexTable.replace(history);
	        }
	        var headers = ['Date and Time', 'Action', 'Browser', 'IP Address', 'Status'];
	        var columns = ['timestamp', 'action', 'browser', 'ip', 'status'];
	        flexTable = new FlexTableUI({
	            id: 'login-history-table',
	            container: containerSelector,
	            header: headers.map(function (s) {
	                return localize(s);
	            }),
	            cols: columns,
	            data: history,
	            formatter: formatRow,
	            style: function style($row) {
	                $row.children('.timestamp').addClass('pre');
	            }
	        });
	        if (!history.length) {
	            return flexTable.displayError(localize(no_messages_error), 6);
	        }
	        return showLocalTimeOnHover('td.timestamp');
	    };

	    var clean = function clean() {
	        $(containerSelector + ' .error-msg').text('');
	        flexTable.clear();
	        flexTable = null;
	    };

	    var displayError = function displayError(error) {
	        $('#err').text(error);
	    };

	    return {
	        init: init,
	        clean: clean,
	        update: update,
	        displayError: displayError
	    };
	}();

	module.exports = {
	    IPHistoryUI: IPHistoryUI
	};

/***/ },
/* 592 */
/***/ function(module, exports) {

	'use strict';

	var IPHistoryData = function () {
	    var parse_ua = function parse_ua(user_agent) {
	        // Table of UA-values (and precedences) from:
	        //  https://developer.mozilla.org/en-US/docs/Browser_detection_using_the_user_agent
	        // Regexes stolen from:
	        //  https://github.com/biggora/express-useragent/blob/master/lib/express-useragent.js
	        var lookup = [{ name: 'Edge', regex: /Edge\/([\d\w\.\-]+)/i }, { name: 'SeaMonkey', regex: /seamonkey\/([\d\w\.\-]+)/i }, { name: 'Opera', regex: /(?:opera|opr)\/([\d\w\.\-]+)/i }, { name: 'Chromium', regex: /(?:chromium|crios)\/([\d\w\.\-]+)/i }, { name: 'Chrome', regex: /chrome\/([\d\w\.\-]+)/i }, { name: 'Safari', regex: /version\/([\d\w\.\-]+)/i }, { name: 'IE', regex: /msie\s([\d\.]+[\d])/i }, { name: 'IE', regex: /trident\/\d+\.\d+;.*[rv:]+(\d+\.\d)/i }, { name: 'Firefox', regex: /firefox\/([\d\w\.\-]+)/i }];
	        for (var i = 0; i < lookup.length; i++) {
	            var info = lookup[i];
	            var match = user_agent.match(info.regex);
	            if (match !== null) {
	                return {
	                    name: info.name,
	                    version: match[1]
	                };
	            }
	        }
	        return null;
	    };

	    var parse = function parse(activity) {
	        var environ = activity.environment;
	        var ip_addr = environ.split(' ')[2].split('=')[1];
	        var user_agent = environ.match('User_AGENT=(.+) LANG')[1];
	        return {
	            time: activity.time,
	            action: activity.action,
	            success: activity.status === 1,
	            browser: parse_ua(user_agent),
	            ip_addr: ip_addr
	        };
	    };

	    var calls = function calls(callback) {
	        return function (msg) {
	            var response = JSON.parse(msg.data);
	            if (!response || response.msg_type !== 'login_history') {
	                return;
	            }
	            callback(response);
	        };
	    };

	    var get = function get(n) {
	        BinarySocket.send({ login_history: 1, limit: n });
	    };

	    return {
	        parse: parse,
	        parseUserAgent: parse_ua,
	        calls: calls,
	        get: get
	    };
	}();

	module.exports = {
	    IPHistoryData: IPHistoryData
	};

/***/ },
/* 593 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var LimitsWS = __webpack_require__(594).LimitsWS;
	var Content = __webpack_require__(426).Content;
	var Client = __webpack_require__(305).Client;

	var Limits = function () {
	    var onLoad = function onLoad() {
	        Content.populate();
	        if (Client.get_boolean('is_virtual')) {
	            LimitsWS.limitsError();
	            return;
	        }

	        BinarySocket.init({
	            onmessage: function onmessage(msg) {
	                var response = JSON.parse(msg.data);
	                if (response) {
	                    var type = response.msg_type;
	                    var error = response.error;

	                    if (type === 'authorize' && Client.get_boolean('is_virtual')) {
	                        LimitsWS.limitsError(error);
	                    } else if (type === 'get_limits' && !error) {
	                        LimitsWS.limitsHandler(response);
	                    } else if (error) {
	                        LimitsWS.limitsError(error);
	                    }
	                }
	            }
	        });

	        BinarySocket.send({ get_limits: 1 });
	    };

	    var onUnload = function onUnload() {
	        LimitsWS.clean();
	    };

	    return {
	        onLoad: onLoad,
	        onUnload: onUnload
	    };
	}();

	module.exports = {
	    Limits: Limits
	};

/***/ },
/* 594 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var template = __webpack_require__(419).template;
	var Content = __webpack_require__(426).Content;
	var addComma = __webpack_require__(441).addComma;
	var LimitsUI = __webpack_require__(595).LimitsUI;
	var localize = __webpack_require__(423).localize;
	var Client = __webpack_require__(305).Client;
	var elementTextContent = __webpack_require__(420).elementTextContent;
	var elementInnerHtml = __webpack_require__(420).elementInnerHtml;

	var LimitsWS = function () {
	    'use strict';

	    var limitsHandler = function limitsHandler(response) {
	        var limits = response.get_limits;
	        LimitsUI.fillLimitsTable(limits);

	        var elWithdrawLimit = document.getElementById('withdrawal-limit');
	        var elWithdrawn = document.getElementById('already-withdraw');
	        var elWithdrawLimitAgg = document.getElementById('withdrawal-limit-aggregate');

	        if (limits.lifetime_limit === 99999999 && limits.num_of_days_limit === 99999999) {
	            elementTextContent(elWithdrawLimit, Content.localize().textAuthenticatedWithdrawal);
	        } else {
	            var txtWithdrawLim = Content.localize().textWithdrawalLimitsEquivalant,
	                txtWithdrawAmt = Content.localize().textWithrawalAmountEquivalant,
	                text_CurrentMaxWithdrawal = Content.localize().textCurrentMaxWithdrawalEquivalant,
	                currency = 'EUR';
	            var daysLimit = addComma(limits.num_of_days_limit).split('.')[1] === '00' ? addComma(limits.num_of_days_limit).split('.')[0] : addComma(limits.num_of_days_limit);
	            // no need for addComma since it is already string like "1,000"
	            var withdrawn = limits.withdrawal_since_inception_monetary;
	            var remainder = addComma(limits.remainder).split('.')[1] === '00' ? addComma(limits.remainder).split('.')[0] : addComma(limits.remainder);

	            if (/^(iom)$/i.test(Client.get_value('landing_company_name'))) {
	                // MX
	                txtWithdrawLim = Content.localize().textWithdrawalLimitsEquivalantDay;
	                txtWithdrawAmt = Content.localize().textWithrawalAmountEquivalantDay;
	                elementTextContent(elWithdrawLimit, template(txtWithdrawLim, [limits.num_of_days, currency, daysLimit]));
	                elementTextContent(elWithdrawn, template(txtWithdrawAmt, [currency, withdrawn, limits.num_of_days]));
	            } else {
	                if (/^(costarica|japan)$/i.test(Client.get_value('landing_company_name'))) {
	                    // CR , JP
	                    txtWithdrawLim = Content.localize().textWithdrawalLimits;
	                    txtWithdrawAmt = Content.localize().textWithrawalAmount;
	                    text_CurrentMaxWithdrawal = Content.localize().textCurrentMaxWithdrawal;
	                    currency = Client.get_value('currencies');
	                }
	                elementTextContent(elWithdrawLimit, template(txtWithdrawLim, [currency, daysLimit]));
	                elementTextContent(elWithdrawn, template(txtWithdrawAmt, [currency, withdrawn]));
	            }
	            elementTextContent(elWithdrawLimitAgg, template(text_CurrentMaxWithdrawal, [currency, remainder]));
	        }
	    };

	    var limitsError = function limitsError(error) {
	        Content.populate();
	        document.getElementById('withdrawal-title').setAttribute('style', 'display:none');
	        document.getElementById('limits-title').setAttribute('style', 'display:none');
	        var errorElement = document.getElementsByClassName('notice-msg')[0];
	        if (error && error.code === 'FeatureNotAvailable' && Client.get_boolean('is_virtual') || Client.get_boolean('is_virtual')) {
	            elementInnerHtml(errorElement, Content.localize().featureNotRelevantToVirtual);
	        } else if (error && error.message) {
	            elementInnerHtml(errorElement, error.message);
	        } else {
	            elementInnerHtml(errorElement, localize('An error occured') + '.');
	        }
	        document.getElementById('client_message').setAttribute('style', 'display:block');
	    };

	    var initTable = function initTable() {
	        var client_message = document.getElementById('client_message');
	        if (!client_message) return;
	        client_message.setAttribute('style', 'display:none');
	        LimitsUI.clearTableContent();
	    };

	    return {
	        limitsHandler: limitsHandler,
	        limitsError: limitsError,
	        clean: initTable
	    };
	}();

	module.exports = {
	    LimitsWS: LimitsWS
	};

/***/ },
/* 595 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Table = __webpack_require__(501).Table;
	var addComma = __webpack_require__(441).addComma;
	var localize = __webpack_require__(423).localize;
	var Client = __webpack_require__(305).Client;
	var elementTextContent = __webpack_require__(420).elementTextContent;

	var LimitsUI = function () {
	    'use strict';

	    var clientLimits = '';

	    var appendRowTable = function appendRowTable(name, turnover_limit, padding, font_weight) {
	        clientLimits.append('<tr class="flex-tr">' + '<td class="flex-tr-child" style="padding-left: ' + padding + '; font-weight: ' + font_weight + ';">' + localize(name) + '</td>' + '<td>' + turnover_limit + '</td>' + '</tr>');
	    };

	    var fillLimitsTable = function fillLimitsTable(limits) {
	        var currency = Client.get_value('currency');

	        if (currency) {
	            $('.limit').append(' (' + currency + ')');
	        }

	        var openPosition = document.getElementById('open-positions'),
	            accountBalance = document.getElementById('account-balance'),
	            payout = document.getElementById('payout'),
	            payoutPer = document.getElementById('payout-per-symbol-and-contract-type');

	        elementTextContent(openPosition, addComma(limits.open_positions).split('.')[0]);
	        elementTextContent(accountBalance, addComma(limits.account_balance).split('.')[0]);
	        elementTextContent(payout, addComma(limits.payout).split('.')[0]);
	        elementTextContent(payoutPer, addComma(limits.payout_per_symbol_and_contract_type).split('.')[0]);

	        var marketSpecific = limits.market_specific;
	        clientLimits = $('#client-limits');
	        Object.keys(marketSpecific).forEach(function (key) {
	            var object = marketSpecific[key];
	            if (object.length && object.length > 0) {
	                appendRowTable(localize(key.charAt(0).toUpperCase() + key.slice(1)), '', 'auto', 'bold');
	                Object.keys(object).forEach(function (c) {
	                    if (Client.get_value('residence') !== 'jp' || /Major Pairs/.test(object[c].name)) {
	                        appendRowTable(object[c].name, object[c].turnover_limit !== 'null' ? addComma(object[c].turnover_limit).split('.')[0] : 0, '25px', 'normal');
	                    }
	                });
	            } else {
	                appendRowTable(object.name, object.turnover_limit !== 'null' ? addComma(object.turnover_limit).split('.')[0] : 0, 'auto', 'bold');
	            }
	        });
	        var loginId = Client.get_value('loginid');
	        if (loginId) {
	            $('#trading-limits').prepend(loginId + ' - ');
	            $('#withdrawal-title').prepend(loginId + ' - ');
	        }
	        $('#withdrawal-limits, #limits-title').removeClass('invisible');
	    };

	    var clearTableContent = function clearTableContent() {
	        Table.clearTableBody('client-limits');
	    };

	    return {
	        clearTableContent: clearTableContent,
	        fillLimitsTable: fillLimitsTable
	    };
	}();

	module.exports = {
	    LimitsUI: LimitsUI
	};

/***/ },
/* 596 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var showLoadingImage = __webpack_require__(419).showLoadingImage;
	var Content = __webpack_require__(426).Content;
	var ValidateV2 = __webpack_require__(560).ValidateV2;
	var ValidationUI = __webpack_require__(562).ValidationUI;
	var validate_object = __webpack_require__(562).validate_object;
	var bind_validation = __webpack_require__(562).bind_validation;
	var moment = __webpack_require__(308);
	var dv = __webpack_require__(561);
	var TimePicker = __webpack_require__(482).TimePicker;
	var DatePicker = __webpack_require__(475).DatePicker;
	var dateValueChanged = __webpack_require__(420).dateValueChanged;
	var localize = __webpack_require__(423).localize;
	var Client = __webpack_require__(305).Client;

	var SelfExclusionWS = function () {
	    'use strict';

	    var $form = void 0,
	        $loading = void 0,
	        fields = void 0;

	    var timeDateID = 'timeout_until_duration',
	        timeID = 'timeout_until',
	        dateID = 'exclude_until',
	        errorClass = 'errorfield',
	        hiddenClass = 'hidden';

	    // ----------------------
	    // ----- Get Values -----
	    // ----------------------
	    var getRequest = function getRequest() {
	        BinarySocket.send({ get_self_exclusion: 1 });
	    };

	    var getResponse = function getResponse(response) {
	        if (response.error) {
	            if (response.error.code === 'ClientSelfExclusion') {
	                Client.send_logout_request();
	            }
	            if (response.error.message) {
	                showPageError(response.error.message, true);
	            }
	            return false;
	        }
	        $loading.addClass(hiddenClass);
	        $form.removeClass(hiddenClass);
	        $.each(response.get_self_exclusion, function (key, value) {
	            fields[key] = value + '';
	            $form.find('#' + key).val(value);
	        });
	        return true;
	    };

	    var initDatePicker = function initDatePicker() {
	        var timePickerInst = new TimePicker('#' + timeID);
	        timePickerInst.show();
	        // 6 weeks
	        var datePickerTime = new DatePicker('#' + timeDateID);
	        datePickerTime.show('today', 6 * 7);
	        // 5 years
	        var datePickerDate = new DatePicker('#' + dateID);
	        datePickerDate.show(moment().add(moment.duration(6, 'months')).toDate(), 5 * 365);
	        $('#' + timeDateID + ', #' + dateID).change(function () {
	            dateValueChanged(this, 'date');
	        });
	    };

	    // ----------------------
	    // ----- Set Values -----
	    // ----------------------
	    var setRequest = function setRequest(data) {
	        data.set_self_exclusion = 1;
	        BinarySocket.send(data);
	    };

	    var setResponse = function setResponse(response) {
	        if (response.error) {
	            var errMsg = response.error.message;
	            var field = response.error.field;
	            if (field) {
	                ValidationUI.draw('input[name=' + field + ']', errMsg);
	            } else {
	                showFormMessage(localize(errMsg), false);
	            }
	            return;
	        }
	        showFormMessage('Your changes have been updated.', true);
	        Client.set_value('session_start', moment().unix()); // used to handle session duration limit
	        getRequest();
	    };

	    var validate = function validate(data) {
	        if (data.exclude_until) {
	            delete data.exclude_until;
	            data.exclude_until = $('#' + dateID).attr('data-value');
	        }
	        if (data.timeout_until_duration) {
	            delete data.timeout_until_duration;
	            data.timeout_until_duration = $('#' + timeDateID).attr('data-value');
	        }
	        var info = validate_object(data, getSchema());
	        info.errors = info.errors.filter(function (e) {
	            return e.err !== EMPTY;
	        });
	        return info;
	    };

	    var reallyInit = function reallyInit() {
	        $form = $('#frmSelfExclusion');
	        $loading = $('#loading');

	        // for error messages to show properly
	        $('#' + timeID).attr('style', 'margin-bottom:10px');

	        if (Client.get_boolean('is_virtual')) {
	            $('#selfExclusionDesc').addClass(hiddenClass);
	            showPageError(Content.localize().featureNotRelevantToVirtual, true);
	            return;
	        }
	        showLoadingImage($loading);

	        fields = {};
	        $form.find('input').each(function () {
	            fields[this.name] = '';
	        });

	        bind_validation.simple($form[0], {
	            validate: validate,
	            submit: submitForm
	        });

	        initDatePicker();
	        getRequest();
	    };

	    var init = function init() {
	        Content.populate();
	        BinarySocket.init({
	            onmessage: function onmessage(msg) {
	                var response = JSON.parse(msg.data);
	                var msg_type = response.msg_type;
	                if (msg_type === 'authorize') reallyInit();else if (msg_type === 'get_self_exclusion') getResponse(response);else if (msg_type === 'set_self_exclusion') setResponse(response);
	            }
	        });
	        if (Client.get_boolean('values_set')) {
	            reallyInit();
	        }
	    };

	    // To propagate empty values.
	    var EMPTY = function EMPTY() {};
	    var allowEmpty = function allowEmpty(value) {
	        return value.length > 0 ? dv.ok(value) : dv.fail(EMPTY);
	    };

	    var afterToday = function afterToday(date) {
	        return date.isAfter(moment()) ? dv.ok(date) : dv.fail('Exclude time must be after today.');
	    };

	    // big unsigned integer.
	    var big_uint = function big_uint(x) {
	        return x.replace(/^0+/, '');
	    };

	    big_uint.gt = function (x, y) {
	        var maxLength = Math.max(x.length, y.length);
	        var lhs = leftPadZeros(x, maxLength);
	        var rhs = leftPadZeros(y, maxLength);
	        return lhs > rhs; // lexicographical comparison
	    };

	    // Let empty values go to next validator, because it
	    // is ok to put empty values at this stage.
	    var numericOrEmpty = function numericOrEmpty(value) {
	        if (!value) return dv.ok(value);
	        return (/^\d+$/.test(value) ? dv.ok(big_uint(value)) : dv.fail('Please enter an integer value')
	        );
	    };

	    var leftPadZeros = function leftPadZeros(strint, zeroCount) {
	        var result = strint;
	        for (var i = 0; i < zeroCount - strint.length; i++) {
	            result = '0' + result;
	        }
	        return result;
	    };

	    var againstField = function againstField(key) {
	        return function (value) {
	            var old = fields[key];
	            var err = localize('Please enter a number between 0 and [_1]', [old]);
	            var hasOld = !!old;
	            var isEmpty = value.length === 0;
	            if (!hasOld) {
	                return isEmpty ? dv.fail(EMPTY) : dv.ok(value);
	            }
	            return isEmpty || big_uint.gt(value, old) ? dv.fail(err) : dv.ok(value);
	        };
	    };

	    var validSessionDuration = function validSessionDuration(value) {
	        return +value <= moment.duration(6, 'weeks').as('minutes') ? dv.ok(value) : dv.fail('Session duration limit cannot be more than 6 weeks.');
	    };

	    var validExclusionDate = function validExclusionDate(date) {
	        var six_months = moment().add(moment.duration(6, 'months'));
	        var five_years = moment().add(moment.duration(5, 'years'));
	        return date.isBefore(six_months) && dv.fail('Exclude time cannot be less than 6 months.') || date.isAfter(five_years) && dv.fail('Exclude time cannot be for more than 5 years.') || dv.ok(date);
	    };

	    var toDateString = function toDateString(date) {
	        return dv.ok(date.format('YYYY-MM-DD'));
	    };

	    var allowEmptyUnless = function allowEmptyUnless(key) {
	        return function (value, data) {
	            if (value.length > 0) return dv.ok(value);
	            if (data[key].length > 0) return dv.fail('Please select a valid date');
	            return dv.fail(EMPTY);
	        };
	    };

	    var schema = void 0;
	    var getSchema = function getSchema() {
	        if (schema) return schema;
	        var V2 = ValidateV2;
	        var validTime = V2.momentFmt('HH:mm', 'Please select a valid time');
	        var validDate = V2.momentFmt('YYYY-MM-DD', 'Please select a valid date');

	        schema = {
	            max_7day_losses: [numericOrEmpty, againstField('max_7day_losses')],
	            max_7day_turnover: [numericOrEmpty, againstField('max_7day_turnover')],
	            max_30day_losses: [numericOrEmpty, againstField('max_30day_losses')],
	            max_30day_turnover: [numericOrEmpty, againstField('max_30day_turnover')],
	            max_balance: [numericOrEmpty, againstField('max_balance')],
	            max_losses: [numericOrEmpty, againstField('max_losses')],
	            max_open_bets: [numericOrEmpty, againstField('max_open_bets')],
	            max_turnover: [numericOrEmpty, againstField('max_turnover')],
	            session_duration_limit: [numericOrEmpty, againstField('session_duration_limit'), validSessionDuration],
	            exclude_until: [allowEmpty, validDate, afterToday, validExclusionDate, toDateString],
	            // these two are combined.
	            timeout_until_duration: [allowEmptyUnless('timeout_until'), validDate],
	            timeout_until: [allowEmpty, validTime]
	        };
	        return schema;
	    };

	    var detectChange = function detectChange(a, b) {
	        var k_a = Object.keys(a);
	        var k_b = Object.keys(b);
	        if (k_a.length !== k_b.length) {
	            return true;
	        }
	        for (var i = 0; i < k_a.length; i++) {
	            var key = k_a[i];
	            if (a[key] !== b[key]) return true;
	        }
	        return false;
	    };

	    var submitForm = function submitForm(e, validation) {
	        e.preventDefault();
	        e.stopPropagation();
	        clearError();
	        var info = validateForm(validation);
	        if (!info.valid) return;
	        if (!info.changed) {
	            showFormMessage('You did not change anything.', false);
	            return;
	        }
	        if ('timeout_until' in info.data || 'exclude_until' in info.data) {
	            if (!hasConfirmed()) return;
	        }
	        setRequest(info.data);
	    };

	    var validateForm = function validateForm(validation) {
	        var values = validation.values;
	        var valid = validation.errors.length === 0;

	        // Do the date time addition and validation here
	        var date = values.timeout_until_duration;
	        if (date) {
	            (function () {
	                // If we've gotten this far then there must *not*
	                // be an error with the timeout date.
	                date = moment(date);
	                var time = values.timeout_until;
	                if (time) {
	                    date = date.add(time.format('HH'), 'hours').add(time.format('mm'), 'minutes');
	                }
	                var six_weeks = moment().add(moment.duration(6, 'weeks'));
	                var res = dv.first(date, [afterToday, dv.check(function (d) {
	                    return !d.isAfter(six_weeks);
	                }, 'Exclude time cannot be more than 6 weeks')]);
	                if (!res.isOk) {
	                    ValidationUI.draw('input[name=timeout_until_duration]', res.value[0]);
	                    valid = false;
	                } else {
	                    delete values.timeout_until_duration;
	                    values.timeout_until = date.unix();
	                }
	            })();
	        }

	        return {
	            data: values,
	            valid: valid,
	            changed: valid && detectChange(validation.raw, fields)
	        };
	    };

	    var hasConfirmed = function hasConfirmed() {
	        var message = 'When you click "Ok" you will be excluded from trading on the site until the selected date.';
	        return window.confirm(localize(message));
	    };

	    // -----------------------------
	    // ----- Message Functions -----
	    // -----------------------------
	    var showPageError = function showPageError(errMsg, hideForm) {
	        $('#errorMsg').html(errMsg).removeClass(hiddenClass);
	        if (hideForm) {
	            $form.addClass(hiddenClass);
	        }
	    };

	    var clearError = function clearError() {
	        $('#errorMsg').html('').addClass(hiddenClass);
	        $('#formMessage').html('');
	    };

	    var showFormMessage = function showFormMessage(msg, isSuccess) {
	        $('#formMessage').attr('class', isSuccess ? 'success-msg' : errorClass).html(isSuccess ? '<ul class="checked"><li>' + localize(msg) + '</li></ul>' : localize(msg)).css('display', 'block').delay(5000).fadeOut(1000);
	    };

	    return {
	        init: init
	    };
	}();

	module.exports = {
	    SelfExclusionWS: SelfExclusionWS
	};

/***/ },
/* 597 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var detect_hedging = __webpack_require__(420).detect_hedging;
	var ValidateV2 = __webpack_require__(560).ValidateV2;
	var bind_validation = __webpack_require__(562).bind_validation;
	var Content = __webpack_require__(426).Content;
	var Cookies = __webpack_require__(301);
	var moment = __webpack_require__(308);
	var dv = __webpack_require__(561);
	var localize = __webpack_require__(423).localize;
	var Client = __webpack_require__(305).Client;

	var SettingsDetailsWS = function () {
	    'use strict';

	    var formID = '#frmPersonalDetails',
	        RealAccElements = '.RealAcc',
	        fieldIDs = {
	        address1: '#Address1',
	        address2: '#Address2',
	        city: '#City',
	        state: '#State',
	        postcode: '#Postcode',
	        phone: '#Phone'
	    };
	    var changed = false,
	        isInitialized = void 0;

	    var init = function init() {
	        Content.populate();

	        if (Client.get_boolean('is_virtual') || Client.get_value('residence')) {
	            initOk();
	        } else {
	            isInitialized = false;
	        }

	        BinarySocket.send({ get_settings: '1', req_id: 1 });
	    };

	    var initOk = function initOk() {
	        isInitialized = true;
	        var isVirtual = Client.get_boolean('is_virtual');
	        var isJP = Client.get_value('residence') === 'jp';
	        bind_validation.simple($(formID)[0], {
	            schema: isJP ? getJPSchema() : isVirtual ? {} : getNonJPSchema(),
	            submit: function submit(ev, info) {
	                ev.preventDefault();
	                ev.stopPropagation();
	                if (info.errors.length > 0) return false;
	                if (!changed) {
	                    return showFormMessage('You did not change anything.', false);
	                }
	                if (isJP) return submitJP(info.values);
	                return submitNonJP(info.values);
	            }
	        });
	        if (isJP && !isVirtual) {
	            $('#fieldset_email_consent').removeClass('invisible');
	            detect_hedging($('#PurposeOfTrading'), $('.hedge'));
	        }
	    };

	    var getDetailsResponse = function getDetailsResponse(response) {
	        if (!isInitialized) {
	            initOk();
	        }
	        var data = response.get_settings;

	        $('#lblCountry').text(data.country || '-');
	        $('#lblEmail').text(data.email);
	        var $email_consent = $('#email_consent');
	        if (data.email_consent) {
	            $email_consent.prop('checked', 'true');
	        }

	        $email_consent.on('change', function () {
	            changed = true;
	        });

	        if (Client.get_boolean('is_virtual')) {
	            // Virtual Account
	            $(RealAccElements).remove();
	            $(formID).removeClass('hidden');
	            return;
	        }
	        // Real Account
	        var birthDate = data.date_of_birth ? moment.utc(new Date(data.date_of_birth * 1000)).format('YYYY-MM-DD') : '';
	        $('#lblBirthDate').text(birthDate);
	        // Generate states list
	        var residence = Cookies.get('residence');
	        if (residence) {
	            BinarySocket.send({ states_list: residence, passthrough: { value: data.address_state } });
	        }
	        if (Client.get_value('residence') === 'jp') {
	            var jpData = response.get_settings.jp_settings;
	            $('#lblName').text(data.last_name || '');
	            $('#lblGender').text(localize(jpData.gender) || '');
	            $('#lblAddress1').text(data.address_line_1 || '');
	            $('#lblAddress2').text(data.address_line_2 || '');
	            $('#lblCity').text(data.address_city || '');
	            $('#lblPostcode').text(data.address_postcode || '');
	            $('#lblPhone').text(data.phone || '');

	            $('#AnnualIncome').val(jpData.annual_income);
	            $('#FinancialAsset').val(jpData.financial_asset);
	            $('#Occupation').val(jpData.occupation);
	            $('#Equities').val(jpData.trading_experience_equities);
	            $('#Commodities').val(jpData.trading_experience_commodities);
	            $('#ForeignCurrencyDeposit').val(jpData.trading_experience_foreign_currency_deposit);
	            $('#MarginFX').val(jpData.trading_experience_margin_fx);
	            $('#InvestmentTrust').val(jpData.trading_experience_investment_trust);
	            $('#PublicCorporationBond').val(jpData.trading_experience_public_bond);
	            $('#DerivativeTrading').val(jpData.trading_experience_option_trading);
	            $('#PurposeOfTrading').val(jpData.trading_purpose);
	            if (jpData.hedge_asset !== null && jpData.hedge_asset_amount !== null) {
	                $('#HedgeAsset').val(jpData.hedge_asset);
	                $('#HedgeAssetAmount').val(jpData.hedge_asset_amount);
	                $('.hedge').removeClass('invisible');
	            }
	            $('.JpAcc').removeClass('invisible').removeClass('hidden');

	            $('#AnnualIncome, #FinancialAsset, #Occupation, #Equities, #Commodities,' + '#ForeignCurrencyDeposit, #MarginFX, #InvestmentTrust, #PublicCorporationBond,' + '#DerivativeTrading, #PurposeOfTrading, #HedgeAsset, #HedgeAssetAmount').on('change', function () {
	                changed = true;
	            });
	        } else {
	            $('#lblName').text((data.salutation || '') + ' ' + (data.first_name || '') + ' ' + (data.last_name || ''));
	            $(fieldIDs.address1).val(data.address_line_1);
	            $(fieldIDs.address2).val(data.address_line_2);
	            $(fieldIDs.city).val(data.address_city);

	            $(fieldIDs.postcode).val(data.address_postcode);
	            $(fieldIDs.phone).val(data.phone);

	            $('#Address1, #Address2, #City, #State, #Postcode, #Phone').on('change', function () {
	                changed = true;
	            });

	            $(RealAccElements).removeClass('hidden');
	        }

	        $(formID).removeClass('hidden');
	    };

	    var populateStates = function populateStates(response) {
	        var $field = $(fieldIDs.state);
	        var defaultValue = response.echo_req.passthrough.value;
	        var states = response.states_list;

	        $field.empty();

	        if (states && states.length > 0) {
	            states.forEach(function (state) {
	                $field.append($('<option/>', { value: state.value, text: state.text }));
	            });
	        } else {
	            $field.replaceWith($('<input/>', { id: fieldIDs.state.replace('#', ''), name: 'address_state', type: 'text', maxlength: '35' }));
	            $field = $(fieldIDs.state);
	        }

	        $field.val(defaultValue);
	        $('#lblState').text($('#State').find('option:selected').text());
	        $field.on('change', function () {
	            changed = true;
	        });
	    };

	    var toJPSettings = function toJPSettings(data) {
	        var jp_settings = {};
	        jp_settings.annual_income = data.annualIncome;
	        jp_settings.financial_asset = data.financialAsset;
	        jp_settings.occupation = data.occupation;
	        jp_settings.trading_experience_equities = data.equities;
	        jp_settings.trading_experience_commodities = data.commodities;
	        jp_settings.trading_experience_foreign_currency_deposit = data.foreignCurrencyDeposit;
	        jp_settings.trading_experience_margin_fx = data.marginFX;
	        jp_settings.trading_experience_investment_trust = data.InvestmentTrust;
	        jp_settings.trading_experience_public_bond = data.publicCorporationBond;
	        jp_settings.trading_experience_option_trading = data.derivativeTrading;
	        jp_settings.trading_purpose = data.purposeOfTrading;
	        if (data.purposeOfTrading === 'Hedging') {
	            jp_settings.hedge_asset = data.hedgeAsset;
	            jp_settings.hedge_asset_amount = data.hedgeAssetAmount;
	        }
	        return { jp_settings: jp_settings };
	    };

	    var submitJP = function submitJP(data) {
	        var trim = function trim(s) {
	            return $(s).val().trim();
	        };
	        setDetails(Client.get_boolean('is_virtual') ? data : toJPSettings({
	            hedgeAssetAmount: trim('#HedgeAssetAmount'),
	            annualIncome: trim('#AnnualIncome'),
	            financialAsset: trim('#FinancialAsset'),
	            occupation: trim('#Occupation'),
	            equities: trim('#Equities'),
	            commodities: trim('#Commodities'),
	            foreignCurrencyDeposit: trim('#ForeignCurrencyDeposit'),
	            marginFX: trim('#MarginFX'),
	            InvestmentTrust: trim('#InvestmentTrust'),
	            publicCorporationBond: trim('#PublicCorporationBond'),
	            derivativeTrading: trim('#DerivativeTrading'),
	            purposeOfTrading: trim('#PurposeOfTrading'),
	            hedgeAsset: trim('#HedgeAsset')
	        }));
	    };

	    var getJPSchema = function getJPSchema() {
	        var V2 = ValidateV2;
	        if (/Hedging/.test($('#PurposeOfTrading').val())) {
	            return {
	                hedge_asset_amount: [function (v) {
	                    return dv.ok(v.trim());
	                }, V2.required, V2.regex(/^\d+$/, [Content.localize().textNumbers])]
	            };
	        }
	        // else there is nothing to validate
	        return {};
	    };

	    var submitNonJP = function submitNonJP(data) {
	        delete data.hedge_asset_amount;
	        setDetails(data);
	    };

	    var getNonJPSchema = function getNonJPSchema() {
	        var letters = Content.localize().textLetters,
	            numbers = Content.localize().textNumbers,
	            space = Content.localize().textSpace,
	            period = Content.localize().textPeriod,
	            comma = Content.localize().textComma;

	        var V2 = ValidateV2;
	        var isAddress = V2.regex(/^[^~!#$%^&*)(_=+\[}{\]\\\"\;\:\?\><\|]+$/, [letters, numbers, space, period, comma, '- . / @ \' ']);
	        var isCity = V2.regex(/^[^~!@#$%^&*)(_=+\[\}\{\]\\\/\"\;\:\?\><\,\|\d]+$/, [letters, space, '- . \' ']);
	        var isState = V2.regex(/^[^~!@#$%^&*)(_=+\[\}\{\]\\\/\"\;\:\?\><\|]+$/, [letters, numbers, space, comma, '- . \'']);
	        var isPostcode = V2.regex(/^[^+]{0,20}$/, [letters, numbers, space, '-']);
	        var isPhoneNo = V2.regex(/^(|\+?[0-9\s\-]+)$/, [numbers, space, '-']);

	        var maybeEmptyAddress = function maybeEmptyAddress(value) {
	            return value.length ? isAddress(value) : dv.ok(value);
	        };

	        return {
	            address_line_1: [V2.required, isAddress],
	            address_line_2: [maybeEmptyAddress],
	            address_city: [V2.required, isCity],
	            address_state: [V2.required, isState],
	            address_postcode: [V2.lengthRange(0, 20), isPostcode],
	            phone: [V2.lengthRange(6, 35), isPhoneNo]
	        };
	    };

	    var setDetails = function setDetails(data) {
	        var req = { set_settings: 1 };
	        Object.keys(data).forEach(function (key) {
	            req[key] = data[key];
	        });
	        if ($('#email_consent:checked').length > 0) {
	            req.email_consent = 1;
	        } else {
	            req.email_consent = 0;
	        }
	        BinarySocket.send(req);
	    };

	    var showFormMessage = function showFormMessage(msg, isSuccess) {
	        $('#formMessage').attr('class', isSuccess ? 'success-msg' : 'errorfield').html(isSuccess ? '<ul class="checked"><li>' + localize(msg) + '</li></ul>' : localize(msg)).css('display', 'block').delay(5000).fadeOut(1000);
	    };

	    var setDetailsResponse = function setDetailsResponse(response) {
	        // allow user to resubmit the form on error.
	        changed = response.set_settings !== 1;
	        showFormMessage(changed ? 'Sorry, an error occurred while processing your account.' : 'Your settings have been updated successfully.', !changed);
	    };

	    var onLoad = function onLoad() {
	        BinarySocket.init({
	            onmessage: function onmessage(msg) {
	                var response = JSON.parse(msg.data);
	                if (!response) {
	                    console.log('some error occured');
	                    return;
	                }
	                var type = response.msg_type;
	                switch (type) {
	                    case 'authorize':
	                        SettingsDetailsWS.init();
	                        break;
	                    case 'get_settings':
	                        if (response.req_id === 1) {
	                            SettingsDetailsWS.getDetailsResponse(response);
	                        }
	                        break;
	                    case 'set_settings':
	                        SettingsDetailsWS.setDetailsResponse(response);
	                        break;
	                    case 'states_list':
	                        SettingsDetailsWS.populateStates(response);
	                        break;
	                    case 'error':
	                        $('#formMessage').attr('class', 'errorfield').text(response.error.message);
	                        break;
	                    default:
	                        break;
	                }
	            }
	        });
	        if (Client.get_value('loginid')) {
	            SettingsDetailsWS.init();
	        }
	    };

	    return {
	        init: init,
	        getDetailsResponse: getDetailsResponse,
	        setDetailsResponse: setDetailsResponse,
	        populateStates: populateStates,
	        onLoad: onLoad
	    };
	}();

	module.exports = {
	    SettingsDetailsWS: SettingsDetailsWS
	};

/***/ },
/* 598 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var getLoginToken = __webpack_require__(420).getLoginToken;
	var Content = __webpack_require__(426).Content;
	var ValidateV2 = __webpack_require__(560).ValidateV2;
	var bind_validation = __webpack_require__(562).bind_validation;
	var dv = __webpack_require__(561);
	var localize = __webpack_require__(423).localize;
	var load_with_pjax = __webpack_require__(483).load_with_pjax;
	var Client = __webpack_require__(305).Client;

	var SecurityWS = function () {
	    'use strict';

	    var $form = void 0,
	        current_state = void 0,
	        redirect_url = void 0;
	    var STATE = {
	        WAIT_AUTH: 'WAIT_AUTH',
	        QUERY_LOCKED: 'QUERY_LOCKED',
	        LOCKED: 'LOCKED',
	        UNLOCKED: 'UNLOCKED',
	        TRY_UNLOCK: 'TRY_UNLOCK',
	        TRY_LOCK: 'TRY_LOCK',
	        DONE: 'DONE'
	    };

	    var clearErrors = function clearErrors() {
	        $('#SecuritySuccessMsg').text('');
	        $('#invalidinputfound').text('');
	    };

	    var checkIsVirtual = function checkIsVirtual() {
	        if (!Client.get_boolean('is_virtual')) {
	            return false;
	        }
	        $form.hide();
	        $('#SecuritySuccessMsg').addClass('notice-msg center-text').text(Content.localize().featureNotRelevantToVirtual);
	        return true;
	    };

	    var makeAuthRequest = function makeAuthRequest() {
	        BinarySocket.send({
	            authorize: getLoginToken(),
	            passthrough: { dispatch_to: 'cashier_password' }
	        });
	    };

	    var init = function init() {
	        Content.populate();
	        $form = $('#changeCashierLock');
	        if (checkIsVirtual()) return;

	        current_state = STATE.WAIT_AUTH;
	        BinarySocket.init({ onmessage: handler });
	        makeAuthRequest();
	    };

	    var authorised = function authorised() {
	        current_state = STATE.QUERY_LOCKED;
	        BinarySocket.send({
	            cashier_password: '1'
	        });
	    };

	    var updatePage = function updatePage(config) {
	        $('legend').text(localize(config.legend));
	        $('#lockInfo').text(localize(config.info));
	        $form.find('button').attr('value', config.button).html(localize(config.button));
	    };

	    var setupRepeatPasswordForm = function setupRepeatPasswordForm() {
	        $('#repasswordrow').show();
	    };

	    var lockedStatus = function lockedStatus(response) {
	        var locked = +response.cashier_password === 1;
	        if (locked) {
	            updatePage({
	                legend: 'Unlock Cashier',
	                info: 'Your cashier is locked as per your request - to unlock it, please enter the password.',
	                button: 'Unlock Cashier'
	            });
	            $('#repasswordrow').hide();
	        } else {
	            updatePage({
	                legend: 'Lock Cashier',
	                info: 'An additional password can be used to restrict access to the cashier.',
	                button: 'Update'
	            });
	            setupRepeatPasswordForm();
	        }
	        current_state = locked ? STATE.LOCKED : STATE.UNLOCKED;
	        bind_validation.simple($form[0], {
	            schema: locked ? {} : getUnlockedSchema(),
	            submit: function submit(e, info) {
	                e.preventDefault();
	                e.stopPropagation();
	                if (info.errors.length > 0) {
	                    return;
	                }
	                current_state = locked ? STATE.TRY_UNLOCK : STATE.TRY_LOCK;
	                makeAuthRequest();
	            }
	        });
	        $form.show();
	    };

	    var getUnlockedSchema = function getUnlockedSchema() {
	        var err = Content.localize().textPasswordsNotMatching;
	        var matches = function matches(value, data) {
	            return value === data.cashierlockpassword1;
	        };

	        return {
	            cashierlockpassword1: [ValidateV2.password],
	            cashierlockpassword2: [dv.check(matches, err)]
	        };
	    };

	    var makeTryingRequest = function makeTryingRequest() {
	        var key = current_state === STATE.TRY_UNLOCK ? 'unlock_password' : 'lock_password';
	        var params = { cashier_password: '1' };
	        params[key] = $('#cashierlockpassword1').val();
	        BinarySocket.send(params);
	    };

	    var tryStatus = function tryStatus(response) {
	        if (response.error) {
	            current_state = current_state === STATE.TRY_UNLOCK ? STATE.LOCKED : STATE.UNLOCKED;
	            var message = response.error.message;
	            if (current_state === STATE.LOCKED && response.error.code === 'InputValidationFailed') {
	                message = 'Sorry, you have entered an incorrect cashier password';
	            }
	            $('#invalidinputfound').text(localize(message));
	            return;
	        }
	        $form.hide();
	        clearErrors();
	        $('#SecuritySuccessMsg').text(localize('Your settings have been updated successfully.'));
	        redirect_url = current_state === STATE.TRY_UNLOCK ? sessionStorage.getItem('cashier_lock_redirect') : '';
	        setTimeout(redirect, 2000);
	        current_state = STATE.DONE;
	    };

	    var redirect = function redirect() {
	        if (redirect_url) {
	            sessionStorage.removeItem('cashier_lock_redirect');
	            load_with_pjax(redirect_url);
	        }
	    };

	    var handler = function handler(msg) {
	        if (checkIsVirtual()) return;
	        var response = JSON.parse(msg.data);
	        if (response.msg_type === 'authorize') {
	            switch (current_state) {
	                case STATE.WAIT_AUTH:
	                    authorised();
	                    break;
	                case STATE.TRY_UNLOCK:
	                case STATE.TRY_LOCK:
	                    makeTryingRequest();
	                    break;
	                default:
	                    break;
	            }
	        } else if (response.msg_type === 'cashier_password') {
	            switch (current_state) {
	                case STATE.QUERY_LOCKED:
	                    lockedStatus(response);
	                    break;
	                case STATE.TRY_UNLOCK:
	                case STATE.TRY_LOCK:
	                    tryStatus(response);
	                    break;
	                default:
	                    break;
	            }
	        }
	    };

	    return {
	        init: init
	    };
	}();

	module.exports = {
	    SecurityWS: SecurityWS
	};

/***/ },
/* 599 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var japanese_client = __webpack_require__(307).japanese_client;
	var Client = __webpack_require__(305).Client;

	var SettingsWS = function () {
	    'use strict';

	    var init = function init() {
	        var classHidden = 'invisible',
	            classReal = '.real';

	        if (!Client.get_boolean('is_virtual')) {
	            // control-class is a fake class, only used to counteract ja-hide class
	            $(classReal).not(japanese_client() ? '.ja-hide' : '.control-class').removeClass(classHidden);
	        } else {
	            $(classReal).addClass(classHidden);
	        }

	        $('#settingsContainer').removeClass(classHidden);
	    };

	    var onLoad = function onLoad() {
	        if (!Client.get_boolean('values_set')) {
	            BinarySocket.init({
	                onmessage: function onmessage(msg) {
	                    var response = JSON.parse(msg.data);
	                    if (response && response.msg_type === 'authorize') {
	                        SettingsWS.init();
	                    }
	                }
	            });
	        } else {
	            SettingsWS.init();
	        }
	    };

	    return {
	        init: init,
	        onLoad: onLoad
	    };
	}();

	module.exports = {
	    SettingsWS: SettingsWS
	};

/***/ },
/* 600 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Content = __webpack_require__(426).Content;
	var localize = __webpack_require__(423).localize;
	var Client = __webpack_require__(305).Client;

	var TopUpVirtualWS = function () {
	    'use strict';

	    var containerID = void 0,
	        viewIDs = void 0,
	        hiddenClass = void 0,
	        $views = void 0;

	    var init = function init() {
	        containerID = '#topup_virtual';
	        hiddenClass = 'hidden';
	        $views = $(containerID + ' .viewItem');
	        viewIDs = {
	            error: '#viewError',
	            success: '#viewSuccess'
	        };

	        $views.addClass('hidden');

	        if (!Client.get_boolean('is_virtual')) {
	            showMessage(localize('Sorry, this feature is available to virtual accounts only.'), false);
	        } else {
	            BinarySocket.send({ topup_virtual: '1' });
	        }
	    };

	    var responseHandler = function responseHandler(response) {
	        if ('error' in response) {
	            if ('message' in response.error) {
	                showMessage(localize(response.error.message), false);
	            }
	        } else {
	            showMessage(localize('[_1] [_2] has been credited to your Virtual money account [_3]', [response.topup_virtual.currency, response.topup_virtual.amount, Client.get_value('loginid')]), true);
	        }
	    };

	    var showMessage = function showMessage(message, isSuccess) {
	        var viewID = isSuccess ? viewIDs.success : viewIDs.error;
	        setActiveView(viewID);
	        $(viewID + ' > p').html(message);
	    };

	    var setActiveView = function setActiveView(viewID) {
	        $views.addClass(hiddenClass);
	        $(viewID).removeClass(hiddenClass);
	    };

	    var onLoad = function onLoad() {
	        BinarySocket.init({
	            onmessage: function onmessage(msg) {
	                var response = JSON.parse(msg.data);
	                if (response) {
	                    if (response.msg_type === 'authorize') {
	                        TopUpVirtualWS.init();
	                    } else if (response.msg_type === 'topup_virtual') {
	                        TopUpVirtualWS.responseHandler(response);
	                    }
	                }
	            }
	        });
	        Content.populate();
	        if (Client.get_boolean('is_virtual')) {
	            TopUpVirtualWS.init();
	        }
	    };

	    return {
	        init: init,
	        responseHandler: responseHandler,
	        onLoad: onLoad
	    };
	}();

	module.exports = {
	    TopUpVirtualWS: TopUpVirtualWS
	};

/***/ },
/* 601 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var LostPassword = __webpack_require__(602).LostPassword;
	var Client = __webpack_require__(305).Client;

	var LostPasswordWS = function () {
	    var onLoad = function onLoad() {
	        if (Client.redirect_if_login()) {
	            return;
	        }
	        BinarySocket.init({
	            onmessage: LostPassword.lostPasswordWSHandler
	        });
	        LostPassword.init();
	    };

	    return {
	        onLoad: onLoad
	    };
	}();

	module.exports = {
	    LostPasswordWS: LostPasswordWS
	};

/***/ },
/* 602 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Content = __webpack_require__(426).Content;
	var validateEmail = __webpack_require__(425).validateEmail;
	var localize = __webpack_require__(423).localize;
	var load_with_pjax = __webpack_require__(483).load_with_pjax;
	var url_for = __webpack_require__(306).url_for;

	var LostPassword = function () {
	    'use strict';

	    var hiddenClass = 'invisible';

	    var submitEmail = function submitEmail() {
	        var emailInput = ($('#lp_email').val() || '').trim();

	        if (emailInput === '') {
	            $('#email_error').removeClass(hiddenClass).text(localize('This field is required.'));
	        } else if (!validateEmail(emailInput)) {
	            $('#email_error').removeClass(hiddenClass).text(Content.errorMessage('valid', localize('email address')));
	        } else {
	            BinarySocket.send({ verify_email: emailInput, type: 'reset_password' });
	            $('#submit').prop('disabled', true);
	        }
	    };

	    var onEmailInput = function onEmailInput(input) {
	        if (input) {
	            $('#email_error').addClass(hiddenClass);
	        }
	    };

	    var lostPasswordWSHandler = function lostPasswordWSHandler(msg) {
	        var response = JSON.parse(msg.data);
	        var type = response.msg_type;

	        if (type === 'verify_email') {
	            if (response.verify_email === 1) {
	                load_with_pjax(url_for('user/reset_passwordws'));
	            } else if (response.error) {
	                $('#email_error').removeClass(hiddenClass).text(Content.errorMessage('valid', localize('email address')));
	                $('#submit').prop('disabled', false);
	            }
	        }
	    };

	    var init = function init() {
	        Content.populate();
	        $('#lost_passwordws').removeClass('invisible');
	        $('#submit:enabled').click(function () {
	            submitEmail();
	        });

	        $('#lp_email').keypress(function (ev) {
	            if (ev.which === 13) {
	                submitEmail();
	            }
	            onEmailInput(ev.target.value);
	        });
	    };

	    return {
	        lostPasswordWSHandler: lostPasswordWSHandler,
	        init: init
	    };
	}();

	module.exports = {
	    LostPassword: LostPassword
	};

/***/ },
/* 603 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var handleResidence = __webpack_require__(421).handleResidence;
	var Content = __webpack_require__(426).Content;
	var ValidAccountOpening = __webpack_require__(604).ValidAccountOpening;
	var Client = __webpack_require__(305).Client;
	var url_for = __webpack_require__(306).url_for;
	var FinancialAccOpeningUI = __webpack_require__(605).FinancialAccOpeningUI;

	var FinancialAccOpening = function () {
	    var init = function init() {
	        Content.populate();
	        var client_loginid_array = Client.get_value('loginid_array');
	        for (var i = 0; i < client_loginid_array.length; i++) {
	            if (client_loginid_array[i].financial) {
	                window.location.href = url_for('trading');
	                return;
	            } else if (client_loginid_array[i].non_financial) {
	                $('.security').hide();
	            }
	        }
	        handleResidence();
	        BinarySocket.send({ residence_list: 1 });
	        BinarySocket.send({ get_financial_assessment: 1 });
	        $('#financial-form').submit(function (evt) {
	            evt.preventDefault();
	            if (FinancialAccOpeningUI.checkValidity()) {
	                BinarySocket.init({
	                    onmessage: function onmessage(msg) {
	                        var response = JSON.parse(msg.data);
	                        if (response) {
	                            if (response.msg_type === 'new_account_maltainvest') {
	                                ValidAccountOpening.handler(response, response.new_account_maltainvest);
	                            }
	                        }
	                    }
	                });
	            }
	        });
	        $('#financial-risk').submit(function (evt) {
	            evt.preventDefault();
	            window.acceptRisk = true;
	            if (FinancialAccOpeningUI.checkValidity()) {
	                BinarySocket.init({
	                    onmessage: function onmessage(msg) {
	                        var response = JSON.parse(msg.data);
	                        if (response) {
	                            if (response.msg_type === 'new_account_maltainvest') {
	                                ValidAccountOpening.handler(response, response.new_account_maltainvest);
	                            }
	                        }
	                    }
	                });
	            }
	        });
	    };

	    return {
	        init: init
	    };
	}();

	module.exports = {
	    FinancialAccOpening: FinancialAccOpening
	};

/***/ },
/* 604 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Validate = __webpack_require__(425).Validate;
	var isValidDate = __webpack_require__(420).isValidDate;
	var Content = __webpack_require__(426).Content;
	var Cookies = __webpack_require__(301);
	var localize = __webpack_require__(423).localize;
	var Client = __webpack_require__(305).Client;
	var Contents = __webpack_require__(485).Contents;
	var url_for = __webpack_require__(306).url_for;
	var elementInnerHtml = __webpack_require__(420).elementInnerHtml;

	var ValidAccountOpening = function () {
	    var redirectCookie = function redirectCookie() {
	        if (Contents.show_login_if_logout(true)) {
	            return;
	        }
	        if (!Client.get_boolean('is_virtual')) {
	            window.location.href = url_for('trading');
	            return;
	        }
	        var client_loginid_array = Client.get_value('loginid_array');
	        for (var i = 0; i < client_loginid_array.length; i++) {
	            if (client_loginid_array[i].real === true) {
	                window.location.href = url_for('trading');
	                return;
	            }
	        }
	    };
	    var handler = function handler(response, message) {
	        if (response.error) {
	            var errorMessage = response.error.message;
	            if (response.error.code === 'show risk disclaimer' && document.getElementById('financial-form')) {
	                $('#financial-form').addClass('hidden');
	                $('#financial-risk').removeClass('hidden');
	                return;
	            }
	            if (document.getElementById('real-form')) {
	                $('#real-form').remove();
	            } else if (document.getElementById('japan-form')) {
	                $('#japan-form').remove();
	            } else if (document.getElementById('financial-form')) {
	                $('#financial-form').remove();
	                $('#financial-risk').remove();
	            }

	            var error = document.getElementsByClassName('notice-msg')[0];
	            elementInnerHtml(error, response.msg_type === 'sanity_check' ? localize('There was some invalid character in an input field.') : errorMessage);
	            error.parentNode.parentNode.parentNode.setAttribute('style', 'display:block');
	        } else if (Cookies.get('residence') === 'jp') {
	            window.location.href = url_for('new_account/knowledge_testws');
	            $('#topbar-msg').children('a').addClass('invisible');
	        } else {
	            // jp account require more steps to have real account
	            Client.process_new_account(Cookies.get('email'), message.client_id, message.oauth_token, false);
	        }
	    };
	    var letters = void 0,
	        numbers = void 0,
	        space = void 0,
	        hyphen = void 0,
	        period = void 0,
	        apost = void 0;

	    var initializeValues = function initializeValues() {
	        letters = Content.localize().textLetters;
	        numbers = Content.localize().textNumbers;
	        space = Content.localize().textSpace;
	        hyphen = Content.localize().textHyphen;
	        period = Content.localize().textPeriod;
	        apost = Content.localize().textApost;
	    };

	    var checkFname = function checkFname(fname, errorFname) {
	        if (fname.value.trim().length < 2) {
	            elementInnerHtml(errorFname, Content.errorMessage('min', '2'));
	            Validate.displayErrorMessage(errorFname);
	            window.accountErrorCounter++;
	        } else if (/[`~!@#$%^&*)(_=+\[}{\]\\\/";:\?><,|\d]+/.test(fname.value)) {
	            initializeValues();
	            elementInnerHtml(errorFname, Content.errorMessage('reg', [letters, space, hyphen, period, apost]));
	            Validate.displayErrorMessage(errorFname);
	            window.accountErrorCounter++;
	        }
	    };
	    var checkLname = function checkLname(lname, errorLname) {
	        if (lname.value.trim().length < 2) {
	            elementInnerHtml(errorLname, Content.errorMessage('min', '2'));
	            Validate.displayErrorMessage(errorLname);
	            window.accountErrorCounter++;
	        } else if (/[`~!@#$%^&*)(_=+\[}{\]\\\/";:\?><,|\d]+/.test(lname.value)) {
	            initializeValues();
	            elementInnerHtml(errorLname, Content.errorMessage('reg', [letters, space, hyphen, period, apost]));
	            Validate.displayErrorMessage(errorLname);
	            window.accountErrorCounter++;
	        }
	    };
	    var checkDate = function checkDate(dobdd, dobmm, dobyy, errorDob) {
	        if (!isValidDate(dobdd.value, dobmm.value, dobyy.value) || dobdd.value === '' || dobmm.value === '' || dobyy.value === '') {
	            elementInnerHtml(errorDob, Content.localize().textErrorBirthdate);
	            Validate.displayErrorMessage(errorDob);
	            window.accountErrorCounter++;
	        }
	    };
	    var checkPostcode = function checkPostcode(postcode, errorPostcode) {
	        if ((postcode.value !== '' || Client.get_value('residence') === 'gb') && !/^[a-zA-Z\d-]+$/.test(postcode.value)) {
	            initializeValues();
	            elementInnerHtml(errorPostcode, Content.errorMessage('reg', [letters, numbers, hyphen]));
	            Validate.displayErrorMessage(errorPostcode);
	            window.accountErrorCounter++;
	        }
	    };
	    var checkTel = function checkTel(tel, errorTel) {
	        if (tel.value.replace(/\+| /g, '').length < 6) {
	            elementInnerHtml(errorTel, Content.errorMessage('min', 6));
	            Validate.displayErrorMessage(errorTel);
	            window.accountErrorCounter++;
	        } else if (!/^\+?[0-9\s]{6,35}$/.test(tel.value)) {
	            initializeValues();
	            elementInnerHtml(errorTel, Content.errorMessage('reg', [numbers, space]));
	            Validate.displayErrorMessage(errorTel);
	            window.accountErrorCounter++;
	        }
	    };
	    var checkAnswer = function checkAnswer(answer, errorAnswer) {
	        if (answer.value.length < 4) {
	            elementInnerHtml(errorAnswer, Content.errorMessage('min', 4));
	            Validate.displayErrorMessage(errorAnswer);
	            window.accountErrorCounter++;
	        } else if (!/^[\w\-\,\.\' ]{4,50}$/.test(answer.value)) {
	            initializeValues();
	            elementInnerHtml(errorAnswer, Content.errorMessage('reg', [letters, numbers, space, hyphen, period, apost]));
	            Validate.displayErrorMessage(errorAnswer);
	            window.accountErrorCounter++;
	        }
	    };
	    var checkCity = function checkCity(city, errorCity) {
	        if (/[`~!@#$%^&*)(_=+\[}{\]\\\/";:\?><,|\d]+/.test(city.value)) {
	            initializeValues();
	            elementInnerHtml(errorCity, Content.errorMessage('reg', [letters, space, hyphen, period, apost]));
	            Validate.displayErrorMessage(errorCity);
	            window.accountErrorCounter++;
	        }
	    };
	    var checkState = function checkState(state, errorState) {
	        if (/[`~!@#$%^&*)(_=+\[}{\]\\\/";:\?><|]+/.test(state.value)) {
	            initializeValues();
	            elementInnerHtml(errorState, Content.errorMessage('reg', [letters, space, hyphen, period, apost]));
	            Validate.displayErrorMessage(errorState);
	            window.accountErrorCounter++;
	        }
	    };
	    return {
	        redirectCookie: redirectCookie,
	        handler: handler,
	        checkFname: checkFname,
	        checkLname: checkLname,
	        checkDate: checkDate,
	        checkPostcode: checkPostcode,
	        checkTel: checkTel,
	        checkAnswer: checkAnswer,
	        checkCity: checkCity,
	        checkState: checkState
	    };
	}();

	module.exports = {
	    ValidAccountOpening: ValidAccountOpening
	};

/***/ },
/* 605 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Content = __webpack_require__(426).Content;
	var ValidAccountOpening = __webpack_require__(604).ValidAccountOpening;
	var Validate = __webpack_require__(425).Validate;
	var FinancialAccOpeningData = __webpack_require__(606).FinancialAccOpeningData;
	var selectorExists = __webpack_require__(420).selectorExists;

	var FinancialAccOpeningUI = function () {
	    'use strict';

	    var checkValidity = function checkValidity() {
	        window.accountErrorCounter = 0;

	        var elementObj = {
	            title: document.getElementById('title'),
	            fname: document.getElementById('fname'),
	            lname: document.getElementById('lname'),
	            dobdd: document.getElementById('dobdd'),
	            dobmm: document.getElementById('dobmm'),
	            dobyy: document.getElementById('dobyy'),
	            residence: document.getElementById('residence-disabled'),
	            address1: document.getElementById('address1'),
	            address2: document.getElementById('address2'),
	            town: document.getElementById('address-town'),
	            state: document.getElementById('address-state'),
	            postcode: document.getElementById('address-postcode'),
	            tel: document.getElementById('tel'),
	            question: document.getElementById('secret-question'),
	            answer: document.getElementById('secret-answer'),
	            tnc: document.getElementById('tnc'),
	            forexExperience: document.getElementById('forex_trading_experience'),
	            forexFrequency: document.getElementById('forex_trading_frequency'),
	            indicesExperience: document.getElementById('indices_trading_experience'),
	            indicesFrequency: document.getElementById('indices_trading_frequency'),
	            commoditiesExperience: document.getElementById('commodities_trading_experience'),
	            commoditiesFrequency: document.getElementById('commodities_trading_frequency'),
	            stocksExperience: document.getElementById('stocks_trading_experience'),
	            stocksFrequency: document.getElementById('stocks_trading_frequency'),
	            binaryExperience: document.getElementById('other_derivatives_trading_experience'),
	            binaryFrequency: document.getElementById('other_derivatives_trading_frequency'),
	            otherExperience: document.getElementById('other_instruments_trading_experience'),
	            otherFrequency: document.getElementById('other_instruments_trading_frequency'),
	            employment: document.getElementById('employment_industry'),
	            education: document.getElementById('education_level'),
	            incomeSource: document.getElementById('income_source'),
	            income: document.getElementById('net_income'),
	            netWorth: document.getElementById('estimated_worth')
	        };

	        var errorObj = {
	            title: document.getElementById('error-title'),
	            fname: document.getElementById('error-fname'),
	            lname: document.getElementById('error-lname'),
	            dobdd: document.getElementById('error-birthdate'),
	            dobmm: document.getElementById('error-birthdate'),
	            dobyy: document.getElementById('error-birthdate'),
	            residence: document.getElementById('error-residence'),
	            address1: document.getElementById('error-address1'),
	            address2: document.getElementById('error-address2'),
	            town: document.getElementById('error-town'),
	            state: document.getElementById('error-state'),
	            postcode: document.getElementById('error-postcode'),
	            tel: document.getElementById('error-tel'),
	            question: document.getElementById('error-question'),
	            answer: document.getElementById('error-answer'),
	            tnc: document.getElementById('error-tnc'),
	            forexExperience: document.getElementById('error-forex_trading_experience'),
	            forexFrequency: document.getElementById('error-forex_trading_frequency'),
	            indicesExperience: document.getElementById('error-indices_trading_experience'),
	            indicesFrequency: document.getElementById('error-indices_trading_frequency'),
	            commoditiesExperience: document.getElementById('error-commodities_trading_experience'),
	            commoditiesFrequency: document.getElementById('error-commodities_trading_frequency'),
	            stocksExperience: document.getElementById('error-stocks_trading_experience'),
	            stocksFrequency: document.getElementById('error-stocks_trading_frequency'),
	            binaryExperience: document.getElementById('error-other_derivatives_trading_experience'),
	            binaryFrequency: document.getElementById('error-other_derivatives_trading_frequency'),
	            otherExperience: document.getElementById('error-other_instruments_trading_experience'),
	            otherFrequency: document.getElementById('error-other_instruments_trading_frequency'),
	            employment: document.getElementById('error-employment_industry'),
	            education: document.getElementById('error-education_level'),
	            incomeSource: document.getElementById('error-income_source'),
	            income: document.getElementById('error-net_income'),
	            netWorth: document.getElementById('error-estimated_worth')
	        };

	        Object.keys(errorObj).forEach(function (key) {
	            if (errorObj[key].offsetParent !== null) {
	                errorObj[key].setAttribute('style', 'display:none');
	            }
	        });

	        ValidAccountOpening.checkFname(elementObj.fname, errorObj.fname);
	        ValidAccountOpening.checkLname(elementObj.lname, errorObj.lname);
	        ValidAccountOpening.checkDate(elementObj.dobdd, elementObj.dobmm, elementObj.dobyy, errorObj.dobdd);
	        ValidAccountOpening.checkPostcode(elementObj.postcode, errorObj.postcode);

	        if (elementObj.residence.value === 'gb' && /^$/.test(elementObj.postcode.value.trim())) {
	            if (selectorExists(errorObj.postcode)) {
	                errorObj.postcode.innerHTML = Content.errorMessage('req');
	                Validate.displayErrorMessage(errorObj.postcode);
	            }
	            window.accountErrorCounter++;
	        }

	        ValidAccountOpening.checkTel(elementObj.tel, errorObj.tel);
	        if (elementObj.answer.offsetParent !== null) {
	            ValidAccountOpening.checkAnswer(elementObj.answer, errorObj.answer);
	        }
	        ValidAccountOpening.checkCity(elementObj.town, errorObj.town);

	        Object.keys(elementObj).forEach(function (key) {
	            if (elementObj[key].offsetParent !== null && key !== 'address2' && key !== 'postcode' && key !== 'state') {
	                if (/^$/.test(elementObj[key].value.trim()) && elementObj[key].type !== 'checkbox') {
	                    errorObj[key].innerHTML = Content.errorMessage('req');
	                    Validate.displayErrorMessage(errorObj[key]);
	                    window.accountErrorCounter++;
	                }
	                if (elementObj[key].type === 'checkbox' && !elementObj[key].checked) {
	                    errorObj[key].innerHTML = Content.errorMessage('req');
	                    Validate.displayErrorMessage(errorObj[key]);
	                    window.accountErrorCounter++;
	                }
	            }
	        });

	        if (window.accountErrorCounter === 0) {
	            FinancialAccOpeningData.getRealAcc(elementObj);
	            Object.keys(errorObj).forEach(function (key) {
	                if (errorObj[key].offsetParent !== null) {
	                    errorObj[key].setAttribute('style', 'display:none');
	                }
	            });
	            return 1;
	        }
	        return 0;
	    };

	    return {
	        checkValidity: checkValidity
	    };
	}();

	module.exports = {
	    FinancialAccOpeningUI: FinancialAccOpeningUI
	};

/***/ },
/* 606 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Cookies = __webpack_require__(301);

	var FinancialAccOpeningData = function () {
	    var getRealAcc = function getRealAcc(elementObj) {
	        var req = {
	            new_account_maltainvest: 1,
	            salutation: elementObj.title.value,
	            first_name: elementObj.fname.value,
	            last_name: elementObj.lname.value,
	            date_of_birth: elementObj.dobyy.value + '-' + elementObj.dobmm.value + '-' + elementObj.dobdd.value,
	            residence: elementObj.residence.value,
	            address_line_1: elementObj.address1.value,
	            address_line_2: elementObj.address2.value,
	            address_city: elementObj.town.value,
	            address_state: elementObj.state.value,
	            address_postcode: elementObj.postcode.value,
	            phone: elementObj.tel.value,
	            forex_trading_experience: elementObj.forexExperience.value,
	            forex_trading_frequency: elementObj.forexFrequency.value,
	            indices_trading_experience: elementObj.indicesExperience.value,
	            indices_trading_frequency: elementObj.indicesFrequency.value,
	            commodities_trading_experience: elementObj.commoditiesExperience.value,
	            commodities_trading_frequency: elementObj.commoditiesFrequency.value,
	            stocks_trading_experience: elementObj.stocksExperience.value,
	            stocks_trading_frequency: elementObj.stocksFrequency.value,
	            other_derivatives_trading_experience: elementObj.binaryExperience.value,
	            other_derivatives_trading_frequency: elementObj.binaryFrequency.value,
	            other_instruments_trading_experience: elementObj.otherExperience.value,
	            other_instruments_trading_frequency: elementObj.otherFrequency.value,
	            employment_industry: elementObj.employment.value,
	            education_level: elementObj.education.value,
	            income_source: elementObj.incomeSource.value,
	            net_income: elementObj.income.value,
	            estimated_worth: elementObj.netWorth.value
	        };

	        if (Cookies.get('affiliate_tracking')) {
	            req.affiliate_token = Cookies.getJSON('affiliate_tracking').t;
	        }

	        if (elementObj.answer.value !== '') {
	            req.secret_question = elementObj.question.value;
	            req.secret_answer = elementObj.answer.value;
	        }

	        if (window.acceptRisk) {
	            req.accept_risk = 1;
	        } else {
	            req.accept_risk = 0;
	        }

	        BinarySocket.send(req);
	    };

	    return {
	        getRealAcc: getRealAcc
	    };
	}();

	module.exports = {
	    FinancialAccOpeningData: FinancialAccOpeningData
	};

/***/ },
/* 607 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var handleResidence = __webpack_require__(421).handleResidence;
	var Content = __webpack_require__(426).Content;
	var ValidAccountOpening = __webpack_require__(604).ValidAccountOpening;
	var detect_hedging = __webpack_require__(420).detect_hedging;
	var Client = __webpack_require__(305).Client;
	var url_for = __webpack_require__(306).url_for;
	var JapanAccOpeningUI = __webpack_require__(608).JapanAccOpeningUI;

	var JapanAccOpening = function () {
	    var init = function init() {
	        Content.populate();
	        ValidAccountOpening.redirectCookie();
	        if (Client.get_value('residence') !== 'jp') {
	            window.location.href = url_for('trading');
	            return;
	        }
	        handleResidence();
	        detect_hedging($('#trading-purpose'), $('.hedging-assets'));
	        $('#japan-form').submit(function (evt) {
	            evt.preventDefault();
	            if (JapanAccOpeningUI.checkValidity()) {
	                BinarySocket.init({
	                    onmessage: function onmessage(msg) {
	                        var response = JSON.parse(msg.data);
	                        if (response) {
	                            var type = response.msg_type;
	                            if (type === 'new_account_japan') {
	                                ValidAccountOpening.handler(response, response.new_account_japan);
	                            } else if (type === 'sanity_check') {
	                                ValidAccountOpening.handler(response);
	                            }
	                        }
	                    }
	                });
	                JapanAccOpeningUI.fireRequest();
	            }
	        });
	    };

	    return {
	        init: init
	    };
	}();

	module.exports = {
	    JapanAccOpening: JapanAccOpening
	};

/***/ },
/* 608 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Content = __webpack_require__(426).Content;
	var ValidAccountOpening = __webpack_require__(604).ValidAccountOpening;
	var Validate = __webpack_require__(425).Validate;
	var JapanAccOpeningData = __webpack_require__(609).JapanAccOpeningData;
	var localize = __webpack_require__(423).localize;

	var JapanAccOpeningUI = function () {
	    'use strict';

	    var elementObj = void 0;

	    var checkValidity = function checkValidity() {
	        window.accountErrorCounter = 0;
	        var letters = Content.localize().textLetters,
	            numbers = Content.localize().textNumbers,
	            space = Content.localize().textSpace,
	            hyphen = Content.localize().textHyphen,
	            period = Content.localize().textPeriod,
	            apost = Content.localize().textApost;

	        elementObj = {
	            gender: document.getElementById('gender'),
	            fname: document.getElementById('fname'),
	            lname: document.getElementById('lname'),
	            dobdd: document.getElementById('dobdd'),
	            dobmm: document.getElementById('dobmm'),
	            dobyy: document.getElementById('dobyy'),
	            occupation: document.getElementById('occupation'),
	            address1: document.getElementById('address1'),
	            address2: document.getElementById('address2'),
	            town: document.getElementById('address-town'),
	            state: document.getElementById('address-state'),
	            postcode: document.getElementById('address-postcode'),
	            tel: document.getElementById('tel'),
	            question: document.getElementById('secret-question'),
	            answer: document.getElementById('secret-answer'),
	            fatca: document.getElementById('fatca'),
	            income: document.getElementById('annual-income'),
	            asset: document.getElementById('financial-asset'),
	            limit: document.getElementById('daily-loss-limit'),
	            equities: document.getElementById('equities'),
	            commodities: document.getElementById('commodities'),
	            deposit: document.getElementById('foreign-currency-deposit'),
	            margin: document.getElementById('margin-fx'),
	            trust: document.getElementById('investment-trust'),
	            bond: document.getElementById('public-and-corporation-bond'),
	            otc: document.getElementById('otc-derivative-trading'),
	            purpose: document.getElementById('trading-purpose'),
	            hedge: document.getElementById('hedge-asset'),
	            amount: document.getElementById('hedge-asset-amount'),
	            electronic: document.getElementById('use-electronic-doc'),
	            policies: document.getElementById('warnings-and-policies'),
	            judgement: document.getElementById('own-judgment'),
	            mechanism: document.getElementById('trading-mechanism'),
	            time: document.getElementById('judgment-time'),
	            total: document.getElementById('total-loss'),
	            sellback: document.getElementById('sellback-loss'),
	            shortsell: document.getElementById('shortsell-loss'),
	            profit: document.getElementById('company-profit'),
	            knowledge: document.getElementById('expert-knowledge'),
	            pep: document.getElementById('not-pep')
	        };

	        var errorObj = {
	            gender: document.getElementById('error-gender'),
	            fname: document.getElementById('error-fname'),
	            lname: document.getElementById('error-lname'),
	            dobdd: document.getElementById('error-birthdate'),
	            dobmm: document.getElementById('error-birthdate'),
	            dobyy: document.getElementById('error-birthdate'),
	            occupation: document.getElementById('error-occupation'),
	            address1: document.getElementById('error-address1'),
	            address2: document.getElementById('error-address2'),
	            town: document.getElementById('error-town'),
	            state: document.getElementById('error-state'),
	            postcode: document.getElementById('error-postcode'),
	            tel: document.getElementById('error-tel'),
	            question: document.getElementById('error-question'),
	            answer: document.getElementById('error-answer'),
	            fatca: document.getElementById('error-fatca'),
	            income: document.getElementById('error-annual-income'),
	            asset: document.getElementById('error-financial-asset'),
	            limit: document.getElementById('error-daily-loss-limit'),
	            equities: document.getElementById('error-equities'),
	            commodities: document.getElementById('error-commodities'),
	            deposit: document.getElementById('error-foreign-currency-deposit'),
	            margin: document.getElementById('error-margin-fx'),
	            trust: document.getElementById('error-investment-trust'),
	            bond: document.getElementById('error-public-and-corporation-bond'),
	            otc: document.getElementById('error-otc-derivative-trading'),
	            purpose: document.getElementById('error-trading-purpose'),
	            hedge: document.getElementById('error-hedge-asset'),
	            amount: document.getElementById('error-hedge-asset-amount'),
	            electronic: document.getElementById('error-use-electronic-doc'),
	            policies: document.getElementById('error-warnings-and-policies'),
	            judgement: document.getElementById('error-own-judgment'),
	            mechanism: document.getElementById('error-trading-mechanism'),
	            time: document.getElementById('error-judgment-time'),
	            total: document.getElementById('error-total-loss'),
	            sellback: document.getElementById('error-sellback-loss'),
	            shortsell: document.getElementById('error-shortsell-loss'),
	            profit: document.getElementById('error-company-profit'),
	            knowledge: document.getElementById('error-expert-knowledge'),
	            pep: document.getElementById('error-not-pep')
	        };
	        Object.keys(errorObj).forEach(function (key) {
	            if (errorObj[key].offsetParent !== null) {
	                errorObj[key].setAttribute('style', 'display:none');
	            }
	        });

	        if (/[`~!@#$%^&*)(_=+\[}{\]\\\/";:?><,|\d]+/.test(elementObj.fname.value.trim())) {
	            errorObj.fname.innerHTML = Content.errorMessage('reg', [letters, space, hyphen, period, apost]);
	            Validate.displayErrorMessage(errorObj.fname);
	            window.accountErrorCounter++;
	        }

	        if (/[`~!@#$%^&*)(_=+\[}{\]\\\/";:?><,|\d]+/.test(elementObj.lname.value.trim())) {
	            errorObj.lname.innerHTML = Content.errorMessage('reg', [letters, space, hyphen, period, apost]);
	            Validate.displayErrorMessage(errorObj.lname);
	            window.accountErrorCounter++;
	        }

	        ValidAccountOpening.checkDate(elementObj.dobdd, elementObj.dobmm, elementObj.dobyy, errorObj.dobdd);

	        if (!/^\d{3}-\d{4}$/.test(elementObj.postcode.value)) {
	            errorObj.postcode.innerHTML = localize('Please follow the pattern 3 numbers, a dash, followed by 4 numbers.');
	            Validate.displayErrorMessage(errorObj.postcode);
	            window.accountErrorCounter++;
	        }

	        if (elementObj.tel.value.replace(/\+| /g, '').length < 6) {
	            errorObj.tel.innerHTML = Content.errorMessage('min', 6);
	            Validate.displayErrorMessage(errorObj.tel);
	            window.accountErrorCounter++;
	        } else if (!/^\+?[0-9\s-]{6,35}$/.test(elementObj.tel.value)) {
	            errorObj.tel.innerHTML = Content.errorMessage('reg', [numbers, space, hyphen]);
	            Validate.displayErrorMessage(errorObj.tel);
	            window.accountErrorCounter++;
	        }

	        if (!/^\d+$/.test(elementObj.limit.value)) {
	            errorObj.limit.innerHTML = Content.errorMessage('reg', [numbers]);
	            Validate.displayErrorMessage(errorObj.limit);
	            window.accountErrorCounter++;
	        }

	        if (elementObj.amount.offsetParent !== null && !/^\d+$/.test(elementObj.amount.value)) {
	            errorObj.amount.innerHTML = Content.errorMessage('reg', [numbers]);
	            Validate.displayErrorMessage(errorObj.amount);
	            window.accountErrorCounter++;
	        }

	        Object.keys(elementObj).forEach(function (key) {
	            if (elementObj[key].offsetParent !== null && key !== 'address2') {
	                if (/^$/.test(elementObj[key].value.trim()) && elementObj[key].type !== 'checkbox') {
	                    errorObj[key].innerHTML = Content.errorMessage('req');
	                    Validate.displayErrorMessage(errorObj[key]);
	                    window.accountErrorCounter++;
	                }
	                if (elementObj[key].type === 'checkbox' && !elementObj[key].checked) {
	                    errorObj[key].innerHTML = Content.errorMessage('req');
	                    Validate.displayErrorMessage(errorObj[key]);
	                    window.accountErrorCounter++;
	                }
	            }
	        });

	        var $submit_msg = $('#submit-message');

	        if (window.accountErrorCounter === 0) {
	            Object.keys(errorObj).forEach(function (key) {
	                if (errorObj[key].offsetParent !== null) {
	                    errorObj[key].setAttribute('style', 'display:none');
	                }
	            });
	            $submit_msg.removeClass('errorfield').text(localize('Processing your request...'));
	            return 1;
	        }
	        // else
	        $submit_msg.addClass('errorfield').text(localize('Please check the above form for pending errors.'));
	        return 0;
	    };

	    var fireRequest = function fireRequest() {
	        JapanAccOpeningData.getJapanAcc(elementObj);
	    };

	    return {
	        checkValidity: checkValidity,
	        fireRequest: fireRequest
	    };
	}();

	module.exports = {
	    JapanAccOpeningUI: JapanAccOpeningUI
	};

/***/ },
/* 609 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Client = __webpack_require__(305).Client;

	var JapanAccOpeningData = function () {
	    var getJapanAcc = function getJapanAcc(elementObj) {
	        var req = {
	            new_account_japan: 1,
	            gender: elementObj.gender.value,
	            first_name: elementObj.fname.value,
	            last_name: elementObj.lname.value,
	            date_of_birth: elementObj.dobyy.value + '-' + elementObj.dobmm.value + '-' + elementObj.dobdd.value,
	            occupation: elementObj.occupation.value,
	            residence: Client.get_value('residence'),
	            address_line_1: elementObj.address1.value,
	            address_line_2: elementObj.address2.value,
	            address_city: elementObj.town.value,
	            address_postcode: elementObj.postcode.value,
	            address_state: elementObj.state.value,
	            phone: elementObj.tel.value,
	            secret_question: elementObj.question.value,
	            secret_answer: elementObj.answer.value,
	            annual_income: elementObj.income.value,
	            financial_asset: elementObj.asset.value,
	            daily_loss_limit: elementObj.limit.value,
	            trading_experience_equities: elementObj.equities.value,
	            trading_experience_commodities: elementObj.commodities.value,
	            trading_experience_foreign_currency_deposit: elementObj.deposit.value,
	            trading_experience_margin_fx: elementObj.margin.value,
	            trading_experience_investment_trust: elementObj.trust.value,
	            trading_experience_public_bond: elementObj.bond.value,
	            trading_experience_option_trading: elementObj.otc.value,
	            trading_purpose: elementObj.purpose.value,
	            agree_use_electronic_doc: 1,
	            agree_warnings_and_policies: 1,
	            confirm_understand_own_judgment: 1,
	            confirm_understand_trading_mechanism: 1,
	            confirm_understand_judgment_time: 1,
	            confirm_understand_total_loss: 1,
	            confirm_understand_sellback_loss: 1,
	            confirm_understand_shortsell_loss: 1,
	            confirm_understand_company_profit: 1,
	            confirm_understand_expert_knowledge: 1,
	            declare_not_fatca: 1
	        };

	        if (elementObj.purpose.value === 'Hedging') {
	            req.hedge_asset = elementObj.hedge.value;
	            req.hedge_asset_amount = elementObj.amount.value;
	        }

	        BinarySocket.send(req);
	    };

	    return {
	        getJapanAcc: getJapanAcc
	    };
	}();

	module.exports = {
	    JapanAccOpeningData: JapanAccOpeningData
	};

/***/ },
/* 610 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var handleResidence = __webpack_require__(421).handleResidence;
	var Content = __webpack_require__(426).Content;
	var ValidAccountOpening = __webpack_require__(604).ValidAccountOpening;
	var Client = __webpack_require__(305).Client;
	var url_for = __webpack_require__(306).url_for;
	var RealAccOpeningUI = __webpack_require__(611).RealAccOpeningUI;

	var RealAccOpening = function () {
	    var init = function init() {
	        Content.populate();
	        ValidAccountOpening.redirectCookie();
	        handleResidence();
	        if (Client.get_value('residence')) {
	            BinarySocket.send({ landing_company: Client.get_value('residence') });
	        }
	        BinarySocket.send({ residence_list: 1 });
	        $('#real-form').submit(function (evt) {
	            evt.preventDefault();
	            if (RealAccOpeningUI.checkValidity()) {
	                BinarySocket.init({
	                    onmessage: function onmessage(msg) {
	                        var response = JSON.parse(msg.data);
	                        if (response) {
	                            if (response.msg_type === 'authorize' && !Client.get_boolean('is_virtual')) {
	                                window.location.href = url_for('trading');
	                            } else if (response.msg_type === 'new_account_real') {
	                                ValidAccountOpening.handler(response, response.new_account_real);
	                            }
	                        }
	                    }
	                });
	            }
	        });
	    };

	    return {
	        init: init
	    };
	}();

	module.exports = {
	    RealAccOpening: RealAccOpening
	};

/***/ },
/* 611 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Content = __webpack_require__(426).Content;
	var ValidAccountOpening = __webpack_require__(604).ValidAccountOpening;
	var Validate = __webpack_require__(425).Validate;
	var RealAccOpeningData = __webpack_require__(612).RealAccOpeningData;

	var RealAccOpeningUI = function () {
	    'use strict';

	    var checkValidity = function checkValidity() {
	        window.accountErrorCounter = 0;

	        var elementObj = {
	            title: document.getElementById('title'),
	            fname: document.getElementById('fname'),
	            lname: document.getElementById('lname'),
	            dobdd: document.getElementById('dobdd'),
	            dobmm: document.getElementById('dobmm'),
	            dobyy: document.getElementById('dobyy'),
	            residence: document.getElementById('residence-disabled'),
	            address1: document.getElementById('address1'),
	            address2: document.getElementById('address2'),
	            town: document.getElementById('address-town'),
	            state: document.getElementById('address-state'),
	            postcode: document.getElementById('address-postcode'),
	            tel: document.getElementById('tel'),
	            question: document.getElementById('secret-question'),
	            answer: document.getElementById('secret-answer'),
	            tnc: document.getElementById('tnc')
	        };

	        var errorObj = {
	            title: document.getElementById('error-title'),
	            fname: document.getElementById('error-fname'),
	            lname: document.getElementById('error-lname'),
	            dobdd: document.getElementById('error-birthdate'),
	            dobmm: document.getElementById('error-birthdate'),
	            dobyy: document.getElementById('error-birthdate'),
	            residence: document.getElementById('error-residence'),
	            address1: document.getElementById('error-address1'),
	            address2: document.getElementById('error-address2'),
	            town: document.getElementById('error-town'),
	            state: document.getElementById('error-state'),
	            postcode: document.getElementById('error-postcode'),
	            tel: document.getElementById('error-tel'),
	            question: document.getElementById('error-question'),
	            answer: document.getElementById('error-answer'),
	            tnc: document.getElementById('error-tnc')
	        };

	        Object.keys(errorObj).forEach(function (key) {
	            if (errorObj[key].offsetParent !== null) {
	                errorObj[key].setAttribute('style', 'display:none');
	            }
	        });

	        ValidAccountOpening.checkFname(elementObj.fname, errorObj.fname);
	        ValidAccountOpening.checkLname(elementObj.lname, errorObj.lname);
	        ValidAccountOpening.checkDate(elementObj.dobdd, elementObj.dobmm, elementObj.dobyy, errorObj.dobdd);
	        ValidAccountOpening.checkPostcode(elementObj.postcode, errorObj.postcode);

	        if (elementObj.residence.value === 'gb' && /^$/.test(elementObj.postcode.value.trim())) {
	            elementObj.postcode.innerHTML = Content.errorMessage('req');
	            Validate.displayErrorMessage(elementObj.postcode);
	            window.accountErrorCounter++;
	        }

	        ValidAccountOpening.checkTel(elementObj.tel, errorObj.tel);
	        ValidAccountOpening.checkAnswer(elementObj.answer, errorObj.answer);
	        ValidAccountOpening.checkCity(elementObj.town, errorObj.town);
	        if (elementObj.state.nodeName === 'INPUT') {
	            ValidAccountOpening.checkState(elementObj.state, errorObj.state);
	        }

	        Object.keys(elementObj).forEach(function (key) {
	            if (elementObj[key].offsetParent !== null && key !== 'address2' && key !== 'postcode' && key !== 'state') {
	                if (/^$/.test(elementObj[key].value.trim()) && elementObj[key].type !== 'checkbox') {
	                    errorObj[key].innerHTML = Content.errorMessage('req');
	                    Validate.displayErrorMessage(errorObj[key]);
	                    window.accountErrorCounter++;
	                }
	                if (elementObj[key].type === 'checkbox' && !elementObj[key].checked) {
	                    errorObj[key].innerHTML = Content.errorMessage('req');
	                    Validate.displayErrorMessage(errorObj[key]);
	                    window.accountErrorCounter++;
	                }
	            }
	        });

	        if (window.accountErrorCounter === 0) {
	            $('#btn_submit').attr('disabled', 'disabled');
	            RealAccOpeningData.getRealAcc(elementObj);
	            Object.keys(errorObj).forEach(function (key) {
	                if (errorObj[key].offsetParent !== null) {
	                    errorObj[key].setAttribute('style', 'display:none');
	                }
	            });
	            return 1;
	        }
	        return 0;
	    };

	    return {
	        checkValidity: checkValidity
	    };
	}();

	module.exports = {
	    RealAccOpeningUI: RealAccOpeningUI
	};

/***/ },
/* 612 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Cookies = __webpack_require__(301);

	var RealAccOpeningData = function () {
	    var getRealAcc = function getRealAcc(elementObj) {
	        var req = {
	            new_account_real: 1,
	            salutation: elementObj.title.value,
	            first_name: elementObj.fname.value,
	            last_name: elementObj.lname.value,
	            date_of_birth: elementObj.dobyy.value + '-' + elementObj.dobmm.value + '-' + elementObj.dobdd.value,
	            residence: elementObj.residence.value,
	            address_line_1: elementObj.address1.value,
	            address_line_2: elementObj.address2.value,
	            address_city: elementObj.town.value,
	            address_state: elementObj.state.value,
	            address_postcode: elementObj.postcode.value,
	            phone: elementObj.tel.value,
	            secret_question: elementObj.question.value,
	            secret_answer: elementObj.answer.value
	        };

	        if (Cookies.get('affiliate_tracking')) {
	            req.affiliate_token = Cookies.getJSON('affiliate_tracking').t;
	        }

	        BinarySocket.send(req);
	    };

	    return {
	        getRealAcc: getRealAcc
	    };
	}();

	module.exports = {
	    RealAccOpeningData: RealAccOpeningData
	};

/***/ },
/* 613 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var template = __webpack_require__(419).template;
	var handleResidence = __webpack_require__(421).handleResidence;
	var Content = __webpack_require__(426).Content;
	var japanese_client = __webpack_require__(307).japanese_client;
	var bind_validation = __webpack_require__(562).bind_validation;
	var VirtualAccOpeningData = __webpack_require__(614).VirtualAccOpeningData;
	var localize = __webpack_require__(423).localize;
	var Client = __webpack_require__(305).Client;
	var url_for = __webpack_require__(306).url_for;

	var VirtualAccOpening = function () {
	    var onSuccess = function onSuccess(res) {
	        var new_account = res.new_account_virtual;
	        Client.set_cookie('residence', res.echo_req.residence);
	        Client.process_new_account(new_account.email, new_account.client_id, new_account.oauth_token, true);
	    };

	    var onInvalidToken = function onInvalidToken() {
	        $('.notice-message').remove();
	        var $form = $('#virtual-form');
	        $form.html($('<p/>', {
	            html: template(Content.localize().textClickHereToRestart, [url_for('')])
	        }));
	    };

	    var onDuplicateEmail = function onDuplicateEmail() {
	        $('.notice-message').remove();
	        var $form = $('#virtual-form');
	        $form.html($('<p/>', {
	            html: template(Content.localize().textDuplicatedEmail, [url_for('user/lost_passwordws')])
	        }));
	    };

	    var onPasswordError = function onPasswordError() {
	        var $error = $('#error-account-opening');
	        $error.css({ display: 'block' }).text(localize('Password is not strong enough.'));
	    };

	    var configureSocket = function configureSocket() {
	        BinarySocket.init({
	            onmessage: VirtualAccOpeningData.handler({
	                success: onSuccess,
	                invalidToken: onInvalidToken,
	                duplicateEmail: onDuplicateEmail,
	                passwordError: onPasswordError
	            })
	        });
	    };

	    var init = function init() {
	        Content.populate();
	        handleResidence();
	        BinarySocket.send({ residence_list: 1 });
	        BinarySocket.send({ website_status: 1 });

	        var form = $('#virtual-form')[0];
	        if (!form) return;

	        bind_validation.simple(form, {
	            schema: VirtualAccOpeningData.getSchema(),
	            submit: function submit(ev, info) {
	                ev.preventDefault();
	                if (info.errors.length > 0) {
	                    return;
	                }
	                configureSocket();
	                var data = info.values;
	                VirtualAccOpeningData.newAccount({
	                    password: data.password,
	                    residence: japanese_client() ? 'jp' : data.residence,
	                    verification_code: data['verification-code']
	                });
	            }
	        });
	    };

	    var onLoad = function onLoad() {
	        if (Client.get_boolean('is_logged_in')) {
	            window.location.href = url_for('home');
	            return;
	        }
	        init();
	    };

	    return {
	        onLoad: onLoad
	    };
	}();

	module.exports = {
	    VirtualAccOpening: VirtualAccOpening
	};

/***/ },
/* 614 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Content = __webpack_require__(426).Content;
	var TrafficSource = __webpack_require__(488).TrafficSource;
	var ValidateV2 = __webpack_require__(560).ValidateV2;
	var Cookies = __webpack_require__(301);
	var dv = __webpack_require__(561);

	var VirtualAccOpeningData = function () {
	    'use strict';

	    var newAccount = function newAccount(config) {
	        var req = {
	            new_account_virtual: 1,
	            client_password: config.password,
	            residence: config.residence,
	            verification_code: config.verification_code
	        };

	        // Add TrafficSource parameters
	        var utm_data = TrafficSource.getData();
	        req.utm_source = TrafficSource.getSource(utm_data);
	        if (utm_data.utm_medium) req.utm_medium = utm_data.utm_medium;
	        if (utm_data.utm_campaign) req.utm_campaign = utm_data.utm_campaign;

	        if (Cookies.get('affiliate_tracking')) {
	            req.affiliate_token = Cookies.getJSON('affiliate_tracking').t;
	        }

	        if ($('#email_consent:checked').length > 0) {
	            req.email_consent = 1;
	        } else {
	            req.email_consent = 0;
	        }

	        BinarySocket.send(req);
	    };

	    var getSchema = function getSchema() {
	        var V2 = ValidateV2;
	        var err = Content.localize().textPasswordsNotMatching;
	        var matches = function matches(value, data) {
	            return value === data.password;
	        };
	        return {
	            residence: [V2.required],
	            password: [V2.password],
	            'verification-code': [V2.required, V2.token],
	            'r-password': [dv.check(matches, err)]
	        };
	    };

	    var handler = function handler(config) {
	        return function (msg) {
	            var response = JSON.parse(msg.data);
	            if (!response) return false;

	            var type = response.msg_type;
	            var error = response.error;

	            if (type === 'new_account_virtual' && !error) return config.success(response);
	            if (type !== 'error' && !error) return true;

	            switch (error.code) {
	                case 'InvalidToken':
	                    return config.invalidToken();
	                case 'duplicate email':
	                    return config.duplicateEmail();
	                case 'PasswordError':
	                    return config.passwordError();
	                default:
	                    return false;
	            }
	        };
	    };

	    return {
	        newAccount: newAccount,
	        getSchema: getSchema,
	        handler: handler
	    };
	}();

	module.exports = {
	    VirtualAccOpeningData: VirtualAccOpeningData
	};

/***/ },
/* 615 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var ResetPassword = __webpack_require__(616).ResetPassword;
	var Client = __webpack_require__(305).Client;

	var ResetPasswordWS = function () {
	    var init = function init() {
	        if (Client.redirect_if_login()) {
	            return;
	        }
	        BinarySocket.init({
	            onmessage: ResetPassword.resetPasswordWSHandler
	        });
	        ResetPassword.init();
	    };

	    return {
	        init: init
	    };
	}();

	module.exports = {
	    ResetPasswordWS: ResetPasswordWS
	};

/***/ },
/* 616 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Login = __webpack_require__(302).Login;
	var isValidDate = __webpack_require__(420).isValidDate;
	var Content = __webpack_require__(426).Content;
	var generateBirthDate = __webpack_require__(422).generateBirthDate;
	var japanese_client = __webpack_require__(307).japanese_client;
	var passwordValid = __webpack_require__(425).passwordValid;
	var showPasswordError = __webpack_require__(425).showPasswordError;
	var localize = __webpack_require__(423).localize;

	var ResetPassword = function () {
	    'use strict';

	    var hiddenClass = 'invisible';
	    var resetErrorTemplate = '[_1]' + ' Please click the link below to restart the password recovery process. ' + 'If you require further assistance, please contact our Customer Support.';
	    var dobdd = void 0,
	        dobmm = void 0,
	        dobyy = void 0;

	    var submitResetPassword = function submitResetPassword() {
	        var token = $('#verification-code').val();
	        var pw1 = $('#reset-password1').val();
	        var pw2 = $('#reset-password2').val();

	        if (token.length < 48) {
	            $('#verification-error').removeClass(hiddenClass).text(localize('Verification code format incorrect.'));
	            return;
	        }
	        var $pw_err1 = $('#password-error1');
	        if (!pw1) {
	            // password not entered
	            $pw_err1.empty().append('<p></p>', { class: 'errorfield' }).text(Content.localize().textMessageRequired).removeClass(hiddenClass);
	            return;
	        } else if (!passwordValid(pw1)) {
	            // password failed validation
	            var errMsgs = showPasswordError(pw1);
	            $pw_err1.empty();
	            errMsgs.forEach(function (msg) {
	                var $errP = $('<p></p>', { class: 'errorfield' }).text(msg);
	                $pw_err1.append($errP);
	            });
	            $pw_err1.removeClass(hiddenClass);
	            return;
	        }

	        if (pw1 !== pw2) {
	            if (!pw2) {
	                $('#password-error2').removeClass(hiddenClass).text(Content.localize().textMessageRequired);
	            } else {
	                $('#password-error2').removeClass(hiddenClass).text(Content.localize().textPasswordsNotMatching);
	            }

	            return;
	        }

	        var dobEntered = dobdd && dobmm && dobyy;
	        if (dobEntered) {
	            if (!isValidDate(dobdd, dobmm, dobyy)) {
	                $('#dob-error').removeClass(hiddenClass).text(localize('Invalid format for date of birth.'));
	                return;
	            }

	            BinarySocket.send({
	                reset_password: 1,
	                verification_code: token,
	                new_password: pw1,
	                date_of_birth: [dobyy, dobmm, dobdd].join('-')
	            });
	            $('#reset').prop('disabled', true);
	        } else {
	            BinarySocket.send({
	                reset_password: 1,
	                verification_code: token,
	                new_password: pw1
	            });
	            $('#reset').prop('disabled', true);
	        }
	    };

	    var hideError = function hideError() {
	        $('.errorfield').addClass(hiddenClass);
	    };

	    var resetPasswordWSHandler = function resetPasswordWSHandler(msg) {
	        var response = JSON.parse(msg.data);
	        var type = response.msg_type;

	        if (type === 'reset_password') {
	            $('#reset').prop('disabled', true);
	            $('#reset-form').addClass(hiddenClass);

	            if (response.error) {
	                $('p.notice-msg').addClass(hiddenClass);
	                $('#reset-error').removeClass(hiddenClass);

	                // special handling as backend return inconsistent format
	                var errMsg = localize(resetErrorTemplate, [response.error.code === 'InputValidationFailed' ? localize('Token has expired.') : localize(response.error.message)]);

	                $('#reset-error-msg').text(errMsg);
	            } else {
	                $('p.notice-msg').text(localize('Your password has been successfully reset. ' + 'Please log into your account using your new password.'));
	                window.setTimeout(function () {
	                    Login.redirect_to_login();
	                }, 5000);
	            }
	        }
	    };

	    var haveRealAccountHandler = function haveRealAccountHandler() {
	        var isChecked = $('#have-real-account').is(':checked');

	        dobdd = undefined;
	        dobmm = undefined;
	        dobyy = undefined;

	        var $dobyy = $('#dobyy'),
	            $dobmm = $('#dobmm'),
	            $dobdd = $('#dobdd');

	        if (japanese_client()) {
	            $dobyy.val($dobyy.find('option:first').val());
	            $dobmm.val($dobmm.find('option:first').val());
	            $dobdd.val($dobdd.find('option:first').val());
	        } else {
	            $dobdd.val('');
	            $dobmm.val('');
	            $dobyy.val('');
	        }

	        if (isChecked) {
	            $('#dob-field').removeClass(hiddenClass);
	        } else {
	            $('#dob-field').addClass(hiddenClass);
	        }
	    };

	    var onDOBChange = function onDOBChange() {
	        dobdd = $('#dobdd').val();
	        dobmm = $('#dobmm').val();
	        dobyy = $('#dobyy').val();
	    };

	    var onEnterKey = function onEnterKey(e) {
	        if (e.which === 13) {
	            submitResetPassword();
	        }
	    };

	    var init = function init() {
	        $('#reset_passwordws').removeClass('invisible');
	        Content.populate();
	        if (japanese_client()) {
	            $('#dobmm').insertAfter('#dobyy');
	            $('#dobdd').insertAfter('#dobmm');
	        }
	        generateBirthDate();

	        $('input').keypress(function (e) {
	            hideError();
	            onEnterKey(e);
	        });

	        $('#reset:enabled').click(function () {
	            submitResetPassword();
	        });

	        $('#have-real-account').click(function () {
	            haveRealAccountHandler();
	        });

	        $('select').change(function () {
	            hideError();
	            onDOBChange();
	        });
	    };

	    return {
	        resetPasswordWSHandler: resetPasswordWSHandler,
	        init: init
	    };
	}();

	module.exports = {
	    ResetPassword: ResetPassword
	};

/***/ },
/* 617 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var toJapanTimeIfNeeded = __webpack_require__(439).Clock.toJapanTimeIfNeeded;
	var KnowledgeTestUI = __webpack_require__(618).KnowledgeTestUI;
	var KnowledgeTestData = __webpack_require__(619).KnowledgeTestData;
	var localize = __webpack_require__(423).localize;
	var url_for = __webpack_require__(306).url_for;
	var Client = __webpack_require__(305).Client;
	var Header = __webpack_require__(429).Header;

	var KnowledgeTest = function () {
	    'use strict';

	    var hiddenClass = 'invisible';

	    var submitted = {};
	    var submitCompleted = false;
	    var randomPicks = [];
	    var randomPicksObj = {};
	    var resultScore = 0;

	    var passMsg = '{JAPAN ONLY}Congratulations, you have pass the test, our Customer Support will contact you shortly.';
	    var failMsg = '{JAPAN ONLY}Sorry, you have failed the test, please try again after 24 hours.';

	    var questionAnswerHandler = function questionAnswerHandler(ev) {
	        var selected = ev.target.value;
	        var qid = ev.target.name;
	        submitted[qid] = selected === '1';
	    };

	    var submitHandler = function submitHandler() {
	        if (submitCompleted) {
	            return;
	        }
	        var answeredQid = Object.keys(submitted).map(function (k) {
	            return +k;
	        });
	        if (answeredQid.length !== 20) {
	            $('#knowledge-test-instructions').addClass('invisible');
	            $('#knowledge-test-msg').addClass('notice-msg').text(localize('You need to finish all 20 questions.'));

	            var unAnswered = randomPicks.reduce(function (a, b) {
	                return a.concat(b);
	            }).find(function (q) {
	                return answeredQid.indexOf(q.id) === -1;
	            }).id;

	            $.scrollTo('a[name="' + unAnswered + '"]', 500, { offset: -10 });
	            return;
	        }

	        // compute score
	        var questions = [];
	        Object.keys(submitted).forEach(function (k) {
	            var questionInfo = randomPicksObj[k],
	                score = submitted[k] === questionInfo.correct_answer ? 1 : 0;
	            resultScore += score;
	            questionInfo.answer = submitted[k];
	            questions.push({
	                category: questionInfo.category,
	                id: questionInfo.id,
	                question: questionInfo.question,
	                answer: questionInfo.answer ? 1 : 0,
	                pass: score
	            });
	        });
	        KnowledgeTestData.sendResult(questions, resultScore);
	        submitCompleted = true;
	    };

	    var showQuestionsTable = function showQuestionsTable() {
	        for (var j = 0; j < randomPicks.length; j++) {
	            var table = KnowledgeTestUI.createQuestionTable(randomPicks[j]);
	            $('#section' + (j + 1) + '-question').append(table);
	        }

	        var $questions = $('#knowledge-test-questions');
	        $questions.find('input[type=radio]').click(questionAnswerHandler);
	        $('#knowledge-test-submit').click(submitHandler);
	        $questions.removeClass(hiddenClass);
	        $('#knowledge-test-msg').text(localize('{JAPAN ONLY}Please complete the following questions.'));
	        $('#knowledge-test-instructions').removeClass('invisible');
	    };

	    var showResult = function showResult(score, time) {
	        $('#knowledge-test-instructions').addClass('invisible');
	        $('#knowledge-test-header').text(localize('{JAPAN ONLY}Knowledge Test Result'));
	        var msg = void 0;
	        if (score >= 14) {
	            msg = passMsg;
	            Client.set_value('jp_status', 'jp_activation_pending');
	            // send some dummy string just to go through the function
	            Header.topbar_message_visibility('show_jp_message');
	        } else {
	            msg = failMsg;
	        }
	        $('#knowledge-test-msg').text(localize(msg));

	        var $resultTable = KnowledgeTestUI.createResultUI(score, time);

	        $('#knowledge-test-container').append($resultTable);
	        $('#knowledge-test-questions').addClass(hiddenClass);
	    };

	    var showMsgOnly = function showMsgOnly(msg) {
	        $('#knowledge-test-questions').addClass(hiddenClass);
	        $('#knowledge-test-msg').text(localize(msg));
	        $('#knowledge-test-instructions').addClass('invisible');
	    };

	    var showDisallowedMsg = function showDisallowedMsg(jpStatus) {
	        var msgTemplate = '{JAPAN ONLY}Dear customer, you are not allowed to take knowledge test until [_1]. Last test taken at [_2].';

	        var msg = localize(msgTemplate, [toJapanTimeIfNeeded(jpStatus.next_test_epoch), toJapanTimeIfNeeded(jpStatus.last_test_epoch)]);

	        showMsgOnly(msg);
	    };

	    var showCompletedMsg = function showCompletedMsg() {
	        var msg = "{JAPAN ONLY}Dear customer, you've already completed the knowledge test, please proceed to next step.";
	        showMsgOnly(msg);
	    };

	    var populateQuestions = function populateQuestions() {
	        randomPicks = KnowledgeTestData.randomPick20();
	        randomPicks.reduce(function (a, b) {
	            return a.concat(b);
	        }).forEach(function (question) {
	            randomPicksObj[question.id] = question;
	        });

	        showQuestionsTable();
	    };

	    var init = function init() {
	        BinarySocket.init({
	            onmessage: function onmessage(msg) {
	                var response = JSON.parse(msg.data);
	                var type = response.msg_type;
	                var passthrough = response.echo_req.passthrough && response.echo_req.passthrough.key;

	                if (type === 'get_settings' && passthrough === 'knowledgetest') {
	                    var jpStatus = response.get_settings.jp_account_status;

	                    if (!jpStatus) {
	                        window.location.href = url_for('/');
	                        return;
	                    }

	                    switch (jpStatus.status) {
	                        case 'jp_knowledge_test_pending':
	                            populateQuestions();
	                            break;
	                        case 'jp_knowledge_test_fail':
	                            {
	                                if (Date.now() >= jpStatus.next_test_epoch * 1000) {
	                                    // show Knowledge Test cannot be taken
	                                    populateQuestions();
	                                } else {
	                                    showDisallowedMsg(jpStatus);
	                                }
	                                break;
	                            }
	                        case 'jp_activation_pending':
	                            showCompletedMsg();
	                            break;
	                        default:
	                            {
	                                console.warn('Unexpected jp status');
	                                window.location.href = url_for('/');
	                            }
	                    }
	                } else if (type === 'jp_knowledge_test') {
	                    if (!response.error) {
	                        showResult(resultScore, response.jp_knowledge_test.test_taken_epoch * 1000);
	                        $('html, body').animate({ scrollTop: 0 }, 'slow');

	                        $('#knowledgetest-link').addClass(hiddenClass); // hide it anyway
	                    } else if (response.error.code === 'TestUnavailableNow') {
	                        showMsgOnly('{JAPAN ONLY}The test is unavailable now, test can only be taken again on next business day with respect of most recent test.');
	                    } else {
	                        $('#form-msg').html(response.error.message).removeClass(hiddenClass);
	                        submitCompleted = false;
	                    }
	                }
	            }
	        });

	        BinarySocket.send({ get_settings: 1, passthrough: { key: 'knowledgetest' } });
	    };

	    return {
	        init: init
	    };
	}();

	module.exports = {
	    KnowledgeTest: KnowledgeTest
	};

/***/ },
/* 618 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var moment = __webpack_require__(308);
	var localize = __webpack_require__(423).localize;

	var KnowledgeTestUI = function () {
	    'use strict';

	    var createTrueFalseBox = function createTrueFalseBox(question, showAnswer) {
	        var qid = question.id;
	        var trueId = qid + 'true';
	        var falseId = qid + 'false';

	        var $trueButton = $('<input />', {
	            type: 'radio',
	            name: qid,
	            id: trueId,
	            value: '1'
	        });
	        // var $trueLabel = $('<label></label>', {class: 'img-holder true', for: trueId, value: '1'});
	        var $trueTd = $('<td></td>').append($trueButton);

	        var $falseButton = $('<input />', {
	            type: 'radio',
	            name: qid,
	            id: falseId,
	            value: '0'
	        });
	        // var $falseLabel = $('<label></label>', {class: 'img-holder false', for: falseId, value: '0'});
	        var $falseTd = $('<td></td>').append($falseButton);

	        if (showAnswer) {
	            if (question.correct_answer) {
	                $trueButton.prop('checked', true);
	            } else {
	                $falseButton.prop('checked', true);
	            }
	            $trueButton.attr('disabled', true);
	            $falseButton.attr('disabled', true);
	        }

	        return [$trueTd, $falseTd];
	    };

	    var createQuestionRow = function createQuestionRow(questionNo, question, showAnswer) {
	        var $questionRow = $('<tr></tr>', { id: questionNo, class: 'question' });
	        var $questionData = $('<td></td>').text(localize(question.question_localized));
	        var $questionLink = $('<a></a>', { name: question.id });
	        $questionData.prepend($questionLink);

	        var trueFalse = createTrueFalseBox(question, showAnswer);

	        return $questionRow.append($questionData).append(trueFalse[0]).append(trueFalse[1]);
	    };

	    var createQuestionTable = function createQuestionTable(questions, showAnswer) {
	        var $header = $('<tr></tr>');
	        var $questionColHeader = $('<th></th>', { id: 'question-header', class: 'question-col' }).text(localize('Questions'));

	        var $trueColHeader = $('<th></th>', { id: 'true-header', class: 'true-col' }).text(localize('True'));

	        var $falseColHeader = $('<th></th>', { id: 'fasle-header', class: 'false-col' }).text(localize('False'));

	        $header.append($questionColHeader).append($trueColHeader).append($falseColHeader);

	        var $tableContainer = $('<table></table>', { id: 'knowledge-test' });

	        $tableContainer.append($header);
	        var qr = void 0;
	        questions.forEach(function (question, questionNo) {
	            qr = createQuestionRow(questionNo, question, showAnswer);
	            $tableContainer.append(qr);
	        });

	        return $tableContainer;
	    };

	    // function createResultUI(score, time) {
	    var createResultUI = function createResultUI(score) {
	        var $resultTable = $('<table></table>', { class: 'kv-pairs' });
	        var $scoreRow = $('<tr></tr>').append($('<td>' + localize('Score') + '</td>')).append($('<td>' + score + '</td>'));

	        var date = moment();
	        var submitDate = moment.utc(date).format('YYYY') + localize('Year') + moment.utc(date).format('MM') + localize('Month') + moment.utc(date).format('DD') + localize('Day') + ' (' + localize('Weekday') + ')';

	        var $dateRow = $('<tr></tr>').append($('<td>' + localize('Date') + '</td>')).append($('<td>' + submitDate + '</td>'));

	        $resultTable.append($scoreRow).append($dateRow);

	        return $resultTable;
	    };

	    var createAlreadyCompleteDiv = function createAlreadyCompleteDiv() {
	        var msg = "{JAPAN ONLY}Dear customer, you've already completed the knowledge test, please proceed to next step.";
	        return $('<div></div>').text(localize(msg));
	    };

	    return {
	        createTrueFalseBox: createTrueFalseBox,
	        createQuestionRow: createQuestionRow,
	        createQuestionTable: createQuestionTable,
	        createResultUI: createResultUI,
	        createAlreadyCompleteDiv: createAlreadyCompleteDiv
	    };
	}();

	module.exports = {
	    KnowledgeTestUI: KnowledgeTestUI
	};

/***/ },
/* 619 */
/***/ function(module, exports) {

	'use strict';

	var KnowledgeTestData = function () {
	    'use strict';

	    var answers = {
	        /* eslint-disable */
	        1: false, 2: true, 3: true, 4: true, 5: true, 6: true, 7: true, 8: true, 9: false, 10: true,
	        11: false, 12: true, 13: false, 14: true, 15: true, 16: true, 17: false, 18: true, 19: true, 20: true,
	        21: true, 22: false, 23: true, 24: false, 25: false, 26: true, 27: true, 28: true, 29: true, 30: true,
	        31: false, 32: true, 33: false, 34: true, 35: false, 36: true, 37: true, 38: false, 39: true, 40: false,
	        41: false, 42: true, 43: true, 44: true, 45: true, 46: true, 47: true, 48: false, 49: false, 50: true,
	        51: false, 52: true, 53: true, 54: false, 55: true, 56: true, 57: true, 58: true, 59: true, 60: true,
	        61: true, 62: false, 63: true, 64: true, 65: true, 66: false, 67: true, 68: true, 69: true, 70: true,
	        71: true, 72: true, 73: true, 74: false, 75: false, 76: true, 77: false, 78: true, 79: true, 80: true,
	        81: true, 82: true, 83: true, 84: true, 85: true, 86: true, 87: true, 88: false, 89: true, 90: true,
	        91: true, 92: true, 93: true, 94: true, 95: false, 96: true, 97: true, 98: false, 99: true, 100: true
	    };

	    var randomPick4 = function randomPick4(questionsObj) {
	        var availables = Object.keys(questionsObj);

	        var randomPicks = [];
	        for (var i = 0; i < 4; i++) {
	            var randomIndex = Math.floor(Math.random() * 100) % availables.length;
	            var randomQid = availables[randomIndex];
	            var randomPick = questionsObj[randomQid];
	            randomPicks.push(randomPick);
	            availables.splice(randomIndex, 1);
	        }

	        return randomPicks;
	    };

	    var randomPick20 = function randomPick20() {
	        var questions = {};
	        var container = '#data-questions';
	        // retrieve questions text from html
	        $(container + ' > div').each(function () {
	            // sections
	            var category = +$(this).attr('data-section-id');
	            questions['section' + category] = [];

	            $(this).find('> div').each(function () {
	                // questions
	                var question_id = +$(this).attr('data-question-id');
	                questions['section' + category].push({
	                    category: category,
	                    id: question_id,
	                    question: $(this).attr('data-question-en'),
	                    question_localized: $(this).text(),
	                    correct_answer: answers[question_id]
	                });
	            });
	        });

	        var picked_questions = [];
	        Object.keys(questions).forEach(function (section) {
	            picked_questions.push(randomPick4(questions[section]));
	        });
	        return picked_questions;
	    };

	    var sendResult = function sendResult(questions, resultScore) {
	        BinarySocket.send({
	            jp_knowledge_test: 1,
	            score: resultScore,
	            status: resultScore >= 14 ? 'pass' : 'fail',
	            questions: questions
	        });
	    };

	    return {
	        randomPick20: randomPick20,
	        sendResult: sendResult
	    };
	}();

	module.exports = {
	    KnowledgeTestData: KnowledgeTestData
	};

/***/ }
/******/ ]);
//# sourceMappingURL=binary.min.js.map